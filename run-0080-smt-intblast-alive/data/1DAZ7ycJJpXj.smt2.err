ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:23:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31167 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1289
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1DAZ7ycJJpXj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4022861
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3212    406  1294/1164/108      96/6     4   17   19.16)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2 := 72057594037927935&14
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2 := 2&14
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 2 := 2 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2 := 2&14
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 2 := 2 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2 := 2&14
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 2 := 2 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2 := 2&14
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 2 := 2 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 14 := 72057594037927935&14
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927935 := 72057594037927935 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 14 := 72057594037927935&14
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927935 := 72057594037927935 << 4
(smt.stats    1    202   5787    975  2061/1865/117     189/13     7   21   19.36)
(smt.stats    2    313   8626   2001  2136/1907/119     301/18     8   26   19.45)
(smt.stats    3    414  10436   3329  2206/2006/125     418/29     9   27   19.55)
(smt.stats    4    525  12161   4210  2647/2389/133     514/93    11   39   19.74)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&14
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 13 := 0 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&14
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 0 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&14
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 0 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&14
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 0 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&14
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 0 << 4
(smt.stats    5    647  15899   5743  2720/2460/141     637/101    14   42   19.83)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  19254   7393  2739/2470/141     737/101    14   42   19.83)
(smt.stats    7    859  22951  12031  2745/2484/142     847/106    15   44   19.93)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 4803839602528532&1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4803839602528532&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 76861433640456468 := 4803839602528530 << 1
(smt.stats    8    981  24728  14688  2780/2520/156     956/115    16   58   20.02)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 121004 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 121000 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 16 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 32 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 64 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 512 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 512 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1024 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2048 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4096 := 19215358410114129&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 8192 := 19215358410121216&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 16384 := 19215358410121216&121004
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 91272952448049152 := 19215358410114117 << 17
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 16384 := 65318964196278272&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 32768 := 65318964196278272&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 65536 := 65318964196278272&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 65536 := 65318964196278272&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167351&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167351&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167345&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167345&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167233&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167233&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167233&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167233&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 130 := 20266198323167360&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 20266198323167360&121004
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 92323792361095296 := 19281035904679943 << 17
(smt.stats    9   1115  27236  17825  2910/2620/252    1075/121    19   92   20.51)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 128 := 72057594037796864&121004
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 69823113646571520&121004
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 67571586596601791 := 22378343112392450 << 17
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 69823113646440448&121004
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 67571313832882191 := 22237605624037121 << 17
(smt.stats   10   1216  28790  19256  3157/2662/277    1184/122    19   92   20.60)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 69823113648406528&242009
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 141880707686334464 := 19563593345285904 << 18
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 69823113648406528&242009
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 141880707686334464 := 19422855856930576 << 18
(smt.stats   11   1327  31283  21846  3196/2919/282    1296/141    20  100   20.60)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 69823113648406528&968037
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 141880707686334464 := 19282118368575248 << 20
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 69823113648406528&968037
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 141880707686334464 := 19563593345285904 << 20
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 69823113648406528&968037
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 141880707686334464 := 19563593345285904 << 20
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  34949  26571  3262/2991/296    1424/151    23  111   20.70)
(smt.stats   13   1583  42443  39006  3278/3004/305    1589/151    23  111   20.79)
(smt.stats   14   1730  46051  46960  3281/3012/306    1723/208    25  136   20.79)
ramon: poll                 wall=1.000s usage=0.998s mem=22116KiB load=1.00 rootload=0.98
(smt.stats   15   1831  47601  49268  3358/3014/306    1826/212    25  136   20.99)
(smt.stats   16   1942  48509  51193  3669/3192/306    1947/215    25  136   20.99)
(smt.stats   17   2064  51415  54755  3709/3406/306    2120/216    25  136   21.14)
(smt.stats   18   2198  55102  61870  3779/3507/309    2242/258    27  142   21.14)
(smt.stats   19   2345  57380  65302  3816/3520/309    2389/259    27  142   21.14)
(smt.stats   20   2506  59378  70274  3823/3554/310    2639/273    28  146   21.14)
(smt.stats   21   2607  61937  75002  3845/3557/310    2740/273    28  146   21.14)
(smt.stats   22   2718  65004  79548  3918/3580/311    2884/286    29  149   21.14)
ramon: poll                 wall=2.000s usage=1.996s mem=22624KiB load=1.00 rootload=1.00
(smt.stats   23   2840  69016  85544  3999/3655/311    3008/288    29  149   21.23)
(smt.stats   24   2974  73414  92614  4021/3750/312    3161/329    30  154   21.23)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646833681&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 512 := 69823113646833681&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646833937&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646834705&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 512 := 69823113646834705&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646834705&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646834705&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646834705&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646834961&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646834961&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646834961&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646834961&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646835985&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646835985&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646838033&33261515572100480
(smt.stats   25   3121  80255 101400  4098/3759/312    3340/331    30  154   21.33)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646833937&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113646833937&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 257 := 69823113646834449&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647358737&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647360785&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647360785&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647360785&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647360785&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647362833&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647366929&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647391505&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647360785&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647360785&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647360785&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647362833&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647375121&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647375121&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647375121&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647375121&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113647375121&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113648423697&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113648456465&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113648456465&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113648472849&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113648440081&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113648423697&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113648407313&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 69823113648407313&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 67571586598765329&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 67571586598765329&33261515572100480
(smt.stats   26   3282  82479 107062  4551/3840/352    3750/352    31  162   22.06)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 67571586596602641&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 67571586596602641&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 67571586596602641&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 67571586596602641&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 256 := 67571586596602641&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 67571586596602641&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 67571586596602641&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 67571586596602641&33261515572100480
(smt.stats   27   3459  88188 121063  4658/4389/463    4109/426    33  191   22.25)
(smt.stats   28   3560  90992 127555  4666/4397/465    4280/453    34  198   22.25)
(smt.stats   29   3671  93144 132246  4701/4407/466    4390/453    34  198   22.25)
(smt.stats   30   3793  97540 143276  4849/4467/467    4517/459    35  200   22.45)
(smt.stats   31   3927 100847 154227  4914/4645/470    4730/493    37  209   22.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 106212 166901  5026/4735/471    5166/754    38  216   22.85)
(smt.stats   33   4235 108531 175204  5040/4746/472    5380/756    38  216   22.94)
(smt.stats   34   4412 115775 196293  5115/4807/477    6162/777    40  240   23.14)
ramon: poll                 wall=3.000s usage=2.996s mem=24672KiB load=1.00 rootload=0.99
(smt.stats   35   4606 123653 213616  5120/4811/478    6412/929    41  244   23.14)
(smt.stats   36   4707 129523 229116  5196/4815/478    6567/933    41  244   23.23)
(smt.stats   37   4818 132750 243900  5224/4916/478    6687/933    41  244   23.33)
(smt.stats   38   4940 138631 261267  5234/4926/479    7102/1158    42  249   23.33)
(smt.delete-inactive-clauses  :num-deleted-clauses 38)
(smt.stats   39   5074 149238 277922  5236/4928/479    7284/1158    42  249   23.33)
(smt.stats   40   5221 158535 305507  5245/4937/483    7477/1219    43  254   23.42)
(smt.stats   41   5382 163709 331185  5260/4952/483    7644/1219    43  254   23.52)
(smt.stats   42   5559 170406 349252  5288/4976/483    7804/1247    44  276   23.52)
(smt.stats   43   5753 184222 390084  5293/4981/483    8013/1247    44  276   23.52)
(smt.stats   44   5966 194025 424111  5308/4996/485    8231/1251    45  284   23.81)
ramon: poll                 wall=4.000s usage=3.996s mem=25244KiB load=1.00 rootload=1.00
(smt.stats   45   6067 200635 450472  5310/4998/485    8366/1251    45  284   23.81)
(smt.stats   46   6178 208466 475113  5313/5001/485    8474/1285    46  292   23.81)
(smt.stats   47   6300 215828 495891  5336/5006/485    8851/1287    46  292   23.81)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 68326656 := 33261515572098320&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 69268736 := 33261515572098320&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 69252352 := 33261515572098320&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 69317888 := 33261515572098320&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 69317888 := 33261515572098320&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 69317888 := 33261515572098320&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 69317888 := 33261515572098320&33261515572100480
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 69317888 := 33261515572098320&33261515572100480
(smt.stats   48   6434 218120 500967  5504/5044/485    9207/1301    46  292   24.05)
(smt.stats   49   6581 223697 521838  5526/5214/506    9517/1355    47  296   24.15)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 232387 556938  5535/5223/506   10035/1355    47  296   24.15)
(smt.stats   51   6919 242824 615272  5547/5235/508   10242/1654    49  309   24.25)
(smt.stats   52   7113 246697 633168  5604/5280/508   10521/1654    49  309   24.35)
ramon: poll                 wall=5.000s usage=4.996s mem=26012KiB load=1.00 rootload=1.00
(smt.stats   53   7326 257750 665203  5882/5284/514   10843/1661    49  309   24.53)
(smt.stats   54   7560 264040 688903  6223/5870/515   11658/1713    50  318   24.63)
(smt.stats   55   7661 267838 705232  6296/5912/517   11842/1714    50  318   24.73)
(smt.stats   56   7772 273354 721295  6317/5974/517   12031/1906    51  328   24.82)
ramon: poll                 wall=6.000s usage=5.995s mem=26524KiB load=1.00 rootload=1.00
(smt.stats   57   7894 277991 742067  6340/6016/520   12498/2200    52  338   24.92)
(smt.stats   58   8028 282174 759200  6344/6020/523   12695/2200    52  338   24.92)
(smt.stats   59   8175 286310 791402  6350/6025/523   12923/2200    52  338   25.01)
(smt.stats   60   8336 289766 817643  6356/6032/523   13087/2216    53  392   25.01)
(smt.stats   61   8513 294222 840657  6369/6043/523   13419/2216    53  392   25.11)
(smt.stats   62   8707 302559 890724  6385/6059/523   13648/2216    53  392   25.11)
(smt.stats   63   8920 305886 908343  6448/6073/523   13911/2218    53  392   25.20)
ramon: poll                 wall=7.000s usage=6.993s mem=26856KiB load=1.00 rootload=1.00
(smt.stats   64   9154 312317 943339  6607/6251/525   14604/2298    54  404   25.30)
(smt.stats   65   9411 323781 984201  6701/6373/527   14990/2418    56  426   25.40)
(smt.stats   66   9512 325741 995288  6788/6440/529   15275/2418    56  426   25.59)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   67   9623 332116 1011890  6815/6453/529   15472/2418    56  426   25.78)
(smt.stats   68   9745 334564 1023610  6901/6535/530   15792/2536    57  434   25.88)
(smt.stats   69   9879 340388 1062751  6950/6574/531   16525/2595    58  447   25.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 227)
(smt.stats   70  10026 345396 1094882  6980/6596/537   16815/2595    58  447   26.07)
ramon: poll                 wall=8.000s usage=7.993s mem=27880KiB load=1.00 rootload=1.00
(smt.stats   71  10187 354657 1136868  7264/6610/537   17093/2785    59  475   26.59)
(smt.stats   72  10364 361579 1173295  7289/6909/538   17504/2806    60  485   26.69)
(smt.stats   73  10558 366657 1200214  7359/6924/539   17854/2809    60  485   26.78)
ramon: poll                 wall=9.000s usage=8.992s mem=28516KiB load=1.00 rootload=1.00
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 4&118
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927940 := 4081399510379521 << 7
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 4&118
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927940 := 3659185434694657 << 7
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 4&118
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927940 := 1266639005813761 << 7
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 4&118
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927940 := 1266639005813761 << 7
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 4&118
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927940 := 1266642227054592 << 7
(smt.stats   74  10771 372883 1219514  7473/6993/539   18197/2811    60  485   26.88)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&118
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 117 := 562949953421312 << 7
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&118
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 562949953421312 << 7
(smt.stats   75  11005 376086 1231735  7609/7093/544   18521/2856    61  486   27.07)
ramon: poll                 wall=10.000s usage=9.992s mem=28772KiB load=1.00 rootload=1.00
(smt.stats   76  11262 382052 1249553  7814/7287/550   18896/2857    61  486   27.26)
(smt.stats   77  11544 386368 1271000  7888/7466/550   19282/2859    61  486   27.36)
(smt.stats   78  11645 388489 1286022  7928/7503/550   19496/2967    62  487   27.36)
(smt.stats   79  11756 390282 1315285  7991/7538/550   19662/2968    62  487   27.36)
(smt.stats   80  11878 395958 1345807  8003/7611/551   19948/3028    63  489   27.45)
(smt.stats   81  12012 401557 1383203  8032/7620/552   20428/3030    63  489   27.45)
ramon: poll                 wall=11.000s usage=10.992s mem=29284KiB load=1.00 rootload=1.00
(smt.stats   82  12159 412591 1429022  8036/7644/552   20644/3030    63  489   27.55)
(smt.stats   83  12320 423113 1478520  8050/7647/552   20919/3183    64  498   27.64)
ramon: poll                 wall=12.000s usage=11.991s mem=29284KiB load=1.00 rootload=1.00
(smt.stats   84  12497 431414 1516288  8228/7705/552   21426/3188    64  498   27.74)
(smt.stats   85  12691 442385 1560072  8252/7848/556   21911/3364    65  513   27.74)
(smt.stats   86  12904 456941 1636632  8306/7865/556   22414/3368    65  513   27.93)
ramon: poll                 wall=13.000s usage=12.991s mem=29796KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   87  13138 469440 1703589  8350/7934/556   23093/3372    65  513   28.13)
(smt.stats   88  13395 481555 1782313  8705/7967/556   23941/3383    65  513   28.22)
ramon: poll                 wall=14.000s usage=13.991s mem=30308KiB load=1.00 rootload=1.00
(smt.stats   89  13677 492202 1835699  8768/8344/556   25118/3383    65  513   28.42)
(smt.stats   90  13987 510058 1893010  8815/8387/556   25708/3383    65  513   28.51)
(smt.stats   91  14088 515040 1915308  8834/8424/556   26183/3388    65  513   28.61)
ramon: poll                 wall=15.000s usage=14.990s mem=30308KiB load=1.00 rootload=1.00
(smt.stats   92  14199 521526 1942098  8920/8471/559   26638/4184    66  546   28.61)
(smt.stats   93  14321 528261 1973567  9023/8551/559   26837/4188    66  546   28.80)
(smt.stats   94  14455 533701 2002188  9049/8649/559   27444/4246    67  550   29.00)
(smt.stats   95  14602 539293 2032769  9131/8722/560   27818/4249    67  550   29.09)
ramon: poll                 wall=16.000s usage=15.990s mem=31076KiB load=1.00 rootload=1.00
(smt.stats   96  14763 545895 2067061  9230/8738/560   28499/4253    67  550   29.19)
(smt.stats   97  14940 552670 2152158  9287/8880/565   29227/4700    69  559   29.29)
(smt.delete-inactive-clauses  :num-deleted-clauses 451)
(smt.stats   98  15134 555951 2191414  9298/8890/565   29339/4700    69  559   29.38)
ramon: poll                 wall=17.000s usage=16.990s mem=31076KiB load=1.00 rootload=1.00
(smt.stats   99  15347 562312 2240694  9374/8892/565   29783/4703    69  559   29.49)
(smt.stats  100  15581 569062 2280071  9524/9011/565   30575/4923    70  565   29.58)
(smt.stats  101  15838 575461 2333247  9642/9123/565   30958/4924    70  565   29.58)
ramon: poll                 wall=18.000s usage=17.989s mem=31332KiB load=1.00 rootload=1.00
(smt.stats  102  16120 583066 2423627  9733/9247/565   31387/4926    70  565   29.58)
(smt.stats  103  16430 590782 2546646  9804/9396/568   31989/5246    71  568   29.78)
ramon: poll                 wall=19.000s usage=18.989s mem=31588KiB load=1.00 rootload=1.00
(smt.stats  104  16770 601951 2636890  9969/9409/569   32669/5249    71  568   29.87)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 45035996274638848&1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 45035996274638848&1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 45035996274638848&1
(smt.stats  105  16871 604906 2677274 10133/9636/569   32934/5359    72  610   29.97)
(smt.stats  106  16982 606378 2696615 10208/9729/574   33325/5359    72  610   29.97)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  107  17104 608822 2715361 10250/9805/574   33497/5449    73  611   29.97)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 32369750963126272&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 32369750963126272 := 4503599627370496 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 9007199254740992&1
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 2 := 4503599627370496 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 9007199254740992&1
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 4503599627370495 := 4503599627370496 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 9007199254740992&1
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 1 := 9007199254740992&1
(smt.stats  108  17238 611001 2739264 10320/9870/590   33679/5453    73  611   30.28)
(smt.stats  109  17385 614372 2825979 10387/9920/590   33855/5453    73  611   30.28)
(smt.stats  110  17546 618401 2861578 10401/9968/591   34033/5524    74  619   30.38)
(smt.stats  111  17723 621043 2878108 10502/9989/591   34234/5525    74  619   30.38)
ramon: poll                 wall=20.000s usage=19.989s mem=32100KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:24:05 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.995s
ramon: group.utime          19.979s
ramon: group.stime          0.016s
ramon: group.mempeak        32356KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
