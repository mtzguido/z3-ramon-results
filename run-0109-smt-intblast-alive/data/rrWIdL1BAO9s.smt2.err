ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:59:43 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40596 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1251
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rrWIdL1BAO9s.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3094919
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4419    241  1179/1049/115      90/18    13   17   19.43)
(smt.stats    1    202   7271   1197  1744/1550/115     195/20    13   17   19.43)
(smt.stats    2    313   9371   2784  2116/1623/115     313/54    13   17   19.74)
(smt.stats    3    414  10762   4583  2628/2401/120     452/120    15   25   19.84)
(smt.stats    4    525  11649   5757  2706/2469/130     473/122    17   77   19.84)
(smt.stats    5    647  15832   8896  2748/2484/130     593/124    18   84   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  18765  11838  2767/2531/134     694/132    19   87   19.84)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 8906493618779 := 8906493618780&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 8906493618778 := 8906493618780&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 8906493618776 := 8906493618780&8906493618779
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 79275237796444 := 44 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 8906493618777 := 8906493618778&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 8906493618736 := 8906493618778&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 8906493618776 := 8906493618778&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 8906493618777 := 8906493618777&8906493618779
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 79275237796441 := 44 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 47 := 47&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 4 := 46&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 46 := 46&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 50 := 50&8906493618779
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 66 := 66&8906493618779
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 774056185954370 := 44 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 0&8906493618779
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 1 := 44 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 16588 := 16588&16589
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 211106232549580 := 15 << 15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 16588 := 16588&16589
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 211106232549580 := 15 << 15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 16587 := 16588&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 16586 := 16588&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 16584 := 16588&16589
(smt.stats    7    859  23068  15766  2818/2555/157     796/132    21  104   20.04)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 16588&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 17&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 17&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 20&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 24&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 20&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 32&16589
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 32 := 15 << 15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 1 := 15 << 15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 14 := 15 << 15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16589 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16588 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16584 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16576 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16512 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16384 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16128 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 512 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 1024 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 2048 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 4096 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 8192 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16384 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16384 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16384 := 491520&16589
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 491520&16589
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 16384 := 491520&16589
(smt.stats    8    981  25960  18228  2931/2688/275     919/165    24  142   20.54)
(smt.stats    9   1115  26541  20003  2988/2732/275    1046/168    25  154   20.64)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 0&34790990698
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 562949953421312 := 36 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 1&34790990698
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 562949953421313 := 36 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 34790990696 := 2473901162496&34790990698
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 34790990688 := 2473901162496&34790990698
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 4 := 2473901162496&34790990698
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 16 := 2473901162496&34790990698
(smt.stats   10   1216  29087  21791  3120/2776/282    1176/185    26  162   20.93)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 80 := 2473901162496&34790990698
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1356 := 2473901162496&34790990698
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1356 := 2473901162496&34790990698
(smt.stats   11   1327  32080  24501  3378/2872/303    1413/188    26  162   21.12)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1036 := 2473901162496&34790990698
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1036 := 2473901162496&34790990698
ramon: poll                 wall=1.000s usage=0.918s mem=22520KiB load=0.92 rootload=0.91
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  35910  31915  3407/3148/324    1779/485    29  200   21.22)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 15 := 17812987237540&17812987237559
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 15 := 17778196246900&17812987237559
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 15 := 17778196246900&17812987237559
(smt.stats   13   1583  39494  37913  3534/3272/330    2260/547    30  201   21.32)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 15 := 17778196246900&17812987237559
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 15 := 17778196246901&17812987237559
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 15 := 17778196246902&17812987237559
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 15 := 17778196246918&17812987237559
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1455 := 17812987237911&17812987237559
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1455 := 17812987237903&17812987237559
(smt.stats   14   1730  43883  48976  3647/3386/333    2535/569    31  204   21.42)
(smt.stats   15   1831  47482  56519  3662/3404/339    2765/579    32  218   21.51)
(smt.stats   16   1942  51603  64864  3730/3412/339    3067/583    32  218   21.51)
(smt.stats   17   2064  54134  68693  3754/3492/341    3200/822    33  220   21.61)
(smt.stats   18   2198  60684  76489  3826/3550/343    3386/837    34  224   21.70)
(smt.stats   19   2345  66392  92268  3847/3589/346    3922/858    35  225   21.70)
ramon: poll                 wall=2.000s usage=1.916s mem=23244KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2506  70877 104516  3912/3654/350    4340/1152    37  235   21.89)
(smt.stats   21   2607  75460 112092  3956/3658/350    4483/1153    37  235   21.89)
(smt.stats   22   2718  78300 119786  3992/3734/351    4648/1219    39  255   21.89)
(smt.stats   23   2840  83171 132704  4000/3742/351    4806/1219    39  255   21.99)
(smt.stats   24   2974  86080 142813  4010/3750/351    5021/1220    39  255   22.08)
ramon: poll                 wall=3.000s usage=2.916s mem=23580KiB load=1.00 rootload=1.00
(smt.stats   25   3121  89208 149562  4158/3782/351    5312/1222    39  255   22.18)
(smt.stats   26   3282  95434 166316  4367/3990/351    5714/1231    39  255   22.27)
ramon: poll                 wall=4.000s usage=3.916s mem=23892KiB load=1.00 rootload=1.00
(smt.stats   27   3459 100548 176280  4557/4120/351    5988/1237    39  255   22.37)
(smt.stats   28   3560 105143 185589  4737/4357/352    6295/1424    40  258   22.37)
ramon: poll                 wall=5.000s usage=4.916s mem=23956KiB load=1.00 rootload=1.00
(smt.stats   29   3671 107196 191235  4898/4471/352    6425/1426    40  258   22.46)
(smt.stats   30   3793 110539 201317  5287/4824/352    6596/1426    40  258   22.65)
ramon: poll                 wall=6.000s usage=5.916s mem=23980KiB load=1.00 rootload=1.00
(smt.stats   31   3927 113416 208616  5630/5067/352    6806/1434    40  258   22.75)
(smt.stats   32   4074 116844 217889  5734/5415/357    7187/1535    41  268   22.84)
ramon: poll                 wall=7.000s usage=6.915s mem=24224KiB load=1.00 rootload=1.00
(smt.stats   33   4235 120817 235968  6108/5480/358    7514/1541    41  268   22.94)
ramon: poll                 wall=8.000s usage=7.915s mem=24652KiB load=1.00 rootload=1.00
(smt.stats   34   4412 123198 247499  6464/6163/359    7794/1705    42  273   23.17)
ramon: poll                 wall=9.000s usage=8.915s mem=24940KiB load=1.00 rootload=1.00
(smt.stats   35   4606 126682 258934  6663/6225/359    8168/1713    42  273   23.26)
(smt.stats   36   4707 129159 270982  6807/6453/359    8396/1819    43  276   23.36)
(smt.stats   37   4818 132433 286737  6921/6569/359    8674/1823    43  276   23.36)
ramon: poll                 wall=10.000s usage=9.915s mem=24892KiB load=1.00 rootload=1.00
(smt.stats   38   4940 136240 303220  7028/6730/359    8965/1824    43  276   23.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 12)
(smt.stats   39   5074 140114 319005  7079/6768/359    9242/1827    43  276   23.45)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   40   5221 145030 339013  7266/6834/359    9449/1830    43  276   23.55)
ramon: poll                 wall=11.000s usage=10.915s mem=25148KiB load=1.00 rootload=1.00
(smt.stats   41   5382 149371 354343  7431/7009/359    9736/1833    43  276   23.65)
ramon: poll                 wall=12.000s usage=11.915s mem=25156KiB load=1.00 rootload=1.00
(smt.stats   42   5559 153923 370489  7637/7266/359   10086/1840    43  276   23.74)
ramon: poll                 wall=13.000s usage=12.914s mem=25332KiB load=1.00 rootload=1.00
(smt.stats   43   5753 158797 391788  7958/7413/359   10423/1843    43  276   23.84)
(smt.stats   44   5966 164740 415970  8284/7796/359   10947/1860    43  276   23.93)
(smt.stats   45   6067 169581 433621  8315/8026/359   11452/1864    43  276   24.03)
(smt.stats   46   6178 174849 458425  8494/8068/360   11780/2334    44  280   24.03)
ramon: poll                 wall=14.000s usage=13.914s mem=25664KiB load=1.00 rootload=1.00
(smt.stats   47   6300 179144 482624  8519/8237/361   12111/2381    45  288   24.12)
(smt.stats   48   6434 183301 500263  8639/8269/361   12446/2384    45  288   24.25)
(smt.stats   49   6581 190714 535480  8655/8387/361   12887/2384    45  288   24.25)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1 := 17847280583483&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 16141059649264796475 := 70366597740565 << 1
(smt.stats   50   6742 200976 571207  8686/8390/361   13362/2385    45  288   24.34)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1 := 70366597740565&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 70366597740565 := 70366597740565 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 1 := 70366597740565&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #350) 64)) 70366597740565 := 70366597740565 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 70364451303466&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 70366597726199 := 70366597740565 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 70364451303466&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 70364451307521 := 70366597740565 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 70364451303466&1
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 1 := 70364451303466&1
ramon: poll                 wall=15.000s usage=14.914s mem=25960KiB load=1.00 rootload=1.00
(smt.stats   51   6919 205800 585133  8748/8475/378   13663/2710    46  289   24.44)
(smt.stats   52   7113 214243 621209  8797/8502/380   14304/2712    46  289   24.54)
ramon: poll                 wall=16.000s usage=15.914s mem=26000KiB load=1.00 rootload=1.00
(smt.stats   53   7326 226958 672666  8827/8527/380   14617/2824    47  325   24.54)
(smt.stats   54   7560 236413 699386  8911/8562/380   15014/2829    47  325   24.63)
(smt.stats   55   7661 242035 718790  8969/8674/381   15285/2933    48  325   24.63)
ramon: poll                 wall=17.000s usage=16.913s mem=26208KiB load=1.00 rootload=1.00
(smt.stats   56   7772 245573 728306  9009/8697/381   15491/2934    48  325   24.73)
(smt.stats   57   7894 250133 745631  9107/8748/381   15767/2940    48  325   24.73)
(smt.stats   58   8028 254240 763222  9167/8874/382   16007/3020    49  328   24.73)
ramon: poll                 wall=18.000s usage=17.913s mem=26396KiB load=1.00 rootload=1.00
(smt.stats   59   8175 260160 775090  9271/8896/382   16236/3021    49  328   24.89)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8336 265017 796360  9379/9081/383   16495/3021    49  328   24.98)
(smt.stats   61   8513 269786 828154  9396/9120/383   16902/3087    50  332   24.98)
ramon: poll                 wall=19.000s usage=18.913s mem=26444KiB load=1.00 rootload=1.00
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 70364451307422&1
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 1 := 70364451307422&1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #746 63) 0 (if #748 1 #888))) 0 := 70364451307422&1
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (= #599 45) 1 (if #601 2 #727))) 1 := 70364451307422&1
(smt.stats   62   8707 275950 858116  9408/9124/386   17237/3129    51  345   25.08)
(smt.stats   63   8920 283836 905861  9432/9152/386   17670/3129    51  345   25.28)
ramon: poll                 wall=20.002s usage=19.917s mem=26848KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:00:03 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.999s
ramon: group.utime          19.999s
ramon: group.stime          0.000s
ramon: group.mempeak        27360KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.00
