ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:39:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42490 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9NPR5WgCx2de.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2828323
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2935    724  1252/1116/100      98/16     6   16   19.15)
(smt.stats    1    202   3640   1150  1965/1675/101     222/19     7   18   19.25)
(smt.stats    2    313   3924   1504  2031/1809/101     345/22     7   18   19.35)
(smt.stats    3    414   5137   2611  2241/2067/106     472/41     8   20   19.35)
(smt.stats    4    525   6362   4364  2302/2091/107     568/55     9   27   19.35)
(smt.stats    5    647   7620   5722  2517/2136/107     724/79     9   27   19.54)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748   9483   8730  2746/2569/110     855/134    11   27   19.54)
(smt.stats    7    859  11709  11209  2851/2605/110     974/142    11   27   19.54)
(smt.stats    8    981  13706  14098  3033/2730/110    1089/178    12   30   19.64)
(smt.stats    9   1115  15706  18841  3225/2906/110    1225/186    12   30   19.73)
(smt.stats   10   1216  18564  23012  3262/3030/110    1330/186    12   30   19.73)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 2 := 2 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 2 := 2 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 2 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 0 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 2 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 0 := 1 << 1
(smt.stats   11   1327  21959  25644  3462/3207/110    1468/186    12   30   19.93)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 18014398509481986 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 0 := 9007199254740993 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  24248  28543  3542/3251/139    1590/236    13   38   19.93)
(smt.stats   13   1583  25300  31357  3597/3325/139    1728/240    14   42   20.02)
(smt.stats   14   1730  28424  36860  3607/3373/139    1879/240    14   42   20.14)
(smt.stats   15   1831  29954  40093  3662/3390/139    1993/243    14   42   20.14)
(smt.stats   16   1942  31980  44604  3813/3560/141    2101/256    15   44   20.14)
(smt.stats   17   2064  33202  47923  3829/3568/149    2205/265    17   60   20.24)
(smt.stats   18   2198  36185  51447  3851/3591/149    2338/266    17   60   20.24)
ramon: poll                 wall=1.000s usage=0.933s mem=21540KiB load=0.93 rootload=0.92
(smt.stats   19   2345  38276  58887  3878/3610/151    2456/268    18   90   20.41)
(smt.stats   20   2506  41100  65768  3884/3629/152    2612/270    20   97   20.41)
(smt.stats   21   2607  42070  69938  3886/3631/152    2711/270    20   97   20.41)
(smt.stats   22   2718  45145  73302  3890/3635/152    2830/270    20   97   20.41)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 0 := 0 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&2
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 1 := 0 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&2
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 1 := 0 << 2
(smt.stats   23   2840  47899  77917  3925/3668/163    2951/289    21   99   20.51)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 9007199254740994&2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 9007199254740994&2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 9007199254740994&2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 9007199254740996&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 9007199254740996 := 13510798882111488 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 13510798882111486&2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 13510798882111484&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 13510798882111484 := 13510798882111488 << 2
(smt.stats   24   2974  49946  81481  3956/3686/163    3094/290    21   99   20.79)
(smt.stats   25   3121  53343  88764  3961/3699/168    3310/296    22  100   20.79)
(smt.stats   26   3282  57857  97176  4003/3731/171    3493/308    23  100   20.79)
(smt.stats   27   3459  61953 107029  4029/3751/175    3677/317    25  110   20.88)
(smt.stats   28   3560  64688 112122  4038/3758/182    3781/317    25  110   20.88)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 4&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 4&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 4 := 4 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 0 := 0 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&8388608
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 8388609 := 0 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 1&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 1 := 2 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 1 := 2 << 24
(smt.stats   29   3671  67462 116934  4058/3762/182    3886/317    26  121   20.98)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 9 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 16 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 32 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 16 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 64 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 128 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 512 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1024 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2048 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4096 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8192 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 16384 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 32768 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 65536 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 131072 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 262144 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 524288 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1048576 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2097152 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4194304 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8388608 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8388608 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
(smt.stats   30   3793  68924 122128  4264/3895/308    4052/321    26  121   21.68)
(smt.stats   31   3928  72569 138448  4484/4203/322    4258/419    28  150   21.80)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8589934592 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8589934592 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8573157376 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 134217728 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 268435456 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1073741824 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4294967296 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1073741824 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1073741824 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8589934592 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4294967296 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582519263232&8589934592
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  77656 145445  4580/4253/381    4452/469    29  180   21.99)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 268435456 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 268435456 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 268435456 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
(smt.stats   33   4236  84776 156159  4612/4308/422    4640/472    29  180   22.09)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 17179869184 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 34359738368 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 17179869184 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 34359738368 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 137438953472 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 137438953472 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 137438953472 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 34359738368 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 17179869184 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 134217728 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 274877906944 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 549755813888 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 274877906944 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1099511627776 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2199023255552 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4398046511104 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4398046511104 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8796093022208 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 17592186044416 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 35184372088832 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 35184372088832 := 39582519263232&4503599627370496
(smt.stats   34   4413  90670 172486  4684/4402/516    4969/669    31  223   22.48)
ramon: poll                 wall=2.000s usage=1.931s mem=24064KiB load=1.00 rootload=0.99
(smt.stats   35   4607  95473 183906  4743/4439/526    5226/711    32  246   22.87)
(smt.stats   36   4708  98751 190389  4767/4468/526    5336/711    32  246   22.87)
(smt.stats   37   4819 102678 199929  4800/4502/526    5519/711    32  246   22.97)
(smt.stats   38   4941 108673 214600  4806/4516/531    5644/800    33  262   22.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 112222 221596  4818/4528/532    5819/800    33  262   23.07)
(smt.stats   40   5222 116380 234783  4829/4531/532    5969/800    33  262   23.07)
(smt.stats   41   5383 120695 243544  5078/4540/532    6182/860    34  271   23.16)
(smt.stats   42   5560 124047 258606  5092/4796/532    6394/860    34  271   23.26)
(smt.stats   43   5754 130352 279399  5114/4818/532    6669/860    34  271   23.56)
(smt.stats   44   5967 136123 296197  5180/4870/536    7040/956    35  273   23.65)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   45   6068 137777 303773  5232/4935/544    7146/1094    36  275   23.85)
ramon: poll                 wall=3.000s usage=2.930s mem=25216KiB load=1.00 rootload=1.00
(smt.stats   46   6179 140219 311791  5274/4944/545    7321/1096    36  275   23.85)
(smt.stats   47   6301 143563 320680  5309/5006/545    7535/1181    37  282   23.85)
(smt.stats   48   6435 148305 334196  5329/5014/547    7722/1181    37  282   23.94)
(smt.stats   49   6582 150516 347029  5337/5034/550    7916/1282    38  288   23.94)
(smt.stats   50   6743 154180 363506  5353/5038/550    8092/1282    38  288   23.94)
(smt.stats   51   6920 161169 385427  5357/5054/551    8298/1304    40  321   24.05)
(smt.stats   52   7114 162626 388191  5624/5057/551    8616/1316    40  321   24.43)
(smt.stats   53   7327 166586 404966  6173/5571/551    9022/1318    40  321   24.53)
ramon: poll                 wall=4.000s usage=3.929s mem=26088KiB load=1.00 rootload=1.00
(smt.stats   54   7561 175967 442774  6189/5876/551    9810/1318    40  321   24.62)
(smt.stats   55   7662 182917 474160  6194/5891/551    9954/1318    40  321   24.62)
(smt.stats   56   7773 193452 508861  6199/5896/551   10121/1318    40  321   24.62)
(smt.stats   57   7895 199249 533408  6205/5898/551   10352/1319    40  321   24.81)
(smt.stats   58   8029 201915 544237  6212/5909/551   10680/1319    40  321   24.81)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&134217728
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 1 := 6013230166048768 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&134217728
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 18014398509481985 := 6013230166048768 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&134217728
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 18014398509481985 := 6013230166048768 << 28
(smt.stats   59   8176 203472 547544  6462/5914/551   10869/1323    40  321   24.91)
(smt.stats   60   8337 206921 563393  6700/6239/556   11106/1799    41  322   24.91)
ramon: poll                 wall=5.000s usage=4.929s mem=26564KiB load=1.00 rootload=1.00
(smt.stats   61   8514 209662 575092  6789/6484/557   11312/1843    42  325   25.01)
(smt.stats   62   8708 214544 603182  6833/6484/557   11564/1843    42  325   25.01)
(smt.stats   63   8921 219314 633071  6872/6559/558   11816/1878    43  326   25.01)
(smt.stats   64   9155 223980 659256  6888/6579/558   12254/1878    43  326   25.12)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9412 234313 710353  6912/6607/559   13040/2260    44  331   25.31)
(smt.stats   66   9513 237086 723499  6953/6640/563   13284/2260    44  331   25.31)
(smt.stats   67   9624 238670 734314  6962/6643/563   13398/2260    44  331   25.31)
(smt.stats   68   9746 243581 769581  6966/6653/563   13533/2260    44  331   25.31)
ramon: poll                 wall=6.000s usage=5.928s mem=26972KiB load=1.00 rootload=1.00
(smt.stats   69   9880 247380 800743  6970/6657/563   13691/2410    45  339   25.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 894)
(smt.stats   70  10027 249987 820371  6983/6668/565   13104/2438    46  345   25.50)
(smt.stats   71  10188 252643 835914  6998/6673/565   13272/2438    46  345   25.50)
(smt.stats   72  10365 259958 865453  7002/6685/565   13503/2438    46  345   25.50)
(smt.stats   73  10559 267147 907612  7008/6691/565   14540/2438    46  345   25.50)
(smt.stats   74  10772 275219 958338  7015/6694/566   14976/2699    47  347   25.60)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11006 284020 1014399  7021/6702/566   15256/2699    47  347   25.60)
ramon: poll                 wall=7.000s usage=6.928s mem=27180KiB load=1.00 rootload=1.00
(smt.stats   76  11263 291358 1059924  7023/6706/566   15612/2699    47  347   25.69)
(smt.stats   77  11545 295631 1099237  7028/6711/566   16098/2699    47  347   25.69)
(smt.stats   78  11646 298608 1124009  7033/6715/566   16209/2699    47  347   25.69)
(smt.stats   79  11757 304203 1147283  7035/6717/566   16349/2699    47  347   25.79)
(smt.stats   80  11879 307895 1174351  7044/6724/566   16475/2699    47  347   25.79)
(smt.stats   81  12013 311883 1198329  7046/6726/567   16636/2942    48  370   25.79)
(smt.stats   82  12160 319249 1231822  7053/6733/567   16935/2942    48  370   25.79)
(smt.stats   83  12321 325859 1253710  7069/6737/567   17095/2942    48  370   25.88)
ramon: poll                 wall=8.000s usage=7.928s mem=27460KiB load=1.00 rootload=1.00
(smt.stats   84  12498 332576 1299177  7087/6755/567   17289/2942    48  370   25.88)
(smt.stats   85  12692 339987 1349744  7087/6767/567   17584/2942    48  370   26.27)
(smt.stats   86  12905 342380 1370426  7090/6768/567   17848/2942    48  370   26.27)
(smt.stats   87  13139 343358 1386171  7094/6774/567   18094/2942    48  370   26.27)
(smt.stats   88  13396 350907 1430007  7096/6776/567   18398/2942    48  370   26.41)
(smt.stats   89  13678 354987 1466178  7096/6776/568   18698/3102    49  393   26.51)
ramon: poll                 wall=9.000s usage=8.927s mem=28240KiB load=1.00 rootload=1.00
(smt.stats   90  13988 370440 1557122  7098/6778/568   19052/3102    49  393   26.60)
(smt.stats   91  14089 377052 1583950  7099/6779/569   19406/3169    50  402   26.60)
(smt.stats   92  14200 385088 1625556  7101/6781/569   19515/3169    50  402   26.60)
(smt.stats   93  14322 389880 1655240  7102/6782/569   19779/3169    50  402   26.70)
(smt.stats   94  14456 396253 1691684  7107/6787/569   20087/3169    50  402   26.70)
ramon: poll                 wall=10.000s usage=9.926s mem=28340KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   95  14603 401183 1717972  7109/6789/569   20308/3169    50  402   26.70)
(smt.stats   96  14764 403854 1748340  7110/6790/569   20474/3169    50  402   26.70)
(smt.stats   97  14941 407409 1777719  7110/6790/569   20770/3169    50  402   26.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 286)
(smt.stats   98  15135 413781 1808630  7113/6793/569   20700/3169    50  402   26.79)
(smt.stats   99  15348 421162 1863069  7118/6798/569   20948/3169    50  402   26.79)
(smt.stats  100  15582 437335 1941186  7128/6808/569   21249/3169    50  402   26.79)
ramon: poll                 wall=11.000s usage=10.926s mem=28472KiB load=1.00 rootload=1.00
(smt.stats  101  15839 454636 2032473  7130/6810/569   21592/3169    50  402   26.79)
(smt.stats  102  16121 471103 2132020  7140/6819/570   21986/3553    51  410   26.89)
(smt.stats  103  16431 485833 2230103  7142/6821/570   22341/3553    51  410   26.89)
(smt.stats  104  16771 497599 2336848  7145/6824/571   22734/3632    52  413   26.98)
ramon: poll                 wall=12.002s usage=11.914s mem=28636KiB load=0.99 rootload=0.98
(smt.stats  105  16872 502392 2369961  7145/6824/571   22846/3632    52  413   26.98)
(smt.stats  106  16983 506866 2396919  7145/6824/571   22971/3632    52  413   26.98)
(smt.stats  107  17105 514391 2438943  7145/6824/571   23103/3632    52  413   26.98)
(smt.stats  108  17239 522935 2489835  7145/6824/571   23238/3632    52  413   26.98)
(smt.stats  109  17386 528676 2527593  7145/6824/571   23385/3632    52  413   26.98)
(smt.stats  110  17547 540674 2589305  7149/6828/571   23674/3632    52  413   26.98)
(smt.stats  111  17724 550433 2635201  7150/6829/571   23875/3632    52  413   26.98)
ramon: poll                 wall=13.000s usage=12.910s mem=28724KiB load=1.00 rootload=1.00
(smt.stats  112  17918 559795 2686883  7150/6829/571   24179/3632    52  413   27.08)
(smt.stats  113  18131 567656 2749750  7159/6838/572   24454/3795    53  415   27.08)
(smt.stats  114  18365 573695 2810918  7161/6840/572   24688/3795    53  415   27.08)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  115  18622 575778 2834540  7173/6847/572   24972/3795    53  415   27.17)
(smt.stats  116  18904 582808 2888495  7246/6925/574   25295/3820    54  416   27.17)
ramon: poll                 wall=14.000s usage=13.909s mem=28824KiB load=1.00 rootload=1.00
(smt.stats  117  19214 591576 2920115  7248/6927/574   25667/3820    54  416   27.29)
(smt.stats  118  19554 598133 2978171  7255/6934/574   26075/3842    55  418   27.29)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 4579465929687040&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 4579465929687040&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 4579465929687040&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 4579465929687040&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 4579465929687040&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 4579465929687040&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4503599627370496 := 4579465929687040&4503599627370496
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 22593864439169024 := 11296932219584512 << 53
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4503599627370496 := 4579465929687040&4503599627370496
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 4579465929687040 := 11296932219584512 << 53
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4503599627370496 := 4579465929687040&4503599627370496
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 4579465929687040 := 11296932219584512 << 53
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2181431069507592 := 4579465929687040&2251799813685248
(smt.stats  119  19927 608284 3027828  7553/6977/590   26716/4054    56  421   27.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 562)
(smt.stats  120  20028 610215 3040450  7568/7243/601   26501/4054    56  421   27.58)
(smt.stats  121  20139 616931 3083728  7570/7245/601   26614/4054    56  421   27.58)
ramon: poll                 wall=15.000s usage=14.909s mem=29304KiB load=1.00 rootload=0.99
(smt.stats  122  20261 624534 3136497  7570/7247/601   26755/4283    57  425   27.58)
(smt.stats  123  20395 628201 3163558  7589/7251/601   26921/4284    57  425   27.58)
(smt.stats  124  20542 632652 3189250  7603/7278/602   27141/4301    58  427   27.68)
(smt.stats  125  20703 639537 3208505  7628/7281/603   27308/4303    58  427   27.68)
(smt.stats  126  20880 648871 3234375  7638/7312/604   27549/4303    58  427   27.79)
(smt.stats  127  21074 661355 3306572  7661/7333/604   27774/4354    59  446   27.89)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 87960930222082&1
band: (band[54] (shl[54] (bv2int %0) (mod #104 54)) (if (= #618 53) 1 (if #620 2 #724))) 1 := 87960930222082&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 87960930222082&1
band: (band[54] (shl[54] (bv2int %0) (mod #104 54)) (if (= #618 53) 1 (if #620 2 #724))) 1 := 87960930222082&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 87960930222082&1
band: (band[54] (shl[54] (bv2int %0) (mod #104 54)) (if (= #618 53) 1 (if #620 2 #724))) 1 := 87960930222082&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 87960930222082&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 87960930222082&1
(smt.stats  128  21287 671213 3354276  7726/7398/615   28068/4456    60  458   27.89)
ramon: poll                 wall=16.000s usage=15.909s mem=29684KiB load=1.00 rootload=1.00
(smt.stats  129  21521 680286 3397415  7758/7426/615   28577/4457    60  458   27.98)
(smt.stats  130  21778 689718 3468509  7822/7449/615   28961/4457    60  458   27.98)
(smt.stats  131  22060 700718 3517597  7932/7516/615   29462/4460    60  458   28.08)
(smt.stats  132  22370 716779 3642138  7979/7643/615   29827/4460    60  458   28.08)
ramon: poll                 wall=17.000s usage=16.909s mem=29752KiB load=1.00 rootload=1.00
(smt.stats  133  22710 730414 3717141  8202/7673/618   30257/4838    61  462   28.27)
ramon: poll                 wall=18.002s usage=17.912s mem=30172KiB load=1.00 rootload=1.01
(smt.stats  134  23083 747456 3783005  8476/8139/619   30717/4917    62  464   28.51)
ramon: poll                 wall=19.000s usage=18.908s mem=30440KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  135  23493 762608 3920302  8492/8155/620   31367/4996    63  468   28.61)
(smt.stats  136  23594 764460 3929979  8492/8155/620   31469/4996    63  468   28.61)
(smt.stats  137  23705 767145 3964411  8492/8155/620   31586/4996    63  468   28.61)
(smt.stats  138  23827 769930 3987223  8494/8157/620   31706/4996    63  468   28.70)
(smt.stats  139  23961 775533 4042036  8501/8164/620   31861/4996    63  468   28.70)
(smt.stats  140  24108 779291 4049905  8615/8169/620   32039/5006    63  468   29.55)
ramon: poll                 wall=20.000s usage=19.908s mem=31460KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:39:40 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.970s
ramon: group.utime          19.946s
ramon: group.stime          0.024s
ramon: group.mempeak        31976KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
