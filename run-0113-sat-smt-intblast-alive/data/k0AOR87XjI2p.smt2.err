ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:28:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40086 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/k0AOR87XjI2p.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3945353
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   206/206     0/0  64       0    18.51   0.00)
(sat.stats    101   1038    0   206/206   101/45  64       0    18.70   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 781 :time 0.00)
(sat.stats    101   1038    0   206/206   101/45  64       0    18.70   0.01)
(sat.stats    101   1038    0   206/206   101/45  64       0    18.70   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 418218.80 :time 0.00)
(sat.stats    101   1038    0   206/206   101/45  64       0    18.80   0.01)
(sat.stats    279   3270    1   208/208   279/157  64       0    18.93   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    283   3380    2   208/208   283/157  64       0    18.93   0.02)
(sat.stats    286   3464    3   208/208   286/157  64       0    18.93   0.02)
(sat.stats    292   3635    4   208/208   292/157  64       0    18.93   0.02)
(sat.stats    296   3712    5   208/208   296/159  64       0    18.93   0.02)
(sat.stats    299   3740    6   208/208   299/162  64       0    18.93   0.02)
(sat.stats    302   3757    7   208/208   302/164  64       0    18.93   0.02)
(sat.stats    305   3846    8   208/208   305/164  64       0    18.93   0.02)
(sat.stats    308   3893    9   208/208   308/167  64       0    18.93   0.02)
(sat.stats    353   4067   10   208/208   353/200  64       0    18.93   0.02)
(sat.stats    357   4069   11   208/208   357/200  64       0    18.93   0.02)
(sat.stats    360   4073   12   208/208   360/200  64       0    18.93   0.02)
(sat.stats    363   4083   13   208/208   363/203  64       0    18.93   0.02)
(sat.stats    366   4095   14   208/208   366/206  64       0    18.93   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3229 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 3629 :time 0.00)
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #55))) 0 := 571 >>l 21
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 0&65536
lshr: (lshr[64] (mod (div #77 2) 68719476736) (mod (+ 36 #649 #651) 64)) 1 := 285 >>l 20
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 1 := 1&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 1&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 1 := 65536&1
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 3&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 2 := 65536&3
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 4&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 4 := 65536&4
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 43496 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 45904 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 30688 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 63424 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 29952 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 128 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 42496 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 59392 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 1024 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 24576 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 4096 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 16384 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 65535&65536
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 32768 := 65536&65535
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 48686 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 2668 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 13512 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 22144 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 96 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 16 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 64 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 2048 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 768 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 1024 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 512 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 45056 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 24576 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 32768 := 65535&65536
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 16384 := 65535&65536
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    634  11985   22  1130/1127   641/290  80       0    20.97   0.27)
 (sat-cleaner :elim-literals 7 :elim-clauses 0 :cost 6534 :time 0.00)
 (sat-cleaner :elim-literals 25 :elim-clauses 4 :cost 6527 :time 0.00)
 (sat-cleaner :elim-literals 11 :elim-clauses 1 :cost 7121 :time 0.00)
(sat.stats    721  17176   35  5459/5456   765/371 309       0    22.04   0.34)
(sat.stats   1065  29888  126 20289/20286  1269/538 309       0    24.61   0.85)
ramon: poll                 wall=1.000s usage=0.916s mem=26116KiB load=0.92 rootload=0.90
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 25419 :time 0.00)
 (sat-cleaner :elim-literals 8 :elim-clauses 1 :cost 27894 :time 0.00)
ramon: poll                 wall=2.000s usage=1.915s mem=28004KiB load=1.00 rootload=1.00
(sat.stats   1599  61316  224 36429/36425  1937/804 318       0    26.98   1.93)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 31003 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 31802 :time 0.00)
 (sat-cleaner :elim-literals 343 :elim-clauses 4 :cost 35402 :time 0.00)
ramon: poll                 wall=3.000s usage=2.914s mem=28788KiB load=1.00 rootload=1.00
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #55))) 0 := 137418454652 >>l 4
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754934&8589934592
lshr: (lshr[64] (mod (div #77 2) 68719476736) (mod (+ 36 #649 #651) 64)) 8588789618 := 68710039476 >>l 3
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 804913152 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5477564416 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 8094482432 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5433982976 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5948571648 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5947523072 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5911871488 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5435817984 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5939134464 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5502926848 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5637144576 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5905580032 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 5368709120 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 4294967296 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 0 := 8588754929&8589934592
band: (band[37] (if (= #518 63) 9223372036854775808 (if #520 4611686018427387904 #644)) (lshr[64] (mod #416 68719476736) (mod #652 64))) 2147483648 := 8589934592&8588754929
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 65536 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 3581411328 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 131072 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 262144 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 5796528128 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 1048576 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 4194304 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 2097152 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 5721030656 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 8556380160 := 8588754929&8589934592
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #433)) (if (= #63 36) 68719476736 (if #437 34359738368 #507))) 2550136832 := 8588754929&8589934592
ramon: poll                 wall=4.000s usage=3.913s mem=31672KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.912s mem=37700KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.911s mem=43096KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.911s mem=46644KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.909s mem=57340KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.003s usage=8.912s mem=59644KiB load=1.00 rootload=1.01
ramon: poll                 wall=10.000s usage=9.906s mem=61304KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.906s mem=63172KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.905s mem=64820KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.905s mem=66276KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.003s usage=13.908s mem=67456KiB load=1.00 rootload=1.01
ramon: poll                 wall=15.000s usage=14.903s mem=69172KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.886s mem=70480KiB load=0.98 rootload=0.98
ramon: poll                 wall=17.003s usage=16.890s mem=71504KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.886s mem=73040KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.885s mem=73808KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.885s mem=74712KiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 16:29:15 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.030s
ramon: group.total          19.973s
ramon: group.utime          19.933s
ramon: group.stime          0.040s
ramon: group.mempeak        75224KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.087s
ramon: loadavg              0.99
