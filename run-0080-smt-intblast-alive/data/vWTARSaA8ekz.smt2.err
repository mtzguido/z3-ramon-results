ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:09:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24521 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/vWTARSaA8ekz.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             181433
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3254    527  1084/963/103      87/7     8   18   18.99)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 1&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 1&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 2&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 2&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 2&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 2&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 4&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 1&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1 := 1&21026119
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 1 := 2 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 1&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1 := 1&21026119
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 1 := 2 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 1&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1 := 1&21026119
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 1 := 2 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 1&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1 := 1&21026119
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 1 := 2 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 2&21026119
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 2 := 3 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 7 := 8&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 2&21026119
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 2 := 1 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 4 := 8&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 8&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 16 := 16&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 32 := 32&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1664896 := 1664896&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1664768 := 1664768&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1665024 := 1665024&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 64 := 64&21026119
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 64 := 12 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 64 := 134217728&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 256 := 134217728&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1024 := 134217728&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 4096 := 134217728&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8192 := 134217728&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8192 := 134217728&21026119
(smt.stats    1    202   4395   1007  1948/1646/140     201/11    10   26   19.98)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 65538 := 65544&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 65538 := 65544&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 65538 := 65544&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 65538 := 65544&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 65538 := 65544&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 65538 := 65538&21026119
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 65538 := 65538&21026119
(smt.stats    2    313   5979   1981  2309/2043/211     378/23    11   38   19.98)
(smt.stats    3    414   6648   2894  2421/2148/216     557/89    12   42   19.98)
(smt.stats    4    525   9699   4592  2523/2304/225     733/190    15   60   19.98)
(smt.stats    5    647  13089   8066  2571/2364/228     857/206    18   65   19.98)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17326  10031  2596/2378/228     977/206    18   65   20.09)
(smt.stats    7    859  19101  14484  2615/2394/229    1211/224    19   66   20.09)
(smt.stats    8    981  20761  17853  2624/2406/229    1339/225    19   66   20.18)
(smt.stats    9   1115  26405  26764  2645/2426/229    1520/225    19   66   20.18)
(smt.stats   10   1216  29221  33464  2666/2451/232    1659/355    21   71   20.29)
(smt.stats   11   1327  32182  37846  2731/2464/232    1793/355    21   71   20.39)
(smt.stats   12   1449  35445  45756  2790/2572/245    2077/481    23   82   20.48)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1583  38541  52029  2826/2581/249    2241/534    24  102   20.58)
(smt.stats   14   1730  41725  56437  2886/2642/250    2428/549    25  109   20.58)
(smt.stats   15   1831  45478  61433  2916/2700/250    2559/549    25  109   20.58)
(smt.stats   16   1942  48057  65498  2926/2711/256    2731/619    27  116   20.58)
(smt.stats   17   2064  50220  68655  2975/2751/259    2907/619    27  116   20.68)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 8&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 68719476744 := 68719476735 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 8&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 68719476744 := 513 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 8&0
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 9 := 34359738372 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 8&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 68719476744 := 34359738373 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 8&0
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 2 := 34359738372 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 8&0
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 68719476735 := 34359738372 << 1
(smt.stats   18   2198  53368  74612  3017/2787/272    3196/629    29  132   20.87)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 41112&80
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 192&80
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 208&80
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 274877907152 := 68719476735 << 9
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 208&80
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 137438953680 := 68719476735 << 9
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 41112&80
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 41024&80
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 128&80
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 144&80
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 208&80
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 206158430416 := 68719476735 << 9
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 288&80
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 304&80
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 80 := 336&80
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 17729624998224 := 34493956097 << 9
ramon: poll                 wall=1.000s usage=0.914s mem=22180KiB load=0.91 rootload=0.90
(smt.stats   19   2345  55842  78643  3193/2887/289    3367/630    29  132   21.07)
(smt.stats   20   2506  58554  84923  3232/2983/293    3582/646    30  137   21.07)
(smt.stats   21   2607  62477  93320  3264/3022/293    3677/669    31  153   21.07)
(smt.stats   22   2718  63793  96599  3284/3031/293    3786/669    31  153   21.17)
(smt.stats   23   2840  66180 103108  3467/3169/293    3913/669    31  153   21.17)
(smt.stats   24   2974  68609 111916  3504/3265/294    4077/683    32  154   21.17)
(smt.stats   25   3121  73620 120399  3527/3284/295    4808/684    32  154   21.27)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 6 := 84106800&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 6 := 84106802&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 4 := 84106800&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84106800&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107184&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107192&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107176&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107176&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107168&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107168&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107168&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107168&84104476
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 84107168&84104476
(smt.stats   26   3282  77769 130859  3649/3358/318    5123/756    33  154   21.46)
(smt.stats   27   3459  78411 134068  3949/3441/318    5722/781    34  160   21.65)
(smt.stats   28   3560  79619 135503  3967/3714/318    6025/781    34  160   21.81)
(smt.stats   29   3671  82351 140645  3997/3740/318    6366/781    34  160   21.81)
(smt.stats   30   3793  85557 154622  4006/3765/318    7057/781    34  160   21.90)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3927  89551 173146  4014/3774/330    7673/1207    36  177   22.10)
(smt.stats   32   4074  92542 182813  4046/3800/331    7847/1207    36  177   22.10)
(smt.stats   33   4235  97329 208407  4057/3809/331    8214/1208    36  177   22.28)
(smt.stats   34   4412 102535 235706  4066/3822/339    8984/1298    37  238   22.38)
ramon: poll                 wall=2.000s usage=1.913s mem=23668KiB load=1.00 rootload=1.00
(smt.stats   35   4606 115253 266398  4074/3831/339    9255/1324    38  256   22.38)
(smt.stats   36   4707 118918 290635  4077/3834/339    9430/1324    38  256   22.57)
(smt.stats   37   4818 122411 316223  4099/3851/339    9696/1324    38  256   22.57)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 384&160
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 384&160
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 1 := 84113153&160
(smt.stats   38   4940 124897 330814  4167/3878/340   10134/1362    39  256   22.67)
(smt.delete-inactive-clauses  :num-deleted-clauses 168)
(smt.stats   39   5074 127708 339964  4320/4070/351   10329/1365    39  256   22.76)
(smt.stats   40   5221 131946 346010  4382/4083/351   10568/1366    39  256   22.76)
(smt.stats   41   5382 136572 359165  4500/4161/351   10898/1412    40  262   22.86)
(smt.stats   42   5559 140695 374201  4510/4256/351   11273/1412    40  262   22.86)
(smt.stats   43   5753 146621 413147  4518/4268/351   11830/1412    40  262   22.96)
(smt.stats   44   5966 152890 448969  4560/4310/353   12706/1571    41  278   23.06)
(smt.stats   45   6067 157313 464685  4564/4314/353   12986/1571    41  278   23.15)
ramon: poll                 wall=3.000s usage=2.913s mem=24420KiB load=1.00 rootload=1.00
(smt.stats   46   6178 159157 475138  4697/4314/353   13188/1576    41  278   23.25)
(smt.stats   47   6300 160619 488294  4926/4464/353   13568/1576    41  278   23.44)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1836&10
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1836&10
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1836&10
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1708&10
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1964&10
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1964&10
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1964&10
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1964&10
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 2 := 1964&10
(smt.stats   48   6434 162177 500093  5290/4730/353   13866/1577    41  278   23.63)
(smt.stats   49   6581 166887 517756  5392/5139/358   14554/1705    42  279   23.63)
(smt.stats   50   6742 171263 549649  5479/5153/358   15017/1709    42  279   23.63)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6919 177697 594595  5506/5235/358   15775/1855    43  279   23.73)
(smt.stats   52   7113 186306 654020  5527/5266/358   16710/1855    43  279   23.82)
ramon: poll                 wall=4.000s usage=3.912s mem=25236KiB load=1.00 rootload=1.00
(smt.stats   53   7326 193878 706576  5552/5291/359   18004/2143    44  282   23.92)
(smt.stats   54   7560 200943 763467  5611/5322/359   20017/2143    44  282   24.13)
(smt.stats   55   7661 204356 791460  5622/5371/359   20304/2143    44  282   24.23)
(smt.stats   56   7772 208151 825648  5625/5373/359   20498/2143    44  282   24.23)
(smt.stats   57   7894 210466 839896  5703/5377/359   20732/2144    44  282   24.33)
(smt.stats   58   8028 211840 849716  5780/5513/359   21057/2144    44  282   24.33)
(smt.stats   59   8175 216490 888346  5881/5532/359   21568/2148    44  282   24.42)
(smt.stats   60   8336 219909 922861  5907/5652/360   22471/2577    45  287   24.71)
(smt.stats   61   8513 225965 982159  5928/5663/360   23362/2577    45  287   24.82)
ramon: poll                 wall=5.000s usage=4.912s mem=26148KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8707 231020 1039321  5946/5680/360   23844/2578    45  287   24.82)
(smt.stats   63   8920 240392 1111608  5950/5699/360   24398/2578    45  287   24.92)
(smt.stats   64   9154 247612 1170243  5970/5708/360   25303/2579    45  287   24.92)
(smt.stats   65   9411 252750 1216868  6092/5727/360   26340/2585    45  287   25.12)
(smt.stats   66   9512 255134 1234443  6127/5863/360   26781/2585    45  287   25.12)
(smt.stats   67   9623 259915 1266137  6154/5881/360   27123/2585    45  287   25.32)
ramon: poll                 wall=6.000s usage=5.911s mem=26664KiB load=1.00 rootload=1.00
(smt.stats   68   9745 261893 1290016  6212/5924/361   27741/3335    46  301   25.32)
(smt.stats   69   9879 265088 1322227  6250/5965/361   28485/3337    46  301   25.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 268142 1342329  6364/5999/361   28997/3337    46  301   25.54)
(smt.stats   71  10187 271455 1366760  6374/6119/361   29260/3338    46  301   25.54)
(smt.stats   72  10364 276791 1400956  6479/6125/361   29969/3338    46  301   25.64)
(smt.stats   73  10558 280946 1433810  6589/6258/361   30685/3341    46  301   25.73)
ramon: poll                 wall=7.000s usage=6.911s mem=27040KiB load=1.00 rootload=1.00
(smt.stats   74  10771 283073 1468585  6594/6343/361   30902/3341    46  301   25.73)
(smt.stats   75  11005 289088 1530340  6603/6347/361   31615/3342    46  301   25.83)
(smt.stats   76  11262 294106 1568468  6642/6385/361   31943/3342    46  301   25.83)
(smt.stats   77  11544 298972 1590948  6691/6397/361   32609/3345    46  301   25.93)
(smt.stats   78  11645 301513 1608643  6700/6449/361   32710/3345    46  301   25.93)
(smt.stats   79  11756 302429 1628342  6709/6450/361   33073/3345    46  301   26.03)
(smt.stats   80  11878 303264 1648706  6710/6459/361   33196/3345    46  301   26.03)
(smt.stats   81  12012 305053 1681575  6711/6460/361   33475/3345    46  301   26.03)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   82  12159 307001 1701954  6720/6468/361   34202/3346    46  301   26.12)
ramon: poll                 wall=8.000s usage=7.910s mem=27488KiB load=1.00 rootload=0.99
(smt.stats   83  12320 309118 1732281  6729/6472/361   34382/3347    46  301   26.12)
(smt.stats   84  12497 311998 1755904  6866/6488/361   35199/3350    46  301   26.22)
(smt.stats   85  12691 316460 1789723  7140/6621/361   35735/3353    46  301   26.41)
(smt.stats   86  12904 320502 1815644  7618/6960/361   36302/3354    46  301   26.50)
(smt.stats   87  13138 322076 1833156  7647/7396/361   36749/3354    46  301   26.50)
(smt.stats   88  13395 328326 1877130  7692/7402/362   38485/4333    47  301   26.70)
ramon: poll                 wall=9.000s usage=8.910s mem=28132KiB load=1.00 rootload=1.00
(smt.stats   89  13677 332846 1896946  7759/7456/362   38896/4334    47  301   26.70)
(smt.stats   90  13987 336908 1987770  7822/7546/362   40119/4335    47  301   26.80)
(smt.stats   91  14088 337589 1998811  7825/7572/362   40722/4335    47  301   26.90)
(smt.stats   92  14199 339734 2025124  7830/7579/362   41100/4335    47  301   27.52)
(smt.stats   93  14321 342736 2060121  7834/7580/362   41309/4335    47  301   27.52)
(smt.stats   94  14455 343518 2079500  7836/7585/362   41631/4335    47  301   27.52)
(smt.stats   95  14602 345922 2095760  7847/7587/364   42157/4840    48  337   27.52)
(smt.stats   96  14763 346283 2103993  7851/7600/364   42319/4840    48  337   27.61)
(smt.stats   97  14940 347197 2124238  7851/7600/364   42674/4840    48  337   27.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 233)
ramon: poll                 wall=10.000s usage=9.910s mem=28992KiB load=1.00 rootload=1.00
(smt.stats   98  15134 352197 2176824  7852/7601/364   43561/4840    48  337   27.71)
(smt.stats   99  15347 354623 2231844  7854/7603/364   43970/4840    48  337   27.71)
(smt.stats  100  15581 356016 2252744  7854/7603/364   44637/4840    48  337   27.71)
(smt.stats  101  15838 356956 2277913  7855/7604/364   45042/4840    48  337   27.80)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  102  16120 361399 2340024  7858/7607/364   47170/4840    48  337   27.99)
(smt.stats  103  16430 364015 2357627  8533/7607/364   48197/4841    48  337   28.28)
ramon: poll                 wall=11.000s usage=10.909s mem=29820KiB load=1.00 rootload=1.00
(smt.stats  104  16770 367049 2392808  8659/8360/364   49149/4843    48  337   28.38)
(smt.stats  105  16871 368718 2414557  8720/8426/364   49388/4843    48  337   28.38)
(smt.stats  106  16982 370194 2446867  8760/8494/364   49754/4844    48  337   28.47)
(smt.stats  107  17104 373392 2475848  8919/8520/364   50794/4845    48  337   28.57)
(smt.stats  108  17238 378156 2523814  8956/8705/364   51634/4845    48  337   28.67)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 4 := 40370157740&10
(smt.stats  109  17385 380830 2542273  9169/8708/364   52409/4845    48  337   28.76)
(smt.stats  110  17546 382987 2581117  9246/8924/364   52781/4845    48  337   28.76)
ramon: poll                 wall=12.000s usage=11.909s mem=30284KiB load=1.00 rootload=1.00
(smt.stats  111  17723 386189 2622414  9650/9022/364   53456/4845    48  337   29.06)
(smt.stats  112  17917 389087 2663144  9981/9416/364   54300/4845    48  337   29.25)
(smt.stats  113  18130 393007 2688144 10285/9741/364   54953/4845    48  337   29.35)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  114  18364 395651 2712450 10352/10050/364   55253/4845    48  337   29.35)
(smt.stats  115  18621 398086 2776747 10357/10102/364   56104/4845    48  337   29.45)
(smt.stats  116  18903 402385 2908925 10390/10110/364   56622/4845    48  337   29.45)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 581030466&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 206739460674 := 34493956097 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 581029698&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 206739459906 := 34493956097 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 581029698&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 206739459906 := 34493956097 << 3
ramon: poll                 wall=13.000s usage=12.909s mem=31136KiB load=1.00 rootload=1.00
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 55890489686&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 55890489686 := 55890489686 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 55890489942&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 55890489942 := 55890489942 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 55890489942&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 55890489942 := 55890489942 << 3
(smt.stats  117  19213 406827 2969797 10613/10143/364   57779/4847    48  337   29.66)
(smt.stats  118  19553 410794 3016774 10747/10394/369   58572/6217    49  338   29.75)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 32&1
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 5432182420 := 4 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 32&1
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 5432182420 := 4 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 0 := 32&1
band: (band[36] (shl[36] (bv2int %0) (mod #104 36)) (if (or #567 #568) 0 (if #569 1 #662))) 1 := 32&1
(smt.stats  119  19926 413642 3045018 10846/10545/385   59083/6219    49  338   29.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 2717)
(smt.stats  120  20027 416260 3076516 10872/10612/387   57763/6219    49  338   30.04)
(smt.stats  121  20138 419544 3123147 10885/10624/387   58320/6220    49  338   30.04)
(smt.stats  122  20260 423381 3185399 10906/10645/387   58679/6435    50  359   30.04)
ramon: poll                 wall=14.000s usage=13.909s mem=31732KiB load=1.00 rootload=1.00
(smt.stats  123  20394 426261 3238365 10917/10653/387   59890/6435    50  359   30.13)
(smt.stats  124  20541 427862 3253205 11151/10733/387   60820/6435    50  359   30.23)
(smt.stats  125  20702 430452 3308305 11596/10941/387   61206/6435    50  359   30.53)
(smt.stats  126  20879 433262 3359550 11879/11346/387   61781/6438    50  359   30.80)
(smt.stats  127  21073 434953 3395009 11947/11680/388   62327/6724    51  363   30.90)
ramon: poll                 wall=15.000s usage=14.908s mem=32340KiB load=1.00 rootload=1.00
(smt.stats  128  21286 438476 3496395 12019/11694/388   63256/6725    51  363   31.00)
(smt.stats  129  21520 443119 3571067 12121/11768/388   64790/6727    51  363   31.09)
(smt.stats  130  21777 449224 3607434 12190/11878/388   65439/6730    51  363   31.19)
(smt.stats  131  22059 453224 3655584 12235/11974/388   66072/6730    51  363   31.28)
ramon: poll                 wall=16.000s usage=15.908s mem=32688KiB load=1.00 rootload=1.00
(smt.stats  132  22369 465964 3850376 12242/11981/388   68974/6730    51  363   31.48)
(smt.stats  133  22709 474879 3994708 12249/11988/388   71668/6730    51  363   31.67)
ramon: poll                 wall=17.000s usage=16.908s mem=33372KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  134  23082 487582 4273329 12251/11990/388   74221/6730    51  363   31.95)
(smt.stats  135  23492 490088 4335783 12252/11991/388   76030/6730    51  363   32.15)
(smt.stats  136  23593 492674 4356873 12257/11991/388   77167/6730    51  363   32.24)
(smt.stats  137  23704 494360 4394711 12530/12045/388   77572/6732    51  363   32.34)
(smt.stats  138  23826 496162 4436777 12717/12278/388   78045/6736    51  363   32.44)
ramon: poll                 wall=18.000s usage=17.908s mem=34012KiB load=1.00 rootload=1.00
(smt.stats  139  23960 498285 4488459 12899/12466/388   78367/6736    51  363   32.44)
(smt.stats  140  24107 501410 4546545 12925/12654/388   79088/6736    51  363   32.53)
(smt.stats  141  24268 504082 4597049 13059/12667/388   79975/6736    51  363   32.63)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 8 := 581049368&20
(smt.stats  142  24445 507093 4675890 13320/12823/388   81030/6738    51  363   32.82)
(smt.stats  143  24639 510826 4761327 13481/13066/393   81844/8674    52  364   32.92)
(smt.stats  144  24852 513600 4812360 13605/13224/393   82303/8674    52  364   33.11)
ramon: poll                 wall=19.000s usage=18.907s mem=34952KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  145  25086 514234 4816718 14209/13906/394   82612/8674    52  364   34.91)
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 4 := 40370326588&5
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 18457190091836 := 40370162298 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 4 := 40370326588&5
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 18525909568572 := 40370162298 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #296 64)) (if (or #683 #684 #685) 0 (if #686 1 #832))) 4 := 40370326588&5
shl: (shl[64] (bv2int %0) (mod (+ #104 #295) 64)) 18525909568572 := 40370162298 << 5
(smt.stats  146  25343 516409 4846259 15675/15233/394   83200/8675    52  364   34.35)
ramon: poll                 wall=20.000s usage=19.907s mem=36804KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:09:25 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.998s
ramon: group.utime          19.982s
ramon: group.stime          0.016s
ramon: group.mempeak        37316KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.091s
ramon: loadavg              1.00
