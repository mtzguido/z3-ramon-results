ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:23:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40088 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1328
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/gWWJZg46PL1U.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3928691
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   232/232     0/0  64       0    18.51   0.00)
(sat.stats    101    635    0   232/232   101/30  64       0    18.85   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 311 :time 0.00)
(sat.stats    101    635    0   232/232   101/30  64       0    18.85   0.01)
(sat.stats    101    635    0   232/232   101/30  64       0    18.85   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 447018.85 :time 0.00)
(sat.stats    101    635    0   232/232   101/30  64       0    18.85   0.02)
(sat.stats    350   4183    1   234/234   350/207  64       0    19.24   0.04)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    353   4199    2   234/234   353/208  64       0    19.24   0.05)
(sat.stats    356   4203    3   234/234   356/210  64       0    19.24   0.05)
(sat.stats    359   4208    4   234/234   359/211  64       0    19.24   0.05)
(sat.stats    372   4217    5   234/234   372/212  64       0    19.24   0.05)
(sat.stats    375   4231    6   234/234   375/215  64       0    19.24   0.05)
(sat.stats    378   4253    7   234/234   378/218  64       0    19.24   0.05)
(sat.stats    381   4289    8   234/234   381/218  64       0    19.24   0.05)
(sat.stats    384   4340    9   234/234   384/219  64       0    19.24   0.05)
(sat.stats    387   4411   10   234/234   387/222  64       0    19.24   0.05)
(sat.stats    390   4504   11   234/234   390/225  64       0    19.24   0.05)
(sat.stats    393   4628   12   234/234   393/227  64       0    19.24   0.05)
(sat.stats    396   4673   13   234/234   396/227  64       0    19.24   0.05)
(sat.stats    399   4690   14   234/234   399/228  64       0    19.24   0.05)
(sat.stats    496   5776   15   234/234   496/252  64       0    19.33   0.07)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3583 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 3873 :time 0.00)
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #53))) 0 := 71 >>l 29
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 0&1078844213690368
lshr: (lshr[64] (mod (div #52 2) 562949953421312) (mod (+ 49 #710 #712) 64)) 14464436103207190527 := 35 >>l 28
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 1 := 1&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 47440 := 582827&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 14 := 48&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 10 := 50&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 8 := 50&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 4 := 50&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 32 := 50&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 16 := 50&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 4 := 52&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 8 := 58&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 64 := 84&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 128 := 158&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 256 := 286&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 512 := 542&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 1024 := 1054&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 2048 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 2048000 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 663552 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 1441792 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 32768 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 65536 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 1835008 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 1048576 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 524288 := 2097151&1078844213690368
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 2097144 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 2097111 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 2097120 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 2097104 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 212422 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 1438656 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 1003008 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 658432 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 1314816 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 2048 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 933888 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 8192 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 360448 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 1310720 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 196608 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 131072 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 524288 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 1048576 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 128 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 256 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 0 := 2097151&1078844213690368
band: (band[50] (if (= #579 63) 7061591062662781889289388837306368 (if #581 3530795531331390944644694418653184 #705)) (lshr[64] (mod #450 562949953421312) (mod #713 64))) 4 := 1078844213690368&2097151
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #468)) (if (= #69 49) 431005313883226433672448049152 (if #472 215502656941613216836224024576 #568))) 4096 := 2097087&1078844213690368
 (sat-cleaner :elim-literals 8 :elim-clauses 0 :cost 7179 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    726  11907   25  2959/2956   754/335 360       0    22.06   0.29)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9966 :time 0.00)
ramon: poll                 wall=1.000s usage=0.889s mem=27540KiB load=0.89 rootload=0.88
 (sat-cleaner :elim-literals 50 :elim-clauses 162 :cost 15278 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 9068 :time 0.00)
(sat.stats   1200  48385   96 25218/25212  1165/529 415       0    27.26   1.55)
ramon: poll                 wall=2.000s usage=1.887s mem=29656KiB load=1.00 rootload=0.99
(sat.stats   1737  72521  175 41152/41145  1886/825 415       0    30.93   2.53)
ramon: poll                 wall=3.000s usage=2.887s mem=33804KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.886s mem=35116KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.886s mem=36988KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.886s mem=39288KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.002s usage=6.887s mem=41644KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.885s mem=44892KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.885s mem=46452KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.885s mem=50640KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.885s mem=51280KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.885s mem=54176KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.002s usage=12.886s mem=54688KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.884s mem=55380KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.884s mem=56828KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.884s mem=58080KiB load=1.00 rootload=0.98
ramon: poll                 wall=17.000s usage=16.884s mem=60696KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.883s mem=61176KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.883s mem=63816KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.883s mem=64320KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:23:39 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.050s
ramon: group.total          19.961s
ramon: group.utime          19.901s
ramon: group.stime          0.060s
ramon: group.mempeak        64832KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              0.99
