ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:23:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40175 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/gOv4PWmbqhSq.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3928282
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   232/232     0/0  67       0    18.51   0.00)
(sat.stats    108    628    0   232/232   108/36  67       0    18.85   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 280 :time 0.00)
(sat.stats    108    628    0   232/232   108/36  67       0    18.85   0.01)
(sat.stats    108    628    0   232/232   108/36  67       0    18.85   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 373818.85 :time 0.00)
(sat.stats    108    628    0   234/234    44/35  67       0    18.85   0.01)
(sat.stats    175   1865    1   234/234   111/86  67       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    178   1895    2   234/234   114/86  67       0    18.94   0.01)
(sat.stats    181   1926    3   234/234   117/88  67       0    18.94   0.01)
(sat.stats    184   1960    4   234/234   120/88  67       0    18.94   0.01)
(sat.stats    187   1977    5   234/234   123/88  67       0    18.94   0.01)
(sat.stats    190   1998    6   234/234   126/88  67       0    18.94   0.01)
(sat.stats    193   2024    7   234/234   129/88  67       0    18.94   0.01)
(sat.stats    196   2053    8   234/234   132/88  67       0    18.94   0.01)
(sat.stats    199   2094    9   234/234   135/88  67       0    18.94   0.01)
(sat.stats    202   2127   10   234/234   138/88  67       0    18.94   0.01)
(sat.stats    205   2154   11   234/234   141/91  67       0    18.94   0.01)
(sat.stats    208   2158   12   234/234   144/94  67       0    18.94   0.01)
(sat.stats    211   2162   13   234/234   147/97  67       0    18.94   0.01)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1919 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2204 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   4894   20   234/234   333/218  75       0    19.74   0.05)
(sat.stats    504   7113   21   234/234   437/241  75       0    19.74   0.06)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 5575 :time 0.00)
ramon: poll                 wall=1.000s usage=0.996s mem=21908KiB load=1.00 rootload=0.98
(sat.stats   1247  29467   60  4292/4291  1213/325  81       0    20.98   1.52)
(sat.stats   1255  29494   61  4292/4291  1221/325  81       0    20.98   1.52)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9705 :time 0.00)
 (sat-cleaner :elim-literals 17 :elim-clauses 1 :cost 10760 :time 0.00)
 (sat-cleaner :elim-literals 189 :elim-clauses 2 :cost 11300 :time 0.00)
(sat.stats   1599  38160  117  4977/4976  1580/458  91       0    21.37   1.80)
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 11726 :time 0.00)
ramon: poll                 wall=2.000s usage=1.996s mem=22520KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.996s mem=23300KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 38 :elim-clauses 1 :cost 29597 :time 0.00)
lshr: (lshr[50] (bv2int %0) (mod (bv2int %0) 50)) 533 := 137438954333 >>l 33
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 15 := 16&1125899906711552
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 6 := 16&1125899906711552
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 16&1125899906711552
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #58 #290) 64)) 0 := 2251799827791872 >>l 47
lshr: (lshr[50] (bv2int %0) (mod (bv2int %0) 50)) 19 := 137438954335 >>l 35
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 4&1125899906809856
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #58 #290) 64)) 0 := 2251799827824640 >>l 49
(sat.stats   2828  64643  217 12501/12482  2923/647  93       0    22.77   3.50)
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 137438954300&0
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #58 #290) 64)) 0 := 2251799827251200 >>l 14
lshr: (lshr[50] (bv2int %0) (mod (bv2int %0) 50)) 137438954301 := 137438954301 >>l 1
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 98204 := 68719477150&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 51736 := 68719477150&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 68719477150&562949953421312
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #58 #290) 64)) 68719518519 := 2251799827267584 >>l 15
lshr: (lshr[50] (bv2int %0) (mod (bv2int %0) 50)) 68719477155 := 137438954303 >>l 3
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 326112 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 436416 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869287&985162418487296
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #58 #290) 64)) 68719477151 := 2251799827300352 >>l 17
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 204 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 291 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 2 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 11144 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 466272 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 16 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 761984 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 64 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 457984 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 13931008 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 5030912 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 59680768 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 133509120 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 60145664 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 8192 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 1028521984 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 98304 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 65536 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 153616384 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 262144 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 10223616000 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 1048576 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 4697620480 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 4194304 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 75497472 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 83886080 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 33554432 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 67108864 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 2147483648 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 268435456 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 1610612736 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 1073741824 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 17179869184 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 4294967296 := 17179869387&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #58 50)) (if (= #471 49) 633825300114114137798398181376 (if #473 316912650057057068899199090688 #569))) 0 := 17179869387&985162418487296
band: (band[50] (lshr[64] (* 16384 #58) (mod #291 64)) (if (= #592 63) 20769187434139292067377911607328768 (if #594 10384593717069646033688955803664384 #718))) 8589934592 := 17179869387&985162418487296
ramon: poll                 wall=4.000s usage=3.995s mem=27068KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   3596 105906  318 42231/42205  4185/1240 149       0    30.40   4.63)
ramon: poll                 wall=5.000s usage=4.995s mem=34996KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.994s mem=38660KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.994s mem=40484KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.994s mem=42456KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.993s mem=44956KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.993s mem=46736KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.993s mem=51668KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.992s mem=53876KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.992s mem=56972KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.991s mem=57564KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.003s usage=14.994s mem=60112KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.991s mem=60280KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.990s mem=60280KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.990s mem=60292KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.989s mem=62344KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.989s mem=62348KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:23:30 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.001s
ramon: group.utime          19.977s
ramon: group.stime          0.024s
ramon: group.mempeak        62608KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.00
