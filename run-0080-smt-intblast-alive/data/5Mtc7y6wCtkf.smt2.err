ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:34:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30902 MiB
ramon: sys.mem.avail        61766 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5Mtc7y6wCtkf.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4060251
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   6053   1298  1366/1140/99      96/13     5   15   19.38)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 0 := 1 << 1
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 0 := 1 << 1
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 0 := 2 << 1
(smt.stats    1    202   7113   2737  2539/2248/102     196/24     8   19   19.57)
(smt.stats    2    313   7623   3544  2668/2358/114     311/29     9   20   19.90)
(smt.stats    3    414   8715   4842  2762/2502/120     350/47    11   92   19.90)
(smt.stats    4    525   9497   6452  2784/2522/129     452/49    12  101   19.90)
(smt.stats    5    647  10652   7918  2796/2529/130     565/51    14  113   20.05)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas       :deletions     )
(smt.stats    6    748  11832   9830  2800/2537/130     676/51    14  113   20.05)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 55&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 55&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 54&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 54&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 52&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 1&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 4&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 53&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 52&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 1&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 1&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 4&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 16&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 32&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 53&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 52&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 32&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 32&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 7 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 6 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8 := 8&36028797018963967
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 8 := 3 << 56
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 32 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 48 := 48&36028797018963967
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 48 := 22 << 56
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 32 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 48 := 48&36028797018963967
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 48 := 22 << 56
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 48 := 48&36028797018963967
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 48 := 0 << 56
(smt.stats    7    859  12941  11431  2891/2557/161     822/66    15  119   20.29)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 64 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 128 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 256 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 512 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1024 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2048 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4096 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8192 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16384 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 32768 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65536 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 131072 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 262144 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 524288 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1048576 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2097152 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4194304 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8388608 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16777216 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 33554432 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 67108864 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 134217728 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 268435456 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 536870912 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1073741824 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2147483648 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4294967296 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8589934592 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17179869184 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 34359738368 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 68719476736 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 137438953472 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 274877906944 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 549755813888 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1099511627776 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2199023255552 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1099511627776 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4398046511104 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8796093022208 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17592186044416 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 35184372088832 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 35184372088832 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 70368744177664 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 140737488355328 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 281474976710656 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 562949953421312 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1125899906842624 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2251799813685248 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4503599627370496 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 9007199254740992 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 18014398509481984 := 72057594037927936&36028797018963967
(smt.stats    8    981  14302  13743  3063/2798/411     921/91    17  190   22.08)
(smt.stats    9   1115  18547  18063  3124/2842/414    1119/176    18  203   22.08)
(smt.stats   10   1216  21077  21402  3165/2871/417    1263/194    20  207   22.28)
(smt.stats   11   1327  22778  23483  3239/2899/417    1399/195    20  207   22.37)
ramon: poll                 wall=1.000s usage=0.949s mem=23584KiB load=0.95 rootload=0.94
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  23897  26670  3506/3239/427    1669/247    21  210   22.56)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 7 := 12&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 3 := 8&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4 := 8&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 3 := 8&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4 := 8&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855871 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855871 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855871 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855869 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855869 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855869 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855869 << 4
(smt.stats   13   1583  29212  33478  3556/3277/449    1765/407    24  315   22.86)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&7
shl: (shl[57] (bv2int %1) (mod (bv2int %0) 57)) 1 := 0 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&7
shl: (shl[57] (bv2int %1) (mod (bv2int %0) 57)) 1 := 0 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 1&15
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&15
shl: (shl[57] (bv2int %1) (mod (bv2int %0) 57)) 14 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&15
shl: (shl[57] (bv2int %1) (mod (bv2int %0) 57)) 1 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8 := 768&15
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2 := 768&15
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2 := 832&15
(smt.stats   14   1730  36141  41124  3688/3382/471    1998/489    26  326   23.05)
(smt.stats   15   1831  43286  53997  3734/3456/471    2138/489    26  326   23.05)
(smt.stats   16   1943  45283  57818  3833/3555/478    2267/580    28  341   23.14)
(smt.stats   17   2065  52118  65056  3909/3620/485    2448/663    30  374   23.14)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 81 := 36028797018964305&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 756604737398243665 := 45035996273704960 << 8
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 81 := 36028797018964305&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 11565243843087434065 := 45035996273704960 << 8
(smt.stats   18   2199  60218  72122  4105/3756/507    2683/700    31  380   23.28)
ramon: poll                 wall=2.000s usage=1.949s mem=24612KiB load=1.00 rootload=1.00
(smt.stats   19   2346  67151  79833  4239/3857/507    2901/701    31  380   23.37)
(smt.stats   20   2507  72557  89237  4282/4002/511    3160/770    32  387   23.47)
(smt.stats   21   2608  77067  95098  4378/4014/512    3320/826    33  398   23.47)
(smt.stats   22   2719  81289 101980  4545/4121/512    3495/892    34  398   23.57)
ramon: poll                 wall=3.000s usage=2.948s mem=25000KiB load=1.00 rootload=1.00
(smt.stats   23   2841  85648 111675  4706/4335/514    3681/940    35  398   23.90)
(smt.stats   24   2975  88936 119150  4829/4549/519    3937/979    36  400   24.00)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3122  94980 132373  4948/4639/521    4076/1062    38  422   24.00)
ramon: poll                 wall=4.000s usage=3.948s mem=25612KiB load=1.00 rootload=1.00
(smt.stats   26   3283 101530 141357  5105/4673/521    4268/1063    38  422   24.14)
(smt.stats   27   3460 106706 151645  5297/5016/523    4546/1110    39  424   24.28)
(smt.stats   28   3561 109817 158046  5354/5023/524    4741/1111    39  424   24.28)
(smt.stats   29   3672 113642 164883  5444/5091/524    4843/1213    40  438   24.28)
(smt.stats   30   3794 120475 175845  5525/5169/524    4993/1213    40  438   24.28)
ramon: poll                 wall=5.000s usage=4.948s mem=25664KiB load=1.00 rootload=1.00
(smt.stats   31   3928 126617 182922  5627/5258/524    5130/1213    40  438   24.38)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 32 := 18014398509485056&63
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16 := 18014398509485056&63
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 18014398509484928&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 18014398509484928 := 140174538401906781 << 7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 18014398509484928&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 18014398509484928 := 140174538401906781 << 7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 18014398509484928&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 18014398509484928 := 140174538401906783 << 7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 18014398509484928&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 18014398509484928 := 140174538401906804 << 7
(smt.stats   32   4075 128988 188184  5865/5357/525    5323/1263    41  440   24.38)
(smt.stats   33   4236 134225 200643  6016/5628/531    5640/1264    41  440   24.53)
(smt.stats   34   4413 141439 219216  6026/5721/531    5833/1328    42  445   24.65)
(smt.stats   35   4607 148915 239173  6057/5750/531    6134/1329    42  445   24.85)
(smt.stats   36   4708 152352 250455  6079/5766/532    6250/1413    43  447   24.85)
(smt.stats   37   4819 156129 263320  6120/5792/533    6450/1423    44  447   24.85)
(smt.stats   38   4941 159500 273457  6160/5825/533    6606/1424    44  447   24.85)
ramon: poll                 wall=6.000s usage=5.948s mem=26320KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 84)
(smt.stats   39   5075 162581 283091  6203/5878/533    6756/1426    44  447   24.96)
(smt.stats   40   5222 168263 296896  6231/5916/533    6942/1426    44  447   24.96)
(smt.stats   41   5383 173687 314917  6293/5946/533    7132/1427    44  447   24.96)
(smt.stats   42   5560 180233 330401  6331/5999/533    7349/1430    44  447   25.07)
(smt.stats   43   5754 189819 353677  6589/6067/533    7580/1437    44  447   25.07)
ramon: poll                 wall=7.000s usage=6.948s mem=26608KiB load=1.00 rootload=1.00
(smt.stats   44   5967 196055 375780  6696/6347/533    7910/1439    44  447   25.22)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   45   6068 198767 383126  6729/6411/533    8094/1440    44  447   25.41)
(smt.stats   46   6179 201963 390113  6785/6457/533    8269/1443    44  447   25.46)
(smt.stats   47   6301 205008 401691  6806/6508/535    8517/1656    45  448   25.57)
(smt.stats   48   6435 208651 417529  6824/6515/535    8662/1657    45  448   25.57)
(smt.stats   49   6582 214056 439042  6842/6543/538    8916/1690    46  451   25.57)
ramon: poll                 wall=8.000s usage=7.948s mem=27152KiB load=1.00 rootload=1.00
(smt.stats   50   6743 216544 448228  7083/6546/539    9203/1751    47  464   25.71)
(smt.stats   51   6920 218576 454386  7245/6796/539    9442/1757    47  464   25.81)
(smt.stats   52   7114 224120 466764  7362/7057/543    9689/1798    48  480   25.81)
(smt.stats   53   7327 230248 498051  7459/7112/544    9997/1834    49  486   25.93)
ramon: poll                 wall=9.000s usage=8.947s mem=27472KiB load=1.00 rootload=1.00
(smt.stats   54   7561 237801 527750  7545/7175/544   10386/1835    49  486   25.93)
(smt.stats   55   7662 239872 535321  7572/7248/544   10507/1837    49  486   25.93)
(smt.stats   56   7773 242661 546736  7599/7293/544   10702/1837    49  486   26.04)
(smt.stats   57   7895 247342 555299  7604/7306/544   10858/1837    49  486   26.04)
(smt.stats   58   8029 251067 578660  7614/7316/544   11003/1837    49  486   26.04)
(smt.stats   59   8176 252286 588641  7615/7317/544   11161/1837    49  486   26.04)
(smt.stats   60   8337 257759 608847  7696/7322/544   11397/1841    49  486   26.18)
(smt.stats   61   8514 262746 628413  7783/7409/544   11660/1843    49  486   26.28)
ramon: poll                 wall=10.000s usage=9.947s mem=27816KiB load=1.00 rootload=1.00
(smt.stats   62   8708 277765 659247  7829/7500/544   11919/1846    49  486   26.28)
(smt.stats   63   8921 286310 693859  8008/7579/544   12189/1848    49  486   26.40)
(smt.stats   64   9155 294228 727563  8156/7714/544   12472/1849    49  486   26.49)
ramon: poll                 wall=11.000s usage=10.947s mem=27980KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9412 300117 747685  8370/7863/546   12804/2164    50  495   26.49)
(smt.stats   66   9513 302146 753285  8401/8088/546   12921/2165    50  495   26.93)
(smt.stats   67   9624 305757 759026  8485/8104/546   13022/2168    51  509   27.05)
(smt.stats   68   9746 308980 770380  8552/8214/546   13179/2168    51  509   27.05)
(smt.stats   69   9880 314439 791695  8616/8257/546   13323/2168    51  509   27.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 18)
(smt.stats   70  10027 318998 805998  8650/8348/546   13585/2168    51  509   27.11)
(smt.stats   71  10188 329027 840520  8665/8355/546   13749/2168    51  509   27.11)
(smt.stats   72  10365 336759 879896  8675/8377/547   14052/2265    52  514   27.26)
(smt.stats   73  10559 343479 904919  8682/8384/547   14311/2265    52  514   27.26)
ramon: poll                 wall=12.000s usage=11.947s mem=28824KiB load=1.00 rootload=0.99
(smt.stats   74  10772 353918 946571  8685/8387/547   14592/2265    52  514   27.28)
(smt.stats   75  11006 364854 987833  8692/8394/547   14956/2265    52  514   27.38)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11263 374655 1043571  8762/8396/547   15248/2267    52  514   27.48)
(smt.stats   77  11545 381010 1074360  8790/8469/547   15599/2267    52  514   27.48)
(smt.stats   78  11646 383576 1083919  8828/8501/547   15717/2268    52  514   27.58)
ramon: poll                 wall=13.000s usage=12.947s mem=29168KiB load=1.00 rootload=1.00
(smt.stats   79  11757 386374 1097682  8870/8548/547   15847/2268    52  514   27.58)
(smt.stats   80  11879 389014 1105253  8951/8588/547   15984/2268    52  514   27.58)
(smt.stats   81  12013 392028 1116385  9011/8676/547   16119/2268    52  514   27.69)
(smt.stats   82  12160 395106 1134203  9065/8721/547   16342/2268    52  514   27.80)
(smt.stats   83  12321 399889 1154811  9073/8775/547   16520/2268    52  514   27.80)
(smt.stats   84  12498 401027 1171739  9075/8777/547   16716/2268    52  514   27.90)
(smt.stats   85  12692 409127 1196888  9163/8779/548   16969/2507    53  516   27.98)
ramon: poll                 wall=14.000s usage=13.947s mem=29684KiB load=1.00 rootload=1.00
(smt.stats   86  12905 416641 1233737  9303/8868/548   17324/2509    53  516   28.09)
(smt.stats   87  13139 426220 1274288  9385/9011/548   17594/2510    53  516   28.09)
(smt.stats   88  13396 438622 1334034  9441/9097/548   17887/2511    53  516   28.18)
ramon: poll                 wall=15.000s usage=14.945s mem=29808KiB load=1.00 rootload=1.00
(smt.stats   89  13678 449012 1380668  9537/9149/548   18223/2513    53  516   28.28)
(smt.stats   90  13988 454910 1420717  9567/9263/549   18659/2741    54  516   28.38)
(smt.stats   91  14089 457956 1439638  9622/9271/549   18831/2744    54  516   29.11)
(smt.stats   92  14200 459798 1454974  9676/9340/549   18995/2744    54  516   29.21)
(smt.stats   93  14322 463936 1471744  9679/9378/550   19171/2776    55  523   29.21)
(smt.stats   94  14456 467822 1500230  9683/9382/550   19354/2776    55  523   29.21)
ramon: poll                 wall=16.000s usage=15.945s mem=30864KiB load=1.00 rootload=1.00
(smt.stats   95  14603 473720 1518210  9700/9385/550   19548/2776    55  523   29.31)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   96  14764 481596 1559886  9727/9409/550   19749/2776    55  523   29.31)
(smt.stats   97  14941 489108 1596486  9807/9440/550   19943/2776    55  523   29.31)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
(smt.stats   98  15135 496951 1643728  9819/9521/550   20327/2776    55  523   29.41)
(smt.stats   99  15348 503208 1682932  9945/9544/551   20556/2935    56  523   29.51)
ramon: poll                 wall=17.000s usage=16.945s mem=31256KiB load=1.00 rootload=1.00
(smt.stats  100  15582 511845 1730806  9971/9655/551   20866/2936    56  523   29.51)
(smt.stats  101  15839 521931 1799700  9978/9677/551   21147/2936    56  523   29.61)
(smt.stats  102  16121 526816 1835269 10034/9687/551   21451/2936    56  523   29.70)
ramon: poll                 wall=18.000s usage=17.945s mem=31516KiB load=1.00 rootload=1.00
(smt.stats  103  16431 535239 1895324 10102/9787/551   21846/2936    56  523   29.80)
(smt.stats  104  16771 551223 1941013 10198/9820/553   22313/3027    57  527   29.99)
(smt.stats  105  16872 555771 1967434 10206/9904/554   22434/3103    58  542   29.99)
(smt.stats  106  16983 557741 1982730 10216/9908/554   22567/3105    58  542   29.99)
(smt.stats  107  17105 559894 2001175 10228/9917/554   22708/3106    58  542   29.99)
ramon: poll                 wall=19.000s usage=18.945s mem=31824KiB load=1.00 rootload=1.00
(smt.stats  108  17239 563081 2023444 10299/9931/554   22868/3106    58  542   30.10)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  109  17386 566289 2045727 10454/10011/554   23016/3106    58  542   30.10)
(smt.stats  110  17547 568365 2061950 10598/10238/554   23239/3107    58  542   30.20)
(smt.stats  111  17724 571986 2087763 10923/10609/555   23522/3183    59  542   30.20)
ramon: poll                 wall=20.000s usage=19.945s mem=32120KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:34:51 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.000s
ramon: group.utime          19.992s
ramon: group.stime          0.008s
ramon: group.mempeak        32376KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.00
