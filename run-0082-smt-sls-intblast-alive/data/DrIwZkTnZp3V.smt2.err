ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:00:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28891 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DrIwZkTnZp3V.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             702278
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   55.5556     10000        49          0            1        2)
(sat.ddfw       1      1   32.3657     20001        98          1            1        3)
(smt.stats    0    101   6085    425  1365/1230/105      89/11    10   19   52.24)
(smt.stats    1    202   8064   3818  2330/2036/105     187/16    11   24   52.43)
(sat.ddfw       1      1   35.0877     40001       196          2            1        5)
(smt.stats    2    313   9212   4821  2411/2130/106     294/25    12   25   52.53)
(smt.stats    3    414  10350   6315  2444/2223/107     394/28    13   25   52.53)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 18446744073709551615 := 2880 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 18446744073709551615 := 2880 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 18446744073709551615 := 2880 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 18446744073709551615 := 2880 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 1&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 1 := 2880 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 2879&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 2879 := 2880 >>l 4
(smt.stats    4    525  12461  10525  2518/2287/124     525/76    17   33   52.65)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1080863635691011483 := 1152921229728940031&1152921229728940032
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1080863635691011484 := 1152921229728940031&1152921229728940032
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 3233&1152921229728940032
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 3233 := 3232 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 3233&1152921229728940032
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 3233 := 3232 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 3233&1152921229728940032
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 3233 := 3232 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 3231&1152921229728940032
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 3231 := 3232 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 203&1152921229728940032
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 203 := 3232 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 0&1152921229728940032
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 72057594037928545 := 202 >>l 22
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 0&1152921229728940032
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 72057594037928545 := 202 >>l 22
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 0&1152921229728940032
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 72057594037928545 := 202 >>l 22
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 0&1152921229728940032
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 72057594037928545 := 202 >>l 22
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 0&1152921229728940032
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 72057594037928545 := 202 >>l 22
ramon: poll                 wall=1.000s usage=0.875s mem=55268KiB load=0.87 rootload=0.86
(smt.stats    5    647  15660  13161  2980/2721/136     641/74    18   40   52.95)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  20555  16967  3006/2741/136     745/74    18   40   53.05)
(sat.ddfw       1      1   31.2175     70001       343          3            1        8)
(smt.stats    7    859  26037  21060  3015/2748/136     857/74    18   40   53.05)
(smt.stats    8    981  28736  24982  3024/2755/138     977/77    19   41   53.17)
(smt.stats    9   1115  30983  26910  3109/2764/138    1113/85    20   42   53.26)
(sat.ddfw       1      1   27.0819    110001       539          4            1       12)
(smt.stats   10   1216  32281  29282  3145/2877/141    1215/91    21   42   53.26)
(smt.stats   11   1327  34733  32231  3153/2886/144    1328/108    22   51   53.36)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  36027  35219  3226/2907/146    1459/112    22   51   53.36)
ramon: poll                 wall=2.000s usage=1.873s mem=55480KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.4627    160000       784          5            1       17)
(smt.stats   13   1583  37405  37538  3345/2982/146    1605/137    23   54   53.65)
(sat.ddfw       1      1   20.6047    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.872s mem=55816KiB load=1.00 rootload=1.00
(smt.stats   14   1730  38228  38639  3628/3115/146    1759/139    23   54   53.65)
(smt.stats   15   1831  39834  41284  3781/3405/146    1900/142    23   54   53.77)
(smt.stats   16   1942  40913  44931  3826/3551/149    2012/191    24   56   53.77)
(smt.stats   17   2064  43078  50468  3841/3566/149    2169/193    24   56   53.87)
(sat.ddfw       1      1   18.2959    290001      1421          7            1       30)
(smt.stats   18   2198  44368  53182  3871/3578/149    2318/195    24   56   53.87)
ramon: poll                 wall=4.000s usage=3.872s mem=56100KiB load=1.00 rootload=0.99
(smt.stats   19   2345  45563  58339  3980/3627/149    2483/197    24   56   53.97)
(smt.stats   20   2506  46528  61067  4149/3772/149    2660/206    24   56   53.97)
(sat.ddfw       1      1   16.4271    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.871s mem=56172KiB load=1.00 rootload=1.00
(smt.stats   21   2607  46940  63275  4426/3928/149    2772/206    24   56   54.17)
(smt.stats   22   2718  48383  70364  4501/4208/149    2887/207    24   56   54.17)
(smt.stats   23   2840  50839  77360  4515/4246/149    3012/207    24   56   54.17)
(smt.stats   24   2974  53245  83833  4537/4259/149    3218/208    24   56   54.17)
(smt.stats   25   3121  55641  94747  4570/4274/155    3382/308    25   63   54.17)
ramon: poll                 wall=6.000s usage=5.871s mem=56360KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.8933    460001      2254          9            1       47)
(smt.stats   26   3282  58336 108176  4664/4307/155    3552/309    25   63   54.17)
(smt.stats   27   3459  61562 121681  4760/4432/155    3792/309    25   63   54.38)
(smt.stats   28   3560  63726 128397  4775/4499/155    3898/311    25   63   54.38)
ramon: poll                 wall=7.000s usage=6.870s mem=56476KiB load=1.00 rootload=1.00
(smt.stats   29   3671  66423 137724  4827/4543/157    4019/351    26   67   54.48)
(smt.stats   30   3793  68999 144454  4892/4582/157    4185/352    26   67   54.48)
(sat.ddfw       1      1   13.6054    560001      2745         10            1       57)
(smt.stats   31   3927  72135 150253  4944/4637/157    4338/360    27   67   54.48)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  74151 157934  5079/4708/158    4486/361    27   67   54.58)
ramon: poll                 wall=8.000s usage=7.870s mem=56780KiB load=1.00 rootload=1.00
(smt.stats   33   4235  76212 169149  5179/4846/158    4703/369    28   67   54.69)
(smt.stats   34   4412  79322 179437  5342/4922/158    4892/370    28   67   54.69)
(sat.ddfw       1      1   12.5199    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=8.869s mem=56892KiB load=1.00 rootload=1.00
(smt.stats   35   4606  81228 188557  5482/5099/158    5105/370    28   67   54.79)
(smt.stats   36   4707  82304 191267  5512/5242/158    5203/370    28   67   54.79)
(smt.stats   37   4818  83805 198528  5577/5249/158    5321/372    28   67   54.79)
(smt.stats   38   4940  85842 205059  5646/5318/158    5447/372    28   67   54.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 105)
(smt.stats   39   5074  88502 209093  5694/5396/158    5477/379    28   67   54.89)
ramon: poll                 wall=10.000s usage=9.869s mem=57084KiB load=1.00 rootload=1.00
(smt.stats   40   5221  90586 215193  5743/5438/158    5677/380    28   67   54.89)
(smt.stats   41   5382  93496 223465  5880/5491/158    5843/383    28   67   55.08)
(sat.ddfw       1      1   11.5953    790001      3872         12            1       80)
(smt.stats   42   5559  97101 234872  5926/5657/158    6014/383    28   67   55.08)
(smt.stats   43   5753 101028 249160  6036/5667/158    6262/385    28   67   55.17)
ramon: poll                 wall=11.000s usage=10.868s mem=57228KiB load=1.00 rootload=1.00
(smt.stats   44   5966 106365 266235  6164/5783/158    6499/386    28   67   55.17)
(smt.stats   45   6067 109145 273996  6180/5908/158    6620/386    28   67   55.17)
(smt.stats   46   6178 111805 281872  6207/5914/158    6759/387    28   67   55.17)
(smt.stats   47   6300 113939 293573  6234/5954/158    6902/387    28   67   55.30)
(smt.stats   48   6434 116486 301009  6244/5976/158    7037/387    28   67   55.30)
(smt.stats   49   6581 120478 315336  6265/5993/158    7195/387    28   67   55.30)
ramon: poll                 wall=12.000s usage=11.867s mem=57456KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.7929    920001      4509         13            1       93)
(smt.stats   50   6742 124219 332783  6313/6006/158    7368/387    28   67   55.30)
(smt.stats   51   6919 128216 351003  6379/6057/158    7549/388    28   67   55.30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 132894 361967  6415/6131/158    7743/389    28   67   55.30)
(smt.stats   53   7326 139079 389240  6434/6155/158    7985/391    28   67   55.84)
ramon: poll                 wall=13.000s usage=12.867s mem=57924KiB load=1.00 rootload=1.00
(smt.stats   54   7560 142205 405655  6542/6170/158    8262/395    28   67   55.94)
(smt.stats   55   7661 143083 409941  6641/6318/158    8404/396    28   67   56.04)
(smt.stats   56   7772 144969 416555  6722/6382/158    8545/396    28   67   56.04)
(sat.ddfw       1      1   10.0894   1060001      5196         14            1      108)
ramon: poll                 wall=14.003s usage=13.870s mem=58064KiB load=1.00 rootload=1.00
(smt.stats   57   7894 146155 419439  6888/6525/158    8698/397    28   67   56.04)
(smt.stats   58   8028 147472 421634  6993/6656/158    8865/397    28   67   56.04)
(smt.stats   59   8175 149550 428379  7086/6743/158    9019/397    28   67   56.15)
(smt.stats   60   8336 151210 435451  7230/6888/158    9219/398    28   67   56.15)
ramon: poll                 wall=15.000s usage=14.866s mem=58192KiB load=1.00 rootload=1.00
(smt.stats   61   8513 153180 443293  7315/6971/158    9420/398    28   67   56.15)
(smt.stats   62   8707 157010 452526  7365/7052/158    9625/398    28   67   56.15)
(smt.stats   63   8920 160603 474051  7515/7118/158    9873/405    28   67   56.27)
(sat.ddfw       1      1   9.47568   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=15.865s mem=58344KiB load=1.00 rootload=0.99
(smt.stats   64   9154 164941 489930  7540/7264/158   10135/405    28   67   56.37)
(smt.stats   65   9411 168776 501556  7605/7282/158   10400/406    28   67   56.37)
(smt.stats   66   9512 170643 507622  7614/7342/158   10534/407    28   67   56.37)
(smt.stats   67   9623 172046 518573  7621/7347/158   10645/407    28   67   56.37)
(smt.stats   68   9745 173831 527982  7663/7361/158   10790/410    28   67   56.37)
(smt.stats   69   9879 175510 533524  7700/7408/158   10954/410    28   67   56.48)
ramon: poll                 wall=17.004s usage=16.884s mem=58764KiB load=1.01 rootload=1.02
(smt.delete-inactive-clauses  :num-deleted-clauses 23)
(smt.stats   70  10026 177904 543369  7796/7446/158   11106/416    28   67   56.48)
(smt.stats   71  10187 180176 554377  7869/7545/158   11286/416    28   67   56.48)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   72  10364 181504 566536  7971/7634/158   11484/416    28   67   56.48)
(sat.ddfw       1      1   8.95205   1370001      6715         16            1      139)
ramon: poll                 wall=18.000s usage=17.882s mem=58924KiB load=1.00 rootload=1.00
(smt.stats   73  10558 185196 583330  8000/7732/159   11699/763    29   68   56.57)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 1152921504606846975&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 0 := 1152921504606846975&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846959 := 1152921504606846975&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846958 := 1152921504606846974&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846956 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846958 := 1152921504606846974&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846958 := 1152921504606846974&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846958 := 1152921504606846974&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846958 := 1152921504606846974&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846958 := 1152921504606846974&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846956 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846956 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846953 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846936 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846936 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846936 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846936 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846952 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846952 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504606846936 := 1152921504606846971&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320152 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320176 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320184 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320152 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320184 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320184 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320240 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320248 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320240 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320248 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320240 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320248 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320248 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320240 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320248 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320248 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320240 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320248 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320624 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320632 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320632 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320752 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552320760 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552321008 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552321016 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552321016 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552321008 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552322552 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552322544 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552322552 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552322552 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552322552 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552324088 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552323576 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552324088 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552325112 := 1152921504606846969&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552325112 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552325112 := 1152921504606846972&1152921504606846968
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 10633823966279326964783712408533204992 (if #657 5316911983139663482391856204266602496 #781))) 1152921504552325112 := 1152921504606846969&1152921504606846968
(smt.stats   74  10771 190213 595981  8319/7756/170   11992/781    30   70   56.97)
(smt.stats   75  11005 194881 616059  8443/8059/337   12533/947    31  107   57.16)
ramon: poll                 wall=19.000s usage=18.877s mem=59664KiB load=1.00 rootload=1.00
(smt.stats   76  11262 206747 646908  8503/8233/339   12899/1133    32  113   57.26)
(smt.stats   77  11544 213053 669948  8596/8318/347   13284/1141    32  113   57.76)
(smt.stats   78  11645 215694 684454  8693/8402/350   13397/1182    33  166   57.86)
(smt.stats   79  11756 218537 697831  8697/8406/351   13514/1182    33  166   57.86)
ramon: poll                 wall=20.000s usage=19.875s mem=59952KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:00:36 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.951s
ramon: group.utime          19.935s
ramon: group.stime          0.016s
ramon: group.mempeak        60208KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              0.99
