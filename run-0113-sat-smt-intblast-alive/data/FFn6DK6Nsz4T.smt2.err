ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:26:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41060 MiB
ramon: sys.mem.avail        61383 MiB
ramon: sys.nprocs           1323
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FFn6DK6Nsz4T.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3759391
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   250/249     0/0  58       0    18.58   0.00)
(sat.stats    193   1240    0   250/249   193/98  58       0    18.88   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 620 :time 0.00)
(sat.stats    193   1240    0   250/249   193/98  58       0    18.88   0.01)
(sat.stats    193   1240    0   250/249   193/98  58       0    18.88   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :elim-bin 1 :time 0.00)
 (sat-probing :cost 604818.97 :time 0.00)
(sat.stats    193   1240    0   250/249   189/98  58       0    18.97   0.01)
(sat.stats    197   1253    1   250/249   193/98  58       0    18.97   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    207   1273    2   250/249   203/104  58       0    18.97   0.01)
(sat.stats    211   1303    3   250/249   207/107  58       0    18.97   0.01)
(sat.stats    214   1324    4   250/249   210/110  58       0    18.97   0.01)
(sat.stats    219   1344    5   250/249   215/114  58       0    18.97   0.01)
(sat.stats    339   2951    6   250/249   335/202  58       0    19.07   0.02)
(sat.stats    342   2962    7   250/249   338/204  58       0    19.07   0.02)
(sat.stats    346   2981    8   250/249   342/207  58       0    19.07   0.02)
(sat.stats    349   2986    9   250/249   345/210  58       0    19.07   0.02)
(sat.stats    352   2998   10   250/249   348/213  58       0    19.07   0.02)
(sat.stats    355   3011   11   250/249   351/216  58       0    19.07   0.02)
(sat.stats    358   3080   12   250/249   354/219  58       0    19.07   0.02)
(sat.stats    361   3142   13   250/249   357/222  58       0    19.07   0.02)
(sat.stats    400   3623   14   250/249   396/255  58       0    19.07   0.02)
(sat.stats    534   8337   15   252/251   530/299  58       0    19.26   0.04)
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #62))) 133 := 133 << 47
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3184 :time 0.00)
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 0 := 70368744177663&10273836649938944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #725 #727) 64)) 146 := 146 << 46
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 1 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 10556 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 70368744177658 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 70368744177656 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 70368744177648 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 70368744177632 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 1021376 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 1456384 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 128 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 1520128 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 1408000 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 33859584 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 5996544 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 4096 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 8192 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 16384 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 601489408 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 65536 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 897056768 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 262144 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 1435500544 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 56820236288 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 2097152 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 38805700608 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 8388608 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 826680541184 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 1259633377280 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 67108864 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 438891970560 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 992137445376 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 536870912 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 2147483648 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 1073741824 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 14809047236608 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 17179869184 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 8589934592 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 12232066859008 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 68719476736 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 41506563948544 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 60473139527680 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 549755813888 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 28587302322176 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 21990232555520 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 17592186044416 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 8796093022208 := 70368744177663&1829587348619264
band: (band[60] (if (= #55 59) 0 (if #543 1 #711)) (shl[60] (bv2int %0) (+ 60 #714))) 35184372088832 := 70368744177663&1829587348619264
 (sat-cleaner :elim-literals 7 :elim-clauses 1 :cost 4970 :time 0.00)
ramon: poll                 wall=1.000s usage=0.984s mem=31180KiB load=0.98 rootload=0.97
(sat.stats :conflicts   :restarts       :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units         :memory       )
(sat.stats   1080  28020   27 51108/51104  2145/1411 355       0    31.87   1.30)
(sat.stats   1100  29507   28 58148/58144  2355/1602 355       0    33.82   1.46)
ramon: poll                 wall=2.000s usage=1.983s mem=40372KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.982s mem=56880KiB load=1.00 rootload=0.99
(sat.stats   1607  32230  116 99269/99265  4081/2821 355       0    57.55   3.29)
ramon: poll                 wall=4.000s usage=3.982s mem=64516KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.982s mem=70292KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.981s mem=75288KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.981s mem=95964KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.980s mem=97MiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.980s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.980s mem=105MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.979s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.002s usage=11.981s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.979s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.978s mem=117MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.978s mem=119MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.978s mem=122MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.977s mem=123MiB load=1.00 rootload=1.00
(sat.stats   3201  40576  146 222736/222732  9522/6668 355       0   125.75  17.51)
ramon: poll                 wall=18.000s usage=17.868s mem=125MiB load=0.89 rootload=0.89
ramon: poll                 wall=19.000s usage=18.867s mem=127MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.866s mem=129MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:26:47 2024
ramon: root.execname        z3
ramon: root.utime           19.820s
ramon: root.stime           0.070s
ramon: group.total          19.894s
ramon: group.utime          19.822s
ramon: group.stime          0.072s
ramon: group.mempeak        129MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.028s
ramon: loadavg              0.99
