ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:23:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         19939 MiB
ramon: sys.mem.avail        62136 MiB
ramon: sys.nprocs           1188
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1228472.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1342573
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
tabu (if (and (bvsle bv[4294967295:32] #17755) (not #19912)) (bvadd bv[1:32] (if #17753 bv[0:32] v492576880)) (if (and #9109 #11291) bv[0:32] v492576880))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      70     11   114.568     10082         0          0          252      287)
(sat.ddfw      64      7   89.9643     20158         0          1          162      458)
(sat.ddfw      29     31   118.107     40000         0          2           91      736)
(sat.ddfw      13     66   111.963     70006         0          3           68      945)
(sat.ddfw      11    261   98.2924    110011         0          4           60     1601)
(sat.ddfw      11    709   83.0382    160000         0          5            2     2074)
(sat.ddfw      11    920   86.2213    220010         1          6           74    29120)
ramon: poll                 wall=1.000s usage=0.999s mem=23156KiB load=1.00 rootload=0.99
(sat.ddfw       4    128   67.9728    290022         1          7           79    29792)
(sat.ddfw       4   1025   55.5632    370033         2          8           43    30402)
ramon: poll                 wall=2.000s usage=1.998s mem=23156KiB load=1.00 rootload=0.99
(sat.ddfw       2    305   38.1624    460020         3          9           57    30669)
ramon: poll                 wall=3.000s usage=2.997s mem=23156KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   31.2393    560017         3         10           14    31067)
ramon: poll                 wall=4.000s usage=3.996s mem=23156KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   22.9466    670000         4         11           21    31723)
ramon: poll                 wall=5.000s usage=4.995s mem=22904KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.988s mem=22904KiB load=0.99 rootload=1.00
(sat.ddfw       1    322   20.0798    790017         6         12           98    33289)
(sat.ddfw       1   1025   20.2061    920023         6         13          123    35508)
ramon: poll                 wall=7.000s usage=6.988s mem=22904KiB load=1.00 rootload=0.99
(sat.ddfw       1   1025   19.8407   1060019         7         14           52    36950)
ramon: poll                 wall=8.004s usage=7.992s mem=22904KiB load=1.00 rootload=1.01
(sat.ddfw       1   1025   18.0612   1210162         7         15           59    37635)
(sat.ddfw       1   1025   17.9726   1370010         8         16           73    38040)
ramon: poll                 wall=9.000s usage=8.964s mem=22904KiB load=0.98 rootload=0.97
(sat.ddfw       1   1025   17.5501   1540141         9         17          107    39787)
ramon: poll                 wall=10.004s usage=9.967s mem=22904KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025     17.19   1720000        10         18           38    41881)
ramon: poll                 wall=11.000s usage=10.962s mem=22904KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   16.0755   1910028        12         19           21    43418)
ramon: poll                 wall=12.000s usage=11.962s mem=22904KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   15.7384   2110000        13         20           13    45816)
ramon: poll                 wall=13.000s usage=12.962s mem=22904KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   15.1146   2320017        14         21           76    47070)
ramon: poll                 wall=14.000s usage=13.962s mem=22904KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.962s mem=22904KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.962s mem=22904KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025      13.1   2540006        14         22           25    47428)
ramon: poll                 wall=17.000s usage=16.961s mem=22904KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.961s mem=22904KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025    12.132   2770005        15         23            7    49032)
ramon: poll                 wall=19.000s usage=18.961s mem=22904KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.961s mem=22904KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:23:40 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.000s
ramon: group.total          19.966s
ramon: group.utime          19.958s
ramon: group.stime          0.008s
ramon: group.mempeak        23404KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
