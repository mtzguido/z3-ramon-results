ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:06:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40428 MiB
ramon: sys.mem.avail        61705 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xMPJJko9AapR.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3115640
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 237&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 1 := 2 << 8
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 237&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 1 := 2 << 8
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 237&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 1 := 2 << 8
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 237 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 237 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 236 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 234 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 232 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 32 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 64 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 80 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 80 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 80 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&0
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #105))) 8796093022209 := 8796093022208 << 9
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&0
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #105))) 8796093022209 := 8796093022208 << 9
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&0
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #105))) 8796093022209 := 8796093022208 << 9
(smt.stats    0    101   4221    700  1302/1153/145      99/19    11   28   19.33)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #105))) 1 := 35184372088833 << 9
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 1 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 2 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 4 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 8 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 16 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 32 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 64 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 64 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 64 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 64 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 128 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 64 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 64 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 16 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 16 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 4 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 4 := 237&512
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 237&512
band: (band[52] (if (= #109 51) 0 (if #611 1 #755)) (shl[52] (bv2int %0) (+ 52 #758))) 2 := 237&512
(smt.stats    1    202   6657   1775  1978/1791/236     197/53    16   54   19.85)
(smt.stats    2    313  11063   5421  2259/1865/236     312/75    16   54   19.95)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 0&87960930221950
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #105))) 87960930221887 := 43980465110975 << 1
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 0&87960930221950
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #105))) 87960930221887 := 43980465110975 << 1
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 0&70644700037188
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #105))) 70644700037183 := 35322350018594 << 1
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 0 := 0&70644700037186
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #105))) 70644700037124 := 35322350018593 << 1
(smt.stats    3    414  12190   7370  2436/2168/246     442/92    19   61   20.14)
(smt.stats    4    525  13448   9005  2744/2480/251     522/143    22   93   20.24)
(smt.stats    5    647  17010  13472  2796/2512/255     686/161    25  100   20.34)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  22690  19760  2803/2533/255     789/161    25  100   20.44)
(smt.stats    7    859  27274  25367  2816/2545/255     928/162    25  100   20.54)
(smt.stats    8    981  29382  29064  2857/2583/263    1081/187    26  102   20.54)
(smt.stats    9   1115  33289  33317  2936/2609/265    1211/200    27  130   20.63)
(smt.stats   10   1216  34972  35002  2985/2678/266    1326/221    28  133   20.63)
(smt.stats   11   1327  36831  39517  3056/2755/266    1468/222    28  133   20.73)
(smt.stats   12   1449  39498  44314  3139/2810/268    1617/241    29  140   20.82)
(smt.stats   13   1583  41952  49674  3159/2873/269    1766/261    30  142   20.82)
(smt.stats   14   1730  44872  56374  3193/2900/270    1933/273    31  144   20.92)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459135
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459135
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459135
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459008
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459008
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459008
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459264
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 8192 := 2092680602458965&2092680602459264
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459391
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680602459264
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 8192 := 2092680602458965&2092680602459264
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 8192 := 2092680602458965&2092680602460288
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16384 := 2092680602458965&2092680602460288
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 32768 := 2092680602458965&2092680602460288
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 65536 := 2092680602458965&2092680602460288
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 131072 := 2092680602458965&2092680602460288
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 262144 := 2092680602458965&2092680602460288
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 524288 := 2092680602458965&2092680602460288
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1048576 := 2092680602458965&2092680602460288
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 7680 := 2092680602458965&2092680607694976
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 8192 := 2092680602458965&2092680603504768
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 8192 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16384 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 32768 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 65536 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 131072 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 262144 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 524288 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1048576 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 2097152 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 4194304 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 8388608 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777216 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33554432 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 67108864 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 134217728 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 8388608 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777216 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33554432 := 2092680602458965&2092680603501696
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 67108864 := 2092680602458965&2092680603500672
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33554432 := 2092680602458965&2092680603502075
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777216 := 2092680602458965&2092680603502075
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777216 := 2092680602458965&2092680603502075
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777216 := 2092680602458965&2092680603501952
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777216 := 2092680602458965&2092680603501952
(smt.stats   15   1831  46319  58783  3315/3020/361    2075/310    32  163   21.42)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 18873600 := 2092680602458965&2092680603501952
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680603501952
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680603501952
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680603501952
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680536392064
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680488154622
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16778496 := 2092680602458965&2092680421045632
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16779520 := 2092680602458965&2092680421044734
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16779520 := 2092680602458965&2092680421044730
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16779520 := 2092680602458965&2092680486060540
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16779520 := 2092680602458965&2092680486061440
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16779520 := 2092680602458965&2092680486061440
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680486060416
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680486060416
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680486060416
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680486060416
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16777472 := 2092680602458965&2092680486060416
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16778496 := 2092680602458965&2092679882084858
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 16778496 := 2092680602458965&2092679882084736
(smt.stats   16   1942  47637  62261  3489/3051/371    2326/320    32  163   21.51)
(smt.stats   17   2064  49818  67226  3562/3284/419    2618/370    33  174   21.61)
ramon: poll                 wall=1.000s usage=0.991s mem=22876KiB load=0.99 rootload=0.97
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33 := 130792537653685&127
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33 := 130792537653685&123
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33 := 130792537653685&115
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33 := 130792537653685&107
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 107 := 4503599627370602 << 47
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33 := 130792537653685&107
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 107 := 4503599627370496 << 47
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 33 := 130792537653685&107
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 107 := 4503599627370496 << 47
(smt.stats   18   2198  54115  74333  3651/3374/432    2948/499    35  192   21.80)
(smt.stats   19   2345  57180  85681  3813/3400/434    3328/534    36  194   21.93)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 4117 := 2092680602458965&2101496359420031
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 4117 := 2092680602458965&2101496359420031
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 4117 := 2092680602458965&2101496359420031
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 4117 := 2092680602458965&2101496359420031
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 1&2101496359420031
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 2101496359420031 := 6605279453476728 << 1
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 1&2101496359420031
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 6605095986790527 := 8724620454592256 << 1
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 1&2101496359420031
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #845 #849) 64)) 6605095986790527 := 8724620454592256 << 1
(smt.stats   20   2506  60392  97102  3907/3625/454    3708/649    38  200   22.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   21   2607  63412 106552  3954/3635/454    3895/732    39  212   22.03)
(smt.stats   22   2718  65947 117183  4173/3699/454    4127/740    39  212   22.32)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 4112 := 16349067206710&33657467
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 4112 := 16349067206710&33657467
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 20 := 16349067206710&33698428
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 20 := 16349067206710&33698428
(smt.stats   23   2840  69367 132548  4548/4035/454    4573/743    39  212   22.61)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 52 := 16349067206710&33698428
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 52 := 16349067206710&33699452
(smt.stats   24   2974  73314 149259  4634/4282/474    5272/897    40  216   22.80)
(smt.stats   25   3121  76760 160199  4654/4369/489    5486/1034    41  219   22.80)
ramon: poll                 wall=2.002s usage=1.991s mem=24164KiB load=1.00 rootload=1.00
(smt.stats   26   3282  82925 188558  4925/4372/489    5888/1037    41  219   22.89)
(smt.stats   27   3459  88642 212686  4996/4663/489    6453/1163    42  219   23.18)
(smt.stats   28   3560  91744 224670  5009/4722/491    6713/1302    43  226   23.08)
(smt.stats   29   3671  97259 244492  5076/4726/491    6922/1302    43  226   23.18)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793 103033 259030  5092/4807/492    7106/1309    44  228   23.18)
(smt.stats   31   3927 110801 284174  5168/4856/492    7577/1332    45  229   23.36)
(smt.stats   32   4074 115607 290997  5178/4879/492    7794/1332    45  229   23.36)
(smt.stats   33   4235 122884 319625  5189/4882/492    8106/1334    45  229   23.36)
(smt.stats   34   4413 129831 355879  5248/4949/493    8655/1916    46  231   23.46)
ramon: poll                 wall=3.000s usage=2.989s mem=24836KiB load=1.00 rootload=0.99
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 2092680602458965&2092679865303043
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 2092680602458965&2092679865303043
(smt.stats   35   4607 135471 382848  5302/4963/495    9125/1919    46  231   23.55)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 2092680602458965&2092679865303043
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 1 := 2092680602458965&2092679865303043
(smt.stats   36   4708 139544 405794  5349/5046/513    9251/1987    47  241   23.55)
(smt.stats   37   4819 143906 424550  5365/5059/513    9411/2002    48  253   23.65)
(smt.stats   38   4941 147356 441459  5399/5100/513    9726/2002    48  253   23.65)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 150604 455443  5429/5130/514   10003/2185    49  262   23.77)
(smt.stats   40   5222 159034 482468  5533/5212/515   10343/2242    50  269   23.86)
(smt.stats   41   5385 166669 522267  5562/5241/516   10629/2288    51  270   24.16)
(smt.stats   42   5562 169719 542297  5940/5527/525   11543/2288    51  270   24.70)
ramon: poll                 wall=4.000s usage=3.988s mem=26408KiB load=1.00 rootload=1.00
(smt.stats   43   5756 183855 574538  5984/5543/525   12100/2291    51  270   24.99)
(smt.stats   44   5969 196834 597519  6062/5603/525   12599/2436    52  287   25.29)
(smt.stats   45   6070 204388 626816  6072/5653/525   12788/2436    52  287   25.29)
(smt.stats   46   6181 214766 658580  6076/5657/525   13361/2436    52  287   25.48)
(smt.stats   47   6303 221371 691006  6088/5669/528   13843/2598    53  305   25.57)
ramon: poll                 wall=5.000s usage=4.988s mem=27092KiB load=1.00 rootload=0.99
(smt.stats   48   6437 228000 732245  6094/5675/533   14478/2619    55  372   25.67)
(smt.stats   49   6584 232774 750350  6103/5684/533   14932/2619    55  372   25.77)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6745 240760 788645  6106/5687/534   15391/2648    56  414   26.06)
(smt.stats   51   6922 251058 874381  6126/5703/535   15802/2648    56  414   26.25)
(smt.stats   52   7116 259404 911830  6129/5706/535   16258/2668    57  426   26.15)
ramon: poll                 wall=6.000s usage=5.987s mem=27676KiB load=1.00 rootload=1.00
(smt.stats   53   7329 275042 960289  6131/5708/535   16551/2668    57  426   26.15)
(smt.stats   54   7563 290294 1051514  6137/5714/535   17173/2668    57  426   26.25)
ramon: poll                 wall=7.000s usage=6.987s mem=27720KiB load=1.00 rootload=1.00
(smt.stats   55   7664 298632 1099692  6138/5715/535   17505/2668    57  426   26.25)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   56   7775 303116 1143014  6143/5720/535   17681/2668    57  426   26.25)
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 32 := 2092680602458965&96
band: (band[52] (if (= #380 63) 0 (if #588 1 #838)) (shl[64] (* 2 #363) (mod #853 64))) 32 := 2092680602458965&96
(smt.stats   57   7897 307772 1183737  6152/5723/535   18237/2669    57  426   26.45)
(smt.stats   58   8031 311198 1216994  6175/5752/536   18489/3007    58  426   26.45)
ramon: poll                 wall=8.000s usage=7.974s mem=27940KiB load=0.99 rootload=0.99
(smt.stats   59   8178 316939 1242985  6265/5752/536   18981/3009    58  426   26.64)
(smt.stats   60   8339 321403 1270552  6399/5857/538   19299/3010    58  426   26.64)
(smt.stats   61   8516 326620 1308228  6417/5994/539   20101/3095    59  432   26.74)
(smt.stats   62   8710 335157 1343567  6475/6033/540   20617/3273    60  440   26.83)
ramon: poll                 wall=9.000s usage=8.973s mem=28348KiB load=1.00 rootload=1.00
(smt.stats   63   8923 344867 1383731  6614/6191/542   21434/3278    61  464   27.13)
(smt.stats   64   9157 353785 1437479  6637/6214/545   22233/3278    61  464   27.22)
(smt.stats   65   9414 361569 1489155  6662/6239/547   23106/3425    62  471   27.52)
ramon: poll                 wall=10.002s usage=9.975s mem=28964KiB load=1.00 rootload=1.00
(smt.stats   66   9515 364624 1498585  6684/6250/547   23400/3426    62  471   27.71)
(smt.stats   67   9626 369237 1530296  6688/6263/547   23759/3523    63  494   27.71)
(smt.stats   68   9748 371961 1554927  6698/6275/547   23998/3523    63  494   27.80)
(smt.stats   69   9882 377506 1590978  6705/6277/547   24149/3524    63  494   27.80)
(smt.delete-inactive-clauses  :num-deleted-clauses 48)
(smt.stats   70  10029 380623 1607449  6736/6313/548   24482/3609    64  503   27.90)
ramon: poll                 wall=11.000s usage=10.973s mem=29472KiB load=1.00 rootload=1.00
(smt.stats   71  10190 389609 1634361  6800/6314/548   24781/3614    64  503   27.90)
(smt.stats   72  10367 397206 1667820  6945/6420/548   25129/3619    64  503   27.99)
(smt.stats   73  10561 405316 1722824  6978/6546/549   26503/3691    65  516   28.19)
ramon: poll                 wall=12.000s usage=11.972s mem=29724KiB load=1.00 rootload=1.00
(smt.stats   74  10774 410320 1749920  7307/6752/551   27136/3697    65  516   28.37)
(smt.stats   75  11008 415264 1778019  7378/6955/552   28005/3891    66  542   28.47)
ramon: poll                 wall=13.000s usage=12.955s mem=30096KiB load=0.98 rootload=0.98
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11265 424940 1846166  7388/6965/554   29474/3891    66  542   28.56)
ramon: poll                 wall=14.000s usage=13.955s mem=30680KiB load=1.00 rootload=1.00
(smt.stats   77  11547 434687 1884466  7712/7269/557   30709/4257    67  581   28.96)
(smt.stats   78  11648 438557 1914913  7753/7321/557   31102/4257    67  581   29.05)
(smt.stats   79  11759 442818 1953272  7769/7342/557   31530/4257    67  581   29.05)
(smt.stats   80  11881 448418 1997483  7777/7349/558   31777/4354    68  593   29.05)
(smt.stats   81  12015 450357 2022731  7784/7361/558   32157/4354    68  593   29.15)
ramon: poll                 wall=15.000s usage=14.953s mem=30764KiB load=1.00 rootload=1.00
(smt.stats   82  12162 453260 2052246  7804/7368/558   32662/4354    68  593   29.24)
(smt.stats   83  12323 457776 2073289  8008/7396/559   33262/4421    69  632   29.41)
ramon: poll                 wall=16.000s usage=15.952s mem=31016KiB load=1.00 rootload=1.00
(smt.stats   84  12500 465138 2115743  8071/7601/559   33854/4426    69  632   29.51)
ramon: poll                 wall=17.000s usage=16.952s mem=31144KiB load=1.00 rootload=0.99
(smt.stats   85  12694 475272 2150769  8191/7676/559   34338/4433    69  632   29.60)
(smt.stats   86  12907 485837 2208080  8229/7799/560   35334/4642    70  638   29.70)
ramon: poll                 wall=18.000s usage=17.951s mem=31356KiB load=1.00 rootload=1.00
(smt.stats   87  13141 496773 2247648  8361/7808/560   36358/4646    70  638   29.99)
ramon: poll                 wall=19.000s usage=18.951s mem=31588KiB load=1.00 rootload=1.00
(smt.stats   88  13398 508913 2315800  8507/8063/561   37169/5030    71  641   30.27)
ramon: poll                 wall=20.000s usage=19.951s mem=31856KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:06:52 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.030s
ramon: group.total          19.963s
ramon: group.utime          19.931s
ramon: group.stime          0.032s
ramon: group.mempeak        32116KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
