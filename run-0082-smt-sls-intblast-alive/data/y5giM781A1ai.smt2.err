ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:18:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27155 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/y5giM781A1ai.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             965478
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   93.4579     10000        49          0            1        2)
(smt.stats    0    101   3554   1285  1111/932/100     100/29     8   15   52.05)
(sat.ddfw       1      1   47.6238     20001        98          1            1        3)
(smt.stats    1    202   3859   1702  2101/1765/100     244/49     8   15   52.24)
(sat.ddfw       1      1   47.9616     40001       196          2            1        5)
(smt.stats    2    313   5675   4005  2185/1986/104     393/111    12   20   52.34)
(smt.stats    3    414   8478   4878  2208/2024/108     493/123    14   25   52.34)
(smt.stats    4    525   9226   6458  2374/2168/109     592/150    15   32   52.44)
(smt.stats    5    647  12717   8162  2395/2191/109     713/151    15   32   52.65)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&1260
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&1280
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&1260
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&1280
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&1536
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 34359739904 := 6 << 30
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&1568
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 32 := 1373884832&1568
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 34359739936 := 6 << 30
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 32 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
shl: (shl[34] (bv2int %0) (+ 34 (* 17179869183 #104))) 0 := 3 << 31
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
shl: (shl[34] (bv2int %0) (+ 34 (* 17179869183 #104))) 0 := 3 << 31
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
shl: (shl[34] (bv2int %0) (+ 34 (* 17179869183 #104))) 0 := 3 << 31
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
shl: (shl[34] (bv2int %0) (+ 34 (* 17179869183 #104))) 0 := 3 << 31
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 1373884832 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 1373884831 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 1373884830 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 1373884828 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 1373884824 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 1373884800 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 1373884672 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 2648 := 1373884832&6442450944
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  14179   8926  2626/2202/109     953/154    15   32   53.16)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 51 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 50 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 48 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 32 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 852 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 852 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 852 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 852 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 848 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 784 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 848 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 808 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 808 := 1373884832&6442450944
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 1373884832&6442450944
band: (band[34] (if (= #108 33) 1 (if #553 2 #644)) (shl[34] (bv2int %0) (+ 34 #647))) 800 := 1373884832&6442450944
(smt.stats    7    859  18326  12249  2733/2455/201    1141/162    16   48   53.26)
(sat.ddfw       1      1   41.2655     70001       343          3            1        8)
(smt.stats    8    981  21232  17072  2808/2590/209    1325/323    18   58   53.38)
(smt.stats    9   1115  24713  22815  2874/2629/216    1540/338    19   84   53.38)
ramon: poll                 wall=1.002s usage=1.194s mem=55600KiB load=1.19 rootload=1.18
(smt.stats   10   1216  29055  28155  2913/2691/218    1710/374    20   98   53.49)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1793
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1793
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1794
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1985
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1794
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1794
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1793
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1796
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1800
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1800
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 51 := 10991078663&1800
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 50 := 10991078663&1800
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 48 := 10991078663&1800
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&1800
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 51 := 10991078663&7516150785
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 48 := 10991078663&7516150785
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&2056
(sat.ddfw       1      1   35.0263    110001       539          4            1       12)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 51 := 10991078663&2056
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 50 := 10991078663&2056
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 48 := 10991078663&2056
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 32 := 10991078663&2056
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&2056
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 31 := 10991078663&4289
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 29 := 10991078663&4289
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&4097
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&4098
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&4098
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 2 := 10991078663&4098
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 11801580895360520194 := 7516194768 << 33
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 0 := 10991078663&4098
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 2 := 10991078663&4098
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 11801580895360520194 := 7516194768 << 33
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 2 := 10991078663&4098
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 11801580895360520194 := 7516194768 << 33
(smt.stats   11   1327  31588  32297  3067/2814/271    1860/405    21  103   53.79)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  34489  36651  3139/2866/281    2036/439    22  116   53.88)
(sat.ddfw       1      1   30.1017    160000       784          5            1       17)
(smt.stats   13   1583  38145  41429  3231/2927/284    2273/482    23  116   53.98)
ramon: poll                 wall=2.000s usage=2.191s mem=56232KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   26.2701    220001      1078          6            1       23)
(smt.stats   14   1730  41843  46591  3589/3068/284    2507/558    24  125   54.27)
ramon: poll                 wall=3.000s usage=3.189s mem=56636KiB load=1.00 rootload=1.00
(smt.stats   15   1831  44754  52310  3674/3404/284    2664/563    24  125   54.36)
(sat.ddfw       1      1   23.2945    290001      1421          7            1       30)
(smt.stats   16   1942  47001  55830  3817/3457/285    2860/615    25  126   54.46)
(smt.stats   17   2064  49641  60820  3865/3627/286    3109/615    25  126   54.46)
(sat.ddfw       1      1   20.9314    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.190s mem=56812KiB load=1.00 rootload=1.00
(smt.stats   18   2198  54553  68339  3884/3645/287    3284/722    26  129   54.65)
(smt.stats   19   2345  59344  80769  3932/3669/287    3521/737    27  132   54.65)
(smt.stats   20   2507  62637  88963  3991/3742/287    3835/738    27  132   54.82)
(sat.ddfw       1      1   18.9195    460001      2254          9            1       47)
(smt.stats   21   2608  65981  95561  3996/3766/287    4023/738    27  132   54.92)
ramon: poll                 wall=5.000s usage=5.189s mem=57100KiB load=1.00 rootload=0.99
(smt.stats   22   2719  70372 106702  4013/3782/287    4222/739    27  132   55.02)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 4096 := 1373884832&16247732225
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 4096 := 1373884832&16247732225
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 4096 := 1373884832&16247814145
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 4096 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8192 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 16384 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 32768 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 65536 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 131072 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 131072 := 1373884832&16247818241
(smt.stats   23   2841  73558 115524  4137/3792/287    4443/742    27  132   55.16)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 65536 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 4096 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 4096 := 1373884832&16247818241
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8192 := 1373884832&16247851009
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 16384 := 1373884832&16247851009
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 32768 := 1373884832&16247851009
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8192 := 1373884832&16247851009
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 16384 := 1373884832&16247851009
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 32768 := 1373884832&16247851009
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8192 := 1373884832&16247864833
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8192 := 1373884832&16247860737
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 16384 := 1373884832&16247851009
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8192 := 1373884832&16247832065
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8192 := 1373884832&16247827969
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 16384 := 1373884832&16247827969
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 32768 := 1373884832&16247827969
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 65536 := 1373884832&16247830529
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 69632 := 1373884832&16247830529
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 135168 := 1373884832&16247830529
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 266240 := 1373884832&16247832065
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 397312 := 1373884832&16247832065
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 659456 := 1373884832&16247832065
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 462848 := 1373884832&16247832065
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 397312 := 1373884832&16247832065
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 397312 := 1373884832&16247830529
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 135168 := 1373884832&16247830529
(smt.stats   24   2975  75781 123735  4262/3890/312    4718/896    28  137   55.36)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459008 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459008 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459008 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 475392 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 475392 := 2747769665&13421772544
(smt.stats   25   3122  81646 138228  4315/4042/387    5010/901    28  137   55.57)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459008 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459008 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459008 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 460032 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459008 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459520 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 467712 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 467712 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 369408 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 255967 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 255967 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 255967 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 238336 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 238336 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 434944 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 434944 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 434944 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 500480 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 500480 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 500480 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 500480 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1042398 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1042368 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1024768 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1024768 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1024768 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 516864 := 2747769665&13421772544
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 238336 := 2747769665&13421772576
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 238336 := 2747769665&13421772576
(sat.ddfw       1      1   17.2801    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3283  86150 160143  4592/4090/397    5335/1015    29  154   55.76)
ramon: poll                 wall=6.000s usage=6.159s mem=58096KiB load=0.97 rootload=0.97
(smt.stats   27   3460  89682 174584  5097/4870/455    6024/1254    31  181   56.05)
(smt.stats   28   3561  93243 187311  5097/4870/455    6750/1259    31  181   56.35)
(smt.stats   29   3672  99426 204839  5122/4878/455    7018/1261    31  181   56.44)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 458944 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 458946 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 458946 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 458910 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 458882 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 458882 := 5495539331&17179861970
(smt.stats   30   3794 104617 228728  5214/4903/455    7448/1266    31  181   56.54)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459266 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459394 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 459394 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 475650 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 475778 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1001090 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1001090 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1001118 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1001098 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1001106 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1001094 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1000970 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1000978 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1000978 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1000970 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1001106 := 5495539331&17179861970
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 1001162 := 5495539331&17179861970
(smt.stats   31   3929 107408 243089  5446/5209/511    7828/1852    32  182   56.75)
(sat.ddfw       1      1   15.8822    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.159s mem=58920KiB load=1.00 rootload=1.00
(smt.stats   32   4076 112784 256545  5557/5217/511    8437/1860    32  182   56.94)
ramon: poll                 wall=8.000s usage=8.140s mem=59172KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   14.7077    790001      3872         12            1       80)
(smt.stats   33   4237 117819 274916  5732/5445/512    8691/2071    33  203   57.21)
ramon: poll                 wall=9.002s usage=9.134s mem=60072KiB load=0.99 rootload=1.00
(smt.stats   34   4414 122967 283573  6151/5627/512    8978/2125    34  205   57.41)
(sat.ddfw       1      1   13.6311    920001      4509         13            1       93)
ramon: poll                 wall=10.010s usage=10.114s mem=60124KiB load=0.97 rootload=0.97
(smt.stats   35   4608 127927 302312  6309/5977/512    9676/2128    34  205   57.41)
(smt.stats   36   4709 132084 313776  6369/6089/512    9936/2131    34  205   57.50)
ramon: poll                 wall=11.000s usage=11.106s mem=60156KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7702   1060001      5196         14            1      108)
(smt.stats   37   4820 137045 331758  6560/6163/512   10454/2134    34  205   57.60)
ramon: poll                 wall=12.000s usage=12.085s mem=60236KiB load=0.98 rootload=0.98
(smt.stats   38   4942 141545 349867  6729/6361/512   11044/2136    34  205   57.95)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(sat.ddfw       1      1   11.9351   1210001      5931         15            1      123)
ramon: poll                 wall=13.018s usage=13.074s mem=60152KiB load=0.97 rootload=0.97
(smt.stats   39   5076 145635 370307  6837/6508/513   11386/2705    35  214   57.95)
ramon: poll                 wall=14.000s usage=14.013s mem=60312KiB load=0.96 rootload=0.96
(smt.stats   40   5223 150658 394282  7125/6658/513   11840/2710    35  214   58.15)
(sat.ddfw       1      1   11.2021   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=15.011s mem=60480KiB load=1.00 rootload=0.99
(smt.stats   41   5384 155664 422619  7332/7050/514   12283/2937    36  217   58.28)
(smt.stats   42   5561 160362 444467  7422/7159/519   12908/2941    36  217   58.38)
ramon: poll                 wall=16.000s usage=16.014s mem=60876KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   10.6038   1540001      7549         17            1      156)
(smt.stats   43   5755 167545 492992  7578/7208/519   13337/3139    37  244   58.47)
ramon: poll                 wall=17.000s usage=17.011s mem=61024KiB load=1.00 rootload=0.99
(smt.stats   44   5968 174092 535356  7698/7424/521   13712/3241    38  259   58.57)
(smt.stats   45   6069 177533 555060  7739/7497/521   14018/3243    38  259   58.66)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6180 182659 598175  7754/7525/522   14244/3418    39  267   58.88)
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8 := 40&1552
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8 := 40&1544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 184399679209866760 := 18507272756 << 5
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8 := 40&1544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 184399679209866760 := 18507272756 << 5
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8 := 40&1544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 184399679209866760 := 18507272756 << 5
band: (band[34] (if (= #288 63) 1 (if #532 2 #745)) (shl[64] (* 2 #102) (mod #760 64))) 8 := 40&1544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 33 #752 #756) 64)) 184399679209866760 := 18507272756 << 5
(smt.stats   47   6302 187410 621251  7866/7546/522   14598/3430    39  267   58.98)
(sat.ddfw       1      1   10.0801   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=18.011s mem=61568KiB load=1.00 rootload=1.00
(smt.stats   48   6436 191382 643945  7945/7669/533   15196/3518    40  269   59.07)
ramon: poll                 wall=19.000s usage=19.010s mem=61608KiB load=1.00 rootload=1.00
(smt.stats   49   6583 197203 660013  8108/7715/534   15600/3519    40  269   59.26)
(sat.ddfw       1      1   9.60372   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=20.010s mem=62072KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:19:17 2024
ramon: root.execname        z3
ramon: root.utime           20.060s
ramon: root.stime           0.010s
ramon: group.total          20.076s
ramon: group.utime          20.060s
ramon: group.stime          0.016s
ramon: group.mempeak        62076KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.00
