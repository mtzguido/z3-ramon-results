ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:41:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29661 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1401
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/85LjQekY5nZb.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             273652
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   252/252     0/0  61       0    18.52   0.00)
(sat.stats    103    604    0   252/252   103/31  61       0    18.86   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    604    0   252/252   103/31  61       0    18.86   0.01)
(sat.stats    103    604    0   252/252   103/31  61       0    18.86   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 391618.86 :time 0.00)
(sat.stats    103    604    0   254/254    39/30  61       0    18.86   0.01)
(sat.stats    169   1599    1   254/254   105/84  61       0    18.96   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    172   1676    2   254/254   108/84  61       0    18.96   0.01)
(sat.stats    175   1755    3   254/254   111/84  61       0    18.96   0.01)
(sat.stats    178   1832    4   254/254   114/84  61       0    18.96   0.01)
(sat.stats    181   1908    5   254/254   117/84  61       0    18.96   0.01)
(sat.stats    184   1993    6   254/254   120/84  61       0    18.96   0.01)
(sat.stats    187   2070    7   254/254   123/84  61       0    18.96   0.01)
(sat.stats    190   2130    8   254/254   126/84  61       0    18.96   0.01)
(sat.stats    193   2195    9   254/254   129/86  61       0    18.96   0.01)
(sat.stats    196   2203   10   254/254   132/89  61       0    18.96   0.01)
(sat.stats    199   2211   11   254/254   135/92  61       0    18.96   0.01)
(sat.stats    202   2214   12   254/254   138/95  61       0    18.96   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    211   2232   15   254/254   147/104  61       0    18.96   0.01)
(sat.stats    322   3578   17   256/256   258/174  61       0    19.25   0.02)
(sat.stats    526   8001   43   260/260   462/252  61       0    19.73   0.08)
(sat.stats    722  11206   57  2388/2388   665/267  61       0    20.29   0.45)
ramon: poll                 wall=1.000s usage=0.941s mem=22352KiB load=0.94 rootload=0.93
(sat.stats   1066  24271  117  5056/5056  1025/301  61       0    21.22   1.09)
 (sat-cleaner :elim-literals 19 :elim-clauses 7 :cost 13917 :time 0.00)
 (sat-cleaner :elim-literals 9 :elim-clauses 2 :cost 15668 :time 0.00)
 (sat-cleaner :elim-literals 112 :elim-clauses 1 :cost 16361 :time 0.00)
(sat.stats   1761  46233  216  7448/7448  1715/476  78       0    22.22   1.80)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 18735 :time 0.00)
ramon: poll                 wall=2.000s usage=1.941s mem=23376KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 17 :elim-clauses 2 :cost 20720 :time 0.00)
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 0&576460752303423487
lshr: (lshr[64] (* 8 (bv2int %0)) (mod (+ 63 #616 #620) 64)) 1152921504606846563 := 9223372036854775680 >>l 63
lshr: (lshr[60] (bv2int %0) (+ 60 (* 1152921504606846975 #56))) 10 := 1152921504606846972 >>l 48
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 4069 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 4064 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 4052 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 4050 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 4056 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 4048 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
lshr: (lshr[64] (* 8 (bv2int %0)) (mod (+ 63 #616 #620) 64)) 0 := 9223372036854775776 >>l 51
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 4087 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 4094 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 4092 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 4088 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 4080 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 1376 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 128 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 2112 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 256 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 2560 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 1024 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 4095&1152921504606842880
band: (band[60] (if (= #334 63) 5316911983139663482391856204266602496 (if #464 2658455991569831741195928102133301248 #461)) (lshr[64] (* 8 #55) (mod #623 64))) 2048 := 1152921504606842880&4095
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 1536 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 64 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 384 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 256 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 2048 := 4095&1152921504606842880
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 1024 := 4095&1152921504606842880
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   2401  69580  321  8609/8603  2414/761  84       0    23.22   2.18)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 25055 :time 0.00)
lshr: (lshr[60] (bv2int %0) (+ 60 (* 1152921504606846975 #56))) 4095 := 1152921504606846961 >>l 59
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #485)) (if (= #82 59) 332306998946228967649491012766662656 (if #489 166153499473114483824745506383331328 #605))) 0 := 1&1152921504606846974
lshr: (lshr[64] (* 8 (bv2int %0)) (mod (+ 63 #616 #620) 64)) 4095 := 9223372036854775688 >>l 62
ramon: poll                 wall=3.000s usage=2.940s mem=31056KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.939s mem=32080KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.938s mem=34892KiB load=1.00 rootload=1.00
(sat.stats   3630  82811  333 63538/63532  4422/2067 273       0    34.43   5.01)
ramon: poll                 wall=6.000s usage=5.938s mem=36552KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.937s mem=37832KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.936s mem=39108KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.936s mem=42324KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.935s mem=42324KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.934s mem=43348KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.934s mem=46676KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.933s mem=53396KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.932s mem=60304KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.932s mem=68752KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.932s mem=75152KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.932s mem=81552KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.931s mem=83344KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.929s mem=83856KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.928s mem=84948KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:42:02 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          19.994s
ramon: group.utime          19.942s
ramon: group.stime          0.052s
ramon: group.mempeak        85028KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
