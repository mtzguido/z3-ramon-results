ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:43:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42507 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/B6fA256Hdss9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2842627
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3988    400  1154/1010/113      98/10    11   17   19.15)
(smt.stats    1    202   6188   1138  1747/1552/115     202/14    12   19   19.25)
(smt.stats    2    313   6639   1338  1813/1618/115     320/17    13   20   19.72)
(smt.stats    3    414   9397   1985  2060/1854/115     436/17    13   20   19.72)
(smt.stats    4    525  10171   2711  2259/2079/120     549/63    15   26   19.82)
ramon: poll                 wall=1.000s usage=0.998s mem=20992KiB load=1.00 rootload=0.99
(smt.stats    5    647  12913   4647  2547/2322/126     698/71    16   28   19.92)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  16155   6973  2600/2364/126     827/70    17   40   19.92)
(smt.stats    7    859  18305   9467  2721/2453/127     960/104    18   41   20.01)
(smt.stats    8    981  19818  11926  2758/2521/130    1107/123    19   43   20.01)
(smt.stats    9   1115  21336  15077  2886/2646/137    1237/150    20   50   20.11)
(smt.stats   10   1216  25010  17044  2895/2673/137    1331/155    21   52   20.11)
(smt.stats   11   1327  29807  24878  2902/2681/141    1462/186    23   58   20.20)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32860  29220  2905/2686/143    1589/188    25   61   20.20)
(smt.stats   13   1583  35316  32161  2927/2688/148    1738/189    25   61   20.30)
(smt.stats   14   1730  37269  35183  2989/2745/148    1900/203    26   66   20.30)
(smt.stats   15   1831  38467  37682  3031/2787/148    2011/203    26   66   20.30)
(smt.stats   16   1942  40150  40670  3048/2818/148    2140/203    26   66   20.30)
ramon: poll                 wall=2.002s usage=2.000s mem=21496KiB load=1.00 rootload=1.00
(smt.stats   17   2064  42934  45280  3063/2832/148    2267/204    26   66   20.39)
(smt.stats   18   2198  44161  48121  3094/2870/148    2419/204    26   66   20.39)
(smt.stats   19   2345  46133  53936  3120/2880/148    2598/204    26   66   20.39)
(smt.stats   20   2506  47954  58427  3200/2905/148    2766/206    26   66   20.49)
(smt.stats   21   2607  49655  61475  3215/2997/149    2879/297    27   73   20.49)
(smt.stats   22   2718  50563  65438  3250/2998/149    3007/298    27   73   20.49)
(smt.stats   23   2840  51687  70316  3304/3039/150    3163/298    27   73   20.49)
(smt.stats   24   2974  53677  74251  3326/3088/150    3299/318    28   75   20.49)
(smt.stats   25   3121  55092  81179  3331/3109/150    3451/318    28   75   20.67)
(smt.stats   26   3282  57478  87406  3372/3115/150    3625/319    28   75   20.67)
ramon: poll                 wall=3.000s usage=2.998s mem=21832KiB load=1.00 rootload=1.00
(smt.stats   27   3459  60293  91433  3391/3167/150    3803/320    28   75   20.67)
(smt.stats   28   3560  61390  94759  3406/3177/150    3904/320    28   75   20.67)
(smt.stats   29   3671  61978  98055  3411/3192/150    4024/320    28   75   20.67)
(smt.stats   30   3793  62721 101827  3417/3198/150    4144/320    28   75   20.76)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 0&4095
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 4398046511104 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 0&4095
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 74766790688768 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 1 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 4095 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 4094 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 4092 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 4088 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 16 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 32 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 64 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 128 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 256 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 512 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1024 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 2048 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 2048 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 2048 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4095 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1088 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 10992704 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 10993664 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1088 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 10993664 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1152 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1280 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 10993664 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1152 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 10993664 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1088 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 10993153 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4096 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 10993407 := 17179871868 << 12
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1536 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1024 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 1 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 1 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 2 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 36 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 4 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 34 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 33 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 20 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 20 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 20 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 264 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 264 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 264 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 272 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 272 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 288 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 288 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 10993664&4095
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 256 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 1 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 2 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 4 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 8 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 16 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 32 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 64 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 128 := 10993664&4095
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 256 := 10993664&4095
(smt.stats   31   3927  63917 106455  3666/3232/187    4341/366    29   83   21.37)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  67681 113763  3725/3475/322    4594/372    29   83   21.47)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 1&15
(smt.stats   33   4237  74010 126889  3723/3495/326    4838/527    31  127   21.71)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 160&15
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 36028797018964128 := 17179871818 << 4
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 160&15
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 160 := 17179871818 << 4
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 160&15
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 160 := 17179871818 << 4
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 274877949088&15
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 17179873283 := 17179871818 << 4
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 274877949088&15
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 17179873283 := 17179871818 << 4
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 274877949088&15
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 2 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 274877949088&15
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 2 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 274877949088&15
band: (band[42] (shl[42] (bv2int %0) (mod #106 42)) (if (= #585 41) 1 (if #587 3 #702))) 2 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 1 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 2 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 2 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 4 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 4 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 8 := 274877949088&15
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 8 := 274877949088&15
(smt.stats   34   4414  77296 135172  3902/3543/342    5156/551    31  127   21.80)
ramon: poll                 wall=4.000s usage=3.998s mem=23412KiB load=1.00 rootload=0.99
(smt.stats   35   4608  78888 141060  4114/3715/360    5458/646    32  137   22.48)
ramon: poll                 wall=5.000s usage=4.997s mem=23932KiB load=1.00 rootload=1.00
(smt.stats   36   4709  79946 143319  4293/3947/360    5613/646    32  137   22.48)
(smt.stats   37   4820  82792 154531  4341/4062/360    5764/648    32  137   22.48)
(smt.stats   38   4942  86177 166055  4372/4120/361    5929/764    33  154   22.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076  89408 175392  4436/4157/365    6247/788    34  156   22.58)
(smt.stats   40   5223  90831 182662  4458/4219/365    6420/788    34  156   22.67)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 3225234108600&63
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 95584210841784 := 17179868124 << 6
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 3225234108600&63
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 95584210841784 := 17179868124 << 6
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 3225234108600&63
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 95584210841784 := 17179868124 << 6
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479512&63
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479512&63
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479512&63
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479512&63
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479528&63
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479544&63
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 94351254212728 := 17179868124 << 6
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479560&63
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479576&63
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 1992277479608&63
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 94351254212792 := 17179868124 << 6
(smt.stats   41   5384  92572 188419  4621/4223/365    6762/918    35  165   22.77)
ramon: poll                 wall=6.000s usage=5.997s mem=24044KiB load=1.00 rootload=0.99
(smt.stats   42   5561  98124 206080  4649/4399/383    7255/1131    36  173   22.77)
ramon: poll                 wall=7.000s usage=6.997s mem=24600KiB load=1.00 rootload=1.00
(smt.stats   43   5755 100422 216988  4834/4415/383    7508/1138    36  173   23.05)
(smt.stats   44   5970 102948 230204  5308/5067/385    8135/1167    37  178   23.15)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 96&3
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 92358976733280 := 2 << 2
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 96&3
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 96757023244384 := 2 << 2
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 96&3
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 96757023244384 := 2 << 2
(smt.stats   45   6071 104671 238093  5357/5087/387    8358/1371    38  194   23.35)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 8&3
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 0 := 2 << 2
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 8&3
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 0 := 2 << 2
(smt.stats   46   6182 105837 245157  5509/5224/399    8638/1372    38  194   23.65)
ramon: poll                 wall=8.000s usage=7.997s mem=25112KiB load=1.00 rootload=1.00
(smt.stats   47   6304 109285 255785  5642/5264/400    9009/1423    39  210   23.84)
(smt.stats   48   6438 113315 274036  5741/5448/401    9863/1515    40  217   23.93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   49   6585 115366 284540  5788/5458/402   10250/1516    40  217   24.03)
(smt.stats   50   6746 119103 297428  5990/5523/402   10776/1518    40  217   24.12)
(smt.stats   51   6923 123146 318183  6367/5731/402   11476/1609    41  231   24.31)
(smt.stats   52   7117 128159 334258  6466/6123/403   12403/1612    41  231   24.50)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 5 := 159&7
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 5 := 159&7
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 5 := 159&7
(smt.stats   53   7330 132720 352896  6853/6206/403   13062/1786    42  239   24.79)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 3 := 159&7
ramon: poll                 wall=9.000s usage=8.997s mem=26392KiB load=1.00 rootload=1.00
(smt.stats   54   7564 137268 373276  7230/6555/409   14013/1790    42  239   24.89)
(smt.stats   55   7665 138760 386828  7420/6929/414   14373/1883    43  243   25.09)
(smt.stats   56   7776 140932 395677  7515/7112/415   15077/1885    43  243   25.18)
(smt.stats   57   7898 144236 427749  7713/7251/415   15669/1899    43  243   25.28)
(smt.stats   58   8032 147464 445618  7765/7424/426   16874/2103    44  249   25.38)
ramon: poll                 wall=10.000s usage=9.997s mem=27160KiB load=1.00 rootload=1.00
(smt.stats   59   8179 153089 468687  7854/7474/426   17252/2104    44  249   25.57)
(smt.stats   60   8340 157160 493136  7898/7577/429   17721/2320    45  288   25.57)
(smt.stats   61   8517 161972 518277  7983/7634/430   19623/2325    45  288   25.89)
ramon: poll                 wall=11.000s usage=10.994s mem=27672KiB load=1.00 rootload=1.00
(smt.stats   62   8711 167852 539949  8060/7687/430   20038/2539    46  294   26.08)
ramon: poll                 wall=12.002s usage=11.998s mem=27928KiB load=1.00 rootload=1.00
(smt.stats   63   8924 177682 576355  8161/7775/430   20960/2543    46  294   26.37)
(smt.stats   64   9158 189252 621218  8189/7880/430   21477/2543    46  294   26.37)
ramon: poll                 wall=13.000s usage=12.994s mem=28184KiB load=1.00 rootload=1.00
(smt.stats   65   9415 199769 681277  8356/7887/431   22602/2740    47  301   26.56)
(smt.stats   66   9516 202968 695348  8395/8082/431   22966/2740    47  301   26.75)
(smt.stats   67   9627 208348 729813  8401/8084/431   23591/2742    47  301   26.65)
(smt.stats   68   9749 211152 744026  8467/8088/431   23987/2745    47  301   26.75)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   69   9883 213703 769022  8734/8189/431   24738/2745    47  301   26.85)
ramon: poll                 wall=14.002s usage=13.998s mem=28720KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 174)
(smt.stats   70  10030 215068 780534  8770/8424/431   24930/2745    47  301   26.95)
(smt.stats   71  10191 217503 805768  8784/8470/432   25278/3095    48  307   27.14)
(smt.stats   72  10368 222717 880811  8806/8490/432   25729/3095    48  307   27.32)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 56&1099511627775
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 299067162755128 := 82 << 40
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 56 := 56&1099511627775
shl: (shl[64] (bv2int %0) (mod (+ #106 #328) 64)) 8796093022264 := 82 << 40
(smt.stats   73  10562 224990 906276  8840/8496/433   26897/3159    49  308   27.42)
(smt.stats   74  10775 231861 951980  8928/8533/438   27528/3167    49  308   27.61)
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 11005352&131071
band: (band[42] (shl[64] (bv2int %0) (mod #329 64)) (if (= #721 63) 0 (if #723 1 #867))) 0 := 11005352&131071
(smt.stats   75  11009 239152 988052  9104/8649/438   28788/3399    50  309   27.71)
ramon: poll                 wall=15.002s usage=14.998s mem=29292KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11266 248916 1086623  9186/8815/443   29326/3401    50  309   27.90)
(smt.stats   77  11548 261474 1183120  9217/8891/443   30484/3560    51  310   27.90)
(smt.stats   78  11649 265936 1221809  9237/8911/443   30725/3560    51  310   28.00)
ramon: poll                 wall=16.000s usage=15.994s mem=29804KiB load=1.00 rootload=1.00
(smt.stats   79  11760 270848 1252979  9252/8928/444   31091/3863    52  317   28.09)
(smt.stats   80  11882 276339 1280336  9271/8938/444   31622/3863    52  317   28.09)
(smt.stats   81  12016 281241 1291559  9349/8982/444   31976/3863    52  317   28.19)
ramon: poll                 wall=17.000s usage=16.994s mem=30060KiB load=1.00 rootload=1.00
(smt.stats   82  12163 287888 1315326  9457/9068/444   32465/3864    52  317   28.28)
(smt.stats   83  12324 294560 1346713  9617/9292/446   33038/4098    53  325   28.37)
ramon: poll                 wall=18.000s usage=17.994s mem=30316KiB load=1.00 rootload=1.00
(smt.stats   84  12501 298830 1380814  9634/9306/446   33845/4098    53  325   28.47)
(smt.stats   85  12695 307037 1446708  9640/9320/446   34109/4098    53  325   28.47)
(smt.stats   86  12908 316660 1508649  9648/9328/447   34844/4318    54  340   28.57)
ramon: poll                 wall=19.000s usage=18.994s mem=30316KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.994s mem=30572KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:43:54 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.004s
ramon: group.utime          19.980s
ramon: group.stime          0.024s
ramon: group.mempeak        30828KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
