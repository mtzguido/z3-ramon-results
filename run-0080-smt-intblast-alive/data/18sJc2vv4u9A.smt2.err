ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:23:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31029 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1291
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/18sJc2vv4u9A.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4022165
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3351   2979  1288/1161/111      92/13     6   17   19.27)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 2 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 288230376151711741&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 288230376151711741&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 288230376151711740&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 288230376151711740 := 288230376151711741 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 2 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 2 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 2 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 0 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 31 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 30 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 64&31
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 96 := 1 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 64&31
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 96 := 1 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 63&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 8&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 288230376151711744 := 4503599627370497 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&31
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4503599627370497 := 4503599627370496 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&31
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 288230376151711743 := 4503599627370496 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 30 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 30 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 16 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 4 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 16 := 64&31
(smt.stats    1    202   4202   4066  2031/1797/134     201/22     8   19   19.56)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 28 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 16 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335741504&31
(smt.stats    2    313   4586   4756  2063/1864/190     322/34    10   36   21.22)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335742144&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 9 := 4575085335742144&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335742144&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335742144&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335749504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 16 := 4575085335749504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335749504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 16 := 4575085335749504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335749440&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 17 := 4575085335749440&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335749440&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 16 := 4575085335749440&31
(smt.stats    3    414   5758   8592  2508/2313/207     439/52    11   40   20.55)
(smt.stats    4    525   6299  10092  2867/2640/211     499/80    13   59   20.64)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741517&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741520&3
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 4575085335741520 := 4575085335741516 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741521&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741520&3
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 4575085335741520 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932144&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745344 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932144&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745344 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932144&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745344 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932136&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745280 := 4575085335741517 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932144&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745280 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335745792&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 4575085335745792&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335745792&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 4575085335745792&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335745792&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 4575085335745792&3
(smt.stats    5    647   8199  12714  2946/2655/211     627/86    13   59   20.83)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685968386&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685968386&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 36600682685968386&3
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 36600682685968386 := 571885666968256 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 36600682685931976&3
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   9584  14906  3029/2792/242     734/122    15   65   20.93)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932032&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932056&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346232&562949953421311
(smt.stats    7    859  11965  18870  3412/3120/287     878/159    17   77   21.13)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346232&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346232&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346968&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346968&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346328&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043347992&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043347992&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043351320&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043350936&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043349272&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043349784&562949953421311
(smt.stats    8    981  13084  21995  3571/3299/347    1049/170    19   94   21.52)
(smt.stats    9   1115  15815  27771  3615/3341/351    1167/223    21  148   21.61)
(smt.stats   10   1216  18975  33667  3704/3396/353    1344/231    22  148   21.71)
ramon: poll                 wall=1.000s usage=0.962s mem=23036KiB load=0.96 rootload=0.94
(smt.stats   11   1327  25397  40077  3797/3460/354    1609/272    23  148   21.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  29199  51504  3916/3630/357    2058/303    25  154   21.90)
(smt.stats   13   1583  33853  57690  3998/3644/362    2281/349    26  164   21.99)
(smt.stats   14   1730  39309  69242  4121/3833/364    2761/406    28  166   22.12)
(smt.stats   15   1831  42653  79441  4206/3880/364    2953/407    28  166   22.22)
(smt.stats   16   1942  46640  89464  4306/4000/368    3502/469    29  169   22.31)
(smt.stats   17   2064  51514 109381  4320/4014/378    3734/503    30  172   22.41)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 528&3
(smt.stats   18   2198  55738 128126  4350/4033/378    3957/504    31  174   22.50)
ramon: poll                 wall=2.000s usage=1.961s mem=23852KiB load=1.00 rootload=1.00
(smt.stats   19   2345  61031 143347  4370/4060/386    4117/522    32  175   22.50)
(smt.stats   20   2506  64910 155402  4395/4082/390    4330/546    34  199   22.60)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 260 := 288&2047
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 260 := 288&2047
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 260 := 288&2047
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 260 := 288&2047
(smt.stats   21   2607  68219 167977  4539/4095/390    4547/557    34  199   22.69)
(smt.stats   22   2718  70419 179508  4743/4241/395    5045/647    35  211   22.89)
(smt.stats   23   2840  73351 193473  5012/4454/395    5390/682    36  211   23.08)
(smt.stats   24   2974  75732 206629  5208/4900/396    6255/715    37  215   23.18)
(smt.stats   25   3121  78143 215042  5294/4928/401    6665/715    37  215   23.27)
(smt.stats   26   3282  81343 241761  5530/5045/401    7298/804    38  219   23.47)
(smt.stats   27   3459  84735 255473  5777/5427/401    7652/808    38  219   23.47)
ramon: poll                 wall=3.000s usage=2.961s mem=24828KiB load=1.00 rootload=1.00
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 9150170671483680&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 9150170671483680&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 9150170671483680&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 9150170671483680&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 9150170671483680&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 9150170671483680&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 9150170671483680&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 9150170671483680&3
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560  86180 262582  5825/5511/403    8356/1022    39  225   23.57)
(smt.stats   29   3671  88159 288156  5868/5531/403    8480/1024    39  225   23.72)
(smt.stats   30   3793  90979 300513  5926/5616/404    9085/1058    40  230   23.81)
(smt.stats   31   3928  94535 323607  5977/5667/410    9419/1122    41  252   23.81)
(smt.stats   32   4075 100000 341015  6046/5669/411   10552/1124    41  252   24.00)
ramon: poll                 wall=4.000s usage=3.961s mem=25456KiB load=1.00 rootload=1.00
(smt.stats   33   4236 105046 366021  6154/5785/414   11099/1302    42  263   24.10)
(smt.stats   34   4413 109543 397439  6323/6013/415   11469/1457    44  283   24.10)
(smt.stats   35   4607 116663 420506  6384/6023/415   12084/1458    44  283   24.20)
ramon: poll                 wall=5.000s usage=4.961s mem=25692KiB load=1.00 rootload=1.00
(smt.stats   36   4708 121437 438956  6426/6084/416   12290/1533    45  289   24.29)
(smt.stats   37   4820 125358 469192  6515/6134/416   12704/1535    45  289   24.29)
(smt.stats   38   4942 128523 484538  6633/6216/416   13415/1538    45  289   24.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   39   5076 132865 498692  6693/6324/416   13950/1538    45  289   24.48)
(smt.stats   40   5223 137832 531318  6823/6396/417   14312/1803    46  291   24.57)
(smt.stats   41   5384 140237 557774  6838/6528/417   14607/1803    46  291   24.57)
ramon: poll                 wall=6.000s usage=5.961s mem=26232KiB load=1.00 rootload=1.00
(smt.stats   42   5561 143703 582898  6876/6532/417   15250/1804    46  291   24.67)
(smt.stats   43   5755 148311 605224  7089/6603/417   15813/1811    46  291   24.77)
(smt.stats   44   5968 153228 623504  7297/6987/420   16399/2103    47  300   24.96)
ramon: poll                 wall=7.000s usage=6.961s mem=26404KiB load=1.00 rootload=1.00
(smt.stats   45   6069 155779 637372  7438/6988/426   16764/2107    47  300   25.05)
(smt.stats   46   6180 158677 657281  7596/7180/426   17135/2109    47  300   25.05)
(smt.stats   47   6302 163660 709023  7619/7311/427   17475/2280    49  313   25.29)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6436 168165 748829  7630/7322/427   17791/2280    49  313   25.29)
(smt.stats   49   6583 170886 767996  7656/7348/429   18877/2383    50  313   25.48)
ramon: poll                 wall=8.001s usage=7.960s mem=26940KiB load=1.00 rootload=1.00
(smt.stats   50   6744 175617 794097  7716/7351/429   19802/2386    50  313   25.58)
(smt.stats   51   6921 180608 823874  7926/7419/429   20525/2536    51  330   25.77)
(smt.stats   52   7115 185926 855791  8015/7627/429   20945/2540    51  330   25.77)
ramon: poll                 wall=9.000s usage=8.959s mem=27268KiB load=1.00 rootload=0.99
(smt.stats   53   7328 189894 883862  8290/7728/430   21196/2679    52  330   25.87)
(smt.stats   54   7562 195724 924065  8398/8003/430   22038/2682    52  330   25.96)
(smt.stats   55   7663 199626 955963  8452/8092/430   22245/2683    52  330   25.96)
(smt.stats   56   7774 204039 998012  8477/8157/430   22485/2683    52  330   25.96)
ramon: poll                 wall=10.000s usage=9.959s mem=27440KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7896 209851 1022761  8517/8172/430   23106/2686    52  330   26.06)
(smt.stats   58   8030 212413 1031655  8580/8239/430   23492/2687    52  330   26.15)
(smt.stats   59   8177 214717 1049829  8685/8299/431   23653/3014    53  331   26.15)
(smt.stats   60   8338 219280 1095431  8868/8396/431   24099/3019    53  331   26.26)
ramon: poll                 wall=11.000s usage=10.959s mem=27784KiB load=1.00 rootload=1.00
(smt.stats   61   8515 222986 1127418  9060/8571/431   24873/3024    53  331   26.36)
(smt.stats   62   8709 227547 1154439  9272/8769/431   25541/3026    53  331   26.63)
(smt.stats   63   8922 232526 1181461  9559/9012/431   26185/3030    53  331   26.63)
ramon: poll                 wall=12.000s usage=11.958s mem=28188KiB load=1.00 rootload=1.00
(smt.stats   64   9156 238364 1238162  9580/9263/431   27390/3031    53  331   26.91)
(smt.stats   65   9413 242021 1261775  9735/9425/433   27679/3525    54  351   27.01)
(smt.stats   66   9514 243503 1274810  9860/9502/434   27802/3530    54  351   27.01)
(smt.stats   67   9625 244972 1305081  9913/9549/434   28019/3530    54  351   27.11)
(smt.stats   68   9747 246945 1338161  9971/9607/434   28142/3533    54  351   27.11)
(smt.stats   69   9881 249015 1375769 10097/9682/434   28274/3551    55  368   27.11)
ramon: poll                 wall=13.000s usage=12.958s mem=28540KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 789)
(smt.stats   70  10028 251545 1413736 10184/9791/434   27986/3553    55  368   27.20)
(smt.stats   71  10189 253586 1445058 10230/9865/434   28238/3554    55  368   27.20)
(smt.stats   72  10366 256680 1501378 10279/9913/434   28435/3558    55  368   27.20)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2176&0
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 17005592192950995072 := 288230376151711550 << 1
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2176&0
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1152921504606849152 := 41175768021673107 << 1
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2176&0
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1152921504606849152 := 41175768021673107 << 1
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2176&0
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1441151880758560896 := 41247253730044066 << 1
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2176&0
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1441151880758560896 := 41247253730044066 << 1
(smt.stats   73  10560 259188 1533366 10420/9967/434   28707/3559    55  368   27.35)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   74  10773 262211 1573830 10532/10100/439   29303/3749    56  369   27.35)
(smt.stats   75  11007 264630 1600452 10578/10211/439   29748/3751    56  369   27.45)
ramon: poll                 wall=14.000s usage=13.958s mem=28900KiB load=1.00 rootload=1.00
(smt.stats   76  11264 273361 1652595 10587/10250/439   30169/3787    57  369   27.71)
(smt.stats   77  11546 281683 1729010 10604/10267/440   31575/3939    58  375   27.81)
(smt.stats   78  11647 285457 1742654 10651/10268/440   31821/3940    58  375   27.91)
(smt.stats   79  11758 288488 1772343 10666/10329/440   32255/3940    58  375   27.91)
(smt.stats   80  11880 292833 1835624 10680/10330/440   32513/3940    58  375   28.00)
ramon: poll                 wall=15.000s usage=14.958s mem=29560KiB load=1.00 rootload=1.00
(smt.stats   81  12014 295456 1871614 10729/10354/440   32859/3940    58  375   28.10)
(smt.stats   82  12161 298990 1896728 10794/10396/440   33279/3942    58  375   28.10)
(smt.stats   83  12322 301824 1944835 11163/10545/440   33727/3947    58  375   28.28)
(smt.stats   84  12499 304784 1984191 11285/10845/440   34380/3949    58  375   28.28)
ramon: poll                 wall=16.001s usage=15.959s mem=30076KiB load=1.00 rootload=1.00
(smt.stats   85  12693 314288 2040836 11405/10959/440   35101/3953    58  375   28.47)
(smt.stats   86  12906 325160 2118858 11729/11095/442   35955/4263    59  383   28.66)
ramon: poll                 wall=17.000s usage=16.957s mem=30296KiB load=1.00 rootload=1.00
(smt.stats   87  13140 334116 2164174 12022/11655/445   36577/4340    60  387   28.66)
(smt.stats   88  13397 348435 2287612 12076/11721/445   38352/4340    60  387   28.86)
ramon: poll                 wall=18.000s usage=17.957s mem=30592KiB load=1.00 rootload=1.00
(smt.stats   89  13679 363114 2446848 12116/11745/445   39635/4831    61  387   29.05)
(smt.stats   90  13989 371348 2504243 12179/11828/448   40834/4999    62  389   29.17)
(smt.stats   91  14090 375873 2531549 12191/11832/449   41400/5001    62  389   29.31)
(smt.stats   92  14201 381250 2567922 12253/11851/449   41583/5206    63  412   29.31)
ramon: poll                 wall=19.000s usage=18.957s mem=30856KiB load=1.00 rootload=1.00
(smt.stats   93  14323 385583 2612979 12344/11905/449   41920/5208    63  412   29.42)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   94  14457 389624 2656440 12389/12016/449   42507/5209    63  412   29.42)
(smt.stats   95  14604 394845 2670101 12405/12042/449   42930/5209    63  412   29.51)
(smt.stats   96  14765 400719 2742230 12549/12081/449   43502/5212    63  412   29.61)
ramon: poll                 wall=20.000s usage=19.957s mem=31152KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:24:01 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.000s
ramon: group.utime          19.980s
ramon: group.stime          0.020s
ramon: group.mempeak        31664KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.044s
ramon: loadavg              1.00
