ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:56:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28360 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EhRGG3qiqZFx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4135071
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3908   1370  1090/982/90      96/5     2   13   18.98)
(smt.stats    1    202   5278   3368  1706/1536/90     197/5     3   13   19.08)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 5 := 274877906944&5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 274877906944&5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 5 := 274877906944&5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 274877906944&5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 5 := 6 << 38
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&4123168604143
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 8521215115247 := 8796093022170 << 38
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 1 := 6 << 38
(smt.stats    2    313   6206   4451  1789/1558/95     321/18     4   13   19.27)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 5 := 274877906944&5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 274877906944&4
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 2 := 274877906944&5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 5 := 6 << 38
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 5 := 6 << 38
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 127 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 127 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 126 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511103 := 3 << 39
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511103 := 3 << 39
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 126 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 124 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 2 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 8 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 16 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 32 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 64 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 32 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 64 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 8 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 16 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 16 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 5 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1649267441665 := 3 << 39
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1649267441665 := 3 << 39
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 1 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 2 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 4 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 274877906944 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 274877906936 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 274877906928 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 32 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 64 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 128 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 256 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 512 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 256 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 512 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 1024 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 2048 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 4096 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 8192 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 16384 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 32768 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 65536 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 131072 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 262144 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 524288 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 1048576 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 2097152 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 4194304 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 8388608 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 16777216 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 33554432 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 67108864 := 274877906944&1649267441664
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 274877906944&1649267441664
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 134217728 := 274877906944&1649267441664
(smt.stats    3    414   7133   6163  2134/1936/227     435/40     7   51   20.25)
(smt.stats    4    525   8461   8380  2186/1987/233     502/54     9   65   20.25)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 272 := 1099511627776&272
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 272 := 1099511627776&272
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 400 := 1099511627776&400
(smt.stats    5    648  10269  10448  2358/2159/236     725/89    11   72   20.35)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  11547  13170  2557/2162/236     954/100    11   72   20.45)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 3243 := 1099511627776&2748779069441
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 3243 := 1099511627776&2748779069441
(smt.stats    7    860  13187  18299  2716/2516/239    1443/218    12   76   20.54)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 1 := 1&134217738
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 1&134217738
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2748779069440 := 2199090364421 << 1
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 1&134217738
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2748779069440 := 2199090364421 << 1
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 1&134217738
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2748779069441 := 2199090364421 << 1
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 1&134217738
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511103 := 2199090364421 << 1
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 1&134217738
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 1 := 1&134217738
(smt.stats    8    982  14637  22217  2795/2583/259    1590/249    13   83   20.54)
(smt.stats    9   1116  18728  26588  2838/2618/259    1765/277    14   87   20.64)
(smt.stats   10   1217  22872  36253  2841/2622/260    2088/283    15   88   20.74)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268370432 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268370944 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268371968 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268374016 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268378112 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268386304 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268402688 := 268435456&4398046511103
(smt.stats   11   1328  26957  46622  2933/2625/260    2569/285    15   88   20.93)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268370176 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268370176 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268370176 := 268435456&268370176
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268370176 := 268435456&268370176
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268370176 := 268435456&268370176
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 268370048 := 268435456&4398046511103
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 128 := 268435456&4398046445694
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 128 := 268435456&4398046445694
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 128 := 268435456&4398046445694
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&4398046445566
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&4398046445566
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&4397509640192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446722082940125184 := 4397845184570 << 28
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&4397778075647
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446722083208560639 := 4397845184570 << 28
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&4398046445566
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&4397509640192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446722082940125184 := 4397845184570 << 28
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&4397509640192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446722082940125184 := 4397845184570 << 28
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446717685430484992 := 4397845184570 << 28
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446717685430484992 := 4397845184570 << 28
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4397845184571 := 2198922592285 << 29
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4397845184571 := 2198922592285 << 29
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4397845184571 := 2198922592285 << 29
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4397845184569 := 2198922592285 << 29
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2748779069441 := 2198922592285 << 29
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 65568 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 65600 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 1048320 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 1048064 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 65792 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 66048 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 66560 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 67584 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 69632 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 73728 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 81920 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 98304 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 131072 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 262144 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 524288 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 65600 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 589824 := 268435456&15569256448
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 268435456&15569256448
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 589824 := 268435456&15569256448
(smt.stats   12   1450  28686  52394  3132/2745/308    2815/614    16   94   21.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1584  31956  65905  3155/2922/402    3129/788    18  142   21.31)
ramon: poll                 wall=1.005s usage=0.978s mem=22576KiB load=0.97 rootload=0.97
(smt.stats   14   1731  34410  70954  3342/2996/403    3357/850    19  145   21.41)
ramon: poll                 wall=2.000s usage=1.970s mem=22832KiB load=1.00 rootload=1.00
(smt.stats   15   1832  35573  73647  3513/3275/406    3463/860    20  147   21.79)
(smt.stats   16   1943  37222  77922  3616/3363/406    3644/860    20  147   21.90)
(smt.stats   17   2065  42158  91715  3629/3383/407    3757/871    21  151   21.90)
(smt.stats   18   2199  45927 105680  3652/3409/408    4088/901    23  155   22.00)
(smt.stats   19   2346  50613 122076  3743/3423/408    4518/903    23  155   22.09)
(smt.stats   20   2507  54850 132119  3857/3578/413    4904/971    24  160   22.28)
ramon: poll                 wall=3.000s usage=2.970s mem=24024KiB load=1.00 rootload=1.00
(smt.stats   21   2608  57259 137092  4098/3675/413    5111/972    24  160   22.47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   22   2719  59216 140691  4290/3914/413    5283/1047    25  163   22.48)
(smt.stats   23   2841  61029 143313  4413/4069/413    5461/1050    25  163   22.67)
(smt.stats   24   2975  62003 147475  4834/4484/413    5798/1051    25  163   22.76)
(smt.stats   25   3122  67606 164963  4854/4593/414    6345/1217    26  164   22.76)
(smt.stats   26   3283  75606 185046  4865/4603/420    6577/1379    27  166   22.86)
(smt.stats   27   3460  78629 193817  4936/4622/421    6756/1387    28  213   23.05)
(smt.stats   28   3561  80623 199059  4948/4686/421    6921/1387    28  213   23.05)
ramon: poll                 wall=4.000s usage=3.970s mem=24604KiB load=1.00 rootload=0.99
(smt.stats   29   3672  85818 213755  4980/4690/421    7186/1388    28  213   23.05)
(smt.stats   30   3794  88422 218079  5043/4752/421    7380/1388    28  213   23.14)
(smt.stats   31   3928  90835 226126  5210/4948/423    7786/1500    29  219   23.24)
(smt.stats   32   4075  94364 233614  5223/4958/423    8167/1500    29  219   23.24)
(smt.stats   33   4236 100176 251662  5244/4982/426    8578/1612    30  224   23.24)
(smt.stats   34   4413 105238 262451  5323/4993/426    8915/1613    30  224   23.35)
(smt.stats   35   4607 113418 293823  5366/5104/429    9368/1655    31  233   23.44)
(smt.stats   36   4708 118371 317098  5371/5109/430    9490/1733    32  256   23.44)
(smt.stats   37   4819 122078 331088  5389/5122/430    9872/1743    33  260   23.61)
ramon: poll                 wall=5.000s usage=4.969s mem=25116KiB load=1.00 rootload=1.00
(smt.stats   38   4941 125640 346265  5419/5137/430   10155/1743    33  260   23.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 190)
(smt.stats   39   5075 129138 357259  5426/5162/431   10150/1876    34  261   23.61)
(smt.stats   40   5222 134012 373933  5441/5177/432   10501/1876    34  261   23.61)
(smt.stats   41   5383 139770 395111  5541/5179/432   10749/1944    35  263   23.71)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5560 143011 403606  5581/5313/433   10984/2004    36  263   23.71)
(smt.stats   43   5754 147440 413638  5681/5315/433   11192/2006    36  263   23.80)
(smt.stats   44   5967 148094 414490  5752/5481/433   11409/2007    36  263   24.11)
(smt.stats   45   6068 150806 428763  7026/6758/434   11599/2013    37  276   24.21)
(smt.stats   46   6179 154861 459748  7029/6759/434   11871/2013    37  276   24.21)
(smt.stats   47   6301 156075 470973  7077/6775/434   12056/2013    37  276   24.21)
ramon: poll                 wall=6.000s usage=5.969s mem=25884KiB load=1.00 rootload=1.00
(smt.stats   48   6435 157455 480452  7189/6826/434   12238/2013    37  276   24.30)
(smt.stats   49   6582 161571 493014  7202/6932/434   12638/2013    37  276   24.40)
(smt.stats   50   6743 164922 510498  7214/6944/434   12822/2013    37  276   24.40)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 1&4191887982594
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 1 := 1&4191887982594
(smt.stats   51   6920 169169 532922  7266/6994/440   13005/2391    38  279   24.40)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 67108864&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 0 := 4397844987846 << 26
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 67108864&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 0 := 4397844987846 << 26
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 67108864&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 0 := 4397844987846 << 26
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 67108864&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 0 := 4397844987846 << 26
(smt.stats   52   7114 173327 553132  7383/7006/441   13397/2394    38  279   24.40)
(smt.stats   53   7327 177807 622655  7473/7193/447   13656/2430    39  282   24.62)
(smt.stats   54   7561 183441 655228  7492/7209/448   14021/2449    40  286   24.62)
(smt.stats   55   7662 186756 676400  7499/7215/448   14223/2449    40  286   24.72)
ramon: poll                 wall=7.000s usage=6.969s mem=26140KiB load=1.00 rootload=1.00
(smt.stats   56   7773 190428 700314  7509/7224/448   14481/2449    40  286   24.72)
(smt.stats   57   7895 193849 720907  7637/7233/448   14683/2453    40  286   24.81)
(smt.stats   58   8029 196963 732227  7678/7389/448   14926/2453    40  286   24.81)
(smt.stats   59   8176 200064 744578  7887/7392/448   15346/2461    40  286   25.00)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 2 := 16&1099511517190
(smt.stats   60   8337 204885 765215  7966/7651/451   15707/2586    41  298   25.10)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1099377409760
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446727580900916960 := 1718054027246 << 4
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1099377409760
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446727580900916960 := 1718054027246 << 4
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1099377409760
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446727580900916960 := 1718054027246 << 4
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1099511517179
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1099511517167
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 18446727581035024367 := 1718054027246 << 4
(smt.stats   61   8514 207963 787330  8020/7693/457   16008/2592    41  298   25.10)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 16 := 16&1184
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1185 := 37 << 5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1185 := 37 << 5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1185 := 37 << 5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1185 := 37 << 5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 4 := 16&1184
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 4 := 16&1184
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 2 := 16&1184
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 10 := 16&1184
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 8 := 16&1184
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 8 := 16&1184
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 16 := 16&1184
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 16&1184
band: (band[42] (if (= #120 41) 1 (if #545 2 #625)) (shl[42] (bv2int %0) (+ 42 #628))) 16 := 16&1184
ramon: poll                 wall=8.000s usage=7.969s mem=26908KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8708 210060 799680  8181/7802/498   16232/2636    42  304   25.38)
(smt.stats   63   8921 212668 804853  8484/7946/498   16503/2636    42  304   25.48)
(smt.stats   64   9155 218948 836383  8532/8216/502   16881/2696    43  341   25.63)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 4&5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 0 := 4&5
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 4&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 4398046511109 := 549755813958 << 2
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 4&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 4398046511109 := 549755813958 << 2
(smt.stats   65   9412 225824 860326  8613/8243/502   17296/2698    43  341   25.72)
(smt.stats   66   9513 228034 868122  8635/8316/513   17438/2731    44  343   25.82)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 2 := 4&2
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 2 := 4&2
(smt.stats   67   9624 229400 871886  8892/8347/513   17579/2735    44  343   26.30)
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 4&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 4 := 8384984121354 << 2
ramon: poll                 wall=9.000s usage=8.969s mem=27932KiB load=1.00 rootload=1.00
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 4&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 4 := 8384984121354 << 2
band: (band[42] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #662 1 #744)) (shl[64] (* 2 #114) (mod #834 64))) 4 := 4&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #831 #833) 64)) 4 := 8384984121354 << 2
(smt.stats   68   9746 230880 877665  9126/8565/513   17716/2736    44  343   26.40)
(smt.stats   69   9880 232181 885361  9547/8873/513   17903/2737    44  343   26.49)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10027 234748 899244  9589/9256/518   18153/2776    45  350   26.49)
ramon: poll                 wall=10.000s usage=9.969s mem=28444KiB load=1.00 rootload=1.00
(smt.stats   71  10188 240737 926275  9713/9258/518   18509/2776    45  350   26.70)
(smt.stats   72  10365 245070 939846 10113/9390/518   18781/2840    46  372   27.18)
ramon: poll                 wall=11.000s usage=10.969s mem=29432KiB load=1.00 rootload=1.00
(smt.stats   73  10559 252083 961281 10330/9841/518   19281/2841    46  372   27.27)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10772 259356 986915 10493/10047/519   19799/2931    47  379   27.37)
ramon: poll                 wall=12.000s usage=11.968s mem=29252KiB load=1.00 rootload=1.00
(smt.stats   75  11006 263826 1000229 10728/10189/519   20188/2931    47  379   27.37)
ramon: poll                 wall=13.000s usage=12.968s mem=29508KiB load=1.00 rootload=1.00
(smt.stats   76  11263 272908 1035141 11148/10451/519   21163/2936    47  379   27.76)
ramon: poll                 wall=14.000s usage=13.968s mem=29508KiB load=1.00 rootload=1.00
(smt.stats   77  11545 278285 1062355 11629/10872/519   22330/2938    47  379   27.95)
ramon: poll                 wall=15.000s usage=14.968s mem=29764KiB load=1.00 rootload=1.00
(smt.stats   78  11646 282712 1081310 11724/11303/519   22657/2939    47  379   28.05)
(smt.stats   79  11757 283583 1085589 12000/11446/520   22815/3651    48  381   28.14)
ramon: poll                 wall=16.000s usage=15.968s mem=30020KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   80  11879 287391 1096520 12201/11710/520   23154/3653    48  381   28.33)
(smt.stats   81  12013 290967 1119377 12333/12000/523   24000/3654    48  381   28.33)
(smt.stats   82  12160 297726 1140915 12363/12017/523   24484/3657    48  381   28.43)
ramon: poll                 wall=17.000s usage=16.968s mem=30276KiB load=1.00 rootload=1.00
(smt.stats   83  12321 311535 1208847 12393/12056/523   25131/3996    49  391   28.53)
(smt.stats   84  12498 320414 1250238 12409/12070/523   25696/3996    49  391   28.62)
(smt.stats   85  12692 330605 1296861 12582/12075/523   26429/4008    49  391   28.72)
ramon: poll                 wall=18.000s usage=17.968s mem=30532KiB load=1.00 rootload=1.00
(smt.stats   86  12905 343450 1370424 12941/12310/523   27432/4010    49  391   29.01)
ramon: poll                 wall=19.000s usage=18.968s mem=31044KiB load=1.00 rootload=1.00
(smt.stats   87  13139 354512 1409601 12992/12641/525   28595/4469    50  393   29.10)
(smt.stats   88  13396 367530 1469193 13166/12676/525   30094/4474    50  393   29.39)
ramon: poll                 wall=20.000s usage=19.968s mem=31044KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:56:39 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.002s
ramon: group.utime          19.994s
ramon: group.stime          0.008s
ramon: group.mempeak        31304KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.031s
ramon: loadavg              1.00
