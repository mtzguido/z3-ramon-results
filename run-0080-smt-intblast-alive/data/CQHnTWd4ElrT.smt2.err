ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:51:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28517 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1275
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CQHnTWd4ElrT.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4118216
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1565    528   620/503/98     133/18     3   17   18.68)
(smt.stats    1    202   2708   1916   915/840/101     235/48     5   25   18.77)
(smt.stats    2    313   3868   3247  1003/870/103     382/51     5   25   18.77)
(smt.stats    3    414   4479   5217  1109/1010/105     523/94     7   31   18.87)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&262143
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&262143
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&262142
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&3
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&4
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&4
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&8
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&16
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&32
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&16
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&32
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&64
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&16
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&32
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&64
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&128
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&64
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&128
(smt.stats    4    525   5413   6780  1243/1097/130     669/112    10   50   19.17)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&128
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&128
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&128
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&128
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 128 := 262143&130
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 129 := 262143&130
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 129 := 262143&130
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 128 := 262143&130
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 128 := 262143&130
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 16 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 128 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 128 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 142 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 140 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 136 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 128 := 262143&144
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 129 := 262143&130
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 128 := 262143&130
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 144 := 262143&146
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 144 := 262143&146
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 134 := 262143&386
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 134 := 262143&386
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 134 := 262143&386
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&386
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&386
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&386
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 134 := 262143&386
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&386
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&642
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&642
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&1154
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&1154
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&1154
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 134 := 262143&1154
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&1154
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&1154
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&1154
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 130 := 262143&2178
(smt.stats    5    647   6512  11756  1547/1442/281     919/191    13   83   19.55)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748   7821  14597  1566/1452/281    1117/191    13   83   19.55)
(smt.stats    7    859  10166  20543  1623/1514/282    1311/252    14   83   19.65)
(smt.stats    8    981  11789  24373  1650/1539/288    1699/289    15   87   19.74)
(smt.stats    9   1115  13103  27585  1840/1590/295    2054/338    16   97   20.13)
(smt.stats   10   1216  14119  33082  2105/1822/295    2258/387    17  119   20.13)
(smt.stats   11   1327  15382  42165  2407/2018/295    2741/389    17  119   20.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  17437  49956  2674/2329/295    3165/391    17  119   20.42)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4096 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4100 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 8204 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4684 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4620 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4108 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4108 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4140 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4108 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4108 := 262143&102412
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4108 := 262143&102412
(smt.stats   13   1583  18781  56414  2885/2662/315    4177/509    18  121   20.61)
(smt.stats   14   1730  21023  65123  2983/2841/346    4653/840    19  134   20.71)
(smt.stats   15   1831  22056  71792  3118/2917/347    5215/944    20  135   20.81)
(smt.stats   16   1942  23636  84765  3320/3212/348    5890/1296    21  138   20.91)
(smt.stats   17   2064  25818  96221  3471/3219/348    6727/1301    21  138   21.00)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  28999 109241  3664/3531/350    7645/1557    22  151   21.28)
ramon: poll                 wall=1.000s usage=0.925s mem=22436KiB load=0.92 rootload=0.91
(smt.stats   19   2345  31405 124206  3780/3652/351    7996/1651    23  151   21.28)
(smt.stats   20   2506  35346 156414  3843/3735/353    8500/1816    25  305   21.38)
(smt.stats   21   2607  40441 208483  3863/3754/357    8897/2067    26  335   21.47)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 17902 := 32767&119177
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 17903 := 32767&119177
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 26095 := 32767&119175
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 26095 := 32767&119183
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 26095 := 32767&119215
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 26031 := 32767&119215
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 16815 := 32767&119211
(smt.stats   22   2718  41897 211649  4016/3781/357    9277/2076    26  335   21.57)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 32767&119211
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 32767&119211
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 32767&119211
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 32767&119211
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 32767&119211
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 32767&119211
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 8191&123307
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 8191&121259
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 8191&119211
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 381355 := 381356 << 12
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 8191&94635
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 356779 := 381320 << 12
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 4523 := 8191&94635
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 356779 := 381318 << 12
(smt.stats   23   2840  43907 230665  4268/3951/357    9792/2086    26  335   21.67)
(smt.stats   24   2974  46382 242004  4372/4255/380   10560/2297    27  339   21.87)
(smt.stats   25   3121  49518 268210  4565/4284/382   11515/2741    28  360   21.97)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 138400 := 0 << 2
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 138400 := 0 << 2
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #108))) 1 := 17300 << 3
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #108))) 17301 := 17300 << 3
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #108))) 17301 := 17300 << 3
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #108))) 138399 := 17300 << 3
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
band: (band[18] (if (= #112 17) 1 (if #352 3 #396)) (shl[18] (bv2int %0) (+ 18 #399))) 7 := 7&138400
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
band: (band[18] (if (= #112 17) 1 (if #352 3 #396)) (shl[18] (bv2int %0) (+ 18 #399))) 6 := 7&138400
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
band: (band[18] (if (= #112 17) 1 (if #352 3 #396)) (shl[18] (bv2int %0) (+ 18 #399))) 4 := 7&138400
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
band: (band[18] (if (= #112 17) 1 (if #352 3 #396)) (shl[18] (bv2int %0) (+ 18 #399))) 7 := 7&138400
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
band: (band[18] (if (= #112 17) 1 (if #352 3 #396)) (shl[18] (bv2int %0) (+ 18 #399))) 6 := 7&138400
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 0 := 7&138400
band: (band[18] (if (= #112 17) 1 (if #352 3 #396)) (shl[18] (bv2int %0) (+ 18 #399))) 4 := 7&138400
(smt.stats   26   3282  52090 275172  4736/4483/382   11858/2749    28  360   22.07)
(smt.stats   27   3459  53785 288653  5057/4941/425   13163/3038    29  377   22.35)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 18561 := 262143&227329
(smt.stats   28   3560  54878 297894  5241/4975/426   13459/3042    29  377   22.35)
(smt.stats   29   3671  56497 320118  5439/5315/430   13900/3659    30  447   22.45)
(smt.stats   30   3793  59558 349820  5457/5318/430   14177/3664    30  447   22.55)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 17 := 31&232961
(smt.stats   31   3927  62090 363685  5624/5441/432   14520/3756    31  456   22.65)
(smt.stats   32   4074  63172 384333  5664/5532/441   16165/4118    32  520   22.94)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 3 := 32767&99
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 35 := 32767&99
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 99 := 32767&99
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 99 := 8 << 14
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 99 := 32767&99
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 99 := 6 << 14
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 99 := 32767&99
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 99 := 6 << 14
(smt.stats   33   4235  65029 392320  5723/5561/441   16522/4124    32  520   22.94)
ramon: poll                 wall=2.000s usage=1.924s mem=24332KiB load=1.00 rootload=0.99
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 9 := 65535&8201
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 9 := 65535&8201
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 9 := 65535&8201
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 9 := 65535&8201
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 9 := 65535&8201
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 9 := 65535&8201
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 9 := 65535&8201
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 8201 := 65535&8201
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 8201 := 0 << 15
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 8201 := 65535&8201
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 8201 := 0 << 15
(smt.stats   34   4412  68664 417652  5908/5765/471   17177/4227    33  550   23.13)
(smt.stats   35   4606  72163 456682  6052/5874/475   18316/4634    34  578   23.42)
(smt.stats   36   4707  74880 491762  6144/5927/475   18738/4637    34  578   23.65)
(smt.stats   37   4818  76780 522576  6190/6016/476   19022/4823    35  589   23.65)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4940  79748 563046  6214/6048/477   20225/4943    36  604   23.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5074  81484 572228  6302/6056/478   20900/4952    36  604   23.94)
(smt.stats   40   5221  84470 598382  6518/6323/480   21581/4954    36  604   24.04)
(smt.stats   41   5382  91743 628909  6567/6356/480   22835/5188    37  625   24.44)
(smt.stats   42   5559  94779 672194  6628/6419/484   23576/5400    38  631   24.54)
ramon: poll                 wall=3.000s usage=2.924s mem=25868KiB load=1.00 rootload=1.00
(smt.stats   43   5753  99644 717755  6719/6463/484   24814/5406    38  631   24.74)
(smt.stats   44   5966 103135 755789  6801/6566/484   25513/5651    39  640   24.83)
(smt.stats   45   6067 105028 780472  6833/6661/484   26141/5651    39  640   24.93)
(smt.stats   46   6178 107645 799541  6896/6670/484   26926/5654    39  640   24.93)
(smt.stats   47   6300 110324 813960  6930/6750/484   27384/5654    39  640   25.16)
(smt.stats   48   6434 113505 855932  6967/6792/484   28823/5655    39  640   25.25)
(smt.stats   49   6581 116434 922929  6978/6808/484   29634/5655    39  640   25.35)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 1 := 262143&135681
(smt.stats   50   6742 118458 929051  7085/6813/484   30055/5660    39  640   25.45)
ramon: poll                 wall=4.000s usage=3.917s mem=26808KiB load=0.99 rootload=0.99
(smt.stats   51   6919 120721 947920  7249/7029/484   30643/5661    39  640   25.55)
(smt.stats   52   7113 125047 973636  7392/7217/489   32210/6685    40  671   25.64)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   53   7326 131199 1002344  7502/7330/490   33005/6687    40  671   25.75)
(smt.stats   54   7560 137083 1066391  7549/7378/493   33944/7015    41  712   25.94)
(smt.stats   55   7661 138658 1095056  7549/7378/493   34129/7015    41  712   25.94)
(smt.stats   56   7772 141161 1126073  7573/7379/493   34312/7015    41  712   25.94)
(smt.stats   57   7894 142543 1150186  7582/7407/493   34412/7107    42  760   25.94)
(smt.stats   58   8028 143240 1166639  7583/7412/493   34856/7107    42  760   26.03)
(smt.stats   59   8175 145796 1218310  7588/7416/493   35237/7107    42  760   26.03)
ramon: poll                 wall=5.004s usage=4.921s mem=27396KiB load=1.00 rootload=1.00
(smt.stats   60   8336 147795 1264583  7595/7423/494   35908/7235    43  763   26.13)
(smt.stats   61   8513 150365 1318667  7637/7456/495   36840/7235    43  763   26.33)
(smt.stats   62   8707 153273 1383210  7737/7535/496   37915/7389    44  771   26.73)
(smt.stats   63   8920 155746 1442465  7739/7537/496   39051/7389    44  771   26.83)
(smt.stats   64   9154 158355 1511290  7747/7545/497   40286/7531    45  773   27.02)
(smt.stats   65   9411 161256 1566912  7751/7549/498   41238/7800    46  802   27.23)
(smt.stats   66   9512 163054 1583881  7772/7551/499   41962/7800    46  802   27.33)
ramon: poll                 wall=6.000s usage=5.917s mem=28680KiB load=1.00 rootload=0.99
(smt.stats   67   9623 165883 1610176  7862/7578/499   42319/7801    46  802   27.43)
(smt.stats   68   9745 169653 1650374  7972/7668/499   42856/7802    46  802   27.80)
(smt.stats   69   9879 172590 1695077  8136/7799/499   43444/7874    47  813   27.80)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   70  10026 174972 1716300  8163/7958/499   43933/7875    47  813   27.90)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 1 := 4095&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 1 := 131072 << 11
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 1 := 4095&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 262145 := 131074 << 11
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 1 := 4095&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 262145 := 131080 << 11
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 16383&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 1310725 := 393242 << 13
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 8191&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 786437 := 393218 << 12
(smt.stats   71  10187 177572 1755311  8210/7973/501   44682/7880    47  813   28.16)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 2047&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 1572869 := 393218 << 10
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 2047&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 1572869 := 393218 << 10
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 255&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 1572869 := 393218 << 7
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 31&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 262149 := 65562 << 4
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 31&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 262149 := 65560 << 4
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 31&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 262149 := 65538 << 4
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 127&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 524293 := 131090 << 6
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 63&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 524293 := 131090 << 5
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 15&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 5 := 65536 << 3
(smt.stats   72  10364 180124 1770174  8287/8029/511   45068/8031    48  852   28.26)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 15&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 262149 := 131072 << 3
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 5 := 15&5
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 262149 := 131072 << 3
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10558 181727 1812226  8365/8143/544   45934/8035    48  852   28.45)
(smt.stats   74  10771 184713 1838474  8447/8219/545   46548/8036    48  852   28.45)
ramon: poll                 wall=7.000s usage=6.916s mem=30048KiB load=1.00 rootload=1.00
(smt.stats   75  11005 188414 1855377  8547/8231/545   47258/8040    48  852   28.64)
(smt.stats   76  11262 192075 1908826  8640/8379/546   48696/8200    49  922   28.83)
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 736 := 2047&736
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 7340768 := 458798 << 10
band: (band[18] (if (= #213 31) 1 (if #329 3 #449)) (shl[32] (* 2 #197) (mod #464 32))) 736 := 2047&736
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #456 #460) 32)) 7340768 := 458798 << 10
(smt.stats   77  11544 194488 1931484  8697/8458/547   49138/8201    49  922   28.83)
(smt.stats   78  11645 196957 1956367  8727/8490/547   50421/8201    49  922   29.02)
(smt.stats   79  11756 198918 1974752  8782/8561/549   50928/8409    50  930   29.02)
(smt.stats   80  11878 201328 1995336  8832/8613/551   51179/8413    50  930   29.12)
(smt.stats   81  12012 203226 2033437  8914/8667/553   52731/8414    50  930   29.31)
ramon: poll                 wall=8.000s usage=7.916s mem=30876KiB load=1.00 rootload=1.00
(smt.stats   82  12160 207390 2064811  9004/8771/554   53476/8417    50  930   29.40)
(smt.stats   83  12321 212181 2110202  9048/8808/556   53884/8684    51  935   29.50)
(smt.stats   84  12498 214701 2136763  9090/8831/557   54491/8684    51  935   29.60)
(smt.stats   85  12692 217881 2207327  9211/8860/557   55404/8687    51  935   29.70)
(smt.stats   86  12905 218925 2247824  9225/8988/557   55945/8687    51  935   29.70)
ramon: poll                 wall=9.000s usage=8.916s mem=31500KiB load=1.00 rootload=1.00
(smt.stats   87  13139 225107 2317562  9533/9112/564   56965/8789    52  949   29.99)
(smt.stats   88  13396 232178 2366734  9572/9280/564   57504/8790    52  949   30.08)
(smt.stats   89  13678 240424 2448661  9669/9314/572   58760/8795    52  949   30.27)
(smt.stats   90  13988 250751 2529320  9900/9595/573   59993/8963    53  977   30.46)
ramon: poll                 wall=10.000s usage=9.914s mem=32144KiB load=1.00 rootload=1.00
(smt.stats   91  14089 253843 2549057  9972/9639/574   60963/8965    53  977   30.56)
(smt.stats   92  14200 257843 2579784 10073/9708/574   61474/8969    53  977   30.91)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   93  14322 260932 2605545 10129/9811/574   61922/9099    54 1022   31.05)
(smt.stats   94  14456 264527 2656192 10161/9862/574   62588/9101    54 1022   31.05)
(smt.stats   95  14603 268082 2688275 10197/9896/575   63871/9102    54 1022   31.15)
ramon: poll                 wall=11.000s usage=10.914s mem=33180KiB load=1.00 rootload=1.00
(smt.stats   96  14764 270925 2740813 10276/9942/575   65386/9103    54 1022   31.43)
(smt.stats   97  14941 274824 2776948 10353/10082/611   66219/9521    55 1022   31.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15135 277299 2796048 10407/10086/611   67543/9530    55 1022   31.73)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas          :deletions      )
(smt.stats   99  15348 279774 2821660 10573/10262/611   68213/9530    55 1022   31.73)
(smt.stats  100  15582 287205 2890800 10643/10339/614   69815/9538    55 1022   32.02)
ramon: poll                 wall=12.004s usage=11.917s mem=33488KiB load=1.00 rootload=1.00
(smt.stats  101  15839 296418 2966736 10725/10382/614   71238/9541    55 1022   32.12)
(smt.stats  102  16121 302876 2992681 10743/10452/614   71844/9946    56 1085   32.21)
(smt.stats  103  16431 309412 3085431 10775/10476/614   72406/9947    56 1085   32.31)
ramon: poll                 wall=13.000s usage=12.912s mem=33988KiB load=1.00 rootload=1.00
(smt.stats  104  16771 318556 3187086 10786/10516/614   75534/9947    56 1085   32.59)
(smt.stats  105  16872 321759 3210780 10811/10529/614   75929/9948    56 1085   32.59)
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions      )
(smt.stats  106  16983 325084 3234513 10862/10566/615   76436/10291    57 1086   32.69)
(smt.stats  107  17105 330844 3259727 10963/10623/615   77362/10300    57 1086   32.79)
(smt.stats  108  17239 335874 3286568 11042/10724/616   78007/10307    57 1086   33.23)
ramon: poll                 wall=14.000s usage=13.912s mem=34824KiB load=1.00 rootload=1.00
(smt.stats  109  17386 340921 3305088 11175/10808/616   78481/10309    57 1086   33.33)
(smt.stats  110  17547 347289 3352552 11231/10957/631   79348/10309    57 1086   33.42)
(smt.stats  111  17724 352803 3404398 11407/10960/631   81114/10312    57 1086   33.62)
(smt.stats  112  17918 359373 3446988 11545/11276/632   81978/10513    58 1135   33.71)
ramon: poll                 wall=15.000s usage=14.907s mem=35740KiB load=0.99 rootload=0.99
(smt.stats  113  18131 363944 3494675 11610/11289/632   84152/10513    58 1135   34.02)
(smt.stats  114  18365 369393 3578892 11629/11356/632   85717/10513    58 1135   34.12)
(smt.stats  115  18622 375584 3632031 11740/11394/642   88050/10867    59 1156   34.31)
(smt.stats  116  18904 383365 3674322 11884/11531/642   88911/10872    59 1156   34.41)
ramon: poll                 wall=16.004s usage=15.915s mem=36252KiB load=1.00 rootload=1.01
(smt.stats  117  19214 393068 3751154 12267/11747/642   91952/10885    59 1156   34.80)
(smt.stats  118  19554 400604 3816055 12365/12017/643   92901/10890    59 1156   35.24)
ramon: poll                 wall=17.000s usage=16.907s mem=36764KiB load=1.00 rootload=0.99
(smt.stats  119  19927 413468 3994663 12575/12133/643   94830/11186    60 1159   35.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 4241)
(smt.stats  120  20028 415836 4022650 12596/12317/644   91455/11187    60 1159   35.53)
(smt.stats  121  20139 418651 4078595 12641/12332/644   92023/11190    60 1159   35.63)
(smt.stats  122  20261 421846 4138113 12764/12393/644   92613/11491    61 1161   35.63)
ramon: poll                 wall=18.000s usage=17.907s mem=37276KiB load=1.00 rootload=1.00
(smt.stats  123  20395 424925 4171486 12896/12627/645   93652/11492    61 1161   35.72)
(smt.stats  124  20542 426642 4186387 12911/12637/645   93962/11492    61 1161   35.72)
(smt.stats  125  20703 428095 4312888 12927/12648/645   94245/11492    61 1161   35.72)
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions      )
(smt.stats  126  20880 428734 4407495 12997/12676/645   94495/11632    62 1184   35.82)
(smt.stats  127  21074 434035 4479965 13015/12730/647   95914/11633    62 1184   35.91)
ramon: poll                 wall=19.000s usage=18.906s mem=37532KiB load=1.00 rootload=1.00
(smt.stats  128  21287 441820 4552390 13107/12748/647   97273/11638    62 1184   36.01)
(smt.stats  129  21521 448329 4644105 13156/12883/648   99015/11794    63 1188   36.10)
ramon: poll                 wall=20.000s usage=19.906s mem=37788KiB load=1.00 rootload=1.00
(smt.stats  130  21778 454584 4713612 13283/12885/648  100002/11795    63 1188   36.21)
ramon: end                  Fri Nov  1 17:51:41 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.989s
ramon: group.utime          19.965s
ramon: group.stime          0.024s
ramon: group.mempeak        38048KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              1.00
