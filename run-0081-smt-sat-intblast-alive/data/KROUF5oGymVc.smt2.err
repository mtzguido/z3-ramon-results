ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:13:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29258 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KROUF5oGymVc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             369848
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   222/222     0/0  63       0    18.54   0.00)
(sat.stats    109    634    0   222/222   109/36  63       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 298 :time 0.00)
(sat.stats    109    634    0   222/222   109/36  63       0    18.83   0.01)
(sat.stats    109    634    0   222/222   109/36  63       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 362018.83 :time 0.00)
(sat.stats    109    634    0   224/224    45/35  63       0    18.83   0.01)
(sat.stats    176   1751    1   224/224   112/89  63       0    18.92   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    179   1782    2   224/224   115/89  63       0    18.92   0.01)
(sat.stats    182   1815    3   224/224   118/89  63       0    18.92   0.01)
(sat.stats    185   1848    4   224/224   121/89  63       0    18.92   0.01)
(sat.stats    188   1882    5   224/224   124/89  63       0    18.92   0.01)
(sat.stats    191   1948    6   224/224   127/89  63       0    18.92   0.01)
(sat.stats    194   2039    7   224/224   130/90  63       0    18.92   0.01)
(sat.stats    197   2042    8   224/224   133/93  63       0    18.92   0.01)
(sat.stats    200   2050    9   224/224   136/96  63       0    18.92   0.01)
(sat.stats    203   2060   10   224/224   139/99  63       0    18.92   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    206   2078   11   224/224   142/102  63       0    18.92   0.01)
(sat.stats    209   2094   12   224/224   145/105  63       0    18.92   0.01)
(sat.stats    212   2110   13   224/224   148/107  63       0    18.92   0.01)
(sat.stats    314   3496   26   371/371   251/158  63       0    19.61   0.07)
(sat.stats    508   6475   53  1046/1046   455/198  63       0    19.99   0.26)
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 4632 :time 0.00)
lshr: (lshr[45] (bv2int %1) (mod (bv2int %0) 45)) 35184372088831 := 0 >>l 42
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 1&35184372088464
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 19 #54 #268) 64)) 0 := 2305843009213693952 >>l 61
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 5853 :time 0.00)
ramon: poll                 wall=1.000s usage=0.998s mem=22304KiB load=1.00 rootload=0.99
ramon: poll                 wall=2.000s usage=1.998s mem=23388KiB load=1.00 rootload=1.00
(sat.stats   1210  11796   72  3799/3796  1176/236  88       0    22.71   2.87)
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1213  11805   73  3815/3812  1179/236  88       0    22.71   2.91)
ramon: poll                 wall=3.000s usage=2.997s mem=24056KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.995s mem=25736KiB load=1.00 rootload=1.00
(sat.stats   1599  15283  121  7891/7888  1632/262  88       0    24.57   4.21)
ramon: poll                 wall=5.004s usage=4.998s mem=26812KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.993s mem=29512KiB load=1.00 rootload=0.99
(sat.stats   3277  31971  140 28800/28797  3800/335  88       0    29.20   6.16)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20189 :time 0.00)
(sat.stats   3652  40302  197 35005/35002  4259/412  89       0    29.70   6.73)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 21914 :time 0.00)
ramon: poll                 wall=7.000s usage=6.992s mem=30860KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 23384 :time 0.00)
ramon: poll                 wall=8.000s usage=7.991s mem=31040KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.990s mem=31352KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.989s mem=31560KiB load=1.00 rootload=1.00
(sat.stats   8396  90152  236 38530/38527  6971/607  91       0    30.35   9.99)
(sat.stats   8399  90166  237 38530/38527  6973/607  91       0    30.35  10.00)
ramon: poll                 wall=11.000s usage=10.988s mem=31664KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.004s usage=11.990s mem=32000KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.986s mem=32324KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin         :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units        :memory       )
(sat.stats  12136 132527  922 40783/40780  9129/912  91       0    31.13  13.13)
ramon: poll                 wall=14.000s usage=13.986s mem=32580KiB load=1.00 rootload=1.00
lshr: (lshr[45] (bv2int %1) (mod (bv2int %0) 45)) 0 := 13988 >>l 15
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 0&35134979964928
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 19 #54 #268) 64)) 70368744154981 := 14628683776 >>l 34
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 53079 :time 0.00)
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 1 := 1&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 2&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 2 := 2&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 2&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 1 := 2&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 2546 := 54709&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 2546 := 54707&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 4 := 54707&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 4 := 54703&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 536 := 54703&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 22112 := 54703&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 16 := 54703&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 2688 := 54705&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 64 := 54705&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 9728 := 54705&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 1280 := 54705&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 592 := 592&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 576 := 592&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 512 := 592&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 1024 := 1618&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 2048 := 2642&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 4096 := 4690&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 8192 := 8786&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 16384 := 16978&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 32768 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 12500 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 6232 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 21888 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 16 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 96 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 64 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 4864 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 15360 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 512 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 26624 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 16384 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 4096 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 8192 := 33362&35134979964928
band: (band[45] (lshr[45] (bv2int %1) (mod #54 45)) (if (= #461 44) 618970019641880896891518976 (if #463 309485009820940448445759488 #549))) 0 := 33362&35134979964928
band: (band[45] (lshr[64] (* 524288 #63) (mod #269 64)) (if (= #572 63) 649037107316004903338921401778176 (if #574 324518553658002451669460700889088 #698))) 32768 := 33362&35134979964928
ramon: poll                 wall=15.000s usage=14.986s mem=34884KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 19 :elim-clauses 1 :cost 57249 :time 0.00)
ramon: poll                 wall=16.000s usage=15.986s mem=35140KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.986s mem=35396KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 61483 :time 0.00)
ramon: poll                 wall=18.000s usage=17.986s mem=35652KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 66167 :time 0.00)
ramon: poll                 wall=19.000s usage=18.986s mem=35908KiB load=1.00 rootload=1.00
(sat.stats  18215 277939 1133 58129/58125 12788/1522 323       0    34.55  19.99)
ramon: poll                 wall=20.000s usage=19.986s mem=36164KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:14:02 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.992s
ramon: group.utime          19.980s
ramon: group.stime          0.012s
ramon: group.mempeak        36420KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
