ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:57:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28363 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/F83ycssx6dyv.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4138713
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2260    248  1137/966/97     103/15     3   14   19.08)
(smt.stats    1    202   2555    754  1914/1645/97     224/16     3   14   19.27)
(smt.stats    2    313   4987   3090  2032/1826/97     366/16     3   14   19.27)
(smt.stats    3    414   6105   4518  2066/1905/100     476/44     4   16   19.27)
(smt.stats    4    525   7691   5668  2118/1947/104     608/66     5   23   19.27)
(smt.stats    5    647   9713   7461  2204/1993/104     729/98     6   24   19.37)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  10697   8928  2643/2072/105     835/142     7   25   19.56)
(smt.stats    7    859  14841  11908  2688/2440/105     947/142     7   25   19.56)
(smt.stats    8    981  18394  15193  2784/2485/105    1079/142     7   25   19.66)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 1 := 2 << 36
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 1 := 2 << 36
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 1 := 2 << 36
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 1 := 2 << 36
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&536870914
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&536870914
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&536870914
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&1610612736
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536870912 := 66401202892&1610612736
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&1610612736
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536870912 := 66401202892&1610612736
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&1610612736
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536870912 := 66401202892&1610612736
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&135291469826
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&135291469826
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&131533373438
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&135828340734
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&135828340728
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&135828340728
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&135828340720
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&135828340720
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&135828340728
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&133143986178
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 12884901888 := 66401202892&135291469826
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 12884901888 := 66401202892&135291469826
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 17179869184 := 66401202892&135291469826
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 4294967296 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 4294967296 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&116500987898
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&109790101506
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 4294967296 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 4294967296 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 12884901888 := 66401202892&118111600642
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 8589934592 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 8858370048 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 12884901888 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 13153337344 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 15300820992 := 66401202892&118648471544
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 13153337344 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 13153337344 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 13153337344 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 38923141120 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 38923141120 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 60129542143 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 60129542142 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 60129542140 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 60129542140 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 60129542136 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 59861106688 := 66401202892&118380036098
(smt.stats    9   1115  20964  20707  2974/2740/237    1231/171    10   47   20.05)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 56103010304 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 64692944896 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 64692944896 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 64692944896 := 66401202892&118380036098
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 64692944896 := 66401202892&64961380344
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 64692944896 := 66401202892&64692944898
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 64692944898 := 64692944898 << 36
(smt.stats   10   1216  24643  25239  3007/2796/258    1341/195    13   62   20.35)
(smt.stats   11   1327  28843  28414  3083/2820/258    1482/197    13   62   20.44)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  31643  32941  3122/2905/262    1610/225    16   74   20.44)
(smt.stats   13   1583  34950  36652  3127/2910/266    1777/225    16   74   20.54)
(smt.stats   14   1730  40377  42012  3127/2910/266    1921/274    17   79   20.54)
(smt.stats   15   1831  46241  47281  3127/2910/266    2022/274    17   79   20.54)
(smt.stats   16   1942  49899  51726  3131/2914/271    2131/273    18   93   20.64)
(smt.stats   17   2064  52416  55532  3160/2943/272    2275/278    19  107   20.76)
ramon: poll                 wall=1.000s usage=0.938s mem=21900KiB load=0.94 rootload=0.92
(smt.stats   18   2198  55299  61658  3203/2948/273    2416/278    19  107   20.76)
(smt.stats   19   2345  60761  68679  3222/2993/273    2574/285    20  107   20.76)
(smt.stats   20   2506  63012  74627  3229/3010/274    2763/290    21  111   20.76)
(smt.stats   21   2607  64621  79265  3248/3015/274    2879/290    21  111   20.86)
(smt.stats   22   2718  68565  88054  3249/3032/274    3013/290    21  111   20.86)
(smt.stats   23   2840  70836  94223  3269/3050/279    3170/348    22  111   20.96)
(smt.stats   24   2974  72443 100982  3307/3088/284    3337/365    23  124   20.96)
(smt.stats   25   3121  76926 108359  3322/3094/284    3499/365    23  124   21.06)
(smt.stats   26   3282  80113 117251  3341/3113/284    3664/431    24  133   21.06)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 32422463 := 0 << 26
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 32422463 := 0 << 26
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 32422463 := 0 << 26
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 32422463 := 0 << 26
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 32422463 := 0 << 26
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 32422463 := 0 << 26
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 2 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 120259084290 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 32422462&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 120259084290 << 25
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16211232 := 32422462&122473676800
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16211264 := 32422462&122473676800
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16211328 := 32422462&122473676800
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16211456 := 32422462&122473676800
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16211968 := 32422462&122473676800
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16211968 := 32422462&122473676800
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16220160 := 32422462&122473676800
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16252928 := 32422462&122473676800
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16777216 := 32422462&122473676800
(smt.stats   27   3459  82699 125934  3460/3233/329    3931/460    26  143   21.27)
(smt.stats   28   3560  83090 129327  3461/3234/330    4040/460    26  143   21.27)
(smt.stats   29   3671  85382 134540  3506/3239/330    4152/484    27  155   21.55)
(smt.stats   30   3793  87267 139504  3643/3353/333    4291/496    28  159   21.55)
(smt.stats   31   3927  89542 146793  3716/3433/333    4464/498    28  159   21.55)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  90753 153239  3726/3496/334    4673/550    29  161   21.55)
ramon: poll                 wall=2.000s usage=1.938s mem=22968KiB load=1.00 rootload=1.00
(smt.stats   33   4235  94124 163711  3771/3503/334    4871/552    29  161   21.55)
(smt.stats   34   4412  98218 177749  3788/3557/338    5070/643    31  169   21.66)
(smt.stats   35   4606 102738 189791  3916/3623/341    5331/648    31  169   21.76)
(smt.stats   36   4707 104958 199229  3937/3688/342    5424/674    32  177   21.76)
(smt.stats   37   4818 108531 211805  3939/3690/342    5551/674    32  177   21.76)
(smt.stats   38   4940 112091 221034  3951/3702/344    5691/683    33  179   21.86)
(smt.delete-inactive-clauses  :num-deleted-clauses 73)
(smt.stats   39   5074 115035 228253  3966/3709/344    5765/684    33  179   21.86)
(smt.stats   40   5221 117183 240494  3978/3729/344    5986/684    33  179   21.86)
(smt.stats   41   5382 122767 257356  3982/3733/344    6139/716    34  188   22.16)
(smt.stats   42   5559 126363 270162  3997/3744/344    6345/716    34  188   22.16)
(smt.stats   43   5753 129797 282088  3997/3748/344    6541/716    34  188   22.25)
(smt.stats   44   5966 132591 291992  4006/3757/344    6810/716    34  188   22.25)
(smt.stats   45   6067 134522 302274  4007/3758/344    6912/716    34  188   22.35)
(smt.stats   46   6178 135744 309695  4009/3760/344    7022/716    34  188   22.35)
(smt.stats   47   6300 138352 319000  4015/3766/346    7169/767    35  195   22.35)
(smt.stats   48   6434 141146 328140  4020/3771/346    7394/767    35  195   22.35)
ramon: poll                 wall=3.000s usage=2.937s mem=23672KiB load=1.00 rootload=0.99
(smt.stats   49   6581 143434 337193  4024/3775/346    7551/780    36  198   22.45)
(smt.stats   50   6742 145238 348546  4025/3776/347    7732/780    36  198   22.45)
(smt.stats   51   6919 147173 358085  4025/3776/347    7963/790    37  201   22.54)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 149184 367797  4035/3780/347    8200/790    37  201   22.54)
(smt.stats   53   7326 154651 384066  4052/3803/349    8431/806    38  210   23.03)
(smt.stats   54   7560 162360 403168  4064/3815/349    8739/806    38  210   23.03)
(smt.stats   55   7661 164593 408841  4098/3822/349    8899/811    38  210   23.03)
(smt.stats   56   7772 166917 420690  4175/3871/349    9049/811    38  210   23.12)
(smt.stats   57   7894 169615 432786  4238/3933/349    9203/812    38  210   23.23)
(smt.stats   58   8028 171623 440505  4340/4016/349    9378/815    38  210   23.23)
(smt.stats   59   8175 173924 452137  4382/4103/349    9556/817    38  210   23.23)
(smt.stats   60   8336 177065 469132  4427/4151/349    9743/819    38  210   23.23)
ramon: poll                 wall=4.004s usage=3.939s mem=24620KiB load=1.00 rootload=1.00
(smt.stats   61   8513 179684 484266  4439/4187/351    9980/904    39  211   23.33)
(smt.stats   62   8707 181926 502660  4452/4195/351   10325/904    39  211   23.33)
(smt.stats   63   8920 186984 522374  4459/4207/352   10670/982    40  213   23.42)
(smt.stats   64   9154 188077 533150  4473/4221/352   10927/982    40  213   23.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9411 191292 552881  4530/4231/353   11217/1022    41  215   23.44)
(smt.stats   66   9512 193096 557699  4567/4285/353   11423/1028    41  215   23.44)
(smt.stats   67   9623 195543 569471  4639/4352/354   11624/1074    42  237   23.53)
(smt.stats   68   9745 198884 580865  4742/4403/355   11810/1080    42  237   23.53)
ramon: poll                 wall=5.000s usage=4.935s mem=24888KiB load=1.00 rootload=1.00
(smt.stats   69   9879 202011 594239  4758/4505/356   12002/1116    43  249   23.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(smt.stats   70  10026 203395 606303  4769/4514/360   12221/1116    43  249   23.53)
(smt.stats   71  10187 205977 620301  4778/4526/360   12377/1116    43  249   23.64)
(smt.stats   72  10364 210264 635065  4881/4532/360   12597/1161    44  289   23.74)
(smt.stats   73  10558 212051 643936  5381/4782/361   12864/1165    44  289   23.83)
(smt.stats   74  10771 217802 667429  5480/5138/361   13132/1166    44  289   23.83)
(smt.stats   75  11005 222953 686538  5612/5259/361   13608/1252    45  291   23.93)
ramon: poll                 wall=6.000s usage=5.934s mem=25288KiB load=1.00 rootload=1.00
(smt.stats   76  11262 227131 709946  5677/5379/361   13949/1258    45  291   24.02)
(smt.stats   77  11544 231079 739030  5715/5450/361   14550/1258    45  291   24.02)
(smt.stats   78  11645 233256 748019  5725/5466/361   14781/1258    45  291   24.02)
(smt.stats   79  11756 235723 757277  5732/5479/361   14906/1258    45  291   24.13)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 10
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 990 := 0 << 11
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 10
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 990 := 0 << 11
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 10
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 990 := 0 << 11
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 10
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 990 := 0 << 11
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 0 << 10
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 990 := 0 << 11
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 2 := 0 << 10
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 2 := 0 << 10
(smt.stats   80  11878 237451 770921  5800/5497/361   15047/1263    45  291   24.32)
(smt.stats   81  12012 239728 783249  5866/5605/379   15296/1506    46  295   24.32)
(smt.stats   82  12159 243142 795565  5936/5610/382   15609/1507    46  295   24.41)
(smt.stats   83  12320 245702 803220  5989/5708/388   15774/1564    47  310   24.41)
ramon: poll                 wall=7.000s usage=6.934s mem=25808KiB load=1.00 rootload=1.00
(smt.stats   84  12497 249181 814357  6130/5861/389   16068/1569    47  310   24.41)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   85  12691 254624 835199  6140/5880/390   16303/1569    47  310   24.51)
(smt.stats   86  12904 259995 851341  6227/5884/390   16618/1630    48  315   24.60)
(smt.stats   87  13138 264631 874707  6294/6006/390   16951/1632    48  315   24.60)
ramon: poll                 wall=8.004s usage=7.936s mem=26064KiB load=1.00 rootload=1.00
(smt.stats   88  13395 269277 904563  6344/6045/390   17252/1633    48  315   24.60)
(smt.stats   89  13677 274427 926448  6353/6090/392   17612/1741    49  320   24.70)
(smt.stats   90  13987 278875 964277  6379/6115/392   18251/1741    49  320   24.84)
(smt.stats   91  14088 280109 972946  6389/6128/392   18470/1741    49  320   24.84)
(smt.stats   92  14199 283287 982996  6437/6144/392   18637/1742    49  320   24.84)
(smt.stats   93  14321 286537 996052  6487/6227/393   18855/1957    50  322   24.94)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   94  14455 288231 1006054  6500/6236/393   19004/1957    50  322   24.94)
(smt.stats   95  14602 290541 1015455  6525/6244/393   19269/1964    50  322   24.94)
ramon: poll                 wall=9.004s usage=8.934s mem=26352KiB load=1.00 rootload=1.00
(smt.stats   96  14763 292125 1028695  6543/6279/393   19460/1964    50  322   24.94)
(smt.stats   97  14940 294323 1052052  6546/6286/393   19696/1964    50  322   25.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 163)
(smt.stats   98  15134 296251 1069395  6557/6293/393   19734/1964    50  322   25.03)
(smt.stats   99  15347 298336 1089875  6580/6304/393   19941/1964    50  322   25.03)
(smt.stats  100  15581 301089 1109776  6603/6331/393   20211/1964    50  322   25.03)
(smt.stats  101  15838 305680 1147282  6633/6354/393   20471/1964    50  322   25.03)
(smt.stats  102  16120 308611 1180701  6659/6380/393   20802/1964    50  322   25.13)
(smt.stats  103  16430 312306 1218119  6666/6404/393   21189/1964    50  322   25.13)
(smt.stats  104  16770 316205 1251938  6714/6420/393   21614/1966    50  322   25.24)
(smt.stats  105  16871 317002 1262856  6719/6455/394   21724/2153    51  323   25.24)
(smt.stats  106  16982 318515 1273432  6723/6459/394   21992/2153    51  323   25.24)
ramon: poll                 wall=10.000s usage=9.929s mem=26620KiB load=1.00 rootload=0.99
(smt.stats  107  17104 321784 1295735  6726/6462/396   22228/2153    51  323   25.24)
(smt.stats  108  17238 324039 1317163  6744/6467/396   22383/2154    51  323   25.34)
(smt.stats  109  17385 329384 1352421  6808/6530/396   22587/2218    52  327   25.44)
(smt.stats  110  17546 330548 1367930  6833/6551/398   22826/2218    52  327   25.54)
(smt.stats  111  17723 333637 1392917  6839/6557/398   23148/2227    53  348   25.54)
(smt.stats  112  17917 335874 1413823  6851/6565/398   23396/2227    53  348   25.64)
(smt.stats  113  18130 336825 1428906  6854/6572/398   23639/2227    53  348   25.64)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  114  18364 340197 1453826  6936/6594/398   23873/2227    53  348   25.64)
(smt.stats  115  18621 343941 1486528  6989/6663/398   24142/2227    53  348   25.64)
(smt.stats  116  18903 347356 1523966  7035/6721/398   24443/2227    53  348   25.74)
ramon: poll                 wall=11.000s usage=10.926s mem=27140KiB load=1.00 rootload=1.00
(smt.stats  117  19213 353756 1555221  7214/6763/399   24997/2297    54  348   25.84)
(smt.stats  118  19553 365977 1603401  7232/6948/399   25396/2297    54  348   25.84)
ramon: poll                 wall=12.000s usage=11.926s mem=27348KiB load=1.00 rootload=1.00
(smt.stats  119  19926 385880 1658134  7249/6965/399   25859/2297    54  348   25.93)
(smt.delete-inactive-clauses  :num-deleted-clauses 230)
(smt.stats  120  20027 386881 1661799  7266/6967/399   25747/2299    54  348   25.93)
(smt.stats  121  20138 388433 1678637  7277/6989/399   25890/2299    54  348   25.93)
(smt.stats  122  20260 389691 1690308  7294/6998/399   26060/2299    54  348   25.93)
(smt.stats  123  20394 390536 1705072  7294/7010/399   26257/2299    54  348   26.03)
(smt.stats  124  20541 391800 1718391  7298/7012/399   26482/2299    54  348   26.03)
(smt.stats  125  20702 397420 1736630  7300/7016/399   26656/2299    54  348   26.03)
(smt.stats  126  20879 405284 1769442  7307/7018/399   27230/2299    54  348   26.03)
(smt.stats  127  21073 409470 1798773  7357/7059/400   27543/2444    55  377   26.22)
(smt.stats  128  21286 415347 1817503  7457/7076/400   27944/2448    55  377   26.32)
ramon: poll                 wall=13.004s usage=12.929s mem=27956KiB load=1.00 rootload=1.00
(smt.stats  129  21520 420256 1850510  7528/7234/403   28431/2515    56  405   26.61)
(smt.stats  130  21777 426063 1865610  7652/7234/403   28902/2519    56  405   26.80)
ramon: poll                 wall=14.000s usage=13.925s mem=28368KiB load=1.00 rootload=1.00
(smt.stats  131  22059 431476 1900707  7816/7413/403   29393/2521    56  405   26.90)
(smt.stats  132  22369 437312 1939758  7939/7582/403   29848/2599    57  411   26.90)
ramon: poll                 wall=15.000s usage=14.925s mem=28624KiB load=1.00 rootload=1.00
(smt.stats  133  22709 444247 1971701  8135/7668/403   30721/2608    57  411   27.00)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  134  23082 453399 2028230  8230/7888/403   31250/2609    57  411   27.19)
(smt.stats  135  23492 460230 2087677  8409/7961/403   31881/2613    57  411   27.29)
ramon: poll                 wall=16.000s usage=15.925s mem=28880KiB load=1.00 rootload=1.00
(smt.stats  136  23593 462379 2095620  8430/8123/403   32036/2614    57  411   27.29)
(smt.stats  137  23704 465792 2104974  8442/8148/403   32207/2614    57  411   27.29)
(smt.stats  138  23826 467882 2120417  8445/8151/403   32379/2614    57  411   27.29)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 256 := 989&4096
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 256 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 512 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 128 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 48 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 32 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 32 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 4 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 4 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 4 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 1 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 2 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 4 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 8 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 16 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 2 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 4 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 8 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 16 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 32 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 64 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 128 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 256 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 512 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 5 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 2 := 989&2048
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 989&2048
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 4 := 989&2048
(smt.stats  139  23960 470069 2139922  8546/8241/491   32671/2831    58  418   27.58)
(smt.stats  140  24107 471924 2149603  8556/8249/491   32927/2831    58  418   27.58)
(smt.stats  141  24268 476613 2184188  8619/8252/491   33153/2832    58  418   27.69)
(smt.stats  142  24445 477622 2199821  8623/8316/491   33338/2832    58  418   27.69)
(smt.stats  143  24639 480909 2222752  8617/8321/491   33627/2880    59  433   27.69)
(smt.stats  144  24852 485871 2263765  8634/8337/492   34003/2880    59  433   27.69)
ramon: poll                 wall=17.000s usage=16.925s mem=29392KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 1195)
(smt.stats  145  25086 492003 2307443  8704/8402/493   33347/3043    60  435   27.79)
(smt.stats  146  25343 495520 2333918  8791/8417/493   33650/3044    60  435   27.88)
(smt.stats  147  25625 503211 2382228  8839/8534/494   34266/3044    60  435   27.98)
ramon: poll                 wall=18.000s usage=17.924s mem=29904KiB load=1.00 rootload=1.00
(smt.stats  148  25935 507772 2437990  8897/8567/494   35026/3106    61  439   28.07)
(smt.stats  149  26275 513694 2471724  8914/8590/494   35477/3108    61  439   28.86)
ramon: poll                 wall=19.000s usage=18.924s mem=30668KiB load=1.00 rootload=1.00
(smt.stats  150  26648 526544 2523890  9216/8605/494   36020/3113    61  439   29.00)
(smt.stats  151  27058 537870 2581483  9348/8923/494   36531/3118    61  439   29.10)
ramon: poll                 wall=20.000s usage=19.924s mem=31180KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:57:37 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.990s
ramon: group.utime          19.966s
ramon: group.stime          0.024s
ramon: group.mempeak        31440KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              1.00
