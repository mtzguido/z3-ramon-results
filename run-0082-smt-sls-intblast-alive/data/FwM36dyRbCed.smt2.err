ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:05:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28818 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FwM36dyRbCed.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             719082
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   72.4638     10000        49          0            1        2)
(sat.ddfw       1      1   36.6337     20001        98          1            1        3)
(sat.ddfw       1      1   37.1747     40001       196          2            1        5)
(smt.stats    0    101   4731    347  1346/1153/110     115/9     8   16   52.26)
(smt.stats    1    202   6835    896  1845/1655/113     233/29     9   26   52.36)
ramon: poll                 wall=1.004s usage=0.950s mem=54448KiB load=0.95 rootload=0.94
(sat.ddfw       1      1   31.9489     70001       343          3            1        8)
(smt.stats    2    313   9050   1818  1942/1711/113     360/29     9   26   52.45)
(sat.ddfw       1      1    27.027    110001       539          4            1       12)
(smt.stats    3    414  10312   3221  2088/1925/123     451/45    10   31   52.55)
ramon: poll                 wall=2.000s usage=1.942s mem=54804KiB load=1.00 rootload=0.99
(smt.stats    4    525  11962   4014  2474/1935/123     561/97    11   40   52.76)
(sat.ddfw       1      1   23.2878    160000       784          5            1       17)
(smt.stats    5    647  14669   5374  2623/2327/123     698/103    11   40   52.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  16520   8979  3206/2428/123     807/158    11   40   52.95)
(smt.stats    7    859  19332  11020  3338/3028/123     937/158    11   40   53.05)
ramon: poll                 wall=3.000s usage=2.930s mem=55344KiB load=0.99 rootload=0.99
(smt.stats    8    981  22295  13303  3379/3123/126    1079/189    12   44   53.05)
(sat.ddfw       1      1   19.8416    220001      1078          6            1       23)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&68719476736
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 2017612633061982208 := 288230374004279104 >>l 29
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 2147487903&68719476736
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 1729382259057758367 := 288230374004279104 >>l 29
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&68719476736
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 1729382256910270464 := 288230374004279104 >>l 29
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 536870908&68719476736
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 288230376151711743 := 4503599593816861 >>l 23
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 536870908&68719476736
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 288230376151711743 := 4503599593816861 >>l 23
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 536870908&68719476736
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 288230376151711743 := 4503599593816861 >>l 23
(smt.stats    9   1115  28057  21978  3447/3148/131    1198/207    14   60   53.24)
(smt.stats   10   1216  29742  23277  3521/3214/142    1334/210    15   62   53.24)
(smt.stats   11   1327  31867  26191  3570/3309/145    1456/222    17   76   53.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  33410  27626  3609/3320/145    1589/223    17   76   53.34)
ramon: poll                 wall=4.000s usage=4.106s mem=55676KiB load=1.18 rootload=1.17
(sat.ddfw       1      1   17.6278    290001      1421          7            1       30)
(smt.stats   13   1583  35929  30703  3791/3431/145    1748/226    17   76   53.34)
(smt.stats   14   1730  38461  36902  3877/3581/145    1929/226    17   76   53.43)
(smt.stats   15   1831  41065  41686  3920/3649/145    2032/226    17   76   53.53)
ramon: poll                 wall=5.000s usage=5.105s mem=55864KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.8134    370001      1813          8            1       38)
(smt.stats   16   1942  41957  43157  3992/3668/145    2145/231    17   76   53.63)
(smt.stats   17   2064  44293  46285  4148/3880/150    2287/286    19   77   53.63)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 64 := 65&64
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 2882303761517117505 := 136902082368 >>l 59
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 64 := 65&64
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 2882303761517117505 := 136902082368 >>l 59
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 64 := 65&64
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 2882303761517117505 := 136902082368 >>l 59
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 63 := 63&64
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 62 := 62&64
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 63&64
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 2882303761517117503 := 136902082368 >>l 59
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&64
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 2882303761517117440 := 136902082368 >>l 59
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&64
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 4503599593816980 := 2139095037 >>l 53
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&64
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 4503599593816980 := 2139095037 >>l 53
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&64
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 4503599593816980 := 2139095037 >>l 53
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&64
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 4503599593816980 := 2139095037 >>l 53
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&64
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 4503599593816980 := 2139095037 >>l 53
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&0
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 864691128455135232 := 136902079040 >>l 7
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&0
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 864691128455135232 := 136902079040 >>l 7
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&0
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 864691128455135232 := 136902079040 >>l 7
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&0
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 864691128455135232 := 136902079040 >>l 7
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 1069547492&0
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 4503599593816980 := 2139094985 >>l 1
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 1069547492&0
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 4503599593816980 := 2139094985 >>l 1
(smt.stats   18   2198  47626  52401  4235/3951/166    2474/314    20   81   53.73)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 2048 := 2133&2048
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 2133 := 136902082048 >>l 54
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 172 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 172 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 176 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 172 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 176 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 192 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 193 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 192 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 172 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 172 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 184 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 184 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 184 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 180 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 180 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 180 := 255&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 256 := 262&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 256 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 128 := 262&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 176 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 176 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 176 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 160 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 160 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 128 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 128 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 128 := 262&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 64 := 262&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 64 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 64 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 64 := 262&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 32 := 262&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 32 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 32 := 256&2048
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 256&2048
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 256 := 136902082048 >>l 54
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 256&2048
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 256 := 136902082048 >>l 54
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&2048
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 253 := 2139095032 >>l 48
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&2048
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 86 := 2139095032 >>l 48
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&2048
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 1 := 2139095032 >>l 48
(smt.stats   19   2345  50554  58002  4352/4044/233    2648/332    22   96   54.11)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 1024 := 1152&1024
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 1152 := 136902082112 >>l 55
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 1024 := 1135&1024
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 1135 := 136902082112 >>l 55
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 1024 := 1071&1024
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 1071 := 136902082112 >>l 55
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 1024 := 1071&1024
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 1071 := 136902082112 >>l 55
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&1024
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 580 := 2139095033 >>l 49
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&1024
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 259 := 2139095033 >>l 49
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&1024
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 259 := 2139095033 >>l 49
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 512 := 1088&512
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 512 := 1088&512
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 512 := 1088&512
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 512 := 1088&512
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 512 := 1088&512
(smt.stats   20   2506  53042  64353  4415/4142/289    2977/446    24  116   54.21)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 512 := 559&512
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 559 := 136902082176 >>l 56
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 512 := 768&512
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 768 := 136902082176 >>l 56
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 512 := 768&512
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 768 := 136902082176 >>l 56
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&512
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 513 := 2139095034 >>l 50
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&512
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 511 := 2139095034 >>l 50
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&512
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 374 := 2139095034 >>l 50
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 512&256
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 512 := 136902082240 >>l 57
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 256&256
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 256 := 256&256
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 256 := 136902082240 >>l 57
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 256 := 256&256
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 256 := 136902082240 >>l 57
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&256
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 374 := 2139095035 >>l 51
(smt.stats   21   2607  55209  67082  4517/4168/289    3120/453    24  116   54.31)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&256
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 259 := 2139095035 >>l 51
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 0&256
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 259 := 2139095035 >>l 51
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 1069547492&0
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 1069547493 := 2139094985 >>l 1
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 1069547492&0
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 1069547493 := 2139094985 >>l 1
(smt.stats   22   2718  59355  72663  4596/4299/316    3249/479    25  124   54.50)
(smt.stats   23   2840  64532  78666  4603/4318/318    3368/501    26  127   54.62)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 8589934592 := 10737421806&8589934592
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 288230386889133550 := 136902080640 >>l 32
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 8589934592 := 10737421806&8589934592
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 10737421806 := 136902080640 >>l 32
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 8589934592 := 8589935086&8589934592
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 8589935086 := 136902080640 >>l 32
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 2147483648 := 2147483695&2147483648
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 2147483695 := 136902080768 >>l 34
(smt.stats   24   2976  67682  86158  4632/4346/329    3528/531    28  138   54.72)
ramon: poll                 wall=6.000s usage=6.105s mem=57228KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.3312    460001      2254          9            1       47)
(smt.stats   25   3123  74394  94737  4707/4379/337    3729/559    29  144   54.91)
ramon: poll                 wall=7.000s usage=7.206s mem=57492KiB load=1.10 rootload=1.10
(smt.stats   26   3284  81872 103908  4972/4488/337    3980/579    29  144   55.13)
(sat.ddfw       1      1   13.0993    560001      2745         10            1       57)
ramon: poll                 wall=8.000s usage=8.206s mem=57320KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.4915    670001      3284         11            1       68)
(smt.stats   27   3461  86388 107833  5165/4719/337    4201/630    30  147   55.23)
ramon: poll                 wall=9.000s usage=9.362s mem=57744KiB load=1.16 rootload=1.16
(smt.stats   28   3562  89183 112138  5352/5048/337    4343/631    30  147   55.33)
(smt.stats   29   3673  94302 119895  5454/5072/337    4507/632    30  147   55.46)
(smt.stats   30   3795  98399 130434  5488/5174/337    4697/635    30  147   55.56)
(smt.stats   31   3929 103969 142396  5497/5209/337    4870/635    30  147   55.56)
ramon: poll                 wall=10.000s usage=10.506s mem=57828KiB load=1.14 rootload=1.14
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076 109454 151308  5548/5249/341    5066/804    32  147   55.56)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 7104 := 7140&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 7104 := 7140&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 40 := 7140&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 32 := 7140&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 7140&72057594037927936
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 7140 := 18446744073709551552 >>l 9
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 7141&72057594037927936
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 7141 := 18446744073709551552 >>l 9
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 7150&72057594037927936
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #103 #348) 64)) 7150 := 18446744073709551552 >>l 9
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 36028797018963967&72057594037927936
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 283726778705369233 := 288230376151711743 >>l 3
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 36028797018963967&72057594037927936
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 36028797018964967 := 288230376151711743 >>l 3
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 0 := 36028797018963967&72057594037927936
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 36028797018964967 := 288230376151711743 >>l 3
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 7168 := 36028797018963967&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 8192 := 36028797018963967&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 16384 := 36028797018963967&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 32768 := 36028797018963967&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 65536 := 36028797018963967&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 131072 := 36028797018963967&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 262144 := 36028797018963967&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 524288 := 36028797018963967&72057594037927936
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 1048576 := 36028797018963967&72057594037927936
(smt.stats   33   4237 115072 163112  5698/5333/368    5291/829    33  148   55.95)
band: (band[58] (lshr[64] (* 64 #103) (mod #349 64)) (if (= #646 63) 36893488147419103232 (if #648 18446744073709551616 #772))) 1052672 := 36028797018963967&72057594037927936
(sat.ddfw       1      1   11.5075    790001      3872         12            1       80)
(smt.stats   34   4414 115889 165304  5962/5400/409    5705/850    34  160   56.23)
ramon: poll                 wall=11.000s usage=11.556s mem=58628KiB load=1.05 rootload=1.05
(smt.stats   35   4608 123132 181133  6113/5793/418    6395/906    35  171   56.33)
(sat.ddfw       1      1   10.9051    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=12.636s mem=58816KiB load=1.08 rootload=1.08
(smt.stats   36   4709 126758 184709  6207/5841/418    6504/958    36  171   56.42)
ramon: poll                 wall=13.000s usage=13.637s mem=59332KiB load=1.00 rootload=1.00
(smt.stats   37   4820 132036 190078  6395/5997/418    6633/961    36  171   56.72)
(smt.stats   38   4942 135602 200343  6471/6143/418    6891/961    36  171   56.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 276)
(smt.stats   39   5076 139486 205409  6498/6182/418    6752/961    36  171   57.02)
(sat.ddfw       1      1   10.1435   1060001      5196         14            1      108)
ramon: poll                 wall=14.000s usage=14.636s mem=59388KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.004s usage=15.643s mem=59396KiB load=1.00 rootload=1.01
(smt.stats   40   5223 143490 208793  6663/6210/418    6920/980    36  171   57.12)
(sat.ddfw       1      1   9.48407   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=16.642s mem=59452KiB load=1.00 rootload=1.00
(smt.stats   41   5384 147385 213444  6919/6445/418    7139/992    36  171   57.21)
(smt.stats   42   5561 151448 223065  6976/6661/418    7542/997    36  171   57.31)
ramon: poll                 wall=17.000s usage=17.821s mem=59576KiB load=1.18 rootload=1.18
(sat.ddfw       1      1   9.19646   1370001      6715         16            1      139)
ramon: poll                 wall=18.000s usage=19.073s mem=59832KiB load=1.25 rootload=1.25
(smt.stats   43   5755 160094 234453  7196/6719/418    7789/1010    36  171   57.41)
(smt.stats   44   5968 166415 248206  7318/6934/418    8104/1010    36  171   57.50)
(smt.stats   45   6069 173682 254818  7325/7033/420    8204/1415    37  175   57.50)
ramon: poll                 wall=19.000s usage=20.097s mem=59832KiB load=1.02 rootload=1.02
(smt.stats   46   6180 178117 271680  7394/7065/420    8323/1415    37  175   57.50)
(smt.stats   47   6302 183309 278007  7430/7122/421    8490/1455    38  175   57.60)
(sat.ddfw       1      1   8.75702   1540001      7549         17            1      156)
(smt.stats   48   6436 187962 287931  7547/7151/421    8693/1460    38  175   57.60)
ramon: poll                 wall=20.000s usage=21.097s mem=60088KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:05:24 2024
ramon: root.execname        z3
ramon: root.utime           21.160s
ramon: root.stime           0.000s
ramon: group.total          21.171s
ramon: group.utime          21.163s
ramon: group.stime          0.008s
ramon: group.mempeak        60344KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.05
