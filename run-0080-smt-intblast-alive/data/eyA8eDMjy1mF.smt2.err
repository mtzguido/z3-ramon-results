ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:45:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25088 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1401
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/eyA8eDMjy1mF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             108306
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4036    549  1105/1002/100     120/17     6   16   19.07)
(smt.stats    1    202   7822   1730  1775/1570/100     239/23     6   16   19.16)
(smt.stats    2    313  10650   3686  1866/1649/100     354/24     6   16   19.26)
(smt.stats    3    414  13091   5760  1983/1810/106     454/52     8   24   19.26)
(smt.stats    4    525  13862   8372  2259/1811/107     581/76     9   26   19.47)
(smt.stats    5    647  15957  11772  2330/2120/108     699/87    11   27   19.47)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18492  14484  2411/2181/113     803/89    13   29   19.57)
(smt.stats    7    859  21067  17386  2468/2248/115     922/97    15   33   19.57)
(smt.stats    8    981  23501  21128  2504/2293/120    1042/130    17   41   19.66)
(smt.stats    9   1115  25514  24728  2556/2336/122    1160/134    18   43   19.66)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&0
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 68719476737 := 536870912 >>l 30
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&0
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 68719476737 := 536870912 >>l 30
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&0
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 68719476737 := 34359738368 >>l 30
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&0
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 68719476737 := 34359738368 >>l 30
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&0
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 34359738367 := 2 >>l 1
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2&0
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 3 := 4 >>l 1
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2&0
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 1 := 4 >>l 1
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 536870913&0
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 536870913 := 536870912 >>l 29
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&0
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 1 := 2147483648 >>l 29
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&0
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 1 := 2147483648 >>l 29
(smt.stats   10   1216  26466  26543  2595/2381/138    1268/137    19   48   19.87)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 67108865&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 67108865&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 134217728&67108864
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 34493956096 := 34359738368 >>l 39
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 67108866&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 67108864 := 67108865&67108864
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 34426847233 := 34359738368 >>l 39
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 67108864 := 536870913&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 536870913&67108864
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 34896609281 := 34896609280 >>l 39
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 536870913&67108864
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 34896609281 := 34896609280 >>l 39
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2&67108864
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 67108865 := 2048 >>l 10
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&67108864
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 67108863 := 2047 >>l 10
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&67108864
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 1025 := 1024 >>l 10
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 1 := 1&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2 := 2&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 4&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 4 := 4&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 8&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 8 := 8&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 16&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 16 := 16&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 32&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 32 := 32&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 64&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 64 := 64&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 128&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 128 := 128&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 256&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 256 := 256&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 512&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 512 := 512&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 256&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 256 := 256&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 128&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 128 := 128&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 512&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 512 := 512&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1024&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 1024 := 1024&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2048&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2048 := 2048&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 4096&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 4096 := 4096&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 8192&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 8192 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 16384&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 16384 := 16384&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 32768&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 32768 := 32768&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 65535&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 4096 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 65535&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 3584 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 65535&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 1024 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 65535&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2048 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 65535&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 512 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 65535&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 512 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 511 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 510 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 512 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 65535&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 1024 := 65535&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 65534&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 128 := 65534&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 256&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 256 := 256&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 32&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 32 := 32&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 64&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 64 := 64&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 64&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 64 := 64&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 64&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 64 := 64&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 64&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 64 := 64&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 8&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 8 := 8&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 16&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 16 := 16&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 8&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 8 := 8&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 16&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 16 := 16&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 11&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 11 := 11&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 10&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 10 := 10&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 8&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 8 := 8&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 8&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 8 := 8&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 4&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 4 := 4&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 3&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 3 := 3&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2 := 2&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 1 := 1&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2 := 2&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 8192&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 8192 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 16384&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 16384 := 16384&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 32768&67108864
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 32768 := 32768&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8191 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8190 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8188 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 16 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 32 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 64 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 128 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8128 := 8192&67108864
(smt.stats   11   1327  27732  30549  2819/2496/268    1416/159    21   82   20.46)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 128 := 65519&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 128 := 65519&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 128 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 128 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 128 := 8320&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 128 := 8192&67108864
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 128 := 8320&67108864
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28812  34702  2894/2625/323    1602/163    21   82   20.46)
(smt.stats   13   1583  32072  39483  2907/2683/334    1837/251    23  100   20.66)
(smt.stats   14   1730  34964  45126  3031/2784/336    2032/282    24  105   20.75)
(smt.stats   15   1831  37448  49336  3036/2789/337    2172/284    25  106   20.75)
(smt.stats   16   1942  40931  57319  3055/2808/342    2329/284    27  123   20.85)
(smt.stats   17   2064  42579  64021  3092/2833/346    2541/312    28  131   20.95)
(smt.stats   18   2198  44841  70227  3110/2855/346    2714/331    29  132   21.04)
(smt.stats   19   2345  46635  76060  3164/2869/346    2892/332    29  132   21.04)
ramon: poll                 wall=1.000s usage=0.998s mem=22468KiB load=1.00 rootload=0.98
(smt.stats   20   2506  48684  82729  3220/2959/351    3124/349    30  134   21.04)
(smt.stats   21   2607  51140  88227  3230/2967/352    3264/388    31  142   21.15)
(smt.stats   22   2718  52800  92029  3329/2983/352    3389/389    31  142   21.15)
(smt.stats   23   2840  54518  97527  3396/3074/352    3513/390    31  142   21.15)
(smt.stats   24   2974  56065 103303  3466/3164/352    3674/391    31  142   21.25)
(smt.stats   25   3121  59216 111356  3534/3221/353    3926/466    32  142   21.25)
(smt.stats   26   3282  63385 122633  3561/3302/356    4295/524    33  145   21.34)
(smt.stats   27   3459  66433 131426  3567/3311/362    4571/580    34  156   21.44)
(smt.stats   28   3560  68508 137441  3611/3311/362    4684/580    34  156   21.44)
(smt.stats   29   3671  71069 145238  3648/3360/362    4833/654    35  173   21.44)
(smt.stats   30   3793  74199 150671  3712/3396/362    5025/659    35  173   21.44)
(smt.stats   31   3927  77298 161563  3766/3510/363    5246/740    36  180   21.62)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  82676 171591  3815/3513/363    5516/742    36  180   21.72)
ramon: poll                 wall=2.000s usage=1.997s mem=23456KiB load=1.00 rootload=0.99
(smt.stats   33   4235  84553 178151  3847/3572/363    5716/742    36  180   22.10)
(smt.stats   34   4412  88582 194165  3864/3608/364    6032/797    37  184   22.10)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 201326593&0
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 576444809586147329 := 18446743525564350464 >>l 29
(smt.stats   35   4606  92908 209733  3880/3614/364    6312/797    37  184   22.10)
(smt.stats   36   4707  95942 219073  3928/3670/369    6513/824    38  186   22.10)
(smt.stats   37   4818  99209 231970  3997/3670/369    6738/825    38  186   22.22)
(smt.stats   38   4940 101707 241504  4019/3748/369    6962/856    39  193   22.22)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 104846 253513  4098/3772/369    7325/856    39  193   22.31)
(smt.stats   40   5221 109841 265977  4146/3842/369    7668/860    39  193   22.48)
(smt.stats   41   5382 113318 280975  4265/3969/371    7978/951    40  209   22.48)
(smt.stats   42   5559 115568 294357  4276/4018/373    8590/951    40  209   22.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   43   5753 120363 315486  4287/4029/374    8886/1126    41  222   22.58)
(smt.stats   44   5966 126336 337822  4298/4040/376    9223/1142    42  224   22.69)
(smt.stats   45   6067 129221 349445  4299/4041/376    9309/1159    43  251   22.69)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 536870929&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 536870929&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 603979745&16
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 603979745 := 536870912 >>l 61
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 536870912&16
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 536870912 := 536870912 >>l 61
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 536870912&16
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 536870912 := 536870912 >>l 61
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 0&16
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 17 := 0 >>l 32
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 0&16
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 17 := 0 >>l 32
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 0&16
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 17 := 0 >>l 32
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&16
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 1 := 1&16
ramon: poll                 wall=3.000s usage=2.997s mem=24228KiB load=1.00 rootload=1.00
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 6&16
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 4 := 6&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 6&16
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 4 := 6&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 4&16
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2 := 4&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 4&16
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2 := 4&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 4&16
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2 := 4&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 4&16
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2 := 4&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 3&16
band: (band[35] (lshr[35] (bv2int %0) (mod #100 35)) (if (= #460 34) 34359738368 (if #462 17179869184 #528))) 2 := 3&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 2 := 2&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 2 := 2&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 1 := 1&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 4 := 4&16
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 4 := 4&16
(smt.stats   46   6178 130798 354245  4366/4053/376    9460/1168    43  251   23.09)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 34292629473&4
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 9223372071147405281 := 9223372040612872192 >>l 63
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 34292629473&4
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 576462435863494625 := 9223372039539130368 >>l 63
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 21474836513&4
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 576462388685963297 := 11529215043384115200 >>l 63
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&4
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 0 := 17179869189 >>l 34
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&4
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 5 := 17179869189 >>l 34
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&4
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 5 := 17179870207 >>l 34
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 1 := 1&4
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 1 := 1&4
(smt.stats   47   6300 133270 363943  4437/4157/429    9633/1175    43  251   23.18)
(smt.stats   48   6434 134795 370684  4571/4282/430    9881/1193    44  269   23.28)
(smt.stats   49   6581 138071 381314  4649/4305/430   10309/1195    44  269   23.38)
(smt.stats   50   6742 142082 398945  4907/4383/430   10758/1203    44  269   23.48)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8589934592 := 8589935072&8589934592
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 288230350381908448 := 4611686021648613376 >>l 32
(smt.stats   51   6919 148820 417959  4939/4619/430   11690/1269    45  278   23.67)
(smt.stats   52   7113 150502 431537  5033/4722/437   12190/1269    45  278   23.87)
(smt.stats   53   7326 155293 452978  5052/4743/437   12741/1391    46  292   24.06)
(smt.stats   54   7560 159773 477646  5145/4826/439   13170/1484    47  296   24.15)
ramon: poll                 wall=4.000s usage=3.997s mem=25580KiB load=1.00 rootload=1.00
(smt.stats   55   7661 160674 483213  5159/4834/439   13284/1485    47  296   24.15)
(smt.stats   56   7772 161658 492525  5159/4838/439   13426/1485    47  296   24.15)
(smt.stats   57   7894 165184 506606  5176/4839/439   13602/1512    48  298   24.15)
(smt.stats   58   8028 167247 520621  5194/4865/440   13953/1512    48  298   24.25)
(smt.stats   59   8175 171478 541826  5198/4877/440   14272/1512    48  298   24.35)
(smt.stats   60   8336 176029 562003  5209/4886/440   14702/1579    49  324   24.57)
(smt.stats   61   8513 181379 589680  5219/4896/442   15044/1579    49  324   24.66)
(smt.stats   62   8707 184307 617612  5240/4908/442   15382/1609    50  356   24.66)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8920 188895 648239  5255/4929/443   15823/1640    51  365   24.76)
(smt.stats   64   9154 192322 673099  5275/4945/445   16438/1640    51  365   24.85)
ramon: poll                 wall=5.000s usage=4.996s mem=26308KiB load=1.00 rootload=1.00
(smt.stats   65   9411 199993 730012  5287/4955/446   17136/1685    52  366   24.95)
(smt.stats   66   9512 201628 739858  5300/4966/447   17548/1685    52  366   25.04)
(smt.stats   67   9623 206683 760132  5319/4970/447   17784/1686    52  366   25.04)
(smt.stats   68   9745 209932 773404  5456/4999/447   18175/1736    53  369   25.14)
(smt.stats   69   9879 213579 797623  5619/5142/447   18562/1740    53  369   25.33)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 216208 812513  5718/5302/447   19154/1740    53  369   25.42)
ramon: poll                 wall=6.000s usage=5.996s mem=27044KiB load=1.00 rootload=1.00
(smt.stats   71  10187 221442 843032  5733/5395/449   19568/1812    54  369   25.42)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8 := 201326601&8
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 18446744039551139849 := 18446742424978980864 >>l 62
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8 := 201326607&8
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 18446744039551139855 := 18446744039886684160 >>l 62
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 8 := 201326601&8
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 18446744039551139849 := 18446744073172680704 >>l 62
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 3&8
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 5 := 34359738367 >>l 33
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2&8
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 3 := 22011707401 >>l 33
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 2&8
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 3 := 22011707401 >>l 33
(smt.stats   72  10364 225248 870192  5775/5408/449   20238/1815    54  369   25.62)
(smt.stats   73  10558 229024 890693  5821/5467/460   20830/1902    55  377   25.71)
(smt.stats   74  10771 232980 915314  5924/5506/460   21202/1903    55  377   25.71)
(smt.stats   75  11005 238622 939999  6002/5663/462   21998/2026    56  383   25.71)
ramon: poll                 wall=7.000s usage=6.996s mem=27396KiB load=1.00 rootload=1.00
(smt.stats   76  11262 246199 988135  6019/5669/462   22711/2027    56  383   25.92)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11544 255558 1040749  6041/5701/462   23375/2027    56  383   26.01)
(smt.stats   78  11645 258336 1060418  6046/5705/462   23619/2075    57  389   26.01)
(smt.stats   79  11756 261445 1078765  6048/5705/462   23799/2075    57  389   26.11)
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&1073741824
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 1 := 5167806905665454080 >>l 35
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&1073741824
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 1 := 5167809104688709632 >>l 35
band: (band[35] (lshr[64] (* 536870912 #99) (mod #252 64)) (if (= #551 63) 36893488147419103232 (if #553 18446744073709551616 #677))) 0 := 1&1073741824
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #100 #251) 64)) 1 := 5167807455421267968 >>l 35
(smt.stats   80  11878 263766 1094551  6254/5712/462   23994/2082    57  389   26.20)
(smt.stats   81  12012 264748 1103947  6325/5928/467   24156/2086    57  389   26.30)
(smt.stats   82  12159 266496 1130013  6360/6003/467   24344/2088    57  389   26.30)
(smt.stats   83  12320 267661 1149073  6393/6023/467   24511/2120    58  390   26.30)
ramon: poll                 wall=8.000s usage=7.996s mem=27984KiB load=1.00 rootload=1.00
(smt.stats   84  12497 270113 1166824  6487/6054/467   24801/2121    58  390   26.40)
(smt.stats   85  12691 272587 1192301  6537/6162/468   25209/2121    58  390   26.40)
(smt.stats   86  12904 279718 1224303  6568/6196/468   25723/2121    58  390   26.49)
(smt.stats   87  13138 285476 1253510  6628/6239/468   25783/2239    59  837   26.49)
ramon: poll                 wall=9.000s usage=8.995s mem=28360KiB load=1.00 rootload=1.00
(smt.stats   88  13395 290389 1305791  6763/6405/472   26581/2241    59  837   26.59)
(smt.stats   89  13677 296043 1355879  6790/6435/472   27418/2337    60  841   26.78)
(smt.stats   90  13987 301772 1415137  6811/6456/474   27938/2423    61  860   26.87)
(smt.stats   91  14088 302760 1426216  6821/6461/474   28108/2424    61  860   26.87)
(smt.stats   92  14199 304125 1462836  6826/6470/474   28307/2424    61  860   26.97)
(smt.stats   93  14321 305300 1483012  6844/6482/474   28637/2425    61  860   26.97)
(smt.stats   94  14455 308830 1502472  6895/6490/474   29331/2425    61  860   27.07)
ramon: poll                 wall=10.000s usage=9.995s mem=28680KiB load=1.00 rootload=1.00
(smt.stats   95  14602 311684 1515341  6922/6545/474   29850/2426    61  860   27.26)
(smt.stats   96  14763 316310 1542010  7037/6639/475   30708/2577    62  861   27.36)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   97  14940 319576 1564485  7093/6709/475   31229/2577    62  861   27.36)
(smt.delete-inactive-clauses  :num-deleted-clauses 336)
ramon: poll                 wall=11.002s usage=10.999s mem=29248KiB load=1.00 rootload=1.00
(smt.stats   98  15134 325401 1585436  7176/6741/475   31717/2582    62  861   27.56)
(smt.stats   99  15347 330567 1613458  7303/6875/475   32144/2582    62  861   27.65)
ramon: poll                 wall=12.002s usage=11.999s mem=29504KiB load=1.00 rootload=1.00
(smt.stats  100  15581 335456 1637283  7356/6971/475   32984/2585    62  861   27.65)
(smt.stats  101  15838 341267 1690408  7375/7016/475   33554/2585    62  861   27.75)
(smt.stats  102  16120 348307 1720531  7388/7025/477   34761/2875    63  894   27.94)
(smt.stats  103  16430 351157 1754811  7438/7063/479   35211/2875    63  894   28.33)
ramon: poll                 wall=13.000s usage=12.995s mem=30140KiB load=1.00 rootload=1.00
(smt.stats  104  16770 356248 1794385  7808/7090/479   35642/2886    63  894   28.42)
(smt.stats  105  16871 357166 1806122  7836/7461/479   35765/2887    63  894   28.52)
(smt.stats  106  16982 359021 1824698  7850/7491/483   36076/2933    64  918   28.61)
(smt.stats  107  17104 361422 1835938  7853/7494/483   36258/2933    64  918   28.61)
(smt.stats  108  17238 364453 1859179  7871/7499/483   36450/2934    64  918   28.61)
(smt.stats  109  17385 365544 1896646  7882/7521/483   36657/2934    64  918   28.61)
(smt.stats  110  17546 367661 1917252  7888/7527/484   36933/2934    64  918   28.61)
ramon: poll                 wall=14.000s usage=13.995s mem=30396KiB load=1.00 rootload=1.00
(smt.stats  111  17723 377511 1976092  7890/7529/484   37651/2934    64  918   28.80)
(smt.stats  112  17917 382363 2046960  7896/7535/484   38375/3107    65  926   28.90)
(smt.stats  113  18130 386259 2078417  7903/7538/484   38795/3107    65  926   28.90)
(smt.stats  114  18364 393809 2136930  7903/7542/484   39279/3107    65  926   28.90)
(smt.stats  115  18621 398428 2177029  7919/7554/484   39894/3107    65  926   28.99)
ramon: poll                 wall=15.000s usage=14.994s mem=30652KiB load=1.00 rootload=1.00
(smt.stats  116  18903 403566 2251541  7920/7559/484   40269/3107    65  926   29.09)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  117  19213 411444 2314705  7929/7564/484   40832/3107    65  926   29.09)
(smt.stats  118  19553 418422 2377949  7937/7576/485   41620/3296    66  951   29.39)
(smt.stats  119  19926 426426 2453134  7951/7590/485   42678/3296    66  951   29.48)
ramon: poll                 wall=16.002s usage=15.998s mem=30960KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 1764)
(smt.stats  120  20027 427322 2466469  7952/7591/485   41063/3296    66  951   29.48)
(smt.stats  121  20138 430112 2490029  7954/7593/485   41260/3296    66  951   29.48)
(smt.stats  122  20260 433286 2514984  7959/7598/485   41406/3296    66  951   29.48)
(smt.stats  123  20394 439640 2580336  7959/7598/485   41698/3296    66  951   29.48)
(smt.stats  124  20541 443037 2606266  7962/7601/485   42254/3296    66  951   29.48)
(smt.stats  125  20702 449484 2647538  7964/7603/486   42519/3526    67  973   29.58)
(smt.stats  126  20879 457590 2704404  7966/7605/486   42940/3526    67  973   29.58)
ramon: poll                 wall=17.000s usage=16.994s mem=31216KiB load=1.00 rootload=1.00
(smt.stats  127  21073 464083 2746042  7970/7609/486   43737/3526    67  973   29.58)
(smt.stats  128  21286 473435 2789468  7976/7615/486   44452/3526    67  973   29.58)
(smt.stats  129  21520 479619 2830683  7979/7618/486   45329/3526    67  973   29.69)
ramon: poll                 wall=18.000s usage=17.994s mem=31472KiB load=1.00 rootload=1.00
(smt.stats  130  21777 493200 2917011  8004/7620/486   46187/3527    67  973   29.78)
(smt.stats  131  22059 499344 2965918  8270/7658/486   46855/3528    67  973   29.88)
(smt.stats  132  22369 506753 3049251  8278/7915/486   47702/3528    67  973   29.97)
(smt.stats  133  22709 513565 3137942  8281/7920/486   48180/3528    67  973   30.07)
ramon: poll                 wall=19.000s usage=18.994s mem=31728KiB load=1.00 rootload=1.00
(smt.stats  134  23082 521749 3227887  8285/7924/486   48767/3528    67  973   30.95)
(smt.stats  135  23492 531254 3319142  8290/7929/487   49938/3967    68  974   31.05)
(smt.stats  136  23593 534231 3358074  8294/7933/488   50090/3967    68  974   31.05)
ramon: poll                 wall=20.002s usage=19.997s mem=32944KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:46:13 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.003s
ramon: group.utime          19.979s
ramon: group.stime          0.024s
ramon: group.mempeak        33520KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
