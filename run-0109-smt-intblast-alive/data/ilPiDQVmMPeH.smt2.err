ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:46:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40827 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ilPiDQVmMPeH.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3054304
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2025    530  1041/940/110     102/23     8   24   18.97)
(smt.stats    1    202   2928   1217  1497/1173/110     207/39     8   24   19.17)
(smt.stats    2    313   4580   2964  1625/1445/110     325/41     8   24   19.17)
(smt.stats    3    414   6156   4414  1673/1521/119     442/50     9   24   19.27)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 28 := 28&29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 8589934621 := 8589934622 << 32
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 14 := 14&15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 8589934607 := 8589934608 << 31
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 14 := 14&15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 17179869199 := 17179869180 << 31
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 14&4294967296
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 15 := 5 << 32
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 28&29
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 28&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 8589934624 := 12884901892 << 32
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 28&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 8589934624 := 12884901892 << 32
(smt.stats    4    525   7202   5958  1715/1562/141     532/61    12   39   19.37)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 28 := 28&8589934590
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 17179869182 := 17179869182 << 32
(smt.stats    5    647   9127   8129  1764/1596/142     654/63    13   43   19.37)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   9943  10290  1830/1671/143     759/73    14   43   19.46)
(smt.stats    7    859  11541  12312  1836/1671/143     873/74    14   43   19.56)
(smt.stats    8    981  13643  14428  1866/1707/144     997/84    15   45   19.56)
(smt.stats    9   1115  15289  16903  1908/1719/145    1149/108    16   47   19.68)
(smt.stats   10   1216  17411  19495  1988/1752/145    1257/110    16   47   19.68)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 12 := 14&13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 8589934605 := 6 << 31
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 14&4294967296
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 0 := 9 << 32
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 14&4294967296
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 0 := 6442450949 << 32
(smt.stats   11   1327  18909  21561  2074/1879/145    1368/114    16   47   19.68)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  20529  23858  2144/1918/150    1503/126    17   48   19.77)
(smt.stats   13   1583  22777  28094  2162/2001/151    1635/126    17   48   19.77)
(smt.stats   14   1730  26169  33374  2165/2004/152    1773/131    19   55   19.87)
(smt.stats   15   1831  28689  36047  2167/2006/152    1875/131    19   55   19.87)
(smt.stats   16   1942  31465  39397  2171/2008/152    1984/131    19   55   19.87)
(smt.stats   17   2064  32474  41640  2184/2024/162    2107/144    20   64   19.97)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 68719476735 := 4294967314 << 16
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 68719476735 := 50 << 16
(smt.stats   18   2198  34368  43908  2200/2026/162    2244/145    20   64   20.06)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 18 << 21
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 18 << 21
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 18 << 20
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 18 << 18
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 18 << 17
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 18 << 19
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 17179869183 := 18 << 27
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 21476671473 := 18 << 27
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 21476671473 := 18 << 27
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 18 << 26
(smt.stats   19   2345  35420  45246  2285/2050/167    2392/160    21   77   20.35)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 50 << 25
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 25
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 25
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 17179869183 := 46 << 19
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 20
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 20
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 24
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 24
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 17179869183 := 46 << 22
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736881 := 46 << 21
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12884901889 := 46 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4296802288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 12886736880 := 46 << 24
(smt.stats   20   2506  37484  48562  2453/2260/223    2553/171    21   77   20.45)
ramon: poll                 wall=1.000s usage=0.924s mem=21828KiB load=0.92 rootload=0.91
(smt.stats   21   2607  39095  52758  2566/2361/228    2650/177    23  100   20.67)
(smt.stats   22   2718  40777  55081  2783/2438/228    2770/179    23  100   20.77)
(smt.stats   23   2840  45138  63570  2786/2582/228    2901/179    23  100   20.77)
(smt.stats   24   2974  47143  66802  2816/2606/232    3054/201    24  110   20.86)
(smt.stats   25   3121  49677  73080  2870/2635/232    3231/204    24  110   20.96)
(smt.stats   26   3282  52376  83314  2965/2751/245    3374/235    25  119   20.96)
(smt.stats   27   3459  54084  88224  3090/2757/245    3564/244    25  119   21.25)
(smt.stats   28   3560  56503  93928  3495/3270/245    3727/257    26  128   21.25)
(smt.stats   29   3671  58978 102842  3516/3288/245    3863/257    26  128   21.25)
(smt.stats   30   3793  62059 110762  3580/3315/245    4049/258    26  128   21.25)
(smt.stats   31   3927  64419 118634  3702/3415/245    4216/259    26  128   21.34)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  66345 123296  3749/3499/245    4370/262    26  128   21.34)
ramon: poll                 wall=2.002s usage=1.925s mem=22608KiB load=1.00 rootload=0.99
(smt.stats   33   4235  69264 132144  3882/3570/245    4545/267    26  128   21.34)
(smt.stats   34   4412  72473 147875  3894/3680/245    4730/268    26  128   21.44)
(smt.stats   35   4606  74935 158245  3988/3691/247    4949/414    27  136   21.44)
(smt.stats   36   4707  76236 163580  4007/3789/247    5065/414    27  136   21.44)
(smt.stats   37   4818  76981 168141  4014/3803/247    5192/414    27  136   21.53)
(smt.stats   38   4940  77738 170449  4031/3804/247    5321/416    27  136   21.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 145)
(smt.stats   39   5074  78839 176457  4053/3825/248    5354/460    28  137   21.53)
(smt.stats   40   5221  80792 192147  4105/3845/248    5518/461    28  137   21.53)
(smt.stats   41   5382  82672 201672  4178/3912/267    5671/500    29  162   21.53)
(smt.stats   42   5559  85119 211418  4239/3979/267    5857/500    29  162   21.53)
(smt.stats   43   5753  87964 223962  4284/4048/267    6052/500    29  162   21.63)
(smt.stats   44   5966  92077 241407  4317/4100/267    6278/501    29  162   21.63)
ramon: poll                 wall=3.000s usage=2.922s mem=22888KiB load=1.00 rootload=1.00
(smt.stats   45   6067  93458 244689  4318/4113/267    6397/501    29  162   21.63)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&4294967302
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 21474836486 := 12884901890 << 22
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 6553615 := 6442450945 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 6553615 := 6442450945 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 11 := 6442450945 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 11 := 6442450945 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 10 := 6442450945 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 10 := 6442450945 << 23
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 54043195536834560 := 12884901890 << 24
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 54043195536834560 := 12884901890 << 27
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 54043195536834560 := 12884901890 << 26
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&8388608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 54043195536834560 := 12884901890 << 25
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&1834993
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 54043195530280945 := 12884901890 << 23
(smt.stats   46   6178  94894 248029  4374/4124/267    6521/506    29  162   21.73)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 27
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 27
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 27
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 27
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 26
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 26
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 26
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 24
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 24
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 25
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 25
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&1610612736
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 4294967307 := 6 << 28
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&1610612736
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 4294967308 := 6 << 28
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&1610612736
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 4294967308 := 6 << 28
(smt.stats   47   6300  96282 250978  4478/4173/272    6643/564    30  163   21.96)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&3145728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 3145728 := 12 << 16
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&786432
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 50331647 := 6 << 17
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&786432
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 50331647 := 6 << 17
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&786432
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 50331647 := 6 << 17
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 11 := 12 << 18
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 11 := 12 << 17
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 17 := 18 << 5
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 11 := 12 << 7
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 11 := 12 << 10
(smt.stats   48   6435  98434 254798  4639/4351/303    6799/570    30  163   22.06)
(smt.stats   49   6582  99459 261583  4683/4420/323    6954/570    30  163   22.06)
(smt.stats   50   6743 103270 275859  4740/4423/323    7135/604    31  178   22.15)
(smt.stats   51   6920 106381 294571  4778/4526/324    7326/634    32  180   22.15)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7114 108902 305109  4824/4526/325    7527/634    32  180   22.43)
(smt.stats   53   7327 115214 318386  4902/4591/325    7749/635    32  180   22.53)
(smt.stats   54   7561 117926 338552  4980/4651/325    8008/643    33  182   22.62)
(smt.stats   55   7662 118961 352122  5068/4778/325    8142/643    33  182   22.72)
(smt.stats   56   7773 120771 368678  5229/4889/328    8272/677    34  183   23.04)
(smt.stats   57   7895 123038 376661  5437/5027/328    8428/692    35  185   23.44)
ramon: poll                 wall=4.000s usage=3.922s mem=24996KiB load=1.00 rootload=1.00
(smt.stats   58   8029 126729 392915  5539/5159/351    8640/692    35  185   23.63)
(smt.stats   59   8176 132852 405858  5588/5168/351    8793/757    36  217   23.82)
(smt.stats   60   8337 136958 427486  5620/5235/351    9001/757    36  217   23.82)
(smt.stats   61   8514 139623 448705  5642/5253/351    9225/757    36  217   23.91)
ramon: poll                 wall=5.000s usage=4.921s mem=25464KiB load=1.00 rootload=1.00
(smt.stats   62   8708 146595 469866  5730/5278/351    9485/760    36  217   24.10)
(smt.stats   63   8921 153735 494813  5798/5380/351    9798/761    36  217   24.20)
ramon: poll                 wall=6.000s usage=5.921s mem=25836KiB load=1.00 rootload=0.99
(smt.stats   64   9155 155959 517158  5933/5458/352   10077/837    37  219   24.39)
(smt.stats   65   9412 159775 562700  6414/6009/367   10409/907    38  233   24.49)
(smt.stats   66   9513 160154 574659  6416/6011/367   10515/907    38  233   24.58)
(smt.stats   67   9624 160888 593548  6480/6056/367   10667/907    38  233   24.68)
(smt.stats   68   9746 162266 610139  6564/6105/378   10806/921    39  239   24.68)
(smt.stats   69   9880 163498 635532  6606/6138/378   10958/921    39  239   24.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 191)
(smt.stats   70  10027 164044 660877  6637/6197/378   10923/941    40  244   24.68)
(smt.stats   71  10188 166278 701048  6647/6208/378   11100/941    40  244   24.78)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10365 167298 722040  6654/6222/378   11291/941    40  244   24.78)
ramon: poll                 wall=7.000s usage=6.920s mem=26252KiB load=1.00 rootload=1.00
(smt.stats   73  10559 174938 773674  6702/6250/384   11503/984    42  247   24.87)
(smt.stats   74  10772 175817 776957  7025/6293/384   11741/1001    42  247   25.06)
(smt.stats   75  11263 182028 815033  7903/7439/396   12332/1023    43  260   25.17)
(smt.stats   76  11545 185537 880008  7956/7519/414   12630/1106    45  301   25.36)
ramon: poll                 wall=8.000s usage=7.920s mem=26888KiB load=1.00 rootload=1.00
(smt.stats   77  11646 190023 888918  8083/7604/421   12865/1106    45  301   25.36)
(smt.stats   78  11757 197200 908675  8209/7637/421   13024/1106    45  301   25.46)
(smt.stats   79  11879 202098 922875  8273/7755/421   13198/1180    46  308   25.46)
(smt.stats   80  12013 206056 945993  8340/7897/466   13341/1186    47  363   25.56)
ramon: poll                 wall=9.000s usage=8.919s mem=27024KiB load=1.00 rootload=1.00
(smt.stats   81  12160 209419 964833  8355/7900/466   13491/1186    47  363   25.84)
(smt.stats   82  12321 215890 983699  8368/7925/466   13688/1186    47  363   25.75)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12498 222260 1008984  8413/7938/466   14037/1189    47  363   25.94)
(smt.stats   84  12692 229873 1030089  8431/7984/466   14293/1189    47  363   26.04)
(smt.stats   85  12905 237627 1051685  8489/7995/466   14634/1193    47  363   26.04)
ramon: poll                 wall=10.000s usage=9.919s mem=27580KiB load=1.00 rootload=1.00
(smt.stats   86  13139 245571 1078862  8555/8055/466   14946/1193    47  363   25.94)
(smt.stats   87  13396 259618 1129261  8659/8122/466   15251/1194    47  363   25.94)
ramon: poll                 wall=11.000s usage=10.918s mem=27804KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.918s mem=28004KiB load=1.00 rootload=1.00
(smt.stats   88  13678 270615 1158688  8803/8257/467   15560/1382    48  367   26.13)
ramon: poll                 wall=13.000s usage=12.917s mem=28008KiB load=1.00 rootload=0.99
(smt.stats   89  13988 281592 1200673  8916/8364/467   15976/1386    48  367   26.42)
(smt.stats   90  14089 286309 1215511  8948/8491/467   16106/1388    48  367   26.23)
(smt.stats   91  14200 290396 1232454  8968/8507/467   16237/1388    48  367   26.23)
(smt.stats   92  14322 294800 1255180  9001/8538/467   16391/1389    48  367   26.65)
(smt.stats   93  14456 298903 1267059  9008/8562/467   16541/1389    48  367   26.74)
ramon: poll                 wall=14.000s usage=13.917s mem=28444KiB load=1.00 rootload=1.00
(smt.stats   94  14603 303493 1287176  9074/8565/467   16741/1390    48  367   26.84)
(smt.stats   95  14764 307143 1311861  9114/8642/467   17001/1390    48  367   26.84)
(smt.stats   96  14941 314688 1344443  9151/8680/467   17233/1390    48  367   26.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 314)
(smt.stats   97  15135 317069 1364231  9151/8708/467   17124/1390    48  367   26.84)
ramon: poll                 wall=15.000s usage=14.916s mem=28620KiB load=1.00 rootload=1.00
(smt.stats   98  15348 323461 1386230  9179/8712/467   17366/1390    48  367   26.93)
(smt.stats   99  15582 329024 1422118  9237/8750/467   17617/1390    48  367   27.04)
(smt.stats  100  15839 335519 1455413  9299/8798/467   17883/1390    48  367   27.04)
ramon: poll                 wall=16.000s usage=15.916s mem=28836KiB load=1.00 rootload=1.00
(smt.stats  101  16121 342502 1495960  9314/8861/467   18185/1391    48  367   27.13)
(smt.stats  102  16431 348160 1546603  9395/8887/467   18567/1392    48  367   27.23)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  103  16771 350356 1611872  9426/8979/467   18902/1392    48  367   27.23)
(smt.stats  104  16872 351984 1641375  9426/8983/467   19015/1392    48  367   27.23)
(smt.stats  105  16983 353625 1667142  9436/8993/467   19125/1392    48  367   27.23)
(smt.stats  106  17105 354514 1673542  9437/8994/467   19256/1392    48  367   27.23)
(smt.stats  107  17239 356559 1715926  9451/8997/467   19429/1392    48  367   27.23)
ramon: poll                 wall=17.000s usage=16.915s mem=29000KiB load=1.00 rootload=1.00
(smt.stats  108  17386 359977 1733656  9469/9011/467   19596/1392    48  367   27.42)
(smt.stats  109  17547 360773 1771672  9487/9038/467   19779/1393    48  367   27.42)
(smt.stats  110  17724 362415 1786232  9519/9056/467   19976/1393    48  367   27.52)
(smt.stats  111  17918 365636 1808401  9557/9081/467   20188/1395    48  367   27.52)
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 7&1
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 17179869185 := 0 << 30
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #969 #295 #722) 64)) 17179869185 := 0 << 30
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 7&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 6 := 0 << 31
band: (band[33] (if (or #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 ...) 0 (if #758 1 #857)) (shl[64] (* 2 #282) (mod #984 64))) 0 := 7&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 6 := 0 << 31
(smt.stats  112  18131 369236 1841174  9608/9153/487   20407/1689    49  385   27.71)
ramon: poll                 wall=18.000s usage=17.914s mem=29324KiB load=1.00 rootload=1.00
(smt.stats  113  18365 377131 1873757  9695/9222/487   20680/1689    49  385   27.90)
(smt.stats  114  18622 384911 1916763  9722/9250/492   20943/1702    50  389   27.90)
(smt.stats  115  18904 404998 2028203  9731/9263/492   21223/1712    51  390   27.90)
ramon: poll                 wall=19.000s usage=18.914s mem=29680KiB load=1.00 rootload=1.00
(smt.stats  116  19214 412657 2078220  9790/9268/492   21561/1712    51  390   28.00)
ramon: poll                 wall=20.000s usage=19.914s mem=30004KiB load=1.00 rootload=1.00
(smt.stats  117  19554 419124 2119731  9830/9343/492   21911/1712    51  390   28.19)
ramon: end                  Tue Dec 24 15:47:09 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.990s
ramon: group.utime          19.958s
ramon: group.stime          0.032s
ramon: group.mempeak        30260KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.00
