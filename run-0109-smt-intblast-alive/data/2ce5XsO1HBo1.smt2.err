ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:22:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42997 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1269
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2ce5XsO1HBo1.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2770327
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   1319   1283  1309/1179/105     100/57     3   16   19.25)
(smt.stats    1    202   2425   1535  1887/1701/107     200/61     5   17   19.73)
(smt.stats    2    313   3544   2465  2196/1967/107     320/61     5   17   19.73)
ramon: poll                 wall=1.003s usage=0.920s mem=20984KiB load=0.92 rootload=0.91
(smt.stats    3    414   5898   3779  2396/2020/107     448/72     5   17   19.93)
(smt.stats    4    525   6994   5044  3069/2700/112     561/102     6   25   20.12)
(smt.stats    5    647   9570   8539  3214/2849/113     696/118     7   29   20.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  12938  13082  3253/3001/121     815/137    10   38   20.21)
(smt.stats    7    859  16792  21766  3277/3022/123     929/148    11   38   20.31)
ramon: poll                 wall=2.000s usage=1.917s mem=21492KiB load=1.00 rootload=1.00
(smt.stats    8    981  18442  25756  3334/3032/123    1056/151    11   38   20.41)
(smt.stats    9   1115  20960  27707  3699/3308/125    1230/160    12   39   20.50)
ramon: poll                 wall=3.000s usage=2.917s mem=21800KiB load=1.00 rootload=1.00
(smt.stats   10   1216  21350  28774  3928/3481/125    1331/161    12   39   20.70)
(smt.stats   11   1327  23880  32377  4231/3874/125    1466/161    12   39   20.79)
(smt.stats   12   1449  25775  37100  4366/4034/125    1583/161    12   39   20.79)
(smt.stats   13   1583  30967  40042  4381/4114/129    1716/206    13   41   20.94)
(smt.stats   14   1730  33729  46375  4454/4146/129    1931/215    14   43   20.94)
ramon: poll                 wall=4.000s usage=3.916s mem=22084KiB load=1.00 rootload=0.99
(smt.stats   15   1831  35342  48388  4513/4221/129    2037/217    14   43   20.94)
(smt.stats   16   1942  37976  52642  4549/4286/129    2164/217    14   43   20.94)
(smt.stats   17   2064  40300  57230  4582/4317/131    2385/271    15   46   20.94)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1&1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1&1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 9223372036854775810 := 2014 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 9223372036854775810 := 2014 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1&1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 11529215046068469762 := 2014 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1 := 2&1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1 := 2&1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 11529215046068469762 := 2014 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1 := 4028&1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 4028&1
shl: (shl[61] (bv2int %0) (mod (bv2int %0) 61)) 0 := 2014 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 4028&1
shl: (shl[61] (bv2int %0) (mod (bv2int %0) 61)) 0 := 2014 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1 := 4028&1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1 := 4028&1
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 4028&1
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 3 #828))) 1 := 4028&1
(smt.stats   18   2198  45166  63226  4646/4334/131    2524/283    16   49   21.14)
(smt.stats   19   2345  51724  69573  4649/4384/167    2672/292    17   57   21.34)
(smt.stats   20   2506  55639  75847  4680/4402/167    2864/298    18   57   21.34)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4059 := 4059&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4058 := 4059&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4064 := 4065&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3894 := 4059&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3890 := 4059&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4058 := 4059&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4058 := 4059&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4064 := 4065&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3760 := 4059&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4030 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3968 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4028 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3968 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3984 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3760 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3756 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3872 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3888 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3896 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3888 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3984 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3856 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3856 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3856 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3856 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3856 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3856 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3856 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3856 := 4061&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1808 := 2049&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1808 := 2077&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2320 := 2385&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2064 := 2321&58546
(smt.stats   21   2607  57616  80543  4812/4410/167    3041/316    18   57   21.66)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1666 := 1923&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1666 := 1923&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2178 := 2307&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2178 := 2243&58546
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2178 := 2191&58546
(smt.stats   22   2718  60734  97829  4924/4646/280    3289/406    20   80   21.75)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2178 := 2191&468368
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2180 := 2191&468368
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   23   2840  64372 105843  5098/4784/286    3600/417    20   80   21.85)
(smt.stats   24   2974  66894 116311  5142/4870/289    3866/508    21   87   21.94)
(smt.stats   25   3121  70786 127574  5187/4883/299    4081/584    22  112   21.94)
ramon: poll                 wall=5.000s usage=4.916s mem=23404KiB load=1.00 rootload=1.00
(smt.stats   26   3282  72977 133590  5273/4916/299    4335/648    23  139   22.23)
(smt.stats   27   3459  74693 140579  5693/5420/302    4687/735    24  146   22.23)
(smt.stats   28   3560  76361 149466  5752/5470/307    4903/735    24  146   22.32)
(smt.stats   29   3671  78089 154083  5894/5473/307    5125/836    25  172   22.42)
(smt.stats   30   3793  78550 155108  6068/5689/307    5369/839    25  172   22.52)
(smt.stats   31   3927  80370 167953  6402/6120/308    5954/941    26  174   22.71)
(smt.stats   32   4074  86534 189775  6451/6130/309    6390/942    26  174   22.71)
ramon: poll                 wall=6.000s usage=5.916s mem=24004KiB load=1.00 rootload=1.00
(smt.stats   33   4235  90257 202310  6651/6192/309    6935/1029    27  177   23.10)
(smt.stats   34   4412  93625 211233  6908/6460/309    7454/1031    27  177   23.19)
ramon: poll                 wall=7.000s usage=6.916s mem=24584KiB load=1.00 rootload=1.00
(smt.stats   35   4606  98190 225542  6984/6654/309    7715/1032    27  177   23.19)
(smt.stats   36   4707 100469 234438  7150/6718/309    8037/1037    27  177   23.29)
(smt.stats   37   4818 103520 247120  7198/6898/309    8522/1037    27  177   23.38)
ramon: poll                 wall=8.000s usage=7.891s mem=24792KiB load=0.97 rootload=0.98
(smt.stats   38   4940 106467 263102  7314/6918/309    9024/1039    27  177   23.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 290)
(smt.stats   39   5074 110013 279859  7431/7075/312    9319/1442    28  187   23.48)
(smt.stats   40   5221 114307 295257  7603/7180/312    9661/1559    29  188   23.67)
ramon: poll                 wall=9.000s usage=8.891s mem=25108KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5382 117304 307702  7842/7326/313   10214/1606    30  189   23.86)
ramon: poll                 wall=10.000s usage=9.890s mem=25324KiB load=1.00 rootload=0.99
(smt.stats   42   5559 120055 321105  8077/7723/315   10902/1606    30  189   23.86)
(smt.stats   43   5753 124553 344029  8334/7814/315   11661/1794    31  196   24.06)
ramon: poll                 wall=11.000s usage=10.890s mem=25552KiB load=1.00 rootload=1.00
(smt.stats   44   5966 128270 360331  8527/8123/315   12221/1796    31  196   24.25)
(smt.stats   45   6067 133763 376654  8551/8266/315   12478/1796    31  196   24.46)
(smt.stats   46   6178 141118 405949  8600/8319/316   12637/1946    32  210   24.46)
(smt.stats   47   6300 148335 432553  8619/8338/316   13017/1946    32  210   24.55)
(smt.stats   48   6435 154594 440779  8696/8397/318   13217/2030    33  210   24.65)
ramon: poll                 wall=12.000s usage=11.890s mem=26160KiB load=1.00 rootload=1.00
(smt.stats   49   6582 158404 454641  8724/8403/318   13585/2030    33  210   24.75)
(smt.stats   50   6743 164530 464376  8916/8480/319   13832/2099    34  211   24.84)
ramon: poll                 wall=13.000s usage=12.890s mem=26356KiB load=1.00 rootload=1.00
(smt.stats   51   6920 171219 497543  9005/8667/320   14206/2102    34  211   24.94)
(smt.stats   52   7114 178101 532761  9061/8738/322   15436/2171    35  217   25.03)
(smt.stats   53   7327 192951 583816  9095/8767/322   16072/2315    36  230   25.13)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2305843009213693950&117092
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2305843009213693946&117092
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2305843009213693906&117092
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2305843009213693898&117092
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2305843009213693850&117092
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2305843009213693850&117092
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2305843009213693576&117092
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2305843009213693576&117092
(smt.stats   54   7561 201334 614732  9206/8826/324   16714/2468    37  231   25.53)
(smt.stats   55   7662 206016 628971  9211/8908/348   17015/2468    37  231   25.43)
(smt.stats   56   7773 210984 653293  9243/8914/348   17363/2540    38  244   25.53)
ramon: poll                 wall=14.000s usage=13.890s mem=26992KiB load=1.00 rootload=1.00
(smt.stats   57   7895 212818 661696  9680/9000/349   17764/2540    38  244   25.62)
(smt.stats   58   8029 215336 673089  9728/9406/350   18245/2540    38  244   25.78)
(smt.stats   59   8176 220572 717659  9735/9434/351   18893/2696    39  259   25.78)
(smt.stats   60   8337 227673 764300  9915/9435/351   19412/2887    40  272   25.87)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859144192&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859144192&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859144192&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859146752&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859146752&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859154944&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859150848&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859146752&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859159040&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859154944&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859171328&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859154944&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859171328&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735861891072&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859154944&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735859171328&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735861891072&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735996108800&15347515189
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 18317999800491966464 := 2305843009213693923 << 34
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735996108800&15347515189
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 18317999800491966464 := 2305843009213693923 << 34
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735861891072&15347515189
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735996108800&15347515189
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 18317999800491966464 := 2305843009213693923 << 34
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 2177098735996108800&15347515189
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 18317999800491966464 := 2305843009213693923 << 34
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8514 234135 796647 10057/9755/412   20093/2935    41  285   26.28)
(smt.stats   62   8708 246655 908334 10072/9760/412   20391/2936    41  285   26.81)
ramon: poll                 wall=15.000s usage=14.889s mem=28260KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.889s mem=28548KiB load=1.00 rootload=1.00
(smt.stats   63   8921 250568 927303 10274/9784/412   20717/2940    41  285   27.04)
(smt.stats   64   9155 259602 1023448 10604/10286/412   21629/2940    41  285   27.14)
(smt.stats   65   9412 273842 1064933 10620/10310/412   22231/2940    41  285   27.14)
(smt.stats   66   9513 275938 1080595 10627/10324/414   22832/3479    42  294   27.33)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   67   9624 281801 1121563 10669/10357/414   23130/3479    42  294   27.43)
ramon: poll                 wall=17.000s usage=16.889s mem=28968KiB load=1.00 rootload=1.00
(smt.stats   68   9746 288326 1162656 10674/10361/414   23368/3480    42  294   27.43)
(smt.stats   69   9880 294668 1192762 10686/10374/414   23564/3480    42  294   27.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 139)
(smt.stats   70  10027 298472 1208576 10703/10390/419   23808/3663    43  294   27.62)
(smt.stats   71  10188 307123 1281514 10713/10400/419   24582/3663    43  294   27.62)
(smt.stats   72  10365 315957 1361811 10720/10407/420   24988/3908    45  319   27.62)
(smt.stats   73  10559 322658 1407456 10751/10436/423   26530/3908    45  319   27.82)
ramon: poll                 wall=18.000s usage=17.889s mem=29472KiB load=1.00 rootload=0.99
(smt.stats   74  10772 332287 1472576 10752/10437/423   27169/3908    45  319   27.92)
(smt.stats   75  11006 340513 1507084 10899/10449/423   28328/4254    46  344   28.13)
(smt.stats   76  11263 347567 1555634 11137/10585/425   29347/4262    46  344   28.42)
(smt.stats   77  11545 357033 1601429 11196/10880/427   30453/4435    47  360   28.51)
(smt.stats   78  11646 361103 1612480 11205/10887/428   30614/4435    47  360   28.61)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 10 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 10 := 106&31431711108907
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 42 := 106&31431711108907
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 106 := 106 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 42 := 106&31431711108907
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 106 := 106 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 42 := 106&31431711108907
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 106 := 106 << 45
(smt.stats   79  11757 364729 1625157 11274/10909/430   30763/4851    48  396   28.61)
ramon: poll                 wall=19.000s usage=18.889s mem=30200KiB load=1.00 rootload=1.00
(smt.stats   80  11879 368515 1654177 11393/10973/445   31289/4855    48  396   28.71)
(smt.stats   81  12013 371074 1680303 11455/11135/447   32439/4855    48  396   28.80)
(smt.stats   82  12160 381579 1740158 11468/11139/447   32842/5001    49  439   28.90)
ramon: poll                 wall=20.000s usage=19.888s mem=30540KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:23:02 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.020s
ramon: group.total          19.957s
ramon: group.utime          19.933s
ramon: group.stime          0.024s
ramon: group.mempeak        30796KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              0.99
