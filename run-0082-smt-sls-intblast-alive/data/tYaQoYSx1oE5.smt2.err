ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:13:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27189 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tYaQoYSx1oE5.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             948359
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 3 := 4&3
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 5 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&85
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 2199023255551 := 1 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 2199023255551 := 1 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 2199023255551 := 1 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 1 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 1099511627769 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1099511627777 := 1 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627775
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627775
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 1099511627768 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 3 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 2 := 4&1099511627776
(smt.stats    0    101    853    950  1147/1001/145      97/18     7   27   51.96)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   73.5294     10000        49          0            1        2)

band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 1 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&1099511627770
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 1099511627770 := 6 << 37
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720833 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720833
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720834
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 824633720834 := 6 << 37
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720833 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720833 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720833 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 1&824633720832
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720834 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720834 := 3 << 38
(smt.stats    1    202   1960   2370  1269/1102/173     206/23    10   34   52.17)
(smt.stats    2    313   4766   6135  1424/1250/191     386/51    14   44   52.36)
(sat.ddfw       1      1   36.7684     20001        98          1            1        3)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 2&1099511627769
(sat.ddfw       1      1   43.4783     40001       196          2            1        5)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 2&274877906953
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 2&1099511627769
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 2&549856477513
(sat.ddfw       1      1   40.5405     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.830s mem=55084KiB load=0.83 rootload=0.81
(sat.ddfw       1      1   36.0685    110001       539          4            1       12)
(smt.stats    3    414   5583   7207  1537/1286/193     512/52    15   49   53.03)
(smt.stats    4    525   7604   9931  1593/1414/209     644/59    16   51   52.93)
(sat.ddfw       1      1    31.806    160000       784          5            1       17)
(smt.stats    5    647  10188  14619  1649/1417/209     800/104    17   69   53.12)
ramon: poll                 wall=2.000s usage=1.828s mem=55268KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   28.2092    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  11703  16724  1711/1480/209     930/107    17   69   53.12)
(smt.stats    7    859  15133  24868  1758/1579/214    1077/125    18   70   53.21)
(smt.stats    8    981  17032  29767  1770/1592/230    1249/149    21   95   53.31)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 2&1099595513555
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 2&1099595513555
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 2&1099595513353
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3298618768905 := 268436106 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 2&1099595513545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3298618769097 := 268436106 << 38
(smt.stats    9   1115  17767  31568  1908/1593/230    1425/153    21   95   53.31)
(sat.ddfw       1      1   25.2799    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.989s mem=55752KiB load=1.16 rootload=1.15
(smt.stats   10   1216  19003  34594  1980/1785/236    1556/175    22  107   53.50)
(smt.stats   11   1327  20572  39306  2012/1822/237    1702/186    23  109   53.50)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  22947  46752  2036/1857/239    1889/210    26  120   53.50)
(sat.ddfw       1      1   22.7273    370001      1813          8            1       38)
(smt.stats   13   1583  26181  54196  2066/1880/242    2063/210    26  120   53.50)
ramon: poll                 wall=4.000s usage=3.987s mem=55828KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.6564    460001      2254          9            1       47)
(smt.stats   14   1730  28252  59951  2167/1886/242    2256/233    27  135   53.69)
(smt.stats   15   1831  29411  63651  2173/1991/242    2360/233    27  135   53.69)
(smt.stats   16   1942  30633  69004  2186/2002/242    2496/233    27  135   53.81)
ramon: poll                 wall=5.000s usage=4.986s mem=55960KiB load=1.00 rootload=1.00
(smt.stats   17   2064  31611  72070  2220/2007/243    2653/242    28  135   53.81)
(sat.ddfw       1      1   19.4363    560001      2745         10            1       57)
(smt.stats   18   2198  33184  75807  2272/2075/243    2821/242    28  135   53.90)
(smt.stats   19   2345  35686  83467  2305/2093/243    2998/242    28  135   53.90)
(smt.stats   20   2506  38937  90176  2335/2143/243    3223/242    28  135   54.00)
(smt.stats   21   2607  40042  94328  2380/2152/243    3362/242    28  135   54.00)
(sat.ddfw       1      1    18.797    670001      3284         11            1       68)
ramon: poll                 wall=6.000s usage=6.266s mem=56220KiB load=1.28 rootload=1.28
(smt.stats   22   2718  41401  97302  2407/2200/243    3519/242    28  135   54.10)
(smt.stats   23   2840  42858 100506  2457/2238/243    3719/242    28  135   54.20)
(smt.stats   24   2974  44481 105613  2502/2316/244    3866/348    29  138   54.20)
ramon: poll                 wall=7.009s usage=7.272s mem=56296KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   17.1502    790001      3872         12            1       80)
(smt.stats   25   3121  47246 116190  2530/2320/244    4098/348    29  138   54.20)
ramon: poll                 wall=8.000s usage=8.295s mem=56392KiB load=1.03 rootload=1.04
(sat.ddfw       1      1   15.9843    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=9.301s mem=56392KiB load=1.01 rootload=1.00
(sat.ddfw       1      1   14.7679   1060001      5196         14            1      108)
(smt.stats   26   3282  48993 120288  2642/2352/244    4323/357    29  138   54.29)
ramon: poll                 wall=10.000s usage=10.299s mem=56504KiB load=1.00 rootload=1.00
(smt.stats   27   3459  52650 130180  2748/2502/244    4595/359    29  138   54.39)
(smt.stats   28   3560  54383 136026  2751/2565/245    4744/434    30  138   54.39)
(smt.stats   29   3671  56666 144088  2788/2594/245    4893/434    30  138   54.59)
(smt.stats   30   3793  59509 148262  2788/2594/247    5036/434    30  138   54.59)
(smt.stats   31   3927  62237 156462  2823/2609/247    5282/447    31  141   54.78)
ramon: poll                 wall=11.000s usage=11.302s mem=56976KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.7539   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  64080 164056  2847/2644/247    5499/447    31  141   54.87)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255552 := 134217732 << 15
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255552 := 134217732 << 15
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255552 := 134217732 << 15
(smt.stats   33   4235  67329 172286  2876/2649/247    5724/447    31  141   54.87)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1099511627776
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3298534883328 := 134217734 << 14
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1099511627776
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3298534883328 := 134217734 << 14
(smt.stats   34   4412  70642 180999  2895/2677/252    5967/504    32  142   54.87)
(smt.stats   35   4606  73212 192796  2957/2729/260    6273/529    33  144   54.97)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663540
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663540
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663543
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663543
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663543
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663543
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663535
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199123919087 := 100665250 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663535
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199123919087 := 100665250 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663535
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199123919087 := 100665250 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 9&100663535
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 9&100663535
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 9&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255559 := 100665250 << 40
(smt.stats   36   4707  74619 196797  3076/2763/260    6429/538    33  144   55.06)
ramon: poll                 wall=12.000s usage=12.293s mem=57392KiB load=0.99 rootload=0.99
(smt.stats   37   4818  75214 198233  3257/2932/280    6532/588    34  153   55.06)
(smt.stats   38   4940  76697 203595  3369/3140/281    6700/593    34  153   55.16)
(sat.ddfw       1      1    12.897   1370001      6715         16            1      139)
(smt.delete-inactive-clauses  :num-deleted-clauses 45)
(smt.stats   39   5074  78930 209913  3389/3167/281    6863/593    34  153   55.25)
ramon: poll                 wall=13.000s usage=13.301s mem=57708KiB load=1.01 rootload=1.01
(smt.stats   40   5221  82202 220664  3482/3187/281    7048/614    35  154   55.35)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 1&2199006478361
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 4398029733913 := 268435616 << 37
(smt.stats   41   5382  84731 230457  3739/3330/281    7260/619    35  154   55.35)
(smt.stats   42   5559  88062 241942  3755/3538/282    7449/640    36  158   55.35)
ramon: poll                 wall=14.000s usage=14.182s mem=57624KiB load=0.88 rootload=0.88
(sat.ddfw       1      1   12.1628   1540001      7549         17            1      156)
(smt.stats   43   5753  91600 255184  3892/3558/282    7717/642    36  158   55.54)
ramon: poll                 wall=15.005s usage=15.242s mem=58028KiB load=1.06 rootload=1.06
(smt.stats   44   5966  96303 261914  4160/3949/284    8036/687    37  162   55.76)
(smt.stats   45   6067 100666 279897  4174/3961/286    8178/687    37  162   55.86)
(smt.stats   46   6178 102136 289537  4188/3975/288    8300/750    38  164   55.86)
(smt.stats   47   6300 106046 292240  4198/3982/288    8426/750    38  164   55.86)
(sat.ddfw       1      1   11.5451   1720001      8431         18            1      174)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255553 := 2199090366000 << 35
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255553 := 2199090366000 << 35
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255553 := 2199090364688 << 35
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255553 := 2199090365344 << 35
(smt.stats   48   6434 107459 296321  4332/3988/288    8611/774    39  166   56.15)
ramon: poll                 wall=16.000s usage=16.217s mem=58364KiB load=0.98 rootload=0.97
(smt.stats   49   6581 109204 304475  4401/4173/295    8829/777    39  166   56.24)
(smt.stats   50   6742 111180 316922  4680/4252/295    9005/786    39  166   56.34)
ramon: poll                 wall=17.000s usage=17.109s mem=58560KiB load=0.89 rootload=0.90
(smt.stats   51   6919 113177 327316  4963/4584/295    9250/836    40  177   56.44)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 117867 349816  4991/4772/298    9484/836    40  177   56.44)
(sat.ddfw       1      1   10.8516   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.085s mem=58860KiB load=0.98 rootload=0.97
(smt.stats   53   7326 121117 363217  5126/4831/298    9794/875    41  185   56.63)
(smt.stats   54   7560 124689 377580  5194/4920/298   10106/876    41  185   56.63)
ramon: poll                 wall=19.000s usage=19.047s mem=59016KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   10.2838   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.012s mem=59016KiB load=0.97 rootload=0.97
(smt.stats   55   7661 126732 388837  5219/4965/298   10229/876    41  185   56.72)
ramon: end                  Fri Nov  1 23:13:45 2024
ramon: root.execname        z3
ramon: root.utime           20.060s
ramon: root.stime           0.020s
ramon: group.total          20.093s
ramon: group.utime          20.065s
ramon: group.stime          0.028s
ramon: group.mempeak        59276KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.00
