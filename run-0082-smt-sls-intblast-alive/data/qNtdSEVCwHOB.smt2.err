ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:09:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27446 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1375
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qNtdSEVCwHOB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             934815
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   83.3333     10000        49          0            1        2)
(sat.ddfw       1      1   44.0573     20001        98          1            1        3)
(smt.stats    0    101   1609    234  1325/1175/110     108/13     6   17   51.96)
(smt.stats    1    202   5256   1585  1703/1551/118     206/35    10   31   52.06)
(sat.ddfw       1      1   43.8596     40001       196          2            1        5)
(smt.stats    2    313   8767   5784  1842/1670/118     318/35    10   31   52.25)
(smt.stats    3    414  14010   8693  1868/1699/120     414/40    12   32   52.36)
(smt.stats    4    525  14353  10937  2473/2248/123     534/105    14   39   52.56)
(smt.stats    5    647  15188  12227  2496/2255/123     674/107    14   39   52.56)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  15909  13542  2510/2275/123     779/118    14   39   52.56)
(smt.stats    7    859  19213  16929  2635/2388/123     888/119    14   39   52.75)
(smt.stats    8    981  20734  19064  2758/2422/126     993/146    15   44   52.75)
(sat.ddfw       1      1   38.1679     70001       343          3            1        8)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711744 := 576460752303423486 << 51
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711744 := 576460752303423486 << 51
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 288230376151707711 := 288230376151707712 << 52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711744 := 288230376151711746 << 51
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 144115188075855936 << 52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 144115188075855936 << 52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 144115188075855936 << 52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711744 := 288230376151711874 << 51
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 144115188075855936 << 52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2251799813685247 := 2251799813685247&283726776524341248
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2251799813685246 := 2251799813685247&283726776524341248
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2251799813685244 := 2251799813685247&283726776524341248
ramon: poll                 wall=1.000s usage=0.919s mem=55120KiB load=0.92 rootload=0.91
(smt.stats    9   1115  23820  25738  2805/2513/126    1126/148    15   44   52.95)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 144115188075855936 << 52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2251799813685247&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 144115188075855936 << 52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 562949953421311&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711744 := 288230376151711746 << 49
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 562949953421311&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711744 := 288230376151711746 << 49
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 562949953421311&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711744 := 288230376151711746 << 49
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 140737488355327&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711744 := 288230376151711746 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 140737488355327&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711752 := 288230376151711754 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 140737488355327&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711752 := 288230376151711808 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 140737488355327&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711752 := 288230376151711808 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 140737488355327&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711746 := 288230376151711808 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 140737488355327&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711746 := 288230376151711808 << 47
(smt.stats   10   1216  25106  28951  2923/2672/163    1237/163    17   54   53.05)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&56
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&8
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&16
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&32
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&8
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&16
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&32
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&16
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 16 := 36028797018963967&16
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711760 := 288230376151711806 << 55
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&8
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&8
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 36028797018963967&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711752 := 288230376151711754 << 55
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&8
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 36028797018963967&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711752 := 288230376151711754 << 55
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&8
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 36028797018963967&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711752 := 288230376151711804 << 55
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 36028797018963967&9
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 36028797018963967&9
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 9 := 36028797018963967&9
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711753 := 288230376151711804 << 55
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 9 := 36028797018963967&9
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 288230376151711753 := 288230376151711804 << 55
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 144115188075855877 := 144115188075855876 << 56
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 144115188075855877 := 144115188075855876 << 56
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 144115188075855877 := 144115188075855876 << 56
(smt.stats   11   1327  27984  34182  3015/2744/215    1360/165    18   61   53.25)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 144115188075855904 := 144115188075855876 << 56
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 36028797018963967&0
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 144115188075856128 := 144115188075855876 << 56
(sat.ddfw       1      1   32.4412    110001       539          4            1       12)
(smt.stats   12   1449  30021  38356  3107/2849/229    1460/174    20   73   53.44)
(smt.stats   13   1583  34433  44297  3151/2862/230    1596/179    20   73   53.53)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2047&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 576460752303423488 := 262214 << 11
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 2047&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 7205759403792793600 := 262470 << 11
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4503599627370464 := 4503599627370495&288230376151457728
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4503599627370464 := 4503599627370495&288230376151457728
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4503599627370432 := 4503599627370495&288230376151457728
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8128 := 4503599627370495&288230376151457728
(smt.stats   14   1730  38641  49901  3282/2985/237    1751/211    22   87   53.73)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 64 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 128 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 256 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 512 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1024 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2048 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4096 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4096 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 16384 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 32768 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 65536 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 131072 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 262144 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 16384 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 32768 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 65536 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 131072 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 262144 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 262144 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 524288 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 524288 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 262144 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 524288 := 4503599627370495&288230376151449600
(sat.ddfw       1      1   28.0421    160000       784          5            1       17)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 16384 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 16384 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 16384 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 32768 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 262144 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 524288 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 786432 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 262144 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 524288 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1835008 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1835008 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 262144 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 524288 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 262144 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 524288 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 524288 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1572864 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1835008 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 7077888 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 9175040 := 4503599627370495&288230376151449600
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   15   1833  41805  58655  3491/3227/386    1970/289    24  119   54.13)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6029312 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151449600
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151580672
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3997696 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3997696 := 4503599627370495&288230376151580672
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151580672
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151580672
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3932160 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3997696 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151515136
ramon: poll                 wall=2.000s usage=1.923s mem=56656KiB load=1.00 rootload=1.00
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8192000 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8192000 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151515136
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151457792
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151457792
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151457792
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8126464 := 4503599627370495&288230376151457792
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8134656 := 4503599627370495&288230376151457792
(smt.stats   16   1944  45610  70519  3601/3337/444    2252/478    26  159   54.65)
(smt.stats   17   2066  49466  78212  3615/3351/452    2424/509    27  179   54.65)
(smt.stats   18   2200  53660  82792  3738/3362/452    2625/538    28  184   54.87)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 7&50331668
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 7&50331668
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 7&50331668
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 7&50331668
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 7&50331732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 7&50331732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 7&50331732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 7&50331732
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 8070450532298260564 := 290482175965438170 << 3
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 7 := 7&50331732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 7&50331732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 7&50331732
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 7493989779994837076 := 290482175965438170 << 3
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 7&50331732
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 7493989779994837076 := 290482175965438202 << 3
(smt.stats   19   2347  59109  93107  3993/3684/463    2938/586    29  186   55.34)
(sat.ddfw       1      1   24.4702    220001      1078          6            1       23)
(smt.stats   20   2508  65331 109836  4046/3775/484    3535/695    31  192   55.57)
(smt.stats   21   2609  67912 118264  4160/3866/484    3762/925    32  217   55.66)
(smt.stats   22   2720  72393 133199  4200/3875/485    4071/927    32  217   55.76)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   23   2842  79182 153095  4218/3913/485    4202/1047    33  221   55.76)
ramon: poll                 wall=3.000s usage=3.202s mem=58176KiB load=1.28 rootload=1.28
(smt.stats   24   2976  81958 167347  4234/3940/492    4439/1048    34  226   55.85)
(sat.ddfw       1      1   22.7568    290001      1421          7            1       30)
(smt.stats   25   3123  85926 180336  4240/3946/495    4664/1129    35  243   55.85)
(smt.stats   26   3284  91768 202657  4245/3951/495    4863/1202    36  263   55.95)
(smt.stats   27   3461  96030 221236  4273/3978/496    5136/1265    37  271   56.43)
(smt.stats   28   3562  99568 232388  4654/4264/498    5557/1265    37  271   56.81)
ramon: poll                 wall=4.000s usage=4.202s mem=59200KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.1918    370001      1813          8            1       38)
(smt.stats   29   3674 106098 250501  4715/4325/501    5900/1370    39  292   57.01)
(smt.stats   30   3796 110743 265870  4870/4363/506    6252/1379    39  292   57.10)
(smt.stats   31   3930 114481 278532  5058/4618/507    6643/1412    41  300   57.39)
ramon: poll                 wall=5.000s usage=5.202s mem=59880KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.2076    460001      2254          9            1       47)
(smt.stats   32   4077 119200 291149  5088/4695/512    7382/1456    42  310   57.68)
(sat.ddfw       1      1    17.449    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.346s mem=60344KiB load=1.14 rootload=1.15
ramon: poll                 wall=7.000s usage=7.346s mem=60272KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.8891    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=8.346s mem=60532KiB load=1.00 rootload=0.99
(smt.stats   33   4238 129242 317807  5319/4708/512    7917/1460    42  310   57.99)
(sat.ddfw       1      1   14.5755    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=9.346s mem=60636KiB load=1.00 rootload=1.00
(smt.stats   34   4415 138375 350741  5473/4954/512    8393/1466    42  310   58.35)
(sat.ddfw       1      1   13.4715    920001      4509         13            1       93)
(smt.stats   35   4609 145298 370374  5542/5146/522    9208/1834    44  359   58.54)
ramon: poll                 wall=10.000s usage=10.346s mem=60820KiB load=1.00 rootload=1.00
(smt.stats   36   4710 148891 379868  5595/5165/522    9438/1836    44  359   58.64)
(smt.stats   37   4821 155054 396700  5627/5216/522    9728/1836    44  359   58.64)
ramon: poll                 wall=11.000s usage=11.346s mem=61168KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.5168   1060001      5196         14            1      108)
(smt.stats   38   4943 160999 410431  5775/5249/522   10194/1842    44  359   58.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 42)
(smt.stats   39   5077 165986 422616  5783/5393/522   10618/1842    44  359   58.74)
ramon: poll                 wall=12.000s usage=12.346s mem=61400KiB load=1.00 rootload=1.00
(smt.stats   40   5224 174264 443420  5813/5401/522   10937/1845    44  359   58.83)
(sat.ddfw       1      1   11.6822   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=13.346s mem=61472KiB load=1.00 rootload=1.00
(smt.stats   41   5385 181589 469864  5850/5434/522   11157/1850    44  359   58.83)
(smt.stats   42   5562 187797 500949  5880/5486/525   11796/2392    45  376   58.93)
ramon: poll                 wall=14.000s usage=14.345s mem=61648KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.9597   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5756 197322 527070  6088/5497/525   12298/2405    45  376   59.11)
ramon: poll                 wall=15.000s usage=15.345s mem=61968KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=16.344s mem=62240KiB load=1.00 rootload=1.00
(smt.stats   44   5969 203267 554395  6375/5985/527   13422/2543    46  381   59.31)
(smt.stats   45   6070 205906 573179  6388/5998/529   13794/2720    47  398   59.40)
(sat.ddfw       1      1   10.3237   1540001      7549         17            1      156)
(smt.stats   46   6181 211721 594782  6419/6008/530   14073/2720    47  398   59.77)
(smt.stats   47   6303 217096 619007  6536/6043/530   14605/2831    48  440   59.87)
ramon: poll                 wall=17.000s usage=17.344s mem=62312KiB load=1.00 rootload=0.99
(smt.stats   48   6437 222077 637388  6721/6166/530   14924/2840    48  440   59.96)
(smt.stats   49   6584 226854 648785  6736/6343/531   15308/2971    49  442   60.06)
ramon: poll                 wall=18.000s usage=18.344s mem=62436KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.81782   1720001      8431         18            1      174)
(smt.stats   50   6745 234709 680696  6808/6355/531   15596/2972    49  442   60.06)
ramon: poll                 wall=19.000s usage=19.442s mem=62500KiB load=1.10 rootload=1.10
(smt.stats   51   6922 242691 724791  6844/6454/533   16165/3108    50  448   60.15)
(smt.stats   52   7116 249887 769016  6874/6472/539   16779/3108    50  448   60.25)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711742
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #882 #886) 64)) 576460752303423486 := 576460752303423486 << 1
(smt.stats   53   7329 255908 818819  6900/6506/540   17052/3307    52  512   60.25)
ramon: poll                 wall=20.000s usage=20.443s mem=62668KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:09:25 2024
ramon: root.execname        z3
ramon: root.utime           20.490s
ramon: root.stime           0.010s
ramon: group.total          20.513s
ramon: group.utime          20.497s
ramon: group.stime          0.016s
ramon: group.mempeak        62804KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.02
