ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:06:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41833 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1260
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LdCoagV9Zm7c.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2921307
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2840    172  1342/1168/112      98/12     8   17   19.15)
(smt.stats    1    202   5191    859  1725/1494/112     212/16     8   17   19.25)
(smt.stats    2    313   7801   1791  1828/1630/114     333/36     9   18   19.25)
(smt.stats    3    414   9079   2569  1883/1715/119     428/56    11   22   19.44)
(smt.stats    4    525  11070   3620  2460/1781/121     568/102    11   22   19.63)
(smt.stats    5    647  15982   5026  2493/2259/121     718/122    12   27   19.73)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  18273   5930  2940/2620/121     837/125    12   27   19.82)
(smt.stats    7    859  20600   7796  2999/2720/122     946/151    13   29   19.82)
(smt.stats    8    981  22584  11151  3050/2796/130    1063/162    15   36   19.92)
(smt.stats    9   1115  26787  14051  3053/2799/130    1201/162    15   36   19.92)
(smt.stats   10   1216  30909  18319  3062/2802/130    1290/160    16   47   20.02)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&288230376151711743
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&288230376151711743
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&562949953421311
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 865254078408556543 := 32 >>l 14
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 864691128455135282 := 32 >>l 14
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 49 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 48 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 32 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 864691128455135282 := 864691128455135296 >>l 14
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 864691128455135282 := 9223372036854759424 >>l 14
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 562949953421310 := 562949953421312&562949953421311
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 562949953421309 := 562949953421312&562949953421311
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&562949953421311
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 0 := 288230376151711743 >>l 9
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&562949953421311
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 0 := 288230376151711743 >>l 9
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&17592186044416
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 0 := 9007199254740993 >>l 9
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&17592186044416
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 0 := 9007199254740993 >>l 9
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&17592186044416
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 0 := 9007199254740993 >>l 9
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&50
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 50 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&50
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 49 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&50
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 1 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 2 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 4 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 32 := 562949953421312&50
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 64 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 128 := 562949953421312&128
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 256 := 562949953421312&256
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 512 := 562949953421312&512
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 1024 := 562949953421312&1024
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 2048 := 562949953421312&2048
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 4096 := 562949953421312&4096
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8192 := 562949953421312&8192
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16384 := 562949953421312&16384
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 32768 := 562949953421312&32768
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 65536 := 562949953421312&65536
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 131072 := 562949953421312&131072
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 262144 := 562949953421312&262144
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 524288 := 562949953421312&524288
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 1048576 := 562949953421312&1048576
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 2097152 := 562949953421312&2097152
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 4194304 := 562949953421312&4194304
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8388608 := 562949953421312&8388608
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16777216 := 562949953421312&16777216
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 33554432 := 562949953421312&33554432
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 67108864 := 562949953421312&67108864
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 134217728 := 562949953421312&134217728
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 268435456 := 562949953421312&268435456
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 536870912 := 562949953421312&536870912
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 1073741824 := 562949953421312&1073741824
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 6442450944 := 562949953421312&6442450944
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 32 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 32 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 32 := 562949953421312&64
(smt.stats   11   1327  33354  21471  3278/2981/314    1464/168    17   50   20.94)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 4 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 4 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 16 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 32 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 64 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 64 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 64 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 60 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 32 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 24 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&64
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1 := 562949953421312&64
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&63
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 16 := 562949953421312&63
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&63
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4 := 562949953421312&63
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&63
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4 := 562949953421312&63
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 562949953421312&63
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4 := 562949953421312&63
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  36203  27102  3338/3077/390    1661/262    20  117   21.16)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 2199023255552&42
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&42
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 42 := 16384 >>l 22
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&40
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 40 := 655328 >>l 22
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 1 := 16352 >>l 22
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&0
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 64 := 511 >>l 17
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&0
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 64 := 511 >>l 17
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&0
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 510 := 511 >>l 17
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&0
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 42 := 511 >>l 17
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&0
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 63 := 511 >>l 17
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 2 := 2199023255552&2
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 4 := 2199023255552&4
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 4 := 2199023255552&4
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 1 := 2199023255552&2
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&128
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 128 := 2199023255552&128
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&256
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 256 := 2199023255552&256
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&512
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 512 := 2199023255552&512
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1024
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1024 := 2199023255552&1024
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2048
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 2048 := 2199023255552&2048
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2048
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 2048 := 2199023255552&2048
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&4096
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4096 := 2199023255552&4096
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&8192
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8192 := 2199023255552&8192
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&16384
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 16384 := 2199023255552&16384
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&32768
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 32768 := 2199023255552&32768
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&65536
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 65536 := 2199023255552&65536
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&131072
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 131072 := 2199023255552&131072
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&262144
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 262144 := 2199023255552&262144
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&524288
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 524288 := 2199023255552&524288
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1048576
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1048576 := 2199023255552&1048576
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2097152
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 2097152 := 2199023255552&2097152
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&4194304
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4194304 := 2199023255552&4194304
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&8388608
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8388608 := 2199023255552&8388608
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&524288
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 524288 := 2199023255552&524288
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1048576
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1048576 := 2199023255552&1048576
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2097152
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 2097152 := 2199023255552&2097152
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&4194304
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4194304 := 2199023255552&4194304
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1024
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1024 := 2199023255552&1024
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&896
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 896 := 2199023255552&896
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&768
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 768 := 2199023255552&768
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&512
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 512 := 2199023255552&512
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&512
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 512 := 2199023255552&512
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&512
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 512 := 2199023255552&512
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&512
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 512 := 2199023255552&512
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&256
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 256 := 2199023255552&256
(smt.stats   13   1584  39475  31822  3457/3162/451    1815/295    21  131   21.46)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&128
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 128 := 2199023255552&128
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2048
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 2048 := 2199023255552&2048
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&4096
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4096 := 2199023255552&4096
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&8192
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8192 := 2199023255552&8192
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&32768
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 32768 := 2199023255552&32768
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&65536
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 65536 := 2199023255552&65536
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2048
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 2048 := 2199023255552&2048
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&8192
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8192 := 2199023255552&8192
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&8192
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8192 := 2199023255552&8192
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&8192
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8192 := 2199023255552&8192
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&4096
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4096 := 2199023255552&4096
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&16384
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 16384 := 2199023255552&16384
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&32768
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 32768 := 2199023255552&32768
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&131072
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 131072 := 2199023255552&131072
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&131072
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 131072 := 2199023255552&131072
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&131072
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 131072 := 2199023255552&131072
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&524288
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 524288 := 2199023255552&524288
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1048576
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1048576 := 2199023255552&1048576
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2097152
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 2097152 := 2199023255552&2097152
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1572864
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1572864 := 2199023255552&1572864
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1048576
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1048576 := 2199023255552&1048576
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1048576
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1048576 := 2199023255552&1048576
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&524288
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 524288 := 2199023255552&524288
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&4194304
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4194304 := 2199023255552&4194304
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&16777216
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 16777216 := 2199023255552&16777216
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&33554432
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 33554432 := 2199023255552&33554432
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&67108864
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 67108864 := 2199023255552&67108864
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&134217728
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 134217728 := 2199023255552&134217728
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&268435456
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 268435456 := 2199023255552&268435456
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&536870912
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 536870912 := 2199023255552&536870912
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1073741824
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1073741824 := 2199023255552&1073741824
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2147483648
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 2147483648 := 2199023255552&2147483648
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&4294967296
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4294967296 := 2199023255552&4294967296
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&8589934592
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8589934592 := 2199023255552&8589934592
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&17179869184
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 17179869184 := 2199023255552&17179869184
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&34359738368
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 34359738368 := 2199023255552&34359738368
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68719476736
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 68719476736 := 2199023255552&68719476736
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68720001028
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 4294967296 := 2199023255552&68720001028
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68720001028
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8589934592 := 2199023255552&68720001028
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&8589934592
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 8589934592 := 2199023255552&8589934592
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&17179869184
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 17179869184 := 2199023255552&17179869184
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&34359738368
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 34359738368 := 2199023255552&34359738368
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68719476736
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 68719476736 := 2199023255552&68719476736
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68719476736
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 68719476736 := 2199023255552&68719476736
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68719476736
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 68719476736 := 2199023255552&68719476736
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68719476736
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 68719476736 := 2199023255552&68719476736
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68719476736
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 68719476736 := 2199023255552&68719476736
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&137438953472
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 137438953472 := 2199023255552&137438953472
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&274877906944
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 274877906944 := 2199023255552&274877906944
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&137438953472
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 137438953472 := 2199023255552&137438953472
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&274877906944
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 274877906944 := 2199023255552&274877906944
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&549755813888
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 549755813888 := 2199023255552&549755813888
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1099511627776
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1099511627776 := 2199023255552&1099511627776
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&2199023255551
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 137438953472 := 2199023255552&2199023255551
ramon: poll                 wall=1.000s usage=0.999s mem=23136KiB load=1.00 rootload=0.98
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&274877906944
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 274877906944 := 2199023255552&274877906944
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&549755813888
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 549755813888 := 2199023255552&549755813888
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&549755813888
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 549755813888 := 2199023255552&549755813888
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&137438953472
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 137438953472 := 2199023255552&137438953472
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&274877906944
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 274877906944 := 2199023255552&274877906944
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&1099511627776
band: (band[58] (if (= #117 57) 144115188075855872 (if #516 72057594037927936 #628)) (lshr[58] (bv2int %0) (+ 58 #631))) 1099511627776 := 2199023255552&1099511627776
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2199023255552&68720001027
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288230444871712771 := 288232575191744672 >>l 22
(smt.stats   14   1731  42673  42972  3662/3339/661    2177/398    23  182   22.07)
(smt.stats   15   1832  44217  51351  3855/3501/661    2303/394    24  195   22.16)
(smt.stats   16   1943  49438  60570  3890/3570/667    2610/416    25  198   22.26)
(smt.stats   17   2065  58130  69249  3907/3585/667    2753/485    26  206   22.47)
(smt.stats   18   2199  63294  78228  4062/3656/673    3073/511    27  206   22.89)
(smt.stats   19   2346  69662  96412  4296/3919/678    3575/543    29  218   23.37)
(smt.stats   20   2507  74402 103085  4354/4027/678    3779/628    30  219   23.37)
ramon: poll                 wall=2.000s usage=1.995s mem=25216KiB load=1.00 rootload=1.00
(smt.stats   21   2608  80833 123790  4370/4045/681    4009/691    31  228   23.96)
(smt.stats   22   2719  86876 139647  4376/4053/682    4570/689    32  251   24.48)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 16&11006634
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 16&16
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 1152921504606846992 := 46165101903872 >>l 59
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 16&16
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 1152921504606846992 := 46165101903872 >>l 59
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 16&16
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 1152921504606846992 := 46165101903872 >>l 59
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 16&70373039423488
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 16&70373039423488
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 16&70373039423487
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 1152991877646270463 := 1152991877646270464 >>l 59
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 16 := 16&16
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 1729382256910270480 := 1729382256910270496 >>l 59
(smt.stats   23   2841  91849 153444  4568/4205/697    4949/952    34  270   24.68)
(smt.stats   24   2975  94952 170650  4640/4264/699    5390/992    35  278   24.77)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3122 101655 183777  4697/4309/701    5934/1103    36  286   25.08)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&17593259851713
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288247969411563457 := 288247969411563456 >>l 62
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&17593259851713
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288247969411563457 := 288247969411563456 >>l 62
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&17593259851713
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288247969411563457 := 288247969411563456 >>l 62
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&32
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288230376151711776 := 288230376151711808 >>l 62
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&15
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&12
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288230376151711756 := 288230376151711776 >>l 62
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&2
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&5
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288230376151711749 := 288230376151711808 >>l 62
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&2
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&5
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288230376151711749 := 288230376151711808 >>l 62
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&1
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 0 := 144115188075855872 >>l 57
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&1
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 0 := 144115188075855872 >>l 57
(smt.stats   26   3283 107430 200804  4752/4312/701    6371/1152    37  291   25.32)
(smt.stats   27   3460 111368 221481  4799/4407/712    6724/1211    38  293   25.42)
(smt.stats   28   3561 114879 230603  4804/4412/714    7094/1297    39  303   25.51)
(smt.stats   29   3673 117279 242222  4813/4420/715    7351/1389    40  308   25.51)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&0
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 549789370367 := 9007749044111359 >>l 57
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 2&0
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 549789370367 := 9007749044111359 >>l 57
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 4&1
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288230376151711745 := 288247969411563488 >>l 61
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 4&1
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288230376151711745 := 9223372036854775776 >>l 61
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 4&1
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 288230376151711745 := 9223372036854775776 >>l 61
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 4&1
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 144115188075855870 := 144115188075855871 >>l 56
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 4&3
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 288230376151679039 := 288230376151711743 >>l 56
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 4&3
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #113))) 216172782113751104 := 216172782113783808 >>l 56
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 1&48
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 576460752303423536 := 1046528 >>l 63
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 1&287667426198290415
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 1&287104476244869135
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 1&287104476244869135
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 1&287104476244869135
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 1&34
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 576460752303423522 := 32768 >>l 63
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 1&34
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 576460752303423522 := 32768 >>l 63
(smt.stats   30   3795 119246 254559  4872/4464/731    7544/1449    41  315   25.61)
ramon: poll                 wall=3.000s usage=2.994s mem=27104KiB load=1.00 rootload=0.99
(smt.stats   31   3929 121984 274870  4923/4517/740    7864/1449    41  315   25.70)
(smt.stats   32   4076 125350 286531  4925/4520/740    8046/1537    42  324   25.70)
(smt.stats   33   4237 132163 329060  4929/4524/740    8312/1537    42  324   25.80)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 64&145241087982698498
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 7062770115623780354 := 7062770115623780384 >>l 57
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 64&145241087982698498
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 7062770115623780354 := 7062770115623780384 >>l 57
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 64&145241087982698498
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 7062770115623780354 := 7062770115623780384 >>l 57
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 64&287667426198290402
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 64&146366987889541122
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 5910974510923776002 := 5910974510923792320 >>l 57
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 0 := 64&146366987889541122
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 5910974510923776002 := 5910974510923792320 >>l 57
(smt.stats   34   4414 135750 352172  4996/4546/744    8654/1574    43  334   26.00)
(smt.stats   35   4608 144861 379016  5020/4602/762    9135/1714    44  375   26.19)
(smt.stats   36   4709 148774 396847  5044/4625/762    9284/1714    44  375   26.19)
(smt.stats   37   4820 149423 407395  5060/4648/762    9414/1714    44  375   26.19)
ramon: poll                 wall=4.000s usage=3.994s mem=27744KiB load=1.00 rootload=1.00
(smt.stats   38   4942 153329 429017  5072/4658/762    9642/1714    44  375   26.29)
(smt.delete-inactive-clauses  :num-deleted-clauses 74)
(smt.stats   39   5076 157643 449170  5097/4669/763    9728/1765    45  380   26.29)
(smt.stats   40   5223 164235 468584  5162/4745/768    9942/1780    46  384   26.29)
(smt.stats   41   5384 170256 500910  5172/4752/782   10278/1804    47  404   26.39)
ramon: poll                 wall=5.000s usage=4.993s mem=28044KiB load=1.00 rootload=1.00
(smt.stats   42   5561 178741 522030  5273/4758/782   10893/1808    47  404   26.58)
ramon: poll                 wall=6.000s usage=5.993s mem=28420KiB load=1.00 rootload=1.00
(smt.stats   43   5755 183830 535963  5627/4896/782   11335/2104    48  425   26.97)
(smt.stats   44   5968 191218 563671  5989/5287/782   12223/2109    48  425   27.16)
ramon: poll                 wall=7.004s usage=6.996s mem=29040KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6069 195550 590910  5996/5581/783   12747/2256    49  434   27.37)
(smt.stats   46   6180 198745 616598  5997/5582/783   12922/2256    49  434   27.52)
(smt.stats   47   6302 205467 637232  6101/5625/784   13270/2486    50  435   27.95)
(smt.stats   48   6436 211112 656184  6270/5699/784   13779/2493    50  435   28.07)
ramon: poll                 wall=8.000s usage=7.992s mem=29676KiB load=1.00 rootload=0.99
(smt.stats   49   6583 222488 678899  6278/5861/784   13974/2493    50  435   28.17)
(smt.stats   50   6744 230382 694481  6581/5861/784   14350/2493    50  435   28.36)
ramon: poll                 wall=9.000s usage=8.992s mem=30104KiB load=1.00 rootload=1.00
(smt.stats   51   6921 238097 716957  6721/6199/784   14932/2493    50  435   28.63)
(smt.stats   52   7115 246987 759856  6791/6358/787   15482/2882    51  436   28.63)
(smt.stats   53   7328 264468 838905  6849/6402/787   15871/3046    52  436   28.72)
ramon: poll                 wall=10.000s usage=9.991s mem=30312KiB load=1.00 rootload=1.00
(smt.stats   54   7562 273235 874967  6908/6462/790   17058/3130    53  447   28.82)
(smt.stats   55   7663 279225 893281  6935/6495/790   17233/3130    53  447   28.91)
(smt.stats   56   7774 287018 913822  6957/6523/790   17414/3134    53  447   28.91)
(smt.stats   57   7896 292963 948567  6969/6550/792   17643/3319    54  459   28.91)
(smt.stats   58   8030 297788 966519  6987/6570/796   18117/3415    55  479   28.91)
ramon: poll                 wall=11.000s usage=10.991s mem=30660KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   59   8177 308835 1002367  7033/6573/796   18445/3417    55  479   29.24)
(smt.stats   60   8338 315582 1024188  7082/6647/796   18715/3537    56  482   29.24)
(smt.stats   61   8515 319726 1043463  7198/6781/799   19173/3538    56  482   29.24)
(smt.stats   62   8709 329057 1077640  7244/6822/801   19625/3694    57  508   29.34)
ramon: poll                 wall=12.000s usage=11.991s mem=30920KiB load=1.00 rootload=1.00
(smt.stats   63   8922 341682 1117292  7395/6833/801   20170/3702    57  508   29.43)
(smt.stats   64   9156 352308 1159514  7484/7064/803   20695/3967    58  514   29.53)
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 8&38280596832649226
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 326510972984360970 := 6917529027641081856 >>l 60
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 8&38280596832649226
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 326510972984360970 := 7061644215716937728 >>l 60
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 8&38280596832649226
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 38280596832649226 := 7062770115623780352 >>l 60
band: (band[58] (if (= #361 63) 9223372036854775808 (if #494 4611686018427387904 #491)) (lshr[64] (* 32 #343) (mod #649 64))) 8 := 8&38280596832649226
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #642 #646) 64)) 38280596832649226 := 7062770115623780352 >>l 60
ramon: poll                 wall=13.000s usage=12.991s mem=31092KiB load=1.00 rootload=1.00
(smt.stats   65   9413 356877 1206457  7620/7081/803   21161/4088    59  517   29.62)
(smt.stats   66   9514 360292 1231869  7664/7237/808   21504/4088    59  517   29.64)
(smt.stats   67   9625 369825 1270001  7803/7239/808   21700/4224    60  518   29.74)
(smt.stats   68   9747 375387 1290229  7894/7382/808   21845/4224    60  518   29.74)
ramon: poll                 wall=14.000s usage=13.990s mem=31436KiB load=1.00 rootload=1.00
(smt.stats   69   9881 382696 1320937  8169/7477/808   22514/4227    60  518   29.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 72)
(smt.stats   70  10028 387998 1349784  8200/7769/808   22987/4228    60  518   29.97)
(smt.stats   71  10189 394013 1401402  8221/7794/809   23334/4417    61  522   29.97)
(smt.stats   72  10366 403550 1478812  8232/7805/813   23665/4423    62  529   30.07)
ramon: poll                 wall=15.000s usage=14.990s mem=31612KiB load=1.00 rootload=1.00
(smt.stats   73  10560 411369 1504281  8241/7812/814   24159/4423    62  529   30.16)
ramon: poll                 wall=16.000s usage=15.990s mem=31760KiB load=1.00 rootload=1.00
(smt.stats   74  10773 423754 1538209  8440/7819/814   24552/4520    63  558   30.26)
(smt.stats   75  11007 429886 1569800  8645/8140/814   25002/4522    63  558   30.35)
ramon: poll                 wall=17.000s usage=16.990s mem=31964KiB load=1.00 rootload=1.00
(smt.stats   76  11264 441333 1600791  8747/8240/814   25390/4525    63  558   30.35)
(smt.stats   77  11546 454930 1637265  9075/8647/816   25918/4634    64  565   30.45)
(smt.stats   78  11647 462213 1669957  9081/8653/816   26067/4634    64  565   30.45)
ramon: poll                 wall=18.000s usage=17.990s mem=32084KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11758 466977 1703273  9089/8661/817   26585/4634    64  565   30.54)
(smt.stats   80  11880 473179 1723582  9118/8668/818   26771/4842    65  566   30.54)
(smt.stats   81  12014 478080 1738918  9182/8749/819   27010/4844    65  566   30.54)
ramon: poll                 wall=19.000s usage=18.989s mem=32320KiB load=1.00 rootload=1.00
(smt.stats   82  12161 485818 1780246  9264/8785/819   27215/4845    65  566   30.64)
(smt.stats   83  12322 490454 1803432  9315/8861/819   27391/4879    66  570   30.76)
(smt.stats   84  12499 497099 1865327  9332/8900/819   27756/4879    66  570   30.76)
(smt.stats   85  12693 507197 1912818  9362/8934/819   29612/4879    66  570   30.96)
(smt.stats   86  12906 518631 1944651  9476/8940/819   30015/4881    66  570   31.05)
ramon: poll                 wall=20.000s usage=19.988s mem=33028KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:06:42 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.995s
ramon: group.utime          19.971s
ramon: group.stime          0.024s
ramon: group.mempeak        33284KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
