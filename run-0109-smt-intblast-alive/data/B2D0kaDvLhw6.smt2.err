ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:43:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42504 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/B2D0kaDvLhw6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2842048
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 1 := 1&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 1&16744448
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 1 := 4294967040 >>l 17
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 1&16744448
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 1 := 4294967040 >>l 17
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 0&16744448
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 16777216 := 4294967040 >>l 17
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 0&16744448
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 16777216 := 4294967040 >>l 17
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 0&16744448
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 16777216 := 4294967040 >>l 17
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 0&16744448
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 16777216 := 4294967040 >>l 17
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 0&16744448
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 16777216 := 4294967040 >>l 17
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32767&16744448
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 16777214 := 16777215 >>l 9
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 513 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 1&16744448
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 511 := 512 >>l 9
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 1&16744448
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 511 := 512 >>l 9
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 1 := 1&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 2 := 2&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 4 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 8 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 16 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 32 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 64 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 128 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 256 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 512 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 1024 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 2048 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 4096 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 8192 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 16384 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 16384 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 8192 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 8192 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 8192 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 512 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 2048 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 4096 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 2048 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 2048 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 4096 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 4096 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 4096 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 512 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 512 := 32767&16744448
(smt.stats    0    102   2905    965   703/646/199     120/44     9   42   19.16)
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 1024 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 2048 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 256 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 256 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32767&16744448
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 32768 := 16777215 >>l 9
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32767&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 1 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32767&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 2 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32767&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32767 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32767&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32766 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32767&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 4 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32760&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32760 := 32760&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32767&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32762 := 32767&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32762&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32762 := 32762&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32761&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32760 := 32761&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32764&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32764 := 32764&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32764&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32764 := 32764&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32764&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32764 := 32764&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32764&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32764 := 32764&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 25&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 25 := 25&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32752&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32752 := 32752&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32751&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32736 := 32751&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 64&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 64 := 64&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 128&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 128 := 128&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 256&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 256 := 256&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 512&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 512 := 512&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 1024&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 1024 := 1024&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 2048&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 2048 := 2048&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4096&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 4096 := 4096&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 8192&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 8192 := 8192&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 16384&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 16384 := 16384&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32759&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32752 := 32759&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 96 := 96&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 96 := 96&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 96 := 96&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 96 := 96&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 72 := 72&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 72 := 72&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 72 := 72&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 64 := 64&16744448
(smt.stats    1    203   5125   2990  1312/1183/302     265/84    14   79   19.84)
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 64 := 64&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 24576&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 24576 := 24576&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 16384&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 16384 := 16384&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 8192&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 8192 := 8192&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 8192&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 8192 := 8192&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 16384&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 16384 := 16384&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 16384&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 16384 := 16384&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 256&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 256 := 256&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 512&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 512 := 512&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 1024&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 1024 := 1024&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 2048&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 2048 := 2048&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 1536&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 1536 := 1536&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 256&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 256 := 256&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 256&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 256 := 256&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 64&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 64 := 64&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 64&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 64 := 64&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 128&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 128 := 128&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 8&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 8 := 8&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 8&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 8 := 8&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 16 := 16&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 16 := 16&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 128 := 128&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 128 := 128&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32 := 32&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 32 := 32&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4096&16744448
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 4096 := 4096&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 1 := 1&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 2 := 2&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 4 := 4&16744448
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 4 := 4&16744448
(smt.stats    2    314   7799   5510  1499/1280/356     518/124    17   94   20.17)
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 1&0
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 1 := 131072 >>l 8
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 0&0
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 16777216 := 16777472 >>l 8
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 0&0
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 16777216 := 4294967040 >>l 8
(smt.stats    3    417  10614   9319  1551/1425/430     825/244    22  126   20.68)
(smt.stats    4    528  16150  15666  1923/1708/438    1248/318    24  139   21.24)
(smt.stats    5    650  22803  24272  1969/1755/442    1861/383    27  151   21.62)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    751  28015  30719  2034/1781/442    2141/384    27  151   21.91)
ramon: poll                 wall=1.000s usage=0.926s mem=23700KiB load=0.93 rootload=0.90
(smt.stats    7    862  34116  39126  2165/1838/443    2506/413    28  151   22.20)
(smt.stats    8    984  39904  45722  2215/1994/444    3288/432    29  155   22.30)
(smt.stats    9   1118  45886  55217  2363/2003/446    3670/528    30  157   22.38)
(smt.stats   10   1219  50721  62708  2494/2165/446    4124/533    30  157   22.48)
(smt.stats   11   1330  54516  69103  2638/2353/447    4475/611    31  158   22.57)
ramon: poll                 wall=2.005s usage=1.932s mem=24208KiB load=1.00 rootload=1.01
(smt.stats   12   1452  57751  77449  2734/2513/448    5233/674    32  159   22.67)
(smt.stats   13   1586  63454  83955  2850/2521/448    5768/680    32  159   22.87)
(smt.stats   14   1733  67854 100540  2936/2666/450    6381/794    33  168   23.07)
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 16192&8388608
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 16793408 := 2147664384 >>l 9
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32759&8388608
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 32759 := 2147664384 >>l 9
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32760&8388608
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 32760 := 2147664384 >>l 9
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 32761&8388608
lshr: (lshr[32] (* 256 (bv2int %1)) (mod (+ 8 #103 #216) 32)) 32761 := 2147664384 >>l 9
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194657&8388608
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 16386 := 8389314 >>l 1
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194657&8388608
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 193 := 4194657&8388608
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194657&8388608
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 4194657 := 8389314 >>l 1
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194657&8388608
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 193 := 4194657&8388608
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194666&8388608
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 4194877 := 8389332 >>l 1
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194666&8388608
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 210 := 4194666&8388608
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194666&8388608
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 4194666 := 8389332 >>l 1
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194666&8388608
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 210 := 4194666&8388608
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194664&8388608
lshr: (lshr[24] (bv2int %1) (mod (bv2int %0) 24)) 4194873 := 8389329 >>l 1
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194664&8388608
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 208 := 4194664&8388608
band: (band[24] (lshr[32] (* 256 #102) (mod #217 32)) (if (= #413 31) 9223372032559808512 (if #415 4611686016279904256 #475))) 0 := 4194687&8388608
band: (band[24] (lshr[24] (bv2int %1) (mod #103 24)) (if (= #344 23) 140737479966720 (if #346 70368739983360 #390))) 208 := 4194687&8388608
(smt.stats   15   1834  70674 111082  3160/2855/451    6766/821    34  172   23.35)
(smt.stats   16   1945  73087 121056  3276/2935/462    7673/822    34  172   23.45)
(smt.stats   17   2067  77400 131053  3331/3026/464    8648/894    35  178   23.64)
ramon: poll                 wall=3.000s usage=2.922s mem=25324KiB load=0.99 rootload=0.98
(smt.stats   18   2201  83499 143591  3510/3111/464    9702/900    35  178   23.93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   19   2348  91844 161019  3661/3285/464   10519/1077    36  179   24.03)
(smt.stats   20   2509  96889 176282  3754/3474/465   12021/1129    37  193   24.22)
ramon: poll                 wall=4.000s usage=3.921s mem=25896KiB load=1.00 rootload=1.00
(smt.stats   21   2610 101280 186419  3770/3493/465   12319/1132    37  193   24.32)
(smt.stats   22   2721 105015 196589  3934/3557/465   12797/1134    37  193   24.41)
(smt.stats   23   2843 112020 214054  4010/3687/472   13616/1385    38  199   24.61)
(smt.stats   24   2977 116021 225444  4085/3772/472   14716/1389    38  199   24.71)
(smt.stats   25   3124 123159 251026  4231/3945/476   15404/1627    39  203   24.89)
ramon: poll                 wall=5.000s usage=4.917s mem=26872KiB load=1.00 rootload=1.00
(smt.stats   26   3285 128810 280101  4309/4027/478   16177/1667    40  205   24.89)
(smt.stats   27   3462 135416 303533  4428/4159/480   18024/1669    40  205   25.10)
(smt.stats   28   3563 139750 318392  4478/4209/481   18466/1872    41  212   25.29)
(smt.stats   29   3675 145515 340544  4594/4275/482   19126/1879    41  212   25.38)
ramon: poll                 wall=6.000s usage=5.917s mem=26912KiB load=1.00 rootload=1.00
(smt.stats   30   3797 149727 355129  4677/4330/482   19640/1882    41  212   25.48)
(smt.stats   31   3931 153472 372785  4771/4456/483   20303/1936    42  212   25.69)
(smt.stats   32   4078 158147 399049  4805/4526/486   21758/1937    42  212   25.79)
ramon: poll                 wall=7.005s usage=6.924s mem=27628KiB load=1.00 rootload=1.01
(smt.stats   33   4239 163853 419323  4986/4578/486   22989/1940    42  212   26.07)
(smt.stats   34   4416 169612 445209  5330/4830/486   24230/2288    43  256   26.35)
ramon: poll                 wall=8.000s usage=7.916s mem=28288KiB load=1.00 rootload=0.99
(smt.stats   35   4610 175557 466420  5431/5081/486   26401/2289    43  256   26.55)
ramon: poll                 wall=9.000s usage=8.916s mem=28288KiB load=1.00 rootload=1.00
(smt.stats   36   4711 179810 479599  5577/5221/487   26957/2624    44  259   26.64)
(smt.stats   37   4822 183676 491357  5739/5439/491   27678/2626    44  259   26.95)
(smt.stats   38   4944 187060 503944  5849/5548/491   28262/2626    44  259   26.95)
(smt.delete-inactive-clauses  :num-deleted-clauses 172)
ramon: poll                 wall=10.000s usage=9.916s mem=28544KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   39   5078 190447 519749  5939/5655/492   28999/2911    45  281   27.05)
(smt.stats   40   5225 196382 551239  5988/5683/492   29643/2915    45  281   27.15)
(smt.stats   41   5386 203776 577925  6052/5757/492   30256/2917    45  281   27.25)
(smt.stats   42   5563 208295 599007  6154/5873/494   31210/3169    46  283   27.35)
ramon: poll                 wall=11.000s usage=10.916s mem=29056KiB load=1.00 rootload=1.00
(smt.stats   43   5757 214229 637770  6269/5985/495   33664/3171    46  283   27.54)
(smt.stats   44   5970 219147 662759  6332/6016/495   34505/3178    46  283   27.64)
(smt.stats   45   6071 222357 681147  6413/6108/496   35003/3179    46  283   27.73)
(smt.stats   46   6182 225874 695489  6517/6174/497   35865/3465    47  310   27.83)
(smt.stats   47   6304 227965 712054  6605/6310/499   36058/3466    47  310   27.83)
(smt.stats   48   6438 230364 735064  6705/6345/499   36970/3467    47  310   28.02)
ramon: poll                 wall=12.005s usage=11.924s mem=29824KiB load=1.00 rootload=1.00
(smt.stats   49   6585 234722 754652  6836/6463/502   38058/3471    47  310   28.22)
(smt.stats   50   6746 241404 803707  6991/6619/502   39285/3476    47  310   28.32)
(smt.stats   51   6923 249126 856255  7071/6734/502   40333/3830    48  340   28.43)
ramon: poll                 wall=13.000s usage=12.915s mem=30336KiB load=1.00 rootload=1.00
(smt.stats   52   7117 255599 887139  7203/6885/504   42075/3831    48  340   28.84)
(smt.stats   53   7330 264113 913401  7429/6935/504   43455/3836    48  340   29.03)
ramon: poll                 wall=14.000s usage=13.915s mem=30848KiB load=1.00 rootload=0.99
(smt.stats   54   7564 271142 950868  7584/7291/505   45533/4179    49  476   29.46)
(smt.stats   55   7665 275417 966885  7640/7339/505   46156/4179    49  476   29.56)
(smt.stats   56   7776 279904 985901  7723/7385/505   47106/4183    49  476   29.66)
ramon: poll                 wall=15.000s usage=14.915s mem=31360KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7898 284499 1012739  7848/7492/505   48162/4185    49  476   29.75)
(smt.stats   58   8032 287589 1029507  7904/7589/505   49317/4547    50  519   29.85)
(smt.stats   59   8179 291270 1079264  7934/7661/506   50404/4548    50  519   30.13)
(smt.stats   60   8340 295651 1098775  8049/7663/506   51355/4554    50  519   30.13)
ramon: poll                 wall=16.000s usage=15.915s mem=31820KiB load=1.00 rootload=1.00
(smt.stats   61   8517 300911 1140917  8139/7792/507   52249/4556    50  519   30.33)
(smt.stats   62   8711 307325 1168410  8291/8013/508   53363/4956    51  535   30.43)
ramon: poll                 wall=17.000s usage=16.915s mem=32332KiB load=1.00 rootload=0.99
(smt.stats   63   8924 316389 1207251  8385/8112/510   55072/4957    51  535   30.72)
(smt.stats   64   9158 323802 1239912  8514/8125/510   57013/4962    51  535   30.91)
ramon: poll                 wall=18.000s usage=17.914s mem=32664KiB load=1.00 rootload=1.00
(smt.stats   65   9415 335055 1302303  8718/8352/511   58525/5340    52  588   31.01)
(smt.stats   66   9516 336601 1326604  8748/8475/516   59858/5340    52  588   31.40)
(smt.stats   67   9627 340111 1351204  8798/8478/516   60604/5340    52  588   31.40)
(smt.stats   68   9749 343999 1372467  8863/8538/516   61917/5342    52  588   31.79)
ramon: poll                 wall=19.000s usage=18.914s mem=33688KiB load=1.00 rootload=1.00
(smt.stats   69   9883 349252 1405388  8959/8605/516   62714/5344    52  588   31.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 12306)
(smt.stats   70  10030 352900 1441375  8995/8703/516   52121/5346    52  588   31.98)
(smt.stats   71  10191 359603 1477169  9117/8731/516   53560/5928    53  707   31.98)
ramon: poll                 wall=20.000s usage=19.914s mem=33632KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:43:41 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.988s
ramon: group.utime          19.952s
ramon: group.stime          0.036s
ramon: group.mempeak        33888KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.00
