ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:19:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41510 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/SC7bqyxQrp54.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2966074
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   4830    460  1349/1204/107     102/16     5   16   19.45)
(smt.stats    1    203   5349    845  2577/2352/108     216/33     6   16   19.67)
(smt.stats    2    315   7536   2308  2627/2402/112     352/53     8   20   19.67)
(smt.stats    3    416   8992   3690  2670/2435/117     452/70    10   24   19.76)
(smt.stats    4    527  11312   5714  2936/2506/119     563/91    12   26   19.76)
ramon: poll                 wall=1.004s usage=1.004s mem=20988KiB load=1.00 rootload=0.99
(smt.stats    5    649  13330   6541  3079/2697/119     692/93    12   26   19.90)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    750  16930   7349  3186/2841/119     795/93    12   26   19.90)
(smt.stats    7    861  22706  10050  3218/2947/119     910/93    12   26   20.03)
(smt.stats    8    983  25404  12785  3255/3001/124    1023/114    13   33   20.03)
(smt.stats    9   1117  28307  16858  3284/3026/125    1165/129    15   35   20.17)
(smt.stats   10   1218  29491  20578  3308/3042/125    1265/130    15   35   20.17)
(smt.stats   11   1329  30237  24772  3414/3126/128    1381/140    16   41   20.37)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  31229  32751  3457/3193/128    1466/140    16   41   20.37)
(smt.stats   13   1585  35254  39753  3489/3213/134    1616/171    18   53   20.47)
(smt.stats   14   1732  39860  46852  3545/3241/134    1770/171    18   53   20.73)
ramon: poll                 wall=2.000s usage=1.999s mem=21832KiB load=1.00 rootload=1.00
(smt.stats   15   1833  42106  49426  3617/3288/134    1871/172    18   53   20.73)
(smt.stats   16   1944  43650  51470  3817/3542/139    1986/184    19   54   20.82)
ramon: poll                 wall=3.000s usage=2.999s mem=22236KiB load=1.00 rootload=1.00
(smt.stats   17   2066  44424  53211  3904/3598/141    2094/181    20   68   21.14)
(smt.stats   18   2200  45066  54384  4196/3856/141    2236/184    21   69   21.24)
ramon: poll                 wall=4.000s usage=3.999s mem=22528KiB load=1.00 rootload=0.99
(smt.stats   19   2347  45641  55387  4448/4138/141    2389/186    21   69   21.52)
ramon: poll                 wall=5.000s usage=4.999s mem=22876KiB load=1.00 rootload=1.00
(smt.stats   20   2508  46765  58138  5078/4469/141    2564/186    21   69   21.62)
(smt.stats   21   2609  50615  62581  5121/4834/144    2699/206    22   73   21.62)
(smt.stats   22   2720  52604  65448  5219/4894/144    2849/206    22   73   21.72)
(smt.stats   23   2842  54679  68129  5252/4982/144    2975/206    22   73   21.72)
(smt.stats   24   2976  56951  70697  5343/4988/144    3125/207    22   73   21.81)
ramon: poll                 wall=6.000s usage=5.998s mem=23068KiB load=1.00 rootload=1.00
(smt.stats   25   3123  60294  75022  5460/5134/144    3278/207    22   73   21.81)
(smt.stats   26   3284  66110  82914  5485/5201/144    3449/207    22   73   21.81)
(smt.stats   27   3461  73073  88673  5494/5221/144    3623/207    22   73   21.91)
(smt.stats   28   3562  74686  91240  5566/5229/144    3742/207    22   73   22.01)
(smt.stats   29   3673  78330  94119  5618/5347/144    3859/207    22   73   22.22)
(smt.stats   30   3795  81306 100312  5653/5352/144    3987/208    22   73   22.22)
(smt.stats   31   3929  84544 111224  5703/5417/146    4126/307    23   76   22.35)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4076  87004 119432  5745/5450/146    4301/319    24   76   22.35)
(smt.stats   33   4237  91086 127400  5875/5493/146    4519/323    24   76   22.35)
ramon: poll                 wall=7.000s usage=6.998s mem=23668KiB load=1.00 rootload=1.00
(smt.stats   34   4414  93776 135441  6003/5638/146    4723/325    24   76   22.45)
(smt.stats   35   4608  96324 140434  6210/5780/146    4919/327    24   76   22.45)
(smt.stats   36   4709  98099 146539  6330/6009/146    5019/328    24   76   22.58)
(smt.stats   37   4820 100809 152775  6384/6081/146    5128/328    24   76   22.58)
(smt.stats   38   4942 103716 158753  6402/6129/147    5256/429    25   81   22.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 124)
ramon: poll                 wall=8.000s usage=7.998s mem=23912KiB load=1.00 rootload=1.00
(smt.stats   39   5076 106286 162478  6406/6133/147    5272/429    25   81   22.58)
(smt.stats   40   5223 112572 169089  6432/6151/147    5418/429    25   81   22.67)
(smt.stats   41   5384 121312 175015  6441/6166/147    5590/429    25   81   22.67)
(smt.stats   42   5561 126069 184832  6495/6180/147    5818/430    25   81   22.77)
(smt.stats   43   5755 130524 193328  6648/6238/147    6010/430    25   81   22.77)
ramon: poll                 wall=9.000s usage=8.997s mem=24260KiB load=1.00 rootload=1.00
(smt.stats   44   5968 134259 200533  6808/6416/147    6241/430    25   81   22.88)
(smt.stats   45   6069 137217 206533  6845/6574/147    6423/430    25   81   23.31)
(smt.stats   46   6180 140559 213356  6864/6578/147    6566/430    25   81   23.31)
(smt.stats   47   6302 142759 222585  6919/6611/147    6716/430    25   81   23.46)
(smt.stats   48   6436 145086 228179  6969/6654/147    6865/430    25   81   23.46)
(smt.stats   49   6583 146889 239698  7025/6721/147    7006/432    25   81   23.46)
(smt.stats   50   6744 151307 251625  7137/6787/147    7174/433    25   81   23.57)
ramon: poll                 wall=10.000s usage=9.996s mem=25036KiB load=1.00 rootload=0.99
(smt.stats   51   6921 156831 264309  7361/6906/147    7346/433    25   81   23.66)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7115 157995 274721  7574/7115/147    7539/437    25   81   23.76)
ramon: poll                 wall=11.004s usage=10.999s mem=25248KiB load=1.00 rootload=1.01
(smt.stats   53   7328 161514 287139  7772/7368/147    7750/439    25   81   23.85)
(smt.stats   54   7562 165958 294076  7802/7518/147    7990/439    25   81   23.85)
(smt.stats   55   7663 167418 302122  7813/7544/148    8091/565    26   84   23.99)
(smt.stats   56   7774 170548 314691  7826/7545/148    8218/565    26   84   23.99)
(smt.stats   57   7896 172276 323203  7894/7557/148    8355/565    26   84   23.99)
(smt.stats   58   8030 173636 334687  7956/7673/148    8499/565    26   84   24.12)
(smt.stats   59   8177 175400 338879  8020/7708/148    8668/566    26   84   24.12)
(smt.stats   60   8338 178123 345074  8050/7764/148    8842/566    26   84   24.12)
ramon: poll                 wall=12.000s usage=11.995s mem=25604KiB load=1.00 rootload=0.99
(smt.stats   61   8515 179996 350489  8219/7784/148    9024/567    26   84   24.21)
ramon: poll                 wall=13.000s usage=12.995s mem=25804KiB load=1.00 rootload=1.00
(smt.stats   62   8709 182037 355693  8650/8055/148    9222/568    26   84   24.32)
(smt.stats   63   8922 185485 365960  8856/8452/150    9455/618    27   87   24.43)
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 144115188109420348&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 9367487224964196156 := 144115188109420490 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 144115188109420348&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 9367487224964196156 := 144115188109420490 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 144115188109420348&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 144115188109420348 := 144115188109420490 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 288230376218840980&0
shl: (shl[61] (bv2int %0) (mod (bv2int %0) 61)) 677 := 144115188109420490 << 1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 288230376218840980&0
shl: (shl[61] (bv2int %0) (mod (bv2int %0) 61)) 677 := 144115188109420490 << 1
(smt.stats   64   9157 192408 381434  8905/8619/156    9811/646    28   95   24.54)
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 3073&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 3073&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 3072&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1298&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 3073&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 3072&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2048&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2048&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 3071&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2048&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2048&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1298&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1298&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2045&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2046&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1304&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1304&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2037&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2036&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2032&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2032&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2016&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2016&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1984&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1313&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1312&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1344&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1408&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 24 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 28 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 20 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 20 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 23 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 23 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 20 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 20 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 256 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 260 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 32 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 36 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 55 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 52 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 84 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 148 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 20 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 276 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 279 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 276 := 1300&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1300 := 1300&65535
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 1300 := 144115188109420506 << 17
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1300 := 1300&65535
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 1300 := 144115188109420506 << 17
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 2048 := 2048&65535
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 2048 := 144115188109420506 << 17
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1280 := 1408&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 384 := 384&65535
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 384 := 144115188109420506 << 17
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 384 := 384&65535
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 384 := 144115188109420506 << 17
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 256 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 512 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 544 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 544 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 544 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 576 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 544 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 520 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 512 := 4399383707648&65535
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 512 := 4399383707648&65535
(smt.stats   65   9414 198217 392989  9115/8781/312   10180/668    28   95   25.04)
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1 := 3&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 3 := 144115188109420491 << 2
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1 := 64&1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1 := 64&1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1 := 64&1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1 := 64&1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1 := 64&1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1 := 65&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 65 := 144115188109420491 << 2
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 1 := 2&1
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 2 := 144115188109420491 << 2
band: (band[61] (shl[64] (bv2int %0) (mod #838 64)) (if (or #853 #854) 0 (if #855 1 #978))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #837) 64)) 2 := 144115188109420491 << 2
(smt.stats   66   9515 199931 398318  9134/8842/345   10307/820    29  131   25.14)
(smt.stats   67   9626 203219 409459  9207/8911/346   10418/820    29  131   25.25)
(smt.stats   68   9748 205877 415234  9273/8915/346   10581/851    30  142   25.44)
ramon: poll                 wall=14.000s usage=13.995s mem=27072KiB load=1.00 rootload=1.00
(smt.stats   69   9882 209182 423828  9393/9045/346   10751/851    30  142   25.44)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10029 212091 434886  9441/9149/352   11021/934    31  145   25.66)
(smt.stats   71  10190 221009 448450  9536/9224/355   11240/996    32  165   25.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10367 226050 459815  9556/9239/355   11477/996    32  165   25.85)
(smt.stats   73  10561 231484 472150  9614/9310/358   11699/1013    33  169   25.94)
ramon: poll                 wall=15.000s usage=14.995s mem=27664KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.994s mem=27888KiB load=1.00 rootload=1.00
(smt.stats   74  10774 236165 477630  9928/9317/358   12031/1017    33  169   26.23)
ramon: poll                 wall=17.000s usage=16.994s mem=28048KiB load=1.00 rootload=1.00
(smt.stats   75  11008 239567 487301 10299/9646/358   12351/1019    33  169   26.42)
ramon: poll                 wall=18.000s usage=17.994s mem=28212KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.994s mem=28340KiB load=1.00 rootload=0.99
(smt.stats   76  11265 247212 500878 10621/10054/358   12833/1114    34  169   26.71)
(smt.stats   77  11547 258430 522290 10731/10425/359   13297/1245    35  170   27.70)
ramon: poll                 wall=20.000s usage=19.994s mem=29476KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:20:06 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.000s
ramon: group.utime          19.976s
ramon: group.stime          0.024s
ramon: group.mempeak        30132KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
