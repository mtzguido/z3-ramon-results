ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:45:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29216 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7q9OVJEtY3cS.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             651836
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   103.093     10000        49          0            1        2)
(smt.stats    0    101   5145   2179  1216/1098/114      87/12    10   19   52.18)
(sat.ddfw       1      1   47.6238     20001        98          1            1        3)
(smt.stats    1    202   6341   3340  2050/1844/115     191/23    11   21   52.27)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 561919161270272 := 561919161270272&561919161270272
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 561919161270272 := 18446744073709535232 >>l 28
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 1 := 1&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 1 := 1&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 2 := 2&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 4 := 4&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 8 := 8&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 1&561919161270272
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 1 := 18446744073709535232 >>l 28
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 1&561919161270272
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 1 := 49152 >>l 28
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 2&561919161270272
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 2 := 65536 >>l 28
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 2&561919161270272
lshr: (lshr[50] (bv2int %0) (mod (bv2int %1) 50)) 3 := 32768 >>l 14
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 2&561919161270272
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 2 := 536870912 >>l 28
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 2&561919161270272
lshr: (lshr[50] (bv2int %0) (mod (bv2int %1) 50)) 3 := 32768 >>l 14
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 4 := 4&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 8 := 8&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 16 := 16&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 32 := 32&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 64 := 64&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 128 := 128&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 256 := 256&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 512 := 512&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 1024 := 1024&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 2048 := 2048&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 4096 := 4096&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 8192 := 8192&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 16384 := 16384&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 32768 := 32768&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 65536 := 65536&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 131072 := 131072&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 262144 := 262144&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 524288 := 524288&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 1048576 := 1048576&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 2097152 := 2097152&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 4194304 := 4194304&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 8388608 := 8388608&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 16777216 := 16777216&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 33554432 := 33554432&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 67108864 := 67108864&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 134217728 := 134217728&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 268435456 := 268435456&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 536870912 := 536870912&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 1073741824 := 1073741824&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 2147483648 := 2147483648&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 4294967296 := 4294967296&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 8589934592 := 8589934592&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 1073741824 := 1073741824&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 2147483648 := 2147500031&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 4294967296 := 4294983679&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 8589934592 := 8589950975&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 17179869184 := 17179885567&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 34359738368 := 34359754751&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 68719476736 := 68719493119&561919161270272
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 68719493119 := 68719493120 >>l 28
(smt.stats    2    313   7992   5040  2801/2252/127     316/54    12   24   53.49)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 40 := 40&561919161270272
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 40 := 4194303&703429743738880
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 40 := 4194303&703429743738880
(sat.ddfw       1      1   46.0829     40001       196          2            1        5)
(smt.stats    3    414  10374   8356  2635/2399/252     411/76    15   55   53.40)
(smt.stats    4    525  12925  13536  2646/2407/253     532/79    16   60   53.51)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 48 := 1125899906826239&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 256 := 1125899906826239&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 256 := 1125899906826239&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 192 := 1125899906842623&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 192 := 1125899906842623&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 676 := 1125899906842623&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 676 := 1125899906842623&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 672 := 672&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 672 := 672&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 640 := 640&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 512 := 512&366135358783488
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 512 := 512&366135358783488
(smt.stats    5    647  14865  16508  2757/2459/276     742/101    18   62   53.80)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 4608 := 4609&1117653569634304
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 4608 := 4609&1117653569634304
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17048  18913  2833/2573/302     881/133    19   72   53.89)
(smt.stats    7    859  18731  21752  2912/2603/302    1108/181    20   80   53.99)
(sat.ddfw       1      1   38.8601     70001       343          3            1        8)
(smt.stats    8    981  20714  28809  3024/2782/304    1623/296    21   80   53.99)
ramon: poll                 wall=1.004s usage=0.966s mem=56672KiB load=0.96 rootload=0.95
(smt.stats    9   1115  27031  43987  3035/2790/304    1797/296    21   80   54.09)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 279019536 := 279019536&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 279019536 := 279019536&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 279019520 := 279019520&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 279019520 := 279019520&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 279005184 := 279005184&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 279005184 := 279005184&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 279003136 := 279003136&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 278994944 := 278994944&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 278994944 := 278994944&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 278994944 := 278994944&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 278994944 := 278994944&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 278994944 := 278994944&562949953421312
(smt.stats   10   1216  28509  48102  3170/2910/330    2080/509    22   82   54.19)
(smt.stats   11   1327  29097  50811  3407/2954/330    2262/568    23   87   54.28)
(sat.ddfw       1      1   32.5733    110001       539          4            1       12)
(smt.stats   12   1449  30082  54450  3643/3274/330    2574/571    23   87   54.38)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 69256347648 := 69256347648&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 69793218560 := 69793218560&562949953421312
(smt.stats   13   1583  32930  62284  3780/3520/344    3140/872    24   92   54.48)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 69793218560 := 69793218560&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 69793218560 := 69793218560&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 69793218560 := 69793218560&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 70866960384 := 70866960384&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 73014444032 := 73014444032&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 73014444032 := 73014444032&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 77309411328 := 77309411328&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 85899345920 := 85899345920&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 73014444032 := 73014444032&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 70866960384 := 70866960384&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 68719476736 := 68719476736&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 68719476736 := 68719476736&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 68719476736 := 68719476736&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 68719476736 := 68719476736&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 17179869184 := 17179869184&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 17179869184 := 17179869184&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 17179869184 := 17179869184&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 0&562949953421312
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 1125899906842624 := 4194304 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 0&562949953421312
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 1125899906842624 := 4194304 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 0&562949953421312
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 1125899906842624 := 4194304 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 0&562949953421312
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 1125899906842624 := 4194304 >>l 15
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   14   1730  37654  91033  3844/3569/365    3719/998    26  100   54.71)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 0&562949953421312
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 1125899906842624 := 4194304 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 1&562949953421312
lshr: (lshr[50] (bv2int %0) (mod (bv2int %1) 50)) 1 := 2 >>l 1
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 1&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 1 := 1&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 2&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 2 := 2&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 4&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 4 := 4&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 8&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 8 := 8&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 32&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 32 := 32&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 64&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 64 := 64&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 64&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 64 := 64&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 128&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 128 := 128&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 128&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 128 := 128&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 128&562949953421312
lshr: (lshr[50] (bv2int %0) (mod (bv2int %1) 50)) 144 := 256 >>l 1
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 128&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 1 := 128&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 128&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 16 := 128&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 128&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 16 := 128&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 96&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 16 := 96&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 16&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 16 := 16&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 16&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 16 := 16&562949953421312
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 0 := 1&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #105 50)) (if (= #507 49) 431005313883226433672448049152 (if #509 215502656941613216836224024576 #605))) 1 := 1&562949953421312
(smt.stats   15   1831  40336  98620  3916/3637/432    3841/1003    26  100   54.91)
(sat.ddfw       1      1   27.8546    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.960s mem=57352KiB load=1.00 rootload=1.00
(smt.stats   16   1942  43042 107116  4054/3804/458    4373/1243    28  133   55.15)
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 137438953472 := 137438953472&280959580635136
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 137438953472 := 137438953472&280959580635136
(smt.stats   17   2064  46874 127526  4095/3814/459    4719/1629    29  138   55.52)
(sat.ddfw       1      1   24.2233    220001      1078          6            1       23)
(smt.stats   18   2198  51984 157282  4182/3870/470    5154/1955    31  141   55.52)
ramon: poll                 wall=3.004s usage=2.960s mem=58020KiB load=1.00 rootload=1.00
(smt.stats   19   2345  56332 182953  4320/3946/470    5323/1957    31  141   55.62)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2506  59297 199457  4396/4138/474    5533/1980    32  142   55.62)
(sat.ddfw       1      1   21.2121    290001      1421          7            1       30)
(smt.stats   21   2607  63086 214273  4407/4149/474    5882/1988    32  142   55.82)
(smt.stats   22   2718  66408 220199  4433/4162/474    5990/2166    33  149   55.82)
(smt.stats   23   2840  68966 227524  4459/4192/474    6126/2167    33  149   55.82)
(smt.stats   24   2974  70464 239156  4506/4247/477    6322/2189    34  153   55.92)
ramon: poll                 wall=4.000s usage=3.922s mem=58104KiB load=0.97 rootload=0.96
(smt.stats   25   3121  78056 271889  4513/4254/478    6530/2201    35  156   55.92)
(sat.ddfw       1      1   18.6785    370001      1813          8            1       38)
(smt.stats   26   3282  86231 307798  4517/4258/478    6786/2201    35  156   56.06)
(smt.stats   27   3459  93680 340388  4523/4264/478    7026/2201    35  156   56.30)
ramon: poll                 wall=5.000s usage=4.792s mem=58904KiB load=0.87 rootload=0.87
(smt.stats   28   3560  98691 372672  4527/4268/478    7146/2201    35  156   56.30)
(smt.stats   29   3671 101526 389917  4569/4273/478    7380/2201    35  156   56.52)
(smt.stats   30   3793 106456 404673  4688/4393/479    7627/2332    36  159   56.61)
(sat.ddfw       1      1   16.8036    460001      2254          9            1       47)
(smt.stats   31   3927 111903 424462  4699/4399/484    7898/2342    37  175   57.11)
(smt.stats   32   4074 116074 433828  4701/4406/485    8056/2342    37  175   57.21)
(smt.stats   33   4235 120824 449602  4740/4426/488    8523/2353    38  201   57.31)
ramon: poll                 wall=6.000s usage=5.753s mem=59844KiB load=0.96 rootload=0.96
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 281474976710656 := 281474976710657&281474976710656
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 281474976710657 := 281474976743424 >>l 16
band: (band[50] (lshr[64] (* 16384 #104) (mod #327 64)) (if (= #628 63) 14123182125325563778578777674612736 (if #630 7061591062662781889289388837306368 #754))) 281474976710656 := 281474976710657&281474976710656
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #105 #326) 64)) 281474976710657 := 281474976776192 >>l 16
(smt.stats   34   4412 125802 470643  4809/4477/490    8867/2404    39  207   57.60)
(sat.ddfw       1      1   15.5933    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=6.813s mem=60288KiB load=1.06 rootload=1.05
(smt.stats   35   4606 132482 486811  4914/4548/495    9291/2407    39  207   57.79)
(sat.ddfw       1      1    14.336    670001      3284         11            1       68)
ramon: poll                 wall=8.004s usage=7.814s mem=60492KiB load=1.00 rootload=1.00
(smt.stats   36   4707 138555 495756  4955/4615/495    9464/2518    40  211   58.12)
ramon: poll                 wall=9.000s usage=8.787s mem=60348KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   13.1868    790001      3872         12            1       80)
(smt.stats   37   4818 145039 504914  5054/4677/495    9615/2519    40  211   58.21)
(smt.stats   38   4940 151662 516037  5188/4770/495    9857/2530    40  211   58.21)
ramon: poll                 wall=10.000s usage=9.835s mem=60728KiB load=1.05 rootload=1.04
(smt.delete-inactive-clauses  :num-deleted-clauses 109)
(smt.stats   39   5074 156439 533601  5264/4909/495   10530/2531    40  211   58.31)
(sat.ddfw       1      1   12.2607    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.836s mem=60624KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5221 161678 558312  5485/4989/496   10818/2677    41  215   58.40)
(smt.stats   41   5382 167805 585022  5502/5189/497   11182/2677    41  215   58.50)
ramon: poll                 wall=12.000s usage=11.836s mem=61176KiB load=1.00 rootload=1.01
(smt.stats   42   5559 175972 626132  5526/5222/499   12363/3153    43  220   58.60)
(sat.ddfw       1      1    11.466   1060001      5196         14            1      108)
(smt.stats   43   5753 188902 679868  5544/5236/499   12868/3153    43  220   58.60)
ramon: poll                 wall=13.000s usage=12.835s mem=61264KiB load=1.00 rootload=0.99
(smt.stats   44   5966 195839 699137  5848/5249/499   13523/3276    44  229   58.91)
(smt.stats   45   6067 197828 712023  5922/5574/499   13975/3277    44  229   58.91)
(sat.ddfw       1      1   10.8186   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.867s mem=61596KiB load=1.03 rootload=1.04
(smt.stats   46   6178 203164 737903  6031/5643/499   14242/3278    44  229   58.91)
(smt.stats   47   6300 207691 749276  6073/5745/499   14447/3278    44  229   59.46)
(smt.stats   48   6434 215654 798045  6097/5789/499   14800/3279    44  229   59.46)
ramon: poll                 wall=15.000s usage=14.866s mem=61868KiB load=1.00 rootload=0.99
(smt.stats   49   6581 221133 830660  6108/5803/499   15651/3279    44  229   59.46)
(smt.stats   50   6742 230924 867632  6170/5808/499   15988/3284    44  229   59.58)
(sat.ddfw       1      1   10.1885   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=15.869s mem=61984KiB load=1.00 rootload=1.00
(smt.stats   51   6919 236273 880804  6331/5910/499   16197/3285    44  229   59.58)
(smt.stats   52   7113 243141 911922  6384/6032/499   16638/3290    44  229   59.79)
ramon: poll                 wall=17.000s usage=16.868s mem=62240KiB load=1.00 rootload=1.00
(smt.stats   53   7326 254077 966464  6468/6094/499   16907/3290    44  229   59.79)
(sat.ddfw       1      1   9.63064   1540001      7549         17            1      156)
ramon: poll                 wall=18.000s usage=17.865s mem=62340KiB load=1.00 rootload=1.00
(smt.stats   54   7560 262130 991524  6641/6270/501   17506/4086    45  229   59.88)
(smt.stats   55   7661 265367 998639  6716/6354/501   17621/4086    45  229   59.88)
ramon: poll                 wall=19.000s usage=18.867s mem=62436KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   56   7772 271405 1035069  6742/6437/501   17873/4086    45  229   59.88)
(smt.stats   57   7894 278492 1080799  6753/6448/501   18230/4160    46  231   59.98)
(smt.stats   58   8028 285429 1122304  6756/6451/502   18966/4738    47  233   60.18)
(sat.ddfw       1      1   9.12825   1720001      8431         18            1      174)
ramon: poll                 wall=20.000s usage=19.863s mem=62712KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:46:05 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.010s
ramon: group.total          19.909s
ramon: group.utime          19.889s
ramon: group.stime          0.020s
ramon: group.mempeak        62968KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.050s
ramon: loadavg              0.99
