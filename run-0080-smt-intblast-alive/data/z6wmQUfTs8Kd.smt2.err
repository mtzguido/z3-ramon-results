ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:13:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24467 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/z6wmQUfTs8Kd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             194081
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3030    475   667/587/98      99/14     5   18   18.69)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&1
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&1
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&2
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&4
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 4 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&4
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 4 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&1
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&2
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&4
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 4 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&4
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 4 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 56674723&4
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 4 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&67108860
(smt.stats    1    202   4809   1518  1184/1061/129     217/29     9   29   18.98)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8 := 3542170&12
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 12 := 8 << 21
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8 := 3542170&12
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 12 := 8 << 21
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777220
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 16777220 := 8 << 21
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 5 := 4 << 22
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 5 := 4 << 22
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 5 := 4 << 22
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 3542169 := 4 << 22
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 3542169 := 4 << 22
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 3542169 := 4 << 22
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 3542170 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 3542168 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 5 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 3542160 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 3542144 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 3542016 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 3540992 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4096 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8192 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 16384 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32768 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 65536 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 131072 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 262144 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 524288 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1048576 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2097152 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1048576 := 3542170&16777216
(smt.stats    2    313   5731   2628  1573/1210/151     444/44    10   34   19.70)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2121778 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2121776 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2122208 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2122208 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2122240 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2122240 := 3542170&16777216
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 3542170&16777216
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2122240 := 3542170&16777216
(smt.stats    3    414   6152   3681  2017/1464/256     721/46    11   55   20.09)
(smt.stats    4    525   8775   7919  2106/1949/293    1377/349    14  134   20.28)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&54525956
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&54525956
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&54525972
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4 := 108&54525972
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 54525972 := 90 << 6
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&54525972
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4 := 108&54525972
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 54525972 := 90 << 6
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4 := 108&54525972
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 54525972 := 90 << 6
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&54525956
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4 := 108&54525956
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 54525956 := 90 << 6
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&54525956
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4 := 108&54525956
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 54525956 := 90 << 6
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&5760
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 19 := 45 << 7
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&5760
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 19 := 45 << 7
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&5760
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 19 := 45 << 7
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&5760
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 19 := 45 << 7
(smt.stats    5    647  12333  13288  2178/1978/296    1914/623    16  145   20.47)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 108 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 107 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 106 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 106 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 104 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 96 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 106 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 104 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 102 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 102 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 102 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 100 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 96 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 96 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 80 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 108&5760
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  15217  18226  2260/2071/333    2181/696    18  149   20.57)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 80 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 108&5760
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 65 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 2448 := 19 << 7
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 2448 := 19 << 7
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 16 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 16 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 64 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 64 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 108&2432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 108&2432
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8 := 108&2432
(smt.stats    7    859  18065  23702  2325/2167/382    2364/729    20  165   20.76)
(smt.stats    8    981  21079  33555  2391/2226/398    2665/821    22  214   20.95)
(smt.stats    9   1115  24559  38880  2474/2237/400    2893/823    22  214   21.05)
ramon: poll                 wall=1.000s usage=0.939s mem=22416KiB load=0.94 rootload=0.91
(smt.stats   10   1216  26534  42264  2646/2344/400    2994/784    23  281   21.14)
(smt.stats   11   1327  28283  45117  2887/2521/400    3199/792    23  281   21.33)
(smt.stats   12   1449  30979  52309  2993/2834/405    3724/889    24  298   21.43)
(smt.stats   13   1583  32893  56799  3128/2836/405    4018/891    24  298   21.53)
ramon: poll                 wall=2.000s usage=1.938s mem=22828KiB load=1.00 rootload=1.00
(smt.stats   14   1730  35641  66687  3300/3012/405    4604/894    24  298   21.72)
(smt.stats   15   1831  37482  75623  3455/3245/405    4807/894    24  298   21.82)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   16   1942  39557  87637  3528/3350/406    5320/1096    25  300   21.82)
(smt.stats   17   2064  42899  96020  3569/3382/409    5692/1173    26  303   21.92)
ramon: poll                 wall=3.000s usage=2.937s mem=23280KiB load=1.00 rootload=1.00
(smt.stats   18   2198  45970 103528  3731/3417/409    6011/1201    27  317   22.01)
(smt.stats   19   2345  48103 108339  3902/3643/409    6348/1204    27  317   22.11)
(smt.stats   20   2506  51826 121563  3996/3838/420    7119/1264    28  328   22.20)
(smt.stats   21   2607  56284 138123  4094/3906/420    7592/1264    28  328   22.39)
(smt.stats   22   2718  58745 145857  4188/3966/420    8072/1517    29  376   22.52)
ramon: poll                 wall=4.004s usage=3.940s mem=23936KiB load=1.00 rootload=1.01
(smt.stats   23   2840  60584 152645  4434/4043/420    8403/1520    29  376   22.62)
(smt.stats   24   2974  62943 166435  4555/4360/426    9136/1615    30  381   22.71)
(smt.stats   25   3121  66285 177928  4616/4367/427    9833/1619    30  381   22.90)
(smt.stats   26   3282  68726 184877  4800/4500/427   10159/1818    31  406   23.09)
ramon: poll                 wall=5.000s usage=4.935s mem=24428KiB load=1.00 rootload=0.99
(smt.stats   27   3459  71192 195661  5103/4689/427   10780/1821    31  406   23.29)
(smt.stats   28   3560  74052 205170  5152/4916/427   11538/1825    31  406   23.29)
(smt.stats   29   3671  77998 216609  5226/4968/427   11977/1828    31  406   23.48)
ramon: poll                 wall=6.000s usage=5.935s mem=24920KiB load=1.00 rootload=1.00
(smt.stats   30   3793  80128 225405  5363/5044/427   12437/1831    31  406   23.67)
(smt.stats   31   3927  84481 246691  5503/5179/427   13304/1837    31  406   23.77)
(smt.stats   32   4074  90475 266488  5568/5325/430   14404/2071    32  409   23.96)
ramon: poll                 wall=7.000s usage=6.934s mem=25500KiB load=1.00 rootload=1.00
(smt.stats   33   4235  96060 283475  5766/5376/430   15305/2083    32  409   24.25)
(smt.stats   34   4412 101836 298494  5883/5589/430   15876/2265    33  422   24.25)
(smt.stats   35   4606 108088 326020  5947/5695/431   16657/2265    33  422   24.35)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   36   4707 110841 338854  6014/5768/431   17091/2343    34  434   24.44)
(smt.stats   37   4818 113727 353419  6157/5840/431   17418/2347    34  434   24.54)
ramon: poll                 wall=8.000s usage=7.933s mem=25876KiB load=1.00 rootload=1.00
(smt.stats   38   4940 116432 367213  6378/6173/432   18190/2450    35  434   24.63)
(smt.delete-inactive-clauses  :num-deleted-clauses 1641)
(smt.stats   39   5074 119841 394987  6382/6175/432   17212/2450    35  434   24.93)
(smt.stats   40   5221 124407 425068  6433/6216/432   17988/2450    35  434   24.93)
(smt.stats   41   5382 128462 458771  6592/6284/434   18549/2693    36  441   25.02)
(smt.stats   42   5559 132985 486685  6680/6386/434   20006/2697    36  441   25.22)
(smt.stats   43   5753 134983 499461  6832/6450/436   20577/2816    37  455   25.51)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4 := 3459&54534212
ramon: poll                 wall=9.000s usage=8.932s mem=26916KiB load=1.00 rootload=0.99
(smt.stats   44   5966 139482 545434  7087/6849/443   22563/3433    38  492   25.61)
(smt.stats   45   6067 141528 561048  7113/6860/443   23255/3433    38  492   25.70)
(smt.stats   46   6178 144137 595556  7219/6902/443   24048/3435    38  492   25.80)
(smt.stats   47   6300 146368 623378  7354/6984/443   24411/3437    38  492   25.90)
(smt.stats   48   6434 148433 648836  7609/7221/443   25295/3438    38  492   26.09)
ramon: poll                 wall=10.000s usage=9.932s mem=27504KiB load=1.00 rootload=1.00
(smt.stats   49   6581 151357 664431  7680/7377/443   26169/3440    38  492   26.18)
(smt.stats   50   6742 157327 715535  7809/7557/444   27050/3684    39  504   26.37)
ramon: poll                 wall=11.000s usage=10.931s mem=28092KiB load=1.00 rootload=1.00
(smt.stats   51   6919 161867 737811  7966/7571/444   27658/3686    39  504   26.73)
(smt.stats   52   7113 165818 776378  8078/7778/444   28920/3690    39  504   26.83)
(smt.stats   53   7326 174043 836888  8290/7849/444   30424/3705    39  504   27.02)
ramon: poll                 wall=12.000s usage=11.930s mem=28588KiB load=1.00 rootload=1.00
(smt.stats   54   7560 180341 872934  8438/8170/447   32312/3932    40  504   27.31)
(smt.stats   55   7661 184442 924670  8469/8223/448   33872/3932    40  504   27.41)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   56   7772 187882 974049  8482/8233/449   35702/4135    41  509   27.70)
ramon: poll                 wall=13.000s usage=12.929s mem=29212KiB load=1.00 rootload=1.00
(smt.stats   57   7894 191016 1000013  8634/8262/449   37199/4138    41  509   27.99)
(smt.stats   58   8028 193605 1019451  8688/8408/449   38232/4140    41  509   28.19)
ramon: poll                 wall=14.000s usage=13.929s mem=30044KiB load=1.00 rootload=1.00
(smt.stats   59   8175 195270 1030312  8918/8452/449   38598/4611    42  509   28.47)
(smt.stats   60   8336 197725 1055751  9087/8684/449   39014/4612    42  509   28.47)
(smt.stats   61   8513 200207 1085429  9189/8920/452   40143/4613    42  509   28.57)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8707 204347 1113753  9257/8948/452   41321/4618    42  509   28.83)
ramon: poll                 wall=15.000s usage=14.928s mem=30332KiB load=1.00 rootload=1.00
(smt.stats   63   8920 210062 1166979  9408/9049/452   42549/4838    43  521   29.02)
(smt.stats   64   9154 214609 1194985  9542/9169/452   43618/4843    43  521   29.11)
ramon: poll                 wall=16.000s usage=15.927s mem=30812KiB load=1.00 rootload=0.99
(smt.stats   65   9411 219544 1250371  9747/9337/452   45090/4845    43  521   29.50)
(smt.stats   66   9512 221050 1261488  9777/9511/452   46145/4846    43  521   29.59)
(smt.stats   67   9623 222774 1285735  9880/9628/454   46828/5067    44  521   29.69)
(smt.stats   68   9745 226223 1322636  9898/9634/454   47762/5067    44  521   29.69)
ramon: poll                 wall=17.000s usage=16.926s mem=31328KiB load=1.00 rootload=1.00
(smt.stats   69   9879 229128 1346528 10044/9659/454   48672/5075    44  521   29.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 2382)
(smt.stats   70  10026 231859 1376506 10102/9825/455   47343/5076    44  521   29.98)
(smt.stats   71  10187 237867 1427416 10153/9863/455   48327/5077    44  521   29.98)
ramon: poll                 wall=18.000s usage=17.926s mem=31652KiB load=1.00 rootload=1.00
(smt.stats   72  10364 243246 1480308 10407/9921/455   49426/5413    45  543   30.17)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   73  10558 248181 1521599 10506/10178/456   51826/5415    45  543   30.36)
ramon: poll                 wall=19.000s usage=18.925s mem=31940KiB load=1.00 rootload=1.00
(smt.stats   74  10771 255460 1578476 10695/10283/456   52891/5416    45  543   30.46)
(smt.stats   75  11005 260462 1629142 10795/10458/456   54769/5677    46  546   30.74)
ramon: poll                 wall=20.000s usage=19.924s mem=32304KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:13:42 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.990s
ramon: group.utime          19.958s
ramon: group.stime          0.032s
ramon: group.mempeak        32816KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              1.00
