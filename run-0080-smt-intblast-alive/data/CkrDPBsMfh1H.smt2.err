ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:52:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28490 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1275
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CkrDPBsMfh1H.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4120626
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101    633    257  1339/1160/114     100/8     7   20   19.17)
(smt.stats    1    202   1382   2234  1409/1268/118     198/19     9   29   19.17)
(smt.stats    2    313   2075   3970  1556/1298/121     321/36    10   30   19.36)
(smt.stats    3    414   2534   5189  1760/1616/126     447/74    12   39   19.65)
(smt.stats    4    525   3632   7309  1783/1631/130     547/86    14   43   19.65)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 4611686018427387904 := 4611686018427387902 << 60
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 4611686018427387904 := 4611686018427387902 << 60
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 4611686018427387904 := 4611686018427387902 << 60
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 1 := 1&1730
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 1 := 1&1730
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&1730
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 13835058055282165442 := 4611686018427387902 << 60
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 1 := 1&2305843009213693952
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2 := 2305843009213693951 << 61
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2 := 2305843009213693951 << 61
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693952 := 2305843009213693951 << 61
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&2305843009213693952
band: (band[62] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #700 1 #702)) (shl[62] (bv2int %0) (+ 62 #938))) 1 := 1&2305843009213693952
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 1 := 1&2305843009213693952
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693951 := 2305843009213693951 << 61
(smt.stats    5    647   4968  10075  1856/1685/136     708/94    15   44   19.65)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 2 := 4611686018427387962 << 30
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 2 := 4611686018427387962 << 30
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 2 := 4611686018427387962 << 30
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 9223372036854775810 := 4611686018427387962 << 30
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 9223372036854775808 := 4611686018427387962 << 30
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&62277025792
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 62277025793 := 2305843009213693981 << 31
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&62277025792
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 62277025793 := 2305843009213693981 << 31
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&62277025792
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693951 := 2305843009213693981 << 31
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&62277025792
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 1 := 2305843009213693981 << 31
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&62277025792
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 30 := 2305843009213693981 << 31
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   6201  11731  1898/1719/157     811/130    17   48   19.75)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&49392123903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 49392123903 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&49392123903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 49392123903 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&49392123905
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 49392123905 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3161095929856
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 0 := 2305843009213693975 << 37
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3161095929856
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 3161095929856 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3161095929856
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 0 := 2305843009213693975 << 37
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&49392123905
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 49392123905 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3161095929856
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 0 := 2305843009213693975 << 37
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&49392123905
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 49392123905 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3161095929856
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 0 := 2305843009213693975 << 37
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3161095929856
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 3161095929856 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3161095929856
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 0 := 2305843009213693975 << 37
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3161095929857
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 3161095929857 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213697491
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 2305843009213697491 := 4611686018427387950 << 36
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&40802189313
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 40802189313 := 4611686018427387942 << 40
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855488
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 41781441855488 := 4611686018427387942 << 40
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855488
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 4611686018427387903 := 2305843009213693971 << 41
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855488
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 41781441855488 := 4611686018427387942 << 40
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855488
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 4611686018427387903 := 2305843009213693971 << 41
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2611340115969
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 2611340115969 := 4611686018427387942 << 40
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855488
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 4611686018427387902 := 2305843009213693971 << 41
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2611340115969
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 2611340115969 := 4611686018427387942 << 40
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855488
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693951 := 2305843009213693971 << 41
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855486
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 41781441855486 := 4611686018427387942 << 40
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855488
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 2305843009213693971 << 41
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&41781441855488
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 2305843009213693971 << 41
(smt.stats    7    859   7278  13430  1986/1755/162     941/133    18   49   19.94)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2147483646
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 2147483646 := 4611686018427387906 << 58
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2147483646
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 2147483646 := 4611686018427387906 << 58
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387906 << 58
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387906 << 58
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387910 << 56
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387934 << 44
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 11 := 4611686018427387926 << 48
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387922 << 50
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387922 << 50
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387914 << 54
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387914 << 54
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 7 := 4611686018427387918 << 52
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387918 << 52
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 1 := 4611686018427387918 << 52
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 9 := 4611686018427387918 << 52
(smt.stats    8    981   8533  14680  2064/1843/182    1063/156    19   53   20.13)
ramon: poll                 wall=1.000s usage=0.955s mem=21364KiB load=0.95 rootload=0.94
(smt.stats    9   1115  12471  17417  2140/1967/224    1169/158    21   75   20.23)
(smt.stats   10   1216  15488  19677  2148/1971/224    1267/162    22   76   20.23)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 1 := 1&2305843009213693952
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 1&2305843009213693952
band: (band[62] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #700 1 #702)) (shl[62] (bv2int %0) (+ 62 #938))) 1 := 1&2305843009213693952
(smt.stats   11   1327  17608  21849  2172/1987/235    1370/179    23   86   20.32)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&122
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 130996502527 := 61 << 1
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&122
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 130996502527 := 61 << 1
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&122
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 123 := 61 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  20634  24268  2195/2004/241    1485/183    25   91   20.32)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1729382256910270464
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 1756397257604726785 := 3 << 59
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1729382256910270464
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 1756397257604726785 := 3 << 59
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1729382256910270464
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 1756397257604726785 := 3 << 59
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1729382256910270464
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693952 := 3 << 59
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1729382256910270464
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693952 := 3 << 59
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 6917529027641081857 := 10 << 56
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 6917529027641081857 := 10 << 56
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 11529215046068469761 := 14 << 54
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 11529215046068469761 := 14 << 54
(smt.stats   13   1583  22871  26493  2262/2046/246    1627/189    25   91   20.53)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2882303761517117441
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 7493989779944505345 := 26 << 48
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2882303761517117441
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 7493989779944505345 := 26 << 48
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&4035225266123964417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 8646911284551352321 := 30 << 46
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&4035225266123964417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 8646911284551352321 := 30 << 46
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&4035225266123964417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 13258597302978740225 := 46 << 38
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&4035225266123964417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 13258597302978740225 := 46 << 38
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&4611686018427387901
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 13835058055282163709 := 34 << 44
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 11529215046068469761 := 34 << 44
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&3458764513820540929
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 12682136550675316737 := 38 << 42
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 11529215046068469761 := 38 << 42
(smt.stats   14   1730  25133  28990  2335/2098/252    1794/199    26   93   20.81)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2882303761517117441
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 16717361816799281153 := 58 << 32
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2882303761517117441
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 16717361816799281153 := 58 << 32
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2882303761517117441
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 16717361816799281153 := 58 << 32
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 16140901064495857665 := 54 << 34
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&1729382256910270465
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 15564440312192434177 := 54 << 34
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 6917529027641081857 := 22 << 50
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 6917529027641081857 := 22 << 50
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 2 := 2&4471
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 4471 := 0 << 61
(smt.stats   15   1831  26723  31677  2438/2194/283    1936/245    28  109   21.01)
band: (band[62] (if (or #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 #491 ...) 0 (if #443 1 #948)) (shl[64] (* 2 #106) (mod #1198 64))) 2 := 2&3607
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1190 #1194) 64)) 3607 := 0 << 61
(smt.stats   16   1942  27652  35337  2590/2350/292    2081/245    28  109   21.20)
ramon: poll                 wall=2.000s usage=1.955s mem=22684KiB load=1.00 rootload=1.00
(smt.stats   17   2064  31966  39511  2671/2408/294    2224/306    30  126   21.39)
ramon: poll                 wall=3.000s usage=2.954s mem=22808KiB load=1.00 rootload=1.00
(smt.stats   18   2198  36229  43975  2836/2468/294    2359/317    30  126   21.58)
ramon: poll                 wall=4.004s usage=3.958s mem=22960KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.954s mem=23028KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.954s mem=23264KiB load=1.00 rootload=1.00
(smt.stats   19   2345  39679  47699  3000/2595/294    2540/327    30  126   22.16)
ramon: poll                 wall=7.000s usage=6.954s mem=23684KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.953s mem=23740KiB load=1.00 rootload=1.00
(smt.stats   20   2506  42690  51678  3295/2862/294    2725/340    30  126   22.45)
ramon: poll                 wall=9.000s usage=8.953s mem=24236KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.953s mem=24240KiB load=1.00 rootload=1.00
(smt.stats   21   2607  44930  55218  3556/3143/294    2859/343    30  126   22.45)
ramon: poll                 wall=11.000s usage=10.953s mem=24264KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.953s mem=24364KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.953s mem=24364KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.952s mem=24364KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.952s mem=24364KiB load=1.00 rootload=1.00
(smt.stats   22   2718  47917  58533  3740/3327/294    3016/346    30  126   22.64)
ramon: poll                 wall=16.000s usage=15.952s mem=24368KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.951s mem=24368KiB load=1.00 rootload=1.00
(smt.stats   23   2840  49748  61597  3998/3553/294    3167/351    30  126   22.73)
(smt.stats   24   2974  53426  67812  4059/3782/294    3330/352    30  126   22.73)
(smt.stats   25   3121  58902  77935  4085/3825/314    3468/410    31  151   22.73)
ramon: poll                 wall=18.000s usage=17.951s mem=24368KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.951s mem=24388KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.951s mem=24456KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:52:26 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.993s
ramon: group.stime          0.008s
ramon: group.mempeak        24716KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.050s
ramon: loadavg              1.00
