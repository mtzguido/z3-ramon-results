ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:06:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41844 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1260
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LZHN9Q9fYDBJ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2920871
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5174    379  1343/1214/103      87/11    10   19   19.26)
(smt.stats    1    202   7247   1396  2179/1986/106     189/18    12   23   19.35)
(smt.stats    2    313   9777   4573  2279/1991/106     299/27    12   23   19.65)
(smt.stats    3    414  10822   5836  2721/2476/114     400/34    13   23   19.75)
(smt.stats    4    525  11806   7962  2757/2500/116     507/40    14   30   19.75)
(smt.stats    5    647  17138  11010  2761/2514/116     629/48    15   31   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  19377  12085  2761/2514/120     737/57    16   31   19.84)
(smt.stats    7    859  22099  14618  2761/2514/121     848/57    16   31   19.96)
(smt.stats    8    981  23244  16458  2763/2516/121     967/61    17   32   19.96)
(smt.stats    9   1115  25678  18088  2806/2516/121    1112/65    17   32   20.13)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 211106232534083&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 432556670460101699 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 211106232534083&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 432556670460101699 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 211106232534085&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 288441482384245829 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 211106232534085&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 288441482384245829 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 288230376151711746 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 13194139533380&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232534085 >>l 4
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 13194139533380&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232534085 >>l 4
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 13194139533380&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 13194139533379 := 211106232534085 >>l 4
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 13194139533380&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 13194139533381 := 211106232534085 >>l 4
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
(smt.stats   10   1216  26524  19453  2880/2594/121    1227/67    17   32   20.13)
(smt.stats   11   1327  28569  21796  2916/2659/138    1389/119    19   37   20.13)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1454  30378  28200  2918/2661/138    1518/119    19   37   20.23)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 1873497444986126338 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 1873497444986126338 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 2 >>l 2
(smt.stats   13   1588  31670  30251  3040/2691/138    1650/125    19   37   20.43)
ramon: poll                 wall=1.000s usage=0.881s mem=21584KiB load=0.88 rootload=0.87
(smt.stats   14   1735  32349  31479  3212/2814/148    1817/138    20   39   20.62)
(smt.stats   15   1836  33583  35028  3356/3070/148    1927/138    20   39   20.62)
(smt.stats   16   1947  35877  41285  3386/3122/159    2053/180    22   45   20.62)
(smt.stats   17   2069  38720  44033  3410/3128/159    2190/181    22   45   20.62)
(smt.stats   18   2203  42687  47631  3414/3152/159    2314/187    23   62   20.62)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 144115188075855871&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 4179340454199820287 := 27021597764326016 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 7649&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 3891110078048116193 := 27021597764326016 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 335&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 3891110078048108879 := 27021597764326016 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 105553116266898&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 0 := 211106232533797 >>l 1
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 105553116266898&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232533797 >>l 1
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 105553116266898&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 13194139533361 := 211106232533797 >>l 1
(smt.stats   19   2350  46594  52784  3445/3159/159    2471/187    23   62   20.71)
(smt.stats   20   2511  49644  59649  3473/3207/169    2631/192    24   64   20.95)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 192 := 13194139533311&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 13194139533311 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 192 := 13194139533311&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 13194139533311 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 192 := 13194139533311&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 13194139533311 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 192 := 13194139533311&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 13194139533311 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 13194139533312 := 211106232532996 >>l 55
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 191 := 211106232532996 >>l 55
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232532996 >>l 55
(smt.stats   21   2612  50555  62748  3495/3209/169    2732/195    25   64   20.95)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&96
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764223616 >>l 63
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&96
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232532997 >>l 56
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 427&96
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 427&96
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 427&96
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 384&96
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 3891110078048108928 := 27021597764223616 >>l 63
ramon: poll                 wall=2.000s usage=1.881s mem=22088KiB load=1.00 rootload=1.00
(smt.stats   22   2723  53645  65905  3541/3269/195    2844/200    26   66   20.95)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6773413839565225986 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6773413839565225986 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6773413839565225986 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1537 := 211106232532993 >>l 52
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1535 := 211106232532993 >>l 52
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232532993 >>l 52
(smt.stats   23   2845  55775  69609  3583/3290/197    2965/204    27   73   20.95)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 718&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 718&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 717&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 383 := 717&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 717&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 718&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 718&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 511&384
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 4467570830351532543 := 27021597764223360 >>l 61
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 511&384
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 4467570830351532543 := 27021597764223360 >>l 61
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 255 := 589&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 254 := 588&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 254 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 252 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 248 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 240 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 224 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 224 := 558&384
(smt.stats   24   2979  57269  72763  3668/3388/245    3118/217    28   75   21.34)
(smt.stats   25   3126  61220  77683  3754/3404/245    3291/221    28   75   21.34)
(smt.stats   26   3287  62647  79547  4110/3547/245    3472/242    29   87   21.72)
ramon: poll                 wall=3.000s usage=2.881s mem=23020KiB load=1.00 rootload=0.99
(smt.stats   27   3464  64719  83792  4362/4088/249    3712/246    29   87   21.72)
(smt.stats   28   3565  67277  86899  4370/4096/249    3829/246    29   87   21.72)
(smt.stats   29   3676  69418  95569  4403/4129/250    3944/300    30  103   21.72)
(smt.stats   30   3798  71019  98049  4584/4130/250    4109/312    31  104   21.72)
ramon: poll                 wall=4.000s usage=3.881s mem=23052KiB load=1.00 rootload=1.00
(smt.stats   31   3932  72753 102043  4648/4374/251    4247/312    31  104   21.81)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4079  77025 107114  4690/4383/252    4423/347    32  104   21.81)
(smt.stats   33   4240  83469 118314  4704/4424/252    4592/347    32  104   21.91)
(smt.stats   34   4417  87062 127095  4708/4434/252    4772/347    32  104   21.91)
(smt.stats   35   4611  89847 133584  4711/4437/252    4994/347    32  104   22.01)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 352&402653184
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 352 := 27021597764352128 >>l 41
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 352&402653184
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 352 := 27021597764352128 >>l 41
(smt.stats   36   4712  91758 136983  4752/4438/252    5199/348    32  104   22.01)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&402653184
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352128 >>l 41
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&402653184
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352128 >>l 41
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&25165824
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856225 := 27021597764352640 >>l 45
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 352&25165824
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856224 := 27021597764352640 >>l 45
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 335&25165824
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856207 := 27021597764352640 >>l 45
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 335&100663296
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856207 := 27021597764352384 >>l 43
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&100663296
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075855872 := 27021597764352384 >>l 43
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&100663296
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075855872 := 27021597764352384 >>l 43
(smt.stats   37   4823  93972 141696  4804/4495/262    5314/424    33  106   22.11)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 335&50331648
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856207 := 27021597764352512 >>l 44
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 255&50331648
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856127 := 27021597764352512 >>l 44
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&50331648
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075855872 := 27021597764352512 >>l 44
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1024 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1024 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1152 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1024 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1024 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 732 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 728 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 720 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 704 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 640 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 512 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 512 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 732 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 704 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 512 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 512 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 14847805021488317 := 211106232534004 >>l 37
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 14847805021488316 := 211106232534004 >>l 37
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 927987813842985 := 211106232534004 >>l 37
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 4 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 8 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1534 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1534 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1532 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 8 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 16 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 32 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 64 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 256 := 1536&50331648
(smt.stats   38   4945  96662 146381  4958/4652/374    5484/430    33  106   22.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5079  99896 151044  5033/4720/377    5650/484    34  131   22.80)
ramon: poll                 wall=5.000s usage=4.881s mem=24100KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.880s mem=24396KiB load=1.00 rootload=1.00
(smt.stats   40   5226 102694 152982  5177/4789/378    5840/492    34  131   22.99)
ramon: poll                 wall=7.000s usage=6.880s mem=24900KiB load=1.00 rootload=1.00
(smt.stats   41   5387 105360 155250  5453/5068/379    6047/504    34  131   23.28)
(smt.stats   42   5564 110237 162501  5515/5213/383    6267/540    35  136   23.38)
(smt.stats   43   5758 116959 175241  5625/5296/385    6533/568    36  146   23.38)
(smt.stats   44   5971 124082 188301  5759/5465/388    6859/605    37  151   23.47)
(smt.stats   45   6072 126083 194069  5763/5469/388    6983/634    38  163   23.57)
ramon: poll                 wall=8.000s usage=7.880s mem=25104KiB load=1.00 rootload=1.00
(smt.stats   46   6183 130792 205641  5770/5474/389    7139/634    38  163   23.75)
(smt.stats   47   6305 133807 213904  5791/5492/390    7264/688    39  163   23.75)
(smt.stats   48   6439 137562 220660  5811/5513/393    7436/715    40  168   23.84)
(smt.stats   49   6586 143394 228560  5818/5520/394    7641/715    40  168   23.84)
(smt.stats   50   6747 149988 244330  5858/5527/394    7932/719    40  168   23.84)
(smt.stats   51   6924 153282 250919  6028/5594/396    8209/757    41  177   23.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7118 160494 259150  6075/5739/398    8472/759    41  177   24.03)
ramon: poll                 wall=9.000s usage=8.880s mem=25384KiB load=1.00 rootload=1.00
(smt.stats   53   7331 168255 287321  6380/5854/398    8927/769    41  177   24.13)
(smt.stats   54   7565 172941 307943  6496/6198/401    9482/1022    43  200   24.22)
ramon: poll                 wall=10.000s usage=9.880s mem=25624KiB load=1.00 rootload=1.00
(smt.stats   55   7666 174926 311220  6521/6199/401    9642/1022    43  200   24.22)
(smt.stats   56   7777 177434 318868  6574/6236/401    9803/1022    43  200   24.22)
(smt.stats   57   7899 179663 324737  6658/6277/401    9968/1025    43  200   24.32)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8033 183187 337432  6731/6389/401   10175/1032    43  200   24.32)
(smt.stats   59   8180 188787 359742  6771/6441/403   10466/1102    44  216   24.41)
ramon: poll                 wall=11.000s usage=10.880s mem=25840KiB load=1.00 rootload=1.00
(smt.stats   60   8341 192047 372082  6803/6500/403   10661/1102    44  216   24.41)
(smt.stats   61   8518 196085 383326  6842/6512/403   10974/1109    44  216   24.51)
(smt.stats   62   8712 199258 395650  7044/6561/403   11254/1113    44  216   24.61)
ramon: poll                 wall=12.000s usage=11.879s mem=26020KiB load=1.00 rootload=1.00
(smt.stats   63   8925 204098 420226  7172/6866/405   11554/1234    46  221   24.61)
(smt.stats   64   9159 208644 438770  7235/6890/405   11925/1235    46  221   24.70)
(smt.stats   65   9416 214056 454245  7307/6960/405   12235/1235    46  221   24.89)
(smt.stats   66   9517 215722 461511  7323/6999/406   12429/1246    47  223   24.89)
(smt.stats   67   9628 219434 472571  7329/7000/406   12636/1246    47  223   24.89)
ramon: poll                 wall=13.000s usage=12.879s mem=26352KiB load=1.00 rootload=1.00
(smt.stats   68   9750 223273 484030  7508/7012/406   12927/1250    47  223   24.99)
(smt.stats   69   9884 227124 500501  7763/7194/406   13181/1252    47  223   25.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 975)
(smt.stats   70  10031 229405 512556  7814/7488/409   12708/1304    48  224   25.27)
(smt.stats   71  10192 233266 523714  7815/7488/409   13052/1304    48  224   25.27)
(smt.stats   72  10369 237472 543668  7830/7500/409   13380/1304    48  224   25.27)
(smt.stats   73  10563 240372 551496  7864/7506/409   13711/1459    49  246   25.27)
ramon: poll                 wall=14.000s usage=13.879s mem=26728KiB load=1.00 rootload=1.00
(smt.stats   74  10776 246790 572601  7914/7551/410   14139/1459    49  246   25.37)
(smt.stats   75  11010 251730 592569  7989/7597/411   14549/1558    50  251   25.37)
(smt.stats   76  11267 256822 615127  8000/7670/412   14828/1558    50  251   25.46)
(smt.stats   77  11549 263725 659296  8007/7677/413   15294/1612    51  255   25.56)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   78  11650 266714 683740  8019/7689/413   15437/1640    52  257   25.56)
ramon: poll                 wall=15.000s usage=14.879s mem=27012KiB load=1.00 rootload=1.00
(smt.stats   79  11761 271542 705007  8041/7703/413   15636/1640    52  257   25.56)
(smt.stats   80  11883 274870 720204  8048/7714/413   15888/1640    52  257   25.56)
(smt.stats   81  12017 276407 733315  8050/7716/413   16214/1640    52  257   25.66)
(smt.stats   82  12164 281713 748246  8073/7723/414   16424/1760    53  268   25.75)
(smt.stats   83  12325 285224 759289  8163/7750/414   16720/1760    53  268   25.75)
(smt.stats   84  12502 288819 775666  8333/7888/414   17145/1761    53  268   25.85)
(smt.stats   85  12696 295099 803575  8338/8004/414   17659/1761    53  268   25.85)
ramon: poll                 wall=16.002s usage=15.881s mem=27420KiB load=1.00 rootload=1.00
(smt.stats   86  12909 306496 835821  8347/8011/414   18140/1761    53  268   25.95)
(smt.stats   87  13143 311024 852537  8451/8022/414   18642/1765    53  268   26.14)
(smt.stats   88  13400 317176 879636  8504/8159/414   19098/1765    53  268   26.56)
ramon: poll                 wall=17.000s usage=16.878s mem=28132KiB load=1.00 rootload=1.00
(smt.stats   89  13682 319774 889761  8546/8170/414   19562/1767    53  268   26.75)
ramon: poll                 wall=18.000s usage=17.878s mem=28476KiB load=1.00 rootload=1.00
(smt.stats   90  13992 327089 917827  8755/8238/414   20064/1768    53  268   26.94)
(smt.stats   91  14093 330282 927197  8800/8425/414   20270/1769    53  268   26.94)
(smt.stats   92  14204 334689 949071  8857/8484/414   20430/1769    53  268   27.13)
ramon: poll                 wall=19.000s usage=18.878s mem=28692KiB load=1.00 rootload=1.00
(smt.stats   93  14326 340340 988237  8933/8531/414   20771/1769    53  268   27.04)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   94  14460 344559 1010573  8977/8608/414   21274/1769    53  268   27.04)
(smt.stats   95  14607 349323 1040808  9007/8664/414   21658/1769    53  268   27.13)
(smt.stats   96  14768 357558 1080561  9014/8672/414   21911/1769    53  268   27.13)
(smt.stats   97  14945 364836 1124356  9021/8682/414   22170/1769    53  268   27.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   98  15139 371816 1135638  9022/8683/414   22551/1769    53  268   27.23)
ramon: poll                 wall=20.000s usage=19.875s mem=29108KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:06:34 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.963s
ramon: group.utime          19.947s
ramon: group.stime          0.016s
ramon: group.mempeak        31280KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.088s
ramon: loadavg              0.99
