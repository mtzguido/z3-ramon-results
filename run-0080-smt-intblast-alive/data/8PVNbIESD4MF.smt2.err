ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:41:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29523 MiB
ramon: sys.mem.avail        61765 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/8PVNbIESD4MF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4084581
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4161    208  1250/1083/96     101/13     4   14   19.17)
(smt.stats    1    202   5680    685  2139/1888/98     198/24     6   17   19.36)
(smt.stats    2    313   7087   1702  2380/2161/103     311/28     8   31   19.36)
(smt.stats    3    414   8071   2767  2412/2190/105     400/34     9   42   19.36)
(smt.stats    4    525  10256   4335  2559/2325/111     496/38    10   43   19.46)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 1 := 1738 << 48
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 1 := 1738 << 48
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 1 := 1738 << 48
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 0 := 1738 << 48
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 562949953421304 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 562949953421303 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 562949953421302 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 562949953421300 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 562949953421296 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 32 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 64 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 128 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 256 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 512 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4096 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 8192 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 16384 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 7 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 7 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 6 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1 := 869 << 49
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1 := 869 << 49
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1 := 869 << 49
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1 := 869 << 49
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 868 := 869 << 49
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1 := 869 << 49
(smt.stats    5    647  13201   7890  2644/2388/177     660/51    13   66   19.99)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 7 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 6 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 4 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 32 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 64 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 562949953421184 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 562949953421056 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 562949953420800 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 562949953420288 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2048 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 4096 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8192 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16384 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 32768 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 65536 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 131072 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 262144 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 524288 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1048576 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2097152 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 4194304 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8388608 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16777216 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 33554432 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 67108864 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 134217728 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 268435456 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 536870912 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 536870912 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1073741824 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2147483648 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 4294967296 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8589934592 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 17179869184 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 34359738368 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 68719476736 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 137438953472 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 274877906944 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 549755813888 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1099511627776 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2199023255552 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 4398046511104 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8796093022208 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 17592186044416 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 35184372088832 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 70368744177664 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 140737488355328 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 140737488355328 := 562949953421304&562949953421312
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 281474976710656 := 562949953421304&562949953421312
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  15305  11431  2766/2523/328     756/57    15   98   21.15)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 562949953421304&562949953421312
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1048576 := 562949953421304&562949953421312
(smt.stats    7    859  21259  17459  2798/2553/334     915/57    15   98   21.26)
(smt.stats    8    981  27646  22263  2823/2575/334    1064/88    16  100   21.26)
(smt.stats    9   1115  32953  27413  2827/2581/335    1204/124    17  104   21.37)
(smt.stats   10   1216  37973  33191  2834/2584/336    1314/125    18  106   21.37)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&2251799813685247
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&2251799813685246
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&2251799813685231
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1 := 1125899906842609&2251799545249775
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&2251799545249775
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&15
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 5 := 1125899906842609&15
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1 := 1125899906842609&15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 490892359383384079 := 1736 << 49
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 5 := 1125899906842609&2251799813685232
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&2251799813685232
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&2251799813685230
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 493144159197069326 := 1736 << 49
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 2251799813685247 := 868 << 50
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1125899906842609&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 2251799813685247 := 868 << 50
(smt.stats   11   1327  41377  38877  2872/2624/382    1414/148    20  128   21.67)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685218&1125899906842624
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685218&1125899906842624
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685218&1125899906842624
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685218&1125899906842624
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4 := 2251799813685218&1125899906842624
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685218&1125899906842624
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1125899906842624 := 2251799813685218&1125899906842626
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1125899906842624 := 2251799813685218&1125899906842656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1125899906842624 := 2251799813685218&1125899906842628
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 976155219232555012 := 1734 << 50
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1125899906842624 := 2251799813685218&1125899906842626
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1125899906842626 := 2251799813685218&1125899906842627
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 976155219232555011 := 1734 << 50
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1125899906842626 := 2251799813685218&1125899906842627
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 976155219232555011 := 1734 << 50
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  44530  43638  2965/2710/412    1552/163    22  153   22.25)
(smt.stats   13   1583  48636  48277  3005/2744/418    1678/186    23  171   22.37)
(smt.stats   14   1730  56468  57678  3005/2744/418    1826/186    23  171   22.37)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 8 := 274877906943&32
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 8 := 274877906943&32
(smt.stats   15   1831  57913  59180  3016/2749/419    1932/230    24  171   22.47)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 8 := 274877906943&1984
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 5 := 274877906943&2496
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4 := 274877906943&2496
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&2496
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&2496
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&2560
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&2560
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&3072
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&3072
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&4096
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&4096
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&8192
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&16384
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&16384
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&32768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&16384
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&32768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&65536
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&16384
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&32768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&65536
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&131072
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&262144
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&32768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&65536
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&131072
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&262144
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&524288
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&131072
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&262144
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&524288
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&1048576
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&262144
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&524288
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&1048576
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 274877906943&2097152
(smt.stats   16   1942  60679  65107  3451/3187/562    2581/275    25  197   22.78)
(smt.stats   17   2064  68027  73575  3460/3196/563    2762/275    25  197   23.01)
ramon: poll                 wall=1.000s usage=0.920s mem=24244KiB load=0.92 rootload=0.90
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 12288 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 12288 := 536870911&462848
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 20480 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 16384 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 32768 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 65536 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 131072 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 196608 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 262144 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 327680 := 536870911&458752
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 458752 := 536870911&458752
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 2001850034366644224 := 1778 << 28
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 327680 := 536870911&327680
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 2001850034366513152 := 1778 << 28
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 327680 := 536870911&327680
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 2001850034366513152 := 1778 << 28
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 32768 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 17 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 16 := 536870911&477278240768
(smt.stats   18   2198  73439  81504  3603/3307/584    2995/377    26  216   23.11)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 562949955518464 := 889 << 29
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 562949955518464 := 889 << 29
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 562949955518463 := 889 << 29
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 562949953421313 := 889 << 29
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 268435456 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 268435456 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 268435456 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 261117 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 261116 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 261112 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2048 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 4096 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8192 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16384 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 32768 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 65536 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 131072 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8192 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16384 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 32768 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 65536 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8192 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8192 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8192 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2048 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 32 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 64 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 128 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 256 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 512 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 64 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 513 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 784 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 768 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 544 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 544 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 512 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 512 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2048 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16384 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 262144 := 536870911&477278240768
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 262144 := 536870911&477278240768
(smt.stats   19   2345  77289  86864  3867/3549/748    3342/459    27  221   23.68)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 536870911&477278240768
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1048704 := 536870911&477278240768
(smt.stats   20   2506  83085  99296  4080/3789/761    3990/530    28  262   23.88)
(smt.stats   21   2607  88857 110027  4257/3789/761    4244/783    29  282   24.07)
(smt.stats   22   2718  93547 117378  4611/4037/761    4582/784    29  282   24.26)
(smt.stats   23   2840  96156 121987  4733/4327/761    4810/788    29  282   24.45)
(smt.stats   24   2974 100243 137918  4992/4589/761    5331/792    29  282   24.64)
ramon: poll                 wall=2.003s usage=1.923s mem=26120KiB load=1.00 rootload=1.00
(smt.stats   25   3121 107995 155580  5204/4709/761    6292/801    29  282   25.02)
ramon: poll                 wall=3.000s usage=2.920s mem=26628KiB load=1.00 rootload=0.99
(smt.stats   26   3282 114794 166796  5438/4922/761    6723/806    29  282   25.02)
ramon: poll                 wall=4.000s usage=3.919s mem=26652KiB load=1.00 rootload=1.00
(smt.stats   27   3459 119847 176465  5894/5224/761    7170/815    29  282   25.40)
ramon: poll                 wall=5.000s usage=4.919s mem=27372KiB load=1.00 rootload=1.00
(smt.stats   28   3560 124611 190130  6066/5675/761    7947/820    29  282   25.49)
(smt.stats   29   3671 127810 199747  6337/5828/761    8161/824    29  282   25.59)
ramon: poll                 wall=6.000s usage=5.919s mem=27384KiB load=1.00 rootload=1.00
(smt.stats   30   3793 131288 207096  6643/6144/761    8442/829    29  282   25.68)
(smt.stats   31   3927 137028 220217  7028/6457/761    8996/830    29  282   25.90)
ramon: poll                 wall=7.000s usage=6.919s mem=27576KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074 145254 242336  7132/6756/762    9825/2175    30  287   26.10)
ramon: poll                 wall=8.000s usage=7.919s mem=27740KiB load=1.00 rootload=1.00
(smt.stats   33   4235 151166 256160  7603/6863/762   10347/2183    30  287   26.29)
ramon: poll                 wall=9.000s usage=8.919s mem=27968KiB load=1.00 rootload=1.00
(smt.stats   34   4412 154994 263888  8062/7368/762   10661/2189    30  287   26.50)
(smt.stats   35   4606 164761 300040  8172/7815/764   11703/2481    31  289   26.60)
(smt.stats   36   4707 170960 344039  8369/8001/767   12438/2969    32  293   26.79)
(smt.stats   37   4818 178259 391664  8429/8107/771   13213/3641    34  321   27.02)
ramon: poll                 wall=10.000s usage=9.918s mem=28484KiB load=1.00 rootload=1.00
(smt.stats   38   4940 186768 435651  8450/8129/780   13935/3758    35  367   27.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 77)
(smt.stats   39   5074 196942 468758  8517/8154/781   14645/3760    35  367   27.22)
ramon: poll                 wall=11.000s usage=10.918s mem=28868KiB load=1.00 rootload=1.00
(smt.stats   40   5221 207405 499903  8844/8220/781   15157/4386    36  373   27.41)
ramon: poll                 wall=12.000s usage=11.918s mem=29076KiB load=1.00 rootload=1.00
(smt.stats   41   5382 218723 527330  9169/8580/782   15848/4481    37  373   27.60)
ramon: poll                 wall=13.000s usage=12.918s mem=29316KiB load=1.00 rootload=1.00
(smt.stats   42   5559 225736 550703  9351/8951/782   16934/4482    37  373   27.79)
(smt.stats   43   5753 237740 588861  9437/9116/787   17689/4859    39  421   27.79)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 327890 := 281474976710652&2251799813685233
(smt.stats   44   5966 249807 633804  9720/9399/801   18878/4970    40  425   28.09)
ramon: poll                 wall=14.000s usage=13.918s mem=29680KiB load=1.00 rootload=1.00
(smt.stats   45   6067 254112 649137  9793/9410/801   19499/4974    40  425   28.28)
(smt.stats   46   6178 260628 673574  9829/9508/802   19804/5680    41  439   28.19)
ramon: poll                 wall=15.000s usage=14.917s mem=30032KiB load=1.00 rootload=1.00
(smt.stats   47   6300 268398 726220 10073/9515/802   20384/5714    42  443   28.37)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   48   6434 274903 783359 10377/10058/811   21296/5909    44  462   28.56)
ramon: poll                 wall=16.000s usage=15.917s mem=30524KiB load=1.00 rootload=1.00
(smt.stats   49   6581 282581 812504 10502/10094/813   22502/5918    44  462   28.76)
ramon: poll                 wall=17.000s usage=16.917s mem=30636KiB load=1.00 rootload=1.00
(smt.stats   50   6742 290330 847389 10756/10214/813   23182/6125    45  487   28.95)
(smt.stats   51   6919 300237 905146 11007/10688/816   24375/6290    46  496   29.04)
ramon: poll                 wall=18.000s usage=17.917s mem=30740KiB load=1.00 rootload=1.00
(smt.stats   52   7113 311120 936240 11124/10696/816   24922/6299    46  496   29.23)
ramon: poll                 wall=19.000s usage=18.917s mem=30980KiB load=1.00 rootload=0.99
(smt.stats   53   7326 324124 1011895 11407/10855/816   25709/6306    46  496   29.33)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   54   7560 335734 1079223 11670/11215/817   26280/6528    47  499   29.42)
ramon: poll                 wall=20.000s usage=19.916s mem=31144KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:41:54 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.001s
ramon: group.utime          19.973s
ramon: group.stime          0.028s
ramon: group.mempeak        31656KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              1.00
