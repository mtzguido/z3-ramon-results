ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:30:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41312 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YEhVFMR6xLI6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3000893
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   1257     79  1101/981/105     102/23     3   16   19.24)
(smt.stats    1    202   5451   1143  1448/1302/109     228/49     5   23   19.34)
(smt.stats    2    313   8171   2844  1920/1734/112     339/59     6   24   19.53)
ramon: poll                 wall=1.000s usage=0.997s mem=20692KiB load=1.00 rootload=0.99
(smt.stats    3    414   8753   3586  2115/1819/112     444/65     7   24   19.62)
(smt.stats    4    525  11734   5421  2325/2126/121     548/78     9   37   19.72)
(smt.stats    5    647  15794   7878  2476/2194/122     701/92    10   38   19.81)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19645  10622  2561/2381/123     827/126    11   38   19.81)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813882&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813882&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813882&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813882 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813882 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813882 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 18446744073709551610 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 2199023255546 := 549755813882 << 2
(smt.stats    7    859  25690  13222  2791/2581/123     941/128    11   38   20.00)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813864&2
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755813542 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 1 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813864&2
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755813541 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813864&2
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 2 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813864&2
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 1 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 1 := 549755813864&2
(smt.stats    8    981  29476  16373  2859/2619/138    1069/130    12   41   20.20)
(smt.stats    9   1115  36767  20243  2867/2665/174    1210/130    13   48   20.29)
(smt.stats   10   1216  41630  23630  2913/2684/174    1327/137    14   49   20.29)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813434&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813434 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 4 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 4 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813760&64
(smt.stats   11   1327  46757  29409  2969/2739/196    1449/152    16   53   20.49)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 5 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 5 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 12 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 12 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 64 := 549755813760&64
(smt.stats   12   1449  49760  34974  3033/2810/249    1621/161    16   53   20.69)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 64 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 60 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 64 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 2 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 49 := 549755813760&64
(smt.stats   13   1583  52246  39760  3344/3096/302    1799/259    18   78   20.98)
(smt.stats   14   1730  59429  47998  3368/3123/303    1968/274    19   90   20.98)
(smt.stats   15   1831  68073  56711  3373/3126/303    2074/275    19   90   21.14)
ramon: poll                 wall=2.000s usage=1.997s mem=22276KiB load=1.00 rootload=0.99
(smt.stats   16   1942  70857  62526  3395/3138/304    2283/287    20   90   21.14)
(smt.stats   17   2064  73221  69607  3479/3212/306    2531/308    21   92   21.24)
(smt.stats   18   2198  75977  84491  3577/3240/306    2732/335    22   96   21.43)
(smt.stats   19   2345  80353  94722  3703/3334/307    3068/344    23   96   21.52)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   20   2506  84543 106444  3785/3519/323    3472/369    24  117   21.62)
(smt.stats   21   2607  88319 114454  3838/3573/325    3661/454    25  149   21.71)
(smt.stats   22   2718  92554 124396  3908/3591/325    3969/486    26  151   21.71)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813887&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 18446744073709551615 := 3 << 3
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813887&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 18446744073709551615 := 3 << 3
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813887&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 18446744073709551615 := 3 << 3
(smt.stats   23   2840  96502 133089  3966/3700/336    4137/552    28  154   21.82)
(smt.stats   24   2974 100981 144880  3979/3712/336    4397/552    28  154   21.82)
ramon: poll                 wall=3.000s usage=2.996s mem=23112KiB load=1.00 rootload=0.99
(smt.stats   25   3121 107678 157373  4005/3730/337    4616/579    29  157   21.92)
(smt.stats   26   3282 116834 179554  4015/3744/337    4955/579    29  157   21.92)
(smt.stats   27   3459 123162 197934  4032/3750/338    5339/651    30  160   22.14)
(smt.stats   28   3560 126358 205007  4034/3763/338    5471/651    30  160   22.14)
(smt.stats   29   3671 129663 218263  4038/3767/338    5628/651    30  160   22.14)
(smt.stats   30   3793 135339 230666  4050/3770/338    5768/651    30  160   22.14)
(smt.stats   31   3927 140318 243887  4053/3781/338    5960/651    30  160   22.14)
(smt.stats   32   4074 143882 251440  4072/3796/341    6283/733    31  171   22.24)
(smt.stats   33   4235 149653 269796  4098/3823/342    6532/800    32  185   22.24)
ramon: poll                 wall=4.000s usage=3.996s mem=23564KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.995s mem=23564KiB load=1.00 rootload=1.00
(smt.stats   34   4412 154521 294860  4161/3889/345    6805/818    33  204   22.43)
(smt.stats   35   4606 161445 315640  4167/3895/346    7595/818    33  204   22.63)
(smt.stats   36   4707 165893 329004  4168/3896/346    7727/854    34  208   22.63)
(smt.stats   37   4818 170135 342748  4186/3900/346    7952/854    34  208   22.82)
(smt.stats   38   4940 173237 352426  4203/3921/346    8164/854    34  208   22.73)
(smt.delete-inactive-clauses  :num-deleted-clauses 795)
(smt.stats   39   5074 175967 359939  4231/3937/346    7630/858    34  208   22.82)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5221 181976 376647  4259/3963/346    7817/861    34  208   22.82)
ramon: poll                 wall=6.000s usage=5.995s mem=24160KiB load=1.00 rootload=1.00
(smt.stats   41   5382 188434 393222  4264/3992/346    8078/861    34  208   22.82)
(smt.stats   42   5559 193039 411994  4278/4004/346    8450/861    34  208   23.01)
(smt.stats   43   5753 198496 425474  4291/4006/346    8685/861    34  208   23.01)
(smt.stats   44   5966 203854 443905  4420/4059/347    9255/950    35  208   23.11)
(smt.stats   45   6067 206308 450994  4461/4148/347    9422/950    35  208   23.11)
(smt.stats   46   6178 209341 462194  4500/4191/347    9618/950    35  208   23.11)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 390&8
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 390&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755814278 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 390&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755814278 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 390&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755814278 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 390&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 390 := 1564 << 4
(smt.stats   47   6300 212169 475077  4608/4228/347    9893/952    35  208   23.20)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 25024&8
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755808516 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 25024&8
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755808516 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 25024&8
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 8 := 25024&8
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 25024&8
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 25024&8
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 214973 486586  4673/4336/352   10121/1067    36  209   23.20)
(smt.stats   49   6581 219062 501837  4695/4410/357   10529/1067    36  209   23.20)
(smt.stats   50   6742 223079 521006  4755/4419/357   10781/1091    37  210   23.30)
ramon: poll                 wall=7.000s usage=6.995s mem=24816KiB load=1.00 rootload=1.00
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 12504&4
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 201348 := 1563 << 3
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 12504&4
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 201348 := 1563 << 3
(smt.stats   51   6919 226477 534536  4981/4484/357   11382/1098    37  210   23.59)
(smt.stats   52   7113 230114 548346  4991/4698/366   11984/1168    38  211   23.69)
(smt.stats   53   7326 236988 575579  5003/4714/367   12346/1354    39  229   23.79)
(smt.stats   54   7560 241933 592531  5049/4722/368   12935/1356    39  229   23.88)
(smt.stats   55   7661 245827 612537  5073/4765/368   13167/1356    39  229   23.98)
(smt.stats   56   7772 248533 625261  5199/4798/368   13486/1450    40  238   23.98)
(smt.stats   57   7894 251518 636002  5360/4922/368   13904/1453    40  238   24.09)
ramon: poll                 wall=8.002s usage=7.980s mem=25480KiB load=0.98 rootload=0.98
(smt.stats   58   8028 254140 643886  5423/5132/370   14302/1454    40  238   24.18)
(smt.stats   59   8175 258778 670123  5440/5139/370   14728/1507    41  246   24.18)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813885&16
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813885&16
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813885&16
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813885&16
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813885&16
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813885 := 549755813885 << 5
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813885&16
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813885 := 549755813885 << 5
(smt.stats   60   8336 262039 690039  5630/5331/382   15098/1554    42  249   24.38)
(smt.stats   61   8513 265821 710881  5779/5483/383   15857/1555    42  249   24.47)
(smt.stats   62   8707 271238 722403  5961/5488/383   16747/1560    42  249   24.60)
ramon: poll                 wall=9.000s usage=8.976s mem=26036KiB load=1.00 rootload=0.99
(smt.stats   63   8920 281675 785978  6138/5757/384   17447/1662    43  258   25.11)
(smt.stats   64   9154 287874 814953  6195/5852/385   18475/1778    44  262   25.30)
ramon: poll                 wall=10.000s usage=9.976s mem=26820KiB load=1.00 rootload=1.00
(smt.stats   65   9411 294202 838347  6395/6022/386   19468/1783    44  262   25.49)
(smt.stats   66   9512 296716 848638  6409/6102/386   19870/1984    45  262   25.59)
(smt.stats   67   9623 299499 857535  6433/6122/386   20133/1987    45  262   25.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   68   9745 302951 870244  6520/6157/386   20755/1992    45  262   25.69)
ramon: poll                 wall=11.000s usage=10.976s mem=27136KiB load=1.00 rootload=1.00
(smt.stats   69   9879 306811 880427  6747/6229/386   21188/2010    45  262   25.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 310283 900692  6809/6481/386   21963/2015    45  262   25.97)
ramon: poll                 wall=12.000s usage=11.975s mem=27448KiB load=1.00 rootload=1.00
(smt.stats   71  10187 315127 930406  6880/6549/388   22511/2150    46  267   26.07)
(smt.stats   72  10364 320740 959847  7066/6594/388   23452/2156    46  267   26.26)
ramon: poll                 wall=13.002s usage=12.977s mem=27696KiB load=1.00 rootload=1.00
(smt.stats   73  10558 325694 984726  7214/6789/388   24285/2214    47  269   26.26)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10771 330577 1015698  7332/6940/388   25340/2215    47  269   26.45)
ramon: poll                 wall=14.000s usage=13.974s mem=27968KiB load=1.00 rootload=1.00
(smt.stats   75  11005 335861 1046104  7409/7043/389   26482/2216    47  269   26.54)
ramon: poll                 wall=15.000s usage=14.974s mem=28792KiB load=1.00 rootload=1.00
(smt.stats   76  11262 343483 1085006  7653/7127/389   27752/2359    48  284   27.22)
(smt.stats   77  11544 351137 1109947  7694/7380/389   28903/2359    48  284   27.41)
(smt.stats   78  11645 354643 1141501  7700/7399/389   29481/2360    48  284   27.50)
ramon: poll                 wall=16.000s usage=15.973s mem=28960KiB load=1.00 rootload=1.00
(smt.stats   79  11756 357596 1162527  7790/7411/389   30011/2364    48  284   27.60)
ramon: poll                 wall=17.000s usage=16.973s mem=29340KiB load=1.00 rootload=1.00
(smt.stats   80  11878 359593 1173931  8019/7515/389   30577/2369    48  284   27.79)
ramon: poll                 wall=18.000s usage=17.973s mem=29360KiB load=1.00 rootload=1.00
(smt.stats   81  12012 362252 1197419  8146/7792/389   31248/2369    48  284   27.88)
(smt.stats   82  12159 369954 1229077  8200/7873/391   31670/2618    49  288   27.88)
(smt.stats   83  12320 376605 1265606  8310/7917/391   32065/2620    49  288   27.98)
ramon: poll                 wall=19.000s usage=18.972s mem=29544KiB load=1.00 rootload=1.00
(smt.stats   84  12497 381952 1296936  8466/8164/392   32952/2671    50  288   28.07)
ramon: poll                 wall=20.000s usage=19.972s mem=29740KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:30:30 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.984s
ramon: group.utime          19.956s
ramon: group.stime          0.028s
ramon: group.mempeak        30000KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
