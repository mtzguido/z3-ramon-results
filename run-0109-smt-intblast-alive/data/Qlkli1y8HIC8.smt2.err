ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:16:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41542 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Qlkli1y8HIC8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2956269
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   6992   1684  1227/1101/99      95/6     5   14   19.24)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 4503599627370493&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 4503599627370493&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 4503599627370492&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 4503599627370492 := 4503599627370494 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 2&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 2&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 2&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 1&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 1&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 1 := 4503599627370494 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 1&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 1&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 1 := 4503599627370494 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 1&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 1 := 2 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 1&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 1 := 2 << 3
(smt.stats    1    202   8481   2607  2351/2122/116     194/12     7   19   19.46)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 1&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 1 := 2 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 1&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 1 := 2 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 2 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 2 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 2 := 4503599627370488&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 2 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 2 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
shl: (shl[52] (bv2int %0) (mod (bv2int %1) 52)) 3 := 1 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 3 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 2 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
shl: (shl[52] (bv2int %0) (mod (bv2int %1) 52)) 2 := 1 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 3 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 2 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 3 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 2 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 4503599627370488&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 2 := 4503599627370488&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 2 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 8&3
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 1 := 8&3
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 8&3
(smt.stats    2    313  10695   4169  2436/2214/168     297/22    11   36   19.66)
(smt.stats    3    414  12599   6648  2710/2459/179     381/46    13   45   19.81)
(smt.stats    4    525  16323   8237  2728/2464/179     498/46    13   45   19.92)
(smt.stats    5    647  18161  11555  2742/2491/179     622/46    13   45   19.92)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  19566  13685  2790/2516/179     745/48    13   45   19.92)
(smt.stats    7    859  21030  16779  2851/2582/180     876/80    14   47   20.05)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 0 := 562949953421313 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 0 := 562949953421313 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 13510798882111488 := 3377699720527871 << 2
(smt.stats    8    981  22480  21053  2876/2605/191     999/137    16   69   20.24)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 9007199254740992 := 1930114126015928 << 1
(smt.stats    9   1115  24494  24946  2998/2656/203    1147/139    16   69   20.33)
(smt.stats   10   1216  27991  30787  3021/2748/203    1248/152    17   88   20.44)
(smt.stats   11   1327  31800  36004  3027/2751/204    1376/157    18   89   20.44)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  33503  40834  3036/2759/204    1518/157    18   89   20.54)
(smt.stats   13   1583  35747  46627  3101/2809/208    1668/170    19   95   20.64)
(smt.stats   14   1730  40535  57815  3128/2840/217    1845/199    21  102   20.74)
(smt.stats   15   1831  42542  62261  3144/2856/220    1939/199    23  121   20.74)
(smt.stats   16   1942  43782  66365  3157/2872/227    2056/199    23  121   20.74)
(smt.stats   17   2064  46418  71676  3159/2876/229    2204/201    24  134   20.84)
(smt.stats   18   2198  52163  84355  3165/2882/229    2346/205    25  143   20.84)
(smt.stats   19   2345  56355  94855  3205/2892/229    2529/205    25  143   20.84)
(smt.stats   20   2506  60460 106550  3207/2922/229    2711/205    25  143   20.96)
ramon: poll                 wall=1.000s usage=0.932s mem=22312KiB load=0.93 rootload=0.92
(smt.stats   21   2607  65580 115672  3208/2923/229    2823/205    25  143   20.96)
(smt.stats   22   2718  68618 122259  3213/2925/229    2955/206    25  143   20.96)
(smt.stats   23   2840  71288 128320  3226/2941/229    3096/206    25  143   20.96)
(smt.stats   24   2974  72864 133981  3261/2968/229    3244/206    25  143   21.09)
(smt.stats   25   3121  74723 139967  3293/2974/231    3416/231    26  145   21.18)
(smt.stats   26   3282  75366 141588  3616/3056/231    3604/237    26  145   21.48)
(smt.stats   27   3459  78685 150445  3952/3539/231    3804/237    26  145   21.48)
(smt.stats   28   3560  81224 156473  3977/3669/231    3934/238    26  145   21.58)
(smt.stats   29   3671  84720 162490  4010/3695/231    4070/238    26  145   21.58)
(smt.stats   30   3793  88231 168941  4032/3723/231    4231/238    26  145   21.58)
(smt.stats   31   3927  91414 177565  4071/3752/234    4423/305    27  147   21.67)
ramon: poll                 wall=2.000s usage=1.931s mem=23052KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  94785 186641  4077/3784/234    4637/305    27  147   21.67)
(smt.stats   33   4235  96648 195698  4136/3795/234    4814/389    28  151   21.67)
(smt.stats   34   4412 100477 215236  4147/3850/234    5021/390    28  151   21.67)
(smt.stats   35   4606 105397 225363  4209/3862/234    5324/392    28  151   21.67)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 4 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 4 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 8 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 16 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 32 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 32 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 64 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 4 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 8 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 16 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 32 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 64 := 1904&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 32 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 32 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 64 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 128 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 256 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 128 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 256 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 256 := 2048&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 2048&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 1920&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 2048&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 2048&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 3072&1903
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 139611588448488448 := 2814749767106560 << 12
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 2048&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 2048&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 3072&1903
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 139611588448488448 := 2814749767106560 << 12
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 2048&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 3072&1903
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 139611588448488448 := 2814749767106560 << 12
(smt.stats   36   4707 108355 232813  4308/4002/318    5452/480    29  159   21.89)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 2048&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 3072&1903
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 139611588448488448 := 2814749767106560 << 12
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 1313549891316380&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 1313549891316352&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 1313549891316224&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 1313549891316352&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1280 := 1313549891316352&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1064 := 1313549891316352&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 1313549891316352&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1056 := 9216&1903
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1024 := 9216&1903
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 11529215046068478976 := 2814749767106562 << 12
(smt.stats   37   4818 110037 237403  4398/4017/323    5585/484    29  159   21.98)
(smt.stats   38   4940 114366 246533  4425/4126/339    5774/556    30  176   22.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 323)
(smt.stats   39   5074 116438 254949  4453/4140/350    5622/557    30  176   22.19)
(smt.stats   40   5221 120480 268414  4488/4182/351    5798/579    31  191   22.19)
(smt.stats   41   5382 126381 280516  4512/4203/351    6072/581    31  191   22.32)
(smt.stats   42   5559 129714 292314  4581/4254/353    6296/616    32  198   22.51)
ramon: poll                 wall=3.000s usage=2.931s mem=23960KiB load=1.00 rootload=1.00
(smt.stats   43   5753 134232 304774  4631/4325/354    6505/659    33  206   22.51)
(smt.stats   44   5966 140366 317430  4670/4379/356    6813/696    34  215   22.51)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 4503599627370499 := 2 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 2&0
shl: (shl[52] (bv2int %0) (mod (bv2int %1) 52)) 5 := 1 << 1
(smt.stats   45   6067 141502 322494  4686/4386/359    6946/697    34  215   22.51)
(smt.stats   46   6178 142416 328374  4718/4418/364    7074/697    34  215   22.63)
(smt.stats   47   6300 143576 333269  4754/4433/365    7187/716    35  246   22.73)
(smt.stats   48   6434 145141 339496  4998/4683/366    7411/718    35  246   22.92)
(smt.stats   49   6581 148439 351637  5016/4689/366    7699/718    35  246   22.92)
(smt.stats   50   6742 153747 365287  5032/4709/367    8017/771    36  252   22.92)
ramon: poll                 wall=4.000s usage=3.931s mem=24568KiB load=1.00 rootload=1.00
(smt.stats   51   6919 158961 383803  5044/4729/368    8216/785    37  261   23.01)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 164794 399432  5060/4740/368    8485/786    37  261   23.12)
(smt.stats   53   7326 175090 425612  5069/4754/369    8717/839    38  266   23.12)
(smt.stats   54   7560 183473 443843  5189/4822/370    9104/857    39  266   23.21)
ramon: poll                 wall=5.003s usage=4.935s mem=24776KiB load=1.00 rootload=1.00
(smt.stats   55   7661 187216 454069  5332/4910/371    9280/860    39  266   23.31)
ramon: poll                 wall=6.000s usage=5.931s mem=25092KiB load=1.00 rootload=1.00
(smt.stats   56   7772 189746 461277  5476/5018/371    9739/861    39  266   23.61)
ramon: poll                 wall=7.000s usage=6.930s mem=25408KiB load=1.00 rootload=1.00
(smt.stats   57   7894 191532 464237  5600/5190/371    9881/884    40  266   23.71)
(smt.stats   58   8028 194524 471602  5703/5361/371   10220/887    40  266   23.80)
(smt.stats   59   8175 199608 487705  5745/5401/372   10511/890    40  266   23.80)
(smt.stats   60   8336 204476 503364  5753/5438/373   10799/958    41  268   23.80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 209435 517475  5768/5453/375   11240/1068    42  280   23.91)
(smt.stats   62   8707 216091 535906  5788/5473/376   11622/1068    42  280   23.91)
ramon: poll                 wall=8.000s usage=7.930s mem=25724KiB load=1.00 rootload=0.99
(smt.stats   63   8920 225621 558520  5797/5477/376   11948/1069    42  280   24.14)
(smt.stats   64   9154 233286 573941  5805/5486/376   12256/1132    43  292   24.23)
(smt.stats   65   9411 242077 598261  5809/5494/376   12649/1132    43  292   24.36)
(smt.stats   66   9512 243956 602978  5874/5514/376   12859/1134    43  292   24.36)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 4 := 896&7
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 4 := 896&7
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 2 := 896&7
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 2 := 896&7
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 9007199254741888 := 3940649673949185 << 4
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 9007199254741888 := 3940649673949185 << 4
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 4503599627371392 := 3940649673949205 << 4
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 4503599627371392 := 3940649673949206 << 4
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #375) 64)) 4503599627371392 := 3940649673949206 << 4
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
shl: (shl[52] (bv2int %0) (mod (bv2int %1) 52)) 2 := 3940649673949240 << 4
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
shl: (shl[52] (bv2int %0) (mod (bv2int %1) 52)) 4 := 3940649673949240 << 4
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
shl: (shl[52] (bv2int %0) (mod (bv2int %1) 52)) 4 := 3940649673949240 << 4
(smt.stats   67   9623 246468 614675  5949/5568/377   13086/1217    44  293   24.45)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 4 := 896&7
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 4 := 896&7
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&7
band: (band[52] (shl[52] (bv2int %0) (mod #104 52)) (if (= #614 51) 0 (if #616 1 #760))) 4 := 896&7
(smt.stats   68   9745 249027 624589  5972/5626/392   13344/1217    44  293   24.45)
(smt.stats   69   9879 252916 637431  6063/5644/402   13625/1220    44  293   24.57)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 0 := 896&261585075307370
(smt.delete-inactive-clauses  :num-deleted-clauses 76)
(smt.stats   70  10026 256953 648919  6110/5785/404   13952/1244    45  298   24.67)
(smt.stats   71  10187 263640 677365  6116/5791/404   14278/1244    45  298   24.67)
ramon: poll                 wall=9.000s usage=8.930s mem=25980KiB load=1.00 rootload=1.00
(smt.stats   72  10364 270975 706445  6138/5809/404   14609/1289    46  299   24.76)
(smt.stats   73  10558 275062 722306  6142/5813/405   15024/1343    47  302   24.76)
(smt.stats   74  10771 279610 742539  6153/5818/405   15391/1344    47  302   24.86)
(smt.stats   75  11005 284730 768808  6191/5850/405   15662/1344    47  302   24.86)
(smt.stats   76  11262 291561 809156  6208/5860/406   15986/1404    48  308   25.00)
(smt.stats   77  11544 298979 841390  6224/5885/408   16441/1409    49  320   25.10)
(smt.stats   78  11645 301466 855275  6231/5886/408   16611/1409    49  320   25.10)
(smt.stats   79  11756 305493 868434  6237/5898/408   16828/1447    50  320   25.10)
ramon: poll                 wall=10.000s usage=9.930s mem=26492KiB load=1.00 rootload=1.00
(smt.stats   80  11878 310469 888106  6239/5900/408   17091/1447    50  320   25.10)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   81  12012 314414 905941  6245/5901/409   17367/1447    50  320   25.21)
(smt.stats   82  12159 318746 924777  6251/5912/409   17658/1504    51  324   25.21)
(smt.stats   83  12321 321166 939353  6253/5914/409   17955/1504    51  324   25.21)
(smt.stats   84  12498 323389 955581  6258/5919/411   18298/1504    51  324   25.33)
(smt.stats   85  12692 329701 983051  6264/5924/411   18639/1572    52  336   25.43)
(smt.stats   86  12905 335594 1002687  6281/5938/411   18940/1572    52  336   25.43)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   87  13139 340480 1034548  6286/5943/412   19449/1572    52  336   25.53)
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 5 := 13&475
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 13&475
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 13&475
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 13&475
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 9&475
band: (band[52] (shl[64] (bv2int %0) (mod #376 64)) (if (or #780 #781) 0 (if #782 1 #914))) 1 := 9&475
ramon: poll                 wall=11.000s usage=10.930s mem=27004KiB load=1.00 rootload=1.00
(smt.stats   88  13396 344490 1056676  6334/5948/412   19761/1616    53  347   25.63)
(smt.stats   89  13678 351083 1085519  6368/6001/422   20270/1618    53  347   25.72)
(smt.stats   90  13988 360043 1122012  6391/6042/422   20879/1645    54  349   26.13)
(smt.stats   91  14089 361373 1130376  6400/6051/422   21047/1645    54  349   26.23)
(smt.stats   92  14200 365667 1147633  6445/6051/422   21203/1651    54  349   26.23)
(smt.stats   93  14322 369554 1164500  6564/6114/422   21428/1652    54  349   26.23)
(smt.stats   94  14456 373214 1181705  6640/6242/422   21680/1653    54  349   26.37)
ramon: poll                 wall=12.000s usage=11.930s mem=27896KiB load=1.00 rootload=1.00
(smt.stats   95  14603 378373 1211743  6677/6300/422   22147/1657    54  349   26.37)
(smt.stats   96  14764 384282 1242674  6697/6344/423   22438/1802    55  353   26.46)
(smt.stats   97  14941 385787 1260220  6704/6355/424   22761/1802    55  353   26.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 12)
(smt.stats   98  15135 390236 1279158  6867/6375/424   23325/1803    55  353   26.56)
ramon: poll                 wall=13.000s usage=12.930s mem=28152KiB load=1.00 rootload=1.00
(smt.stats   99  15348 396472 1319863  7105/6720/425   23957/1882    56  363   26.75)
(smt.stats  100  15582 403269 1363450  7255/6789/425   24645/1886    56  363   26.75)
(smt.stats  101  15839 413965 1396774  7438/6921/426   25235/1995    57  369   26.97)
ramon: poll                 wall=14.000s usage=13.930s mem=28664KiB load=1.00 rootload=1.00
(smt.stats  102  16121 421295 1428065  7530/7135/427   26490/1998    57  369   27.07)
(smt.stats  103  16431 429836 1466914  7683/7202/427   27222/2226    58  377   27.17)
ramon: poll                 wall=15.000s usage=14.930s mem=28920KiB load=1.00 rootload=1.00
(smt.stats  104  16771 447695 1554294  7688/7335/428   28083/2226    58  377   27.36)
(smt.stats  105  16872 450901 1572740  7694/7341/428   28556/2391    59  381   27.36)
(smt.stats  106  16983 453519 1586186  7712/7343/428   28833/2392    59  381   27.49)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  107  17105 456418 1608306  7763/7377/428   29092/2394    59  381   27.49)
(smt.stats  108  17239 460659 1638326  7961/7491/429   29641/2396    59  381   27.49)
ramon: poll                 wall=16.000s usage=15.930s mem=29432KiB load=1.00 rootload=1.00
(smt.stats  109  17386 466559 1671563  8050/7620/429   29978/2572    60  383   27.61)
(smt.stats  110  17547 470557 1693748  8070/7713/432   30687/2572    60  383   27.72)
(smt.stats  111  17724 475921 1742019  8092/7734/432   31306/2572    60  383   28.01)
(smt.stats  112  17918 485305 1766409  8151/7785/434   31687/2816    61  409   28.14)
(smt.stats  113  18131 488697 1783305  8187/7788/434   32615/2817    61  409   28.33)
ramon: poll                 wall=17.000s usage=16.929s mem=29944KiB load=1.00 rootload=1.00
(smt.stats  114  18365 495643 1822766  8354/7837/434   33346/2822    61  409   28.42)
ramon: poll                 wall=18.000s usage=17.929s mem=30200KiB load=1.00 rootload=1.00
(smt.stats  115  18622 500932 1861242  8432/8034/435   33907/2824    61  409   28.52)
ramon: poll                 wall=19.000s usage=18.929s mem=30456KiB load=1.00 rootload=1.00
(smt.stats  116  18904 512966 1943397  8655/8075/435   34664/3100    62  422   28.71)
(smt.stats  117  19214 528318 2028122  8705/8317/435   35564/3100    62  422   28.80)
ramon: poll                 wall=20.000s usage=19.929s mem=30456KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:17:16 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.004s
ramon: group.utime          19.988s
ramon: group.stime          0.016s
ramon: group.mempeak        30968KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
