ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:38:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30385 MiB
ramon: sys.mem.avail        61766 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/71cFoj7Eg7fm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4073212
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3539    162  1325/1174/113     108/5     3   20   19.27)
(smt.stats    1    202   6787   1160  1698/1514/116     240/16     5   24   19.37)
(smt.stats    2    313   9690   2027  1804/1639/117     361/44     6   25   19.47)
(smt.stats    3    414  11268   2834  1815/1649/121     469/47     8   26   19.56)
(smt.stats    4    525  14079   3411  1994/1804/121     581/50     8   26   19.66)
(smt.stats    5    647  17241   4939  2017/1834/121     726/58     9   28   19.75)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  20240   6262  2043/1860/122     848/75    10   30   19.75)
(smt.stats    7    859  23653  12619  2439/1861/122     960/118    10   30   19.86)
(smt.stats    8    981  26633  15550  2519/2240/127    1087/136    11   30   19.95)
(smt.stats    9   1115  30188  24547  2591/2320/127    1230/144    12   33   20.12)
(smt.stats   10   1216  32593  33695  2648/2379/128    1330/150    13   33   20.12)
(smt.stats   11   1327  36034  36700  2683/2435/129    1445/154    14   34   20.12)
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 36028797018963967&36028797018963888
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  39567  40250  2689/2442/132    1567/155    15   34   20.22)
(smt.stats   13   1583  40858  42116  2710/2443/132    1710/153    16   37   20.22)
(smt.stats   14   1730  42703  48324  2728/2481/132    1893/153    16   37   20.22)
ramon: poll                 wall=1.000s usage=0.951s mem=21372KiB load=0.95 rootload=0.94
(smt.stats   15   1831  44467  52689  2728/2481/132    2007/153    16   37   20.22)
(smt.stats   16   1942  46480  58960  2730/2483/132    2118/153    16   37   20.22)
(smt.stats   17   2064  48662  65528  2734/2487/133    2240/160    17   37   20.22)
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 36028797016342528 := 36028797016342528&36028797016342528
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 36028797016342528 := 0 >>l 45
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 36028797016342528 := 36028797016342528&36028797016342528
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 36028797016342528 := 0 >>l 45
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 1 := 0 >>l 45
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 1 := 0 >>l 45
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 1 := 0 >>l 45
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 36028797016342529 := 68719476736 >>l 36
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 36028797016342527 := 68719476736 >>l 36
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 68719476737 := 68719476736 >>l 36
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 1 := 1&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 1 := 1&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 2&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 2 := 2&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 2&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 2 := 2&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 1 := 1&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 4&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 4 := 4&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 8&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 8 := 8&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 16&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 16 := 16&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 32&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 32 := 32&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 64&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 64 := 64&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 128&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 128 := 128&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 256&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 256 := 256&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 512&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 512 := 512&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 31 := 32&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 32&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 32 := 32&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 32&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 32 := 32&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 32&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 32 := 32&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 67 := 68&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 67 := 68&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 67 := 68&36028797016342528
(smt.stats   18   2198  49856  68805  2831/2566/195    2383/166    17   37   20.62)
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 67 := 68&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797016342528
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 68 := 68&36028797016342528
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018636288
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 68 := 2427721674128896 >>l 48
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018636288
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 68 := 2427721674128896 >>l 48
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018636288
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 68 := 2427721674128896 >>l 48
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018636288
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 68 := 2427721674128896 >>l 48
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018882048
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 68 := 2427721674128896 >>l 50
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 67 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 66 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 67 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 67 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 67 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 4 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 67 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 4 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 4 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 4 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 63 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 62 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 4 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 64 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 64 := 68&36028797018963948
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 68 := 68&36028797018963948
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 68 := 2392537302040576 >>l 62
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 68 := 68&36028797018963948
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 68 := 2427721674128896 >>l 62
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 68 := 68&36028797018963948
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 68 := 2427721674128896 >>l 62
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963948
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 68 := 68719476735 >>l 53
(smt.stats   19   2345  53010  75682  2969/2709/253    2548/182    19   64   20.91)
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963948
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 66 := 68719476735 >>l 53
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963948
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 66 := 68719476735 >>l 53
(smt.stats   20   2506  56677  83457  3068/2795/264    2754/206    20   71   21.20)
(smt.stats   21   2607  60411  91093  3125/2840/264    2867/213    21   75   21.20)
(smt.stats   22   2718  63958 100766  3184/2896/267    3019/238    23   82   21.30)
(smt.stats   23   2840  66232 107556  3296/2994/268    3167/242    23   82   21.30)
(smt.stats   24   2974  68504 113183  3362/3086/273    3328/261    24   85   21.39)
(smt.stats   25   3121  72198 119982  3396/3124/273    3509/262    24   85   21.59)
ramon: poll                 wall=2.000s usage=1.950s mem=22764KiB load=1.00 rootload=0.99
(smt.stats   26   3282  75267 127599  3430/3167/275    3672/279    26  101   21.59)
(smt.stats   27   3459  83404 140128  3442/3176/276    3847/285    27  106   21.59)
(smt.stats   28   3560  87053 146250  3444/3181/276    3950/285    27  106   21.59)
(smt.stats   29   3671  92182 156418  3444/3181/276    4061/285    27  106   21.59)
(smt.stats   30   3793  97321 164117  3447/3184/276    4182/285    27  106   21.59)
(smt.stats   31   3927 103452 176320  3447/3184/276    4322/285    27  106   21.59)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 109224 186362  3448/3185/276    4468/285    27  106   21.70)
(smt.stats   33   4235 115662 198961  3448/3185/276    4630/285    27  106   21.70)
(smt.stats   34   4412 123243 210973  3448/3185/276    4807/285    27  106   21.70)
(smt.stats   35   4606 127471 221430  3451/3187/277    4998/297    28  115   21.79)
(smt.stats   36   4707 130219 227784  3454/3191/277    5101/297    28  115   21.97)
(smt.stats   37   4818 134599 235766  3454/3191/277    5213/297    28  115   21.97)
(smt.stats   38   4940 138919 243958  3454/3191/277    5342/297    28  115   21.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 258)
(smt.stats   39   5074 144593 253874  3454/3191/277    5238/297    28  115   22.08)
(smt.stats   40   5221 150682 265692  3454/3191/277    5386/297    28  115   22.08)
(smt.stats   41   5382 155749 276730  3454/3191/277    5567/297    28  115   22.08)
(smt.stats   42   5559 162300 290251  3454/3191/277    5744/297    28  115   22.17)
ramon: poll                 wall=3.000s usage=2.950s mem=23416KiB load=1.00 rootload=1.00
(smt.stats   43   5753 169755 309141  3454/3191/277    5960/297    28  115   22.17)
(smt.stats   44   5966 177515 320684  3454/3191/277    6186/297    28  115   22.27)
(smt.stats   45   6067 180139 327135  3455/3192/277    6292/297    28  115   22.27)
(smt.stats   46   6178 184783 336728  3455/3192/277    6403/297    28  115   22.27)
(smt.stats   47   6300 190146 346920  3455/3192/277    6525/297    28  115   22.36)
(smt.stats   48   6434 194613 356588  3455/3192/277    6680/297    28  115   22.85)
(smt.stats   49   6581 198335 366486  3455/3192/277    6834/297    28  115   22.85)
(smt.stats   50   6742 204046 378279  3456/3193/277    6997/297    28  115   22.85)
(smt.stats   51   6919 210403 393719  3456/3193/277    7176/297    28  115   22.85)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 216385 407999  3456/3193/277    7374/297    28  115   22.95)
(smt.stats   53   7326 225466 425473  3456/3193/277    7588/297    28  115   22.95)
(smt.stats   54   7560 233403 443030  3457/3194/277    7821/297    28  115   23.05)
(smt.stats   55   7661 237515 451027  3457/3194/277    7922/297    28  115   23.05)
(smt.stats   56   7772 241797 460808  3457/3194/277    8033/297    28  115   23.14)
(smt.stats   57   7894 246254 471677  3457/3194/277    8155/297    28  115   23.24)
ramon: poll                 wall=4.001s usage=3.951s mem=24552KiB load=1.00 rootload=1.00
(smt.stats   58   8028 251019 481736  3457/3194/277    8289/297    28  115   23.24)
(smt.stats   59   8175 255546 491658  3457/3194/277    8436/297    28  115   23.24)
(smt.stats   60   8336 261503 506166  3457/3194/277    8597/297    28  115   23.34)
(smt.stats   61   8513 268569 521832  3457/3194/277    8782/297    28  115   23.34)
(smt.stats   62   8707 275741 536540  3457/3194/277    8976/297    28  115   23.43)
(smt.stats   63   8920 285028 553821  3457/3194/277    9189/297    28  115   23.43)
(smt.stats   64   9154 292658 569097  3458/3195/277    9439/297    28  115   23.43)
(smt.stats   65   9411 301625 583670  3459/3196/278    9748/365    29  115   23.53)
(smt.stats   66   9512 304843 589853  3459/3196/278    9849/365    29  115   23.53)
(smt.stats   67   9623 308833 599932  3459/3196/278    9960/365    29  115   23.53)
(smt.stats   68   9745 313027 608703  3459/3196/278   10082/365    29  115   23.53)
(smt.stats   69   9879 317858 618367  3460/3197/278   10215/365    29  115   23.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 8)
(smt.stats   70  10026 323418 628857  3460/3197/278   10354/365    29  115   23.53)
ramon: poll                 wall=5.000s usage=4.950s mem=24960KiB load=1.00 rootload=0.99
(smt.stats   71  10187 329224 642237  3460/3197/278   10515/365    29  115   23.53)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 335418 658753  3460/3197/278   10692/365    29  115   23.62)
(smt.stats   73  10558 341258 673659  3460/3197/278   10891/365    29  115   23.62)
(smt.stats   74  10771 348775 692397  3460/3197/278   11104/365    29  115   23.62)
(smt.stats   75  11005 357234 714266  3460/3197/278   11340/365    29  115   23.62)
(smt.stats   76  11262 366220 741191  3460/3197/278   11600/365    29  115   23.72)
(smt.stats   77  11544 375635 769346  3460/3197/278   11894/365    29  115   23.72)
(smt.stats   78  11645 378691 776703  3557/3197/280   12067/366    30  119   23.82)
(smt.stats   79  11756 381114 783016  3666/3308/280   12195/367    30  119   23.91)
ramon: poll                 wall=6.005s usage=5.954s mem=25340KiB load=1.00 rootload=1.01
(smt.stats   80  11878 384542 791685  3713/3404/280   12326/368    30  119   23.91)
(smt.stats   81  12012 386694 795614  3745/3462/280   12478/368    30  119   23.91)
(smt.stats   82  12159 390252 800604  3874/3493/280   12619/374    30  119   24.01)
(smt.stats   83  12320 393389 807980  3944/3630/280   12803/379    30  119   24.01)
(smt.stats   84  12497 398231 821464  3978/3689/280   12990/382    30  119   24.80)
(smt.stats   85  12691 402191 833728  3990/3723/280   13205/383    30  119   24.80)
(smt.stats   86  12904 407426 846115  4037/3730/280   13531/386    30  119   24.90)
ramon: poll                 wall=7.000s usage=6.949s mem=26456KiB load=1.00 rootload=0.99
(smt.stats   87  13138 412467 858312  4172/3882/283   13842/514    31  130   24.99)
(smt.stats   88  13395 418519 876021  4481/3931/283   14247/523    31  130   25.18)
(smt.stats   89  13677 424033 894573  4734/4350/285   14717/527    31  130   25.28)
ramon: poll                 wall=8.000s usage=7.947s mem=26836KiB load=1.00 rootload=1.00
(smt.stats   90  13987 429205 911434  5064/4564/285   15063/673    32  135   25.37)
(smt.stats   91  14088 431666 919135  5217/4941/285   15185/673    32  135   25.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   92  14199 434398 930981  5249/4971/285   15502/673    32  135   25.47)
(smt.stats   93  14321 437155 941229  5348/4993/285   15682/673    32  135   25.56)
ramon: poll                 wall=9.000s usage=8.947s mem=27176KiB load=1.00 rootload=1.00
(smt.stats   94  14455 439370 952035  5577/5107/285   15839/675    32  135   25.66)
(smt.stats   95  14602 442959 965160  5643/5356/286   16043/755    33  135   25.66)
(smt.stats   96  14763 447530 980725  5767/5401/286   16264/755    33  135   25.77)
(smt.stats   97  14940 450739 994147  5942/5543/286   16458/759    33  135   25.87)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions     )
(smt.stats   98  15134 454509 1014399  6065/5723/287   16825/759    33  135   25.87)
ramon: poll                 wall=10.000s usage=9.947s mem=27488KiB load=1.00 rootload=1.00
(smt.stats   99  15347 457683 1023188  6390/5841/287   17100/831    34  137   25.96)
(smt.stats  100  15581 461342 1034643  6504/6137/287   17337/833    34  137   26.06)
(smt.stats  101  15838 465640 1052811  6853/6350/287   17628/835    34  137   26.25)
(smt.stats  102  16120 472144 1084870  7100/6624/287   17983/840    34  137   26.38)
ramon: poll                 wall=11.000s usage=10.947s mem=27988KiB load=1.00 rootload=1.00
(smt.stats  103  16430 478439 1112804  7430/6848/287   18347/843    34  137   26.51)
(smt.stats  104  16770 484512 1147237  7569/7237/289   18907/894    35  137   26.61)
(smt.stats  105  16871 486745 1157798  7593/7325/289   19033/894    35  137   26.61)
(smt.stats  106  16982 488694 1166657  7604/7337/289   19192/894    35  137   26.71)
(smt.stats  107  17104 491558 1182670  7618/7339/290   19412/894    35  137   26.71)
(smt.stats  108  17238 495024 1196978  7667/7360/290   19614/895    35  137   26.71)
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963958
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 18410715276690587648 := 18410715276690587648 >>l 63
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963958
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 18374686479671623680 := 18374686479671623680 >>l 63
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963958
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 13835058055282163712 := 13835058055282163712 >>l 63
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963958
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 1 := 9007199254740992 >>l 54
(smt.stats  109  17386 497131 1205033  7693/7414/290   19765/961    36  138   26.80)
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963958
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 164 := 9007199254740992 >>l 54
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 0&36028797018963958
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 114 := 18014398509481983 >>l 54
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 1 := 1&36028797018963958
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 1 := 1&36028797018963958
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 1 := 1&36028797018963958
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 1&36028797018963958
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #529 54) 649037107316853363494319493742592 (if #531 324518553658426681747159746871296 #637))) 1 := 1&36028797018963958
ramon: poll                 wall=12.000s usage=11.946s mem=28424KiB load=1.00 rootload=1.00
(smt.stats  110  17547 498490 1213520  7804/7446/301   20165/968    36  138   26.90)
(smt.stats  111  17724 499878 1220919  8057/7595/316   20353/972    36  138   26.99)
(smt.stats  112  17918 501752 1231079  8266/7876/316   20664/973    36  138   26.99)
ramon: poll                 wall=13.005s usage=12.949s mem=28700KiB load=1.00 rootload=1.00
(smt.stats  113  18131 505339 1244482  8311/8015/316   20883/974    36  138   27.09)
(smt.stats  114  18365 512753 1275170  8332/8053/316   21479/974    36  138   27.19)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  115  18622 520466 1306070  8351/8073/316   21848/1253    37  143   27.19)
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 133&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 18410715276690587781 := 58368 >>l 9
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 133&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 18410715276690587781 := 58368 >>l 9
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 133&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 18410715276690587781 := 58368 >>l 9
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 133&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 18410715276690587781 := 58368 >>l 9
band: (band[55] (lshr[64] (* 512 #112) (mod #360 64)) (if (= #660 63) 664613997892457844218183161592414208 (if #662 332306998946228922109091580796207104 #786))) 0 := 133&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #359) 64)) 18410715276690587781 := 58368 >>l 9
(smt.stats  116  18904 531718 1335620  8388/8109/322   22206/1290    38  146   27.38)
ramon: poll                 wall=14.000s usage=13.944s mem=29096KiB load=1.00 rootload=1.00
(smt.stats  117  19214 534021 1347053  8672/8125/328   22664/1295    38  146   27.47)
ramon: poll                 wall=15.000s usage=14.944s mem=29244KiB load=1.00 rootload=1.00
(smt.stats  118  19554 536190 1372586  9097/8423/328   23104/1301    38  146   27.66)
(smt.stats  119  19927 539307 1394962  9499/9166/329   23538/1382    39  161   27.85)
ramon: poll                 wall=16.000s usage=15.944s mem=29512KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20028 541248 1399052  9559/9271/330   23683/1382    39  161   27.85)
(smt.stats  121  20139 545196 1414434  9571/9290/330   23909/1382    39  161   27.85)
(smt.stats  122  20261 548739 1428914  9706/9291/330   24080/1384    39  161   27.95)
(smt.stats  123  20395 550155 1432578  9718/9437/331   24317/1384    39  161   27.95)
(smt.stats  124  20542 552260 1448284  9749/9463/333   24871/1528    40  167   27.95)
(smt.stats  125  20703 556702 1480428  9772/9477/333   25109/1529    40  167   28.05)
(smt.stats  126  20880 561685 1501924  9782/9497/333   25303/1530    40  167   28.05)
(smt.stats  127  21074 565943 1530839  9804/9511/334   25593/1554    41  168   28.14)
ramon: poll                 wall=17.005s usage=16.945s mem=29984KiB load=1.00 rootload=1.01
(smt.stats  128  21287 569362 1551622  9984/9539/334   25876/1554    41  168   28.35)
(smt.stats  129  21521 573667 1580846 10165/9872/336   26236/1555    41  168   28.35)
(smt.stats  130  21778 580596 1615047 10203/9894/336   26803/1555    41  168   28.44)
(smt.stats  131  22060 584312 1640124 10434/9937/336   27649/1645    42  170   28.66)
ramon: poll                 wall=18.000s usage=17.939s mem=30476KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  132  22370 588386 1668675 10872/10210/336   28081/1648    42  170   28.75)
(smt.stats  133  22710 596462 1732610 11020/10673/336   28699/1649    42  170   28.85)
ramon: poll                 wall=19.005s usage=18.942s mem=30700KiB load=1.00 rootload=1.00
(smt.stats  134  23083 603307 1774207 11292/10745/336   29151/1649    42  170   29.07)
(smt.stats  135  23493 610857 1831907 11811/11517/337   29659/1713    43  177   29.17)
(smt.stats  136  23594 613680 1847858 11828/11518/337   29821/1713    43  177   29.17)
(smt.stats  137  23705 618489 1868652 11855/11544/337   29948/1714    43  177   29.26)
(smt.stats  138  23827 623241 1891661 11877/11571/337   30108/1714    43  177   29.36)
ramon: poll                 wall=20.000s usage=19.937s mem=31040KiB load=1.00 rootload=1.00
(smt.stats  139  23961 626097 1906858 11894/11588/337   30288/1714    43  177   29.36)
ramon: end                  Fri Nov  1 17:38:35 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.992s
ramon: group.utime          19.968s
ramon: group.stime          0.024s
ramon: group.mempeak        31552KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.055s
ramon: loadavg              1.00
