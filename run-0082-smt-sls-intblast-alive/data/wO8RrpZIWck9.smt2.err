ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:16:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27152 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/wO8RrpZIWck9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             959537
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.2252     10000        49          0            1        2)
(smt.stats    0    101   4161    208  1250/1083/96     101/13     4   14   52.04)
(sat.ddfw       1      1    31.059     20001        98          1            1        3)
(smt.stats    1    202   5666    651  2138/1887/98     198/23     6   17   52.23)
(smt.stats    2    313   7286   1733  2417/2196/99     326/28     7   18   52.23)
(sat.ddfw       1      1    36.036     40001       196          2            1        5)
(smt.stats    3    414   8460   3241  2464/2229/99     432/28     7   18   52.32)
(smt.stats    4    525   9266   4584  2614/2349/114     508/53     9   57   52.32)
(smt.stats    5    647  10735   6246  2661/2412/116     639/57    11   59   52.43)
(sat.ddfw       1      1   32.9308     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.844s mem=54676KiB load=0.84 rootload=0.84
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14781   8883  2674/2435/116     739/57    11   59   52.72)
(smt.stats    7    859  18472  11748  2688/2443/116     851/57    11   59   52.72)
(smt.stats    8    981  20944  14846  2710/2469/117     961/72    12   61   52.82)
(smt.stats    9   1115  22190  16832  2740/2471/117    1101/72    12   61   52.82)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 520 := 70368744177662&520
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 520 := 520 << 45
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 519 := 70368744177662&519
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 518 := 70368744177662&518
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 518 := 520 << 45
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 6 := 70368744177662&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 6 := 520 << 45
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 70368744177662 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 5 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 8 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 16 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 32 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 64 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 128 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 256 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 512 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 64 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 128 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 256 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 512 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4096 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 8192 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 16384 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 32768 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 65536 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 131072 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 262144 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524288 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1048576 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2097152 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4194304 := 70368744177662&281474976710656
(smt.stats   10   1216  23720  18642  2956/2503/117    1207/74    12   61   53.79)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 256 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 640 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 512 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4096 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 540672 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 557056 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 557056 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 557056 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524416 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524296 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524296 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524416 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524416 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524320 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524320 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524320 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524304 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524304 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524304 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524352 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524289 := 70368744177662&281474976710656
(smt.stats   11   1327  25865  22496  2980/2657/251    1507/84    13   82   53.79)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524290 := 70368744177662&281474976710656
(sat.ddfw       1      1   28.8184    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26830  23979  3152/2732/296    1788/182    14   99   53.88)
(smt.stats   13   1583  28282  26304  3304/2955/301    2132/185    14   99   54.00)
(smt.stats   14   1730  30047  33421  3575/3065/301    2794/273    15  100   54.20)
(smt.stats   15   1831  30719  36050  3839/3399/301    3094/273    15  100   54.30)
ramon: poll                 wall=2.002s usage=1.846s mem=56576KiB load=1.00 rootload=1.00
(smt.stats   16   1942  31198  37462  4091/3666/301    3366/275    15  100   54.46)
(sat.ddfw       1      1   25.2776    160000       784          5            1       17)
(smt.stats   17   2064  33657  43738  4200/3957/301    3626/275    15  100   54.65)
(smt.stats   18   2198  39817  53826  4210/3967/308    4871/1357    17  126   54.75)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&496
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&496
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 1024 := 496 << 6
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 0 := 248 << 7
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31567
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31567
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31566
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31566
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31565
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31564
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31564
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&30720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 30720 := 496 << 6
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 0 := 248 << 7
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 0 := 248 << 7
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 127 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 126 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 124 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 127 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 126 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 124 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 125 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 124 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 120 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 112 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 96 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 64 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 28 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 4 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 24 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 64 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 32 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2 := 127&31744
(smt.stats   19   2345  42850  60572  4309/4064/392    5084/1388    18  150   55.24)
(smt.stats   20   2506  47530  77490  4500/4212/408    5377/1617    20  175   55.68)
(sat.ddfw       1      1   22.3052    220001      1078          6            1       23)
(smt.stats   21   2607  49806  81955  4645/4242/408    5499/1618    20  175   55.87)
ramon: poll                 wall=3.000s usage=2.846s mem=58060KiB load=1.00 rootload=1.00
(smt.stats   22   2718  51820  86321  4863/4400/408    5612/1634    21  197   55.97)
(sat.ddfw       1      1   19.8977    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.848s mem=58392KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.8851    370001      1813          8            1       38)
(smt.stats   23   2840  54484  89153  5047/4605/408    5787/1634    21  197   56.19)
ramon: poll                 wall=5.000s usage=4.848s mem=58464KiB load=1.00 rootload=1.00
(smt.stats   24   2974  58499 101216  5176/4865/412    6325/1655    22  201   56.29)
(sat.ddfw       1      1   16.2631    460001      2254          9            1       47)
(smt.stats   25   3121  63610 112385  5319/4891/413    6780/1879    23  215   56.87)
ramon: poll                 wall=6.000s usage=5.847s mem=59352KiB load=1.00 rootload=1.00
(smt.stats   26   3282  69753 133929  5651/5038/413    7550/1954    24  218   56.97)
(sat.ddfw       1      1   14.9031    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=6.850s mem=59440KiB load=1.00 rootload=1.00
(smt.stats   27   3459  77323 156313  5759/5443/416    8122/2092    26  246   57.16)
(smt.stats   28   3560  79241 170072  5767/5448/416    8677/2092    26  246   57.25)
(smt.stats   29   3671  83001 180281  5789/5452/416    8854/2093    26  246   57.25)
ramon: poll                 wall=8.000s usage=7.848s mem=59640KiB load=1.00 rootload=1.00
(smt.stats   30   3793  87028 190771  5889/5495/416    9242/2099    26  246   57.35)
(sat.ddfw       1      1   13.7294    670001      3284         11            1       68)
(smt.stats   31   3927  92477 217641  6011/5627/416    9759/2099    26  246   57.61)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4074  95805 226948  6067/5712/417   10288/2373    27  249   57.70)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685202&281474976716800
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685202&281474976782336
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685202&281474976786432
(smt.stats   33   4235  99329 248133  6154/5837/426   10698/2448    28  253   57.80)
ramon: poll                 wall=9.000s usage=8.849s mem=59992KiB load=1.00 rootload=1.00
(smt.stats   34   4412 101896 255281  6319/5849/426   10950/2461    28  253   57.89)
(sat.ddfw       1      1    12.724    790001      3872         12            1       80)
(smt.stats   35   4606 108152 294900  6369/6053/429   11869/2565    29  259   57.89)
(smt.stats   36   4707 111313 316655  6383/6067/430   12241/2902    30  269   57.98)
ramon: poll                 wall=10.000s usage=9.805s mem=60800KiB load=0.96 rootload=0.96
(smt.stats   37   4818 114686 327350  6385/6069/430   12392/2902    30  269   57.98)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1&508
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 32576 := 254 << 1
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1&508
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 32576 := 254 << 1
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1&508
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 32576 := 254 << 1
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1&508
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 1&508
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1 := 1&508
(smt.stats   38   4940 116490 340186  6434/6113/448   12673/3029    31  284   58.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 49)
(smt.stats   39   5074 122699 349823  6483/6150/449   12819/3029    31  284   58.27)
(smt.stats   40   5221 130071 376818  6487/6157/452   13422/3081    32  324   58.27)
(smt.stats   41   5382 138829 399879  6524/6186/455   14560/3133    33  366   58.76)
ramon: poll                 wall=11.000s usage=10.761s mem=61280KiB load=0.96 rootload=0.95
(sat.ddfw       1      1   11.7445    920001      4509         13            1       93)
(smt.stats   42   5559 144389 445694  6589/6257/458   15362/3145    34  382   58.95)
ramon: poll                 wall=12.000s usage=11.760s mem=61612KiB load=1.00 rootload=1.00
(smt.stats   43   5753 151033 479901  6718/6329/461   16133/3284    35  453   59.14)
(sat.ddfw       1      1   11.1794   1060001      5196         14            1      108)
(smt.stats   44   5966 156072 504097  6924/6592/463   17291/3425    36  469   59.23)
ramon: poll                 wall=13.000s usage=12.910s mem=61848KiB load=1.15 rootload=1.15
(smt.stats   45   6067 158453 510000  6941/6602/463   17607/3426    36  469   59.33)
ramon: poll                 wall=14.000s usage=13.910s mem=61772KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5701   1210001      5931         15            1      123)
(smt.stats   46   6178 161262 518402  7041/6618/464   18124/3699    37  478   59.52)
ramon: poll                 wall=15.000s usage=14.910s mem=62016KiB load=1.00 rootload=1.00
(smt.stats   47   6300 164961 527690  7245/6878/466   18393/3701    37  478   59.61)
ramon: poll                 wall=16.000s usage=15.910s mem=62060KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.94036   1370001      6715         16            1      139)
(smt.stats   48   6434 168603 537714  7344/6920/466   18644/3701    37  478   59.61)
ramon: poll                 wall=17.000s usage=16.909s mem=62692KiB load=1.00 rootload=1.00
(smt.stats   49   6581 173534 557574  7442/7022/466   20903/3702    37  478   60.10)
ramon: poll                 wall=18.000s usage=17.908s mem=62800KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.39538   1540001      7549         17            1      156)
(smt.stats   50   6742 180989 584923  7590/7112/466   21362/3847    38  479   60.20)
ramon: poll                 wall=19.000s usage=18.999s mem=62892KiB load=1.09 rootload=1.09
(smt.stats   51   6919 188069 609660  7781/7303/466   22318/3847    38  479   60.30)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 193110 626993  7831/7457/466   23133/3850    38  479   60.49)
ramon: poll                 wall=20.000s usage=20.020s mem=62888KiB load=1.02 rootload=1.02
ramon: end                  Fri Nov  1 23:17:18 2024
ramon: root.execname        z3
ramon: root.utime           20.090s
ramon: root.stime           0.000s
ramon: group.total          20.102s
ramon: group.utime          20.098s
ramon: group.stime          0.004s
ramon: group.mempeak        63348KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              1.00
