ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:57:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24749 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1399
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mynMD3SDYNzA.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             146925
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3415    422  1151/1019/111      98/12     9   18   19.26)
(smt.stats    1    202   5535   1546  1729/1433/111     218/15     9   18   19.36)
(smt.stats    2    313   8043   2945  1803/1651/113     355/36    11   19   19.46)
(smt.stats    3    414   9920   4596  2183/2000/116     495/78    12   23   19.56)
(smt.stats    4    525  11583   6022  2499/2060/121     624/111    13   26   19.66)
(smt.stats    5    647  13900   7629  2530/2292/121     748/120    14   31   19.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  15776  11688  2543/2324/121     853/120    14   31   19.76)
(smt.stats    7    859  17791  16092  2558/2346/122     995/130    15   34   19.76)
(smt.stats    8    981  20011  18776  2567/2351/122    1131/130    15   34   19.88)
(smt.stats    9   1115  22982  21288  2581/2363/122    1261/130    15   34   19.88)
(smt.stats   10   1216  23816  22301  2654/2377/122    1401/135    15   34   19.97)
ramon: poll                 wall=1.000s usage=0.912s mem=21080KiB load=0.91 rootload=0.91
(smt.stats   11   1327  25525  27183  2801/2490/122    1536/138    15   34   20.07)
(smt.stats   12   1449  27379  32328  2839/2598/122    1663/139    15   34   20.07)
(smt.stats   13   1583  29886  35943  2841/2627/124    1895/174    16   42   20.20)
(smt.stats   14   1730  35629  55909  2844/2630/124    2041/174    16   42   20.20)
(smt.stats   15   1831  37442  62261  2865/2632/124    2145/174    16   42   20.20)
(smt.stats   16   1942  39036  65168  2894/2662/124    2262/175    16   42   20.20)
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 75462355104 := 75462355104&75462355105
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 75462355105 := 172 << 39
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 75462355104 := 75462355104&75462355105
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 75462355105 := 172 << 39
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 75462355104 := 75462355104&75462355105
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 75462355105 := 172 << 39
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 75462355104&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 0 := 172 << 39
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 75462355104&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 85 := 86 << 40
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 75462355104&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 85 := 86 << 40
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 75462355104&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 85 := 86 << 40
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 75462355104&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 85 := 86 << 40
(smt.stats   17   2064  40081  67814  2928/2683/125    2387/209    17   47   20.30)
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 168 := 301849420418&169
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 167 := 301849420418&169
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 301849420418&169
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 301849420418&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 256 := 168 << 41
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 301849420416 := 301849420418&301849420417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 9097942442625 := 168 << 41
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 301849420416 := 301849420418&301849420417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 88262779642497 := 168 << 41
(smt.stats   18   2198  41562  70862  2965/2727/135    2569/216    18   49   20.39)
(smt.stats   19   2345  43034  72564  3048/2775/147    2745/237    19   51   20.39)
(smt.stats   20   2506  44585  76457  3114/2888/154    2894/237    19   51   20.49)
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 301849420416 := 301849420418&301849420417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 301849420417 := 84 << 41
(smt.stats   21   2607  45702  78057  3118/2892/154    2981/248    20   64   20.49)
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 17990 := 17991&17990
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 17990 := 132 << 17
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 25 := 17991&25
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 16 := 17991&25
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 16 := 17991&25
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 25 := 17991&25
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 16 := 17991&25
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 16 := 17991&26
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 15 := 17991&25
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 16 := 17991&25
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 25 := 17991&25
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&26
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&26
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&28
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&28
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 8796093022240 := 132 << 17
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&28
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&28
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 12 := 17991&28
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 20 := 17991&28
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&26
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 2 := 17991&26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 8796093022234 := 132 << 17
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1 := 17991&26
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&26
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 2 := 17991&26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #804 #808) 64)) 8796093022234 := 132 << 17
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 2 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 4398046511103 := 66 << 18
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 4398046508505 := 66 << 18
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 4398046508505 := 66 << 18
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 4398046508505 := 66 << 18
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 17989 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 17988 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 224 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 256 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 512 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 512 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1024 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 2048 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 16384 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 576 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 576 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 640 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 576 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 576 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 640 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1536 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 2048 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1024 := 17991&17301504
(smt.stats   22   2718  47876  80731  3259/3000/267    3116/266    21   88   20.90)
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1024 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1024 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1024 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 16384 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 9 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 8 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 1 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 256 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 4 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 17991 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 17990 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 17988 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 216 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 224 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 256 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 512 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 1024 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 2048 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 16384 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 212 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 211 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 210 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 256 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 512 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 256 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 256 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 224 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 224 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 2048 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 2048 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 1024 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 1024 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 16384 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 12288 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 8192 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 4096 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 216 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 16 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 64 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 128 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 1 := 17991&17301504
(smt.stats   23   2840  50507  89290  3467/3098/313    3298/288    21   88   21.48)
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&17301504
band: (band[42] (if (or #583 #584 #585) 0 (if #586 1 #694)) (shl[42] (bv2int %0) (+ 42 #702))) 128 := 17991&17301504
band: (band[42] (if (or #558 #563 #568) 0 (if #553 1 #790)) (shl[64] (* 2 #107) (mod #812 64))) 0 := 17991&6291448
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   24   2974  53911  96694  3493/3254/448    3627/327    22  125   21.86)
ramon: poll                 wall=2.000s usage=1.911s mem=23120KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.909s mem=23724KiB load=1.00 rootload=1.00
(smt.stats   25   3121  57210 101325  3615/3303/448    3882/491    23  136   22.47)
ramon: poll                 wall=4.000s usage=3.909s mem=23900KiB load=1.00 rootload=1.00
(smt.stats   26   3282  58623 103289  3922/3492/448    4100/499    23  136   22.57)
ramon: poll                 wall=5.000s usage=4.908s mem=24144KiB load=1.00 rootload=1.00
(smt.stats   27   3459  63486 112326  4099/3724/448    4410/503    23  136   22.74)
(smt.stats   28   3560  67616 123258  4153/3878/449    4720/638    24  136   22.84)
(smt.stats   29   3671  74063 137775  4220/3899/450    4982/711    25  141   22.93)
ramon: poll                 wall=6.000s usage=5.908s mem=24500KiB load=1.00 rootload=1.00
(smt.stats   30   3793  77010 144959  4428/3988/450    5236/714    25  141   23.03)
(smt.stats   31   3927  81459 157285  4573/4250/450    5630/718    25  141   23.13)
ramon: poll                 wall=7.000s usage=6.908s mem=24780KiB load=1.00 rootload=1.00
(smt.stats   32   4074  85941 168702  4656/4321/452    5913/876    26  153   23.22)
(smt.stats   33   4235  91774 181423  4887/4569/454    6269/917    27  153   23.51)
ramon: poll                 wall=8.003s usage=7.912s mem=25256KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   34   4412  94268 191295  5345/5019/458    6606/1004    28  169   23.70)
(smt.stats   35   4606 103307 211862  5394/5053/466    7242/1121    29  208   23.89)
(smt.stats   36   4707 111739 231807  5445/5119/467    7537/1195    30  212   23.98)
ramon: poll                 wall=9.000s usage=8.908s mem=25424KiB load=1.00 rootload=0.99
(smt.stats   37   4818 119331 249418  5682/5152/467    7806/1196    30  212   24.08)
(smt.stats   38   4940 126493 271497  5756/5365/467    8176/1196    30  212   24.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 693)
(smt.stats   39   5074 130709 283824  5815/5459/477    8103/1332    31  218   24.36)
(smt.stats   40   5221 139895 310903  5886/5522/477    8615/1333    31  218   24.56)
ramon: poll                 wall=10.003s usage=9.911s mem=26180KiB load=1.00 rootload=1.01
(smt.stats   41   5382 150805 335038  5970/5594/480    9097/1402    32  268   24.84)
(smt.stats   42   5559 158446 356128  6020/5630/482   10135/1477    33  287   24.94)
ramon: poll                 wall=11.000s usage=10.907s mem=26968KiB load=1.00 rootload=0.99
(smt.stats   43   5753 170480 388749  6164/5698/482   10721/1717    34  301   25.03)
(smt.stats   44   5966 180019 416469  6364/5844/482   11577/1721    34  301   25.13)
(smt.stats   45   6067 185084 429292  6402/6022/482   11993/1721    34  301   25.32)
ramon: poll                 wall=12.003s usage=11.911s mem=27156KiB load=1.00 rootload=1.01
(smt.stats   46   6178 192537 462703  6475/6063/484   12349/2026    35  303   25.41)
(smt.stats   47   6300 200326 499363  6561/6142/484   12824/2049    36  311   25.41)
(smt.stats   48   6434 208573 530533  6603/6213/484   13205/2053    36  311   25.61)
ramon: poll                 wall=13.000s usage=12.907s mem=27460KiB load=1.00 rootload=0.99
(smt.stats   49   6581 215371 544468  6681/6284/484   13641/2060    36  311   25.71)
ramon: poll                 wall=14.000s usage=13.906s mem=27788KiB load=1.00 rootload=1.00
(smt.stats   50   6742 224083 557828  6969/6358/484   14066/2068    36  311   25.81)
(smt.stats   51   6919 231158 586427  7192/6833/486   14563/2270    37  314   26.00)
(smt.stats   52   7113 237601 614232  7219/6860/491   15673/2481    38  358   26.09)
ramon: poll                 wall=15.000s usage=14.906s mem=28060KiB load=1.00 rootload=1.00
(smt.stats   53   7326 247974 664801  7244/6878/494   16428/2482    38  358   26.28)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   54   7560 255966 696954  7371/6947/494   17099/2517    39  412   26.48)
(smt.stats   55   7661 258757 716206  7388/7011/495   17472/2563    40  433   26.48)
ramon: poll                 wall=16.000s usage=15.906s mem=28348KiB load=1.00 rootload=1.00
(smt.stats   56   7772 261605 725812  7471/7015/495   17647/2564    40  433   26.67)
ramon: poll                 wall=17.000s usage=16.906s mem=28504KiB load=1.00 rootload=1.00
(smt.stats   57   7894 264932 746185  7713/7125/495   17913/2564    40  433   26.70)
(smt.stats   58   8028 269456 760798  7777/7342/495   18227/2567    40  433   26.89)
ramon: poll                 wall=18.000s usage=17.906s mem=28828KiB load=1.00 rootload=1.00
(smt.stats   59   8175 274992 786289  7956/7423/495   18773/2572    40  433   26.99)
(smt.stats   60   8336 278032 795187  8220/7634/495   19022/2577    40  433   27.08)
(smt.stats   61   8513 282921 825394  8249/7876/499   19757/2730    41  440   27.18)
ramon: poll                 wall=19.000s usage=18.905s mem=28920KiB load=1.00 rootload=1.00
(smt.stats   62   8707 293748 861381  8310/7921/501   20202/2730    41  440   27.28)
ramon: poll                 wall=20.000s usage=19.905s mem=28920KiB load=1.00 rootload=1.00
(smt.stats   63   8920 301137 889349  8502/8129/504   20766/2783    42  495   27.37)
ramon: end                  Fri Nov  1 18:58:17 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.003s
ramon: group.utime          19.995s
ramon: group.stime          0.008s
ramon: group.mempeak        29432KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.097s
ramon: loadavg              1.00
