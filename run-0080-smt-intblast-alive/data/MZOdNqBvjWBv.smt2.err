ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:13:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25978 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1406
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MZOdNqBvjWBv.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4193469
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 1 := 204 << 29
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 1 := 204 << 29
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 1 := 204 << 29
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450944
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 103 := 102 << 30
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450944
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 103 := 102 << 30
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450944
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 103 := 102 << 30
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450944
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 6442450943 := 102 << 30
(smt.stats    0    101   2456    568  1008/874/106      93/17     7   17   19.08)
(smt.stats    1    202   4972   1721  1106/950/117     197/21     9   22   19.17)
(smt.stats    2    313   6399   2911  1228/1035/117     322/23     9   22   19.36)
(smt.stats    3    414   7797   5789  1284/1143/118     432/29    10   26   19.36)
(smt.stats    4    525   8736   7666  1673/1512/133     500/41    13   50   19.47)
(smt.stats    5    647   9960   9608  1772/1612/136     644/54    15   56   19.47)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 4294967295 := 8 << 28
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 3028728994 := 10 << 27
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 22 << 21
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450943
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 15032385535 := 28 << 18
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 28798532770 := 54 << 5
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3221225471
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 28991029247 := 54 << 5
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 28798532770 := 54 << 5
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 28798532770 := 60 << 2
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 28798532770 := 60 << 2
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 28798532770 := 62 << 1
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  10779  10680  1818/1626/136     778/57    15   56   19.56)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 2 << 31
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 2 << 31
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 2 << 31
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 2 << 31
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&8589933965
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 257698037133 := 2 << 31
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 2 << 31
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 4 << 30
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 4 << 30
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967296
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 8589933965 := 1 << 32
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967296
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 8589933965 := 1 << 32
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967296
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 8589933965 := 1 << 32
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 4294967297 := 4 << 30
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967296
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 8589933965 := 2 << 31
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967296
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 4294967295 := 2 << 31
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 1 := 1&3028728994
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 1 := 1&3028728994
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 1&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 0 << 32
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 1&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 252136832162 := 0 << 32
(smt.stats    7    860  11921  12416  1972/1808/207     907/74    18   88   19.98)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 2 := 16 << 24
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 6 := 16 << 24
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 16 << 24
(smt.stats    8    982  14074  17031  2156/1941/215    1026/105    19  100   20.17)
(smt.stats    9   1116  16298  21208  2175/1975/220    1159/107    20  101   20.36)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&64
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 32 << 1
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&64
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 32 << 1
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&64
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 32 << 1
(smt.stats   10   1217  18161  23720  2218/1991/220    1254/117    21  101   20.46)
(smt.stats   11   1328  20074  27712  2231/2027/225    1387/119    22  102   20.56)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&87
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 18446744065119617111 := 88 << 21
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 18446744065119617025 := 88 << 21
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&184549376
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 44 << 22
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&184549376
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 44 << 22
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&184549376
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 44 << 22
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&184549376
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 44 << 22
ramon: poll                 wall=1.000s usage=0.933s mem=21748KiB load=0.93 rootload=0.92
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&77
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 77 := 76 << 27
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&100
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 100 := 76 << 27
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  21819  31207  2268/2033/225    1515/132    23  102   20.56)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 17179869193 := 8 << 28
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 17179869193 := 8 << 28
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&2147483648
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 9 := 4 << 29
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&2147483648
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 101 := 4 << 29
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3758096383
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12348030975 := 46 << 9
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901889 := 56 << 4
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901887 := 56 << 4
(smt.stats   13   1584  23558  34363  2334/2074/230    1647/142    24  103   20.65)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901887 := 56 << 4
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 56 << 4
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 40 << 12
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901887 := 24 << 20
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 17179869183 := 24 << 20
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450945
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 15032385537 := 24 << 20
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 32 << 16
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901889 := 48 << 8
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901887 := 48 << 8
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 48 << 8
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4831838209
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 13421772801 := 50 << 7
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&5368709121
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 13958643713 := 52 << 6
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&5368709121
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 13958643713 := 52 << 6
(smt.stats   14   1731  26422  38279  2440/2144/245    1801/156    25  106   20.75)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901889 := 52 << 6
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 58 << 3
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901889 := 60 << 2
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901889 := 60 << 2
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450945
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 15032385537 := 62 << 1
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450945
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 15032385537 := 62 << 1
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&5368709121
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 13958643713 := 20 << 22
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&5368709119
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 13958643711 := 20 << 22
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&5368709119
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 13958643711 := 20 << 22
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 17179869183 := 44 << 10
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901889 := 36 << 14
(smt.stats   15   1832  27991  41528  2553/2273/275    1902/165    26  112   20.94)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&2147483649
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 10737418241 := 50 << 7
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&2147483649
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 10737418241 := 50 << 7
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728993
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663585 := 58 << 3
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&83886079
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 8673820671 := 40 << 12
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 8589934634 := 40 << 12
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 42 << 11
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 26 << 19
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 26 << 19
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901887 := 30 << 17
(smt.stats   16   1943  29512  45166  2622/2363/295    2008/179    27  116   21.04)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 14 << 25
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901887 := 18 << 23
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 34 << 15
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 17179869183 := 38 << 13
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 36 << 14
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901887 := 36 << 14
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967298
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901890 := 30 << 17
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967298
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 12884901890 := 30 << 17
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 12 << 26
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 11618663586 := 12 << 26
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450945
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 15032385537 := 28 << 18
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450945
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 15032385537 := 28 << 18
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 71748205730 := 18 << 23
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 54568336546 := 14 << 25
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3758096383
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 55297703935 := 14 << 25
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 37388467362 := 14 << 25
(smt.stats   17   2065  31689  48655  2720/2431/310    2129/186    28  119   21.23)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 63158271138 := 26 << 19
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 73014444031 := 26 << 19
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 167503724543 := 42 << 11
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 114697878690 := 42 << 11
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 114697878690 := 42 << 11
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967295
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 176093659135 := 46 << 9
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 166237486242 := 44 << 10
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 166237486242 := 44 << 10
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3221225471
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 20401094655 := 38 << 13
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 20208598178 := 38 << 13
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 20208598178 := 34 << 15
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3221225473
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 20401094657 := 38 << 13
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3028728994
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 20208598178 := 32 << 16
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&8589934459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 25769803643 := 32 << 16
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&4294967297
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 30064771073 := 36 << 14
(smt.stats   18   2200  34825  53153  2839/2547/335    2276/205    29  124   21.32)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 23622320128 := 12 << 26
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 23622320128 := 12 << 26
(smt.stats   19   2347  38846  60920  2880/2612/335    2446/215    30  124   21.51)
(smt.stats   20   2508  44056  67153  2905/2641/336    2606/247    31  131   21.86)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&8589934591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 42949672959 := 266 << 31
(smt.stats   21   2609  45723  70528  2916/2653/336    2728/247    31  131   21.86)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 8589934593 := 282 << 23
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&6442450945
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #963 #292 #733) 64)) 15032385537 := 278 << 25
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&738197504
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 101 := 139 << 26
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&738197504
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 101 := 139 << 26
(smt.stats   22   2720  48846  74727  2966/2677/336    2843/248    31  131   21.86)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&2415919104
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 6 := 137 << 28
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&2415919104
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 6 := 137 << 28
(smt.stats   23   2842  51633  78033  3010/2730/341    2966/256    32  132   21.86)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1342177280
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 138 << 27
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1342177280
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 138 << 27
(smt.stats   24   2976  54030  80785  3034/2749/346    3110/258    33  133   21.96)
ramon: poll                 wall=2.000s usage=1.933s mem=23340KiB load=1.00 rootload=0.99
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&768
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 767 := 96 << 3
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&768
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 767 := 96 << 3
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&768
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 767 := 96 << 3
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&768
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 767 := 96 << 3
(smt.stats   25   3123  59207  87457  3074/2778/351    3271/260    33  133   22.05)
(smt.stats   26   3284  64723  94173  3082/2814/356    3432/273    34  135   22.15)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&520
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 130 << 2
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&520
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 0 := 130 << 2
(smt.stats   27   3461  68134  99828  3119/2823/356    3614/275    35  135   22.53)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3008
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 3009 := 94 << 5
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3008
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 3009 := 94 << 5
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3008
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 3009 := 94 << 5
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3008
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 753 := 94 << 5
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&3008
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 3007 := 94 << 5
(smt.stats   28   3562  71149 103292  3145/2847/361    3723/279    36  136   22.63)
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1520
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 8589934461 := 95 << 4
band: (band[33] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #773 1 #835)) (shl[64] (* 2 #116) (mod #978 64))) 0 := 0&1520
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 8589934461 := 95 << 4
(smt.stats   29   3673  76034 109653  3191/2913/388    3816/286    37  140   22.82)
(smt.stats   30   3795  86242 117511  3212/2920/388    3889/284    38  190   23.01)
ramon: poll                 wall=3.000s usage=2.933s mem=24540KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.932s mem=24720KiB load=1.00 rootload=1.00
(smt.stats   31   3929  92316 124111  3347/2937/388    4045/286    38  190   23.29)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  96818 128902  3484/3186/388    4209/286    38  190   23.39)
ramon: poll                 wall=5.000s usage=4.932s mem=24820KiB load=1.00 rootload=1.00
(smt.stats   33   4237 103477 142062  3623/3219/388    4397/294    38  190   23.58)
ramon: poll                 wall=6.005s usage=5.936s mem=25672KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.931s mem=25516KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.931s mem=25788KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.931s mem=26044KiB load=1.00 rootload=1.00
(smt.stats   34   4414 104179 143924  4155/3454/388    4589/300    38  190   24.19)
ramon: poll                 wall=10.000s usage=9.931s mem=26044KiB load=1.00 rootload=1.00
(smt.stats   35   4608 109796 155804  4418/3980/388    4889/302    38  190   24.28)
ramon: poll                 wall=11.000s usage=10.930s mem=26044KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.005s usage=11.934s mem=26084KiB load=1.00 rootload=1.00
(smt.stats   36   4709 110119 156808  4622/4236/388    4994/303    38  190   24.47)
ramon: poll                 wall=13.000s usage=12.930s mem=26200KiB load=1.00 rootload=0.99
(smt.stats   37   4820 112159 160498  4927/4531/389    5163/363    39  193   24.56)
ramon: poll                 wall=14.000s usage=13.930s mem=26204KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.929s mem=26360KiB load=1.00 rootload=1.00
(smt.stats   38   4942 114571 165736  5176/4703/389    5379/364    39  193   24.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 84)
(smt.stats   39   5076 120161 172105  5229/4927/389    5532/365    39  193   24.75)
ramon: poll                 wall=16.000s usage=15.929s mem=26420KiB load=1.00 rootload=1.00
(smt.stats   40   5223 128213 185828  5316/4965/389    5850/371    39  193   24.75)
ramon: poll                 wall=17.000s usage=16.929s mem=26532KiB load=1.00 rootload=1.00
(smt.stats   41   5384 135724 197174  5501/5069/389    6129/380    39  193   24.94)
ramon: poll                 wall=18.000s usage=17.928s mem=26688KiB load=1.00 rootload=1.00
(smt.stats   42   5561 144478 212326  5728/5308/389    6427/380    39  193   25.13)
ramon: poll                 wall=19.000s usage=18.928s mem=26784KiB load=1.00 rootload=1.00
(smt.stats   43   5755 149595 218899  6107/5475/390    6729/596    40  196   25.23)
ramon: poll                 wall=20.000s usage=19.928s mem=27092KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:13:27 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.998s
ramon: group.utime          19.978s
ramon: group.stime          0.020s
ramon: group.mempeak        27348KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
