ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:44:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25106 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1400
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/eEK0AjOxoqeK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             104910
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4960    905  1150/1038/97     105/27     3   16   19.17)
(smt.stats    1    202   5926   1694  2168/1927/100     196/30     5   19   19.30)
(smt.stats    2    313   7409   2716  2268/2048/100     307/32     5   19   19.43)
(smt.stats    3    415   8285   4045  2322/2111/109     398/45     8   28   19.55)
(smt.stats    4    526   9580   5642  2335/2113/110     508/47     8   28   19.55)
(smt.stats    5    648  11556   7117  2348/2136/111     612/56    10   41   19.68)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738366&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738366&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738365&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738365&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738364&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738366&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738365&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738364&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 34359738360&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 4&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 8&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 16&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 8&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 16&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 32&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 32&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 8&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 24&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 16&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 64&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 128&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 128&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 256&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 256&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 512&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 512&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 1024&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 1024&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 128&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 256&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 512&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 512&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 2048&34359738367
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    749  13095   8399  2471/2151/112     721/59    11   41   20.28)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 16&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 16&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 16 := 16&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 16 := 17 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 8&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 8 := 8&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 8 := 9 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 8 := 24&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 16 := 24&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 24&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 8 := 24&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 24&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 8 := 24&34359738367
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 24 := 24&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 24 := 25 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 24 := 24&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 24 := 268435457 << 36
(smt.stats    7    860  15156   9891  2505/2252/238     847/61    11   41   20.30)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 24&68719476735
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 8 := 24&68719476735
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 24 := 24&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 24 := 25 << 37
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 8 := 8&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 8 := 268435457 << 37
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 8 := 8&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 8 := 268435455 << 37
(smt.stats    8    982  17637  12862  2521/2292/258     953/75    13   72   20.40)
(smt.stats    9   1116  20094  17600  2555/2334/264    1043/84    15  122   20.40)
(smt.stats   10   1217  22554  20600  2575/2355/265    1143/84    15  122   20.40)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 16&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 16 := 16&137438953471
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1152922604118474768 := 16777233 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 15 := 17&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 17&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1 := 17&137438953471
(smt.stats   11   1328  25623  24725  2597/2358/265    1251/88    16  129   20.52)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 16 := 17&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 16 := 17&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 16 := 17&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 16 := 17&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 16 := 17&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 17 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 17 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 17 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 21 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 17 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 21 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 17 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 21 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 17 := 25&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 81 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 85 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 81 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 81 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 145 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 273 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 273 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 273 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 273 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 149 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 145 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 529 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 53 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 49 := 1041&137438953471
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 53 := 1041&137438953471
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  27286  27547  2731/2512/319    1524/181    18  145   20.71)
(smt.stats   13   1584  30624  31097  2756/2522/320    1729/186    18  145   20.81)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1033 := 7502&2047
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1033 := 7503&2047
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1035 := 7503&2047
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1039 := 7503&2047
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1135 := 7503&2047
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1103 := 7503&2047
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1359 := 7503&2047
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1152921504606854479 := 0 << 12
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1871 := 9551&2047
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1871 := 9551&2047
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1359 := 9551&2047
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1152921504606856527 := 2 << 12
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1 := 9547&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1152921504606856523 := 9545 << 2
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 1 := 9547&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1152922604118484299 := 0 << 2
(smt.stats   14   1731  34288  37704  2964/2740/341    2017/272    20  162   20.90)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&1
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 824633720832 << 2
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&1
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 824633720831 := 824633720832 << 2
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&1
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1 := 824633720832 << 2
(smt.stats   15   1833  37138  42173  3022/2795/349    2203/294    22  185   21.05)
(smt.stats   16   1944  38939  47108  3126/2875/354    2493/294    22  185   21.14)
(smt.stats   17   2066  40525  50752  3148/2896/357    2679/367    23  192   21.26)
(smt.stats   18   2200  41609  56855  3160/2908/357    2868/444    24  196   21.36)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 12 := 12&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 12 := 12 << 6
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 12 := 12&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 12 := 12 << 6
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 12 := 12&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 12 := 12 << 6
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 12 := 12&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 12 := 13 << 6
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 12 := 12&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 12 := 13 << 6
(smt.stats   19   2347  46263  70281  3232/2968/369    3090/465    25  201   21.36)
(smt.stats   20   2508  52490  87316  3245/2981/373    3286/506    27  218   21.53)
ramon: poll                 wall=1.000s usage=0.923s mem=22712KiB load=0.92 rootload=0.91
(smt.stats   21   2609  56615 101826  3248/2985/376    3395/526    29  230   21.53)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1152921504606846976 := 0 << 3
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1152921504606846976 := 0 << 3
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&3
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1 := 274877906944 << 3
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&3
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1 := 274877906944 << 3
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&3
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 4 := 274877906944 << 3
(smt.stats   22   2720  58236 106265  3317/3043/387    3512/535    29  230   21.65)
(smt.stats   23   2842  60401 112005  3373/3099/390    3656/550    30  238   21.65)
(smt.stats   24   2976  63879 123190  3397/3123/393    3917/563    31  258   21.81)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&68719476735
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 805306369 := 275079233536 << 37
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&68719476735
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1610612737 := 275079233536 << 37
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&68719476735
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1610612737 := 275079233536 << 37
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&68719476735
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 68719476736 := 275079233536 << 37
(smt.stats   25   3123  65525 127930  3432/3128/394    4117/570    31  258   22.02)
(smt.stats   26   3284  68981 136357  3502/3225/400    4263/587    32  274   22.02)
(smt.stats   27   3461  75994 164595  3516/3228/400    4485/597    33  275   22.12)
(smt.stats   28   3562  80036 173634  3579/3287/403    4630/615    34  280   22.26)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 10368&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 9223373136366413952 := 1 << 2
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 10368&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 2199023265920 := 1 << 2
(smt.stats   29   3673  83383 182516  3615/3313/410    4783/646    35  283   22.26)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 12&1
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 0 (if #580 1 #688))) 1 := 12&1
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 12&1
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 0 (if #580 1 #688))) 1 := 12&1
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 4 := 4 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 4 := 7 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 4&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 8 := 2 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 4&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 274877906946 := 2 << 1
(smt.stats   30   3795  85855 188066  3664/3339/410    4919/649    35  283   22.48)
(smt.stats   31   3929  90790 204004  3692/3392/432    5157/672    36  303   22.58)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  94903 213500  3717/3408/435    5350/715    37  306   22.69)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&16383
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1099511627776 := 549755813888 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&16383
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1099511627776 := 549755813888 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&16383
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1099511627776 := 549755813888 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&16383
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1099511627776 := 549755813888 << 15
ramon: poll                 wall=2.004s usage=1.925s mem=23988KiB load=1.00 rootload=1.00
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&16383
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1099511627776 := 275079233536 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&16383
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 1099511627776 := 275079233536 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&16383
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 16380 := 33554432 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&16383
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 2 := 33554432 << 15
(smt.stats   33   4237  98891 221344  3817/3431/435    5529/729    37  306   22.88)
(smt.stats   34   4414 102504 233502  3819/3508/446    5785/763    38  312   22.88)
(smt.stats   35   4608 111127 253214  3926/3592/446    6134/795    39  312   22.99)
(smt.stats   36   4709 115714 267263  3929/3595/446    6274/795    39  312   23.06)
(smt.stats   37   4820 118501 274998  3941/3608/451    6416/874    40  322   23.16)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 0&3
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 5 := 0 << 3
(smt.stats   38   4942 120873 282179  3950/3614/454    6564/875    40  322   23.25)
(smt.delete-inactive-clauses  :num-deleted-clauses 359)
(smt.stats   39   5076 123360 290180  3980/3644/457    6383/895    41  330   23.25)
(smt.stats   40   5223 132762 318869  3982/3646/457    6557/895    41  330   23.25)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (or #708 #709) 0 (if #710 1 #854))) 0 := 549755813952&1
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 0 (if #580 1 #688))) 1 := 549755813952&1
(smt.stats   41   5384 139398 331571  4011/3651/457    6820/912    42  332   23.35)
ramon: poll                 wall=3.000s usage=2.921s mem=24656KiB load=1.00 rootload=0.99
(smt.stats   42   5561 143217 339674  4142/3679/457    7072/926    42  332   23.56)
ramon: poll                 wall=4.000s usage=3.921s mem=25204KiB load=1.00 rootload=1.00
(smt.stats   43   5755 145082 348270  4435/3929/457    7306/942    42  332   24.23)
ramon: poll                 wall=5.000s usage=4.921s mem=25692KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.920s mem=25884KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   44   5968 145584 349073  4868/4486/458    7530/1035    43  334   24.61)
(smt.stats   45   6069 150517 359173  5681/5292/465    7812/1037    43  334   24.71)
(smt.stats   46   6180 153215 369593  5714/5345/465    7972/1087    44  343   24.71)
ramon: poll                 wall=7.004s usage=6.922s mem=26212KiB load=1.00 rootload=1.00
(smt.stats   47   6302 159648 386923  5766/5353/465    8335/1091    44  343   24.71)
(smt.stats   48   6436 165119 403381  5845/5419/465    8708/1097    44  343   24.83)
(smt.stats   49   6583 172943 417357  5934/5484/465    9064/1101    44  343   24.94)
ramon: poll                 wall=8.004s usage=7.922s mem=26732KiB load=1.00 rootload=1.00
(smt.stats   50   6744 184883 446912  6190/5611/465    9787/1113    44  343   25.04)
(smt.stats   51   6921 191508 469609  6221/5847/465   10321/1113    44  343   25.13)
(smt.stats   52   7115 201735 517093  6278/5901/465   11039/1113    44  343   25.34)
ramon: poll                 wall=9.000s usage=8.914s mem=26988KiB load=1.00 rootload=0.99
(smt.stats   53   7328 208273 557377  6301/5924/468   11518/1755    46  354   25.44)
(smt.stats   54   7562 215820 585591  6461/5947/468   12051/1757    46  354   25.53)
ramon: poll                 wall=10.000s usage=9.912s mem=27160KiB load=1.00 rootload=1.00
(smt.stats   55   7663 219835 596805  6610/6092/468   12250/1761    46  354   25.63)
ramon: poll                 wall=11.000s usage=10.912s mem=27160KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.910s mem=27624KiB load=1.00 rootload=1.00
(smt.stats   56   7774 221330 599939  6915/6319/468   12416/1775    46  354   25.82)
ramon: poll                 wall=13.000s usage=12.909s mem=27824KiB load=1.00 rootload=0.99
(smt.stats   57   7896 225301 615843  7252/6685/470   12667/2026    47  392   25.92)
(smt.stats   58   8030 228511 624727  7369/6976/470   12990/2027    47  392   25.92)
ramon: poll                 wall=14.000s usage=13.909s mem=27824KiB load=1.00 rootload=1.00
(smt.stats   59   8177 230612 636679  7549/6995/470   13354/2033    47  392   26.13)
ramon: poll                 wall=15.000s usage=14.909s mem=27824KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.908s mem=28048KiB load=1.00 rootload=1.00
(smt.stats   60   8338 231892 641148  7835/7205/470   13687/2033    47  392   26.23)
(smt.stats   61   8515 236592 656859  8272/7746/470   14068/2034    47  392   26.33)
ramon: poll                 wall=17.000s usage=16.907s mem=28236KiB load=1.00 rootload=1.00
(smt.stats   62   8709 245123 691970  8294/7915/471   15057/2477    48  393   26.42)
(smt.stats   63   8922 253173 716929  8334/7923/472   15459/2705    49  401   26.52)
ramon: poll                 wall=18.000s usage=17.906s mem=28748KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   64   9156 263372 748264  8445/7966/475   16039/2709    49  401   26.72)
(smt.stats   65   9413 273743 812994  8463/8081/475   16411/2841    50  449   27.07)
(smt.stats   66   9514 276624 823815  8512/8116/475   16700/2843    50  449   27.18)
ramon: poll                 wall=19.000s usage=18.906s mem=29388KiB load=1.00 rootload=1.00
(smt.stats   67   9625 281407 839065  8622/8132/475   16898/2846    50  449   27.28)
ramon: poll                 wall=20.004s usage=19.912s mem=29416KiB load=1.00 rootload=1.01
ramon: end                  Fri Nov  1 18:45:10 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.990s
ramon: group.utime          19.970s
ramon: group.stime          0.020s
ramon: group.mempeak        29416KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              1.00
