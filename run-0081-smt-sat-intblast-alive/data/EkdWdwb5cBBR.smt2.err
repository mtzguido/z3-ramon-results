ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:59:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29397 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EkdWdwb5cBBR.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             326984
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   228/228     0/0  61       0    18.51   0.00)
(sat.stats    101    765    0   228/228   101/28  61       0    18.82   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 310 :time 0.00)
(sat.stats    101    765    0   228/228   101/28  61       0    18.82   0.01)
(sat.stats    101    765    0   228/228   101/28  61       0    18.82   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 358218.82 :time 0.00)
(sat.stats    101    765    0   230/230    37/27  61       0    18.82   0.01)
(sat.stats    282   3093    1   230/230   218/162  61       0    18.92   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    285   3158    2   230/230   221/163  61       0    18.92   0.01)
(sat.stats    288   3257    3   230/230   224/164  61       0    18.92   0.01)
(sat.stats    291   3377    4   230/230   227/165  61       0    18.92   0.01)
(sat.stats    294   3468    5   230/230   230/166  61       0    18.92   0.01)
(sat.stats    297   3597    6   230/230   233/167  61       0    19.03   0.01)
(sat.stats    300   3670    7   230/230   236/169  61       0    19.03   0.01)
(sat.stats    303   3723    8   230/230   239/172  61       0    19.03   0.01)
(sat.stats    306   3829    9   230/230   242/174  61       0    19.03   0.01)
(sat.stats    309   3907   10   230/230   245/175  61       0    19.03   0.02)
(sat.stats    312   3952   11   230/230   248/178  61       0    19.03   0.02)
(sat.stats    315   4068   12   230/230   251/179  61       0    19.03   0.02)
(sat.stats    318   4169   13   230/230   254/179  61       0    19.03   0.02)
(sat.stats    321   4249   14   230/230   257/180  61       0    19.03   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 3 :cost 2170 :time 0.00)
(sat.stats    518   8603   40   280/280   448/246  68       0    19.70   0.25)
ramon: poll                 wall=1.000s usage=0.942s mem=21984KiB load=0.94 rootload=0.94
ramon: poll                 wall=2.000s usage=1.941s mem=22992KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.940s mem=23592KiB load=1.00 rootload=1.00
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1138  14103   48  4805/4805  1150/307  68       0    22.20   3.09)
(sat.stats   1141  14105   49  4805/4805  1153/307  68       0    22.20   3.10)
(sat.stats   1668  27494  110 13450/13450  1979/508  68       0    24.47   3.89)
ramon: poll                 wall=4.005s usage=3.943s mem=25636KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 90 :elim-clauses 1 :cost 10430 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 15169 :time 0.00)
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #63))) 0 := 281474976710601 >>l 39
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #561 #565) 64)) 9223372036852973568 := 9223372036852973568 >>l 54
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 436 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 459 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 458 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 504 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 400 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 448 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 32 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 128 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 256 := 511&2048
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 45 := 2048&511
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 274 := 2048&511
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 428 := 2048&511
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 72 := 2048&511
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 128 := 2048&511
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 16 := 2048&511
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 64 := 2048&511
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 32 := 2048&511
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 511&2048
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 256 := 2048&511
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #63))) 511 := 281474976710638 >>l 2
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 70368744177659&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #561 #565) 64)) 70368744186936 := 9223372036854185984 >>l 17
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #63))) 70368744177650 := 281474976710603 >>l 37
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 2047&8192
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #561 #565) 64)) 1626 := 9223372036853039104 >>l 52
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 512 := 2047&8192
(sat.stats   2429  62276  268 17827/17789  3162/916  87       0    26.07   4.50)
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 1024 := 2047&8192
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 2047&8192
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 1536 := 8192&2047
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #454)) (if (= #82 47) 562949953421312 (if #458 281474976710656 #550))) 0 := 2047&8192
band: (band[48] (if (= #280 63) 36893488147419103232 (if #433 18446744073709551616 #431)) (lshr[64] (* 32768 #56) (mod #568 64))) 1024 := 8192&2047
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 24619 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 26884 :time 0.00)
 (sat-cleaner :elim-literals 95 :elim-clauses 2 :cost 27984 :time 0.00)
ramon: poll                 wall=5.000s usage=4.936s mem=28304KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.935s mem=29904KiB load=1.00 rootload=1.00
(sat.stats   3645 106142  304 39943/39904  5125/1421 246       0    29.34   6.54)
ramon: poll                 wall=7.000s usage=6.934s mem=30684KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 37791 :time 0.00)
ramon: poll                 wall=8.000s usage=7.934s mem=34404KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.933s mem=34876KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.932s mem=35080KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.931s mem=35424KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.930s mem=35624KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.929s mem=35864KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.929s mem=36252KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.928s mem=36664KiB load=1.00 rootload=1.00
(sat.stats   8552 192320  436 93196/93157  8563/2047 250       0    36.07  15.31)
(sat.stats :conflicts  :restarts        :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   8820 197408  437 94327/94288  8735/2072 250       0    36.16  15.76)
ramon: poll                 wall=16.000s usage=15.927s mem=37664KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 55001 :time 0.00)
ramon: poll                 wall=17.000s usage=16.926s mem=39088KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.925s mem=39100KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.924s mem=39112KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.924s mem=39128KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:59:49 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.987s
ramon: group.utime          19.975s
ramon: group.stime          0.012s
ramon: group.mempeak        39388KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
