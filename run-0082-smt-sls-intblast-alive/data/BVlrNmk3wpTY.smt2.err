ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:54:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29022 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BVlrNmk3wpTY.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             683771
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1       200     10000        49          0            1        2)
(sat.ddfw       1      1    98.049     20001        98          1            1        3)
(smt.stats    0    101   2845    756   835/582/105     133/73     6   19   51.58)
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 9&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 9&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 2&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 1&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 2&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 4&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 1&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 1 := 1&511
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 1 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 1&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 1 := 1&511
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 1 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 511 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 510 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 508 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 504 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 496 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 448 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10272&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10244&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10272&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10272&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10304&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10272&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 32 := 10272&511
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 10272 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 511 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 510 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 508 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 10241 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 33554431 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 33554431 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 1 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 8 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 64 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 64 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 256 := 10240&511
(smt.stats    1    202   4195   2454  1170/1048/227     274/86    10   49   52.08)
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 8 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 2 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 10239 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 1 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 510 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 2 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 8 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 64 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 8 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 64 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
(sat.ddfw       1      1   89.6861     40001       196          2            1        5)
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 1 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 2 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 1 := 10240&511
(smt.stats    2    313   5981   4891  1326/1197/332     543/143    13   75   52.68)
(smt.stats    3    416   7972   8479  1506/1367/351     807/186    17   86   52.97)
(sat.ddfw       1      1   73.5294     70001       343          3            1        8)
(smt.stats    4    527  10364  13831  1581/1429/367    1115/291    21  156   53.16)
(sat.ddfw       1      1   61.6333    110001       539          4            1       12)
(smt.stats    5    649  11638  15896  1760/1486/367    1347/295    21  156   53.46)
ramon: poll                 wall=1.000s usage=0.934s mem=55820KiB load=0.93 rootload=0.91
(sat.ddfw       1      1   52.7416    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    750  12009  16658  1960/1695/367    1529/296    21  156   53.46)
(sat.ddfw       1      1   45.8023    220001      1078          6            1       23)
(smt.stats    7    861  13514  21031  2187/1934/369    1732/320    22  157   53.56)
(smt.stats    8    983  15815  27804  2300/2126/378    2253/465    24  174   53.75)
(sat.ddfw       1      1   40.3691    290001      1421          7            1       30)
ramon: poll                 wall=2.000s usage=1.932s mem=56208KiB load=1.00 rootload=1.00
(smt.stats    9   1117  18755  34955  2381/2143/383    2690/544    25  205   53.94)
(sat.ddfw       1      1   36.0848    370001      1813          8            1       38)
(smt.stats   10   1218  21217  40564  2542/2301/383    3022/550    25  205   54.04)
(smt.stats   11   1329  25265  49590  2585/2388/383    3225/551    25  205   54.13)
(sat.ddfw       1      1   32.6087    460001      2254          9            1       47)
(smt.stats   12   1451  28177  56922  2648/2476/388    3774/625    26  210   54.23)
ramon: poll                 wall=3.000s usage=2.929s mem=56468KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    29.753    560001      2745         10            1       57)
(smt.stats   13   1585  30056  62717  2726/2483/395    4500/679    27  228   54.42)
ramon: poll                 wall=4.000s usage=3.929s mem=56740KiB load=1.00 rootload=1.00
(smt.stats   14   1732  32120  68528  2947/2624/396    4872/718    28  272   54.61)
(sat.ddfw       1      1   27.3564    670001      3284         11            1       68)
(smt.stats   15   1833  33567  75984  3045/2819/397    5265/720    28  272   54.71)
(sat.ddfw       1      1   25.3058    790001      3872         12            1       80)
(smt.stats   16   1944  36427  83896  3144/2894/397    5604/776    29  279   54.80)
ramon: poll                 wall=5.000s usage=4.925s mem=57036KiB load=1.00 rootload=0.99
(smt.stats   17   2066  39820  94752  3202/2991/401    6109/860    30  306   54.80)
(sat.ddfw       1      1   23.5379    920001      4509         13            1       93)
(smt.stats   18   2200  42827 106387  3348/3041/401    6483/865    30  306   54.99)
ramon: poll                 wall=6.000s usage=5.923s mem=57404KiB load=1.00 rootload=1.00
(smt.stats   19   2347  45801 119416  3587/3251/404    7112/935    31  306   55.25)
(sat.ddfw       1      1   21.9987   1060001      5196         14            1      108)
(smt.stats   20   2508  49631 132035  3780/3444/404    7945/944    31  306   55.34)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2609  51112 140450  3924/3641/405    8226/1060    32  323   55.44)
ramon: poll                 wall=7.002s usage=6.976s mem=57664KiB load=1.05 rootload=1.05
(smt.stats   22   2720  53289 158409  4187/3851/405    8692/1060    32  323   55.53)
(sat.ddfw       1      1   20.6384   1210001      5931         15            1      123)
(smt.stats   23   2842  56999 183695  4377/4024/405    9285/1062    32  323   55.63)
(smt.stats   24   2976  59924 197377  4519/4237/405    9896/1063    32  323   55.82)
ramon: poll                 wall=8.000s usage=7.972s mem=58128KiB load=1.00 rootload=1.00
(smt.stats   25   3123  64529 211065  4668/4443/406   10848/1325    33  323   56.01)
(sat.ddfw       1      1   19.4363   1370001      6715         16            1      139)
(smt.stats   26   3284  70391 243124  4756/4502/406   11789/1330    33  323   56.20)
ramon: poll                 wall=9.000s usage=8.974s mem=58384KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.3585   1540001      7549         17            1      156)
(smt.stats   27   3461  74601 268851  4920/4594/406   12603/1332    33  323   56.39)
(smt.stats   28   3562  77233 282182  4978/4762/406   13673/1336    33  323   56.39)
(smt.stats   29   3673  80050 307244  5128/4819/406   14347/1337    33  323   56.49)
ramon: poll                 wall=10.000s usage=9.971s mem=58708KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.3997   1720001      8431         18            1      174)
(smt.stats   30   3795  83470 328680  5250/4960/406   15073/1339    33  323   56.79)
(smt.stats   31   3929  87575 355815  5364/5084/406   15693/1343    33  323   56.79)
ramon: poll                 wall=11.000s usage=10.969s mem=59288KiB load=1.00 rootload=1.00
(smt.stats   32   4076  90723 366327  5446/5201/406   16461/1345    33  323   56.91)
(sat.ddfw       1      1   16.5275   1910001      9362         19            1      193)
(smt.stats   33   4237  92787 376510  5742/5302/407   16732/1893    34  325   57.15)
ramon: poll                 wall=12.000s usage=11.971s mem=59332KiB load=1.00 rootload=1.00
(smt.stats   34   4414  94828 391595  5983/5628/407   17048/1894    34  325   57.24)
(smt.stats   35   4608  98359 414945  6189/5960/407   17934/1895    34  325   57.34)
(sat.ddfw       1      1   15.7468   2110001     10343         20            1      214)
ramon: poll                 wall=13.000s usage=12.999s mem=59644KiB load=1.03 rootload=1.03
(smt.stats   36   4709 102348 436977  6361/6179/408   19278/2229    35  326   57.60)
(smt.stats   37   4820 105776 458657  6515/6202/408   19772/2230    35  326   57.70)
(sat.ddfw       1      1   15.3599   2320001     11372         21            1      235)
(smt.stats   38   4942 108429 480755  6650/6355/408   20490/2232    35  326   57.79)
ramon: poll                 wall=14.002s usage=14.353s mem=59980KiB load=1.35 rootload=1.35
(smt.delete-inactive-clauses  :num-deleted-clauses 6)
(smt.stats   39   5076 110593 491862  6704/6485/408   21968/2234    35  326   57.99)
(smt.stats   40   5223 113716 518655  6770/6540/408   22922/2237    35  326   58.18)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5384 117789 547571  6915/6624/408   24126/2238    35  326   58.27)
(sat.ddfw       1      1   14.9072   2540001     12451         22            1      257)
(smt.stats   42   5561 120002 568905  7158/6759/409   24993/2907    36  336   58.37)
ramon: poll                 wall=15.000s usage=15.621s mem=60780KiB load=1.27 rootload=1.27
(smt.stats   43   5755 124415 622012  7293/6990/409   25934/2908    36  336   58.66)
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8687774&4194303
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8685212&4194303
(smt.stats   44   5968 127311 647982  7733/7136/409   27223/2915    36  336   58.85)
(smt.stats   45   6069 128882 663571  7795/7565/413   27612/3466    37  443   59.12)
ramon: poll                 wall=16.002s usage=16.625s mem=61548KiB load=1.00 rootload=1.00
(smt.stats   46   6180 130627 684787  7904/7647/413   28138/3467    37  443   59.12)
(sat.ddfw       1      1   14.2565   2770001     13578         23            1      280)
(smt.stats   47   6302 132048 694822  8023/7750/413   28388/3468    37  443   59.22)
ramon: poll                 wall=17.000s usage=17.621s mem=61548KiB load=1.00 rootload=1.00
(smt.stats   48   6436 133318 699696  8159/7887/413   28643/3468    37  443   59.31)
(sat.ddfw       1      1   13.6682   3010001     14754         24            1      305)
(smt.stats   49   6583 134676 716669  8437/8231/414   29101/3474    37  443   59.55)
ramon: poll                 wall=18.002s usage=18.624s mem=61880KiB load=1.00 rootload=1.00
(smt.stats   50   6744 136363 722566  8904/8575/414   29313/3611    38  445   59.55)
(smt.stats   51   6921 138201 765873  9146/8876/414   29717/3611    38  445   59.55)
ramon: poll                 wall=19.000s usage=19.581s mem=61996KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   13.0822   3260001     15980         25            1      330)
(smt.stats   52   7115 141383 819080  9374/9016/416   30717/3617    38  445   60.15)
ramon: poll                 wall=20.000s usage=20.467s mem=62592KiB load=0.89 rootload=0.88
(smt.stats   53   7328 145554 871670  9950/9261/416   31470/3770    39  466   60.34)
ramon: end                  Fri Nov  1 21:55:13 2024
ramon: root.execname        z3
ramon: root.utime           20.530s
ramon: root.stime           0.010s
ramon: group.total          20.556s
ramon: group.utime          20.536s
ramon: group.stime          0.020s
ramon: group.mempeak        62592KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.088s
ramon: loadavg              1.02
