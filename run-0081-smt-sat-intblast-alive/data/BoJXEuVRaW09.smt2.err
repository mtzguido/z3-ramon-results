ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:52:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29645 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BoJXEuVRaW09.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             305234
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   206/206     0/0  63       0    18.46   0.00)
(sat.stats    101    473    0   206/206   101/32  63       0    18.71   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 474 :time 0.00)
(sat.stats    101    473    0   206/206   101/32  63       0    18.71   0.00)
(sat.stats    101    473    0   206/206   101/32  63       0    18.71   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 402018.81 :time 0.00)
(sat.stats    101    473    0   206/206   101/32  63       0    18.81   0.00)
(sat.stats    106    487    1   206/206   106/37  63       0    18.81   0.00)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    109    532    2   206/206   109/40  63       0    18.81   0.00)
(sat.stats    112    608    3   206/206   112/43  63       0    18.81   0.00)
(sat.stats    115    692    4   206/206   115/45  63       0    18.81   0.00)
(sat.stats    118    752    5   206/206   118/45  63       0    18.81   0.01)
(sat.stats    121    820    6   206/206   121/45  63       0    18.81   0.01)
(sat.stats    124    891    7   206/206   124/45  63       0    18.81   0.01)
(sat.stats    127    997    8   206/206   127/47  63       0    18.81   0.01)
(sat.stats    159   1643    9   206/206   159/66  63       0    18.81   0.01)
(sat.stats    162   1710   10   206/206   162/67  63       0    18.81   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    311   4548   11   518/518   311/148  63       0    19.61   0.10)
(sat.stats    316   4897   12   518/518   316/148  63       0    19.61   0.10)
(sat.stats    321   5048   13   518/518   321/152  63       0    19.61   0.10)
(sat.stats    329   5367   14   518/518   329/153  63       0    19.61   0.10)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2491 :time 0.00)
(sat.stats    487  11627   23   940/940   492/182  72       0    19.71   0.20)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3887 :time 0.00)
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #58))) 1 := 1 >>l 18
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 1&137438429184
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #527 #531) 64)) 0 := 17592186044416 >>l 44
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 4370 :time 0.00)
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 5326 :time 0.00)
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 1 := 3932&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 1 := 3931&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 1616 := 3933&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 2 := 3933&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 8 := 3933&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 4 := 3933&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 864 := 3933&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 2816 := 3933&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 96 := 3901&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 1600 := 3901&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 128 := 3901&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 1536 := 3901&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 3072 := 3901&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 2048 := 3901&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 64 := 3805&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 128 := 3805&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 2 := 3807&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 4096 := 4097&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 8192 := 8193&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 16384 := 16385&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 32768 := 32769&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 65536 := 65537&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 131072 := 131073&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 262144 := 262145&137438429184
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 18644 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 219459 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 2 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 74832 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 8 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 368576 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 32 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 172672 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 349184 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 256 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 512 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 2048 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 344064 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 12288 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 8192 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 229376 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 65536 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 262144 := 137438429184&524287
band: (band[37] (lshr[37] (bv2int %0) (+ 37 #442)) (if (= #82 36) 9444732965670570950656 (if #446 4722366482835285475328 #516))) 0 := 524287&137438429184
band: (band[37] (if (= #242 63) 1267650600219006029459848429568 (if #418 633825300109503014729924214784 #415)) (lshr[64] (* 67108864 #64) (mod #534 64))) 131072 := 137438429184&524287
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 8076 :time 0.00)
(sat.stats    836  21802   41  4063/4060   881/296 335       0    21.80   0.42)
(sat.stats :conflicts   :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   1066  37543   89 11002/10998  1150/357 335       0    23.84   0.65)
ramon: poll                 wall=1.000s usage=0.998s mem=25972KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 17634 :time 0.00)
(sat.stats   1876  61602  191 17489/17485  1963/436 355       0    26.54   1.84)
ramon: poll                 wall=2.003s usage=2.000s mem=27680KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.993s mem=51428KiB load=1.00 rootload=0.98
(sat.stats   2398  76483  306 70046/70042  2538/546 355       0    54.13   3.29)
ramon: poll                 wall=4.000s usage=3.989s mem=61748KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.982s mem=85348KiB load=0.99 rootload=0.99
ramon: poll                 wall=6.000s usage=5.978s mem=92276KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.977s mem=97652KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.975s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.973s mem=103MiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.972s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.971s mem=109MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.968s mem=111MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.966s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.965s mem=149MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.965s mem=152MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.965s mem=154MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.965s mem=156MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.947s mem=157MiB load=0.98 rootload=0.98
ramon: poll                 wall=19.000s usage=18.945s mem=160MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.945s mem=164MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:52:28 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.070s
ramon: group.total          19.962s
ramon: group.utime          19.890s
ramon: group.stime          0.072s
ramon: group.mempeak        182MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.00
