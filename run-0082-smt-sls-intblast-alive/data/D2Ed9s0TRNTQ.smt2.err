ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:58:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28955 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/D2Ed9s0TRNTQ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             695916
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   98.0392     10000        49          0            1        2)
(sat.ddfw       1      1   50.7665     20001        98          1            1        3)
(smt.stats    0    101   1285    288  1157/959/98     106/10     6   14   51.93)
(sat.ddfw       1      1   51.8135     40001       196          2            1        5)
(smt.stats    1    202   2406    608  1490/1325/98     210/12     6   14   52.12)
(sat.ddfw       1      1    45.045     70001       343          3            1        8)
(smt.stats    2    313   2833    946  1662/1493/98     340/12     6   14   52.12)
ramon: poll                 wall=1.003s usage=0.961s mem=54452KiB load=0.96 rootload=0.95
(sat.ddfw       1      1   38.4986    110001       539          4            1       12)
(smt.stats    3    414   5693   3486  1761/1573/98     466/12     6   14   52.22)
(smt.stats    4    525   6654   4705  2228/1685/102     636/136     8   18   52.32)
(smt.stats    5    647   9640   6816  2365/2167/103     764/141     9   18   52.42)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  11666   8199  2407/2207/103     876/146     9   18   52.42)
(sat.ddfw       1      1    36.549    160000       784          5            1       17)
(smt.stats    7    859  13517  10258  2465/2246/103     991/148     9   18   52.52)
(smt.stats    8    981  15651  12019  2552/2362/105    1124/187    11   21   52.52)
(smt.stats    9   1115  18126  13891  2772/2431/105    1262/188    11   21   52.64)
(sat.ddfw       1      1   31.2018    220001      1078          6            1       23)
ramon: poll                 wall=2.000s usage=2.003s mem=54836KiB load=1.05 rootload=1.04
(smt.stats   10   1216  18945  15540  3084/2828/105    1364/189    11   21   52.84)
(sat.ddfw       1      1   27.1634    290001      1421          7            1       30)
(smt.stats   11   1327  19520  16339  3250/2960/105    1478/189    11   21   52.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  20719  19967  3380/3122/105    1610/189    11   21   52.94)
(smt.stats   13   1583  23903  23057  3394/3184/105    1741/189    11   21   53.04)
ramon: poll                 wall=3.003s usage=2.973s mem=55088KiB load=0.97 rootload=0.97
(smt.stats   14   1730  25715  26396  3420/3187/105    1898/189    11   21   53.04)
(smt.stats   15   1831  27130  29688  3429/3213/107    1994/217    12   26   53.04)
(smt.stats   16   1942  28648  34135  3431/3221/109    2118/217    13   26   53.13)
(sat.ddfw       1      1   24.4051    370001      1813          8            1       38)
(smt.stats   17   2064  30798  36740  3477/3225/109    2262/234    14   28   53.13)
(smt.stats   18   2198  33626  39407  3512/3282/109    2406/234    14   28   53.27)
ramon: poll                 wall=4.000s usage=3.903s mem=55516KiB load=0.93 rootload=0.93
(smt.stats   19   2345  35619  46057  3576/3339/109    2560/234    14   28   53.27)
(sat.ddfw       1      1   21.9138    460001      2254          9            1       47)
(smt.stats   20   2506  37091  52175  3617/3407/118    2719/262    15   29   53.27)
(smt.stats   21   2607  38643  55523  3665/3408/118    2826/262    15   29   53.27)
(smt.stats   22   2718  39985  59633  3671/3458/118    2928/287    16   37   53.27)
(smt.stats   23   2840  41326  62868  3671/3462/118    3050/287    16   37   53.39)
(smt.stats   24   2974  42383  67534  3691/3465/118    3185/287    16   37   53.39)
(smt.stats   25   3121  44503  71492  3720/3491/118    3337/287    16   37   53.39)
(smt.stats   26   3282  47180  79698  3768/3521/118    3500/288    16   37   53.39)
ramon: poll                 wall=5.003s usage=4.905s mem=55660KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   19.8689    560001      2745         10            1       57)
(smt.stats   27   3459  52285  89941  3812/3563/118    3701/288    16   37   53.72)
(smt.stats   28   3560  55031  94987  3830/3621/119    3799/304    17   40   53.63)
(smt.stats   29   3671  57908 104468  3877/3637/120    3915/304    17   40   53.63)
(smt.stats   30   3793  61896 108986  3926/3669/120    4038/329    18   41   53.80)
(smt.stats   31   3927  66076 116906  3980/3738/120    4168/329    18   41   53.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  69514 125559  4003/3783/120    4314/329    18   41   53.89)
(smt.stats   33   4235  71138 129323  4008/3799/120    4476/329    18   41   53.89)
ramon: poll                 wall=6.000s usage=5.865s mem=55916KiB load=0.96 rootload=0.96
(smt.stats   34   4412  75463 138340  4010/3801/120    4652/329    18   41   53.89)
(sat.ddfw       1      1   18.0151    670001      3284         11            1       68)
(smt.stats   35   4606  79142 148272  4025/3806/120    4845/329    18   41   53.89)
(smt.stats   36   4707  80633 155952  4037/3826/120    4942/329    18   41   53.89)
(smt.stats   37   4818  81541 160962  4051/3834/120    5054/329    18   41   53.99)
(smt.stats   38   4940  83692 164191  4059/3843/120    5185/329    18   41   54.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 8)
(smt.stats   39   5074  85115 170576  4099/3853/120    5309/329    18   41   54.17)
(sat.ddfw       1      1   17.4927    790001      3872         12            1       80)
(smt.stats   40   5221  87243 178293  4200/3914/120    5458/330    18   41   54.17)
ramon: poll                 wall=7.003s usage=7.070s mem=56488KiB load=1.20 rootload=1.20
(smt.stats   41   5382  91188 182731  4209/3996/120    5620/330    18   41   54.27)
(smt.stats   42   5559  92262 191962  4231/4004/120    5793/330    18   41   54.47)
(smt.stats   43   5753  94496 204807  4255/4041/120    5983/330    18   41   54.47)
(smt.stats   44   5966  96282 216263  4297/4047/120    6196/330    18   41   54.47)
(smt.stats   45   6067  97337 218421  4297/4087/120    6333/330    18   41   54.47)
(smt.stats   46   6178  99503 224940  4303/4091/120    6444/330    18   41   54.47)
(smt.stats   47   6300 101691 229768  4306/4096/120    6569/330    18   41   54.56)
(smt.stats   48   6434 103579 238954  4316/4098/120    6705/330    18   41   54.56)
(smt.stats   49   6581 104989 245530  4319/4109/120    6850/330    18   41   54.56)
(smt.stats   50   6742 106747 252582  4335/4112/120    7008/330    18   41   54.56)
ramon: poll                 wall=8.000s usage=8.067s mem=56744KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.2602    920001      4509         13            1       93)
(smt.stats   51   6919 109402 260943  4363/4147/120    7186/330    18   41   54.56)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 111696 267904  4386/4164/120    7378/330    18   41   54.66)
(smt.stats   53   7326 113586 283135  4391/4181/120    7593/330    18   41   54.66)
(smt.stats   54   7560 116217 294838  4400/4182/120    7829/330    18   41   54.66)
(smt.stats   55   7661 117285 306460  4405/4191/120    7929/330    18   41   54.66)
(smt.stats   56   7772 118934 314022  4405/4195/120    8040/330    18   41   54.66)
(smt.stats   57   7895 120003 318705  4405/4195/120    8169/330    18   41   54.76)
(smt.stats   58   8029 122070 322294  4405/4195/120    8303/330    18   41   54.76)
(smt.stats   59   8176 125292 326775  4405/4195/120    8451/330    18   41   54.76)
(smt.stats   60   8337 129907 332908  4406/4196/120    8611/330    18   41   55.17)
ramon: poll                 wall=9.000s usage=9.063s mem=57380KiB load=1.00 rootload=0.99
(smt.stats   61   8514 133064 340092  4407/4197/120    8787/330    18   41   55.17)
(smt.stats   62   8708 137907 348068  4407/4197/120    8981/330    18   41   55.17)
(smt.stats   63   8921 143143 358705  4408/4198/120    9193/330    18   41   55.47)
(smt.stats   64   9155 147795 369809  4408/4198/120    9427/330    18   41   55.47)
(sat.ddfw       1      1   15.0602   1060001      5196         14            1      108)
(smt.stats   65   9412 152716 380189  4413/4203/120    9679/330    18   41   55.47)
(smt.stats   66   9513 154256 384047  4413/4203/120    9780/330    18   41   55.47)
(smt.stats   67   9624 156321 389553  4413/4203/120    9891/330    18   41   55.47)
(smt.stats   68   9746 159045 394304  4414/4204/120   10012/330    18   41   55.47)
(smt.stats   69   9880 162137 399730  4414/4204/120   10146/330    18   41   55.57)
(smt.delete-inactive-clauses  :num-deleted-clauses 91)
(smt.stats   70  10027 164488 405730  4422/4207/120   10199/330    18   41   55.57)
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&4118805607
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 70785179843687 := 8427994133024473088 >>l 38
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&4118805606
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 70785179843686 := 8427994133024473088 >>l 38
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&4118805572
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 70785179843652 := 8427994133024473088 >>l 38
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660486 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660485 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660485 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660484 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660485 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660484 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660484 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 133384363196 := 125586899117 >>l 12
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660480 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660096 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660472 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660464 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660416 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660352 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660440 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660352 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660352 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660096 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660096 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660096 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30659672 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30659664 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30659664 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660712 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660706 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660704 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660736 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660672 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660672 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660640 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660608 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30660608 := 33554432&30660864
(smt.stats   71  10188 167020 412637  4606/4268/172   10447/399    19   46   55.78)
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 435 := 125586899117 >>l 12
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 2741 := 125586899117 >>l 12
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 30660864 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 30660608 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 30658560 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 30654464 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 30638080 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 30605312 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30658560 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30654464 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30658560 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30654464 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30646272 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30638080 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30605312 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30658560 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30654464 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30646272 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30638080 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30605312 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30539776 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 30408704 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 435 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 436 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 440 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 448 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 512 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1024 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 2048 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 4096 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 8192 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 16384 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 32768 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 65536 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 131072 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 262144 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 524288 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1048576 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 2097152 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 524288 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1048576 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 2097152 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 4194304 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 8388608 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 16777216 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 29360128 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 25165824 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 16777216 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 16777216 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 4206592 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 4194304 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 8388608 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 2228227 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 2228226 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 2228224 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 2097152 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1572864 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1572864 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1572864 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1114112 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1064960 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1095664 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1093632 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1081344 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1056768 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1052672 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 1048576 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 262144 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 262144 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 262144 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 8192 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 4096 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 4096 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 4096 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 8192 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 32768 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 65536 := 33554432&30660864
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   72  10365 169555 425827  4952/4663/443   10917/436    19   46   56.88)
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 16384 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 16384 := 33554432&30660864
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 16384 := 33554432&30660864
ramon: poll                 wall=10.000s usage=10.061s mem=59172KiB load=1.00 rootload=0.99
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&30660864
band: (band[37] (if (= #111 36) 68719476736 (if #463 34359738368 #533)) (lshr[37] (bv2int %0) (+ 37 #536))) 436 := 33554432&30660864
(smt.stats   73  10559 173477 436739  5095/4719/448   11268/437    19   46   56.88)
(smt.stats   74  10772 178187 459537  5175/4897/449   11533/677    20  109   56.97)
(sat.ddfw       1      1   14.0318   1210001      5931         15            1      123)
ramon: poll                 wall=11.000s usage=11.061s mem=59428KiB load=1.00 rootload=1.00
(smt.stats   75  11006 182477 475585  5394/5166/452   11961/805    21  117   57.17)
(smt.stats   76  11263 191077 503381  5449/5216/455   12474/806    21  117   57.36)
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&37575720388
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 33554432&74375492396
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 211814445868 := 53821308928 >>l 38
(smt.stats   77  11545 196485 522214  5601/5342/472   13198/928    22  130   57.64)
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&4118806563
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 4118806563 := 12616466432 >>l 60
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&4118806563
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 4118806563 := 12616466432 >>l 60
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&4118806563
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 4118806563 := 12616466432 >>l 60
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&377
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&377
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&375
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 375 := 12616466432 >>l 60
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&33
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 33 := 12616466432 >>l 60
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&0
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 133320147901 := 188 >>l 34
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&0
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 32 := 188 >>l 34
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8&0
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 32 := 188 >>l 34
(smt.stats   78  11646 198371 528034  5629/5348/473   13392/930    22  130   57.74)
(smt.stats   79  11757 203806 538583  5641/5379/485   13548/1150    23  161   57.83)
(smt.stats   80  11879 207425 548915  5644/5382/489   13878/1150    23  161   58.30)
ramon: poll                 wall=12.000s usage=12.059s mem=60452KiB load=1.00 rootload=1.00
(smt.stats   81  12013 211428 557186  5684/5415/489   14150/1150    23  161   58.30)
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 8192 := 8192&8193
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 70918499999745 := 872415232 >>l 50
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 8192 := 8192&8193
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 4611686155866349569 := 872415232 >>l 50
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 8192 := 8192&8195
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 4611686155866349571 := 872415232 >>l 50
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 8192 := 8192&8192
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 4611686155866349568 := 872415232 >>l 50
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 8192 := 8192&8192
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 4611686155866349568 := 872415232 >>l 50
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 8192 := 8192&8192
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 4611686155866349568 := 872415232 >>l 50
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8192&0
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 9 := 13 >>l 24
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8192&0
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 9 := 13 >>l 24
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8192&0
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 12 := 13 >>l 24
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 8192&0
lshr: (lshr[37] (bv2int %0) (+ 37 (* 137438953471 #107))) 1 := 13 >>l 24
(sat.ddfw       1      1   13.1471   1370001      6715         16            1      139)
(smt.stats   82  12160 215287 563745  5735/5418/489   14276/1237    24  194   58.30)
(smt.stats   83  12321 220570 580206  5805/5519/500   14545/1238    24  194   58.43)
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 1&137438953471
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 1&137438953470
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 71468255805438 := 0 >>l 63
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 1&137438953470
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 71330816851966 := 0 >>l 63
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 1&137438953470
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 137438953470 := 0 >>l 63
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 1&74375492397
band: (band[37] (if (= #268 63) 9223372036854775808 (if #443 4611686018427387904 #440)) (lshr[64] (* 67108864 #105) (mod #554 64))) 0 := 1&74375492398
lshr: (lshr[64] (* 67108864 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 74375492398 := 0 >>l 63
(smt.stats   84  12498 223840 592348  5857/5566/513   14945/1255    25  208   58.66)
ramon: poll                 wall=13.003s usage=13.060s mem=60964KiB load=1.00 rootload=1.00
(smt.stats   85  12692 231945 606027  5956/5583/513   15209/1257    25  208   58.75)
(sat.ddfw       1      1   12.3582   1540001      7549         17            1      156)
(smt.stats   86  12905 238606 621438  6222/5681/514   15434/1262    25  208   58.75)
ramon: poll                 wall=14.000s usage=14.054s mem=61220KiB load=1.00 rootload=0.99
(smt.stats   87  13139 246328 640308  6310/6006/515   15859/1341    26  209   58.95)
ramon: poll                 wall=15.000s usage=15.052s mem=61220KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.6762   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.048s mem=61220KiB load=1.00 rootload=1.00
(smt.stats   88  13396 255885 664382  6563/6179/519   16336/1405    27  212   59.04)
ramon: poll                 wall=17.003s usage=17.052s mem=62328KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.0671   1910001      9362         19            1      193)
(smt.stats   89  13678 264628 693159  6889/6309/519   16717/1408    27  212   59.62)
ramon: poll                 wall=18.000s usage=18.048s mem=62584KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=19.129s mem=62344KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   10.5152   2110001     10343         20            1      214)
(smt.stats   90  13988 268057 702694  7296/6653/521   17110/1433    28  220   60.01)
ramon: poll                 wall=20.000s usage=20.126s mem=62356KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:58:49 2024
ramon: root.execname        z3
ramon: root.utime           20.100s
ramon: root.stime           0.020s
ramon: group.total          20.129s
ramon: group.utime          20.108s
ramon: group.stime          0.020s
ramon: group.mempeak        62612KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.01
