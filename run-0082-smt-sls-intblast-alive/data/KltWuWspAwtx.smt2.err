ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:15:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28543 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KltWuWspAwtx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             755496
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 2 := 2&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 3 := 0 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 2 := 2&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 3 := 0 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 2&144115188075855871
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 2&144115188075855871
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 0 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 0 << 56
(smt.stats    0    101    770    763  1188/1056/117      81/8    10   22   51.77)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 110 << 1
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   88.4956     10000        49          0            1        2)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 110 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 110 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&144115188075855869
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 288230376151711741 := 110 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855871 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855871 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855870 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855870 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 219 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 113 := 56 << 1
(smt.stats    1    202   1620   1795  1284/1139/129     184/13    12   25   51.96)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 56 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 56 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 0 := 56 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855872 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855872 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855872 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855873 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855873 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855873 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855877 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855877 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855877 := 6 << 53
(sat.ddfw       1      1   41.3264     20001        98          1            1        3)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 576460752303423493 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 576460752303423493 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 576460752303423493 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 432345564227567621 := 26 << 43
(smt.stats    2    313   3212   3613  1374/1196/136     301/14    13   27   52.25)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 432345564227567621 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 432345564227567729 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 113 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&36028797018963970
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&36028797018963970
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 36028797018963970 := 2 << 55
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&36028797018963970
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&36028797018963970
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 36028797018963970 := 2 << 55
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&72057594037927935
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 72057594037927935 := 2 << 55
(smt.stats    3    414   4211   5099  1448/1287/170     397/19    15   33   52.34)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 16 << 48
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 16 << 48
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 16 << 48
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 0 := 16 << 48
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 8 << 52
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 8 << 52
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 0 := 8 << 52
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 0 := 8 << 52
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 10 << 51
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 10 << 51
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 2 := 10 << 51
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 3 := 10 << 51
(smt.stats    4    525   5270   6694  1507/1297/179     504/23    16   38   52.63)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 3 := 12 << 50
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 7 := 12 << 50
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 10 := 12 << 50
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 6 := 52 << 30
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 6 := 52 << 30
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 47 := 50 << 31
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 6 := 44 << 34
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 6 := 44 << 34
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 39 := 42 << 35
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 39 := 42 << 35
(smt.stats    5    648   7150   8503  1574/1363/194     613/29    17   60   52.82)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 40 := 42 << 35
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 40 := 42 << 35
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 40 := 42 << 35
(sat.ddfw       1      1   40.3226     40001       196          2            1        5)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1443109011456
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 41 := 21 << 36
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1443109011456
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 41 := 21 << 36
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1443109011456
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 6 := 21 << 36
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1443109011456
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 6 := 21 << 36
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749   8890  10651  1658/1444/219     713/33    18   65   52.92)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 2 << 55
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 2 << 55
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 1 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 1 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 0 := 1 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 0 := 1 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&72057594037927936
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&72057594037927936
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
band: (band[57] (if (or #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 #588 #589 ...) 0 (if #629 1 #631)) (shl[57] (bv2int %0) (+ 57 #847))) 1 := 1&72057594037927936
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
band: (band[57] (if (or #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 #588 #589 ...) 0 (if #629 1 #631)) (shl[57] (bv2int %0) (+ 57 #847))) 1 := 1&72057594037927936
(sat.ddfw       1      1   38.0228     70001       343          3            1        8)
ramon: poll                 wall=1.002s usage=0.801s mem=55400KiB load=0.80 rootload=0.79
(sat.ddfw       1      1   33.5852    110001       539          4            1       12)
(sat.ddfw       1      1   29.5328    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.796s mem=55628KiB load=1.00 rootload=1.00
(smt.stats    7    860  10090  12062  1753/1510/240     830/44    19   66   53.30)
(sat.ddfw       1      1   26.1328    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.799s mem=55680KiB load=1.00 rootload=1.00
(sat.ddfw       1      1     23.31    290001      1421          7            1       30)
(sat.ddfw       1      1   20.9919    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.799s mem=55680KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.0678    460001      2254          9            1       47)
ramon: poll                 wall=5.002s usage=4.800s mem=55680KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.4978    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.796s mem=55680KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.1172    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.795s mem=55936KiB load=1.00 rootload=1.00
(smt.stats    8    982  11394  13506  1971/1788/258     929/76    21  100   53.59)
(smt.stats    9   1116  18724  17454  1989/1802/258    1064/76    21  100   53.59)
(smt.stats   10   1217  21768  19874  2019/1824/258    1183/77    21  100   53.68)
ramon: poll                 wall=8.000s usage=7.796s mem=56092KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    14.957    790001      3872         12            1       80)
(smt.stats   11   1328  26625  23667  2120/1846/260    1317/89    22  107   53.78)
ramon: poll                 wall=9.000s usage=8.764s mem=56056KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   13.7145    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.706s mem=56128KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   13.0366   1060001      5196         14            1      108)
ramon: poll                 wall=11.006s usage=10.814s mem=56172KiB load=1.10 rootload=1.10
ramon: poll                 wall=12.000s usage=11.807s mem=56428KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    12.274   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.805s mem=56192KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.5757   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=13.806s mem=56200KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.805s mem=56268KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.9529   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=15.783s mem=56536KiB load=0.98 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  27224  24604  2263/1959/260    1443/112    23  108   54.06)
(smt.stats   13   1584  30567  27186  2376/2189/261    1596/116    23  108   54.06)
ramon: poll                 wall=17.000s usage=16.783s mem=56676KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.3567   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=17.781s mem=56692KiB load=1.00 rootload=1.00
(smt.stats   14   1731  32608  29563  2611/2322/262    1764/149    24  110   54.16)
ramon: poll                 wall=19.000s usage=18.780s mem=56772KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.84354   1910001      9362         19            1      193)
(smt.stats   15   1832  33712  30783  2931/2463/262    1864/167    25  112   54.35)
ramon: poll                 wall=20.000s usage=19.777s mem=56844KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:15:43 2024
ramon: root.execname        z3
ramon: root.utime           19.840s
ramon: root.stime           0.000s
ramon: group.total          19.846s
ramon: group.utime          19.842s
ramon: group.stime          0.004s
ramon: group.mempeak        57100KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
