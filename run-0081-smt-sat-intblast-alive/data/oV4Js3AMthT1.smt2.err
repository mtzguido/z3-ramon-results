ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:10:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28356 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1358
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/oV4Js3AMthT1.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             537706
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   240/240     0/0  63       0    18.52   0.00)
(sat.stats    111    700    0   240/240   111/38  63       0    18.84   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 298 :time 0.00)
(sat.stats    111    700    0   240/240   111/38  63       0    18.84   0.01)
(sat.stats    111    700    0   240/240   111/38  63       0    18.84   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 390618.84 :time 0.00)
(sat.stats    111    700    0   242/242    47/37  63       0    18.84   0.01)
(sat.stats    173   1812    1   242/242   109/86  63       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    176   1872    2   242/242   112/86  63       0    18.94   0.01)
(sat.stats    179   1932    3   242/242   115/86  63       0    18.94   0.01)
(sat.stats    183   1975    4   242/242   119/89  63       0    18.94   0.01)
(sat.stats    186   2022    5   242/242   122/89  63       0    18.94   0.01)
(sat.stats    189   2064    6   242/242   125/89  63       0    18.94   0.01)
(sat.stats    192   2101    7   242/242   128/89  63       0    18.94   0.01)
(sat.stats    195   2137    8   242/242   131/89  63       0    18.94   0.01)
(sat.stats    198   2176    9   242/242   134/89  63       0    18.94   0.01)
(sat.stats    201   2213   10   242/242   137/89  63       0    18.94   0.01)
(sat.stats    204   2263   11   242/242   140/90  63       0    18.94   0.01)
(sat.stats    207   2341   12   242/242   143/93  63       0    18.94   0.01)
(sat.stats    210   2416   13   242/242   146/96  63       0    18.94   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2047 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    335   4595   20   507/507   275/151  71       0    19.83   0.11)
(sat.stats    490   7583   24  1329/1328   433/170  71       0    20.04   0.19)
lshr: (lshr[54] (bv2int %0) (mod (bv2int %1) 54)) 0 := 0 >>l 11
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 0&272678883688448
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #63 #303) 64)) 5566449139429933055 := 0 >>l 21
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4068 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 2 :cost 4755 :time 0.00)
(sat.stats    716  13779   36  1939/1937   671/218  86       0    20.22   0.31)
 (sat-cleaner :elim-literals 3 :elim-clauses 5 :cost 7093 :time 0.00)
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 1&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 1 := 1&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 10293 := 8796075706906&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 3771 := 8796075699407&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 54074 := 8796075699407&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 25580 := 78855&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 144 := 20985&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 17184 := 23963&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 9184 := 22783&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 33&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 2 := 33&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 33&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 16 := 33&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 33&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 4 := 33&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 33&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 32 := 33&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 33&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 8 := 33&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 127&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 2 := 127&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 127&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 4 := 127&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 127&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 8 := 127&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 127&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 16 := 127&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 0 := 127&272678883688448
band: (band[54] (lshr[64] (* 1024 #58) (mod #304 64)) (if (= #606 63) 571849066284996100096 (if #608 285924533142498050048 #732))) 64 := 127&272678883688448
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 7687 :time 0.00)
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 8795970211456 := 8796093022207&272678883688448
band: (band[54] (lshr[54] (bv2int %0) (mod #63 54)) (if (= #477 53) 279223176896970752 (if #479 139611588448485376 #583))) 8 := 22&272678883688448
(sat.stats   1200  27582   67 19102/19100  1824/903 190       0    25.08   0.55)
ramon: poll                 wall=1.000s usage=0.999s mem=36040KiB load=1.00 rootload=0.97
ramon: poll                 wall=2.000s usage=1.999s mem=46132KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.999s mem=50940KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.999s mem=52096KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.999s mem=53252KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.998s mem=54404KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=55560KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.996s mem=57788KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=57868KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.996s mem=59024KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.996s mem=61892KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.995s mem=61896KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.995s mem=63948KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.995s mem=63948KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.995s mem=64744KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.995s mem=65880KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.003s usage=16.998s mem=68052KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.994s mem=70104KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.994s mem=70104KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.994s mem=72156KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:10:33 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.006s
ramon: group.utime          19.950s
ramon: group.stime          0.056s
ramon: group.mempeak        72412KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.00
