ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:03:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41891 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1260
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KRXKM0hKpjiH.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2913000
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5308    485  1280/1131/98     101/11     5   18   19.25)
(smt.stats    1    202   6987   1682  2290/2045/99     227/17     6   20   19.34)
(smt.stats    2    313   9915   3194  2379/2168/102     367/49     7   26   19.44)
(smt.stats    3    414  14176   5590  2418/2196/102     468/50     7   26   19.64)
(smt.stats    4    525  14874   7145  2681/2433/107     559/66     8   28   19.64)
(smt.stats    5    647  16791  13311  2694/2454/109     684/73     9   30   19.74)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18015  17514  2706/2462/109     795/95    10   34   19.74)
(smt.stats    7    859  19871  23108  2724/2478/110     908/97    11   35   19.86)
(smt.stats    8    981  21571  26782  2743/2499/117    1019/102    13   44   19.86)
(smt.stats    9   1115  24861  29073  2830/2513/117    1163/106    13   44   19.86)
(smt.stats   10   1216  27398  30914  2853/2608/120    1260/113    14   46   20.00)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 2 := 8388608&2251799813685247
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&2251799813685247
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&8388610
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&8388610
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&16777216
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 16777216 := 4894720 >>l 41
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&1240426
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1240426 := 4894720 >>l 41
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&1197
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1197 := 4894720 >>l 41
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 8388608 := 1195 >>l 29
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 8388608 := 1195 >>l 29
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8388608&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 8388607 := 1195 >>l 29
(smt.stats   11   1327  29238  33478  2883/2611/120    1376/115    15   46   20.27)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 2&1240426
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 2&1
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1 := 4804608 >>l 63
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  31768  36389  2901/2645/135    1498/120    16   49   20.17)
(smt.stats   13   1583  32611  38813  2925/2673/153    1635/121    17   51   20.27)
ramon: poll                 wall=1.000s usage=0.941s mem=21548KiB load=0.94 rootload=0.94
(smt.stats   14   1730  33970  39856  3008/2678/153    1796/129    17   51   20.47)
(smt.stats   15   1831  35387  41193  3164/2877/153    1876/136    18   82   20.47)
(smt.stats   16   1942  37366  43925  3220/2945/153    1991/136    18   82   20.47)
(smt.stats   17   2064  38700  47100  3240/2989/153    2122/136    18   82   20.47)
(smt.stats   18   2198  41440  49544  3319/2995/153    2259/139    18   82   20.47)
(smt.stats   19   2345  43564  57117  3333/3085/155    2399/159    19   87   20.58)
(smt.stats   20   2506  44362  62906  3335/3086/155    2575/160    19   87   20.58)
(smt.stats   21   2607  45934  65322  3393/3091/155    2701/162    19   87   20.58)
(smt.stats   22   2718  47556  68553  3428/3151/155    2820/163    19   87   20.58)
(smt.stats   23   2840  50346  73252  3452/3188/155    2948/163    19   87   20.58)
ramon: poll                 wall=2.000s usage=1.940s mem=21744KiB load=1.00 rootload=1.00
(smt.stats   24   2974  50931  75956  3468/3209/155    3104/163    19   87   20.58)
(smt.stats   25   3121  52718  79914  3491/3226/155    3257/163    19   87   20.68)
(smt.stats   26   3282  54921  83749  3554/3265/155    3423/166    19   87   20.68)
(smt.stats   27   3459  59216  94621  3602/3347/155    3618/169    19   87   20.68)
(smt.stats   28   3560  60224  97960  3657/3360/155    3727/170    19   87   20.80)
(smt.stats   29   3671  61468 101843  3676/3417/155    3837/170    19   87   20.97)
(smt.stats   30   3793  62398 104040  3772/3435/155    3968/172    19   87   21.06)
(smt.stats   31   3927  65381 111305  3808/3547/155    4098/172    19   87   21.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  66484 117087  3842/3581/157    4260/258    20   97   21.06)
ramon: poll                 wall=3.000s usage=2.940s mem=22264KiB load=1.00 rootload=1.00
(smt.stats   33   4235  68077 119196  3959/3594/157    4437/258    20   97   21.16)
(smt.stats   34   4412  70028 123229  4155/3823/157    4643/258    20   97   21.16)
(smt.stats   35   4606  72510 130298  4204/3914/157    4845/260    20   97   21.27)
(smt.stats   36   4707  73513 134267  4270/3970/157    4981/260    20   97   21.27)
(smt.stats   37   4818  74571 137509  4337/4033/157    5100/264    20   97   21.27)
(smt.stats   38   4940  75903 142446  4393/4116/157    5230/265    20   97   21.27)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  77413 146356  4445/4159/158    5372/312    21  100   21.39)
ramon: poll                 wall=4.000s usage=3.940s mem=22564KiB load=1.00 rootload=1.00
(smt.stats   40   5221  78802 151605  4514/4210/158    5530/312    21  100   21.39)
(smt.stats   41   5382  80833 159081  4548/4279/158    5751/312    21  100   21.39)
(smt.stats   42   5559  82683 166496  4566/4315/158    5935/312    21  100   21.50)
(smt.stats   43   5753  85256 175714  4587/4327/158    6124/312    21  100   21.50)
(smt.stats   44   5966  88084 183227  4623/4346/158    6342/312    21  100   21.50)
(smt.stats   45   6067  88815 187150  4676/4382/158    6452/312    21  100   21.50)
(smt.stats   46   6178  89733 190302  4766/4442/158    6567/313    21  100   21.50)
(smt.stats   47   6300  91188 197866  4786/4534/158    6690/313    21  100   21.63)
(smt.stats   48   6434  92359 201829  4824/4538/158    6833/313    21  100   21.63)
(smt.stats   49   6581  92879 208113  4835/4587/158    6989/313    21  100   21.63)
(smt.stats   50   6742  93679 213392  4836/4588/158    7149/313    21  100   21.63)
(smt.stats   51   6919  95617 222981  4843/4591/158    7328/313    21  100   21.63)
ramon: poll                 wall=5.000s usage=4.940s mem=22812KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113  96862 231616  4870/4596/158    7524/313    21  100   21.63)
(smt.stats   53   7326 100054 242752  4897/4634/158    7766/313    21  100   22.07)
(smt.stats   54   7560 101228 256461  4940/4656/158    8017/313    21  100   22.07)
(smt.stats   55   7661 102025 261479  4948/4693/158    8118/313    21  100   22.07)
(smt.stats   56   7772 102543 266019  4949/4701/158    8238/313    21  100   22.20)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 512 := 512&2251799813683930
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 4503599627369178 := 450560 >>l 55
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 512 := 512&2251799813683930
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 4503599627369178 := 450560 >>l 55
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 512 := 512&2251799813683930
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 4503599627369178 := 450560 >>l 55
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 512&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685248 := 450560 >>l 55
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 512&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685248 := 450560 >>l 55
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 512&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 2251799813683929 := 110 >>l 43
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 512&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 2251799813683929 := 110 >>l 43
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 512&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 531 := 110 >>l 43
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 512&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 513 := 110 >>l 43
(smt.stats   57   7894 103725 268505  4978/4703/158    8359/314    21  100   22.20)
(smt.stats   58   8028 104798 271478  5036/4742/168    8560/412    22  102   22.20)
(smt.stats   59   8175 105326 273121  5170/4840/168    8713/413    22  102   22.31)
ramon: poll                 wall=6.000s usage=5.939s mem=23592KiB load=1.00 rootload=1.00
(smt.stats   60   8336 106757 275180  5359/5017/168    8959/413    22  102   22.43)
(smt.stats   61   8513 107977 277109  5491/5153/168    9152/416    22  102   22.52)
(smt.stats   62   8707 109172 278516  5757/5375/168    9365/416    22  102   22.62)
ramon: poll                 wall=7.000s usage=6.939s mem=23896KiB load=1.00 rootload=1.00
(smt.stats   63   8920 110950 280876  6059/5614/168    9608/418    22  102   22.71)
(smt.stats   64   9154 114086 288333  6262/5940/168    9922/475    23  102   22.81)
ramon: poll                 wall=8.000s usage=7.939s mem=24168KiB load=1.00 rootload=1.00
(smt.stats   65   9411 118931 300534  6454/6022/168   10316/478    23  102   22.91)
(smt.stats   66   9512 120358 305022  6456/6203/168   10452/478    23  102   23.04)
(smt.stats   67   9623 121515 307092  6553/6206/168   10569/479    23  102   23.04)
(smt.stats   68   9745 122472 308184  6680/6359/168   10705/480    23  102   23.04)
(smt.stats   69   9879 124766 312586  6748/6472/169   10885/555    24  104   23.04)
ramon: poll                 wall=9.002s usage=8.940s mem=24376KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 127237 316188  6842/6515/169   11044/556    24  104   23.14)
(smt.stats   71  10187 129771 323187  7088/6700/169   11287/560    24  104   23.14)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 132056 329901  7232/6887/169   11564/560    24  104   23.26)
(smt.stats   73  10558 135002 341346  7305/7002/169   11982/561    24  104   23.26)
ramon: poll                 wall=10.000s usage=9.939s mem=24696KiB load=1.00 rootload=1.00
(smt.stats   74  10771 139920 365015  7366/7055/169   12435/562    24  104   23.36)
(smt.stats   75  11005 143550 381270  7456/7204/170   12798/779    25  109   23.47)
(smt.stats   76  11262 147291 395698  7515/7214/170   13069/782    25  109   23.47)
(smt.stats   77  11544 150704 410851  7539/7275/170   13405/782    25  109   23.61)
(smt.stats   78  11645 152053 415661  7541/7289/170   13590/782    25  109   23.61)
(smt.stats   79  11756 153912 420922  7546/7291/170   13708/782    25  109   23.61)
(smt.stats   80  11878 155661 429763  7554/7300/170   13839/782    25  109   23.61)
(smt.stats   81  12012 157543 436251  7556/7304/170   13990/782    25  109   23.61)
(smt.stats   82  12159 159380 445591  7629/7306/170   14152/783    25  109   23.61)
(smt.stats   83  12320 161350 457835  7707/7455/173   14332/826    26  115   23.72)
ramon: poll                 wall=11.000s usage=10.939s mem=24980KiB load=1.00 rootload=1.00
(smt.stats   84  12497 163211 468735  7758/7458/173   14583/828    26  115   23.72)
(smt.stats   85  12691 166754 487083  7773/7513/173   14909/829    26  115   23.72)
(smt.stats   86  12904 169588 494814  7989/7538/173   15168/867    27  125   23.82)
(smt.stats   87  13138 172148 500685  8144/7737/173   15616/867    27  125   23.91)
ramon: poll                 wall=12.000s usage=11.938s mem=25276KiB load=1.00 rootload=1.00
(smt.stats   88  13395 174165 508761  8495/8037/173   15927/868    27  125   24.01)
(smt.stats   89  13677 178088 522285  8585/8299/174   16482/922    28  126   24.01)
(smt.stats   90  13987 182892 542927  8693/8375/174   16892/924    28  126   24.12)
(smt.stats   91  14088 183983 548484  8758/8503/174   17057/924    28  126   24.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   92  14199 185276 556078  8817/8506/174   17184/925    28  126   24.24)
(smt.stats   93  14321 186201 558327  8963/8633/174   17337/927    28  126   24.24)
ramon: poll                 wall=13.000s usage=12.938s mem=25620KiB load=1.00 rootload=1.00
(smt.stats   94  14455 187392 564880  9089/8762/174   17520/927    28  126   24.24)
(smt.stats   95  14602 189419 575561  9132/8846/174   17842/928    28  126   24.33)
(smt.stats   96  14763 191163 584259  9193/8892/174   18078/928    28  126   24.33)
(smt.stats   97  14940 193476 593739  9243/8957/174   18462/928    28  126   24.47)
(smt.delete-inactive-clauses  :num-deleted-clauses 186)
(smt.stats   98  15134 195502 603028  9321/9009/174   18598/928    28  126   24.58)
ramon: poll                 wall=14.000s usage=13.938s mem=25952KiB load=1.00 rootload=1.00
(smt.stats   99  15347 197869 623282  9532/9096/174   18853/928    28  126   24.58)
(smt.stats  100  15581 201558 641515  9609/9317/174   19105/936    28  126   24.58)
(smt.stats  101  15838 204496 646244  9707/9384/174   19379/938    28  126   24.69)
(smt.stats  102  16120 209224 666296  9850/9516/174   19715/938    28  126   24.79)
ramon: poll                 wall=15.000s usage=14.938s mem=26152KiB load=1.00 rootload=1.00
(smt.stats  103  16430 212750 674212 10132/9615/174   20091/945    28  126   24.79)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats  104  16770 216958 698635 10351/9970/175   20529/1255    29  128   24.90)
(smt.stats  105  16871 217934 705125 10385/10116/175   20719/1255    29  128   25.01)
(smt.stats  106  16982 219117 712488 10430/10174/176   20902/1312    30  129   25.01)
(smt.stats  107  17104 223573 727224 10443/10179/176   21070/1312    30  129   25.01)
(smt.stats  108  17238 225764 744077 10508/10201/176   21318/1313    30  129   25.01)
ramon: poll                 wall=16.000s usage=15.938s mem=26432KiB load=1.00 rootload=1.00
(smt.stats  109  17385 227366 758134 10586/10277/176   21507/1313    30  129   25.20)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  110  17546 229360 765949 10658/10382/176   21740/1313    30  129   25.20)
(smt.stats  111  17723 232256 777000 10687/10424/176   21923/1313    30  129   25.20)
(smt.stats  112  17917 234234 789320 10826/10440/176   22161/1314    30  129   25.29)
ramon: poll                 wall=17.000s usage=16.938s mem=26736KiB load=1.00 rootload=1.00
(smt.stats  113  18130 237231 821033 10915/10602/176   22411/1314    30  129   25.39)
(smt.stats  114  18364 239601 850346 11014/10684/176   22726/1314    30  129   25.39)
(smt.stats  115  18621 241966 872413 11100/10768/176   23102/1315    30  129   25.52)
(smt.stats  116  18903 246459 899346 11170/10865/176   23531/1315    30  129   25.61)
(smt.stats  117  19213 251142 929437 11282/10923/176   24008/1317    30  129   25.61)
ramon: poll                 wall=18.002s usage=17.938s mem=27052KiB load=1.00 rootload=1.00
(smt.stats  118  19553 255159 956340 11461/11078/176   24389/1317    30  129   25.72)
(smt.stats  119  19926 259207 985239 11700/11272/176   24815/1322    30  129   26.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 80)
(smt.stats  120  20027 260274 991482 11760/11488/176   24949/1322    30  129   26.65)
ramon: poll                 wall=19.000s usage=18.937s mem=28100KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  121  20138 261425 1002629 11833/11516/176   25073/1323    30  129   26.65)
(smt.stats  122  20260 263741 1027068 11854/11598/176   25257/1323    30  129   26.65)
(smt.stats  123  20394 266673 1049154 11872/11602/176   25427/1323    30  129   26.75)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 1 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 2 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 4 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 16 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 16 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 32 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 64 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 55 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 54 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 52 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 48 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 32 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 48 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 23 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 16 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 16 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 64 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 536870912&69
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 128 := 536870912&128
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 256 := 536870912&256
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 512 := 536870912&512
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 1024 := 536870912&1024
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 2048 := 536870912&2048
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 4096 := 536870912&4096
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8192 := 536870912&8192
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 16384 := 536870912&16384
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 32768 := 536870912&32768
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 65536 := 536870912&65536
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 131072 := 536870912&131072
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 65536 := 536870912&65536
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 131072 := 536870912&131072
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 262144 := 536870912&262144
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 524288 := 536870912&524288
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 1048576 := 536870912&1048576
(smt.stats  124  20541 268773 1058626 11997/11625/176   25583/1333    30  129   27.10)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 7 := 536870912&112
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 6 := 536870912&112
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 4 := 536870912&112
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 5 := 536870912&112
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 130 := 536870912&130
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 128 := 536870912&128
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 512 := 536870912&512
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 1024 := 536870912&1024
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 512 := 536870912&512
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 512 := 536870912&512
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 256 := 536870912&256
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 256 := 536870912&256
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 4096 := 536870912&4096
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 4096 := 536870912&4096
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 4096 := 536870912&4096
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 2048 := 536870912&2048
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8192 := 536870912&8192
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 16384 := 536870912&16384
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 24576 := 536870912&24576
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 16416 := 536870912&16416
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 32768 := 536870912&32768
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 65536 := 536870912&65536
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 131072 := 536870912&131072
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 132096 := 536870912&132096
(smt.stats  125  20702 270985 1085629 12197/11708/261   25998/1598    31  146   27.19)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 524292 := 536870912&524292
(smt.stats  126  20879 273834 1126377 12490/11982/351   26412/1599    31  146   27.29)
(smt.stats  127  21073 277517 1142214 12549/12297/362   27626/1647    32  165   27.68)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 64&2
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 6755399441055746 := 20480 >>l 58
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 64&2
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2 := 20480 >>l 58
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 64&2
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2 := 20480 >>l 58
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 64&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 78 := 5 >>l 46
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 64&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 77 := 5 >>l 46
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 64&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 77 := 5 >>l 46
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 1 := 8&5
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 1 := 8&5
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 8&8
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 6755399441055752 := 8192 >>l 61
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 8&8
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685256 := 8192 >>l 61
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 8&8
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685256 := 8192 >>l 61
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 16 := 16&16
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685264 := 12288 >>l 60
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 32 := 32&45
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685293 := 16384 >>l 59
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 32 := 32&38
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685286 := 16384 >>l 59
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 32 := 32&32
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685280 := 16384 >>l 59
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 4 := 16&23
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 4 := 16&23
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 16&23
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 16&32
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685280 := 12288 >>l 60
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 16&23
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 16&32
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2251799813685280 := 12288 >>l 60
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 16&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 78 := 3 >>l 48
(smt.stats  128  21286 282129 1164486 12617/12322/378   28050/1655    32  165   28.00)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 16&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 41 := 3 >>l 48
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 16&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 41 := 3 >>l 48
(smt.stats  129  21520 286320 1186639 12832/12534/401   28302/2348    33  210   28.10)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 8&112
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 8 := 8&120
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 5949255107756425336 := 425984 >>l 61
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 8&0
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #108))) 1 := 104 >>l 49
(smt.stats  130  21777 290329 1218916 12858/12556/402   28576/2377    34  222   28.21)
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 0&7
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2305843009213693959 := 622592 >>l 13
band: (band[51] (if (= #324 63) 18446744073709551616 (if #472 9223372036854775808 #469)) (lshr[64] (* 4096 #106) (mod #610 64))) 0 := 0&1097773
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 2236037214990549037 := 622592 >>l 13
(smt.stats  131  22059 294523 1243847 12902/12595/417   28945/2380    34  222   28.30)
ramon: poll                 wall=20.002s usage=19.938s mem=29760KiB load=1.00 rootload=1.01
ramon: end                  Tue Dec 24 15:04:18 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.998s
ramon: group.utime          19.990s
ramon: group.stime          0.008s
ramon: group.mempeak        30276KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
