ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:02:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40494 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/uIkl1ZRrWyZZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3104661
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2839    211  1377/1247/112      94/18     7   18   19.33)
(smt.stats    1    202   4627    984  2155/1920/115     200/18     8   19   19.43)
(smt.stats    2    313   5999   2137  2302/2101/117     301/22    11   26   19.43)
(smt.stats    3    414   8446   4405  2432/2139/118     424/28    12   26   19.62)
(smt.stats    4    525   9211   5388  2920/2393/125     551/66    14   30   19.81)
(smt.stats    5    647  11103   7542  3012/2694/125     674/85    15   33   19.81)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14754   8919  3031/2787/126     769/88    16   34   19.91)
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 2&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 2&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 4&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 4&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 4&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 4&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 9&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 16&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 32&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 64&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 32&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 64&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 64&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 256&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 256&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 512&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1024&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1024&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 2048&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 256&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 256 := 256&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 256 := 256 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 256&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
(smt.stats    7    859  16511  11814  3177/2911/262     901/107    19   64   20.32)
ramon: poll                 wall=1.001s usage=0.888s mem=21428KiB load=0.89 rootload=0.88
(smt.stats    8    981  17941  14373  3227/2965/264    1028/119    20   76   20.32)
(smt.stats    9   1115  20835  19313  3278/2989/265    1163/127    21   77   20.42)
(smt.stats   10   1216  22793  21754  3402/3049/265    1267/131    21   77   20.52)
(smt.stats   11   1327  24656  27518  3439/3157/265    1384/132    21   77   20.52)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27064  31792  3463/3213/267    1506/143    22   79   20.52)
(smt.stats   13   1583  28821  34936  3477/3216/267    1648/144    22   79   20.65)
(smt.stats   14   1730  32115  43274  3564/3237/267    1840/158    23   81   20.65)
(smt.stats   15   1831  33400  48513  3608/3335/267    1949/158    23   81   20.74)
(smt.stats   16   1942  35052  56150  3632/3374/273    2059/219    25   84   20.84)
(smt.stats   17   2064  37645  64915  3728/3448/275    2219/220    25   84   20.84)
(smt.stats   18   2198  44910  74465  3761/3448/275    2369/230    26  105   20.94)
(smt.stats   19   2345  49872  81868  3783/3504/280    2539/243    28  110   21.07)
(smt.stats   20   2506  55186  89315  3825/3515/284    2770/256    29  116   21.07)
ramon: poll                 wall=2.000s usage=1.886s mem=22244KiB load=1.00 rootload=1.00
(smt.stats   21   2607  57945  96209  3895/3556/284    2893/256    29  116   21.07)
(smt.stats   22   2718  60496 102392  3988/3641/285    3132/265    30  116   21.18)
(smt.stats   23   2840  64390 110475  4043/3721/285    3290/268    30  116   21.18)
(smt.stats   24   2974  68232 116654  4113/3771/285    3522/269    30  116   21.29)
(smt.stats   25   3121  75151 125876  4146/3854/294    3745/352    31  122   21.38)
(smt.stats   26   3282  78927 132811  4219/3884/295    3939/391    32  149   21.38)
(smt.stats   27   3459  82198 143597  4469/3992/295    4351/398    33  149   21.77)
(smt.stats   28   3560  84820 154357  4516/4210/295    4743/401    33  149   22.08)
(smt.stats   29   3671  89058 178880  4519/4241/296    4851/523    34  151   22.08)
ramon: poll                 wall=3.000s usage=2.886s mem=23296KiB load=1.00 rootload=1.00
(smt.stats   30   3793  93253 204321  4577/4243/296    5073/525    34  151   22.08)
(smt.stats   31   3927  97948 237767  4590/4312/296    5271/525    34  151   22.08)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 103512 248480  4603/4325/296    5538/525    34  151   22.08)
(smt.stats   33   4235 106451 254027  4815/4328/297    5967/692    35  152   22.27)
(smt.stats   34   4412 109128 263428  5083/4559/297    6340/692    35  152   22.46)
(smt.stats   35   4606 118208 274946  5101/4812/297    6748/692    35  152   22.46)
(smt.stats   36   4707 121278 286293  5117/4839/301    7141/839    36  154   22.56)
(smt.stats   37   4818 129851 303433  5117/4839/301    7275/839    36  154   22.56)
(smt.stats   38   4940 134381 316252  5128/4850/301    7791/979    37  177   22.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 370)
(smt.stats   39   5074 137699 327764  5134/4856/301    7984/979    37  177   22.66)
ramon: poll                 wall=4.000s usage=3.885s mem=23988KiB load=1.00 rootload=0.99
(smt.stats   40   5221 145199 356930  5140/4861/301    8182/979    37  177   22.75)
(smt.stats   41   5382 151470 389418  5149/4870/301    8583/979    37  177   22.99)
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 512 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 127 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 127 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 126 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 124 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 16384&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 16384&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 127 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 126 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 124 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 8 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 16 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 32 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 64 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 32768&131071
(smt.stats   42   5559 156821 408683  5290/4995/370    9049/1501    38  179   23.09)
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98304&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98304&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98304&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98308&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 102404&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98304&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98308&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 65536&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 65540&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 5 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4100 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6180 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6164 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 5124 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4100 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4116 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4116 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4100 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 1028 := 131076&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 6612102152262 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 6612102152262 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 6612102152262 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 6612102152262 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 22005264941126 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 22005264941126 << 17
(smt.stats   43   5753 161102 431505  5566/5281/433    9467/1572    39  205   23.63)
(smt.stats   44   5966 166904 451113  5747/5378/435    9990/1698    40  216   23.73)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6067 170691 464425  5762/5480/435   10474/1698    40  216   23.82)
(smt.stats   46   6178 175510 490550  5848/5484/435   10606/1698    40  216   23.82)
ramon: poll                 wall=5.000s usage=4.885s mem=25188KiB load=1.00 rootload=1.00
(smt.stats   47   6300 179820 517062  5960/5570/435   10787/1700    40  216   23.92)
(smt.stats   48   6434 185799 555194  5992/5711/436   11092/2066    41  221   23.92)
(smt.stats   49   6581 190868 572959  6066/5712/436   11394/2073    41  221   24.01)
(smt.stats   50   6742 198171 615307  6088/5801/436   11614/2073    41  221   24.01)
(smt.stats   51   6919 208275 672318  6101/5817/436   11815/2073    41  221   24.01)
(smt.stats   52   7113 217928 714959  6170/5857/437   12156/2264    42  221   24.11)
ramon: poll                 wall=6.000s usage=5.885s mem=25468KiB load=1.00 rootload=1.00
(smt.stats   53   7326 225561 748900  6393/5922/437   12448/2270    42  221   24.20)
ramon: poll                 wall=7.000s usage=6.885s mem=25704KiB load=1.00 rootload=1.00
(smt.stats   54   7560 231150 767278  6770/6140/437   12902/2284    42  221   24.40)
(smt.stats   55   7661 233155 777165  7154/6608/437   13180/2285    42  221   24.49)
(smt.stats   56   7772 236342 795041  7446/6911/437   13497/2287    42  221   24.59)
ramon: poll                 wall=8.000s usage=7.877s mem=25996KiB load=0.99 rootload=0.99
(smt.stats   57   7894 238301 805819  7669/7183/437   13764/2293    42  221   24.68)
(smt.stats   58   8028 240673 820394  7791/7438/437   14273/2293    42  221   24.68)
(smt.stats   59   8175 247476 864740  7814/7523/437   14542/2293    42  221   24.79)
(smt.stats   60   8336 258677 914971  7827/7543/437   15052/2293    42  221   24.89)
(smt.stats   61   8513 267399 957900  7836/7555/438   15519/2995    43  230   24.89)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8707 276978 1007301  7849/7565/438   15879/3003    43  230   24.99)
ramon: poll                 wall=9.000s usage=8.877s mem=26348KiB load=1.00 rootload=1.00
(smt.stats   63   8920 281601 1018873  7981/7597/438   16152/3005    43  230   24.99)
(smt.stats   64   9154 290429 1045274  7987/7706/438   16413/3005    43  230   25.08)
(smt.stats   65   9411 296985 1076145  8152/7711/438   16745/3018    43  230   25.08)
(smt.stats   66   9512 298845 1086868  8193/7912/438   16971/3018    43  230   25.08)
(smt.stats   67   9623 302475 1119150  8236/7955/438   17089/3018    43  230   25.20)
(smt.stats   68   9745 306185 1153257  8300/8008/438   17177/3019    43  230   25.20)
ramon: poll                 wall=10.000s usage=9.876s mem=26664KiB load=1.00 rootload=1.00
(smt.stats   69   9879 310742 1179281  8444/8030/438   17651/3028    43  230   25.30)
(smt.delete-inactive-clauses  :num-deleted-clauses 154)
(smt.stats   70  10026 314241 1193135  8472/8191/439   17894/3566    44  230   25.30)
(smt.stats   71  10187 323739 1248076  8472/8191/439   18061/3566    44  230   25.75)
(smt.stats   72  10364 334209 1311520  8478/8192/439   18238/3567    44  230   25.96)
(smt.stats   73  10558 343256 1344680  8566/8208/439   18695/3573    44  230   26.05)
(smt.stats   74  10771 351853 1382573  8674/8342/439   19153/3577    44  230   26.25)
ramon: poll                 wall=11.000s usage=10.876s mem=27772KiB load=1.00 rootload=1.00
(smt.stats   75  11005 360754 1444592  8704/8419/439   19680/3579    44  230   26.34)
(smt.stats   76  11262 375735 1486696  8823/8439/439   20101/3589    44  230   26.43)
(smt.stats   77  11544 383104 1533173  8924/8643/440   20715/3993    45  231   26.43)
(smt.stats   78  11645 390671 1589133  8926/8645/440   20870/3993    45  231   26.53)
(smt.stats   79  11756 398560 1643696  8926/8645/440   20982/3993    45  231   26.53)
ramon: poll                 wall=12.000s usage=11.876s mem=28148KiB load=1.00 rootload=1.00
(smt.stats   80  11878 408754 1710195  8928/8645/440   21112/3994    45  231   26.53)
(smt.stats   81  12012 416749 1745129  8952/8671/441   21294/4063    46  235   26.63)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   82  12159 421413 1790321  9147/8672/441   21453/4068    46  235   26.82)
(smt.stats   83  12320 426032 1822569  9241/8915/441   21622/4068    46  235   26.82)
(smt.stats   84  12497 431271 1855492  9282/9001/444   22042/4185    47  248   26.82)
(smt.stats   85  12691 438147 1900640  9284/9003/444   22315/4185    47  248   26.91)
ramon: poll                 wall=13.000s usage=12.875s mem=28484KiB load=1.00 rootload=1.00
(smt.stats   86  12904 453436 1981383  9327/9008/444   22570/4282    48  256   27.01)
(smt.stats   87  13138 460479 2016120  9579/9088/444   23059/4289    48  256   27.10)
ramon: poll                 wall=14.000s usage=13.875s mem=28728KiB load=1.00 rootload=1.00
(smt.stats   88  13395 467058 2063813  9877/9422/444   23538/4297    48  256   27.20)
(smt.stats   89  13677 476883 2135876 10021/9629/444   24012/4300    48  256   27.31)
(smt.stats   90  13987 486564 2214094 10089/9808/445   24798/4824    49  263   27.42)
(smt.stats   91  14088 490585 2242298 10093/9812/445   25085/4824    49  263   28.25)
ramon: poll                 wall=15.000s usage=14.875s mem=29868KiB load=1.00 rootload=1.00
(smt.stats   92  14199 498050 2296497 10112/9812/445   25202/4824    49  263   28.25)
(smt.stats   93  14321 505719 2350527 10132/9834/445   25340/4825    49  263   28.35)
(smt.stats   94  14455 510765 2374115 10149/9864/445   25514/4825    49  263   28.35)
(smt.stats   95  14602 518352 2404849 10159/9879/448   25734/4999    50  270   28.44)
(smt.stats   96  14763 530003 2490478 10161/9881/448   25955/4999    50  270   28.44)
(smt.stats   97  14940 537097 2542231 10252/9894/448   26345/5002    50  270   28.44)
ramon: poll                 wall=16.000s usage=15.875s mem=30192KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 544819 2586908 10438/9985/448   26685/5003    50  270   28.54)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   99  15347 553780 2638294 10648/10173/448   27021/5009    50  270   28.64)
(smt.stats  100  15581 565684 2729573 10709/10391/448   27373/5011    50  270   28.83)
ramon: poll                 wall=17.000s usage=16.874s mem=30612KiB load=1.00 rootload=1.00
(smt.stats  101  15838 581720 2872271 10818/10430/448   27655/5015    50  270   28.93)
(smt.stats  102  16120 594285 2947554 10894/10548/448   28024/5017    50  270   29.02)
ramon: poll                 wall=18.000s usage=17.874s mem=30816KiB load=1.00 rootload=1.00
(smt.stats  103  16430 608846 3101082 11002/10636/448   28409/5023    50  270   29.12)
(smt.stats  104  16770 624970 3169897 11029/10739/448   28764/5024    50  270   29.23)
(smt.stats  105  16871 630284 3209461 11037/10753/448   28870/5024    50  270   29.23)
(smt.stats  106  16982 633179 3234892 11043/10759/448   29169/5025    50  270   29.33)
(smt.stats  107  17104 639242 3284931 11092/10767/448   29514/5027    50  270   29.33)
(smt.stats  108  17238 648361 3365023 11135/10835/448   29694/5029    50  270   29.42)
ramon: poll                 wall=19.000s usage=18.874s mem=31192KiB load=1.00 rootload=1.00
(smt.stats  109  17385 656294 3447271 11187/10862/448   29867/5032    50  270   29.52)
(smt.stats  110  17546 664051 3524518 11192/10912/449   30159/5623    51  271   29.61)
(smt.stats  111  17723 671092 3586384 11206/10915/449   30486/5623    51  271   29.71)
(smt.stats  112  17917 678639 3656263 11214/10934/449   31081/5623    51  271   29.81)
(smt.stats  113  18130 685579 3743996 11215/10935/449   31524/5623    51  271   29.91)
ramon: poll                 wall=20.000s usage=19.874s mem=31696KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:03:12 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.961s
ramon: group.utime          19.949s
ramon: group.stime          0.012s
ramon: group.mempeak        32036KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.088s
ramon: loadavg              0.99
