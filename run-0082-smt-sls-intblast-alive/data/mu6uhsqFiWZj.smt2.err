ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:04:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27472 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mu6uhsqFiWZj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             920388
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4243   1213  1177/1062/99      95/10     4   17   51.86)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710656 := 281474976710658 << 6
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710656 := 562949953421310 << 6
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   96.1538     10000        49          0            1        2)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710656 := 562949953421310 << 6
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710656 := 562949953421310 << 6
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710656 := 562949953421310 << 6
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710656 := 562949953421310 << 6
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710656 := 562949953421310 << 6
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&281474976710528
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 281474976710654 := 281474976710655 << 7
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&281474976710528
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 281474976710654 := 281474976710655 << 7
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&281474976710528
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 281474976710654 := 281474976710655 << 7
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 1 := 64&281474976710528
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 64 := 64&279258638311296
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 2 := 64&279258638311296
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 4 := 64&279258638311296
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 8 := 64&279258638311296
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 16 := 64&279258638311296
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 32 := 64&128
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&128
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 1 := 64&128
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&128
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 2 := 64&128
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&128
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 4 := 64&128
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&128
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 64 := 64&128
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&128
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 8 := 64&128
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&128
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 16 := 64&128
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&128
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 32 := 64&128
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 64 := 64&281474976710528
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 64 := 64&281474976710528
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&281474976710528
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 281474976710654 := 281474976710655 << 7
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&281474976710528
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 64 := 64&281474976710528
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&281474976710528
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 64 := 64&281474976710528
(smt.stats    1    202   5760   2554  1810/1640/248     195/23     9   58   52.65)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&281474976710528
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 5 := 64&281474976710528
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 4 := 64&281474976710528
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 8 := 64&281474976710528
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&281474976710528
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 4 := 64&281474976710528
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 64&128
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 1 := 64&128
(sat.ddfw       1      1    50.005     20001        98          1            1        3)
(smt.stats    2    313   9155   4403  2145/1704/254     320/54    10   60   52.86)
(smt.stats    3    414  11806   6816  2632/2383/262     420/75    12   63   53.07)
(smt.stats    4    531  15322  11104  2722/2458/270     548/106    14   93   53.17)
(sat.ddfw       1      1   50.7614     40001       196          2            1        5)
(smt.stats    5    653  19385  16097  2778/2476/270     718/119    14   93   53.27)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    754  22605  22044  2845/2555/271     836/134    15   95   53.36)
(smt.stats    7    865  25753  27299  2904/2625/273     956/147    17   96   53.47)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 1&277007119937470
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 277007119937407 := 279241048324063 << 1
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 1&277007119937470
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 277007119937407 := 279241048324063 << 1
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 1&277007119937470
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 277007119937407 := 279241048324063 << 1
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 1&277007119937470
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 277007119937279 := 279241048324063 << 1
(smt.stats    8    987  28680  32485  2934/2633/273    1114/150    17   96   53.68)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 1&272678883688450
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 1 := 1&272678883688450
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 1 := 1&272678883688450
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 1&281474976710654
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 1 := 1&281474976710654
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 1&281474976710654
band: (band[48] (if (= #109 47) 1 (if #597 2 #689)) (shl[48] (bv2int %1) (+ 48 #692))) 1 := 1&281474976710654
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 1 := 1&281474976710654
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 1 := 1&281474976710654
(sat.ddfw       1      1   43.6047     70001       343          3            1        8)
(smt.stats    9   1121  31635  38096  3006/2682/292    1315/203    19  102   53.78)
(smt.stats   10   1222  33646  44777  3090/2782/292    1463/203    19  102   53.87)
(smt.stats   11   1333  35522  52232  3188/2866/296    1348/204    20  377   53.97)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 2&281474976710528
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 36028797018963840 := 0 << 1
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 2&281474976710528
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 36028797018963840 := 0 << 1
ramon: poll                 wall=1.000s usage=0.942s mem=56416KiB load=0.94 rootload=0.93
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1455  37737  61183  3230/2882/296    1526/205    20  377   54.07)
(smt.stats   13   1589  41809  70242  3246/2918/301    1753/215    21  378   54.31)
(sat.ddfw       1      1   37.2787    110001       539          4            1       12)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 140737488355328&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710658 := 8796093022208 << 47
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 140737488355328&127
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710783 := 8796093022208 << 47
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 140737488355328&127
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 281474976710783 := 8796093022208 << 47
(smt.stats   14   1736  46373  83357  3305/2946/301    1944/252    22  378   54.41)
(smt.stats   15   1837  53595  94676  3312/2979/306    2055/263    23  379   54.51)
(smt.stats   16   1948  56720 102698  3317/2984/318    2252/273    25  383   54.51)
(smt.stats   17   2070  60484 113558  3332/2999/318    2390/273    25  383   54.60)
(sat.ddfw       1      1   32.1744    160000       784          5            1       17)
(smt.stats   18   2204  63291 123729  3365/3027/320    2544/342    27  475   55.08)
(smt.stats   19   2351  66061 136864  3392/3059/325    2718/355    29  483   55.08)
ramon: poll                 wall=2.002s usage=1.946s mem=57456KiB load=1.00 rootload=1.00
(smt.stats   20   2512  68184 142726  3428/3093/328    2943/368    30  484   55.08)
(sat.ddfw       1      1   28.0772    220001      1078          6            1       23)
(smt.stats   21   2613  71074 149879  3483/3097/328    3113/370    30  484   55.28)
(smt.stats   22   2724  73641 157659  3586/3254/329    3274/387    31  488   55.28)
(sat.ddfw       1      1   24.8668    290001      1421          7            1       30)
(smt.stats   23   2846  75453 167604  3614/3265/329    3461/388    31  488   55.37)
(smt.stats   24   2980  76553 173939  3626/3292/329    3647/388    31  488   55.37)
ramon: poll                 wall=3.000s usage=2.941s mem=57776KiB load=1.00 rootload=0.99
(smt.stats   25   3127  80375 182634  3635/3301/330    3952/415    32  490   55.37)
(smt.stats   26   3288  84317 196976  3658/3309/331    4224/433    33  493   55.56)
(smt.stats   27   3465  88027 212920  3693/3353/331    4518/433    33  493   55.66)
(smt.stats   28   3566  91407 223067  3709/3372/332    4664/445    34  501   55.66)
(sat.ddfw       1      1   22.2593    370001      1813          8            1       38)
(smt.stats   29   3677  95968 236643  3720/3377/332    4781/446    34  501   55.86)
(smt.stats   30   3799  99450 246039  3725/3388/332    4956/446    34  501   55.86)
ramon: poll                 wall=4.000s usage=3.940s mem=58480KiB load=1.00 rootload=1.00
(smt.stats   31   3933 102471 252725  3826/3396/332    5141/449    34  501   56.23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4080 105030 262482  3861/3502/333    5373/475    35  503   56.23)
(sat.ddfw       1      1   20.1432    460001      2254          9            1       47)
(smt.stats   33   4241 109861 277551  3924/3535/334    5666/488    36  503   56.23)
(smt.stats   34   4418 114901 294259  3955/3618/338    5901/501    37  523   56.32)
(smt.stats   35   4612 119029 308732  3974/3637/343    6368/505    38  533   56.32)
ramon: poll                 wall=5.000s usage=4.988s mem=58728KiB load=1.05 rootload=1.05
(smt.stats   36   4713 121329 318573  3981/3644/344    6483/544    39  557   56.32)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 128 := 1024&896
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 128 := 1024&384
(smt.stats   37   4824 124640 328373  4042/3645/344    6709/545    39  557   56.58)
(smt.stats   38   4946 125792 332949  4134/3731/354    6870/566    40  562   56.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 649)
(smt.stats   39   5080 127911 342796  4163/3823/354    6430/566    40  562   56.58)
(smt.stats   40   5227 128223 348989  4172/3835/354    6595/578    41  562   56.58)
(sat.ddfw       1      1   18.3352    560001      2745         10            1       57)
(smt.stats   41   5388 128974 356293  4176/3839/354    6787/578    41  562   56.58)
(smt.stats   42   5565 129455 362487  4176/3839/354    6981/578    41  562   56.58)
(smt.stats   43   5759 130080 367590  4180/3843/354    7176/578    41  562   56.58)
(smt.stats   44   5972 131352 375692  4186/3849/354    7467/578    41  562   56.67)
ramon: poll                 wall=6.000s usage=6.044s mem=58860KiB load=1.06 rootload=1.05
(smt.stats   45   6073 134687 381961  4216/3855/357    7636/639    42  575   56.67)
(sat.ddfw       1      1   16.6138    670001      3284         11            1       68)
(smt.stats   46   6184 140100 391778  4352/3882/357    7882/641    42  575   57.04)
ramon: poll                 wall=7.000s usage=6.936s mem=59316KiB load=0.89 rootload=0.90
(smt.stats   47   6306 146031 407595  4436/4041/357    8192/644    43  607   57.13)
(smt.stats   48   6440 150188 418891  4519/4101/357    8520/644    43  607   57.13)
(smt.stats   49   6587 153994 429184  4522/4185/357    8783/644    43  607   57.13)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 6 := 4294967296&138542760067140
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 33489036 := 4294967296&138542760067204
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 33489544 := 4294967296&138542760067460
(smt.stats   50   6748 160002 443240  4630/4212/357    9193/647    43  607   57.23)
(sat.ddfw       1      1   15.2925    790001      3872         12            1       80)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 33489288 := 4294967296&138542760067204
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 33489288 := 4294967296&138542760067204
ramon: poll                 wall=8.000s usage=7.932s mem=59644KiB load=1.00 rootload=0.99
(smt.stats   51   6925 163607 452818  4871/4310/362    9572/688    44  608   57.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7119 167833 469112  4994/4568/362   10026/693    44  608   57.61)
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&35184372089345
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&138542726574511
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&105553116266369
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 387028092977025 := 285873023221772 << 45
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&105553116266369
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 387028092977025 := 285873023221772 << 45
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&35184372089345
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&138542726574511
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&105553116266369
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 387028092977025 := 285873023221772 << 45
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&70368744177711
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 351843720888367 := 285873023221772 << 45
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&35184372089391
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&35184372089391
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 35184372088832&105553116266369
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 387028092977025 := 285873023746046 << 45
ramon: poll                 wall=9.000s usage=8.921s mem=60116KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   14.2435    920001      4509         13            1       93)
(smt.stats   53   7332 174243 489666  5131/4666/362   10645/758    45  608   57.80)
(smt.stats   54   7566 178867 509024  5238/4835/377   11615/764    45  608   57.89)
ramon: poll                 wall=10.002s usage=9.868s mem=60168KiB load=0.95 rootload=0.94
(smt.stats   55   7667 182139 524293  5256/4913/379   12214/845    46  613   57.99)
(smt.stats   56   7778 185337 538850  5317/4936/379   12478/846    46  613   57.99)
(sat.ddfw       1      1   13.2727   1060001      5196         14            1      108)
(smt.stats   57   7900 189081 553542  5386/4987/380   12840/1006    47  616   58.08)
(smt.stats   58   8034 189641 562947  5414/5071/380   13075/1006    47  616   58.08)
(smt.stats   59   8181 196279 589800  5417/5074/381   13370/1032    48  618   58.18)
ramon: poll                 wall=11.000s usage=10.776s mem=60456KiB load=0.91 rootload=0.91
(smt.stats   60   8342 203011 608728  5555/5078/381   13992/1033    48  618   58.37)
(smt.stats   61   8519 207247 626538  5625/5253/381   14409/1036    48  618   58.37)
ramon: poll                 wall=12.000s usage=11.756s mem=60860KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   12.4121   1210001      5931         15            1      123)
(smt.stats   62   8713 216592 663339  5841/5301/381   14778/1043    48  618   58.86)
(smt.stats   63   8926 219532 682559  6090/5745/383   15116/1229    49  636   58.95)
ramon: poll                 wall=13.000s usage=12.659s mem=61272KiB load=0.90 rootload=0.90
(smt.stats   64   9160 224754 699072  6206/5758/383   15773/1232    49  636   59.05)
(smt.stats   65   9417 231061 718065  6227/5873/384   16081/1232    49  636   59.05)
(smt.stats   66   9518 233201 730785  6237/5890/385   16446/1297    50  640   59.14)
(smt.stats   67   9629 236148 748477  6257/5904/385   16595/1297    50  640   59.14)
(sat.ddfw       1      1   11.6245   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=13.613s mem=61340KiB load=0.95 rootload=0.95
(smt.stats   68   9751 239435 769862  6365/5917/386   16745/1297    50  640   59.24)
(smt.stats   69   9885 242167 787972  6392/6027/386   17199/1390    51  646   59.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 101)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10032 246349 808267  6420/6061/386   17560/1391    51  646   59.33)
(smt.stats   71  10193 251126 827506  6460/6087/386   17814/1391    51  646   59.33)
ramon: poll                 wall=15.000s usage=14.500s mem=61628KiB load=0.89 rootload=0.89
(smt.stats   72  10370 256397 851020  6521/6156/386   18159/1391    51  646   59.33)
(smt.stats   73  10564 260824 871284  6574/6210/388   18587/1584    52  657   59.52)
(smt.stats   74  10777 266041 897598  6623/6272/389   18866/1585    52  657   59.52)
(sat.ddfw       1      1    10.936   1540001      7549         17            1      156)
(smt.stats   75  11011 269130 924461  6645/6286/389   19150/1653    53  676   59.52)
ramon: poll                 wall=16.000s usage=15.480s mem=61936KiB load=0.98 rootload=0.98
(smt.stats   76  11268 274327 951019  6675/6301/389   19837/1653    53  676   59.52)
(smt.stats   77  11550 281918 981861  6687/6334/389   20493/1653    53  676   60.08)
(smt.stats   78  11651 283903 996817  6688/6335/389   20777/1653    53  676   60.08)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11762 285844 1016913  6688/6335/389   20932/1653    53  676   60.08)
(smt.stats   80  11884 287500 1035287  6692/6335/389   21092/1653    53  676   60.08)
ramon: poll                 wall=17.000s usage=16.415s mem=62444KiB load=0.93 rootload=0.93
(smt.stats   81  12018 290777 1050541  6704/6351/389   21289/1653    53  676   60.08)
(smt.stats   82  12165 299065 1094194  6709/6356/389   21475/1653    53  676   60.17)
(sat.ddfw       1      1   10.3746   1720001      8431         18            1      174)
(smt.stats   83  12326 304960 1142300  6718/6365/389   21929/1653    53  676   60.17)
(smt.stats   84  12503 307968 1166371  6723/6368/389   22395/1653    53  676   60.27)
ramon: poll                 wall=18.000s usage=17.405s mem=62884KiB load=0.99 rootload=0.99
(smt.stats   85  12697 310653 1199057  6756/6386/390   22686/1978    54  680   60.27)
(smt.stats   86  12910 317912 1234481  6786/6412/390   23023/1978    54  680   60.90)
(smt.stats   87  13144 324947 1269673  6892/6451/390   23623/1985    54  680   61.00)
ramon: poll                 wall=19.000s usage=18.407s mem=63192KiB load=1.00 rootload=1.00
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 2&272609623113475
band: (band[48] (if (= #359 63) 1 (if #575 2 #761)) (shl[64] (* 2 #342) (mod #776 64))) 0 := 2&272609623113477
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #768 #772) 64)) 13835330664905277189 := 274825961406464 << 1
(sat.ddfw       1      1   9.90357   1910001      9362         19            1      193)
(smt.stats   88  13401 328022 1279890  7123/6545/390   23923/1994    54  680   61.38)
ramon: poll                 wall=20.000s usage=19.406s mem=63248KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:04:56 2024
ramon: root.execname        z3
ramon: root.utime           19.420s
ramon: root.stime           0.020s
ramon: group.total          19.457s
ramon: group.utime          19.429s
ramon: group.stime          0.028s
ramon: group.mempeak        63504KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              0.97
