ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:50:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40739 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ktXjbLWDpePe.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3064620
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   6951   1965  1438/1190/90     100/8     1   13   19.06)
(smt.stats    1    202   8144   3032  2124/1920/90     201/8     1   13   19.26)
(smt.stats    2    313  10437   5618  2353/1945/93     296/13     3   17   19.37)
(smt.stats    3    414  12834   7616  2497/2256/99     395/15     5   17   19.46)
(smt.stats    4    525  13667  10193  2508/2265/99     503/15     5   17   19.46)
(smt.stats    5    647  16222  12577  2650/2388/100     611/29     7   26   19.57)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&9223372036854775807
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&9223372036854775807
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931435 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931423 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931419 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931392 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931392 := 1016962226931435&2033924453862912
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931328 := 1016962226931435&2033924453862912
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862912
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 31 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 27 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862876
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862876
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862880
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862876
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775808 := 2033924453862874 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775808 := 2033924453862874 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775808 := 2033924453862874 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&1996220534831972352
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 1016962226931436 := 1016962226931437 << 50
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862880
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862919
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862912
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924712693760
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924712693760
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033959072432128
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033959072432128
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2251799813685248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 2251799813685248 := 2033924453862874 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2251799813685248
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 1016962226931436 := 1016962226946050 << 50
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2251799813685248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 2251799813685248 := 2033924453892100 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2251799813685248
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 1016962226931436 := 1016962226946050 << 50
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931264 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931200 := 1016962226931435&2040693581152256
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18143  15342  2753/2471/192     707/39     9   46   20.08)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931008 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930688 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930688 := 1016962226931435&2034097048257536
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930944 := 1016962226931435&2034097048257536
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930688 := 1016962226931435&2034097048257536
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930688 := 1016962226931435&2034096779820032
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034097048256512
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 17592186044416 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034097048256512
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034097048256512
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034097585127424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034098658869248
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034098658869248
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034098658869248
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034105101320192
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034105101320192
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034113691254784
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034113691254784
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034113691254784
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1011550697553920 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 290271069732864 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 562949953388544 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 589338232487936 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 870813209198592 := 1016962226931435&2034096511385600
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 2034096511385600 := 2033924453924868 << 49
(smt.stats    7    859  20442  20645  2933/2665/343     824/59    11   81   20.67)
(smt.stats    8    981  23216  24420  2974/2705/346     908/58    13   91   20.67)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 1&2034096511385616
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385616
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692808 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385616
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692808 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385616
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692808 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 62 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 62 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511418372
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511418372
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511418372
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511418372
(smt.stats    9   1115  26952  29451  3051/2758/355    1001/74    14  105   20.86)
(smt.stats   10   1216  28273  30884  3162/2786/375    1130/89    15  109   21.24)
(smt.stats   11   1327  29886  37322  3526/3053/375    1278/93    15  109   21.34)
ramon: poll                 wall=1.002s usage=0.900s mem=22744KiB load=0.90 rootload=0.87
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33209  44172  3727/3438/385    1451/142    17  112   21.43)
(smt.stats   13   1583  37415  52041  3759/3468/387    1637/192    18  142   21.53)
(smt.stats   14   1730  42070  57729  3946/3479/387    1862/215    18  142   21.63)
(smt.stats   15   1831  45823  66461  4030/3675/390    2037/333    19  148   21.86)
(smt.stats   16   1942  46760  70038  4456/4169/391    2248/407    20  149   21.96)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 2 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 2 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 5 := 8330954563022322253&774056185954305
(smt.stats   17   2065  50522  77064  4630/4204/392    2559/516    21  150   22.17)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 5 := 8330954563022322253&809532615819265
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 9 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 9 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
(smt.stats   18   2199  54655  86083  4770/4393/413    2819/575    22  155   22.26)
(smt.stats   19   2346  62930 102104  4867/4510/428    3227/652    23  158   22.36)
ramon: poll                 wall=2.000s usage=1.897s mem=23720KiB load=1.00 rootload=0.99
(smt.stats   20   2507  68954 111094  4972/4679/441    3456/826    24  158   22.45)
(smt.stats   21   2608  77087 128803  4996/4709/443    3573/884    26  180   22.55)
(smt.stats   22   2719  86192 151067  5011/4724/443    3671/884    26  180   22.55)
(smt.stats   23   2841  93876 170357  5029/4742/443    3794/884    26  180   22.65)
(smt.stats   24   2975  98277 183331  5060/4773/447    4050/917    27  192   22.65)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532800 := 1041369320377790281&809532615819264
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532800 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532800 := 1041369320377790281&809532615819776
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3122 104128 198871  5136/4794/448    4323/1010    28  212   22.75)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371533056 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819840
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819840
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592758272 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592758272 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592758272 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592758272 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703567182692864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703567182692864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703567182692864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703567182692864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703584362562048 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703618722300416 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703618722300416 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703618722300416 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703601542431232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
(smt.stats   26   3283 107322 208613  5387/5031/494    4591/1107    29  229   22.94)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809515435985408
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809515435985408
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809515435985408
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592793088 := 1041369320377790281&809515435985408
(smt.stats   27   3460 117649 227719  5607/5320/520    4961/1188    31  249   23.28)
(smt.stats   28   3561 125256 248394  5614/5327/520    5165/1188    31  249   23.28)
(smt.stats   29   3672 130165 263589  5652/5365/521    5370/1421    32  253   23.28)
ramon: poll                 wall=3.000s usage=2.897s mem=24692KiB load=1.00 rootload=1.00
(smt.stats   30   3794 136139 274865  5753/5380/523    5620/1448    33  266   23.39)
(smt.stats   31   3928 141811 288122  5859/5534/529    5883/1535    34  269   23.51)
(smt.stats   32   4075 146936 309362  5883/5596/533    6194/1591    35  304   23.51)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 81920 := 2082738640755580563&70368744177664
(smt.stats   33   4236 153083 334044  6180/5607/535    6581/1664    36  313   23.64)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 35184372089088 := 2082738640755580563&422212465065984
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 35184372089088 := 2082738640755580563&422212465065984
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 35184372089088 := 2082738640755580563&422212465065984
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 35184372089088 := 2082738640755580563&422212465065984
(smt.stats   34   4413 156883 349063  6580/6293/547    7049/1873    38  338   23.84)
ramon: poll                 wall=4.000s usage=3.896s mem=25392KiB load=1.00 rootload=1.00
(smt.stats   35   4607 163944 375799  6723/6323/554    7718/1878    38  338   24.04)
(smt.stats   36   4708 168136 394068  6988/6549/554    8121/2172    39  379   24.23)
(smt.stats   37   4819 173072 411917  7122/6691/555    8361/2298    40  382   24.23)
(smt.stats   38   4941 177851 423285  7278/6826/555    8854/2303    40  382   24.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 216)
(smt.stats   39   5075 184293 441579  7397/6972/555    8991/2305    40  382   24.53)
ramon: poll                 wall=5.000s usage=4.896s mem=26104KiB load=1.00 rootload=1.00
(smt.stats   40   5222 188210 453128  7649/7093/555    9306/2310    40  382   24.63)
(smt.stats   41   5383 195787 490426  7810/7346/555    9774/2315    40  382   24.73)
(smt.stats   42   5560 201952 502427  7835/7518/555    9951/2315    40  382   24.73)
ramon: poll                 wall=6.000s usage=5.896s mem=26276KiB load=1.00 rootload=1.00
(smt.stats   43   5754 209238 523256  7876/7537/555   10299/2318    40  382   24.83)
(smt.stats   44   5967 219107 551715  7930/7580/555   10539/2325    40  382   24.83)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6068 222851 581517  8002/7680/555   10814/2325    40  382   25.03)
(smt.stats   46   6179 230010 618779  8126/7781/556   10964/2829    41  435   25.03)
(smt.stats   47   6301 236375 637082  8216/7783/556   11224/2832    41  435   25.22)
ramon: poll                 wall=7.000s usage=6.895s mem=26944KiB load=1.00 rootload=1.00
(smt.stats   48   6435 241023 649042  8417/7907/556   11536/2839    41  435   25.40)
(smt.stats   49   6582 247095 661093  8459/8100/557   11875/3052    42  436   25.49)
(smt.stats   50   6743 255850 677373  8630/8121/557   12205/3063    42  436   25.68)
ramon: poll                 wall=8.000s usage=7.895s mem=27180KiB load=1.00 rootload=1.00
(smt.stats   51   6920 262303 695463  8867/8334/557   12567/3068    42  436   25.78)
(smt.stats   52   7114 271876 735619  8904/8559/558   13075/3380    43  439   25.78)
ramon: poll                 wall=9.000s usage=8.895s mem=27384KiB load=1.00 rootload=1.00
(smt.stats   53   7327 289485 815532  9080/8564/558   13539/3394    43  439   25.88)
(smt.stats   54   7561 299017 860768  9179/8834/559   14094/3626    44  441   25.97)
(smt.stats   55   7662 305347 887090  9193/8848/559   14369/3626    44  441   26.07)
(smt.stats   56   7773 316464 936865  9253/8855/559   14618/3626    44  441   26.07)
ramon: poll                 wall=10.000s usage=9.894s mem=27616KiB load=1.00 rootload=1.00
(smt.stats   57   7895 323915 971938  9391/8926/559   15094/3641    44  441   26.16)
(smt.stats   58   8029 328519 994189  9491/9069/560   15455/3886    45  447   26.16)
ramon: poll                 wall=11.000s usage=10.894s mem=27916KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   59   8176 335594 1014545  9722/9169/560   15903/3890    45  447   26.39)
(smt.stats   60   8337 340194 1030070 10092/9461/560   16333/3893    45  447   26.48)
(smt.stats   61   8514 347958 1078142 10338/9869/560   17080/3898    45  447   26.80)
ramon: poll                 wall=12.000s usage=11.894s mem=28448KiB load=1.00 rootload=1.00
(smt.stats   62   8708 369041 1136920 10347/10002/560   17296/3898    45  447   26.80)
(smt.stats   63   8921 385028 1249128 10375/10025/560   17665/3899    45  447   26.89)
(smt.stats   64   9155 393481 1287511 10418/10074/572   18025/4281    47  502   27.09)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 28 := 28&46
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 28 := 28&46
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 28 := 28&46
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 28 := 28&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775838 := 9223670962283610116 << 4
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 28 := 28&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775838 := 9223670962283610116 << 4
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 28 := 28&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775838 := 9223670962283610116 << 4
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 28 := 28&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775838 := 9223670957988659202 << 4
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   65   9412 401168 1321875 10662/10317/589   18599/4339    48  508   27.37)
(smt.stats   66   9513 404423 1336093 10677/10323/589   18891/4340    48  508   27.37)
ramon: poll                 wall=13.000s usage=12.894s mem=28908KiB load=1.00 rootload=1.00
(smt.stats   67   9624 412423 1352135 10740/10340/589   19141/4348    48  508   27.37)
(smt.stats   68   9746 418201 1368464 10931/10458/589   19477/4411    49  515   27.58)
(smt.stats   69   9880 425678 1385866 11209/10604/589   19833/4412    49  515   27.58)
ramon: poll                 wall=14.000s usage=13.894s mem=29144KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 431207 1417827 11316/10935/589   20721/4413    49  515   27.68)
(smt.stats   71  10188 441819 1485445 11416/10975/589   21095/4414    49  515   27.77)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 299067162755081 := 4067848907725743&422212465066072
(smt.stats   72  10365 450369 1507427 11671/11124/589   21714/4423    49  515   27.96)
ramon: poll                 wall=15.000s usage=14.893s mem=29500KiB load=1.00 rootload=1.00
(smt.stats   73  10559 461291 1524112 11833/11437/589   22220/4427    49  515   27.96)
(smt.stats   74  10772 473511 1576059 12111/11590/589   22991/4428    49  515   28.06)
(smt.stats   75  11006 484300 1612885 12132/11786/590   23758/4974    50  525   28.28)
ramon: poll                 wall=16.000s usage=15.893s mem=29864KiB load=1.00 rootload=1.00
(smt.stats   76  11263 498496 1644075 12376/11824/590   24463/4983    50  525   28.38)
(smt.stats   77  11545 509926 1724315 12673/12222/592   25507/5171    51  526   28.57)
(smt.stats   78  11646 515769 1772455 12694/12344/592   25710/5351    52  532   28.57)
ramon: poll                 wall=17.000s usage=16.893s mem=30224KiB load=1.00 rootload=1.00
(smt.stats   79  11757 522974 1804529 12839/12352/592   25928/5353    52  532   28.67)
(smt.stats   80  11879 530109 1850505 13060/12555/592   26173/5354    52  532   28.67)
ramon: poll                 wall=18.002s usage=17.895s mem=30364KiB load=1.00 rootload=1.00
(smt.stats   81  12013 536056 1877960 13131/12741/592   26541/5354    52  532   28.67)
(smt.stats   82  12160 544882 1921852 13228/12788/592   26948/5355    52  532   28.77)
ramon: poll                 wall=19.000s usage=18.892s mem=30468KiB load=1.00 rootload=1.00
(smt.stats   83  12321 554054 1957140 13604/12953/592   27465/5357    52  532   28.96)
ramon: poll                 wall=20.000s usage=19.892s mem=30732KiB load=1.00 rootload=1.00
(smt.stats   84  12498 561583 1983746 13839/13297/592   27921/5357    52  532   29.06)
ramon: end                  Tue Dec 24 15:50:20 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.982s
ramon: group.utime          19.954s
ramon: group.stime          0.028s
ramon: group.mempeak        33080KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.092s
ramon: loadavg              0.99
