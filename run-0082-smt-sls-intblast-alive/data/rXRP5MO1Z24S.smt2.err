ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:10:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27274 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rXRP5MO1Z24S.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             940043
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    78.125     10000        49          0            1        2)
(sat.ddfw       1      1   40.6545     20001        98          1            1        3)
(smt.stats    0    101   4142    429  1174/1062/97      92/24     5   17   52.27)
(sat.ddfw       1      1   44.2478     40001       196          2            1        5)
(smt.stats    1    202   4612    925  2507/2193/97     250/48     5   17   52.48)
(sat.ddfw       1      1   43.4153     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.962s mem=54852KiB load=0.96 rootload=0.96
(smt.stats    2    313   5066   1365  2660/2396/97     397/58     5   17   52.76)
(sat.ddfw       1      1   32.5998    110001       539          4            1       12)
(smt.stats    3    414   5642   2691  3085/2861/100     567/206     6   18   52.76)
(smt.stats    4    525   6921   4938  3151/2919/103     704/245     8   26   52.76)
(smt.stats    5    647  10997   8444  3207/2971/104     830/255     9   26   52.86)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14637  11866  3253/2999/104     940/262    10   27   52.98)
(smt.stats    7    859  17090  14218  3322/3086/105    1052/300    11   28   52.98)
(smt.stats    8    981  18787  17806  3354/3115/113    1174/312    12   33   53.12)
(sat.ddfw       1      1   26.6519    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.889s mem=55308KiB load=0.93 rootload=0.92
(smt.stats    9   1115  20875  23076  3407/3123/114    1294/318    13   51   53.22)
(smt.stats   10   1216  23857  27081  3455/3187/115    1391/324    14   56   53.22)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1056 := 248682535433058&272666918239166
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1056 := 248682535433058&272666918239166
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1053 := 248682535433058&272666918239169
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 16 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 32 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 20 := 248682535433058&272666918239166
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 20 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 16 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 32 := 248682535433058&272666918239166
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 32 := 248682535433058&272666918239169
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 128 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918239744
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239424
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239296
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918240320
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239744
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239296
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239296
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239296
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918248512
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918248512
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918240320
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918256704
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 33 := 248682535433058&272666918387712
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 32 := 248682535433058&272666918387712
(smt.stats   11   1327  25331  29621  3628/3229/115    1550/338    14   56   53.63)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918322176
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918256640
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918273024
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918256640
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918322176
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918339072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918339072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918260224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918257152
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938311168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938311168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938638848
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938376704
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938573312
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938330624
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938835456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938835456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938835456
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27640  38680  3774/3533/326    1808/424    16  101   54.02)
(sat.ddfw       1      1   23.7722    220001      1078          6            1       23)
(smt.stats   13   1583  30881  47632  3812/3544/327    2139/447    17  112   54.12)
(smt.stats   14   1730  34525  57971  3967/3592/327    2421/450    17  112   54.12)
ramon: poll                 wall=3.003s usage=2.872s mem=56816KiB load=0.98 rootload=0.99
(smt.stats   15   1831  37104  63925  4089/3751/327    2599/450    17  112   54.54)
(smt.stats   16   1942  39269  71070  4230/3990/330    2803/693    18  113   54.54)
(smt.stats   17   2064  41644  79105  4256/4003/332    3026/747    19  118   54.76)
(sat.ddfw       1      1    21.309    290001      1421          7            1       30)
(smt.stats   18   2198  42859  88620  4623/4101/333    3237/824    20  123   54.86)
(smt.stats   19   2345  43398  92495  4792/4514/333    3431/863    21  124   55.26)
ramon: poll                 wall=4.000s usage=3.867s mem=57444KiB load=1.00 rootload=0.99
(smt.stats   20   2506  44096  97386  5630/5280/334    3721/863    21  124   55.51)
(sat.ddfw       1      1    19.333    370001      1813          8            1       38)
(smt.stats   21   2607  44731 102995  5981/5677/334    3882/916    22  125   55.51)
(smt.stats   22   2718  45386 109009  6178/5883/334    4030/916    22  125   55.60)
(smt.stats   23   2840  46110 115520  6527/6160/334    4167/916    22  125   55.60)
(smt.stats   24   2974  46533 117295  6754/6464/334    4334/916    22  125   55.79)
ramon: poll                 wall=5.000s usage=4.868s mem=58128KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.6332    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3121  51061 141808  7140/6878/335    5174/1143    23  128   55.93)
(smt.stats   26   3282  55798 156970  7211/6886/335    5918/1144    23  128   56.24)
(smt.stats   27   3459  60660 168871  7259/6959/335    6197/1145    23  128   56.24)
ramon: poll                 wall=6.000s usage=5.867s mem=58604KiB load=1.00 rootload=1.00
(smt.stats   28   3560  63624 178861  7278/7004/335    6609/1147    23  128   56.40)
(sat.ddfw       1      1   16.2101    560001      2745         10            1       57)
(smt.stats   29   3671  67477 193171  7306/7044/338    7060/1561    24  130   56.50)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 12 := 31085316929132&67108864
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 12 := 31085316929132&3145728
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 12 := 31085316929132&3145728
(smt.stats   30   3793  70834 219878  7406/7049/338    7303/1567    24  130   56.59)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 31085316929132&5267456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 31085316929132&5267456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 31085316929132&5267456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 31085316929132&5267456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 128 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 256 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 16 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 16 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&3153920
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&3153920
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&3170304
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 2 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 262144 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 270336 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 532480 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1056768 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1056768 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 385024 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 270336 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 270336 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 24576 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 40960 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 73728 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 40960 := 31085316929132&2105344
(smt.stats   31   3927  73721 259952  7615/7273/361    7643/1737    26  160   56.90)
ramon: poll                 wall=7.000s usage=6.928s mem=59544KiB load=1.06 rootload=1.06
(smt.stats   32   4074  75828 268112  7773/7349/401    8041/1748    27  168   57.09)
(sat.ddfw       1      1   14.9803    670001      3284         11            1       68)
(smt.stats   33   4235  76804 276421  8186/7578/401    8341/1750    27  168   57.33)
ramon: poll                 wall=8.003s usage=7.991s mem=60080KiB load=1.06 rootload=1.07
(smt.stats   34   4412  78328 292583  8534/7951/401    8752/1827    28  168   57.62)
(sat.ddfw       1      1    13.809    790001      3872         12            1       80)
(smt.stats   35   4606  80584 301879  9009/8426/403    9756/1976    29  169   57.62)
ramon: poll                 wall=9.000s usage=8.936s mem=59952KiB load=0.95 rootload=0.94
(smt.stats   36   4707  82986 337534  9253/8823/404   10068/1980    29  169   57.73)
(smt.stats   37   4818  84444 354003  9461/9051/404   10606/2212    30  173   57.83)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4358144 := 248682535433058&217597224255715
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4358144 := 248682535433058&217597224255587
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4358144 := 248682535433058&217597224255595
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4358144 := 248682535433058&217597224255593
(smt.stats   38   4940  86846 389703  9817/9539/405   12053/2381    31  173   57.92)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5074  90964 403011  9873/9573/416   12969/2382    31  173   58.21)
ramon: poll                 wall=10.000s usage=9.982s mem=60708KiB load=1.05 rootload=1.04
(sat.ddfw       1      1   12.8662    920001      4509         13            1       93)
(smt.stats   40   5221  97004 433312 10098/9633/416   14063/2750    32  179   58.79)
(smt.stats   41   5382 100437 452235 10304/9860/416   14839/2753    32  179   58.89)
ramon: poll                 wall=11.000s usage=11.106s mem=61332KiB load=1.12 rootload=1.13
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   42   5559 106636 473022 10466/10067/416   16832/2761    32  179   59.24)
(sat.ddfw       1      1   12.0804   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=12.190s mem=61940KiB load=1.08 rootload=1.08
(smt.stats   43   5753 108871 490914 11228/10287/416   17488/2765    32  179   59.56)
ramon: poll                 wall=13.000s usage=13.248s mem=62208KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   11.4199   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=14.208s mem=62476KiB load=0.96 rootload=0.96
(smt.stats   44   5966 113835 550208 11704/11009/416   18716/2784    32  179   59.94)
(smt.stats   45   6067 117249 575073 11766/11490/416   19566/2785    32  179   59.94)
(smt.stats   46   6178 122554 603182 11840/11512/416   20644/2796    32  179   60.04)
(sat.ddfw       1      1   10.7527   1370001      6715         16            1      139)
(smt.stats   47   6300 126387 614311 11946/11631/416   20993/2806    32  179   60.14)
ramon: poll                 wall=15.000s usage=15.208s mem=62732KiB load=1.00 rootload=1.00
(smt.stats   48   6434 126810 615720 12069/11805/416   21145/2810    32  179   60.61)
ramon: poll                 wall=16.000s usage=16.207s mem=63244KiB load=1.00 rootload=1.00
(smt.stats   49   6581 131094 625994 12779/12446/416   21519/2813    32  179   60.41)
(smt.stats   50   6742 136094 647878 13017/12610/417   21919/4283    33  182   60.51)
(sat.ddfw       1      1   10.1748   1540001      7549         17            1      156)
(smt.stats   51   6919 140656 666186 13304/12785/417   22361/4297    33  182   60.83)
ramon: poll                 wall=17.000s usage=17.207s mem=63244KiB load=1.00 rootload=1.00
(smt.stats   52   7113 144805 680620 13564/13112/417   23191/4305    33  182   60.93)
ramon: poll                 wall=18.000s usage=18.207s mem=63500KiB load=1.00 rootload=1.00
(smt.stats   53   7326 145530 684014 14004/13488/417   23525/4323    33  182   61.12)
(sat.ddfw       1      1   9.66235   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=19.207s mem=64012KiB load=1.00 rootload=1.00
(smt.stats   54   7560 147042 687400 14368/14071/417   23762/4325    33  182   61.99)
(smt.stats   55   7661 148620 693787 15466/15079/417   23891/4327    33  182   61.80)
ramon: poll                 wall=20.000s usage=20.207s mem=64524KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:11:06 2024
ramon: root.execname        z3
ramon: root.utime           20.210s
ramon: root.stime           0.000s
ramon: group.total          20.221s
ramon: group.utime          20.213s
ramon: group.stime          0.008s
ramon: group.mempeak        64780KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.01
