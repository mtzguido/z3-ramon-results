ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:06:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27397 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/o6TuD0Gin3Eh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             925281
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4062   1354  1182/1065/99      91/5     4   18   51.98)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   93.4579     10000        49          0            1        2)
(smt.stats    1    202   6457   2349  1684/1516/103     190/16     6   23   52.07)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4 := 255&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 4 := 4 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4 := 255&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 4 := 4 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 255&4
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 255&4
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 255&8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 255&8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4 := 255&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 4 := 4 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 16 := 255&16
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 16 := 16 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 255&0
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 1 := 0 << 8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 255&0
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 1 := 0 << 8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 255&0
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 1 := 0 << 8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 255&0
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #105))) 1 := 0 << 8
(sat.ddfw       1      1   46.7336     20001        98          1            1        3)
(smt.stats    2    313   8075   3881  1925/1745/136     307/31     9   42   52.46)
(smt.stats    3    414  10023   5552  2174/1957/137     430/41    10   42   52.46)
(smt.stats    4    525  10986   7712  2304/2041/143     522/74    12   52   52.56)
(smt.stats    5    647  13486  10686  2435/2151/143     650/76    12   52   52.65)
(sat.ddfw       1      1    47.619     40001       196          2            1        5)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  17158  13745  2443/2211/143     751/76    12   52   52.65)
(smt.stats    7    859  18855  17833  2582/2224/143     856/88    12   52   52.76)
(smt.stats    8    981  20106  20781  2621/2379/146     956/93    13   55   52.86)
(smt.stats    9   1115  23948  24761  2647/2389/146    1089/116    14   60   52.99)
(smt.stats   10   1216  25367  26839  2682/2410/146    1187/119    14   60   52.99)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 274877907199 := 140737488355322&274877907199
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 274877907198 := 140737488355322&274877907199
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 274877907192 := 140737488355322&274877907199
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 274877906960 := 140737488355322&274877906960
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 563224831328272 := 560753077649410 << 46
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 2 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355320 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355312 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355304 := 140737488355322&140737488355305
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 71353906596151273 := 561850441794550 << 46
(sat.ddfw       1      1   41.3793     70001       343          3            1        8)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355304 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355304 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355312 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355312 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355312 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355301 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355300 := 140737488355322&140737488355328
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 140737488355296 := 140737488355322&140737488355328
(smt.stats   11   1327  26203  27908  2816/2559/183    1307/126    15   62   53.18)
ramon: poll                 wall=1.000s usage=1.000s mem=55252KiB load=1.00 rootload=0.98
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28177  36601  2875/2632/190    1445/138    16   74   53.27)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&32
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&64
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&64
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&71
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&64
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&33554432
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&256
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&256
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&512
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&512
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&256
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&1024
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&512
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&1024
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&256
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 128 := 281474976710644&129
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 71213169107796097 := 561850438909952 << 47
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 128 := 281474976710644&129
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 71213169107796097 := 561850438909952 << 47
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 281474976710644&128
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 128 := 281474976710644&129
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #826 #830) 64)) 71213169107796097 := 561850438910460 << 47
(sat.ddfw       1      1   35.0877    110001       539          4            1       12)
(smt.stats   13   1583  31019  41927  2994/2700/259    1576/202    18  100   53.66)
(smt.stats   14   1730  33400  47097  3083/2836/260    1747/227    19  102   53.66)
(smt.stats   15   1831  37412  51464  3087/2840/260    1874/227    19  102   53.83)
(smt.stats   16   1942  41126  57038  3090/2843/264    1985/245    20  105   53.92)
(smt.stats   17   2064  44068  64648  3102/2852/271    2091/245    21  122   54.02)
(sat.ddfw       1      1   30.3024    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=2.207s mem=56192KiB load=1.21 rootload=1.21
(smt.stats   18   2198  46165  69098  3236/2858/271    2254/259    22  144   54.11)
(smt.stats   19   2345  48468  73201  3286/3032/271    2401/259    22  144   54.11)
(smt.stats   20   2506  53586  82192  3316/3069/271    2598/259    22  144   54.21)
(smt.stats   21   2607  57615  88283  3316/3069/271    2707/259    22  144   54.21)
(smt.stats   22   2718  63732  97238  3317/3070/271    2817/259    22  144   54.57)
(smt.stats   23   2840  70638 107072  3317/3070/271    2939/259    22  144   54.57)
(sat.ddfw       1      1   26.4555    220001      1078          6            1       23)
(smt.stats   24   2974  75192 114840  3329/3082/271    3075/259    22  144   54.57)
(smt.stats   25   3121  80040 121202  3329/3082/271    3243/259    22  144   54.57)
(smt.stats   26   3282  86352 132243  3329/3082/271    3405/259    22  144   54.66)
(smt.stats   27   3459  92217 142472  3337/3090/274    3573/332    23  149   54.89)
(smt.stats   28   3560  94143 147286  3369/3105/275    3672/334    23  149   54.89)
ramon: poll                 wall=3.000s usage=3.327s mem=57172KiB load=1.12 rootload=1.11
(smt.stats   29   3671  95948 155422  3466/3144/275    3781/342    24  169   54.99)
(sat.ddfw       1      1   23.4742    290001      1421          7            1       30)
(smt.stats   30   3793  99909 165619  3477/3230/275    3939/342    24  169   54.99)
(smt.stats   31   3927 104836 177286  3483/3236/275    4069/342    24  169   54.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 107814 183967  3580/3243/276    4234/403    25  173   54.99)
(sat.ddfw       1      1   21.0194    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.327s mem=57156KiB load=1.00 rootload=1.00
(smt.stats   33   4235 111165 193695  3642/3336/276    4440/406    25  173   55.08)
(smt.stats   34   4412 116262 203474  3764/3516/279    4729/476    26  175   55.18)
(smt.stats   35   4606 121150 215745  3851/3527/279    4924/483    26  175   55.18)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 274877907232 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 274877907008 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 274877907008 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 274877907200 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 549755813888 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 549755813888 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 549755813888 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 549755813888 := 70368744177661&280375465083138
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 549755814144 := 70368744177661&280375465083138
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 1099511628032 := 70368744177661&280375465083138
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 1099511627776 := 70368744177661&280375465083136
(smt.stats   36   4707 123654 223722  3911/3623/280    5064/538    27  181   55.18)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 1099511628032 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 1099511628032 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 6597069766912 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 6597069766912 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4398046511360 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4398046511360 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4398046511360 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4398046511360 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 5497558139136 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 7696581394688 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 7696581394688 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 7696581394688 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 10995116278016 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 10995116278016 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627905792 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 15393162789120 := 70368744177661&280375465083138
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 16492674416896 := 70368744177661&280375465083138
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 16492674416896 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 10995116278016 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 16492674416896 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 16492674416896 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 15393162789120 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 15393162789120 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 16492674416896 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 56075093016832 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 10995116278016 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627906304 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627906816 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627907840 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627909888 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627913984 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627922176 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627938560 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094627971328 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094628036864 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094628167936 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094628430080 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094628954368 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094630002944 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094632100096 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094636294400 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094644683008 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094661460224 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094695014656 := 70368744177661&280375465083136
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 12094762123520 := 70368744177661&280375465083136
(smt.stats   37   4818 124997 228911  4158/3704/363    5059/585    28  345   56.05)
(sat.ddfw       1      1   19.0194    460001      2254          9            1       47)
(smt.stats   38   4940 125699 230525  4343/3898/473    5495/590    28  345   56.25)
(smt.delete-inactive-clauses  :num-deleted-clauses 503)
ramon: poll                 wall=5.000s usage=5.497s mem=58784KiB load=1.17 rootload=1.17
(smt.stats   39   5074 131861 243956  4560/4254/480    5727/598    28  345   56.34)
(smt.stats   40   5221 139902 265229  4753/4299/480    6062/1047    29  391   57.00)
(smt.stats   41   5382 145789 291463  4915/4512/480    6291/1050    29  391   57.11)
(sat.ddfw       1      1   17.3702    560001      2745         10            1       57)
(smt.stats   42   5559 151970 313933  4969/4722/485    7314/1398    31  399   57.20)
ramon: poll                 wall=6.000s usage=6.468s mem=59568KiB load=0.97 rootload=0.97
(smt.stats   43   5753 163937 337590  5009/4746/488    7753/1996    33  408   57.20)
(smt.stats   44   5966 168600 352823  5582/5335/489    8600/2087    34  410   57.50)
(smt.stats   45   6068 171537 364482  5682/5435/491    8995/2461    35  425   57.50)
(sat.ddfw       1      1   15.9768    670001      3284         11            1       68)
(smt.stats   46   6179 174124 369805  5733/5444/491    9118/2465    35  425   57.50)
ramon: poll                 wall=7.000s usage=7.460s mem=59988KiB load=0.99 rootload=1.00
(smt.stats   47   6301 179232 381645  5852/5518/493    9593/2496    36  437   57.60)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6435 182028 392392  6197/5950/494   10151/2898    37  441   57.69)
(smt.stats   49   6582 185919 396790  6377/5956/494   10668/2907    37  441   57.79)
ramon: poll                 wall=8.000s usage=8.459s mem=60328KiB load=1.00 rootload=0.99
(smt.stats   50   6743 189298 414655  7030/6334/494   11329/2921    37  441   57.98)
(sat.ddfw       1      1   14.7765    790001      3872         12            1       80)
(smt.stats   51   6920 194418 441773  7494/6916/494   11842/2937    37  441   58.18)
(smt.stats   52   7114 199893 468034  7769/7522/502   13285/3909    39  464   58.38)
ramon: poll                 wall=9.000s usage=9.531s mem=60888KiB load=1.07 rootload=1.08
(smt.stats   53   7327 205379 515963  7781/7530/502   13829/3910    39  464   58.47)
(sat.ddfw       1      1    13.968    920001      4509         13            1       93)
(smt.stats   54   7561 214893 575144  7939/7678/505   14800/4894    40  467   58.98)
(smt.stats   55   7662 217683 591824  8196/7699/505   15015/4918    40  467   58.98)
ramon: poll                 wall=10.000s usage=10.528s mem=61292KiB load=1.00 rootload=0.99
(smt.stats   56   7773 218209 593125  8269/7993/505   15108/5188    41  489   59.08)
(smt.stats   57   7895 219723 598637  8855/8524/505   15225/5222    41  489   59.17)
(smt.stats   58   8029 221850 604922  9059/8808/505   15368/5223    41  489   59.17)
(smt.stats   59   8176 226587 624157  9117/8838/508   15517/5228    42  501   59.17)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 134217727&281474976580096
(smt.stats   60   8337 229731 639230  9197/8871/508   15699/5228    42  501   59.43)
(sat.ddfw       1      1   13.0415   1060001      5196         14            1      108)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 134217727&281474976584192
(smt.stats   61   8514 232737 670977  9442/9019/513   16167/5238    43  504   59.52)
ramon: poll                 wall=11.000s usage=11.526s mem=61728KiB load=1.00 rootload=1.00
(smt.stats   62   8708 241541 705966  9490/9243/513   16603/5379    44  504   59.52)
ramon: poll                 wall=12.000s usage=12.498s mem=62008KiB load=0.97 rootload=0.97
(smt.stats   63   8921 246833 724771  9823/9253/513   16918/5391    44  504   59.62)
(sat.ddfw       1      1    12.209   1210001      5931         15            1      123)
(smt.stats   64   9155 251943 755211  9934/9622/518   17243/5631    45  532   59.81)
ramon: poll                 wall=13.000s usage=13.461s mem=62700KiB load=0.96 rootload=0.96
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9412 260092 812321 10640/10054/519   17871/5713    46  533   59.90)
(smt.stats   66   9513 264120 819341 10661/10414/519   18087/5713    46  533   60.00)
(smt.stats   67   9624 271642 855170 10880/10418/519   18439/5721    46  533   60.14)
(smt.stats   68   9746 278150 914075 10943/10660/520   18603/5994    47  537   60.14)
(sat.ddfw       1      1   11.4802   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=14.457s mem=62956KiB load=1.00 rootload=1.00
(smt.stats   69   9880 283562 977191 10954/10702/520   18845/5994    47  537   60.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 1181)
(smt.stats   70  10027 288790 1040280 10976/10710/520   17985/5994    47  537   60.55)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   71  10188 296872 1121568 10988/10736/520   18282/5994    47  537   60.55)
ramon: poll                 wall=15.000s usage=15.458s mem=63336KiB load=1.00 rootload=1.00
(smt.stats   72  10365 311730 1253929 10996/10748/520   18618/5994    47  537   61.18)
(sat.ddfw       1      1   10.8501   1540001      7549         17            1      156)
(smt.stats   73  10559 321405 1341231 11046/10762/520   19234/5997    47  537   61.18)
ramon: poll                 wall=16.000s usage=16.458s mem=63336KiB load=1.00 rootload=1.00
(smt.stats   74  10772 328612 1477862 11126/10858/520   19562/5997    47  537   61.37)
(smt.stats   75  11006 335470 1586805 11221/10951/523   20071/6901    48  540   61.46)
ramon: poll                 wall=17.000s usage=17.458s mem=63848KiB load=1.00 rootload=1.00
(smt.stats   76  11263 351078 1730434 11230/10960/526   21186/7257    49  551   61.56)
(sat.ddfw       1      1   10.2857   1720001      8431         18            1      174)
(smt.stats   77  11545 362287 1774590 11241/10971/526   21569/7280    50  561   61.76)
(smt.stats   78  11646 365621 1796974 11341/11043/526   21686/7280    50  561   61.76)
ramon: poll                 wall=18.006s usage=18.461s mem=64004KiB load=1.00 rootload=0.99
(smt.stats   79  11757 371169 1821479 11420/11049/526   22069/7287    50  561   61.86)
(smt.stats   80  11879 375495 1842293 11747/11182/526   22322/7294    50  561   61.86)
(smt.stats   81  12013 378554 1863553 11873/11579/527   22557/7411    51  564   61.96)
ramon: poll                 wall=19.000s usage=19.393s mem=64260KiB load=0.94 rootload=0.94
(smt.stats   82  12160 386035 1901574 12019/11582/527   22950/7416    51  564   62.05)
(sat.ddfw       1      1   9.71072   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=20.309s mem=64604KiB load=0.92 rootload=0.92
ramon: end                  Fri Nov  1 23:06:25 2024
ramon: root.execname        z3
ramon: root.utime           20.330s
ramon: root.stime           0.020s
ramon: group.total          20.359s
ramon: group.utime          20.335s
ramon: group.stime          0.024s
ramon: group.mempeak        64656KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              1.02
