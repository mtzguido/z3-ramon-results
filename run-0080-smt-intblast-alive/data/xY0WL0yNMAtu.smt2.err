ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:11:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24470 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xY0WL0yNMAtu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             188617
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4435    511  1318/1111/113     101/11     4   19   19.27)
(smt.stats    1    202   4776    935  1676/1468/113     205/11     4   19   19.36)
(smt.stats    2    313   7424   1712  2021/1857/115     334/32     5   20   19.36)
(smt.stats    3    414  10751   2756  2276/2090/119     435/46     7   22   19.56)
(smt.stats    4    525  14007   3927  2371/2117/120     546/53     7   22   19.78)
(smt.stats    5    647  17892   6395  2381/2188/120     670/54     8   27   19.78)
ramon: poll                 wall=1.000s usage=0.931s mem=20904KiB load=0.93 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  24096   9371  2400/2204/120     775/54     8   27   19.78)
(smt.stats    7    859  25012  10593  2405/2217/120     892/55     8   27   19.87)
(smt.stats    8    981  27219  11688  2495/2229/120    1037/59     8   27   19.87)
(smt.stats    9   1115  30478  13534  2639/2418/125    1223/108     9   27   19.99)
(smt.stats   10   1216  32635  14852  2813/2589/125    1384/122    10   32   19.99)
(smt.stats   11   1327  34952  16529  2887/2602/125    1497/122    10   32   20.09)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  37082  18868  2937/2683/125    1619/123    10   32   20.21)
(smt.stats   13   1583  40473  20163  2986/2772/126    1760/167    11   32   20.21)
(smt.stats   14   1730  43676  21204  3049/2789/126    1907/169    11   32   20.21)
(smt.stats   15   1831  44602  23067  3298/2844/126    2007/191    11   32   20.30)
(smt.stats   16   1942  48640  24911  3334/3097/126    2119/191    11   32   20.61)
(smt.stats   17   2064  50418  27635  3377/3122/129    2275/201    12   35   20.61)
ramon: poll                 wall=2.004s usage=1.935s mem=21732KiB load=1.00 rootload=1.00
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 0&9007199254740988
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254740992 := 9007199254740992 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 0&9007199254740988
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254740992 := 9007199254740992 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 0&9007199254740988
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254740992 := 9007199254740992 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 2048&9007199254740988
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 2048&9007199254740988
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007199254740988
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007199254740988
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 2048&9007199254740988
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 8192&9007199254740988
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 8192&9007199254740988
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007199254740988
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 12288 := 12288&9007199254740988
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 12288 := 12288 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 12288 := 12288&9007199254740988
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 12288 := 12288 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4096 := 4096&9007199254740988
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 4096 := 4096 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 0&9007199254740988
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 1 := 0 >>l 51
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 0&9007199254740988
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 1 := 0 >>l 51
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 0&9007199254740988
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 1 := 0 >>l 51
(smt.stats   18   2198  53762  31440  3447/3199/169    2446/236    13   39   20.61)
(smt.stats   19   2345  56404  37059  3473/3227/169    2599/239    14   49   20.71)
(smt.stats   20   2506  58504  41918  3531/3275/176    2824/243    15   50   20.80)
(smt.stats   21   2607  61626  45465  3540/3276/176    2918/271    16   59   20.90)
(smt.stats   22   2718  64667  50630  3550/3295/176    3028/271    16   59   20.90)
(smt.stats   23   2840  67907  56761  3554/3299/176    3147/271    16   59   20.90)
(smt.stats   24   2974  70108  61211  3557/3301/176    3285/271    16   59   20.99)
(smt.stats   25   3121  71899  65203  3644/3389/177    3432/273    17   60   20.99)
(smt.stats   26   3282  75047  70938  3645/3390/177    3594/273    17   60   21.24)
(smt.stats   27   3459  79206  81664  3647/3393/180    3774/274    18   64   21.34)
(smt.stats   28   3560  80739  84852  3685/3395/181    3879/295    19   64   21.34)
(smt.stats   29   3671  81815  86512  3795/3436/181    4005/299    19   64   21.43)
ramon: poll                 wall=3.000s usage=2.931s mem=22696KiB load=1.00 rootload=0.99
(smt.stats   30   3793  83487  89006  3984/3616/181    4136/302    19   64   21.53)
(smt.stats   31   3927  85672  95340  4008/3754/183    4277/324    20   65   21.53)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  88019  99846  4049/3759/183    4423/324    20   65   21.53)
(smt.stats   33   4235  93350 108008  4085/3814/184    4592/325    21   67   21.62)
(smt.stats   34   4412  98331 114080  4096/3840/184    4772/330    22   68   21.72)
(smt.stats   35   4606 101208 119472  4118/3844/184    4979/330    22   68   21.72)
(smt.stats   36   4707 102500 121698  4142/3865/184    5105/330    22   68   21.82)
ramon: poll                 wall=4.000s usage=3.931s mem=23060KiB load=1.00 rootload=1.00
(smt.stats   37   4818 104190 126482  4192/3901/184    5221/330    22   68   22.22)
(smt.stats   38   4940 105493 129467  4500/4127/185    5352/367    23   69   22.32)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 107465 134650  4508/4246/187    5496/367    23   69   22.32)
(smt.stats   40   5221 109312 139612  4537/4270/188    5705/369    23   69   22.32)
(smt.stats   41   5382 111520 147222  4686/4350/189    5880/435    24   73   22.41)
(smt.stats   42   5559 113508 154328  4774/4432/189    6093/436    24   73   22.41)
(smt.stats   43   5753 115511 161483  4849/4529/189    6294/436    24   73   22.51)
ramon: poll                 wall=5.000s usage=4.930s mem=23876KiB load=1.00 rootload=1.00
(smt.stats   44   5966 117542 167997  5119/4598/189    6562/440    24   73   22.60)
(smt.stats   45   6067 120357 172589  5138/4868/189    6713/441    24   73   22.70)
(smt.stats   46   6178 122160 176452  5169/4913/190    6847/536    25   74   22.70)
(smt.stats   47   6300 124765 181709  5190/4917/191    6968/536    25   74   22.70)
(smt.stats   48   6434 126728 185909  5232/4976/192    7101/539    26   78   22.84)
(smt.stats   49   6581 129904 191809  5234/4978/192    7285/539    26   78   22.84)
(smt.stats   50   6742 132773 199511  5240/4984/192    7455/539    26   78   22.84)
(smt.stats   51   6919 135907 205674  5243/4987/193    7638/556    27   82   22.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 139565 213653  5248/4991/193    7837/556    27   82   22.94)
ramon: poll                 wall=6.004s usage=5.934s mem=24392KiB load=1.00 rootload=1.00
(smt.stats   53   7326 143842 222677  5253/4995/193    8054/557    27   82   23.04)
(smt.stats   54   7560 147605 231310  5283/5003/193    8340/561    27   82   23.13)
(smt.stats   55   7661 150492 239732  5299/5040/194    8479/576    28   88   23.13)
ramon: poll                 wall=7.000s usage=6.930s mem=24512KiB load=1.00 rootload=1.00
(smt.stats   56   7772 152754 247108  5387/5056/194    8771/581    28   88   23.13)
(smt.stats   57   7894 154231 252471  5415/5153/194    8954/582    28   88   23.23)
(smt.stats   58   8028 155437 259026  5443/5179/194    9156/582    28   88   23.23)
(smt.stats   59   8175 157183 264280  5452/5195/194    9330/582    28   88   23.32)
(smt.stats   60   8336 159720 271186  5473/5196/194    9499/582    28   88   23.32)
(smt.stats   61   8513 162136 283899  5483/5218/194    9727/582    28   88   23.32)
(smt.stats   62   8707 166344 292754  5488/5227/194    9921/582    28   88   23.42)
(smt.stats   63   8920 170552 304370  5491/5231/194   10143/582    28   88   23.42)
(smt.stats   64   9154 172946 313396  5527/5250/194   10388/582    28   88   23.51)
(smt.stats   65   9411 175750 332040  5600/5284/194   10655/584    28   88   23.51)
(smt.stats   66   9512 177367 335461  5600/5343/194   10760/584    28   88   23.51)
(smt.stats   67   9623 178950 340362  5600/5343/194   10871/584    28   88   23.51)
(smt.stats   68   9745 180666 348187  5630/5343/194   11005/584    28   88   23.61)
ramon: poll                 wall=8.000s usage=7.930s mem=25028KiB load=1.00 rootload=1.00
(smt.stats   69   9879 182020 354203  5690/5381/194   11144/585    28   88   24.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 98)
(smt.stats   70  10026 184041 362298  5718/5441/194   11200/585    28   88   24.38)
(smt.stats   71  10187 186429 376943  5726/5461/194   11366/585    28   88   24.38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   72  10364 188891 392961  5804/5527/194   11546/585    28   88   24.38)
(smt.stats   73  10558 191292 405425  5817/5557/194   11737/585    28   88   24.38)
(smt.stats   74  10771 194156 414633  5846/5565/194   11947/585    28   88   24.47)
(smt.stats   75  11005 196836 425983  5970/5600/194   12194/586    28   88   24.57)
ramon: poll                 wall=9.000s usage=8.929s mem=26116KiB load=1.00 rootload=1.00
(smt.stats   76  11262 199009 435984  6067/5738/194   12514/587    28   88   24.66)
(smt.stats   77  11544 201761 441718  6270/5812/194   12806/589    28   88   24.86)
(smt.stats   78  11645 202833 444318  6432/6134/194   12916/589    28   88   24.86)
(smt.stats   79  11756 204138 446628  6501/6185/194   13039/589    28   88   24.86)
(smt.stats   80  11878 205813 459238  6580/6290/194   13157/590    28   88   24.95)
(smt.stats   81  12012 207614 468866  6594/6326/194   13322/591    28   88   24.95)
ramon: poll                 wall=10.000s usage=9.929s mem=26440KiB load=1.00 rootload=1.00
(smt.stats   82  12159 209205 477508  6664/6340/194   13474/595    28   88   24.95)
(smt.stats   83  12320 210297 485436  6836/6410/194   13639/596    28   88   25.05)
(smt.stats   84  12497 212324 489102  7023/6611/194   13834/598    28   88   25.05)
(smt.stats   85  12691 214565 495957  7087/6776/194   14032/598    28   88   25.14)
ramon: poll                 wall=11.000s usage=10.929s mem=26704KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.929s mem=26708KiB load=1.00 rootload=1.00
(smt.stats   86  12904 215607 502820  7206/6838/194   14251/599    28   88   25.24)
(smt.stats   87  13138 219963 512195  7522/7265/194   14493/599    28   88   25.33)
(smt.stats   88  13395 225465 521697  7574/7268/194   14825/600    28   88   25.52)
(smt.stats   89  13677 229630 535813  7617/7360/194   15111/600    28   88   25.62)
(smt.stats   90  13987 233650 553787  7752/7367/194   15504/601    28   88   25.75)
(smt.stats   91  14088 235356 559386  7802/7543/194   15707/601    28   88   25.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   92  14199 237109 564660  7857/7588/194   15823/602    28   88   25.85)
ramon: poll                 wall=13.000s usage=12.929s mem=27480KiB load=1.00 rootload=1.00
(smt.stats   93  14321 238511 572197  7905/7600/194   15961/603    28   88   25.85)
(smt.stats   94  14455 240183 580968  7928/7653/194   16114/603    28   88   25.85)
(smt.stats   95  14602 243431 588707  7950/7675/194   16287/605    28   88   25.94)
(smt.stats   96  14763 246868 598348  7977/7704/194   16448/605    28   88   25.94)
(smt.stats   97  14940 248456 609692  8075/7746/194   16624/607    28   88   26.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 250379 619004  8120/7823/194   16840/607    28   88   26.04)
(smt.stats   99  15347 251708 632788  8170/7877/194   17063/607    28   88   26.13)
(smt.stats  100  15581 254013 651108  8192/7913/194   17332/608    28   88   26.13)
(smt.stats  101  15838 256459 665879  8254/7940/194   17592/608    28   88   26.23)
(smt.stats  102  16120 260516 677527  8304/8036/194   17879/608    28   88   26.23)
ramon: poll                 wall=14.004s usage=13.932s mem=27932KiB load=1.00 rootload=1.00
(smt.stats  103  16430 265910 687469  8327/8048/194   18192/608    28   88   26.32)
ramon: poll                 wall=15.000s usage=14.928s mem=28172KiB load=1.00 rootload=1.00
(smt.stats  104  16770 273034 706079  8337/8076/194   18529/608    28   88   26.52)
(smt.stats  105  16871 275337 712931  8338/8077/194   18631/608    28   88   26.52)
(smt.stats  106  16982 276895 720061  8339/8078/194   18749/608    28   88   26.62)
(smt.stats  107  17104 279629 728702  8339/8078/194   18871/608    28   88   26.62)
(smt.stats  108  17238 282120 739001  8341/8080/194   19007/608    28   88   26.71)
(smt.stats  109  17385 284960 749447  8342/8081/194   19155/608    28   88   26.71)
(smt.stats  110  17546 287961 759192  8342/8081/194   19321/608    28   88   26.71)
(smt.stats  111  17723 292634 768884  8343/8082/194   19501/608    28   88   26.81)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats  112  17917 296460 780138  8346/8085/194   19692/608    28   88   28.39)
(smt.stats  113  18130 300186 790308  8346/8085/194   19910/608    28   88   28.39)
(smt.stats  114  18364 305435 806804  8346/8085/194   20149/608    28   88   28.49)
(smt.stats  115  18621 309182 822960  8346/8085/194   20408/608    28   88   28.58)
(smt.stats  116  18903 314887 841783  8346/8085/194   20694/608    28   88   28.58)
ramon: poll                 wall=16.000s usage=15.928s mem=30400KiB load=1.00 rootload=0.99
(smt.stats  117  19213 320818 860991  8352/8086/194   21003/608    28   88   28.68)
(smt.stats  118  19553 326919 875966  8359/8092/194   21345/608    28   88   28.68)
(smt.stats  119  19926 333915 891909  8372/8102/194   21740/608    28   88   28.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20027 335093 897234  8379/8118/195   21841/1141    29   89   28.87)
(smt.stats  121  20138 338047 905153  8380/8119/195   21955/1141    29   89   28.87)
(smt.stats  122  20260 340320 913285  8381/8120/195   22080/1141    29   89   28.87)
(smt.stats  123  20394 343826 922957  8383/8122/195   22213/1141    29   89   28.97)
(smt.stats  124  20541 346440 930892  8385/8124/195   22358/1141    29   89   28.97)
ramon: poll                 wall=17.000s usage=16.928s mem=30840KiB load=1.00 rootload=1.00
(smt.stats  125  20702 348433 942591  8385/8124/195   22537/1141    29   89   28.97)
(smt.stats  126  20879 350960 961910  8386/8125/195   22719/1141    29   89   29.07)
(smt.stats  127  21073 355115 976185  8396/8131/195   22919/1141    29   89   29.07)
(smt.stats  128  21286 360896 991112  8397/8136/195   23133/1141    29   89   29.16)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas            :deletions    )
(smt.stats  129  21520 366326 1017438  8397/8136/195   23372/1141    29   89   29.16)
ramon: poll                 wall=18.000s usage=17.928s mem=31044KiB load=1.00 rootload=1.00
(smt.stats  130  21777 372593 1049617  8398/8136/195   23671/1141    29   89   29.16)
(smt.stats  131  22059 380353 1069746  8412/8145/195   23969/1141    29   89   29.16)
(smt.stats  132  22369 390301 1087112  8414/8153/195   24279/1141    29   89   29.16)
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4094 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4092 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4088 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254745088 := 18446744073709549568 >>l 30
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254745088 := 18446744073709549568 >>l 30
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254745088 := 18446744073709549568 >>l 30
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254745088 := 18446744073709549568 >>l 30
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254745088 := 18446744072635809792 >>l 30
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4095 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 2147483647 := 2147483648 >>l 19
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 4095 := 2148007934 >>l 19
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 4095 := 2147483648 >>l 19
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 4096 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 1 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 2 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 4 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 8 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 16 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 32 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 64 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 128 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 256 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 512 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 1024 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 2048 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 4 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 4 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 10 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 8 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 64 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 64 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 64 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 128 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 255 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 256 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 2048 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 2048 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 1024 := 4096&9007182074871808
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007182074871808
band: (band[53] (lshr[53] (bv2int %0) (mod #113 53)) (if (= #525 52) 20282409603651665920347623915520 (if #527 10141204801825832960173811957760 #629))) 4096 := 4096&9007182074871808
(smt.stats  133  22709 397813 1104754  8570/8280/312   24643/1168    30  107   29.67)
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4159&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4097 := 4097&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4098 := 4113&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4097 := 4112&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4097 := 4097&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4098 := 4098&9007199254740990
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254745090 := 4401267734528 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4094 := 4096&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4092 := 4096&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 4096&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4096 := 4098&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4096 := 5120&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4096 := 6079&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4096 := 5120&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4096 := 7167&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4096 := 6144&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4098 := 6144&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 4104 := 6144&9007199254740990
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 6144 := 6145&9007199254740990
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254747137 := 5498631880704 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 6144 := 6144&9007199254740990
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254747136 := 9007199254745088 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 6144 := 6144&9007199254740990
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 11 #113 #351) 64)) 9007199254747136 := 9007199254745088 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 1&9007199254740990
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 8192 := 9007199254740989 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 1&9007199254740990
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 8192 := 9007199254740989 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #352 64)) (if (= #652 63) 83076749736557223609743867557969920 (if #654 41538374868278611804871933778984960 #778))) 0 := 1&9007199254740990
lshr: (lshr[53] (bv2int %0) (mod (bv2int %1) 53)) 8192 := 9007199254740989 >>l 52
ramon: poll                 wall=19.000s usage=18.926s mem=31964KiB load=1.00 rootload=0.99
(smt.stats  134  23082 403914 1140328  8741/8437/378   25565/1184    30  107   30.07)
(smt.stats  135  23492 417535 1199558  8765/8477/382   26002/1306    31  148   30.16)
(smt.stats  136  23593 421251 1214946  8770/8497/382   26101/1306    31  148   30.16)
(smt.stats  137  23704 424059 1228602  8820/8502/382   26217/1310    31  148   30.16)
(smt.stats  138  23826 426444 1238837  8879/8583/382   26344/1335    32  153   30.26)
(smt.stats  139  23960 426913 1240319  9032/8667/382   26488/1339    32  153   30.35)
ramon: poll                 wall=20.000s usage=19.926s mem=32320KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:11:50 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.000s
ramon: group.utime          19.972s
ramon: group.stime          0.028s
ramon: group.mempeak        32832KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
