ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:03:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28839 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FFn6DK6Nsz4T.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             713430
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   6603   1054  1297/1163/89      96/5     2   13   51.98)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 5 := 144115188075855871&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 5 := 4 << 57
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 5 := 144115188075855871&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 5 := 4 << 57
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   63.6943     10000        49          0            1        2)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 5 := 144115188075855871&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 5 := 4 << 57
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 5 := 144115188075855871&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 5 := 4 << 57
(smt.stats    1    202   9668   3262  2317/2070/91     193/9     3   13   52.30)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 5 := 144115188075855871&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 5 := 4 << 57
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855871 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855870 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855871 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 6 := 144115188075855871&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 6 := 4 << 57
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855870 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855869 := 144115188075855871&144115188075855869
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 144115188075855869 := 4 << 57
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855869 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855868 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 144115188075855871&576460752303423488
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 1 := 2 << 58
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 144115188075855871&576460752303423488
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 1 := 2 << 58
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855871 := 144115188075855871&144115188075855871
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 144115188075855871 := 4 << 57
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855871 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855870 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855868 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 144115188075855864 := 144115188075855871&576460752303423488
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 144115188075855871&576460752303423488
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 1 := 2 << 58
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 144115188075855871&576460752303423488
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 1 := 2 << 58
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 144115188075855871&576460752303423488
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 1 := 2 << 58
(sat.ddfw       1      1   34.9685     20001        98          1            1        3)
(sat.ddfw       1      1   37.3832     40001       196          2            1        5)
(smt.stats    2    313  10264   4046  2642/2284/96     311/18     4   14   52.79)
(sat.ddfw       1      1   34.7625     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.754s mem=54836KiB load=0.75 rootload=0.75
(smt.stats    3    414  10743   4806  2801/2464/121     413/20     5   23   52.98)
(smt.stats    4    525  11438   6056  2907/2654/129     475/22     7   37   52.98)
(sat.ddfw       1      1   31.2744    110001       539          4            1       12)
(smt.stats    5    647  14298   9621  2929/2672/131     597/21     8   40   53.08)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14586  11875  2936/2679/133     700/42    10   44   53.08)
(smt.stats    7    859  15248  14463  2943/2686/135     809/42    10   44   53.18)
(smt.stats    8    981  16480  17613  2952/2696/141     972/69    12   52   53.18)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 3 := 576460752303423487&1610
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 2 := 576460752303423487&1610
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 2 := 576460752303423487&1616
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 576460752303423487&1616
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1616
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1616
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1610
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1610
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1613
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1613
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1612
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1610
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1612
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1612
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1613
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1612
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1612
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1610
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 2 := 576460752303423487&1610
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 2 := 576460752303423487&1616
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 576460752303423487&1616
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1616
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1632
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1632
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1616
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1744
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1728
(smt.stats    9   1115  19683  24143  3042/2713/143    1131/152    13   54   53.27)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1728
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1728
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 3 := 576460752303423487&1728
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1728
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1664
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1664
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1664
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1664
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1056
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1312
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 576460752303423487&1056
(smt.stats   10   1216  22147  27668  3092/2826/248    1240/177    14   79   53.50)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&1024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&1024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&1024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&1024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&1024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&1024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&2048
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&8192
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&8192
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4869
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4868
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4864
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4869
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4868
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4864
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4608
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 8 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 2 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 2 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&4096
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&4357
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&4612
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&4864
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&4356
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&4356
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&4612
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&12292
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&12292
(smt.stats   11   1327  23979  30744  3245/2856/266    1468/213    15   82   53.71)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&24580
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&24580
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 34359738367&24580
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27214  34045  3327/3043/321    1628/239    16   97   53.85)
(smt.stats   13   1583  33413  46432  3353/3094/332    1930/266    17   99   53.97)
(sat.ddfw       1      1   26.7661    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.705s mem=56100KiB load=0.95 rootload=0.94
(smt.stats   14   1730  43825  64240  3370/3113/334    2099/412    18  102   54.08)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 288230376151711743&256
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16 := 288230376151711743&256
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 128 := 288230376151711743&256
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 32 := 288230376151711743&256
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 32 := 288230376151711743&288
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 32 := 288230376151711743&288
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 32 := 288230376151711743&288
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 32 := 288230376151711743&288
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 288 := 288230376151711743&288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 5764607523034235168 := 1152921504606849602 << 58
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 288 := 288230376151711743&288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 5764607523034235168 := 1152921504606849602 << 58
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 288 := 288230376151711743&288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 4611686018427388192 := 1152921504606849602 << 58
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 288 := 288230376151711743&288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 4611686018427388192 := 1152921504606849602 << 58
(smt.stats   15   1831  48796  73192  3436/3117/334    2232/444    19  109   54.18)
(smt.stats   16   1942  51154  77750  3484/3225/346    2403/472    20  111   54.29)
(smt.stats   17   2064  54590  82549  3502/3241/346    2549/472    20  111   54.58)
(smt.stats   18   2198  60322  95833  3619/3334/348    2822/617    22  116   54.70)
(sat.ddfw       1      1   23.9525    220001      1078          6            1       23)
(smt.stats   19   2345  67111 113556  3694/3339/348    3101/623    22  116   54.90)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 8 := 15&17672
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 2305843009213711624 := 1152921504606851270 << 4
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 8 := 15&17672
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 2305843009213711624 := 1152921504606851270 << 4
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 8 := 15&17672
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 2305843009213711624 := 1152921504606851270 << 4
(smt.stats   20   2506  71347 123995  3848/3564/366    3372/783    24  150   55.00)
(smt.stats   21   2607  76106 135643  3865/3580/366    3514/783    24  150   55.00)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 1&40988
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 1&40989
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 40989 := 1152921504606851156 << 1
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 1&40988
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 1&40989
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 40989 := 1152921504606851156 << 1
ramon: poll                 wall=3.000s usage=2.636s mem=57372KiB load=0.93 rootload=0.93
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 1&40988
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 1&40989
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 40989 := 1152921504606848996 << 1
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 1&40989
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #905 #907) 64)) 40989 := 1152921504606848996 << 1
(smt.stats   22   2718  78026 139960  3953/3583/367    3641/803    25  160   55.14)
(smt.stats   23   2840  84006 156007  3974/3677/378    3826/803    25  160   55.14)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 16777215&40960
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 16777215&40960
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 16777215&864691128455151616
(smt.stats   24   2974  88153 168219  4066/3710/381    4292/844    26  164   55.26)
(sat.ddfw       1      1   20.8209    290001      1421          7            1       30)
(smt.stats   25   3121  93128 182876  4080/3793/386    4522/980    27  169   55.51)
(smt.stats   26   3282  98013 201253  4104/3817/389    4690/1037    28  175   55.70)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3459 101294 208232  4390/3819/389    5056/1067    29  177   55.80)
(smt.stats   28   3560 104138 228010  4413/4126/392    5135/1095    30  200   55.80)
ramon: poll                 wall=4.002s usage=3.550s mem=58124KiB load=0.91 rootload=0.92
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 26720 := 268435455&82016
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 29280 := 268435455&82016
(smt.stats   29   3671 105854 234291  4510/4131/392    5599/1106    30  200   55.80)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 29280 := 268435455&82016
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 30816 := 268435455&82016
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16480 := 268435455&82016
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16480 := 268435455&82016
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16480 := 268435455&82016
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16480 := 268435455&82016
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16488 := 268435455&82024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16488 := 268435455&82024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16488 := 268435455&82024
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16488 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 16504 := 268435455&49784
(smt.stats   30   3793 108261 247810  4744/4337/413    6033/1381    31  204   56.02)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 17016 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 17016 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 17016 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 17016 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 17016 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 17016 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 17016 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 17016 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33400 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33400 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33400 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33400 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33656 := 268435455&49784
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33528 := 268435455&51960
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33528 := 268435455&49912
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33528 := 268435455&37624
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 33528 := 268435455&41720
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 34552 := 268435455&49912
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 34552 := 268435455&50936
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 34552 := 268435455&50936
(smt.stats   31   3927 110501 259764  4916/4477/413    6339/1388    31  204   56.35)
(sat.ddfw       1      1   18.4971    370001      1813          8            1       38)
(smt.stats   32   4074 116978 273978  5016/4726/441    6782/1434    32  209   56.45)
(smt.stats   33   4235 125600 301614  5100/4733/441    7151/1691    33  218   56.54)
ramon: poll                 wall=5.000s usage=4.398s mem=59052KiB load=0.85 rootload=0.84
(smt.stats   34   4412 129036 314879  5595/4881/441    7987/1699    33  218   56.75)
(smt.stats   35   4606 134336 334505  5638/5343/441    8449/1699    33  218   56.97)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 0&2022
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 288230376151713069 := 576460752303424499 << 1
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 0&2022
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 288230376151713069 := 576460752303424499 << 1
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 0&2022
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 288230376151713069 := 576460752303424499 << 1
(smt.stats   36   4707 137180 345774  5688/5376/443    8586/2050    34  228   57.12)
(smt.stats   37   4818 140942 365639  5729/5431/448    8865/2050    34  228   57.38)
(sat.ddfw       1      1   16.1929    460001      2254          9            1       47)
(smt.stats   38   4940 147218 383984  5762/5465/449    9763/2185    35  229   57.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 355)
ramon: poll                 wall=6.000s usage=5.260s mem=59860KiB load=0.86 rootload=0.85
(smt.stats   39   5074 151798 393317  5769/5472/449    9563/2766    36  229   57.73)
(smt.stats   40   5221 157641 431065  5829/5491/449    9938/2767    36  229   57.73)
(smt.stats   41   5382 159524 438988  6219/5546/449   10250/2767    36  229   57.97)
(sat.ddfw       1      1   14.9477    560001      2745         10            1       57)
(smt.stats   42   5559 164650 473534  6296/5997/452   11038/2866    37  240   58.07)
ramon: poll                 wall=7.000s usage=6.143s mem=60448KiB load=0.88 rootload=0.89
(smt.stats   43   5753 167313 482259  6740/6095/452   11491/3023    38  245   58.36)
(smt.stats   44   5966 171372 515895  7229/6618/452   12465/3025    38  245   58.55)
ramon: poll                 wall=8.000s usage=7.029s mem=60872KiB load=0.89 rootload=0.88
(smt.stats   45   6067 173685 529687  7257/6910/452   12761/3026    38  245   58.55)
(sat.ddfw       1      1   13.7534    670001      3284         11            1       68)
(smt.stats   46   6178 178009 558488  7281/6950/452   12933/3026    38  245   58.69)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6300 181323 570345  7397/6965/452   13210/3027    38  245   58.69)
(smt.stats   48   6434 184509 589091  7450/7114/452   13858/3027    38  245   58.83)
(smt.stats   49   6581 189196 606625  7473/7142/456   14671/3697    39  264   58.86)
ramon: poll                 wall=9.002s usage=7.961s mem=61484KiB load=0.93 rootload=0.93
(smt.stats   50   6742 193384 624010  7511/7161/456   14948/3699    39  264   59.01)
(sat.ddfw       1      1   12.9005    790001      3872         12            1       80)
(smt.stats   51   6919 200355 674984  7552/7208/457   16209/3890    40  282   59.01)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1&440
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 640 := 576460752303423598 << 2
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1&440
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 640 := 576460752303423598 << 2
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1&440
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 288230376151711095 := 576460752303423598 << 2
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1&440
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #116))) 288230376151710781 := 576460752303423598 << 2
ramon: poll                 wall=10.000s usage=8.958s mem=61848KiB load=1.00 rootload=0.99
(smt.stats   52   7113 203167 694539  7668/7333/463   16563/4111    41  296   59.15)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1&440
band: (band[60] (if (= #120 59) 0 (if #582 1 #750)) (shl[60] (bv2int %0) (+ 60 #753))) 1 := 1&440
(smt.stats   53   7326 210292 719208  7712/7372/475   16939/4113    41  296   59.62)
(smt.stats   54   7560 220799 756965  7724/7384/477   17630/4144    42  303   59.72)
(sat.ddfw       1      1    12.178    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=9.958s mem=61896KiB load=1.00 rootload=1.00
(smt.stats   55   7661 225475 780951  7747/7389/479   17862/4286    43  322   59.81)
(smt.stats   56   7772 229244 801311  7867/7431/479   18456/4291    43  322   59.90)
(smt.stats   57   7894 232896 816799  7988/7535/479   18869/4403    44  342   59.90)
(smt.stats   58   8028 236576 832459  8092/7684/479   19618/4405    44  342   60.04)
band: (band[60] (if (or #765 #766 #767 #768 #769) 0 (if #770 1 #886)) (shl[64] (* 2 #114) (mod #908 64))) 576 := 2047&475648
ramon: poll                 wall=12.000s usage=10.957s mem=62436KiB load=1.00 rootload=1.00
(smt.stats   59   8175 241114 863627  8213/7781/479   20100/4408    44  342   60.14)
(sat.ddfw       1      1   11.5132   1060001      5196         14            1      108)
(smt.stats   60   8336 245239 889187  8474/7941/479   20603/4410    44  342   60.37)
(smt.stats   61   8513 248416 905588  8547/8161/479   21117/4411    44  342   60.47)
ramon: poll                 wall=13.002s usage=11.929s mem=62924KiB load=0.97 rootload=0.97
(smt.stats   62   8707 253449 921648  8634/8215/479   21831/4417    44  342   60.57)
(smt.stats   63   8920 261730 940292  8740/8358/479   22299/4418    44  342   60.67)
(smt.stats   64   9154 268900 973299  8789/8449/479   23518/4418    44  342   60.67)
(sat.ddfw       1      1   10.8656   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=12.894s mem=63072KiB load=0.97 rootload=0.96
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9411 279483 1038114  8826/8471/479   24291/4420    44  342   60.79)
(smt.stats   66   9512 281699 1049039  8838/8498/479   24572/4420    44  342   60.89)
(smt.stats   67   9623 285062 1076829  8846/8506/479   24781/4420    44  342   60.89)
(smt.stats   68   9745 290624 1108652  8868/8528/479   25790/4420    44  342   60.98)
ramon: poll                 wall=15.000s usage=13.775s mem=63404KiB load=0.88 rootload=0.88
(smt.stats   69   9879 294627 1121319  8872/8532/479   26150/4420    44  342   60.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 605)
(smt.stats   70  10026 299119 1151076  8885/8545/480   26333/5561    45  360   61.11)
(sat.ddfw       1      1   10.2472   1370001      6715         16            1      139)
(smt.stats   71  10187 306967 1187238  8919/8551/480   27048/5561    45  360   61.11)
ramon: poll                 wall=16.000s usage=14.787s mem=63856KiB load=1.01 rootload=1.02
(smt.stats   72  10364 314988 1244996  8935/8588/480   28428/5562    45  360   62.01)
(smt.stats   73  10558 322003 1273517  9020/8618/480   29320/5563    45  360   62.01)
ramon: poll                 wall=17.000s usage=15.783s mem=64228KiB load=1.00 rootload=0.99
(smt.stats   74  10771 328823 1305561  9043/8703/481   30518/5833    46  362   62.15)
(sat.ddfw       1      1   9.82943   1540001      7549         17            1      156)
(smt.stats   75  11005 335455 1339714  9057/8709/481   32160/5834    46  362   62.25)
ramon: poll                 wall=18.000s usage=16.784s mem=64676KiB load=1.00 rootload=1.00
(smt.stats   76  11262 344565 1390033  9198/8724/481   34121/5838    46  362   62.38)
(smt.stats   77  11544 354493 1411045  9258/8883/481   34724/5839    46  362   62.60)
(smt.stats   78  11645 357718 1443803  9299/8957/481   35135/5839    46  362   62.60)
ramon: poll                 wall=19.000s usage=17.822s mem=64972KiB load=1.04 rootload=1.04
(smt.stats   79  11756 361770 1474275  9307/8961/481   35686/5839    46  362   62.60)
(sat.ddfw       1      1   9.42507   1720001      8431         18            1      174)
(smt.stats   80  11878 364916 1503079  9309/8967/482   36267/6843    47  370   62.72)
(smt.stats   81  12012 368497 1543732  9312/8970/482   36661/6843    47  370   62.81)
ramon: poll                 wall=20.000s usage=18.886s mem=65160KiB load=1.06 rootload=1.06
(smt.stats   82  12159 377983 1593012  9341/8976/482   36997/6844    47  370   62.93)
ramon: end                  Fri Nov  1 22:03:43 2024
ramon: root.execname        z3
ramon: root.utime           18.930s
ramon: root.stime           0.030s
ramon: group.total          18.968s
ramon: group.utime          18.932s
ramon: group.stime          0.036s
ramon: group.mempeak        65428KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              0.94
