ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:50:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40903 MiB
ramon: sys.mem.avail        61380 MiB
ramon: sys.nprocs           1323
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/OzvlBMwveNT6.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3829872
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts      :learned/bin    :gc          :time)
(sat.stats          :decisions  :clauses/bin  :units        :memory       )
(sat.stats      0      0    0    52/51     0/0  42       0    18.19   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 46 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 87 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 176 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 65 :cost 212 :time 0.00)
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 14 := 27 << 27
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&3623878656
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 35187995967426 := 27 << 27
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 3221225495 := 24 << 24
(sat.stats    183   3214    0   697/673   128/95  57       0    18.78   0.03)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 264 :time 0.00)
(sat.stats    183   3214    0   811/787   128/95  66       0    18.78   0.03)
(sat.stats    183   3214    0   811/787   128/95  66       0    18.78   0.03)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 21 :elim-bin 171 :time 0.00)
 (sat-probing :cost 2435018.78 :time 0.00)
(sat.stats    183   3214    0   201/177    89/60  67       0    18.78   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 231 :time 0.00)
(sat.stats    186   3269    1   201/177   109/77  67       0    18.87   0.03)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    189   3276    2   201/177   112/77  67       0    18.87   0.03)
(sat.stats    192   3410    3   201/177   115/77  67       0    18.87   0.03)
(sat.stats    196   3546    4   201/177   119/77  67       0    18.87   0.03)
(sat.stats    199   3605    5   201/177   122/77  67       0    18.87   0.03)
(sat.stats    202   3677    6   201/177   125/77  67       0    18.87   0.03)
(sat.stats    205   3769    7   201/177   128/77  67       0    18.87   0.03)
(sat.stats    208   3880    8   201/177   131/77  67       0    18.87   0.03)
(sat.stats    212   3966    9   209/184   136/79  67       0    18.87   0.03)
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 436207616 := 26 << 26
(sat.stats    215   4007   10   212/187   139/79  67       0    18.87   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 420 :time 0.00)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&1744830464
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 18061088172988680967 := 26 << 26
(sat.stats    219   4082   11   213/188   143/79  70       0    18.87   0.04)
(sat.stats    222   4145   12   213/188   146/79  73       0    18.87   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 467 :time 0.00)
(sat.stats    225   4201   13   213/188   149/79  73       0    18.87   0.04)
 (sat-cleaner :elim-literals 7 :elim-clauses 0 :cost 547 :time 0.00)
 (sat-cleaner :elim-literals 65 :elim-clauses 2 :cost 590 :time 0.00)
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 201311729 := 3 << 3
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 268408640 := 4 << 4
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 335544346 := 5 << 5
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&160
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 335544320 := 5 << 5
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    316   6173   29   541/495   259/136  78       0    19.27   0.06)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&64
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 268435456 := 4 << 4
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&402653184
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 1610612736 := 24 << 24
 (sat-cleaner :elim-literals 6 :elim-clauses 2 :cost 1205 :time 0.00)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&24
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 201326592 := 3 << 3
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 8 := 1 << 1
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 67108864 := 1 << 1
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 4 := 2 << 2
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&8
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 134217728 := 2 << 2
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 100 := 25 << 25
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&838860800
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 1677721600 := 25 << 25
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 738197504 := 22 << 22
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&92274688
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 1476395008 := 22 << 22
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 96468992 := 23 << 23
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&192937984
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 1543503872 := 23 << 23
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 176160768 := 21 << 21
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 167772160 := 20 << 20
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&20971520
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 1342177280 := 20 << 20
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&44040192
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 1409286144 := 21 << 21
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 6291456 := 6 << 6
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 19922944 := 19 << 19
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 18874368 := 18 << 18
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 7340032 := 7 << 7
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 8388608 := 8 << 8
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 17825792 := 17 << 17
 (sat-cleaner :elim-literals 24 :elim-clauses 0 :cost 2605 :time 0.00)
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 16777216 := 16 << 16
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 9437184 := 9 << 9
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 10485760 := 10 << 10
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 15728640 := 15 << 15
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 14680064 := 14 << 14
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 11534336 := 11 << 11
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 12582912 := 12 << 12
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 13631488 := 13 << 13
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 3053 :time 0.00)
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 38797312 := 37 << 37
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 37748736 := 36 << 36
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 39845888 := 38 << 38
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 31457280 := 30 << 30
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 30408704 := 29 << 29
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 29360128 := 28 << 28
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 34603008 := 33 << 33
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 35651584 := 34 << 34
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 3741 :time 0.00)
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 33554432 := 32 << 32
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 46137344 := 44 << 44
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 32505856 := 31 << 31
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 45088768 := 43 << 43
 (sat-cleaner :elim-literals 0 :elim-clauses 2 :cost 4188 :time 0.00)
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 40894464 := 39 << 39
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 44040192 := 42 << 42
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 42991616 := 41 << 41
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 41943040 := 40 << 40
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 36700160 := 35 << 35
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&1202590842880
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 17474636259858055106 := 35 << 35
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&21440476741632
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 1340029796352 := 39 << 39
(sat.stats   1201  39142   57   970/924  1144/172 231       0    20.99   0.34)
(sat.stats   1204  39177   58   988/942  1147/172 231       0    20.99   0.34)
(sat.stats   1207  39267   59   988/942  1150/172 231       0    20.99   0.34)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 7341 :time 0.00)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&10240
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 0 := 10 << 10
 (sat-cleaner :elim-literals 7 :elim-clauses 1 :cost 10280 :time 0.00)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&26388279066624
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 0 := 43 << 43
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 105553116266434 := 44 << 44
ramon: poll                 wall=1.000s usage=0.935s mem=23168KiB load=0.94 rootload=0.92
 (sat-cleaner :elim-literals 16 :elim-clauses 8 :cost 11005 :time 0.00)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&1048576
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 140737488355328 := 16 << 16
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&7516192768
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 246290604621824 := 28 << 28
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&2228224
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 149533581377536 := 17 << 17
(sat.stats   2477  85028  146  1178/1132  2403/235 268       0    21.95   1.00)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&4718592
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 158329674399744 := 18 << 18
(sat.stats   2484  85402  147  1179/1133  2410/236 268       0    21.95   1.01)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&9961472
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 167125767421952 := 19 << 19
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&491520
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 131941395333120 := 15 << 15
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&229376
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 123145302310912 := 14 << 14
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&106496
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 114349209288704 := 13 << 13
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&384
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 52776558133248 := 6 << 6
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&896
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 61572651155456 := 7 << 7
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&49152
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 105553116266496 := 12 << 12
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 12081 :time 0.00)
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&4608
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 79164837199872 := 9 << 9
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&22528
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 96757023244288 := 11 << 11
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&15569256448
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 255086697644032 := 29 << 29
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&2048
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 70368744177664 := 8 << 8
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&66571993088
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 272678883688448 := 31 << 31
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&137438953472
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 281474976710656 := 32 << 32
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&32212254720
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 263882790666240 := 30 << 30
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&584115552256
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 299067162755072 := 34 << 34
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&283467841536
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 290271069732864 := 33 << 33
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&8796093022208
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 369435906932736 := 42 << 42
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&19791209299968
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 360639813910528 := 41 << 41
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&8796093022208
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 351843720888320 := 40 << 40
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&2473901162496
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 316659348799488 := 36 << 36
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&5085241278464
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 325455441821696 := 37 << 37
band: (band[45] (if (or #298 #299 #300 #301 #302 #303 #304 #305 #306 #307 #308 #309 #310 #311 #312 #313 ...) 0 1) (shl[45] (bv2int %0) (mod #36 45))) 0 := 0&10445360463872
shl: (shl[64] (bv2int %0) (mod (+ #36 #524) 64)) 334251534843904 := 38 << 38
 (sat-cleaner :elim-literals 0 :elim-clauses 3 :cost 14697 :time 0.00)
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats     :decisions     :clauses/bin       :units         :memory       )
(sat.stats   3616 137796  151  1548/1502  3536/255 348       0    23.12   1.43)
 (sat-cleaner :elim-literals 24 :elim-clauses 13 :cost 18573 :time 0.00)
ramon: poll                 wall=2.000s usage=1.935s mem=25020KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 22223 :time 0.00)
ramon: poll                 wall=3.000s usage=2.935s mem=25532KiB load=1.00 rootload=1.00
(sat.stats   5455 190773  327  5072/5026  4691/340 355       0    24.40   3.24)
ramon: poll                 wall=4.004s usage=3.943s mem=26300KiB load=1.00 rootload=1.01
ramon: poll                 wall=5.000s usage=4.935s mem=27068KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.935s mem=27580KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.935s mem=28092KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.935s mem=28348KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.935s mem=30008KiB load=1.00 rootload=1.00
(sat.stats   8350 343490  676 18892/18846  6290/608 355       0    28.69   9.43)
ramon: poll                 wall=10.000s usage=9.935s mem=30520KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.918s mem=31168KiB load=0.98 rootload=0.98
ramon: poll                 wall=12.000s usage=11.918s mem=31680KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.918s mem=32276KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.918s mem=33044KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.918s mem=33556KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.918s mem=34068KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.918s mem=34836KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.918s mem=35340KiB load=1.00 rootload=1.00
(sat.stats  12137 459803 1113 39800/39754  8319/1012 355       0    35.85  18.66)
ramon: poll                 wall=19.000s usage=18.917s mem=36364KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.917s mem=38412KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:50:21 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.993s
ramon: group.utime          19.969s
ramon: group.stime          0.024s
ramon: group.mempeak        38924KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.00
