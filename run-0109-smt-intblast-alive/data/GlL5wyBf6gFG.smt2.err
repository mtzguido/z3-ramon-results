ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:56:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42104 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GlL5wyBf6gFG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2886507
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3667    502  1307/1142/109     103/11     6   18   19.34)
(smt.stats    1    202   7093   3450  1648/1489/109     208/11     6   18   19.34)
(smt.stats    2    313  10173   7128  1953/1751/110     339/16     7   20   19.55)
(smt.stats    3    414  11253  12212  2298/1897/111     486/19     8   23   19.65)
(smt.stats    4    525  12383  12696  2340/2117/113     608/55     9   24   19.74)
(smt.stats    5    647  13633  15484  2840/2589/115     745/96    11   25   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14786  19198  2875/2621/117     867/114    12   27   19.84)
(smt.stats    7    859  19340  24768  2878/2623/117     976/114    12   27   19.93)
(smt.stats    8    981  20396  28883  2896/2641/125    1095/125    14   33   20.05)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 72057594037927939 := 14080 >>l 63
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 72057594037927939 := 14080 >>l 63
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 1&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 1 := 14080 >>l 63
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 1&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 1 := 14080 >>l 63
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&4
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 3 := 55 >>l 55
(smt.stats    9   1115  22895  33112  2915/2642/125    1234/127    14   33   20.05)
(smt.stats   10   1216  23589  34827  2973/2690/137    1336/135    15   35   20.05)
(smt.stats   11   1327  25410  41240  3010/2752/146    1428/150    18   60   20.15)
(smt.stats   12   1449  26540  44498  3042/2762/146    1558/150    18   60   20.15)
(smt.stats   13   1583  28379  49691  3059/2784/148    1695/158    19   62   20.27)
ramon: poll                 wall=1.004s usage=0.971s mem=21408KiB load=0.97 rootload=0.96
(smt.stats   14   1730  29859  55341  3089/2828/152    1829/201    21   71   20.27)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 46&1024
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 46 := 112384 >>l 55
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 46&1024
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 46 := 112384 >>l 55
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 46&1024
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 46 := 112384 >>l 55
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&1024
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 0 := 112384 >>l 55
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&1024
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 785 := 439 >>l 47
(smt.stats   15   1831  31069  59821  3112/2836/152    1923/201    21   71   20.27)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 1125899906842624 := 1125899906842626&1125899906842624
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 1125899906842626 := 102144 >>l 15
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 6 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 5 := 5&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 4 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 6 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 4 := 4&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 4&1125899906842624
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 4 := 102144 >>l 15
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 1125899906842625 := 399 >>l 7
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 2 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 5 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 5 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 4 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 4 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 2 := 6&1125899906842624
(smt.stats   16   1942  32629  63660  3160/2896/194    2027/202    23   79   20.47)
(smt.stats   17   2064  33915  68240  3183/2917/194    2146/202    23   79   20.47)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 3 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 2 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 2 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 2 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 1 := 6&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 6&1125899906842624
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 6 := 116480 >>l 15
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 1&1125899906842624
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 1 := 116480 >>l 15
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 4 := 455 >>l 7
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 1&1125899906842624
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 1 := 116480 >>l 15
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 1 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 1 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 1 := 455 >>l 7
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 2 := 455 >>l 7
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 3 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 2 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 3 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 2 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 2 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 2 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&1125899906842624
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 1 := 3&1125899906842624
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 1&36028797018963968
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 72057594037927937 := 115200 >>l 10
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 1&36028797018963968
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 1 := 115200 >>l 10
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 1&36028797018963968
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 1 := 115200 >>l 10
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 0 := 450 >>l 2
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 111 := 450 >>l 2
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 111 := 450 >>l 2
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 8 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 16 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 64 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 112 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 104 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 64 := 112&36028797018963968
(smt.stats   18   2198  34894  74048  3274/2943/221    2288/213    25   91   20.86)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 64 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 8 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 8 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 8 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 24 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 16 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 16 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 16 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 4 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 1 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 1 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 4 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 8 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 16 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 64 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 64 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 32 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 28 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 24 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 24 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 24 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 20 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 16 := 112&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 112&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 4 := 112&36028797018963968
(smt.stats   19   2345  36962  80762  3357/3044/324    2452/220    25   91   21.05)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 3&36028797018963968
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 72057594037927939 := 373248 >>l 10
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 128 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 256 := 364&36028797018963968
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   20   2506  40218  86972  3408/3125/354    2652/267    27  122   21.15)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 128 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 256 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 256 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 256 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 4 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 4 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 364&36028797018963968
band: (band[56] (lshr[56] (bv2int %0) (mod #104 56)) (if (= #505 55) 72057594037927936 (if #507 36028797018963968 #615))) 8 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 128 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 256 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 256 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 128 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 256 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 256 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 256 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 128 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 8 := 364&36028797018963968
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 8 := 364&36028797018963968
(smt.stats   21   2607  41511  90756  3492/3194/401    2786/270    27  122   21.51)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 16&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 216172782113783824 := 0 >>l 8
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 16&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 216172782113783824 := 0 >>l 8
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 16&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 216172782113783824 := 0 >>l 8
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 16&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 216172782113783824 := 0 >>l 8
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 16&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 216172782113783824 := 0 >>l 8
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 102&8192
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 72057594037928038 := 11264 >>l 52
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 102&8192
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 102 := 11264 >>l 52
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 96&8192
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 96 := 11264 >>l 52
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&8192
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 39 := 44 >>l 44
(smt.stats   22   2718  43345  96038  3541/3231/408    2983/310    28  143   21.90)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 370&8
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 72057594037928306 := 13824 >>l 62
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 369&8
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 72057594037928305 := 13824 >>l 62
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 369&8
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 72057594037928305 := 13824 >>l 62
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&8
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 519 := 54 >>l 54
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&8
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 513 := 54 >>l 54
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&8
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 513 := 54 >>l 54
(smt.stats   23   2840  46949 105406  3885/3493/420    3273/333    29  147   22.29)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 513&70368744177664
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 513 := 2816 >>l 19
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 768&70368744177664
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 768 := 2816 >>l 19
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 768&70368744177664
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 768 := 2816 >>l 19
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&70368744177664
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 754 := 11 >>l 11
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&70368744177664
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 738 := 11 >>l 11
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 0&70368744177664
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 546 := 11 >>l 11
(smt.stats   24   2974  50188 115822  3940/3539/431    3534/356    30  154   22.49)
(smt.stats   25   3121  55960 129642  3998/3613/444    3812/379    31  160   22.68)
(smt.stats   26   3282  61416 148023  4026/3632/444    4265/413    32  169   22.87)
ramon: poll                 wall=2.000s usage=1.967s mem=24396KiB load=1.00 rootload=0.99
(smt.stats   27   3459  64529 162545  4152/3735/444    4575/413    32  169   23.06)
(smt.stats   28   3560  67194 175416  4218/3781/451    4889/437    33  180   23.45)
(smt.stats   29   3671  69597 188972  4304/3799/451    5190/469    34  203   23.54)
ramon: poll                 wall=3.000s usage=2.966s mem=25060KiB load=1.00 rootload=1.00
(smt.stats   30   3793  70710 193093  4491/3936/451    5403/471    34  203   23.93)
band: (band[56] (lshr[64] (* 256 #104) (mod #342 64)) (if (= #638 63) 36893488147419103232 (if #640 18446744073709551616 #764))) 0 := 256&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #104 #341) 64)) 256 := 256 >>l 9
ramon: poll                 wall=4.000s usage=3.966s mem=25616KiB load=1.00 rootload=1.00
(smt.stats   31   3927  71921 202789  4697/4108/451    5664/471    34  203   24.02)
(smt.stats   32   4074  77335 216954  4713/4280/456    6096/496    35  204   24.12)
(smt.stats   33   4235  88724 248013  4724/4292/457    6427/568    37  207   24.22)
(smt.stats   34   4412  94934 275692  4743/4308/459    6784/568    37  207   24.32)
(smt.stats   35   4606 102539 293905  4784/4331/459    7129/592    38  213   24.51)
ramon: poll                 wall=5.000s usage=4.966s mem=26084KiB load=1.00 rootload=0.99
(smt.stats   36   4707 104559 306060  4791/4359/459    7278/592    38  213   24.51)
(smt.stats   37   4818 109055 323526  4801/4369/460    7514/630    39  220   24.60)
(smt.stats   38   4940 113156 338528  4809/4377/460    7781/630    39  220   24.60)
(smt.delete-inactive-clauses  :num-deleted-clauses 227)
(smt.stats   39   5074 116178 348095  4818/4386/460    7842/630    39  220   24.60)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5221 122546 367899  4850/4397/460    8062/631    39  220   24.70)
ramon: poll                 wall=6.000s usage=5.965s mem=26352KiB load=1.00 rootload=1.00
(smt.stats   41   5382 129355 384822  4972/4422/460    8454/640    39  220   24.80)
(smt.stats   42   5559 135531 397819  5044/4564/460    8762/643    39  220   24.89)
ramon: poll                 wall=7.000s usage=6.965s mem=26576KiB load=1.00 rootload=1.00
(smt.stats   43   5753 138769 404841  5140/4641/460    9066/656    39  220   25.17)
ramon: poll                 wall=8.000s usage=7.965s mem=27080KiB load=1.00 rootload=1.00
(smt.stats   44   5966 143808 417885  5715/5031/460    9403/666    39  220   25.17)
(smt.stats   45   6067 148333 428431  5791/5359/462    9775/782    40  220   25.17)
(smt.stats   46   6178 154301 449315  5835/5365/462   10046/787    40  220   25.17)
ramon: poll                 wall=9.000s usage=8.965s mem=27096KiB load=1.00 rootload=1.00
(smt.stats   47   6300 157244 454437  6053/5406/463   10206/876    41  222   25.36)
(smt.stats   48   6434 160903 469553  6255/5654/463   10630/881    41  222   25.46)
(smt.stats   49   6581 168821 489045  6272/5840/463   10994/881    41  222   25.56)
ramon: poll                 wall=10.000s usage=9.964s mem=27112KiB load=1.00 rootload=1.00
(smt.stats   50   6742 176230 512899  6279/5847/464   11285/988    42  228   25.56)
(smt.stats   51   6919 184522 549873  6308/5870/464   11703/988    42  228   25.75)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 188591 571131  6356/5910/469   12361/1048    43  231   25.84)
ramon: poll                 wall=11.000s usage=10.964s mem=27824KiB load=1.00 rootload=1.00
(smt.stats   53   7326 199792 611963  6431/5933/470   12836/1089    44  243   26.03)
(smt.stats   54   7560 206845 634948  6523/6073/471   13222/1116    45  247   26.31)
(smt.stats   55   7661 211943 656890  6527/6077/471   13354/1116    45  247   26.31)
ramon: poll                 wall=12.000s usage=11.964s mem=28024KiB load=1.00 rootload=0.99
(smt.stats   56   7772 216344 674498  6532/6082/473   13531/1145    46  271   26.31)
(smt.stats   57   7894 220286 691320  6545/6087/473   13754/1146    46  271   26.41)
(smt.stats   58   8028 223087 703106  6553/6103/474   14030/1146    46  271   26.50)
(smt.stats   59   8175 228015 720371  6565/6112/474   14274/1185    47  278   26.41)
ramon: poll                 wall=13.000s usage=12.963s mem=28088KiB load=1.00 rootload=1.00
(smt.stats   60   8336 235851 750139  6575/6121/475   14587/1185    47  278   26.50)
(smt.stats   61   8513 240938 769823  6585/6135/476   14996/1231    48  294   26.50)
(smt.stats   62   8707 252277 800784  6624/6158/478   15393/1255    49  309   26.60)
ramon: poll                 wall=14.000s usage=13.963s mem=28352KiB load=1.00 rootload=1.00
(smt.stats   63   8920 259476 824552  6707/6182/478   15955/1258    49  309   26.69)
(smt.stats   64   9154 266138 848854  6717/6267/480   16708/1325    50  309   26.69)
(smt.stats   65   9411 276767 906496  6737/6287/482   17131/1360    51  355   26.79)
ramon: poll                 wall=15.000s usage=14.963s mem=28560KiB load=1.00 rootload=1.00
(smt.stats   66   9512 280106 913467  6764/6292/482   17295/1360    51  355   26.88)
(smt.stats   67   9623 284286 934925  6816/6325/482   17540/1362    51  355   26.98)
(smt.stats   68   9745 289974 955211  6877/6367/483   17688/1397    52  371   26.98)
ramon: poll                 wall=16.000s usage=15.963s mem=28648KiB load=1.00 rootload=1.00
(smt.stats   69   9879 295787 980185  7034/6439/483   17892/1398    52  371   27.07)
(smt.delete-inactive-clauses  :num-deleted-clauses 118)
(smt.stats   70  10026 299545 997039  7081/6623/485   18282/1404    53  372   27.17)
ramon: poll                 wall=17.000s usage=16.962s mem=28856KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.962s mem=28960KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   71  10187 305492 1019376  7234/6747/486   18598/1409    53  372   27.36)
ramon: poll                 wall=19.000s usage=18.962s mem=29088KiB load=1.00 rootload=1.00
(smt.stats   72  10364 312173 1044108  7341/6797/486   18916/1418    53  372   27.46)
(smt.stats   73  10558 318271 1069739  7454/6929/486   19432/1463    54  417   27.55)
ramon: poll                 wall=20.000s usage=19.962s mem=29236KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 14:56:40 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          20.000s
ramon: group.utime          19.972s
ramon: group.stime          0.028s
ramon: group.mempeak        29492KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.038s
ramon: loadavg              1.00
