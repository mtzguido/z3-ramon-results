ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:48:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40758 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1328
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/OQAssQvFeidq.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3825570
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   200/199     0/0  58       0    18.52   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 526 :time 0.00)
(sat.stats    131   1342    0   245/243   129/42  65       0    19.50   0.08)
(sat.stats    131   1342    0   261/259   129/42  68       0    19.40   0.08)
(sat.stats    131   1342    0   261/259   129/42  68       0    19.40   0.08)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :elim-bin 17 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 566 :time 0.00)
 (sat-probing :cost 476019.40 :time 0.00)
(sat.stats    131   1342    0   217/215   137/50  68       0    19.40   0.08)
(sat.stats    217   2935    1   217/215   223/116  68       0    19.59   0.09)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    220   3027    2   217/215   226/117  68       0    19.59   0.09)
(sat.stats    223   3094    3   217/215   229/118  68       0    19.59   0.09)
(sat.stats    226   3157    4   217/215   232/121  68       0    19.59   0.09)
(sat.stats    229   3288    5   217/215   235/121  68       0    19.59   0.09)
(sat.stats    232   3422    6   217/215   238/122  68       0    19.59   0.09)
(sat.stats    235   3552    7   217/215   241/122  68       0    19.59   0.09)
(sat.stats    238   3726    8   217/215   244/123  68       0    19.59   0.10)
(sat.stats    241   3922    9   217/215   247/123  68       0    19.59   0.10)
(sat.stats    244   4157   10   217/215   250/125  68       0    19.59   0.10)
(sat.stats    247   4255   11   217/215   253/128  68       0    19.59   0.10)
(sat.stats    250   4327   12   217/215   256/130  68       0    19.59   0.10)
(sat.stats    253   4483   13   217/215   259/130  68       0    19.59   0.10)
(sat.stats    316   6406   34   217/215   322/151  68       0    19.59   0.11)
(sat.stats    475   9809   41   217/215   481/231  68       0    19.69   0.13)
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #54))) 8589934591 := 96 << 33
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 18890 := 8589934591&824633720832
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 65456 := 8589934591&824633720832
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 8 := 8589934591&824633720832
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 4 := 8589934591&824633720832
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #639 #641) 64)) 192 := 192 << 32
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 576896 := 8589934591&824633720832
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 32 := 8589934591&824633720832
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 21784 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 12615 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 8589934582 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 183888 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 4 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 1568 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 1600 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 2939904 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 59077376 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 58675712 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 45547520 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 26624 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 28672 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 24576 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 49152 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 32768 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 1020264448 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 131072 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 524288 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 262144 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 2273312768 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 2097152 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 4194304 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 6526337024 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 5804916736 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 5972688896 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 5905580032 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 134217728 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 268435456 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 5368709120 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 6442450944 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 4294967296 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 0 := 8589934591&824633720832
band: (band[43] (shl[64] (* 2 #58) (mod #642 64)) (if (or #649 #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 ...) 0 (if #670 1 #754))) 128 := 824633720832&8589934591
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 65 := 8589934591&824633720832
band: (band[43] (if (= #52 42) 1 (if #507 3 #625)) (shl[43] (bv2int %0) (+ 43 #628))) 1336064 := 8589934591&824633720832
ramon: poll                 wall=1.000s usage=0.896s mem=28492KiB load=0.90 rootload=0.88
ramon: poll                 wall=2.000s usage=1.896s mem=33384KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.895s mem=36896KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.895s mem=39356KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.895s mem=50660KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.895s mem=52492KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.895s mem=53640KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.894s mem=54912KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.894s mem=56100KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.894s mem=58224KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.894s mem=59516KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.893s mem=60204KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.893s mem=61140KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.893s mem=61984KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.892s mem=63476KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.892s mem=63760KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.892s mem=64528KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.891s mem=81792KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.893s mem=82448KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.891s mem=83372KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:48:53 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.040s
ramon: group.total          19.976s
ramon: group.utime          19.928s
ramon: group.stime          0.048s
ramon: group.mempeak        97808KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              0.99
