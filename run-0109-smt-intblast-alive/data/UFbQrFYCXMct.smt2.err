ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:23:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41394 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/UFbQrFYCXMct.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2978430
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   3493    263  1266/1110/115     103/10     6   20   19.16)
(smt.stats    1    202   3907    572  1534/1367/116     211/12     7   22   19.25)
(smt.stats    2    313   5393   1689  2304/1795/116     339/42     7   22   19.44)
ramon: poll                 wall=1.000s usage=0.953s mem=20568KiB load=0.95 rootload=0.95
(smt.stats    3    414   7475   3437  2431/2194/116     452/43     7   22   19.54)
(smt.stats    4    525   9055   4582  2533/2281/120     554/79     8   32   19.54)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #885 #889) 64)) 0 := 4 << 8
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #885 #889) 64)) 0 := 4 << 8
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #885 #889) 64)) 0 := 4 << 8
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #118))) 1 := 17592186044416 << 9
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #118))) 1 := 17592186044416 << 9
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #118))) 1 := 17592186044416 << 9
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #118))) 1 := 17592186044416 << 9
(smt.stats    5    647  14053   7669  2622/2380/132     677/87    10   35   19.74)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 1 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 2 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 2 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 15 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 14 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 12 := 15&512
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  16716   9167  2688/2455/146     767/82    12   52   19.84)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 14 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 12 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 14 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 14 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&70368744177152
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 12 := 15&70368744177152
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&70368744177152
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 8 := 15&70368744177152
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&1536
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 2 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&1536
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 2 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 8 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 2 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 4 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 4 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 8 := 15&6144
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 8 := 15&6144
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 3 := 15&9216
(smt.stats    7    859  18420  11913  2951/2699/204     889/86    13   65   20.42)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 2 := 15&9728
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 2 := 15&9216
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&9216
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 5 := 15&9216
(smt.stats    8    981  21122  14769  3056/2751/220    1025/94    15   70   20.52)
(smt.stats    9   1115  26674  19256  3071/2817/230    1183/94    16   74   20.52)
(smt.stats   10   1216  31297  23667  3079/2823/230    1275/112    17   86   20.61)
(smt.stats   11   1327  37120  28712  3081/2829/230    1384/112    17   86   20.61)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  41390  32789  3088/2836/234    1517/115    18   89   20.71)
(smt.stats   13   1583  47732  38913  3111/2859/236    1648/131    20   99   20.81)
(smt.stats   14   1730  54637  45797  3120/2860/236    1795/131    20   99   20.81)
(smt.stats   15   1831  58433  50276  3126/2872/236    1897/131    20   99   20.81)
(smt.stats   16   1942  61730  55975  3131/2879/237    2011/131    21  100   20.81)
(smt.stats   17   2064  66484  60253  3139/2882/237    2145/131    21  100   20.81)
(smt.stats   18   2198  71488  65088  3157/2892/237    2277/131    21  100   20.81)
(smt.stats   19   2345  75957  70400  3202/2917/238    2428/138    22  100   20.91)
(smt.stats   20   2506  80341  75286  3206/2954/238    2600/138    22  100   20.91)
ramon: poll                 wall=2.002s usage=1.954s mem=22092KiB load=1.00 rootload=0.99
(smt.stats   21   2607  83857  78726  3214/2954/238    2701/138    22  100   20.91)
(smt.stats   22   2718  87063  83094  3222/2968/238    2819/139    22  100   20.91)
(smt.stats   23   2840  90176  86750  3270/2975/238    2958/143    22  100   21.10)
(smt.stats   24   2974  92276  93724  3339/3040/238    3142/148    22  100   21.10)
(smt.stats   25   3121  98148 103006  3347/3095/238    3377/148    22  100   21.10)
(smt.stats   26   3282 101815 109535  3471/3102/238    3561/156    22  100   21.20)
(smt.stats   27   3459 106013 115573  3684/3432/239    3851/211    23  105   21.49)
(smt.stats   28   3560 109719 121403  3700/3447/240    4000/211    23  105   21.49)
(smt.stats   29   3671 114828 131306  3705/3453/240    4131/243    24  110   21.49)
(smt.stats   30   3793 120793 143671  3731/3454/240    4270/243    24  110   21.49)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175751169
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175751169
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&52742131154945
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&52742130761729
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&52742130761729
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696176406529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696176406529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696182697985
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696182697985
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33698313404417
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696182697985
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33698313404417
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33698313404417
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33698313404417
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33706903339009
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33706920116225
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33809982554113
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33844342292481
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&34084860461057
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&34084860461057
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&35184372088833
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #885 #889) 64)) 4611721202799476737 := 17944167204257792 << 49
ramon: poll                 wall=3.000s usage=2.951s mem=22984KiB load=1.00 rootload=0.99
(smt.stats   31   3927 123165 148983  3996/3485/240    4470/254    24  110   21.79)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 126548 156538  4006/3750/351    4787/282    25  131   21.89)
(smt.stats   33   4235 131940 165892  4067/3814/354    4951/382    27  157   21.89)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 85899345920 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 85899345920 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 55834574880 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 55834575392 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 55834574880 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608064 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608096 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608064 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608096 := 269569405807358&9007199254740512
(smt.stats   34   4412 138845 181787  4178/3878/360    5167/400    28  160   22.18)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608128 := 269569405807358&9007199254740986
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608128 := 269569405807358&9007199254740986
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 17179871808 := 269569405807358&9007199254740989
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 17179873924 := 269569405807358&9007199254740989
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359742016 := 269569405807358&35459250061313
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359742080 := 269569405807358&35459250061313
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359742208 := 269569405807358&35459250061313
(smt.stats   35   4606 141205 188218  4527/3982/418    5676/420    28  160   22.48)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838545
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838609
(smt.stats   36   4707 143002 197430  4861/4409/443    5991/425    28  160   22.58)
(smt.stats   37   4818 144527 205625  5219/4664/449    6348/607    29  188   22.97)
(smt.stats   38   4940 146968 216079  5343/4986/449    6735/608    29  188   23.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 151)
(smt.stats   39   5074 155061 246446  5438/5185/451    7248/789    30  188   23.16)
(smt.stats   40   5221 167059 303002  5444/5191/451    7981/890    31  191   23.16)
ramon: poll                 wall=4.000s usage=3.951s mem=24588KiB load=1.00 rootload=1.00
(smt.stats   41   5382 176518 355573  5465/5208/451    8588/890    31  191   23.36)
(smt.stats   42   5559 181187 373238  5501/5243/453    9375/1601    32  204   23.46)
(smt.stats   43   5753 190242 416221  5508/5253/454    9745/2026    33  230   23.56)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5966 198690 444934  5724/5439/460   10386/2194    34  238   23.80)
(smt.stats   45   6067 203453 467728  5731/5446/460   10674/2194    34  238   24.05)
(smt.stats   46   6178 208129 490810  5734/5449/460   11149/2273    35  240   24.05)
(smt.stats   47   6300 214646 514931  5776/5451/460   11324/2273    35  240   24.15)
ramon: poll                 wall=5.000s usage=4.950s mem=25468KiB load=1.00 rootload=1.00
(smt.stats   48   6434 220779 550300  5791/5506/460   11631/2273    35  240   24.15)
(smt.stats   49   6581 226770 580645  5812/5513/460   12142/2273    35  240   24.25)
(smt.stats   50   6742 234306 597725  5882/5546/460   12374/2274    35  240   24.35)
(smt.stats   51   6919 239817 621653  5926/5633/461   12642/2797    36  242   24.35)
(smt.stats   52   7113 248510 654843  5980/5659/462   12983/2799    36  242   24.45)
(smt.stats   53   7326 259563 706303  6025/5701/464   13278/2816    37  255   24.58)
ramon: poll                 wall=6.000s usage=5.950s mem=26124KiB load=1.00 rootload=1.00
(smt.stats   54   7560 264719 735301  6476/5768/464   13589/2826    38  277   25.82)
(smt.stats   55   7661 269622 753531  6478/6171/464   13746/2826    38  277   25.91)
(smt.stats   56   7772 273339 777716  6484/6174/465   14014/2856    39  279   25.91)
ramon: poll                 wall=7.000s usage=6.949s mem=28956KiB load=1.00 rootload=0.99
(smt.stats   57   7894 276471 794432  6557/6230/466   14210/2875    40  279   26.01)
(smt.stats   58   8028 279566 820810  6594/6287/469   14725/2875    40  279   26.10)
(smt.stats   59   8175 285103 851785  6611/6295/470   14949/2908    41  321   26.10)
(smt.stats   60   8336 293063 904553  6621/6314/471   15264/2975    42  326   26.10)
(smt.stats   61   8513 300622 942279  6698/6319/471   15652/2980    42  326   26.10)
ramon: poll                 wall=8.000s usage=7.949s mem=28968KiB load=1.00 rootload=1.00
(smt.stats   62   8707 308021 977156  6823/6397/471   15946/2987    42  326   26.20)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 320017 1055234  6960/6637/471   16477/2989    42  326   26.39)
(smt.stats   64   9154 329454 1090190  6973/6664/477   16890/3253    43  353   26.39)
ramon: poll                 wall=9.000s usage=8.948s mem=28980KiB load=1.00 rootload=1.00
(smt.stats   65   9411 342845 1179725  7323/6900/477   17266/3253    43  353   26.48)
(smt.stats   66   9512 346882 1200071  7346/7040/478   17430/3333    44  353   26.48)
(smt.stats   67   9623 354433 1220016  7349/7043/478   17556/3333    44  353   26.48)
(smt.stats   68   9745 361180 1258376  7359/7053/478   17737/3333    44  353   26.48)
ramon: poll                 wall=10.000s usage=9.948s mem=28992KiB load=1.00 rootload=1.00
(smt.stats   69   9879 372550 1320336  7359/7053/478   17874/3333    44  353   26.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 31)
(smt.stats   70  10026 376345 1346186  7365/7059/478   18524/3333    44  353   26.69)
(smt.stats   71  10187 383819 1391934  7377/7062/478   18754/3334    44  353   26.69)
(smt.stats   72  10364 392183 1411375  7390/7084/478   19003/3334    44  353   26.79)
(smt.stats   73  10558 399834 1459296  7395/7089/478   19690/3334    44  353   27.19)
(smt.stats   74  10771 416861 1557780  7412/7094/478   20095/3334    44  353   27.19)
(smt.stats   75  11005 430645 1652883  7437/7118/478   20601/3334    44  353   27.29)
ramon: poll                 wall=11.000s usage=10.947s mem=29544KiB load=1.00 rootload=1.00
(smt.stats   76  11262 447655 1769634  7442/7136/478   21128/3334    44  353   27.38)
(smt.stats   77  11544 461919 1864537  7455/7146/478   21777/3334    44  353   27.38)
(smt.stats   78  11645 470081 1884853  7458/7152/478   21955/3334    44  353   27.48)
(smt.stats   79  11756 479521 1936419  7459/7153/478   22216/3334    44  353   27.48)
ramon: poll                 wall=12.000s usage=11.947s mem=29556KiB load=1.00 rootload=1.00
(smt.stats   80  11878 492061 1991751  7462/7156/478   22472/3334    44  353   27.48)
(smt.stats   81  12012 500658 2038657  7463/7157/478   22796/3334    44  353   27.48)
(smt.stats   82  12159 509314 2090966  7470/7164/478   23070/3334    44  353   27.57)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12320 515994 2122883  7581/7183/478   23277/3337    44  353   27.67)
ramon: poll                 wall=13.000s usage=12.947s mem=29572KiB load=1.00 rootload=1.00
(smt.stats   84  12497 521760 2158935  7626/7314/481   23557/4361    45  362   27.76)
(smt.stats   85  12691 534321 2235851  7636/7317/481   23821/4361    45  362   27.76)
(smt.stats   86  12904 549548 2333674  7643/7331/481   24090/4384    46  369   27.76)
(smt.stats   87  13138 556181 2415233  7654/7342/481   24382/4384    46  369   27.86)
ramon: poll                 wall=14.000s usage=13.946s mem=29584KiB load=1.00 rootload=1.00
(smt.stats   88  13395 577433 2531952  7657/7345/481   24826/4384    46  369   27.86)
(smt.stats   89  13677 593083 2628591  7697/7377/481   25467/4384    46  369   27.96)
(smt.stats   90  13987 599597 2684268  7709/7381/481   25900/4386    46  369   28.05)
(smt.stats   91  14088 603165 2703482  7710/7390/481   26090/4386    46  369   28.15)
(smt.stats   92  14199 609748 2727361  7711/7391/481   26211/4386    46  369   28.15)
ramon: poll                 wall=15.000s usage=14.946s mem=29784KiB load=1.00 rootload=0.99
(smt.stats   93  14321 618844 2817239  7712/7392/481   26360/4386    46  369   28.15)
(smt.stats   94  14455 625856 2868024  7731/7404/481   26554/4386    46  369   28.24)
(smt.stats   95  14602 635352 2898740  7748/7420/481   26842/4386    46  369   28.24)
(smt.stats   96  14763 653479 3007249  7754/7432/481   27165/4386    46  369   28.24)
ramon: poll                 wall=16.000s usage=15.945s mem=29960KiB load=1.00 rootload=1.00
(smt.stats   97  14940 664863 3102883  7761/7439/483   27433/4581    47  379   28.42)
(smt.delete-inactive-clauses  :num-deleted-clauses 810)
(smt.stats   98  15134 673310 3179230  7764/7442/484   26866/4581    47  379   28.42)
(smt.stats   99  15347 682075 3239395  7764/7442/484   27069/4595    48  404   28.52)
(smt.stats  100  15581 692572 3273947  7770/7448/484   27368/4595    48  404   28.52)
(smt.stats  101  15838 703438 3348291  7783/7452/485   27646/4613    49  404   28.52)
ramon: poll                 wall=17.000s usage=16.945s mem=30096KiB load=1.00 rootload=1.00
(smt.stats  102  16120 716969 3461527  7806/7476/485   28138/4614    49  404   28.52)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  103  16430 729044 3491937  7813/7485/485   28483/4615    49  404   28.52)
(smt.stats  104  16770 738642 3598868  7826/7500/485   28893/4616    49  404   28.61)
(smt.stats  105  16871 740428 3614082  7827/7505/485   28997/4616    49  404   28.61)
(smt.stats  106  16982 742652 3638702  7829/7507/485   29125/4616    49  404   28.61)
(smt.stats  107  17104 747284 3689191  7832/7510/485   29273/4616    49  404   28.71)
(smt.stats  108  17238 757593 3797100  7832/7510/485   29408/4616    49  404   28.71)
ramon: poll                 wall=18.000s usage=17.945s mem=30288KiB load=1.00 rootload=1.00
(smt.stats  109  17385 768166 3860316  7851/7510/485   29627/4621    49  404   28.71)
(smt.stats  110  17546 774485 3898911  7872/7545/485   29909/4622    49  404   28.71)
(smt.stats  111  17723 787921 3994184  7879/7553/485   30227/4622    49  404   28.71)
(smt.stats  112  17917 799897 4068637  7896/7560/485   30475/4623    49  404   28.81)
ramon: poll                 wall=19.000s usage=18.944s mem=30444KiB load=1.00 rootload=1.00
(smt.stats  113  18130 811717 4145650  7926/7597/485   30726/4623    49  404   28.81)
(smt.stats  114  18364 823448 4202648  7991/7651/485   30981/4623    49  404   29.64)
(smt.stats  115  18621 838557 4320720  8024/7680/488   31554/4799    50  405   29.74)
ramon: poll                 wall=20.002s usage=19.946s mem=31448KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:23:53 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.968s
ramon: group.stime          0.028s
ramon: group.mempeak        32236KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              1.00
