ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:22:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42934 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1269
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2YnOsu3DboT2.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2769688
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   3722    473  1290/1129/110     108/19     3   17   19.15)
(smt.stats    1    202   5072    910  1717/1407/110     231/26     3   17   19.44)
(smt.stats    2    313   5610   1714  1773/1578/111     373/37     4   19   19.44)
ramon: poll                 wall=1.000s usage=0.937s mem=20524KiB load=0.94 rootload=0.93
(smt.stats    3    414   7745   2928  1844/1700/116     539/60     6   23   19.44)
(smt.stats    4    525   9777   4134  2163/1989/119     637/108     7   34   19.63)
(smt.stats    5    647  13013   5896  2339/2101/120     779/127     8   36   19.72)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  15689   7986  2366/2164/120     913/127     8   36   19.83)
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 63 := 63&96
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 62 := 63&96
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 60 := 63&96
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 56 := 63&96
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 48 := 63&96
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&96
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #875 #879) 64)) 96 := 96 << 6
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&97
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&97
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&97
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 33 := 63&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #875 #879) 64)) 97 := 96 << 6
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 33 := 63&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #875 #879) 64)) 97 := 96 << 6
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 63 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 62 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 60 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 16 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018963967 := 48 << 7
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018963966 := 48 << 7
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 18014398509481981 := 48 << 7
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 4 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 18014398509481980 := 48 << 7
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 16 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 16 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 16 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 2 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 1 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 1 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 2 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 4 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 16 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 4 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 16 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 4 := 63&6144
(smt.stats    7    859  19332  10624  2500/2241/168    1036/155    10   48   20.16)
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 2 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 28 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 24 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 24 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 16 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 16 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 8 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 2 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 2 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 4 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 4 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 1 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 32 := 63&6144
band: (band[55] (if (= #413 63) 0 (if #615 1 #868)) (shl[64] (* 2 #115) (mod #883 64))) 0 := 63&6144
band: (band[55] (if (= #121 54) 0 (if #635 1 #788)) (shl[55] (bv2int %0) (+ 55 #791))) 32 := 63&6144
(smt.stats    8    981  22596  14182  2555/2350/263    1186/180    12   74   20.35)
(smt.stats    9   1115  24369  19856  3017/2402/265    1363/218    12   74   20.46)
(smt.stats   10   1216  25404  22667  3032/2772/265    1470/242    13   76   20.55)
(smt.stats   11   1327  26277  25935  3034/2777/265    1585/242    13   76   20.55)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27230  28804  3044/2785/269    1755/284    14   77   20.65)
(smt.stats   13   1583  30076  34462  3066/2800/273    1875/286    15   99   20.74)
(smt.stats   14   1730  33730  39156  3092/2821/273    2048/287    15   99   20.74)
ramon: poll                 wall=2.000s usage=1.937s mem=22060KiB load=1.00 rootload=0.99
(smt.stats   15   1831  35440  41970  3110/2845/273    2174/287    15   99   20.84)
(smt.stats   16   1942  36770  45048  3116/2852/274    2300/300    16  103   20.84)
(smt.stats   17   2064  41348  47727  3168/2901/275    2457/316    17  103   21.07)
ramon: poll                 wall=3.000s usage=2.924s mem=22908KiB load=0.99 rootload=0.98
ramon: poll                 wall=4.000s usage=3.924s mem=22740KiB load=1.00 rootload=1.00
(smt.stats   18   2198  43561  50999  3411/2920/275    2663/320    17  103   21.45)
ramon: poll                 wall=5.000s usage=4.924s mem=22744KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.001s usage=5.923s mem=23000KiB load=1.00 rootload=1.00
(smt.stats   19   2345  48843  55015  3568/3148/276    2962/356    18  105   21.64)
ramon: poll                 wall=7.000s usage=6.923s mem=23128KiB load=1.00 rootload=1.00
(smt.stats   20   2506  53006  62196  3821/3510/278    3274/359    18  105   21.74)
ramon: poll                 wall=8.000s usage=7.923s mem=23128KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.923s mem=23384KiB load=1.00 rootload=1.00
(smt.stats   21   2607  54990  64560  3992/3594/278    3456/419    19  107   21.93)
ramon: poll                 wall=10.000s usage=9.923s mem=23384KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.923s mem=23384KiB load=1.00 rootload=1.00
(smt.stats   22   2718  58543  68801  4223/3842/278    3680/419    19  107   21.93)
ramon: poll                 wall=12.000s usage=11.923s mem=23384KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.922s mem=23640KiB load=1.00 rootload=1.00
(smt.stats   23   2840  64091  77611  4334/3969/278    3947/419    19  107   22.03)
ramon: poll                 wall=14.000s usage=13.922s mem=23640KiB load=1.00 rootload=1.00
(smt.stats   24   2974  68099  87050  4370/4084/278    4117/419    19  107   22.12)
ramon: poll                 wall=15.000s usage=14.922s mem=23768KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.922s mem=23768KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.922s mem=23768KiB load=1.00 rootload=1.00
(smt.stats   25   3121  70989  95666  4462/4121/278    4422/419    19  107   22.22)
ramon: poll                 wall=18.000s usage=17.922s mem=23768KiB load=1.00 rootload=1.00
(smt.stats   26   3282  73711 102202  4738/4288/278    4720/421    19  107   22.31)
ramon: poll                 wall=19.000s usage=18.922s mem=23768KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.922s mem=23768KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:22:55 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.987s
ramon: group.utime          19.971s
ramon: group.stime          0.016s
ramon: group.mempeak        24024KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.00
