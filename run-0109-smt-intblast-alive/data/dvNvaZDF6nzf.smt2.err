ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:39:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41021 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1252
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/dvNvaZDF6nzf.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3030896
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    102   4764    454  1309/1140/113      90/7     8   22   19.15)
(smt.stats    1    203   7188   1779  2079/1887/123     195/26    12   27   19.45)
(smt.stats    2    314  11231   4911  2200/1994/124     300/28    14   27   19.54)
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 3&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 3&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 4&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 3&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 4&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 8 := 8&140737488355327
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 8 := 2 << 47
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 8 := 8&140737488355327
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 8 := 2 << 47
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 8 := 8&140737488355327
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 8 := 2 << 47
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 3 := 3&140737488355327
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 3 := 2 << 47
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 3 := 3&140737488355327
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 3 := 2 << 47
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 3 := 3&140737488355327
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 3 := 2 << 47
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 140737488355327 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 140737488355326 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 140737488355324 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 140737488355326 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 140737488355324 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 140737488355320 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 140737488355312 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 32 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 64 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 64 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 128 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 256 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 512 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 1024 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 4096 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 8192 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 16384 := 140737488355328&140737488355327
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 16384 := 140737488355328&140737488355327
(smt.stats    3    415  12118   5893  2641/2355/216     488/36    15   30   20.33)
(smt.stats    4    526  12734   8214  2810/2541/219     609/90    17   47   20.33)
(smt.stats    5    648  15338  12424  2903/2593/222     741/100    18   50   20.33)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    749  18011  16460  2929/2671/225     777/124    20  115   20.33)
(smt.stats    7    860  19868  20720  2968/2700/225     888/127    20  115   20.33)
(smt.stats    8    982  20992  23330  3009/2759/230    1041/149    22  120   20.43)
(smt.stats    9   1116  23537  28716  3049/2783/231    1199/190    24  124   20.43)
(smt.stats   10   1217  24807  30909  3161/2800/231    1306/195    24  124   20.53)
(smt.stats   11   1328  26290  34784  3186/2936/232    1420/213    25  125   20.53)
(smt.stats   12   1450  28386  38430  3222/2964/233    1582/255    26  128   20.53)
(smt.stats   13   1584  29777  43765  3258/3002/234    1724/265    27  128   20.65)
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 140737488355327&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 140737488355326&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 140737488355326&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 140737488355325&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 140737488355324&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 140737488355320&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 32768&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 34816&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 67586&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 2049&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 65544&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 67584&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 133120&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 133120&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 264192&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 264192&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 264192&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 264192&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 264192&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 526336&8388607
(smt.stats   14   1731  32717  49108  3451/3054/298    1976/271    28  136   20.84)
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672080&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672072&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672080&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672096&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672080&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672072&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672096&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672128&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672096&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672128&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672192&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672096&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672128&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672192&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672320&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672160&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672128&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672192&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672320&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672576&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672320&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672576&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672320&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672384&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672576&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3673088&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3673344&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3674112&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3676160&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672352&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2048 := 3672064&8388607
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 1032 := 3672064&8388607
(smt.stats   15   1832  35033  54962  3645/3201/318    2231/278    29  147   21.42)
ramon: poll                 wall=1.000s usage=0.926s mem=23088KiB load=0.93 rootload=0.91
(smt.stats   16   1943  37683  61106  3661/3409/406    2600/384    31  169   21.72)
(smt.stats   17   2066  42647  72586  3814/3509/414    2899/486    32  169   21.81)
(smt.stats   18   2200  50096  89699  3953/3596/417    3249/558    34  181   22.03)
(smt.stats   19   2347  52801  98809  4008/3690/417    3433/645    35  185   22.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   20   2508  57344 107331  4118/3840/419    3776/697    36  192   22.13)
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 256 := 4456448&511
(smt.stats   21   2609  61284 115497  4154/3841/419    4003/706    36  192   22.25)
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 256 := 262400&511
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 72057594038190336 := 131585 << 9
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 256 := 263424&511
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 72057594038191360 := 263423 << 9
(smt.stats   22   2720  62916 120195  4208/3887/423    4163/828    37  196   22.25)
(smt.stats   23   2842  67605 136084  4238/3941/428    4353/828    37  196   22.25)
(smt.stats   24   2976  70739 148856  4282/4002/430    4558/944    39  217   22.34)
(smt.stats   25   3123  73021 156648  4331/4024/430    4724/947    39  217   22.34)
(smt.stats   26   3284  75074 166571  4371/4080/430    4898/1002    40  221   22.50)
(smt.stats   27   3462  79304 182981  4453/4168/432    5098/1023    42  228   22.50)
ramon: poll                 wall=2.000s usage=1.926s mem=23844KiB load=1.00 rootload=1.00
(smt.stats   28   3563  83091 192484  4509/4179/433    5472/1029    42  228   22.60)
(smt.stats   29   3674  88910 210613  4598/4280/434    5692/1253    44  236   22.69)
(smt.stats   30   3796  91352 222793  4633/4323/434    5820/1253    44  236   22.69)
(smt.stats   31   3930  94906 235453  4682/4397/436    6074/1302    45  240   22.79)
(smt.stats   32   4077  99960 255459  4693/4408/436    6322/1302    45  240   22.88)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   33   4238 107428 284325  4698/4413/439    6551/1360    46  241   22.98)
(smt.stats   34   4415 111263 299871  4770/4417/439    6751/1372    47  252   23.08)
(smt.stats   35   4609 117692 327446  4806/4487/439    7022/1379    47  252   23.16)
ramon: poll                 wall=3.003s usage=2.924s mem=24896KiB load=0.99 rootload=0.99
(smt.stats   36   4710 121141 336071  4936/4539/439    7215/1383    47  252   23.16)
(smt.stats   37   4821 122869 347482  4994/4656/439    7357/1384    47  252   23.26)
(smt.stats   38   4943 125918 361297  5034/4719/439    7625/1386    47  252   23.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 105)
(smt.stats   39   5077 130981 381155  5058/4772/439    7800/1387    47  252   23.26)
(smt.stats   40   5224 138128 404601  5113/4777/442    8067/1582    48  254   23.45)
(smt.stats   41   5385 141446 417017  5243/4832/442    8274/1658    49  265   23.45)
(smt.stats   42   5562 146350 436285  5279/4994/446    8741/1702    50  274   23.55)
(smt.stats   43   5756 158079 482104  5298/5001/446    8972/1702    50  274   23.55)
ramon: poll                 wall=4.000s usage=3.920s mem=24916KiB load=1.00 rootload=1.00
(smt.stats   44   5969 162656 497820  5326/5025/446    9288/1800    51  286   23.65)
(smt.stats   45   6070 166022 510747  5330/5045/446    9453/1800    51  286   23.82)
(smt.stats   46   6181 169022 524951  5346/5061/446    9680/1800    51  286   23.82)
(smt.stats   47   6303 171894 543109  5351/5066/446    9832/1800    51  286   23.82)
(smt.stats   48   6437 176755 556814  5402/5080/446   10098/1812    51  286   23.90)
(smt.stats   49   6584 181726 583222  5463/5160/450   10457/2001    53  317   24.00)
(smt.stats   50   6745 187067 607629  5647/5195/450   10776/2005    53  317   24.00)
ramon: poll                 wall=5.000s usage=4.920s mem=25680KiB load=1.00 rootload=1.00
(smt.stats   51   6922 192108 626471  5840/5402/450   11159/2009    53  317   24.10)
(smt.stats   52   7116 196962 647373  5860/5575/454   11478/2103    54  338   24.21)
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 1 := 262144&15
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 2 := 262144&15
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 262144 := 36028797018964481 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 262144 := 36028797018964481 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 262144 := 36028797018964481 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 262144 := 36028797018964481 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 72057594038190080 := 36169534507319809 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[64] (bv2int %1) (mod (+ #105 #397) 64)) 72057594038190080 := 36169534507319809 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 36169534507319810 := 4503599627386880 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 36028797018964481 := 4503599627386880 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 4503599627386880 := 4503599627386880 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 4503599627386880 := 4503599627386880 << 4
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
band: (band[56] (shl[56] (bv2int %1) (mod #105 56)) (if (= #627 55) 1 (if #629 3 #786))) 15 := 262144&15
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
band: (band[56] (shl[56] (bv2int %1) (mod #105 56)) (if (= #627 55) 1 (if #629 3 #786))) 14 := 262144&15
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
band: (band[56] (shl[56] (bv2int %1) (mod #105 56)) (if (= #627 55) 1 (if #629 3 #786))) 12 := 262144&15
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 0 := 262144&15
band: (band[56] (shl[56] (bv2int %1) (mod #105 56)) (if (= #627 55) 1 (if #629 3 #786))) 8 := 262144&15
band: (band[56] (shl[64] (bv2int %1) (mod #398 64)) (if (= #805 63) 0 (if #807 1 #937))) 4 := 262144&15
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7329 203243 667341  6077/5747/510   11797/2127    55  381   24.40)
(smt.stats   54   7563 211026 701701  6116/5793/511   12331/2161    56  396   24.71)
(smt.stats   55   7664 215990 715843  6150/5818/511   12525/2162    56  396   24.71)
(smt.stats   56   7775 222850 737118  6301/5894/513   12827/2221    57  420   24.71)
(smt.stats   57   7897 227777 754719  6417/6013/513   13065/2224    57  420   24.81)
(smt.stats   58   8031 229854 765794  6438/6109/518   13651/2252    58  426   24.81)
ramon: poll                 wall=6.000s usage=5.920s mem=26196KiB load=1.00 rootload=1.00
(smt.stats   59   8180 237757 804430  6469/6131/519   13928/2374    59  466   24.90)
(smt.stats   60   8341 244544 838243  6536/6179/519   14192/2375    59  466   25.00)
(smt.stats   61   8518 248499 860831  6574/6204/524   14575/2399    60  470   25.09)
(smt.stats   62   8712 253926 875091  6612/6253/524   14821/2399    60  470   25.09)
(smt.stats   63   8925 261073 908927  6663/6269/525   15104/2466    61  476   25.20)
(smt.stats   64   9159 270052 940419  6685/6332/525   15837/2466    61  476   25.30)
ramon: poll                 wall=7.000s usage=6.920s mem=26780KiB load=1.00 rootload=1.00
(smt.stats   65   9416 279789 968733  6791/6345/526   16569/2566    62  484   25.40)
(smt.stats   66   9517 282238 976712  6806/6442/526   16799/2567    62  484   25.49)
(smt.stats   67   9628 286817 993424  6894/6457/526   16988/2568    62  484   25.49)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   68   9750 290338 1012161  6963/6549/526   17437/2568    62  484   25.59)
(smt.stats   69   9884 293035 1031075  6987/6620/526   17604/2568    62  484   25.59)
(smt.delete-inactive-clauses  :num-deleted-clauses 297)
(smt.stats   70  10031 296212 1051035  7023/6670/527   18127/2831    63  493   25.78)
ramon: poll                 wall=8.000s usage=7.920s mem=27324KiB load=1.00 rootload=0.99
(smt.stats   71  10192 306573 1088619  7072/6677/527   18550/2833    63  493   25.88)
(smt.stats   72  10369 314117 1116718  7223/6726/528   19045/3027    64  497   26.07)
(smt.stats   73  10563 321396 1148754  7388/6994/528   19600/3028    64  497   26.17)
ramon: poll                 wall=9.000s usage=8.920s mem=27568KiB load=1.00 rootload=1.00
(smt.stats   74  10776 329154 1183508  7642/7045/528   20198/3040    64  497   26.26)
ramon: poll                 wall=10.000s usage=9.919s mem=27824KiB load=1.00 rootload=1.00
(smt.stats   75  11010 336379 1229174  7795/7313/528   21049/3049    64  497   26.36)
(smt.stats   76  11267 343806 1269355  7912/7455/528   21438/3053    64  497   26.55)
ramon: poll                 wall=11.000s usage=10.919s mem=28188KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.919s mem=28388KiB load=1.00 rootload=1.00
(smt.stats   77  11549 353353 1304992  8186/7811/530   22611/3398    65  500   26.90)
(smt.stats   78  11650 360287 1333887  8305/7851/530   22992/3404    65  500   26.90)
(smt.stats   79  11761 365324 1359090  8459/7978/530   23377/3405    65  500   26.99)
(smt.stats   80  11883 372603 1396575  8500/8108/530   23944/3405    65  500   26.99)
(smt.stats   81  12017 377302 1413049  8526/8160/530   24261/3405    65  500   27.10)
ramon: poll                 wall=13.000s usage=12.919s mem=28612KiB load=1.00 rootload=1.00
(smt.stats   82  12164 384267 1446208  8605/8199/532   24794/3635    66  520   27.20)
(smt.stats   83  12325 392373 1488102  8644/8272/532   25158/3638    66  520   27.20)
(smt.stats   84  12502 401158 1534723  8736/8381/534   26072/3766    67  523   27.29)
(smt.stats   85  12696 411711 1585427  8743/8389/534   26373/3886    68  527   27.39)
ramon: poll                 wall=14.000s usage=13.919s mem=28880KiB load=1.00 rootload=1.00
(smt.stats   86  12909 423183 1632350  8877/8524/539   27059/3972    69  539   27.39)
(smt.stats   87  13143 433796 1690394  8968/8571/541   27845/3974    69  539   27.67)
ramon: poll                 wall=15.000s usage=14.918s mem=29240KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   88  13400 443101 1744527  9008/8622/542   28696/4050    70  544   27.87)
(smt.stats   89  13682 455582 1822092  9135/8695/543   29757/4118    71  545   27.87)
ramon: poll                 wall=16.000s usage=15.918s mem=29464KiB load=1.00 rootload=1.00
(smt.stats   90  13992 473461 1905768  9350/8801/543   30571/4198    72  561   27.97)
(smt.stats   91  14093 476942 1921166  9498/9030/543   30815/4200    72  561   28.08)
(smt.stats   92  14204 482143 1955470  9525/9157/543   31002/4202    72  561   28.08)
(smt.stats   93  14326 487187 1994510  9810/9176/543   31355/4209    72  561   28.28)
(smt.stats   94  14460 490197 2024491  9852/9473/543   31652/4213    72  561   28.28)
ramon: poll                 wall=17.000s usage=16.918s mem=29748KiB load=1.00 rootload=1.00
(smt.stats   95  14607 494727 2064680  9865/9512/543   32158/4213    72  561   28.38)
(smt.stats   96  14768 503263 2122546  9975/9610/544   33082/4459    73  584   28.47)
(smt.stats   97  14945 511982 2181811 10144/9643/544   33870/4463    73  584   28.57)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
ramon: poll                 wall=18.000s usage=17.918s mem=30100KiB load=1.00 rootload=1.00
(smt.stats   98  15139 522882 2261782 10160/9800/545   34823/4632    74  614   28.66)
(smt.stats   99  15352 530378 2323755 10176/9819/545   35431/4632    74  614   28.76)
(smt.stats  100  15586 537590 2355589 10207/9832/545   36001/4633    74  614   29.18)
(smt.stats  101  15843 544177 2413054 10379/9877/546   36886/4815    75  614   29.27)
ramon: poll                 wall=19.000s usage=18.918s mem=30824KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  102  16125 549937 2451088 10438/10040/546   37622/4818    75  614   29.37)
(smt.stats  103  16435 559432 2505888 10639/10286/547   39422/5088    76  635   29.56)
(smt.stats  104  16775 571307 2563607 10662/10309/547   40597/5088    76  635   29.75)
ramon: poll                 wall=20.000s usage=19.917s mem=31320KiB load=1.00 rootload=1.00
(smt.stats  105  16876 576084 2594023 10694/10314/547   41051/5088    76  635   29.92)
ramon: end                  Tue Dec 24 15:39:50 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.995s
ramon: group.utime          19.967s
ramon: group.stime          0.028s
ramon: group.mempeak        31832KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.00
