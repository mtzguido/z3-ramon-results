ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:33:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28830 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Sz6hBlNzUxe7.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             427956
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   236/236     0/0  64       0    18.51   0.00)
(sat.stats    103    605    0   236/236   103/31  64       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    605    0   236/236   103/31  64       0    18.83   0.01)
(sat.stats    103    605    0   236/236   103/31  64       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 370818.83 :time 0.00)
(sat.stats    103    605    0   238/238    39/30  64       0    18.83   0.01)
(sat.stats    172   1525    1   238/238   108/84  64       0    18.93   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    175   1573    2   238/238   111/84  64       0    18.93   0.01)
(sat.stats    178   1626    3   238/238   114/84  64       0    18.93   0.01)
(sat.stats    181   1655    4   238/238   117/85  64       0    18.93   0.01)
(sat.stats    184   1707    5   238/238   120/85  64       0    18.93   0.01)
(sat.stats    187   1766    6   238/238   123/85  64       0    18.93   0.01)
(sat.stats    190   1855    7   238/238   126/86  64       0    18.93   0.01)
(sat.stats    193   1892    8   238/238   129/89  64       0    18.93   0.01)
(sat.stats    196   1938    9   238/238   132/92  64       0    18.93   0.01)
(sat.stats    199   2028   10   238/238   135/95  64       0    18.93   0.01)
(sat.stats    202   2148   11   238/238   138/98  64       0    18.93   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    205   2277   12   238/238   141/101  64       0    18.93   0.01)
(sat.stats    301   4201   14   240/240   237/172  64       0    19.02   0.03)
(sat.stats    316   4627   19   240/240   252/173  64       0    19.02   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2047 :time 0.00)
(sat.stats    482   8292   47   238/238   418/234  70       0    19.13   0.06)
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #66))) 4503599627355154 := 4503599627355154 >>l 38
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 4 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 27 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 10 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 24 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 16 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 13856 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 4736 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 64 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 256 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 6656 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 6144 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 1024 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 12288 := 16383&32768
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 8192 := 16383&32768
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5803 :time 0.00)
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
lshr: (lshr[64] (mod (div #81 2) 2251799813685248) (mod (+ 51 #709 #711) 64)) 0 := 2251662374731777 >>l 37
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 5020 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 16299 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 2 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 6000 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 8 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 10208 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 6720 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 11008 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 128 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 9728 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 13312 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 14336 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 12288 := 32768&16383
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 16383&32768
band: (band[52] (if (= #578 63) 18446744073709551616 (if #580 9223372036854775808 #704)) (lshr[64] (mod #446 2251799813685248) (mod #712 64))) 8192 := 32768&16383
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 7907 :time 0.00)
 (sat-cleaner :elim-literals 59 :elim-clauses 143 :cost 8817 :time 0.00)
(sat.stats    778  23061   82  1614/1611   502/244 279       0    21.76   0.37)
band: (band[52] (lshr[52] (bv2int %0) (+ 52 #463)) (if (= #74 51) 4503599627370496 (if #467 2251799813685248 #567))) 0 := 0&2
lshr: (lshr[64] (mod (div #81 2) 2251799813685248) (mod (+ 51 #709 #711) 64)) 16382 := 2251524936131380 >>l 51
(sat.stats   1200  53037  119  6805/6801  1055/477 279       0    23.33   0.63)
ramon: poll                 wall=1.000s usage=0.949s mem=29288KiB load=0.95 rootload=0.94
ramon: poll                 wall=2.000s usage=1.948s mem=35680KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.947s mem=38704KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.946s mem=41484KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.946s mem=52564KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.945s mem=54412KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.945s mem=56192KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.944s mem=57652KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.943s mem=59392KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.943s mem=60968KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.942s mem=62224KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.942s mem=63392KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.942s mem=64948KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.940s mem=65852KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.940s mem=66896KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.940s mem=68428KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.939s mem=69020KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.939s mem=69980KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.938s mem=70844KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.938s mem=72968KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:33:27 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.996s
ramon: group.utime          19.956s
ramon: group.stime          0.040s
ramon: group.mempeak        73480KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              1.00
