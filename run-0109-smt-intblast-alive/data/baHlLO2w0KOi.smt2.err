ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:35:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41138 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1259
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/baHlLO2w0KOi.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3018870
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4600   4197  1288/1160/92      97/7     4   13   19.14)
(smt.stats    1    202   6799   5321  1898/1712/95     192/9     6   13   19.24)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 121685436136435&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 0 := 47 << 47
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 121685436136435&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 0 := 47 << 47
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 121685436136435&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 0 := 47 << 47
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 121685436136435&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 0 := 47 << 47
(smt.stats    2    313  12195   7049  1965/1766/101     303/12     8   16   19.64)
(smt.stats    3    414  12511   7386  2108/1902/103     404/12     8   16   20.41)
(smt.stats    4    525  13659   8920  2806/2562/107     513/12     8   16   20.22)
(smt.stats    5    647  15131  11655  2962/2648/111     626/34    10   25   20.41)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 121685436136435&1152780767118491648
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 140737516535806 := 140737516535807 << 47
ramon: poll                 wall=1.003s usage=0.952s mem=21576KiB load=0.95 rootload=0.94
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 121685436136435&1148277167491121152
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 121685436136436 := 140737516421087 << 47
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  15837  12822  3127/2836/117     737/35    10   25   20.41)
(smt.stats    7    859  16682  13350  3250/2899/117     851/43    11   28   20.51)
(smt.stats    8    981  17385  14174  3744/3125/117     975/43    11   28   20.60)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1 := 1&140737492024315
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 4611826755919412219 := 140737492418521 << 1
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1 := 1&140737492024315
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 4611826755919412219 := 140737492418521 << 1
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1 := 1&140737492024315
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 4611826755919412219 := 140737492418521 << 1
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1 := 1&140737494514682
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 1&140737494514682
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 3458905251315055610 := 140737492418521 << 1
(smt.stats    9   1115  19025  18014  3773/3515/137    1082/72    14   63   20.60)
(smt.stats   10   1216  21113  20655  3815/3553/139    1198/89    16   65   20.70)
(smt.stats   11   1327  25500  28518  3830/3564/140    1309/89    17   65   20.70)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27540  32471  3858/3581/148    1297/116    18  212   20.70)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 55&140737494514682
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 55&140737492024316
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 55&140737492024315
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 55&140737492024315
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 55&140737492024316
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 55&140737492024320
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 3458905251312565248 := 140737516453866 << 6
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 55&140737492024315
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 55&140737492024316
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 55 := 55&140737492024315
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 51 := 55&140737492024315
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 3458905251312565243 := 140737516453866 << 6
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 55 := 55&140737492024315
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 51 := 55&140737492024315
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 3458905251312565243 := 140737516453866 << 6
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 3&140737494514682
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 3&140737494514680
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 14988120297383525368 := 140737516453862 << 2
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 3&140737494514682
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 3&140737492024317
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 3&140737492024317
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 3&140737492024316
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 16141041801987881980 := 140737516453862 << 2
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 3&140737492024316
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 14988120297381035004 := 140737516453862 << 2
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 3&140737492024316
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 14988120297381035004 := 140737516453862 << 2
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&281475032907728
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 281475032907728 := 140737516453864 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&281475032907728
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 281475032907728 := 140737516453864 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&281475032907728
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 281475032907728 := 140737516453864 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492024316
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492024320
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 140737492024320 := 140737516453864 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492286456
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492024316
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492024320
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 140737492024320 := 140737516453864 << 4
(smt.stats   13   1583  29698  36448  3943/3632/173    1408/142    19  238   20.89)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 13 := 13&140737492549824
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 12 := 13&140737492549824
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492681344
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 14 := 720584736472571944 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492680384
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 19052080407578 := 720584736472571884 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492681344
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 12 := 720584736472571944 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492681344
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 13 := 720584736472571944 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492681344
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 0 := 720584736472571944 << 4
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 13&140737492681344
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 0 := 720584736472571944 << 4
(smt.stats   14   1730  32882  41110  4014/3735/205    1552/153    21  245   20.99)
(smt.stats   15   1831  35002  44033  4029/3758/205    1648/152    22  246   20.99)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 883 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 882 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 880 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 880 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 32 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 885&1076060070966391136
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 32 := 885&1076060070966391136
(smt.stats   16   1942  37804  49536  4090/3775/216    1764/159    23  250   21.18)
(smt.stats   17   2064  41980  52341  4107/3835/246    1879/162    24  258   21.28)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 120 := 249211773207420487&128
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 112 := 249211773207420487&128
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 112 := 249211773207420487&128
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 16 := 249211773207420487&128
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 16 := 249211773207420487&128
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8 := 249211773207420487&128
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&128
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 16140901064495857792 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&128
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 16140901064495857792 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&924
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&129
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&128
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 16140901064495857792 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&128
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 16140901064495857792 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&128
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 16140901064495857792 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&896
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&896
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&128
shl: (shl[64] (bv2int %0) (mod (+ #110 #965) 64)) 16140901064495857792 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 866 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 864 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 832 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 768 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 640 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 512 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 576460752303423489 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 512 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 480 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 448 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 128 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 256 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 256 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 2 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 2 := 249211773207420487&576460752303423488
ramon: poll                 wall=2.000s usage=1.945s mem=22644KiB load=1.00 rootload=0.99
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 32 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 64 := 249211773207420487&576460752303423488
(smt.stats   18   2198  47146  59821  4196/3903/305    2015/183    26  267   21.47)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 2 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 32 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 32 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 64 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 64 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 256 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 256 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 256 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 128 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 249211773207419904 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 249211773207419904 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 249211773207418880 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 249211773207418880 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4096 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8192 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 16384 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 32768 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 65536 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 131072 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 262144 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 524288 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1048576 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 2097152 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4194304 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8388608 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 16777216 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 33554432 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 67108864 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 134217728 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 268435456 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 536870912 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1073741824 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 2147483648 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4294967296 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8589934592 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 17179869184 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 34359738368 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 68719476736 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 137438953472 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 274877906944 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 549755813888 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1099511627776 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 2199023255552 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4398046511104 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 8796093022208 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 17592186044416 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 35184372088832 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 70368744177664 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 140737488355328 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 281474976710656 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 562949953421312 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1125899906842624 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 2251799813685248 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4503599627370496 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 9007199254740992 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 18014398509481984 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 36028797018963968 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 72057594037927936 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 144115188075855872 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1024 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 576460752303423489 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 576460752303423489 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 576460752303423489 := 58 << 58
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 1 := 249211773207420487&576460752303423488
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 1 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 249211773207420486 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 249211773207420484 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 4 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 8 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 16 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 249211773207420480 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 249211773207420480 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 249211773207420416 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 249211773207419904 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 16 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 32 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 128 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 256 := 576460752303423488&249211773207420487
(smt.stats   19   2345  49939  65722  4417/4142/539    2192/245    28  331   22.84)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 96 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 96 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 88 := 576460752303423488&249211773207420487
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 249211773207420487&576460752303423488
band: (band[60] (shl[60] (bv2int %0) (mod #110 60)) (if (= #642 59) 1 (if #644 3 #812))) 86 := 576460752303423488&249211773207420487
(smt.stats   20   2506  54102  75113  4496/4221/563    2394/316    30  351   23.04)
(smt.stats   21   2607  56475  79831  4756/4386/564    2494/363    31  352   23.13)
(smt.stats   22   2718  58599  83632  5042/4519/564    2596/388    31  352   23.23)
ramon: poll                 wall=3.000s usage=2.945s mem=25160KiB load=1.00 rootload=0.99
(smt.stats   23   2840  61230  88523  5250/4812/564    2709/408    31  352   23.71)
(smt.stats   24   2974  65010  96157  5559/5258/567    2840/427    32  353   23.80)
(smt.stats   25   3121  73776 113421  5684/5357/570    3062/469    34  363   23.99)
ramon: poll                 wall=4.000s usage=3.944s mem=25628KiB load=1.00 rootload=1.00
(smt.stats   26   3282  76043 118524  6010/5391/570    3258/479    34  363   24.18)
(smt.stats   27   3459  78055 122301  6316/5816/570    3490/482    34  363   24.47)
(smt.stats   28   3560  82481 129337  6793/6487/581    3684/548    35  367   24.37)
(smt.stats   29   3671  88349 138329  6919/6552/582    3844/627    36  399   24.49)
ramon: poll                 wall=5.000s usage=4.944s mem=26164KiB load=1.00 rootload=0.99
(smt.stats   30   3793  93081 150244  7067/6648/582    4133/672    37  402   24.68)
(smt.stats   31   3927  97103 155238  7341/7022/584    4382/813    38  404   24.88)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 103257 165966  7385/7059/585    4740/865    39  410   24.97)
(smt.stats   33   4235 111075 182079  7433/7098/588    4976/895    40  414   25.07)
ramon: poll                 wall=6.000s usage=5.944s mem=26572KiB load=1.00 rootload=1.00
(smt.stats   34   4412 119123 194129  7645/7183/589    5371/909    41  421   25.35)
(smt.stats   35   4606 128585 215933  7770/7435/600    5825/991    42  423   25.35)
(smt.stats   36   4707 132657 230175  7841/7451/602    5996/1136    44  453   25.45)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 0 := 498423546414840974&140737492027427
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 5 := 498423546414840974&140737492027429
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492027429
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492029476
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492029476
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492029468
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492029469
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492025373
(smt.stats   37   4818 137152 244742  7960/7576/614    6297/1187    45  456   25.68)
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 4 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 802820 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 802820 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 819204 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 851972 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 851972 := 498423546414840974&140737492025380
ramon: poll                 wall=7.000s usage=6.940s mem=27284KiB load=1.00 rootload=0.99
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 884740 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 884740 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 884740 := 498423546414840974&140737492025380
band: (band[60] (if (or #828 #829 #830 #831 #832) 0 (if #833 1 #949)) (shl[64] (bv2int %0) (mod #966 64))) 884740 := 498423546414840974&140737492025380
(smt.stats   38   4940 139115 251590  8224/7886/667    6760/1239    46  465   25.87)
(smt.delete-inactive-clauses  :num-deleted-clauses 64)
(smt.stats   39   5074 143580 266320  8234/7899/670    7032/1398    47  480   26.16)
(smt.stats   40   5221 154933 287000  8264/7916/670    7280/1398    47  480   26.16)
(smt.stats   41   5382 167316 311164  8359/8004/670    7606/1398    47  480   26.35)
(smt.stats   42   5559 178489 336018  8388/8027/671    8001/1480    48  481   26.55)
ramon: poll                 wall=8.000s usage=7.940s mem=28108KiB load=1.00 rootload=1.00
(smt.stats   43   5753 194189 383962  8529/8167/672    8484/1568    49  491   26.64)
(smt.stats   44   5966 202634 410815  8843/8482/674    9090/1613    50  499   26.97)
(smt.stats   45   6067 207989 428747  8868/8494/674    9370/1616    50  499   26.97)
ramon: poll                 wall=9.000s usage=8.940s mem=28428KiB load=1.00 rootload=1.00
(smt.stats   46   6178 213259 442469  9011/8519/674    9700/1627    50  499   26.97)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6300 218734 464785  9241/8706/675   10197/1824    51  499   27.07)
(smt.stats   48   6434 223664 487823  9431/9070/677   10606/1989    52  501   27.17)
(smt.stats   49   6581 230262 512974  9473/9112/680   10991/2166    54  522   27.26)
ramon: poll                 wall=10.000s usage=9.939s mem=29088KiB load=1.00 rootload=1.00
(smt.stats   50   6742 239933 547022  9781/9161/680   11366/2172    54  522   27.36)
(smt.stats   51   6919 251678 591325  9867/9493/681   11845/2245    55  532   27.45)
(smt.stats   52   7113 266695 651404  9890/9501/681   12348/2245    55  532   27.71)
ramon: poll                 wall=11.000s usage=10.939s mem=29432KiB load=1.00 rootload=1.00
(smt.stats   53   7326 278253 690715  9997/9537/681   12960/2246    55  532   27.81)
(smt.stats   54   7560 284039 712358 10247/9867/683   13568/2425    56  552   28.00)
(smt.stats   55   7661 288093 727854 10278/9883/684   13842/2540    57  569   28.00)
(smt.stats   56   7772 291812 740717 10499/9941/684   14008/2541    57  569   28.00)
ramon: poll                 wall=12.000s usage=11.939s mem=29944KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7894 295717 753574 10663/10157/684   14321/2543    57  569   28.19)
(smt.stats   58   8028 298651 763832 10753/10313/684   14635/2544    57  569   28.19)
(smt.stats   59   8175 302237 773194 10929/10444/684   15070/2545    57  569   28.29)
ramon: poll                 wall=13.000s usage=12.939s mem=30016KiB load=1.00 rootload=1.00
(smt.stats   60   8336 305828 793020 11269/10642/684   15413/2546    57  569   28.48)
ramon: poll                 wall=14.000s usage=13.939s mem=30444KiB load=1.00 rootload=0.99
(smt.stats   61   8513 308298 803170 11504/10915/684   15750/2547    57  569   28.57)
(smt.stats   62   8707 320554 850390 11618/11232/684   16241/2547    57  569   28.57)
(smt.stats   63   8920 330526 894944 11635/11253/684   16777/2547    57  569   28.67)
(smt.stats   64   9154 342529 952154 11686/11284/688   18219/2940    58  586   28.86)
ramon: poll                 wall=15.000s usage=14.938s mem=30564KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.938s mem=30976KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   65   9411 359764 1009666 11911/11529/689   19594/3651    60  593   29.16)
(smt.stats   66   9512 364752 1026861 11932/11541/689   20279/3651    60  593   29.26)
(smt.stats   67   9623 373095 1060404 12023/11555/690   20705/3656    60  593   29.35)
ramon: poll                 wall=17.000s usage=16.938s mem=31200KiB load=1.00 rootload=1.00
(smt.stats   68   9745 381024 1107008 12241/11670/690   21186/4105    61  598   29.35)
(smt.stats   69   9879 387682 1132029 12302/11891/690   21537/4107    61  598   29.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 172)
(smt.stats   70  10026 394792 1165798 12340/11958/693   22370/4515    62  612   29.55)
ramon: poll                 wall=18.000s usage=17.938s mem=31436KiB load=1.00 rootload=1.00
(smt.stats   71  10187 404160 1209638 12423/11967/693   22791/4522    62  612   29.65)
(smt.stats   72  10364 415383 1265831 12466/12079/693   23271/4524    62  612   29.74)
(smt.stats   73  10558 423165 1291632 12482/12100/696   23877/4655    63  620   29.84)
ramon: poll                 wall=19.003s usage=18.939s mem=31784KiB load=1.00 rootload=1.00
(smt.stats   74  10771 438029 1330057 12503/12105/696   24176/4661    63  620   29.93)
(smt.stats   75  11005 451725 1396008 12536/12154/697   24943/4821    64  625   30.03)
ramon: poll                 wall=20.000s usage=19.936s mem=32040KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:36:02 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.030s
ramon: group.total          19.977s
ramon: group.utime          19.937s
ramon: group.stime          0.040s
ramon: group.mempeak        32296KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.041s
ramon: loadavg              1.00
