ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:14:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27138 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/u4HYagEWfaxo.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             950530
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   52.0833     10000        49          0            1        2)
(sat.ddfw       1      1   29.7649     20001        98          1            1        3)
(sat.ddfw       1      1   30.2572     40001       196          2            1        5)
(smt.stats    0    101   5349    333  1279/1140/118      88/18    10   24   52.37)
ramon: poll                 wall=1.000s usage=0.788s mem=54488KiB load=0.79 rootload=0.78
(sat.ddfw       1      1   28.0112     70001       343          3            1        8)
(sat.ddfw       1      1   24.6457    110001       539          4            1       12)
ramon: poll                 wall=2.000s usage=1.812s mem=54600KiB load=1.02 rootload=1.02
(smt.stats    1    202   6394   1036  2538/2307/121     211/32    12   28   52.56)
(smt.stats    2    313  10218   2653  2571/2331/128     324/44    14   36   52.56)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&8302163913529026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 64 := 72057594037927642 << 48
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 64 := 72057594037927642 << 48
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 64 := 72057594037927642 << 48
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 458 := 133905869573041&36028797018963967
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 458 := 133905869573041&36028797018963966
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 456 := 133905869573041&36028797018963926
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 456 := 133905869573041&36028797018963926
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 452 := 133905869573041&36028797018963926
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 448 := 133905869573041&36028797018963926
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 448 := 133905869573041&36028797018963936
(smt.stats    3    414  13575   4801  2632/2352/130     418/53    15   38   52.85)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&474
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&474
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&133905869573023
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&133905869573023
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&478
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&512
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 480 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 480 := 133905869573041&8302163913529026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&8302163913529026
(sat.ddfw       1      1    22.391    160000       784          5            1       17)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&576
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 108086391056892480 := 72057594037927642 << 48
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&8302163913529026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 468 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&784
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&1024
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 133905869573041&1026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 2048 := 133905869573041&2050
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 72057594037929986 := 72057594037927642 << 48
(smt.stats    4    525  15491   6829  2841/2459/176     550/67    16   47   53.15)
(smt.stats    5    647  21068  11685  2854/2601/226     678/71    17   58   53.26)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&64
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&72
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&71
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&64
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&64
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 128 := 8569975652674633&256
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 128 := 8569975652674633&256
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 128 := 8569975652674633&264
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 128 := 8569975652674633&256
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 256 := 8569975652674633&264
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 256 := 8569975652674633&258
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 256 := 8569975652674633&264
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 256 := 8569975652674633&262
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1028 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 216172782113784834 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 216172782113784834 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 216172782113784834 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  23117  14169  3006/2683/250     842/115    19   65   53.45)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 216172782113784834 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1030
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 252201579132748806 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 252201579132748802 := 72057594037927630 << 54
(smt.stats    7    859  23699  14913  3058/2745/270     969/115    19   65   53.83)
(smt.stats    8    981  25272  18575  3613/3352/279    1187/162    21   75   53.83)
(smt.stats    9   1116  28612  22481  3670/3409/283    1342/169    24   91   53.95)
(smt.stats   10   1217  30932  24036  3722/3416/284    1487/171    24   91   53.95)
ramon: poll                 wall=3.000s usage=2.965s mem=56468KiB load=1.15 rootload=1.14
(smt.stats   11   1328  33860  28880  3841/3580/286    1628/177    26   99   54.06)
(sat.ddfw       1      1   19.9405    220001      1078          6            1       23)
(smt.stats   12   1450  35218  32061  4016/3755/288    1788/177    26   99   54.15)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1584  37023  35034  4037/3760/288    1966/294    27  105   54.15)
ramon: poll                 wall=4.000s usage=3.965s mem=56604KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.6857    290001      1421          7            1       30)
(smt.stats   14   1731  40288  41666  4156/3782/288    2205/297    27  105   54.25)
(smt.stats   15   1832  41553  44222  4205/3909/288    2369/297    27  105   54.34)
(smt.stats   16   1943  43994  47845  4261/3999/289    2520/342    28  108   54.34)
(smt.stats   17   2065  47117  52349  4292/4004/289    2708/344    28  108   54.44)
ramon: poll                 wall=5.000s usage=5.164s mem=56852KiB load=1.20 rootload=1.20
(sat.ddfw       1      1   16.1518    370001      1813          8            1       38)
(smt.stats   18   2199  48767  54107  4456/4041/289    2855/346    28  108   54.63)
ramon: poll                 wall=6.000s usage=6.164s mem=56768KiB load=1.00 rootload=1.00
(smt.stats   19   2346  52044  65963  4701/4274/289    3126/346    28  108   54.63)
(sat.ddfw       1      1   14.5349    460001      2254          9            1       47)
ramon: poll                 wall=7.000s usage=7.164s mem=57148KiB load=1.00 rootload=1.00
(smt.stats   20   2507  55116  74498  4847/4540/291    3429/398    30  117   54.73)
(smt.stats   21   2608  57334  78009  4859/4592/291    3576/398    30  117   54.83)
(smt.stats   22   2719  60193  84787  4895/4611/298    3749/509    31  119   54.92)
(sat.ddfw       1      1   13.2223    560001      2745         10            1       57)
(smt.stats   23   2841  63364  90444  4924/4658/298    3896/550    32  127   55.07)
ramon: poll                 wall=8.000s usage=8.162s mem=57212KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=9.161s mem=57212KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    12.183    670001      3284         11            1       68)
ramon: poll                 wall=10.000s usage=10.267s mem=57256KiB load=1.11 rootload=1.11
(sat.ddfw       1      1   11.3475    790001      3872         12            1       80)
(smt.stats   24   2975  65348  93277  5062/4663/298    4059/557    32  127   55.26)
ramon: poll                 wall=11.000s usage=11.266s mem=57424KiB load=1.00 rootload=1.00
(smt.stats   25   3122  71492 104075  5287/4946/301    4422/612    33  133   55.26)
ramon: poll                 wall=12.000s usage=12.269s mem=57768KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5144    920001      4509         13            1       93)
(smt.stats   26   3283  74892 108978  5508/5049/301    4670/623    33  133   55.35)
ramon: poll                 wall=13.000s usage=13.268s mem=57588KiB load=1.00 rootload=1.00
(smt.stats   27   3460  78026 117842  5748/5324/301    4986/626    33  133   55.55)
ramon: poll                 wall=14.000s usage=14.265s mem=57764KiB load=1.00 rootload=0.99
(smt.stats   28   3561  80052 123718  5795/5510/301    5110/627    33  133   55.55)
(sat.ddfw       1      1   9.79569   1060001      5196         14            1      108)
ramon: poll                 wall=15.000s usage=15.265s mem=57772KiB load=1.00 rootload=1.00
(smt.stats   29   3672  82330 131699  5923/5590/302    5282/830    34  133   55.55)
ramon: poll                 wall=16.000s usage=16.267s mem=57780KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   9.16983   1210001      5931         15            1      123)
ramon: poll                 wall=17.000s usage=17.268s mem=58100KiB load=1.00 rootload=1.00
(smt.stats   30   3794  84308 133235  6019/5667/302    5419/832    34  133   55.64)
ramon: poll                 wall=18.000s usage=18.265s mem=57860KiB load=1.00 rootload=0.99
(smt.stats   31   3928  86111 140122  6231/5860/302    5615/832    34  133   55.64)
(smt.stats   32   4075  89912 143978  6253/5978/307    5788/879    35  143   55.90)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   33   4236  95259 157601  6263/6002/307    5990/879    35  143   56.03)
(sat.ddfw       1      1   8.56164   1370001      6715         16            1      139)
(smt.stats   34   4413 105914 185870  6275/6013/307    6189/879    35  143   56.12)
ramon: poll                 wall=19.000s usage=19.165s mem=58256KiB load=0.90 rootload=0.90
(smt.stats   35   4607 110189 199040  6285/6020/307    6409/879    35  143   56.33)
(smt.stats   36   4708 113145 210267  6296/6031/307    6534/879    35  143   56.42)
(smt.stats   37   4819 115792 220289  6302/6041/310    6671/1002    36  152   56.42)
(smt.stats   38   4941 119514 235135  6312/6051/312    6809/1136    37  163   56.42)
(smt.delete-inactive-clauses  :num-deleted-clauses 91)
ramon: poll                 wall=20.000s usage=20.101s mem=58884KiB load=0.94 rootload=0.94
ramon: end                  Fri Nov  1 23:14:25 2024
ramon: root.execname        z3
ramon: root.utime           20.140s
ramon: root.stime           0.010s
ramon: group.total          20.169s
ramon: group.utime          20.149s
ramon: group.stime          0.020s
ramon: group.mempeak        59140KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.067s
ramon: loadavg              1.01
