ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:49:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42273 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/E0IKly6EMu8Z.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2864285
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2744    321  1282/1090/102     100/14     8   15   19.15)
(smt.stats    1    202   3810   1393  2449/2007/104     209/41     9   20   19.36)
(smt.stats    2    313   7496   3993  2571/2259/104     345/50     9   20   19.45)
(smt.stats    3    414  10036   5956  2620/2381/107     449/88    10   24   19.57)
(smt.stats    4    525  11130   6800  2684/2447/110     504/95    12   28   19.67)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 16383 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 16382 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 16380 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 16376 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 16 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 32 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 64 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 128 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 256 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 512 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 1024 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 2048 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 4096 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 8192 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 8192 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 8192 := 16383&24576
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 2251799813709824 := 4503599627370494 << 14
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 256 := 16383&1126106077855745
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 256 := 16383&1126106077855745
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 256 := 16383&16384
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 256 := 16383&16640
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 2251799813701888 := 3377837159481344 << 14
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 256 := 16383&32768
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 256 := 16383&32768
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 256 := 16383&98304
(smt.stats    5    647  14471   8863  2843/2509/175     619/100    13   40   20.25)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 240 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 224 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 16 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 16 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 32 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 32 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 64 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 128 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 64 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 128 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 64 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 64 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 64 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 64 := 16383&262144
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 128 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 128 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 16 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 32 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 512 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 1024 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 2048 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 2048 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 8192 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 4096 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 4096 := 16383&294912
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 4096 := 16383&294912
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16885  12861  2958/2657/206     746/110    14   46   20.25)
(smt.stats    7    859  19195  16758  3039/2756/241     874/129    15   58   20.25)
(smt.stats    8    981  21028  19746  3093/2809/242    1007/143    16   58   20.25)
(smt.stats    9   1115  23041  22560  3116/2875/242    1164/149    17   61   20.35)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&8388608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 4503599635759104 := 4 << 23
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&8388608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 4503599635759104 := 4 << 23
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&8388608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 4503599635759104 := 16777220 << 23
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&16777216
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 562950221856768 := 562950221856769 << 24
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&16777216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 4503599644147712 := 33554436 << 23
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&16777216
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 16777217 := 562950221856769 << 24
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&16777216
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 25165824 := 562950221856769 << 24
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&16777216
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 562950221856768 := 562950221856769 << 24
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&16777216
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 562950221856768 := 562950221856769 << 24
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 2 := 8388607&16777216
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&16777216
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 562950221856768 := 562950221856769 << 24
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 1 := 8388607&16777216
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&16777216
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 1 := 808620874792961 << 24
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 1 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 1 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 2 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 4 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 8388600 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 8388592 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 8388604 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 1 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 1 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 8388592 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 8388576 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 128 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 136 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 144 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 192 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 256 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 512 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 1024 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 2048 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 2048 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 4096 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 8192 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 16384 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 32768 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 65536 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 131072 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 262144 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 524288 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 1048576 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 2097152 := 8388607&70506468343808
(smt.stats   10   1216  26125  25859  3349/2948/275    1275/155    18   67   21.05)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 532480 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 540672 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 540672 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 532608 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 533248 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 532736 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 532992 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 532480 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 532480 := 8388607&70506468343808
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 8388607&70506468343808
band: (band[51] (if (= #109 50) 0 (if #608 1 #749)) (shl[51] (bv2int %0) (+ 51 #752))) 532480 := 8388607&70506468343808
(smt.stats   11   1327  28822  30463  3375/3133/388    1454/219    20  103   21.44)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 3&16777216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 38280596849426432 := 1128103493500930 << 2
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33815  36558  3415/3171/398    1706/321    22  120   21.63)
(smt.stats   13   1583  39506  43150  3596/3282/400    2036/323    22  120   21.82)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712148993
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712148993
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712150016
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712150018
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712152102
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 1125900712152102 := 1125900712148992 << 3
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712150528
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712150530
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712150530
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712150531
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712150530
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 6 := 7&1125900712150534
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 1125900712150534 := 281475513581568 << 3
(smt.stats   14   1730  46958  54368  3674/3380/420    2256/398    25  135   22.08)
(smt.stats   15   1831  49579  61274  3810/3414/420    2486/398    25  135   22.25)
ramon: poll                 wall=1.000s usage=0.919s mem=23500KiB load=0.92 rootload=0.90
(smt.stats   16   1942  51259  67887  3832/3555/421    2692/450    26  138   22.25)
(smt.stats   17   2064  60687  83634  3838/3561/421    2833/476    27  140   22.25)
(smt.stats   18   2198  69496 103475  3846/3569/421    2991/476    27  140   22.25)
(smt.stats   19   2345  74898 116246  3851/3574/423    3213/501    28  148   22.25)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 1&1125900712230920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 3377700525916168 := 3377700928487522 << 1
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 1&1125900712230920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 3377700525916168 := 3377700928487522 << 1
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 1&1125900712230920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 3377700525916168 := 3377700928487522 << 1
(smt.stats   20   2506  79654 127437  3922/3576/425    3510/514    29  154   22.44)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 1&1125900712233497
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 1&1125900712233496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 3377700525918744 := 3377700660052066 << 1
(smt.stats   21   2607  80850 132496  4088/3749/430    3707/515    29  154   22.62)
(smt.stats   22   2718  82324 139940  4103/3811/430    3853/586    30  158   22.62)
(smt.stats   23   2840  87308 157228  4112/3832/431    4106/644    31  165   22.62)
(smt.stats   24   2974  89374 166427  4147/3839/432    4559/646    31  165   22.62)
(smt.stats   25   3121  92291 175958  4300/3875/433    4816/838    32  167   22.80)
(smt.stats   26   3282  94102 185109  4419/4043/433    5089/841    32  167   23.01)
ramon: poll                 wall=2.000s usage=1.919s mem=24524KiB load=1.00 rootload=1.00
(smt.stats   27   3459  96414 198653  4805/4495/436    5557/962    33  169   23.20)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560  99901 204891  4839/4497/436    5724/1053    34  174   23.30)
(smt.stats   29   3671 101997 216096  4874/4559/437    5909/1053    34  174   23.30)
(smt.stats   30   3793 104854 225751  4933/4576/437    6063/1097    35  175   23.40)
(smt.stats   31   3927 107983 238821  5026/4716/439    6321/1114    36  179   23.40)
(smt.stats   32   4074 112104 251702  5052/4720/442    6546/1115    36  179   23.49)
(smt.stats   33   4235 117904 263212  5149/4764/442    6760/1150    37  216   23.49)
ramon: poll                 wall=3.000s usage=2.919s mem=25036KiB load=1.00 rootload=1.00
(smt.stats   34   4412 123746 273762  5261/4867/442    7033/1161    37  216   23.59)
(smt.stats   35   4606 127329 287911  5298/4984/443    7592/1350    38  222   23.69)
(smt.stats   36   4707 129969 295860  5373/4993/443    7855/1352    38  222   23.69)
(smt.stats   37   4818 132426 303186  5442/5065/443    8048/1356    38  222   23.78)
(smt.stats   38   4940 135621 317728  5504/5172/443    8634/1356    38  222   23.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 18)
(smt.stats   39   5074 138983 327321  5511/5197/443    8841/1356    38  222   23.88)
ramon: poll                 wall=4.000s usage=3.919s mem=25292KiB load=1.00 rootload=1.00
(smt.stats   40   5221 142616 345225  5700/5209/443    9186/1359    38  222   23.97)
(smt.stats   41   5382 150290 385891  5738/5404/443    9413/1360    38  222   23.97)
(smt.stats   42   5559 155390 422614  5752/5442/443   10142/1360    38  222   24.07)
(smt.stats   43   5753 162922 458189  5789/5445/443   10562/1361    38  222   24.19)
(smt.stats   44   5966 170475 482265  5817/5491/443   11354/1362    38  222   24.38)
(smt.stats   45   6067 172227 489887  5824/5514/445   11592/2093    39  225   24.38)
ramon: poll                 wall=5.000s usage=4.919s mem=25824KiB load=1.00 rootload=1.00
(smt.stats   46   6178 176562 504074  5843/5519/447   11794/2093    39  225   24.38)
(smt.stats   47   6300 180273 517803  5897/5567/450   11974/2142    40  258   24.38)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 183013 535383  5922/5612/452   12181/2169    41  295   24.49)
(smt.stats   49   6581 184346 542002  5926/5616/452   12442/2169    41  295   24.49)
(smt.stats   50   6742 192279 573884  5931/5621/452   12872/2169    41  295   24.49)
(smt.stats   51   6919 198461 595821  6031/5621/453   13240/2314    42  318   24.58)
ramon: poll                 wall=6.000s usage=5.917s mem=26164KiB load=1.00 rootload=1.00
(smt.stats   52   7113 204125 620431  6198/5757/453   13808/2321    42  318   24.68)
(smt.stats   53   7326 212714 674584  6242/5912/455   14393/2465    43  332   24.94)
(smt.stats   54   7560 219704 698182  6343/5957/456   15345/2515    44  345   25.13)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 2048 := 140737488355327&117793
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 2080 := 140737488355327&117793
(smt.stats   55   7661 222129 703851  6405/6044/456   15607/2593    45  345   25.13)
(smt.stats   56   7772 226019 710120  6459/6144/461   15776/2593    45  345   25.23)
(smt.stats   57   7894 231618 738791  6471/6145/461   16313/2594    45  345   25.23)
ramon: poll                 wall=7.000s usage=6.900s mem=26688KiB load=0.98 rootload=0.98
(smt.stats   58   8028 234834 755606  6502/6188/465   16689/2679    46  360   25.32)
(smt.stats   59   8175 238857 772526  6604/6247/466   16970/2683    46  360   25.42)
(smt.stats   60   8336 242881 801716  6615/6301/467   17174/2845    47  384   25.42)
(smt.stats   61   8513 248634 850310  6620/6306/468   17631/2850    48  394   25.42)
(smt.stats   62   8707 256515 921475  6641/6325/469   17967/2948    49  395   25.51)
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 40532396646334464 := 0 << 4
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 40532396646334464 := 0 << 4
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #840 #844) 64)) 40532396646334464 := 0 << 4
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 15&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 32 := 0 << 5
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 15&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 32 := 0 << 5
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 15&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 5 := 0 << 5
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 0 := 15&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #105))) 5 := 0 << 5
ramon: poll                 wall=8.002s usage=7.903s mem=27540KiB load=1.00 rootload=1.01
(smt.stats   63   8920 259857 946977  6761/6381/469   18617/2952    49  395   25.89)
(smt.stats   64   9154 265256 959900  6845/6496/479   18983/3003    50  397   25.99)
(smt.stats   65   9411 273434 996897  6945/6596/480   19349/3022    51  398   25.99)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9512 276429 1013852  6953/6604/482   20026/3022    51  398   26.09)
(smt.stats   67   9623 282090 1031451  6960/6611/482   20396/3022    51  398   26.09)
(smt.stats   68   9745 284951 1041229  7110/6612/482   20688/3026    51  398   26.18)
ramon: poll                 wall=9.000s usage=8.899s mem=27852KiB load=1.00 rootload=0.99
(smt.stats   69   9879 287996 1050670  7341/6835/482   20992/3175    52  402   26.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   70  10026 289175 1057690  7449/7048/482   21239/3175    52  402   26.38)
(smt.stats   71  10187 291893 1070575  7703/7225/483   21615/3176    52  402   26.56)
(smt.stats   72  10364 296832 1122763  7810/7454/483   21900/3242    53  415   26.56)
ramon: poll                 wall=10.000s usage=9.898s mem=28620KiB load=1.00 rootload=1.00
(smt.stats   73  10558 300961 1150434  7874/7525/484   22874/3242    53  415   26.66)
(smt.stats   74  10771 305924 1175907  7897/7534/484   23302/3335    54  419   26.66)
(smt.stats   75  11005 314781 1246279  7971/7562/484   24959/3347    54  419   26.85)
ramon: poll                 wall=11.000s usage=10.898s mem=28620KiB load=1.00 rootload=1.00
(smt.stats   76  11262 324231 1284501  8130/7624/484   25641/3356    54  419   27.05)
ramon: poll                 wall=12.002s usage=11.889s mem=29128KiB load=0.99 rootload=0.99
(smt.stats   77  11544 330269 1323296  8433/7893/484   26650/3363    54  419   27.40)
(smt.stats   78  11645 332773 1349022  8483/8122/484   26956/3364    54  419   27.40)
(smt.stats   79  11756 336136 1380393  8595/8141/484   27492/3365    54  419   27.64)
(smt.stats   80  11878 339575 1396585  8615/8248/484   27893/3365    54  419   27.64)
(smt.stats   81  12012 343823 1428630  8630/8281/485   28603/3931    55  429   27.73)
(smt.stats   82  12159 350563 1478128  8650/8282/485   29057/3932    55  429   27.83)
ramon: poll                 wall=13.000s usage=12.885s mem=29520KiB load=1.00 rootload=1.00
(smt.stats   83  12320 353141 1500502  8691/8308/485   29300/3932    55  429   27.83)
(smt.stats   84  12497 356361 1529353  8742/8393/488   30152/4167    56  455   27.93)
(smt.stats   85  12691 359748 1561601  8745/8396/488   30927/4167    56  455   28.36)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   86  12904 366965 1624448  8957/8531/489   31641/4358    57  462   28.46)
ramon: poll                 wall=14.000s usage=13.885s mem=30052KiB load=1.00 rootload=1.00
(smt.stats   87  13138 374528 1660811  8994/8644/489   32195/4358    57  462   28.55)
(smt.stats   88  13395 384701 1711859  9269/8655/489   33186/4369    57  462   28.65)
ramon: poll                 wall=15.000s usage=14.883s mem=30372KiB load=1.00 rootload=1.00
(smt.stats   89  13677 389394 1754825  9488/8990/490   33852/4555    58  464   28.83)
(smt.stats   90  13987 403000 1888469  9522/9172/494   35247/4770    59  494   28.93)
(smt.stats   91  14088 407561 1927376  9537/9180/494   35643/4770    59  494   28.93)
ramon: poll                 wall=16.000s usage=15.883s mem=31044KiB load=1.00 rootload=1.00
band: (band[51] (if (= #375 63) 0 (if #585 1 #833)) (shl[64] (* 2 #358) (mod #848 64))) 1 := 1125899906842623&81923
(smt.stats   92  14199 411262 1947409  9619/9188/494   35896/4771    59  494   29.03)
(smt.stats   93  14321 415780 1971040  9783/9282/499   36291/4967    60  495   29.13)
(smt.stats   94  14455 418516 1985780  9845/9492/499   36603/4968    60  495   29.13)
(smt.stats   95  14602 421380 2013202  9899/9503/499   36892/4968    60  495   29.30)
(smt.stats   96  14763 424804 2048331  9949/9562/499   37182/4971    60  495   29.30)
ramon: poll                 wall=17.000s usage=16.882s mem=31068KiB load=1.00 rootload=1.00
(smt.stats   97  14940 428562 2081443 10109/9759/500   37521/5068    61  495   29.30)
(smt.delete-inactive-clauses  :num-deleted-clauses 2724)
(smt.stats   98  15134 434296 2136307 10118/9768/500   35617/5068    61  495   29.40)
(smt.stats   99  15347 440672 2184645 10172/9769/500   36102/5069    61  495   29.40)
ramon: poll                 wall=18.000s usage=17.882s mem=31248KiB load=1.00 rootload=1.00
(smt.stats  100  15581 448928 2268842 10233/9829/500   37247/5253    62  506   29.50)
(smt.stats  101  15838 457730 2336267 10504/9919/500   38078/5262    62  506   29.60)
ramon: poll                 wall=19.000s usage=18.882s mem=31296KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  102  16120 466606 2412572 10691/10191/500   39537/5273    62  506   29.79)
(smt.stats  103  16430 474397 2497726 10851/10377/500   40799/5281    62  506   29.98)
ramon: poll                 wall=20.000s usage=19.881s mem=31796KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 14:50:17 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.972s
ramon: group.utime          19.960s
ramon: group.stime          0.012s
ramon: group.mempeak        32052KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.089s
ramon: loadavg              0.99
