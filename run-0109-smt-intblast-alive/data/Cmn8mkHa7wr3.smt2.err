ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:47:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42401 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Cmn8mkHa7wr3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2855436
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2681    962   697/601/112     113/13     5   19   18.75)
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 524288 := 524289&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 524289 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 524288 := 524289&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 524289 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 524288 := 524289&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 524289 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 20 := 21&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 19 := 21&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 21&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 21 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
shl: (shl[27] (bv2int %0) (mod (bv2int %0) 27)) 0 := 20 << 20
(smt.stats    1    202   4408   2997  1100/972/115     247/17     7   22   18.94)
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971521&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 20971521 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
shl: (shl[27] (bv2int %0) (mod (bv2int %0) 27)) 1 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
shl: (shl[27] (bv2int %0) (mod (bv2int %0) 27)) 19 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 2 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524284 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524284 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524280 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524272 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524284 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 16 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 128 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 512 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 2048 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32768 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 131072 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 262144 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32768 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 12 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 128 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 128 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 16 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 5 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 128 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 512 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2048 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 32768 := 20971520&524288
(smt.stats    2    313   5283   4792  1479/1176/263     409/56    10   52   20.21)
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 131072 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 262144 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 262144 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 131072 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 98304 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 98304 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1792 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 512 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 768 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2560 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2048 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2 := 20971520&524288
(smt.stats    3    414   6463   7461  1599/1407/403     707/101    13   91   20.31)
(smt.stats    4    525   8255   9534  1743/1551/464    1042/170    15  118   20.87)
(smt.stats    5    647  10088  12186  1989/1829/466    1279/228    17  123   21.07)
ramon: poll                 wall=1.000s usage=0.988s mem=22412KiB load=0.99 rootload=0.96
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  12101  15333  2171/1855/466    1425/230    17  123   21.16)
(smt.stats    7    859  12694  16175  2385/2141/466    1576/231    17  123   21.25)
ramon: poll                 wall=2.000s usage=1.971s mem=22780KiB load=0.98 rootload=0.98
(smt.stats    8    981  15768  21128  2573/2292/466    1785/232    17  123   21.35)
(smt.stats    9   1115  19380  28019  2775/2542/476    2470/309    19  142   21.86)
ramon: poll                 wall=3.000s usage=2.971s mem=23184KiB load=1.00 rootload=1.00
(smt.stats   10   1216  20197  29019  3062/2789/477    2624/321    20  151   21.96)
(smt.stats   11   1327  21903  30647  3346/3041/477    2855/321    20  151   22.05)
ramon: poll                 wall=4.000s usage=3.970s mem=23316KiB load=1.00 rootload=1.00
(smt.stats   12   1449  23608  39166  3567/3380/489    3368/384    22  188   22.15)
(smt.stats   13   1583  25534  48965  3752/3396/492    3887/384    22  188   22.43)
ramon: poll                 wall=5.000s usage=4.970s mem=23716KiB load=1.00 rootload=1.00
(smt.stats   14   1730  27741  67665  4088/3847/493    4192/497    24  352   22.53)
ramon: poll                 wall=6.000s usage=5.970s mem=23856KiB load=1.00 rootload=1.00
(smt.stats   15   1831  29744  73656  4214/3937/494    4442/511    25  357   22.63)
(smt.stats   16   1942  33409  86547  4255/4048/503    4670/554    26  512   22.76)
(smt.stats   17   2064  37436  96276  4308/4075/508    5388/720    27  539   22.95)
ramon: poll                 wall=7.000s usage=6.969s mem=24536KiB load=1.00 rootload=0.99
(smt.stats   18   2198  41535 110685  4488/4129/508    5948/724    27  539   23.23)
(smt.stats   19   2345  45455 120789  4745/4463/512    6585/948    28  549   23.43)
(smt.stats   20   2506  48994 136874  4878/4559/512    7398/950    28  549   23.61)
ramon: poll                 wall=8.000s usage=7.969s mem=25388KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2607  52050 150927  5024/4820/514    8192/1171    29  559   23.71)
(smt.stats   22   2718  55394 168398  5139/4820/514    8643/1174    29  559   23.80)
(smt.stats   23   2840  59514 195506  5360/4978/514    9096/1317    30  575   23.90)
ramon: poll                 wall=9.000s usage=8.969s mem=25396KiB load=1.00 rootload=1.00
(smt.stats   24   2974  63165 221165  5423/5201/517   10334/1429    32  597   24.00)
(smt.stats   25   3121  68287 237726  5569/5224/517   11044/1434    32  597   24.19)
ramon: poll                 wall=10.000s usage=9.968s mem=25664KiB load=1.00 rootload=1.00
(smt.stats   26   3282  74061 277749  5765/5408/517   11635/1440    32  597   24.41)
ramon: poll                 wall=11.000s usage=10.960s mem=26260KiB load=0.99 rootload=0.99
(smt.stats   27   3459  77863 294271  6139/5693/517   12397/1445    32  597   24.70)
(smt.stats   28   3560  80777 309453  6222/5975/517   13151/1446    32  597   24.70)
(smt.stats   29   3671  85087 325500  6317/6089/519   14002/2147    33  598   24.89)
(smt.stats   30   3793  90238 348265  6346/6133/520   14870/2147    33  598   24.98)
ramon: poll                 wall=12.000s usage=11.959s mem=26504KiB load=1.00 rootload=1.00
(smt.stats   31   3927  96266 362867  6358/6152/520   15239/2329    34  607   25.08)
(smt.stats   32   4074 100383 375505  6388/6170/520   16038/2331    34  607   25.21)
(smt.stats   33   4235 107437 402771  6430/6213/520   16537/2331    34  607   25.31)
(smt.stats   34   4412 116860 429276  6447/6244/522   17038/2706    35  624   25.40)
ramon: poll                 wall=13.000s usage=12.959s mem=27044KiB load=1.00 rootload=1.00
(smt.stats   35   4606 122178 456725  6469/6253/524   17728/2827    36  674   25.59)
(smt.stats   36   4707 125407 478441  6530/6303/526   17944/2828    36  674   25.69)
(smt.stats   37   4818 129277 496093  6607/6400/527   18361/2870    37  712   25.78)
(smt.stats   38   4940 132765 511324  6651/6413/527   18640/2873    37  712   25.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 225)
(smt.stats   39   5074 137666 536396  6661/6458/527   18727/2873    37  712   25.93)
ramon: poll                 wall=14.000s usage=13.959s mem=27540KiB load=1.00 rootload=1.00
(smt.stats   40   5221 141354 554120  6680/6460/527   19266/2873    37  712   25.93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5382 147139 590065  6755/6481/527   19546/2875    37  712   26.03)
ramon: poll                 wall=15.000s usage=14.958s mem=27548KiB load=1.00 rootload=1.00
(smt.stats   42   5559 151823 609331  6809/6579/527   20613/2875    37  712   26.13)
(smt.stats   43   5753 159774 649886  6839/6614/527   21202/2875    37  712   26.13)
(smt.stats   44   5966 169078 693990  6935/6732/529   21664/3247    38  712   26.22)
ramon: poll                 wall=16.000s usage=15.958s mem=27716KiB load=1.00 rootload=1.00
(smt.stats   45   6067 174602 742054  6937/6734/529   22111/3247    38  712   26.32)
(smt.stats   46   6178 181863 773865  6955/6734/529   22566/3308    39  714   26.32)
(smt.stats   47   6300 185311 785957  7098/6752/529   22812/3308    39  714   26.41)
(smt.stats   48   6434 189607 831541  7298/7055/530   23793/3375    40  715   26.51)
ramon: poll                 wall=17.000s usage=16.958s mem=28208KiB load=1.00 rootload=1.00
(smt.stats   49   6581 196598 848072  7373/7098/530   24308/3380    40  715   26.80)
(smt.stats   50   6742 202926 868558  7599/7201/530   24897/3382    40  715   26.90)
ramon: poll                 wall=18.000s usage=17.957s mem=28472KiB load=1.00 rootload=1.00
(smt.stats   51   6919 210456 901462  7962/7454/530   26592/3389    40  715   27.34)
ramon: poll                 wall=19.000s usage=18.957s mem=28916KiB load=1.00 rootload=1.00
(smt.stats   52   7113 219650 934909  8091/7784/530   27931/3390    40  715   27.62)
(smt.stats   53   7326 234807 979651  8106/7903/531   28287/3894    41  719   27.72)
ramon: poll                 wall=20.000s usage=19.957s mem=29396KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:47:42 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.030s
ramon: group.total          19.973s
ramon: group.utime          19.937s
ramon: group.stime          0.036s
ramon: group.mempeak        29908KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              1.00
