ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:09:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28094 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KltWuWspAwtx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4180331
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 2 := 2&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 3 := 0 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 2 := 2&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 3 := 0 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 2&144115188075855871
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 2&144115188075855871
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 0 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 0 << 56
(smt.stats    0    101    770    763  1188/1056/117      81/8    10   22   19.00)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 110 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 110 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 110 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&144115188075855869
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 288230376151711741 := 110 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855871 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855871 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855870 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855870 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 219 := 55 << 2
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 113 := 56 << 1
(smt.stats    1    202   1620   1795  1284/1139/129     184/13    12   25   19.19)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 56 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 56 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 0 := 56 << 1
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855872 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855872 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855872 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855873 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855873 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855873 := 4 << 54
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855877 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855877 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 144115188075855877 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 576460752303423493 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 576460752303423493 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 576460752303423493 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 432345564227567621 := 26 << 43
(smt.stats    2    313   3212   3613  1374/1196/136     301/14    13   27   19.48)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 432345564227567621 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 432345564227567729 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 113 := 26 << 43
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&228698418577408
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 228698418577409 := 13 << 44
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&36028797018963970
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&36028797018963970
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 36028797018963970 := 2 << 55
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&36028797018963970
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&36028797018963970
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 36028797018963970 := 2 << 55
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&72057594037927935
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 72057594037927935 := 2 << 55
(smt.stats    3    414   4211   5099  1448/1287/170     397/19    15   33   19.58)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 16 << 48
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 16 << 48
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 16 << 48
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 0 := 16 << 48
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 6 << 53
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 8 << 52
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 8 << 52
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 0 := 8 << 52
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 0 := 8 << 52
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 10 << 51
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 1 := 10 << 51
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 2 := 10 << 51
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 3 := 10 << 51
(smt.stats    4    525   5270   6694  1507/1297/179     504/23    16   38   19.77)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 3 := 12 << 50
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 7 := 12 << 50
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 10 := 12 << 50
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 6 := 52 << 30
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 6 := 52 << 30
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 47 := 50 << 31
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 6 := 44 << 34
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 6 := 44 << 34
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 39 := 42 << 35
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 39 := 42 << 35
(smt.stats    5    648   7150   8503  1574/1363/194     613/29    17   60   19.97)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 40 := 42 << 35
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 40 := 42 << 35
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 40 := 42 << 35
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1443109011456
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 41 := 21 << 36
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1443109011456
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 41 := 21 << 36
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1443109011456
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 6 := 21 << 36
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 0&1443109011456
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 6 := 21 << 36
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749   8890  10651  1658/1444/219     713/33    18   65   20.06)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 2 << 55
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 5 := 2 << 55
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 1 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 1 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 0 := 1 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 0 := 1 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&72057594037927936
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 1 := 1&72057594037927936
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
band: (band[57] (if (or #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 #588 #589 ...) 0 (if #629 1 #631)) (shl[57] (bv2int %0) (+ 57 #847))) 1 := 1&72057594037927936
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 0 := 1&72057594037927936
band: (band[57] (if (or #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 #588 #589 ...) 0 (if #629 1 #631)) (shl[57] (bv2int %0) (+ 57 #847))) 1 := 1&72057594037927936
(smt.stats    7    860  10090  12062  1753/1510/240     830/44    19   66   20.45)
ramon: poll                 wall=1.000s usage=0.998s mem=21868KiB load=1.00 rootload=0.98
ramon: poll                 wall=2.000s usage=1.998s mem=21912KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.997s mem=21912KiB load=1.00 rootload=1.00
(smt.stats    8    982  11394  13506  1971/1788/258     929/76    21  100   20.73)
(smt.stats    9   1116  18724  17454  1989/1802/258    1064/76    21  100   20.73)
(smt.stats   10   1217  21768  19874  2019/1824/258    1183/77    21  100   20.73)
ramon: poll                 wall=4.000s usage=3.997s mem=22236KiB load=1.00 rootload=1.00
(smt.stats   11   1328  26625  23667  2120/1846/260    1317/89    22  107   20.92)
ramon: poll                 wall=5.000s usage=4.997s mem=22316KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.005s usage=6.001s mem=22384KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=22412KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  27224  24604  2263/1959/260    1443/112    23  108   21.12)
(smt.stats   13   1584  30567  27186  2376/2189/261    1596/116    23  108   21.12)
ramon: poll                 wall=8.000s usage=7.996s mem=22520KiB load=1.00 rootload=1.00
(smt.stats   14   1731  32608  29563  2611/2322/262    1764/149    24  110   21.22)
ramon: poll                 wall=9.004s usage=8.999s mem=22864KiB load=1.00 rootload=1.00
(smt.stats   15   1832  33712  30783  2931/2463/262    1864/167    25  112   21.41)
ramon: poll                 wall=10.000s usage=9.991s mem=23120KiB load=1.00 rootload=0.99
(smt.stats   16   1943  34153  32406  3202/2819/262    1973/170    25  112   21.41)
(smt.stats   17   2065  35880  35982  3431/3130/267    2113/175    25  112   21.60)
ramon: poll                 wall=11.000s usage=10.991s mem=23120KiB load=1.00 rootload=1.00
(smt.stats   18   2199  36772  38303  3747/3343/267    2233/219    26  132   21.70)
ramon: poll                 wall=12.000s usage=11.991s mem=23080KiB load=1.00 rootload=1.00
(smt.stats   19   2346  38484  43117  4240/3774/268    2389/240    26  132   21.89)
ramon: poll                 wall=13.000s usage=12.991s mem=23336KiB load=1.00 rootload=1.00
(smt.stats   20   2507  39867  46712  4575/4069/268    2566/255    27  132   21.98)
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 2 := 2&72057611150703590
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 360287987302415334 := 252201588192469008 << 56
band: (band[57] (if (or #859 #860 #861 #862 #863 #864 #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 ...) 0 (if #921 1 #923)) (shl[64] (* 2 #114) (mod #1173 64))) 2 := 2&72057611150703590
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #1170 #1172) 64)) 360287987302415334 := 252201588192469008 << 56
(smt.stats   21   2608  42514  52118  4824/4590/268    2676/257    27  132   22.08)
ramon: poll                 wall=14.000s usage=13.991s mem=23592KiB load=1.00 rootload=1.00
(smt.stats   22   2719  44070  57563  4981/4775/269    2798/280    28  135   22.17)
(smt.stats   23   2841  46277  65175  5162/4852/271    2922/307    29  136   22.17)
ramon: poll                 wall=15.000s usage=14.991s mem=23848KiB load=1.00 rootload=1.00
(smt.stats   24   2975  48261  71307  5252/5062/276    3053/316    31  144   22.27)
(smt.stats   25   3122  50576  75566  5480/5128/276    3211/326    31  144   22.36)
ramon: poll                 wall=16.000s usage=15.990s mem=23984KiB load=1.00 rootload=1.00
(smt.stats   26   3283  53848  81933  5776/5404/276    3393/334    31  144   22.46)
ramon: poll                 wall=17.000s usage=16.990s mem=24056KiB load=1.00 rootload=1.00
(smt.stats   27   3460  57769  92676  6117/5690/276    3593/344    31  144   22.46)
ramon: poll                 wall=18.000s usage=17.990s mem=24312KiB load=1.00 rootload=1.00
(smt.stats   28   3561  59842  96740  6239/6003/276    3725/349    31  144   22.55)
(smt.stats   29   3672  61654 101499  6408/6150/276    3828/352    31  144   22.55)
(smt.stats   30   3794  66906 108439  6470/6253/276    3950/353    31  144   22.65)
ramon: poll                 wall=19.000s usage=18.990s mem=24312KiB load=1.00 rootload=1.00
(smt.stats   31   3928  72597 115172  6513/6310/277    4185/458    32  144   22.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  78080 120752  6542/6341/277    4342/460    32  144   22.74)
(smt.stats   33   4236  83088 127015  6631/6392/277    4506/464    32  144   22.84)
ramon: poll                 wall=20.000s usage=19.990s mem=24568KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:09:38 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.999s
ramon: group.utime          19.983s
ramon: group.stime          0.016s
ramon: group.mempeak        24828KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
