ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:47:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42140 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1344
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1MxWaMLL2t7I.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3643748
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  64       0    18.51   0.00)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1025 :time 0.00)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 470018.83 :time 0.00)
(sat.stats    158   1600    0   228/228    93/66  64       0    18.83   0.01)
(sat.stats    161   1703    1   228/228    96/68  64       0    18.93   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    164   1756    2   228/228    99/71  64       0    18.93   0.01)
(sat.stats    167   1840    3   228/228   102/74  64       0    18.93   0.01)
(sat.stats    170   1969    4   228/228   105/76  64       0    18.93   0.01)
(sat.stats    173   2045    5   228/228   108/78  64       0    18.93   0.01)
(sat.stats    176   2242    6   228/228   111/79  64       0    18.93   0.01)
(sat.stats    179   2460    7   228/228   114/79  64       0    18.93   0.01)
(sat.stats    182   2593    8   228/228   117/81  64       0    18.93   0.01)
(sat.stats    185   2771    9   228/228   120/81  64       0    18.93   0.01)
(sat.stats    188   2871   10   228/228   123/81  64       0    18.93   0.01)
(sat.stats    191   3006   11   228/228   126/81  64       0    18.93   0.01)
(sat.stats    194   3085   12   228/228   129/81  64       0    18.93   0.01)
(sat.stats    209   3621   17   228/228   144/86  64       0    18.93   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   9633   33   230/230   335/221  64       0    19.12   0.04)
(sat.stats    472  10255   35   230/230   407/251  64       0    19.12   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 4598 :time 0.00)
lshr: (lshr[46] (bv2int %0) (+ 46 (* 70368744177663 #57))) 38613 := 56 >>l 36
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 0&70368744143872
lshr: (lshr[64] (mod (div #55 2) 35184372088832) (mod (+ 45 #694 #696) 64)) 70368744158739 := 28 >>l 35
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 1 := 1&70368744143872
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 2 := 2&70368744143872
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 4 := 7&70368744143872
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 2&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 1 := 70368744143872&2
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 2&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 2 := 70368744143872&2
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 996&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 628 := 70368744143872&996
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 8&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 8 := 70368744143872&8
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 16&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 16 := 70368744143872&16
 (sat-cleaner :elim-literals 5 :elim-clauses 2 :cost 6755 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 24 := 32&70368744143872
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 8 := 40&70368744143872
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 41&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 32 := 70368744143872&41
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 72&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 64 := 70368744143872&72
(sat.stats    868  16597   59  5723/5720   873/358 160       0    21.68   0.44)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9421 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 832 := 1022&70368744143872
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 768 := 1022&70368744143872
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 688 := 1022&70368744143872
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 672 := 1022&70368744143872
(sat.stats   1065  22205   78 10642/10639  1093/385 162       0    22.32   0.64)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 1023&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 640 := 70368744143872&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 2475880078569599465519316992 (if #464 1237940039284799732759658496 #552))) 0 := 1023&70368744143872
band: (band[46] (if (= #563 63) 649037107316549082289095833550848 (if #565 324518553658274541144547916775424 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 512 := 70368744143872&1023
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 13438 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14582 :time 0.00)
ramon: poll                 wall=1.000s usage=0.999s mem=25460KiB load=1.00 rootload=0.99
(sat.stats   1600  45685  166 33226/33223  1751/552 200       0    26.15   1.24)
ramon: poll                 wall=2.000s usage=1.999s mem=37992KiB load=1.00 rootload=0.99
(sat.stats   2399  47277  305 82576/82573  2550/552 200       0    39.17   2.31)
ramon: poll                 wall=3.000s usage=2.994s mem=53536KiB load=1.00 rootload=0.98
ramon: poll                 wall=4.000s usage=3.993s mem=58016KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.993s mem=61416KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.993s mem=64912KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.993s mem=67768KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts          :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin           :units         :memory       )
(sat.stats   3595  49650  491 156468/156465  3746/552 200       0    66.65   7.33)
ramon: poll                 wall=8.000s usage=7.992s mem=69912KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.992s mem=88600KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.992s mem=90484KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.982s mem=93232KiB load=0.99 rootload=0.98
ramon: poll                 wall=12.000s usage=11.981s mem=94364KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.981s mem=95940KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.981s mem=97984KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.981s mem=99004KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.980s mem=97MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.980s mem=98MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.979s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.979s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.976s mem=102MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:48:12 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.070s
ramon: group.total          19.991s
ramon: group.utime          19.915s
ramon: group.stime          0.076s
ramon: group.mempeak        102MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.00
