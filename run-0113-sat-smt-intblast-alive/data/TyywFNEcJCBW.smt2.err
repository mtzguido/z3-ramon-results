ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:00:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40613 MiB
ramon: sys.mem.avail        61379 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/TyywFNEcJCBW.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3861988
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   219/218     0/0  63       0    18.62   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 576 :time 0.00)
(sat.stats    197   1813    0   474/472   203/72  74       0    19.41   0.14)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 785 :time 0.00)
(sat.stats    197   1813    0   523/521   203/72  74       0    19.41   0.14)
(sat.stats    197   1813    0   523/521   203/72  74       0    19.41   0.14)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :elim-bin 84 :time 0.00)
 (sat-probing :cost 723819.41 :time 0.00)
(sat.stats    197   1813    0   264/262   205/78  74       0    19.41   0.14)
(sat.stats    352   5181    1   264/262   362/169  74       0    19.60   0.16)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    355   5292    2   264/262   365/170  74       0    19.60   0.16)
(sat.stats    359   5345    3   264/262   369/172  74       0    19.60   0.16)
(sat.stats    370   5353    4   264/262   380/172  74       0    19.60   0.16)
(sat.stats    373   5364    5   264/262   383/174  74       0    19.60   0.16)
(sat.stats    376   5368    6   264/262   386/175  74       0    19.60   0.16)
(sat.stats    379   5374    7   264/262   389/175  74       0    19.60   0.16)
(sat.stats    382   5389    8   264/262   392/175  74       0    19.60   0.16)
(sat.stats    385   5410    9   264/262   395/175  74       0    19.60   0.16)
(sat.stats    388   5447   10   264/262   398/175  74       0    19.60   0.16)
(sat.stats    391   5516   11   264/262   401/175  74       0    19.60   0.16)
(sat.stats    395   5599   12   268/266   405/175  74       0    19.60   0.16)
(sat.stats    400   5608   13   269/267   410/175  74       0    19.60   0.17)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2690 :time 0.00)
(sat.stats    539   6830   14   813/811   550/177  75       0    20.11   0.46)
(sat.stats    543   6836   15   877/875   554/177  75       0    20.11   0.47)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    907  11562   24  4191/4189   962/195  75       0    20.52   0.74)
(sat.stats   1202  15182   32  5041/5039  1271/206  75       0    20.62   0.89)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6777 :time 0.00)
ramon: poll                 wall=1.000s usage=0.997s mem=21900KiB load=1.00 rootload=0.99
shl: (shl[43] (bv2int %0) (mod (bv2int %1) 43)) 15 := 14 << 5
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 15&224
shl: (shl[64] (bv2int %0) (mod (+ #61 #296) 64)) 7 := 7 << 5
(sat.stats   1597  22276  109  5432/5429  1716/376  76       0    20.81   1.09)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9443 :time 0.00)
 (sat-cleaner :elim-literals 443 :elim-clauses 1 :cost 10719 :time 0.00)
 (sat-cleaner :elim-literals 41 :elim-clauses 1 :cost 10811 :time 0.00)
 (sat-cleaner :elim-literals 82 :elim-clauses 3 :cost 12569 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 13991 :time 0.00)
(sat.stats   2439  45497  192  5903/5900  2596/590  91       0    21.23   1.53)
ramon: poll                 wall=2.000s usage=1.994s mem=23012KiB load=1.00 rootload=1.00
(sat.stats   3612  80125  253 10099/10096  3828/746  91       0    22.74   2.40)
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 19643 :time 0.00)
shl: (shl[43] (bv2int %0) (mod (bv2int %1) 43)) 0 := 7467 << 4
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #61 #296) 64)) 68002595154690047 := 0 << 4
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 23691 :time 0.00)
(sat.stats   5561 103782  380 12345/12338  5175/965 101       0    23.15   2.99)
ramon: poll                 wall=3.000s usage=2.984s mem=24120KiB load=0.99 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 30959 :time 0.00)
ramon: poll                 wall=4.000s usage=3.983s mem=25256KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   8226 122349  480 29204/29197  6790/1141 103       0    24.69   4.37)
ramon: poll                 wall=5.000s usage=4.981s mem=27228KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 15 :elim-clauses 0 :cost 40637 :time 0.00)
shl: (shl[43] (bv2int %0) (mod (bv2int %1) 43)) 34359738367 := 2199023255552 << 36
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 34359738367 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 8396 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 112058 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 8 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 204320 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 16 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 1243392 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 64 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 128 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 15549952 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 23500800 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 1024 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 115945472 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 137142272 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 237518848 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 621903872 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 786497536 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 969146368 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 131072 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 13660848128 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 524288 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 3145728 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 2097152 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 20317208576 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 8388608 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 10502537216 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 7046430720 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 8589934592 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 134217728 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 5368709120 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 268435456 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 536870912 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 2147483648 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 4294967296 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 17179869184 := 34359738367&68719476736
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
shl: (shl[64] (bv2int %0) (mod (+ #61 #296) 64)) 70437463646016 := 2473904115585 << 36
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 1 := 68719476736&34359738367
ramon: poll                 wall=6.000s usage=5.980s mem=30000KiB load=1.00 rootload=1.00
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 36252 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 143154 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 157768 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 409120 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 16 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 1506944 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 64 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 91904 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 9931776 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 512 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 23595008 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 55078912 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 7086080 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 66732032 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 416153600 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 32768 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 65536 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 3233021952 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 1450704896 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 9906946048 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 1048576 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 6291456 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 4194304 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 11223957504 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 1476395008 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 67108864 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 33554432 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 9932111872 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 4294967296 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 2147483648 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 536870912 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 1073741824 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 8589934592 := 68719476736&34359738367
band: (band[43] (if (= #554 42) 0 (if #556 1 #673)) (shl[43] (bv2int %0) (mod #61 43))) 0 := 34359738367&68719476736
band: (band[43] (shl[64] (bv2int %0) (mod #297 64)) (if (or #694 #695) 0 (if #696 1 #837))) 17179869184 := 68719476736&34359738367
ramon: poll                 wall=7.000s usage=6.978s mem=37924KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.976s mem=45564KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.975s mem=49588KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.973s mem=65084KiB load=1.00 rootload=1.00
(sat.stats  12137 158467  935 244352/244344 11655/3989 104       0    67.56  10.37)
ramon: poll                 wall=11.000s usage=10.972s mem=69012KiB load=1.00 rootload=0.98
ramon: poll                 wall=12.000s usage=11.971s mem=73328KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.969s mem=75364KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.968s mem=77184KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.967s mem=78316KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.966s mem=79780KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.001s usage=16.965s mem=82040KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.963s mem=83880KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.961s mem=85640KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.960s mem=86352KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:00:59 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.050s
ramon: group.total          19.971s
ramon: group.utime          19.911s
ramon: group.stime          0.060s
ramon: group.mempeak        88400KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.00
