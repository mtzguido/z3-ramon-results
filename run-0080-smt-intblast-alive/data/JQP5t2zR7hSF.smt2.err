ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:06:24 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28130 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JQP5t2zR7hSF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4170711
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3538   1108  1026/913/91      93/10     4   14   19.08)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 17179869183 := 17179869183&17179869184
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 1 := 17179869183&2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 1 := 17179869183&2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&8
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&8
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&64
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&128
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&64
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&128
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&256
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&512
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&512
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1024
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2048
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4096
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&8192
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2048
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4096
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&8192
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16384
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16384
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32768
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16384
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32768
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&65536
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&131072
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16384
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32768
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&65536
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&131072
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32768
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&65536
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&131072
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&524288
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&524288
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1048576
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1048576
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&524288
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1048576
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2097152
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2097152
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&524288
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1048576
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4194304
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 262143 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
(smt.stats    1    202   4507   2718  1813/1594/265     227/38     8   54   20.10)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 7864320 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 7340032 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 1048576 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2097152 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 4194304 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388624 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388640 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388672 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388640 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388672 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388736 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388736 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388864 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8389120 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8389632 := 17179869183&16777216
(smt.stats    2    313   4862   3061  2015/1730/310     407/65     9   67   20.68)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 4195328 := 17179869183&8388608
(smt.stats    3    414   5299   3521  2119/1916/375     640/67     9   67   20.78)
(smt.stats    4    525   6755   6610  2632/2454/378    1146/153    10   80   20.87)
(smt.stats    5    647  11986  20067  2700/2480/382    2104/345    12   89   21.07)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2162688
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196448
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196448
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196416
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196352
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196352
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  12862  22627  2924/2527/382    2500/600    13  100   21.15)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2155392 := 8589934591&2195904
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2155392 := 8589934591&2195840
(smt.stats    7    859  13625  26444  3362/2765/387    2755/603    13  100   21.25)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2169792
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2169792
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2169728
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2169728
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2167680
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
(smt.stats    8    982  15772  32700  3571/3389/413    3756/1017    15  107   21.50)
(smt.stats    9   1116  18832  45154  3675/3419/418    4394/1242    16  130   21.59)
(smt.stats   10   1217  21057  59875  3971/3557/418    4936/1250    16  130   21.75)
(smt.stats   11   1328  23482  69595  4200/4018/421    5203/1531    17  138   21.85)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   12   1450  26514  81640  4270/4089/439    5512/1616    18  195   22.23)
(smt.stats   13   1584  30293  91864  4441/4219/442    5674/1832    19  233   22.43)
ramon: poll                 wall=1.000s usage=0.947s mem=23980KiB load=0.95 rootload=0.92
(smt.stats   14   1731  35530 101717  4906/4619/444    6257/1878    20  233   22.81)
(smt.stats   15   1832  38648 109514  5209/4725/445    6520/1972    21  254   23.01)
(smt.stats   16   1943  44145 123637  5231/4979/448    7531/2129    23  275   23.01)
(smt.stats   17   2065  49796 129658  5246/4997/448    7679/2131    23  275   23.01)
(smt.stats   18   2199  56644 156393  5260/5011/449    8366/2473    25  278   23.12)
(smt.stats   19   2346  66141 185510  5283/5032/450    8910/2600    26  278   23.23)
(smt.stats   20   2507  71301 201543  5382/5133/451    9325/2668    27  280   23.32)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943046
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943046
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943046
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943052
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943052
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943052
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943048
(smt.stats   21   2608  74152 219108  5452/5201/464    9686/2675    27  280   23.32)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&104857600
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&88080384
(smt.stats   22   2719  77538 235252  5553/5242/465    9953/2748    28  287   23.43)
ramon: poll                 wall=2.000s usage=1.947s mem=24848KiB load=1.00 rootload=1.00
(smt.stats   23   2841  83539 280776  5612/5311/465   10715/2763    29  297   23.62)
(smt.stats   24   2975  88374 293099  5695/5376/465   11372/2767    29  297   23.82)
(smt.stats   25   3122  94971 324309  5715/5457/465   13902/2769    29  297   24.22)
(smt.stats   26   3283 100550 345381  5889/5468/465   14343/2773    29  297   24.35)
(smt.stats   27   3460 106223 367312  6018/5642/465   14714/2780    29  297   24.45)
(smt.stats   28   3561 110477 414980  6020/5765/465   15540/2780    29  297   24.54)
ramon: poll                 wall=3.000s usage=2.946s mem=25916KiB load=1.00 rootload=1.00
(smt.stats   29   3672 120373 456793  6051/5770/465   16034/2780    29  297   24.64)
(smt.stats   30   3794 126174 480895  6120/5820/465   17357/2783    29  297   24.73)
(smt.stats   31   3928 130935 497186  6303/6048/467   18240/3764    30  300   25.04)
ramon: poll                 wall=4.000s usage=3.946s mem=26596KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4075 138884 516448  6330/6062/467   19063/3765    30  300   25.13)
(smt.stats   33   4236 148311 564430  6514/6078/467   19894/4016    31  305   25.36)
ramon: poll                 wall=5.000s usage=4.938s mem=26764KiB load=0.99 rootload=0.99
(smt.stats   34   4413 154047 598492  6793/6274/467   20611/4016    31  305   25.45)
(smt.stats   35   4607 166568 628656  6863/6605/468   22399/4444    32  320   25.65)
(smt.stats   36   4708 173408 655762  6927/6613/468   22941/4453    32  320   25.75)
(smt.stats   37   4819 179234 667095  7016/6708/469   23327/4567    33  325   25.75)
ramon: poll                 wall=6.000s usage=5.938s mem=27180KiB load=1.00 rootload=1.00
(smt.stats   38   4941 184251 678872  7116/6782/469   23837/4575    33  325   25.86)
(smt.delete-inactive-clauses  :num-deleted-clauses 34)
(smt.stats   39   5075 190492 695836  7220/6915/470   24494/4579    33  325   25.98)
(smt.stats   40   5222 205463 736773  7249/6994/470   24879/4736    34  329   25.98)
ramon: poll                 wall=7.000s usage=6.937s mem=27464KiB load=1.00 rootload=1.00
(smt.stats   41   5383 214831 789340  7437/6994/470   25532/4743    34  329   26.08)
(smt.stats   42   5560 222130 813664  7639/7251/470   26550/4745    34  329   26.26)
(smt.stats   43   5754 235496 845827  7879/7413/470   27451/4751    34  329   26.46)
ramon: poll                 wall=8.000s usage=7.937s mem=28152KiB load=1.00 rootload=1.00
(smt.stats   44   5967 246955 879322  8092/7677/470   28535/4757    34  329   26.56)
(smt.stats   45   6068 250254 897940  8155/7848/470   29530/4762    34  329   26.91)
(smt.stats   46   6179 253733 913523  8321/7934/470   29810/4764    34  329   26.91)
ramon: poll                 wall=9.000s usage=8.937s mem=28380KiB load=1.00 rootload=1.00
(smt.stats   47   6301 257377 935767  8537/8106/470   30207/4765    34  329   26.91)
(smt.stats   48   6435 261493 958361  8802/8315/470   30623/4775    34  329   27.10)
(smt.stats   49   6582 265924 997803  9055/8580/472   31689/5481    35  349   27.20)
ramon: poll                 wall=10.000s usage=9.928s mem=28724KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   50   6743 270355 1034033  9429/8816/472   32356/5481    35  349   27.29)
(smt.stats   51   6920 276476 1061389  9822/9265/472   33824/5631    36  368   27.50)
(smt.stats   52   7114 282961 1087614  9955/9582/472   35279/5636    36  368   27.69)
ramon: poll                 wall=11.003s usage=10.931s mem=29240KiB load=1.00 rootload=1.00
(smt.stats   53   7327 289622 1122214 10169/9736/472   36717/5637    36  368   27.88)
(smt.stats   54   7561 296689 1176977 10314/10059/475   38793/6079    37  406   28.16)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 0 := 15057764 << 2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 0 := 15057764 << 2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 0 := 15057764 << 2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 2 := 15057764 << 2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 2 := 15057764 << 2
(smt.stats   55   7662 299132 1202193 10354/10078/478   39600/6081    37  406   29.05)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 60231057 := 7528882 << 3
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 60231057 := 7528882 << 3
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 60231057 := 7528882 << 3
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 60231057 := 7528882 << 3
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
band: (band[35] (if (= #120 34) 0 (if #532 1 #625)) (shl[35] (bv2int %0) (+ 35 #628))) 1 := 3&60231056
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
band: (band[35] (if (= #120 34) 0 (if #532 1 #625)) (shl[35] (bv2int %0) (+ 35 #628))) 1 := 3&60231056
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
band: (band[35] (if (= #120 34) 0 (if #532 1 #625)) (shl[35] (bv2int %0) (+ 35 #628))) 1 := 3&60231056
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
band: (band[35] (if (= #120 34) 0 (if #532 1 #625)) (shl[35] (bv2int %0) (+ 35 #628))) 2 := 3&60231056
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
band: (band[35] (if (= #120 34) 0 (if #532 1 #625)) (shl[35] (bv2int %0) (+ 35 #628))) 2 := 3&60231056
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 3&60231056
band: (band[35] (if (= #120 34) 0 (if #532 1 #625)) (shl[35] (bv2int %0) (+ 35 #628))) 2 := 3&60231056
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   56   7773 302709 1216454 10446/10112/483   39789/6085    37  406   29.21)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2 := 3&60231056
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 1 := 3&60231056
(smt.stats   57   7895 308383 1241249 10452/10187/515   39875/6254    38  517   29.21)
ramon: poll                 wall=12.000s usage=11.926s mem=30908KiB load=1.00 rootload=0.99
(smt.stats   58   8029 311502 1276235 10493/10224/517   40757/6254    38  517   29.55)
(smt.stats   59   8176 318479 1322679 10510/10241/520   40924/6565    39  705   29.65)
(smt.stats   60   8337 325216 1359577 10655/10252/520   41554/6575    39  705   29.74)
(smt.stats   61   8514 330668 1396808 10761/10488/524   43396/6582    39  705   30.03)
(smt.stats   62   8708 335781 1413600 11015/10500/525   43882/6805    40  762   30.12)
ramon: poll                 wall=13.000s usage=12.926s mem=31676KiB load=1.00 rootload=1.00
(smt.stats   63   8921 339900 1452305 11632/10888/525   44526/6816    40  762   30.31)
(smt.stats   64   9155 351214 1478522 11651/11380/525   45340/6816    40  762   30.51)
ramon: poll                 wall=14.000s usage=13.926s mem=32444KiB load=1.00 rootload=1.00
(smt.stats   65   9413 358201 1555612 12106/11388/525   46924/6822    40  762   30.80)
(smt.stats   66   9514 363118 1609427 12134/11859/525   47737/6822    40  762   30.90)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 67108863&1
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 67108863&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 0 := 60129542216 << 26
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 67108863&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 0 := 60129542216 << 26
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 67108863&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 0 := 60129542216 << 26
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 67108863&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #855 #857) 64)) 0 := 60129542216 << 26
(smt.stats   67   9625 367294 1627239 12228/11870/525   48089/6829    40  762   31.00)
(smt.stats   68   9747 369785 1640320 12281/11983/537   48357/7511    41  767   31.00)
(smt.stats   69   9881 375213 1697741 12289/12010/538   48663/7511    41  767   31.00)
(smt.delete-inactive-clauses  :num-deleted-clauses 710)
(smt.stats   70  10028 381259 1742798 12315/12016/545   48566/7614    42  859   31.10)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 256 := 262143&10485760
(smt.stats   71  10189 386062 1769433 12588/12048/545   48810/7626    42  859   31.19)
ramon: poll                 wall=15.000s usage=14.926s mem=32956KiB load=1.00 rootload=1.00
(smt.stats   72  10366 391581 1786146 12909/12414/545   49346/7627    42  859   31.19)
(smt.stats   73  10560 399337 1818653 12966/12687/546   49832/7627    42  859   31.31)
(smt.stats   74  10773 410702 1879976 13045/12694/546   50701/7824    43  963   31.40)
(smt.stats   75  11007 419861 1938353 13136/12852/551   52803/7825    43  963   31.60)
ramon: poll                 wall=16.000s usage=15.926s mem=33468KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   76  11264 436396 2047257 13308/12992/552   54953/8329    44  987   31.90)
ramon: poll                 wall=17.000s usage=16.926s mem=33724KiB load=1.00 rootload=1.00
(smt.stats   77  11546 446615 2096765 13545/13032/552   56360/8812    45  991   32.09)
(smt.stats   78  11647 450972 2128933 13621/13338/553   57443/8813    45  991   32.19)
(smt.stats   79  11758 457224 2169997 13677/13346/553   59431/8814    45  991   32.28)
ramon: poll                 wall=18.000s usage=17.926s mem=34236KiB load=1.00 rootload=0.99
(smt.stats   80  11880 463860 2198030 13714/13414/553   59963/9232    46  996   32.38)
(smt.stats   81  12014 469229 2234675 13764/13469/553   62041/9233    46  996   32.77)
(smt.stats   82  12161 477090 2275812 13775/13492/553   63207/9233    46  996   32.89)
(smt.stats   83  12322 484224 2335279 13864/13509/553   63986/9233    46  996   33.01)
ramon: poll                 wall=19.000s usage=18.926s mem=34748KiB load=1.00 rootload=1.00
(smt.stats   84  12499 488684 2382588 14000/13582/553   65299/9238    46  996   33.21)
(smt.stats   85  12693 499712 2531852 14034/13747/553   65777/9238    46  996   33.21)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 4294967295&19968000
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 4294967295&19935232
ramon: poll                 wall=20.000s usage=19.926s mem=35004KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:06:44 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.984s
ramon: group.utime          19.948s
ramon: group.stime          0.036s
ramon: group.mempeak        35260KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              1.00
