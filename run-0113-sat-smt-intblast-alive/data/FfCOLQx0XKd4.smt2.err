ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:27:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41013 MiB
ramon: sys.mem.avail        61382 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FfCOLQx0XKd4.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3762292
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   464/464     0/0  51       0    18.95   0.00)
(sat.stats    101    637    0   464/464   101/36  51       0    19.18   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 490 :time 0.00)
(sat.stats    101    637    0   464/464   101/36  51       0    19.18   0.01)
(sat.stats    101    637    0   464/464   101/36  51       0    19.18   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 694019.27 :time 0.00)
(sat.stats    101    637    0   466/466    60/35  51       0    19.27   0.01)
(sat.stats    104    663    1   466/466    63/38  51       0    19.27   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    691    2   466/466    66/41  51       0    19.27   0.01)
(sat.stats    110    724    3   466/466    69/44  51       0    19.27   0.01)
(sat.stats    113    790    4   466/466    72/47  51       0    19.27   0.01)
(sat.stats    116    898    5   466/466    75/50  51       0    19.27   0.01)
(sat.stats    120   1043    6   466/466    79/53  51       0    19.27   0.01)
(sat.stats    123   1075    7   466/466    82/53  51       0    19.37   0.01)
(sat.stats    126   1112    8   466/466    85/53  51       0    19.37   0.01)
(sat.stats    129   1193    9   466/466    88/55  51       0    19.37   0.01)
(sat.stats    132   1312   10   466/466    91/57  51       0    19.37   0.01)
(sat.stats    135   1425   11   466/466    94/57  51       0    19.37   0.01)
(sat.stats    139   1510   12   466/466    98/57  51       0    19.37   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    404   6943   20   466/466   363/281  51       0    19.59   0.05)
(sat.stats    569  11085   21   466/466   528/383  51       0    19.69   0.08)
(sat.stats    572  11153   22   466/466   531/384  51       0    19.69   0.08)
(sat.stats    709  17553   44   466/466   668/442  51       0    19.94   0.11)
(sat.stats   1069  25935  123   469/469  1028/593  51       0    20.65   0.28)
ramon: poll                 wall=1.000s usage=0.999s mem=22584KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 1 :elim-clauses 3 :cost 11791 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 12847 :time 0.00)
(sat.stats   1704  48726  227  1941/1941  1661/826  65       0    21.84   1.12)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 18728 :time 0.00)
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 65536 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 14626 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 57676 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 28880 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 56320 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 8192 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 49152 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 32768 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 65536 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 2048 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 4096 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 800 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 128 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 64 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 512 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 256 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 1 := 3014656&65536
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 1 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 18346 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 43096 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 4 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 45472 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 16 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 38656 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 192 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 128 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 512 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 21504 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 24576 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 2048 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 4096 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 16384 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 32768 := 65536&3014656
band: (band[52] (if (= #871 51) 1 (if #873 2 #973)) (if (= #331 51) 51791395714760704 (if #977 25895697857380352 #1077))) 0 := 65536&3014656
band: (band[52] (if (= #498 63) 212137556847659843584 (if #644 106068778423829921792 #641)) (if (= #1096 63) 0 (if #1098 1 #1222))) 8 := 3014656&65536
(sat.stats :conflicts  :restarts       :learned/bin          :gc          :time)
(sat.stats      :decisions    :clauses/bin         :units        :memory       )
(sat.stats   2397  81564  315  3522/3522  2381/1078  66       0    23.44   1.36)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20757 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 33692 :time 0.00)
ramon: poll                 wall=2.000s usage=1.999s mem=30564KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 34051 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34414 :time 0.00)
(sat.stats   3694 133848  454 38618/38616  3681/1430 288       0    28.95   2.48)
ramon: poll                 wall=3.000s usage=2.999s mem=30664KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.998s mem=30700KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.998s mem=32564KiB load=1.00 rootload=1.00
(sat.stats   5517 184866  647 63431/63429  5051/2114 288       0    31.96   5.14)
ramon: poll                 wall=6.000s usage=5.997s mem=33796KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=34720KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=36272KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=37888KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.996s mem=39512KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.995s mem=40436KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.995s mem=41196KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.995s mem=41816KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=42560KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.993s mem=45200KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.992s mem=45208KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.992s mem=45380KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.992s mem=46052KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.003s usage=18.994s mem=47336KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.991s mem=50088KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:27:47 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          20.001s
ramon: group.utime          19.965s
ramon: group.stime          0.036s
ramon: group.mempeak        50344KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
