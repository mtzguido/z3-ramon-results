ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:43:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28812 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YK3Bc22FGEoj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             458278
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   250/250     0/0  58       0    18.52   0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.83   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 815 :time 0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.83   0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.83   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 470218.83 :time 0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.83   0.00)
(sat.stats    106    768    1   250/250   106/32  58       0    18.83   0.00)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    109    837    2   250/250   109/35  58       0    18.83   0.00)
(sat.stats    112    928    3   250/250   112/38  58       0    18.83   0.01)
(sat.stats    115   1041    4   250/250   115/41  58       0    18.83   0.01)
(sat.stats    118   1164    5   250/250   118/44  58       0    18.83   0.01)
(sat.stats    121   1311    6   250/250   121/47  58       0    18.83   0.01)
(sat.stats    129   1653    7   250/250   129/53  58       0    18.83   0.01)
(sat.stats    132   1671    8   250/250   132/53  58       0    18.83   0.01)
(sat.stats    135   1712    9   250/250   135/53  58       0    18.83   0.01)
(sat.stats    138   1783   10   250/250   138/53  58       0    18.93   0.01)
(sat.stats    141   1855   11   250/250   141/55  58       0    18.93   0.01)
(sat.stats    144   1949   12   250/250   144/57  58       0    18.93   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    269   6385   19   250/250   269/122  58       0    19.13   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 2773 :time 0.00)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 39 := 39 >>l 39
(sat.stats    400   8895   20   302/301   398/199  65       0    19.71   0.07)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3804 :time 0.00)
(sat.stats    518  11316   21   322/321   515/264  72       0    19.80   0.08)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4080 :time 0.00)
(sat.stats    710  17946   68   718/716   714/294  73       0    20.18   0.16)
 (sat-cleaner :elim-literals 5 :elim-clauses 4 :cost 8947 :time 0.00)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 576460202548051626 := 576460202548051626 >>l 21
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 9657 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 274877906568 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 274877906919 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 274877906886 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 274877906932 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 274877906928 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 274877906912 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 274877906880 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 274877906688 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 12800 := 274877906943&16767552323584
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 20608 := 274877906943&16767552323584
(sat.stats   1415  47813   74  7966/7963  1431/448  88       0    22.34   0.54)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 13091 :time 0.00)
 (sat-cleaner :elim-literals 194 :elim-clauses 1 :cost 14615 :time 0.00)
(sat.stats   1599  57828  117  9351/9348  1620/640 164       0    22.53   0.69)
 (sat-cleaner :elim-literals 9 :elim-clauses 2 :cost 15896 :time 0.00)
 (sat-cleaner :elim-literals 114 :elim-clauses 0 :cost 16329 :time 0.00)
ramon: poll                 wall=1.000s usage=0.932s mem=24180KiB load=0.93 rootload=0.92
 (sat-cleaner :elim-literals 7 :elim-clauses 1 :cost 18018 :time 0.00)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 17 := 35651584 >>l 8
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #741) 64)) 43 := 35651584 >>l 8
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 8290 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 69105 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 12980 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 32856 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 62560 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 114752 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 86656 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 97024 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 25088 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 101376 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 129024 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 12288 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 40960 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 81920 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 98304 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 131072 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 65536 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 139264&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 16 := 137359788634800128&139264
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 72704 := 139264&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 102400 := 139264&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 106496 := 139264&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 131072 := 139264&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 81920 := 139264&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 86016 := 130048&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 83968 := 130048&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 81920 := 130048&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 98304 := 130048&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 286719&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 262144 := 137359788634800128&286719
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 548862&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 524288 := 137359788634800128&548862
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 1064962&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 1048576 := 137359788634800128&1064962
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 2115572&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 2097152 := 137359788634800128&2115572
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 1024 := 2115283&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 65536 := 2115106&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 851968 := 2072576&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 786432 := 2072576&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 524288 := 2072576&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 0 := 4194806&137359788634800128
band: (band[59] (if (= #612 63) 1125251388496282648576 (if #614 562625694248141324288 #738)) (lshr[64] (bv2int %0) (mod #742 64))) 4194304 := 137359788634800128&4194806
ramon: poll                 wall=2.000s usage=1.930s mem=28704KiB load=1.00 rootload=0.99
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 4194304 := 4201591&137359788634800128
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #481 58) 17582052945254416384 (if #483 8791026472627208192 #597))) 1048576 := 4202478&137359788634800128
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 22920 :time 0.00)
ramon: poll                 wall=3.000s usage=2.929s mem=41592KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.928s mem=59212KiB load=1.00 rootload=0.98
ramon: poll                 wall=5.000s usage=4.927s mem=65480KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.926s mem=70728KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.925s mem=74172KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.924s mem=78220KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.923s mem=82464KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.921s mem=99MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.921s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.920s mem=104MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.919s mem=107MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.918s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.917s mem=112MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.916s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.915s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.914s mem=119MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.913s mem=122MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.913s mem=124MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:43:41 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.090s
ramon: group.total          19.997s
ramon: group.utime          19.897s
ramon: group.stime          0.100s
ramon: group.mempeak        125MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.00
