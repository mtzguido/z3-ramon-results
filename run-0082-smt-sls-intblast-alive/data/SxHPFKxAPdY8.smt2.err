ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:32:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28153 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/SxHPFKxAPdY8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             813217
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   57.8035     10000        49          0            1        2)
(sat.ddfw       1      1   30.6779     20001        98          1            1        3)
(sat.ddfw       1      1   33.0033     40001       196          2            1        5)
(smt.stats    0    101   2023    283  1208/1073/105     100/23     3   16   52.35)
ramon: poll                 wall=1.004s usage=0.831s mem=54492KiB load=0.83 rootload=0.82
(sat.ddfw       1      1   30.2115     70001       343          3            1        8)
(sat.ddfw       1      1   26.3678    110001       539          4            1       12)
(smt.stats    1    202   3501   1348  2333/2010/105     214/32     3   16   52.45)
(smt.stats    2    313   5876   2806  2485/2263/109     317/51     4   25   52.55)
ramon: poll                 wall=2.004s usage=1.923s mem=54772KiB load=1.09 rootload=1.09
(sat.ddfw       1      1   25.3159    160000       784          5            1       17)
(smt.stats    3    414   8983   4130  2620/2415/112     415/53     5   27   52.65)
(smt.stats    4    525  10243   5803  2879/2447/114     531/91     6   34   52.75)
(smt.stats    5    647  14900   9676  2925/2697/118     648/101     9   35   52.84)
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3380&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3380&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3384&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 7 := 3384&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3380&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 8 := 3384&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 7 := 3384&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 8 := 3384&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 0&70368744177663
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 562949953421312 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 0&70368744177663
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 562949953421312 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 0&70368744177663
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 562949953421312 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 422212465065984&70368744177663
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 3378 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 422212465065984&70368744177663
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 475551973152653312 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 422212465065984&70368744177663
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 422212465065984&70368744177663
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 475551973152653312 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 422212465065984&70368744177663
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3380&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 0&70368744177663
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 562949953421312 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 8 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 16 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 32 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 16 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 32 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 64 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 128 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 256 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 512 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 1024 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2048 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 4096 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 8192 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 16384 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 32768 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 32768 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 65536 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 131072 := 422212465065984&70368744177663
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17209  11782  3178/2757/147     746/110    10   37   53.43)
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 262144 := 262144&70368744177663
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 475692710641270784 := 3379 << 47
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 262144 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 262144 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 262144 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 524288 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 1048576 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2097152 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 4194304 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 8388608 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 16777216 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 33554432 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 67108864 := 422212465065984&70368744177663
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 134217728 := 422212465065984&70368744177663
(smt.stats    7    859  17661  12392  3193/2859/248     883/114    11   63   54.23)
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 3391094784 := 422212465065984&70368744177663
(sat.ddfw       1      1   22.7621    220001      1078          6            1       23)
(smt.stats    8    981  21046  15886  3492/3250/317    1489/549    13   92   54.33)
ramon: poll                 wall=3.000s usage=2.996s mem=56820KiB load=1.08 rootload=1.07
(smt.stats    9   1115  27497  35459  3524/3264/321    1673/550    14   93   54.42)
(smt.stats   10   1216  32940  45652  3563/3302/323    1851/598    15   98   54.42)
(smt.stats   11   1327  37413  52192  3643/3392/324    2051/692    16   98   54.63)
(sat.ddfw       1      1   19.7294    290001      1421          7            1       30)
ramon: poll                 wall=4.004s usage=4.077s mem=57076KiB load=1.08 rootload=1.08
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  39292  58068  3765/3512/327    2191/708    18  106   54.63)
(sat.ddfw       1      1   18.4459    370001      1813          8            1       38)
(smt.stats   13   1583  44323  63405  3808/3543/328    2340/718    19  106   54.76)
(smt.stats   14   1730  51576  77832  3832/3579/329    2624/747    20  106   54.86)
ramon: poll                 wall=5.000s usage=5.121s mem=57076KiB load=1.05 rootload=1.05
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 1048603&3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3145728&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 3145728 := 1048603 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3145728&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 3145728 := 1048603 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 422212464017408&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 422212464017408 := 1048603 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8388824&3
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 422212465065983 := 1048603 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8388826&3
(smt.stats   15   1831  55093  86385  3884/3586/329    2776/748    20  106   54.95)
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8388832&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 8388832 := 1048603 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 12582912&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 12582912 := 1048603 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8388824&3
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 422212465065985 := 1048603 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8388824&3
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 1 := 8388824&3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8388824&3
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 2 := 8388824&3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8388824&3
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 3 := 8388824&3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8388824&3
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 2 := 8388824&3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 1 := 8388824&3
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 8388824&3
(smt.stats   16   1942  57138  93137  3944/3686/376    2900/880    22  116   55.13)
(sat.ddfw       1      1   16.3369    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=6.122s mem=57588KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.8017    560001      2745         10            1       57)
ramon: poll                 wall=7.004s usage=7.152s mem=57588KiB load=1.03 rootload=1.03
(smt.stats   17   2064  57655  94649  4001/3694/378    3024/880    22  116   55.42)
ramon: poll                 wall=8.000s usage=8.152s mem=58100KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.4179    670001      3284         11            1       68)
ramon: poll                 wall=9.004s usage=9.158s mem=58100KiB load=1.00 rootload=1.01
(smt.stats   18   2198  58789  96406  4322/3936/378    3185/882    22  116   55.51)
(sat.ddfw       1      1   12.2875    790001      3872         12            1       80)
ramon: poll                 wall=10.000s usage=10.151s mem=58100KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=11.149s mem=58356KiB load=1.00 rootload=1.00
(smt.stats   19   2345  62262 102997  4626/4252/378    3365/939    23  125   56.00)
(sat.ddfw       1      1   11.3329    920001      4509         13            1       93)
ramon: poll                 wall=12.004s usage=12.107s mem=58268KiB load=0.95 rootload=0.95
(smt.stats   20   2506  66052 108371  4918/4638/385    3634/973    24  130   56.31)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2607  70446 113697  4957/4671/385    3740/1023    25  144   56.31)
ramon: poll                 wall=13.000s usage=13.103s mem=58600KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5011   1060001      5196         14            1      108)
ramon: poll                 wall=14.000s usage=14.102s mem=58632KiB load=1.00 rootload=1.00
(smt.stats   22   2718  72335 116273  5071/4697/385    3875/1025    25  144   56.40)
ramon: poll                 wall=15.000s usage=15.102s mem=58684KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.78665   1210001      5931         15            1      123)
(smt.stats   23   2840  74666 123293  5398/4957/385    4083/1028    25  144   56.50)
ramon: poll                 wall=16.004s usage=16.102s mem=58968KiB load=1.00 rootload=1.00
(smt.stats   24   2974  76525 130863  5699/5426/388    4491/1133    26  147   56.59)
(smt.stats   25   3121  82438 145196  5742/5454/388    4782/1135    26  147   56.71)
(smt.stats   26   3282  89662 167874  5833/5543/390    4947/1225    27  161   56.71)
ramon: poll                 wall=17.000s usage=17.102s mem=59336KiB load=1.00 rootload=1.00
(smt.stats   27   3459  94373 178534  5917/5619/408    5104/1299    29  339   57.07)
(sat.ddfw       1      1   9.16958   1370001      6715         16            1      139)
(smt.stats   28   3560  98556 187451  5989/5674/411    5300/1393    30  342   57.16)
ramon: poll                 wall=18.000s usage=18.102s mem=59664KiB load=1.00 rootload=1.00
(smt.stats   29   3671 104813 196750  6061/5698/411    5564/1396    30  342   57.56)
ramon: poll                 wall=19.000s usage=19.103s mem=60040KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   8.63602   1540001      7549         17            1      156)
ramon: poll                 wall=20.000s usage=20.103s mem=60196KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:32:39 2024
ramon: root.execname        z3
ramon: root.utime           20.160s
ramon: root.stime           0.000s
ramon: group.total          20.177s
ramon: group.utime          20.169s
ramon: group.stime          0.008s
ramon: group.mempeak        60452KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.00
