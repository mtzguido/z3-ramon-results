ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:57:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42085 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/HHtL5oock2pg.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2890289
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3596    477  1246/1117/100      97/13     6   16   19.15)
(smt.stats    1    202   4746    829  2167/1922/101     201/18     7   17   19.35)
(smt.stats    2    313   6687   1927  2351/2079/101     316/19     7   17   19.45)
(smt.stats    3    414   8766   3014  2405/2184/106     415/30     8   18   19.45)
(smt.stats    4    525  13009   3881  2416/2187/107     517/31     9   24   19.55)
(smt.stats    5    647  18582   6744  2510/2270/107     633/31     9   24   19.55)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  22089   8196  2557/2320/107     737/31     9   24   19.65)
(smt.stats    7    859  25343  10612  2570/2331/107     846/31     9   24   19.65)
(smt.stats    8    981  27303  12383  2573/2332/107     974/32     9   24   19.76)
(smt.stats    9   1115  31056  14606  2603/2360/107    1108/32     9   24   19.87)
(smt.stats   10   1216  33430  16225  2603/2360/107    1209/32     9   24   19.87)
(smt.stats   11   1327  36083  18879  2603/2360/107    1320/32     9   24   19.87)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1449  38899  20644  2605/2362/107    1441/32     9   24   19.87)
(smt.stats   13   1583  40211  23225  2606/2363/107    1577/32     9   24   19.87)
(smt.stats   14   1730  43507  25788  2606/2363/107    1724/32     9   24   20.10)
(smt.stats   15   1831  45796  27414  2606/2363/107    1825/32     9   24   20.10)
(smt.stats   16   1942  48357  29029  2606/2363/107    1936/32     9   24   20.10)
(smt.stats   17   2064  51112  30746  2606/2363/107    2058/32     9   24   20.10)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1125899906842623 := 1125899906842623&1125899906842623
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1125899906842623 := 36028797018963966 << 49
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1 := 1125899906842623&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1 := 4 << 49
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&1
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&1
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&1
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481981
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481981
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481980
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481981
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481980
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481976
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481968
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481981
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481980
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481976
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481976
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481968
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481952
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481920
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481981
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481980
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&2
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481976
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481971
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481970
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&18014398509481968
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&16
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&32
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&64
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&128
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&128
(smt.stats   18   2198  52531  33440  2668/2364/107    2196/35     9   24   20.39)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&128
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&256
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&256
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&128
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&512
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&128
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 128 := 1125899906842623&128
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 128 := 130 << 49
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 127 := 1125899906842623&128
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 127 := 1125899906842623&128
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1125899906842623&128
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 128 := 1125899906842623&128
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 128 := 130 << 49
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 128 := 1125899906842623&168
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 128 := 1125899906842623&176
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 128 := 1125899906842623&168
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 136 := 1125899906842623&168
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 136 := 1125899906842623&168
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 160 := 1125899906842623&168
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 160 := 1125899906842623&168
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 168 := 1125899906842623&168
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 18014398509482152 := 36028797018963966 << 49
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 144 := 1125899906842623&160
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 128 := 1125899906842623&160
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 160 := 1125899906842623&168
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 160 := 1125899906842623&160
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 18014398509482144 := 18014398509482146 << 49
(smt.stats   19   2345  53654  35826  2864/2484/226    2409/73    10   37   20.68)
(smt.stats   20   2506  55854  40953  3012/2646/226    2629/77    10   37   20.68)
(smt.stats   21   2607  57855  43752  3050/2761/229    2902/115    11   57   20.89)
(smt.stats   22   2718  59986  47776  3383/2948/229    3189/117    11   57   20.98)
(smt.stats   23   2840  61754  51103  3552/3169/229    3428/119    11   57   21.08)
ramon: poll                 wall=1.002s usage=0.908s mem=22296KiB load=0.91 rootload=0.90
(smt.stats   24   2974  64406  59197  3798/3552/234    3716/293    12   60   21.17)
(smt.stats   25   3121  67172  74134  3854/3570/237    4662/548    13   76   21.27)
(smt.stats   26   3282  69752  83683  3980/3610/237    5351/554    13   76   21.37)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   27   3459  72959  98994  4058/3808/239    5565/1142    14   78   21.46)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1 := 1&122
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1&122
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #104))) 60 := 61 << 1
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1 := 1&122
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1&122
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #104))) 60 := 61 << 1
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1&122
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #104))) 60 := 61 << 1
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1&1146
band: (band[54] (if (= #108 53) 1 (if #615 3 #766)) (shl[54] (bv2int %1) (+ 54 #769))) 1 := 1&1146
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1&1146
band: (band[54] (if (= #108 53) 1 (if #615 3 #766)) (shl[54] (bv2int %1) (+ 54 #769))) 1 := 1&1146
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1&1146
band: (band[54] (if (= #108 53) 1 (if #615 3 #766)) (shl[54] (bv2int %1) (+ 54 #769))) 1 := 1&1146
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1&1146
band: (band[54] (if (= #108 53) 1 (if #615 3 #766)) (shl[54] (bv2int %1) (+ 54 #769))) 1 := 1&1146
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1 := 1&1146
(smt.stats   28   3560  74679 108687  4153/3897/262    5788/1171    15   81   21.56)
(smt.stats   29   3671  76099 118269  4193/3928/264    5944/1172    15   81   21.56)
(smt.stats   30   3793  78636 129806  4224/3968/267    6215/1247    16   92   21.73)
(smt.stats   31   3927  83097 153269  4242/3980/267    6572/1248    16   92   21.73)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 18014398509481983&64
(smt.stats   32   4074  86093 174044  4296/4030/277    6747/1531    17  103   21.73)
(smt.stats   33   4235  88707 195763  4353/4074/278    6941/1549    18  119   21.83)
(smt.stats   34   4412  93116 233017  4354/4098/278    7159/1598    19  119   21.83)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1512 := 4503599627370495&5352
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&5352
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&5352
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&5352
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&5352
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&5352
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1278 := 4503599627370495&5352
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&5352
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&5224
(smt.stats   35   4606 101410 282696  4418/4146/290    7566/1730    21  138   22.06)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&4840
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&4840
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&4840
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&4840
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1256 := 4503599627370495&4840
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 680 := 4503599627370495&4840
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 744 := 4503599627370495&4840
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 680 := 4503599627370495&3752
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 680 := 4503599627370495&3752
(smt.stats   36   4707 104403 295456  4477/4202/334    7854/1733    21  138   22.15)
(smt.stats   37   4818 106493 310926  4499/4237/334    7976/1804    22  149   22.15)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 512 := 18014398509481983&515
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 513 := 18014398509481983&515
(smt.stats   38   4940 109712 328343  4567/4244/334    8313/1804    22  149   22.25)
ramon: poll                 wall=2.000s usage=1.906s mem=23504KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 277)
(smt.stats   39   5074 112271 345121  4613/4336/343    8266/1946    23  152   22.35)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 129 := 18014398509481983&131
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 131 := 18014398509481983&147
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 131 := 18014398509481983&147
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 131 := 18014398509481983&147
(smt.stats   40   5221 114665 362475  4677/4400/344    8428/2033    24  169   22.54)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 51 := 18014398509481983&83
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 51 := 18014398509481983&115
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55 := 18014398509481983&115
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 51 := 18014398509481983&115
(smt.stats   41   5382 115791 365835  4931/4628/350    8657/2036    24  169   22.54)
(smt.stats   42   5559 117423 372914  5063/4707/355    8973/2041    24  169   22.74)
(smt.stats   43   5753 124357 388262  5122/4857/358    9329/2158    25  178   22.74)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 227 := 18014398509481983&18014398509468899
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 227 := 18014398509481983&18014398509477091
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1251 := 18014398509481983&18014398509477091
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1251 := 18014398509481983&18014398509477091
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1251 := 18014398509481983&18014398509477091
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1267 := 18014398509481983&18014398509477091
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5966 127329 404401  5509/4870/358   10107/2170    25  178   22.93)
(smt.stats   45   6067 129970 416705  5555/5288/382   10469/2314    26  181   23.03)
(smt.stats   46   6178 132902 432035  5658/5309/382   11106/2319    26  181   23.13)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1866 := 274877906943&5629499534213120
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1864 := 274877906943&5629499534213120
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1856 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1792 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1024 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 512 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 4 := 274877906943&12384898975268864
(smt.stats   47   6300 136640 462922  5787/5416/382   11352/2703    27  205   23.25)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 34817 := 274877906943&11258999068426240
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 34816 := 274877906943&11258999068426240
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 40960 := 274877906943&11258999068426240
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 49152 := 274877906943&11258999068426240
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 65536 := 274877906943&11258999068426240
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 65536 := 274877906943&11258999068426240
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 65536 := 274877906943&11258999068426240
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 65536 := 274877906943&11258999068426240
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 131072 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 262144 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 524288 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1048576 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1048576 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 2097152 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 4194304 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8388608 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 16777216 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 33554432 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 67108864 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 134217728 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 268435456 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 536870912 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 1073741824 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 2147483648 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 4294967296 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8589934592 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 17179869184 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 34359738368 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 68719476736 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137438953472 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 2147483648 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8589934592 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 17179869184 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 34359738368 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 68719476736 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137438953472 := 274877906943&12384898975268864
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137438953472 := 274877906943&12384898975268864
ramon: poll                 wall=3.000s usage=2.906s mem=25132KiB load=1.00 rootload=0.98
(smt.stats   48   6434 139722 488850  5959/5692/460   12072/2780    28  209   23.73)
(smt.stats   49   6581 145503 506754  5966/5699/460   12311/2780    28  209   23.93)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 566970291712 := 18014398509481983&18014398509481728
(smt.stats   50   6742 151010 540340  5996/5712/461   12515/3176    30  223   24.02)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 566969276160 := 18014398509481983&18014398509481728
(smt.stats   51   6919 155998 549137  6095/5806/461   12754/3181    30  223   24.02)
(smt.stats   52   7113 162998 588633  6138/5854/462   13349/3184    30  223   24.12)
(smt.stats   53   7326 167817 616473  6225/5966/463   13630/3352    31  225   24.12)
(smt.stats   54   7560 173130 679715  6271/5979/463   13973/3393    32  238   24.12)
(smt.stats   55   7661 176112 719702  6324/6065/463   14099/3393    32  238   24.22)
(smt.stats   56   7772 179629 767138  6344/6065/464   14269/3513    33  239   24.22)
ramon: poll                 wall=4.002s usage=3.906s mem=25556KiB load=1.00 rootload=1.01
(smt.stats   57   7894 182267 798914  6380/6092/464   14455/3515    33  239   24.22)
(smt.stats   58   8028 184298 814531  6409/6150/472   14880/3624    34  259   24.32)
(smt.stats   59   8175 188874 854848  6493/6153/472   15233/3628    34  259   24.32)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 113 := 255&18014398509478773
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 117 := 255&18014398509478773
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 558446353793938293 := 36028797018961156 << 7
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 117 := 255&18014398509478773
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 558446353793938293 := 36028797018961156 << 7
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 117 := 255&18014398509478773
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 558446353793938293 := 36028797018961152 << 7
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 117 := 255&18014398509478773
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 558446353793938293 := 36028797018961152 << 7
(smt.stats   60   8336 196826 897659  6566/6245/472   15597/3974    35  267   24.41)
(smt.stats   61   8513 204651 940991  6640/6364/477   16074/4076    36  268   24.41)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 77941 := 68719476735&77941
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 558446353794019445 := 99298 << 35
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 77941 := 68719476735&77941
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 576460752303501429 := 99330 << 35
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 77941 := 68719476735&77941
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 576460752303501429 := 16809982 << 35
(smt.stats   62   8707 209455 963665  6968/6388/477   16545/4260    37  268   24.51)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 217148 1026427  7135/6712/483   17111/4274    37  268   24.61)
ramon: poll                 wall=5.002s usage=4.906s mem=26064KiB load=1.00 rootload=0.99
(smt.stats   64   9154 222554 1063107  7219/6885/483   17541/4539    38  272   24.71)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55422 := 1099511627775&57470
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55422 := 1099511627775&55422
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1152921504606902398 := 100354 << 39
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55422 := 1099511627775&55422
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1206964700135348350 := 100450 << 39
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55422 := 1099511627775&55422
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1188950301625866366 := 2132034 << 39
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55422 := 1099511627775&55422
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1188950301625866366 := 2132034 << 39
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55422 := 1099511627775&55422
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1188950301625866366 := 2132034 << 39
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55422 := 1099511627775&55422
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1188950301625866366 := 2132034 << 39
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 55422 := 1099511627775&55422
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 1188950301625866366 := 2132034 << 39
(smt.stats   65   9412 228127 1079208  7544/7279/490   17953/4750    39  275   24.81)
(smt.stats   66   9513 230541 1090009  7600/7333/491   18457/4755    39  275   25.02)
(smt.stats   67   9624 233200 1093902  7626/7340/491   18612/4757    39  275   25.02)
(smt.stats   68   9746 236931 1128529  7738/7373/491   18920/4758    39  275   25.02)
(smt.stats   69   9880 239695 1161805  7801/7482/491   19065/5200    40  282   25.11)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 242338 1199975  7832/7555/493   19469/5269    41  288   25.11)
ramon: poll                 wall=6.000s usage=5.904s mem=26464KiB load=1.00 rootload=1.00
(smt.stats   71  10188 246662 1252959  7917/7580/493   19771/5271    41  288   25.11)
(smt.stats   72  10365 251102 1298217  8002/7686/494   20281/5516    42  288   25.21)
(smt.stats   73  10559 255538 1353076  8184/7745/494   21124/5523    42  288   25.31)
(smt.stats   74  10772 259699 1395853  8351/8033/496   21570/5828    43  289   25.31)
ramon: poll                 wall=7.000s usage=6.904s mem=26800KiB load=1.00 rootload=1.00
(smt.stats   75  11006 265491 1460049  8374/8109/498   22174/5875    44  299   25.40)
(smt.stats   76  11263 273475 1536805  8438/8163/500   22826/6343    45  307   25.59)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 63&24576
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 24576 := 131072 << 5
(smt.stats   77  11545 278245 1594393  8994/8715/501   23676/6356    45  307   25.88)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 35184372088831&24576
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 35184372088831&24576
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8192 := 35184372088831&24576
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8192 := 35184372088831&24576
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 24576 := 35184372088831&24576
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 24576 := 131072 << 44
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 24576 := 35184372088831&24576
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 24576 := 753664 << 44
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 24576 := 35184372088831&24576
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 24576 := 753664 << 44
(smt.stats   78  11646 282226 1648583  9045/8760/513   23934/6500    46  316   25.98)
(smt.stats   79  11757 285219 1662545  9064/8790/528   24040/6625    47  333   25.98)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 9007199254740991&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 0 := 0 << 52
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 9007199254740991&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #104))) 2 := 0 << 53
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 9007199254740991&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 0 := 0 << 52
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 9007199254740991&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #104))) 2 := 0 << 53
(smt.stats   80  11879 288189 1693339  9114/8804/528   24196/6626    47  333   26.11)
ramon: poll                 wall=8.000s usage=7.903s mem=27648KiB load=1.00 rootload=1.00
(smt.stats   81  12013 289797 1697769  9213/8933/533   24369/6638    48  334   26.11)
(smt.stats   82  12160 293939 1757866  9242/8955/535   24592/6675    49  353   26.54)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12321 295667 1774457  9273/8971/535   24788/6675    49  353   26.64)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 1023&16888498602901504
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 16888498602901504 := 2 << 9
(smt.stats   84  12498 298718 1830350  9325/9007/539   25628/6678    49  353   26.64)
(smt.stats   85  12692 305043 1892570  9680/9127/545   26359/7225    50  361   26.73)
(smt.stats   86  12905 310997 1956881 10168/9438/545   26946/7384    51  362   27.05)
ramon: poll                 wall=9.000s usage=8.903s mem=28652KiB load=1.00 rootload=1.00
(smt.stats   87  13139 317578 2020160 10194/9903/549   27528/7481    52  363   27.24)
(smt.stats   88  13396 319205 2043712 10196/9910/549   27821/7589    53  365   27.33)
(smt.stats   89  13678 323625 2129865 10207/9915/550   28615/7589    53  365   27.33)
(smt.stats   90  13988 326727 2180864 10208/9922/550   29017/7947    54  366   27.43)
(smt.stats   91  14089 329008 2201011 10257/9926/550   29354/7952    54  366   27.52)
ramon: poll                 wall=10.000s usage=9.903s mem=29024KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   92  14200 332160 2223513 10395/10005/550   29916/7957    54  366   27.52)
(smt.stats   93  14322 335627 2253199 10497/10153/551   30302/8274    55  369   27.62)
ramon: poll                 wall=11.000s usage=10.903s mem=29160KiB load=1.00 rootload=1.00
(smt.stats   94  14456 339380 2275729 10632/10241/551   30501/8277    55  369   27.62)
(smt.stats   95  14603 342105 2326798 10709/10394/551   30852/8277    55  369   27.62)
(smt.stats   96  14764 350890 2457262 10711/10425/551   31102/8277    55  369   27.62)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 562949953421311&40960
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 562949953421311&40960
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 562949953421311&40960
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8192 := 562949953421311&40960
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8192 := 562949953421311&40960
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8192 := 562949953421311&40960
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 12288 := 562949953421311&40960
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 24576 := 562949953421311&40960
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 40960 := 562949953421311&40960
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 40960 := 1125899906973956 << 48
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 40960 := 562949953421311&40960
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 40960 := 1125899906942948 << 48
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 40960 := 562949953421311&40960
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #854 #858) 64)) 40960 := 1125899907956996 << 48
(smt.stats   97  14941 356349 2511890 10950/10427/551   31394/8291    55  369   27.93)
(smt.delete-inactive-clauses  :num-deleted-clauses 598)
ramon: poll                 wall=12.000s usage=11.903s mem=29444KiB load=1.00 rootload=1.00
(smt.stats   98  15135 360361 2555567 11014/10706/572   31006/8650    56  373   27.93)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 18014398509481983&32768
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 18014398509481983&16384
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 0 := 18014398509481983&16384
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 8192 := 18014398509481983&24576
(smt.stats   99  15348 364974 2604582 11074/10752/574   31227/8670    57  378   27.93)
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137438953472 := 18014398509481983&1125899906973696
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137438953472 := 18014398509481983&1125899906973696
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137438953472 := 18014398509481983&1125899906973696
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137438953472 := 18014398509481983&1125899906973696
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137438953472 := 18014398509481983&1125899906973696
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 137439084544 := 18014398509481983&1125899906973696
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 146028888064 := 18014398509481983&1125899906973696
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 148176502784 := 18014398509481983&1125899906973696
band: (band[54] (if (= #388 63) 1 (if #592 3 #847)) (shl[64] (* 2 #372) (mod #862 64))) 148176371712 := 18014398509481983&1125899906973696
(smt.stats  100  15582 369178 2660304 11228/10853/574   31777/8679    57  378   28.03)
(smt.stats  101  15839 370797 2666069 12126/10959/589   32225/8688    57  378   28.33)
ramon: poll                 wall=13.000s usage=12.902s mem=30208KiB load=1.00 rootload=1.00
(smt.stats  102  16121 377420 2733268 12503/12210/590   33573/8919    58  381   28.61)
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions     )
(smt.stats  103  16431 394572 2942086 12561/12254/592   35727/10412    60  385   28.80)
ramon: poll                 wall=14.000s usage=13.902s mem=30416KiB load=1.00 rootload=1.00
(smt.stats  104  16771 402746 3071289 12738/12306/592   36344/10431    60  385   29.00)
ramon: poll                 wall=15.000s usage=14.902s mem=30788KiB load=1.00 rootload=0.99
(smt.stats  105  16872 405173 3120743 12862/12481/592   36496/10433    60  385   29.00)
ramon: poll                 wall=16.000s usage=15.901s mem=30788KiB load=1.00 rootload=1.00
(smt.stats  106  16983 407406 3140862 13009/12590/592   36732/10434    60  385   29.09)
ramon: poll                 wall=17.000s usage=16.901s mem=30800KiB load=1.00 rootload=1.00
(smt.stats  107  17105 410737 3174415 13177/12767/592   36999/10440    60  385   29.09)
ramon: poll                 wall=18.000s usage=17.901s mem=30820KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.901s mem=30852KiB load=1.00 rootload=1.00
(smt.stats  108  17239 413470 3200744 13501/13045/592   37241/10445    60  385   29.19)
ramon: poll                 wall=20.000s usage=19.901s mem=30952KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:57:41 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.992s
ramon: group.utime          19.968s
ramon: group.stime          0.024s
ramon: group.mempeak        31208KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.092s
ramon: loadavg              1.00
