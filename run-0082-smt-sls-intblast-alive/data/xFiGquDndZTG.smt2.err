ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:17:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27112 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xFiGquDndZTG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             962557
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   93.4579     10000        49          0            1        2)
(sat.ddfw       1      1   49.7562     20001        98          1            1        3)
(sat.ddfw       1      1   50.6329     40001       196          2            1        5)
(smt.stats    0    101   3005    250  1289/1145/108     102/16     4   18   52.26)
(smt.stats    1    202   5395   1390  2075/1831/108     222/17     4   18   52.26)
(sat.ddfw       1      1   44.1826     70001       343          3            1        8)
(smt.stats    2    313   7404   2882  2104/1902/109     332/26     5   19   52.35)
(smt.stats    3    414   9630   4001  2205/2007/114     445/52     7   22   52.45)
(smt.stats    4    525  11632   6486  2702/2425/115     552/59     8   25   52.57)
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 1&2
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 1&72057594037927935
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72057594037927935 := 72057594037927936 >>l 63
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 1&72057594037927935
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72057594037927935 := 72057594037927936 >>l 63
(smt.stats    5    647  12710   7850  2811/2564/128     674/65    10   33   52.76)
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&127
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 127 := 128 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&127
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037927935 := 16256 >>l 7
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 78 := 562949953421312&127
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 77 := 562949953421312&126
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 2 := 562949953421312&51
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 6272 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 6400 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 48 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 45 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 37 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 819200 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 6401 := 6400 >>l 7
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 819200 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 6401 := 6400 >>l 7
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 819200 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 6401 := 6400 >>l 7
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 819200 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 6401 := 6400 >>l 7
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 6400 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 6451 := 6450 >>l 7
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 52 := 562949953421312&52
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 835584 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 4 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 64 := 562949953421312&64
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 128 := 562949953421312&128
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 256 := 562949953421312&256
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 562949953421312&512
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 1024 := 562949953421312&1024
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 2048 := 562949953421312&2048
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 4096 := 562949953421312&4096
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8192 := 562949953421312&8192
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16384 := 562949953421312&16384
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32768 := 562949953421312&32768
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 65536 := 562949953421312&65536
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8192 := 562949953421312&8192
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16384 := 562949953421312&16384
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32768 := 562949953421312&32768
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 65536 := 562949953421312&65536
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 131072 := 562949953421312&131072
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 262144 := 562949953421312&262144
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 65536 := 562949953421312&65536
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 131072 := 562949953421312&131072
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 262144 := 562949953421312&262144
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 524288 := 562949953421312&524288
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 1048576 := 562949953421312&1048576
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 2097152 := 562949953421312&2097152
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 4194304 := 562949953421312&4194304
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8388608 := 562949953421312&8388608
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16777216 := 562949953421312&16777216
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14191   9437  3071/2631/184     786/69    12   51   53.44)
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 64 := 562949953421312&64
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 64 := 562949953421312&64
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 64 := 562949953421312&64
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 128 := 562949953421312&128
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 50 := 9223372036854775680 >>l 14
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 1 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 2 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 4 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 8 := 562949953421312&50
ramon: poll                 wall=1.000s usage=0.911s mem=55856KiB load=0.91 rootload=0.89
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 16 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 32 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 16 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 15 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 14 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 12 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 8 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 4 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 8 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 2 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 1 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32768 := 562949953421312&32768
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 16384 := 562949953421312&16384
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 5120 := 562949953421312&5120
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 5120 := 562949953421312&5120
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 5120 := 562949953421312&5120
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 5120 := 562949953421312&5120
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 4096 := 562949953421312&4096
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 4096 := 562949953421312&4096
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 32 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 562949953421312&50
band: (band[56] (if (= #114 55) 36028797018963968 (if #508 18014398509481984 #616)) (lshr[56] (bv2int %0) (+ 56 #619))) 32 := 562949953421312&50
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 562949953421312&512
(smt.stats    7    860  17904  13901  3160/2887/397    1073/147    16  112   53.63)
(sat.ddfw       1      1   37.9507    110001       539          4            1       12)
(smt.stats    8    982  21829  17851  3202/2929/401    1315/184    17  113   53.73)
(smt.stats    9   1116  28066  26297  3206/2933/401    1500/237    18  118   53.92)
(smt.stats   10   1217  30241  30263  3206/2933/401    1602/237    18  118   54.02)
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4503599627370496&53
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72057594037927989 := 72057594037928064 >>l 11
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4503599627370496&50
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72057594037927986 := 9223372036854775680 >>l 11
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4503599627370496&1
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72057594037927937 := 9223372036854775680 >>l 11
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4503599627370496&50
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 0 := 815 >>l 4
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4503599627370496&50
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 0 := 800 >>l 4
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4503599627370496&3
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 51 := 50 >>l 4
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4503599627370496&3
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 51 := 50 >>l 4
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 4 := 4503599627370496&4
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 4 := 4503599627370496&4
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 64 := 4503599627370496&64
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 64 := 4503599627370496&64
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 128 := 4503599627370496&128
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 128 := 4503599627370496&128
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 128 := 4503599627370496&128
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 128 := 4503599627370496&128
(smt.stats   11   1328  33521  37944  3239/2934/402    1771/304    19  121   54.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  35376  42050  3423/3147/417    2031/344    21  128   54.60)
(sat.ddfw       1      1   32.8725    160000       784          5            1       17)
(smt.stats   13   1584  40900  51447  3439/3154/418    2238/344    21  128   54.60)
(smt.stats   14   1731  45905  62721  3479/3168/418    2450/420    22  130   54.74)
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&4398314962948
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72061992352890884 := 72061992352907264 >>l 30
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&4398314962948
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72061992352890884 := 72061992352907264 >>l 30
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&4398314979199
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72061992352907135 := 72061992352907136 >>l 30
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&4398314962947
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72061992352890883 := 72061992352907136 >>l 30
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&4398314962947
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72061992352890883 := 72061992352907136 >>l 30
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&4398314962947
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72061992352890883 := 72061992352907136 >>l 30
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&51
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 50 := 427819008 >>l 23
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&51
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 50 := 427819008 >>l 23
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&51
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 50 := 427819008 >>l 23
(smt.stats   15   1832  49728  70219  3527/3216/419    2626/442    23  131   54.83)
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&34
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 2228225 := 285212672 >>l 23
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&33
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 2228192 := 285208575 >>l 23
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 8589934592&33
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 2228160 := 276824064 >>l 23
ramon: poll                 wall=2.000s usage=1.910s mem=57264KiB load=1.00 rootload=1.00
(smt.stats   16   1943  51039  73523  3674/3257/429    2893/449    23  131   55.04)
(sat.ddfw       1      1   28.8189    220001      1078          6            1       23)
(smt.stats   17   2065  56401  81070  3710/3429/429    3036/533    24  133   55.04)
(smt.stats   18   2199  61078  94582  3866/3434/429    3374/537    24  133   55.14)
(smt.stats   19   2346  65667 110465  3895/3598/429    3543/537    24  133   55.35)
(sat.ddfw       1      1   25.5474    290001      1421          7            1       30)
(smt.stats   20   2507  69743 124405  3908/3628/431    3819/679    25  138   55.45)
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32769 := 131072&72057594037927935
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32769 := 131072&72057594037927935
ramon: poll                 wall=3.000s usage=2.915s mem=57844KiB load=1.01 rootload=1.00
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32770 := 131072&72057594037927935
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32770 := 131072&72057594037927935
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32768 := 131072&72057594037927935
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32768 := 131072&72057594037927935
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32768 := 131072&72057594037927935
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 32768 := 131072&72057594037927935
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 65536 := 131072&72057594037927935
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 131072 := 131072&72057594037927935
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 72057594037927935 := 72624976668149632 >>l 46
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&567382630219908
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 567382630219908 := 72624976668149632 >>l 46
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&567382630219908
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 567382630219908 := 72624976668148224 >>l 46
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&131071
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 131070 := 72057456601071616 >>l 39
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&131071
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 131070 := 72057456601071616 >>l 39
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&131071
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 131070 := 72057456601071616 >>l 39
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&131071
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 131070 := 72057456601071616 >>l 39
(smt.stats   21   2609  72798 134889  3981/3632/432    4216/734    26  140   55.54)
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&131072
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&131072
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 131072&262144
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #630 #634) 64)) 262144 := 9223372036854775680 >>l 46
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 8192 := 131072&131071
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 131072&131071
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 131072&131071
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 131072&131071
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 131072&131071
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 131072&131071
band: (band[56] (if (= #349 63) 9223372036854775808 (if #486 4611686018427387904 #483)) (lshr[64] (* 128 #332) (mod #637 64))) 256 := 131072&131071
(smt.stats   22   2720  75203 144527  4091/3755/466    4445/948    27  146   55.54)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   23   2842  78694 150777  4162/3872/474    4590/1014    28  155   55.64)
(smt.stats   24   2976  80686 159980  4187/3901/477    4823/1090    30  164   55.86)
(smt.stats   25   3123  85266 175416  4325/4005/479    5182/1090    30  164   56.05)
(sat.ddfw       1      1   22.9226    370001      1813          8            1       38)
(smt.stats   26   3285  89923 194402  4327/4007/482    5556/1304    32  176   56.05)
(smt.stats   27   3462  95464 202051  4359/4013/482    5749/1305    32  176   56.33)
ramon: poll                 wall=4.004s usage=3.919s mem=58816KiB load=1.00 rootload=1.00
(smt.stats   28   3563  99076 213105  4402/4071/486    5939/1321    33  182   56.52)
(sat.ddfw       1      1   20.6422    460001      2254          9            1       47)
(smt.stats   29   3674 103123 223816  4454/4087/486    6103/1351    34  204   56.62)
ramon: poll                 wall=5.000s usage=4.830s mem=58860KiB load=0.91 rootload=0.91
(smt.stats   30   3796 105200 231847  4546/4148/487    6263/1406    35  207   56.62)
(sat.ddfw       1      1   18.6116    560001      2745         10            1       57)
(smt.stats   31   3930 110915 248362  4606/4284/488    6440/1443    36  215   56.71)
ramon: poll                 wall=6.000s usage=5.778s mem=59268KiB load=0.95 rootload=0.95
(sat.ddfw       1      1   16.9596    670001      3284         11            1       68)
(smt.stats   32   4077 115989 264135  4700/4291/492    6820/1450    36  215   56.91)
ramon: poll                 wall=7.000s usage=6.725s mem=59540KiB load=0.95 rootload=0.94
(smt.stats   33   4238 123761 282533  4757/4433/494    7038/1632    37  240   57.00)
(smt.stats   34   4415 129359 301951  4850/4444/495    7260/1685    38  240   57.00)
(sat.ddfw       1      1   15.6454    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.702s mem=59628KiB load=0.98 rootload=0.98
(smt.stats   35   4609 133469 315918  4859/4537/495    7500/1693    39  251   57.00)
(smt.stats   36   4710 137851 333143  4862/4540/496    7725/1714    40  262   57.10)
(smt.stats   37   4821 143140 357531  4868/4543/496    7899/1714    40  262   57.36)
(smt.stats   38   4943 146087 374139  4877/4554/497    8040/1807    41  273   57.36)
(smt.delete-inactive-clauses  :num-deleted-clauses 534)
(smt.stats   39   5077 150170 389361  4935/4560/497    7664/1807    41  273   57.46)
(sat.ddfw       1      1   14.5822    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.695s mem=60100KiB load=0.99 rootload=0.99
(smt.stats   40   5224 155088 401725  4984/4661/498    7831/1821    42  273   57.70)
ramon: poll                 wall=10.008s usage=9.710s mem=59948KiB load=1.01 rootload=1.01
(smt.stats   41   5385 162895 426700  5012/4668/498    8149/1824    42  273   57.79)
(sat.ddfw       1      1   13.6412   1060001      5196         14            1      108)
(smt.stats   42   5562 167630 447609  5030/4708/500    8412/1940    44  302   57.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   43   5756 177114 478326  5034/4712/500    8692/1940    44  302   57.89)
ramon: poll                 wall=11.000s usage=10.732s mem=60160KiB load=1.03 rootload=1.03
(smt.stats   44   5969 182851 502711  5090/4723/500    9021/1944    44  302   57.89)
(smt.stats   45   6070 186764 509685  5091/4769/501    9104/2020    45  319   57.89)
(sat.ddfw       1      1   12.9243   1210001      5931         15            1      123)
(smt.stats   46   6181 191871 520773  5131/4779/501    9208/2026    45  319   57.89)
(smt.stats   47   6303 194502 528752  5197/4856/501    9334/2027    45  319   57.89)
ramon: poll                 wall=12.000s usage=11.729s mem=60276KiB load=1.00 rootload=1.00
(smt.stats   48   6437 197879 534386  5319/4997/503    9506/2044    46  323   57.99)
ramon: poll                 wall=13.000s usage=12.728s mem=60380KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.1858   1370001      6715         16            1      139)
(smt.stats   49   6584 204029 548463  5401/5004/503    9717/2049    46  323   58.08)
(smt.stats   50   6745 212269 563581  5576/5113/503    9905/2053    46  323   58.48)
ramon: poll                 wall=14.000s usage=13.698s mem=60500KiB load=0.97 rootload=0.97
(smt.stats   51   6922 219121 580738  5593/5263/503   10180/2054    46  323   58.58)
(smt.stats   52   7116 223226 600676  5671/5277/503   10402/2058    46  323   58.58)
(sat.ddfw       1      1   11.4447   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=14.722s mem=60836KiB load=1.02 rootload=1.02
(smt.stats   53   7329 227793 627383  5964/5504/505   10640/2204    47  329   58.67)
ramon: poll                 wall=16.000s usage=15.726s mem=60920KiB load=1.00 rootload=1.00
(smt.stats   54   7563 233589 649479  6181/5719/505   10946/2209    47  329   58.67)
(smt.stats   55   7664 237255 657664  6265/5894/505   11064/2212    47  329   58.77)
(sat.ddfw       1      1   10.8709   1720001      8431         18            1      174)
(smt.stats   56   7775 240140 666605  6294/5953/505   11184/2212    47  329   58.77)
ramon: poll                 wall=17.000s usage=16.723s mem=61092KiB load=1.00 rootload=1.00
(smt.stats   57   7897 243119 675008  6458/6009/506   11326/2270    48  329   58.77)
(smt.stats   58   8031 245475 685242  6532/6165/506   11496/2271    48  329   58.86)
ramon: poll                 wall=18.000s usage=17.723s mem=61196KiB load=1.00 rootload=1.00
(smt.stats   59   8178 248483 692786  6694/6228/506   11661/2272    48  329   58.86)
(sat.ddfw       1      1   10.3362   1910001      9362         19            1      193)
(smt.stats   60   8339 251302 713487  6763/6380/506   11847/2272    48  329   58.96)
(smt.stats   61   8516 254085 733413  6776/6454/510   12109/2306    49  332   58.96)
ramon: poll                 wall=19.000s usage=18.721s mem=61536KiB load=1.00 rootload=1.00
(smt.stats   62   8710 261944 750279  6852/6469/510   12388/2307    49  332   59.15)
ramon: poll                 wall=20.000s usage=19.718s mem=61372KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 23:18:17 2024
ramon: root.execname        z3
ramon: root.utime           19.720s
ramon: root.stime           0.020s
ramon: group.total          19.752s
ramon: group.utime          19.724s
ramon: group.stime          0.028s
ramon: group.mempeak        61628KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.030s
ramon: loadavg              0.99
