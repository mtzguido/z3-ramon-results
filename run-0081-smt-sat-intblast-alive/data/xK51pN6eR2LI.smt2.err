ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:22:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28305 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1358
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xK51pN6eR2LI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             572483
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   253/252     0/0  61       0    18.57   0.00)
(sat.stats    189   1448    0   253/252   189/95  61       0    18.99   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 469 :time 0.00)
(sat.stats    189   1448    0   253/252   189/95  61       0    18.99   0.01)
(sat.stats    189   1448    0   253/252   189/95  61       0    18.99   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 624418.99 :time 0.00)
(sat.stats    189   1448    0   253/252   189/95  61       0    18.99   0.01)
(sat.stats    192   1457    1   253/252   192/98  61       0    18.99   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    195   1470    2   253/252   195/101  61       0    18.99   0.01)
(sat.stats    264   1968    3   253/252   264/150  61       0    19.09   0.01)
(sat.stats    272   2075    4   253/252   272/156  61       0    19.09   0.01)
(sat.stats    275   2122    5   253/252   275/158  61       0    19.18   0.01)
(sat.stats    278   2169    6   253/252   278/159  61       0    19.18   0.01)
(sat.stats    281   2325    7   253/252   281/159  61       0    19.18   0.01)
(sat.stats    284   2407    8   253/252   284/161  61       0    19.18   0.01)
(sat.stats    287   2456    9   253/252   287/163  61       0    19.18   0.01)
(sat.stats    290   2498   10   253/252   290/165  61       0    19.18   0.02)
(sat.stats    295   2512   11   253/252   295/169  61       0    19.18   0.02)
(sat.stats    298   2528   12   253/252   298/172  61       0    19.18   0.02)
(sat.stats    306   2564   13   253/252   306/177  61       0    19.18   0.02)
(sat.stats    315   2610   16   253/252   315/181  61       0    19.18   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3198 :time 0.00)
(sat.stats    497   8171   39   274/272   496/257  65       0    19.76   0.10)
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 57 := 57 << 57
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
shl: (shl[64] (bv2int %0) (mod (+ #52 #378) 64)) 57 := 57 << 57
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 72057594037927935 := 72057594037927935&144115188075855872
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 3586 :time 0.00)
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 72057594037927934 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 86540 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 229112 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 468496 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 1060960 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 1301888 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 5351232 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 3092736 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 3211776 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 9109504 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 1088709632 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 131072 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 2943090688 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 10165420032 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 21459107840 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 65154318336 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 2097152 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 4194304 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 519019954176 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 67108864 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 16777216 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 33554432 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 8151311056896 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 268435456 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 29649232986112 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 42567420870656 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 2147483648 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 82008105549824 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 375895537745920 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 17179869184 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 68719476736 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 34359738368 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 1180050854510592 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 10563557963857920 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 2582752813645824 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 71050441386885120 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 2199023255552 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 30346520926617600 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 8796093022208 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 58898638876704768 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 35184372088832 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 70790956642729984 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 3659174697238528 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 34902897112121344 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 562949953421312 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 20266198323167232 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 54043195528445952 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 4503599627370496 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 9007199254740992 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 36028797018963968 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 14336 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 36864 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 57344 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 16384 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 32768 := 72057594037927935&144115188075855872
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 13889 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 236 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 2 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 55496 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 44592 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 579008 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 32 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 190720 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 128 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 11331584 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 512 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 1024 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 123838464 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 4096 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 246136832 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 106364928 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 32768 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 536346624 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 131072 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 262144 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 7514095616 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 1048576 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 54601449472 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 4194304 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 56270782464 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 16777216 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 922411335680 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 963549069312 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 5107252985856 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 268435456 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 20575040831488 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 1073741824 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 3831110828032 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 4294967296 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 8589934592 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 1031341906853888 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 309237645312 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 1236950581248 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 68719476736 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 549755813888 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 274877906944 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 1099511627776 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 49482421296431104 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 28209070322221056 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 54940397016711168 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 4925812092436480 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 105553116266496 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 70368744177664 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 13510798882111488 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 281474976710656 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 2814749767106560 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 1125899906842624 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 2251799813685248 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 9007199254740992 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 18014398509481984 := 144115188075855872&72057594037927935
band: (band[60] (if (= #600 59) 0 (if #602 1 #770)) (shl[60] (bv2int %0) (mod #52 60))) 0 := 72057594037927935&144115188075855872
band: (band[60] (shl[64] (bv2int %0) (mod #379 64)) (if (or #791 #792) 0 (if #793 1 #917))) 36028797018963968 := 144115188075855872&72057594037927935
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5116 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats    893  29612   41 28226/28222  1514/982 754       0    29.62   0.84)
ramon: poll                 wall=1.000s usage=0.952s mem=31472KiB load=0.95 rootload=0.94
ramon: poll                 wall=2.000s usage=1.950s mem=36828KiB load=1.00 rootload=0.99
(sat.stats   1180  47301   75 75753/75749  2345/1547 754       0    37.41   2.27)
ramon: poll                 wall=3.000s usage=2.948s mem=39760KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.947s mem=40808KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.947s mem=41572KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 7670 :time 0.00)
ramon: poll                 wall=6.000s usage=5.947s mem=42588KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.947s mem=42756KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.947s mem=43672KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.947s mem=45336KiB load=1.00 rootload=1.00
(sat.stats   1598  67922  193 129570/129566  3340/2140 756       0    46.08   9.35)
ramon: poll                 wall=10.000s usage=9.946s mem=46800KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.946s mem=47820KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.946s mem=48980KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.946s mem=49548KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.945s mem=50480KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.945s mem=61756KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.945s mem=65640KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.945s mem=71664KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.945s mem=76492KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.001s usage=18.946s mem=80028KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.944s mem=82284KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:22:21 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.999s
ramon: group.utime          19.967s
ramon: group.stime          0.032s
ramon: group.mempeak        82796KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.055s
ramon: loadavg              1.00
