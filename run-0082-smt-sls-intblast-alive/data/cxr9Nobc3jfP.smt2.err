ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:49:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27760 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cxr9Nobc3jfP.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             870515
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   81.9672     10000        49          0            1        2)
(sat.ddfw       1      1   38.9144     20001        98          1            1        3)
(smt.stats    0    101   4048    393  1115/1000/99      92/13     5   20   51.86)
(sat.ddfw       1      1     41.58     40001       196          2            1        5)
(smt.stats    1    202   7377   1199  1616/1381/100     199/20     6   20   52.06)
(smt.stats    2    313  11411   2486  1698/1506/108     314/27     7   21   52.25)
(sat.ddfw       1      1   38.4123     70001       343          3            1        8)
(smt.stats    3    414  13830   3455  2327/2122/113     406/31     9   28   52.35)
ramon: poll                 wall=1.000s usage=0.877s mem=54540KiB load=0.88 rootload=0.86
(smt.stats    4    525  16378   6535  2352/2139/116     506/38    13   36   52.45)
(smt.stats    5    647  17667  10060  2433/2195/116     641/40    13   36   52.55)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  22455  15602  2449/2227/118     750/47    14   38   52.65)
(sat.ddfw       1      1   33.8409    110001       539          4            1       12)
(smt.stats    7    859  25833  19482  2465/2239/120     861/54    16   42   52.65)
(smt.stats    8    981  27379  23032  2499/2278/124     982/57    17   43   52.75)
(smt.stats    9   1115  28752  25771  2597/2292/127    1110/77    18   50   52.96)
(sat.ddfw       1      1   29.6027    160000       784          5            1       17)
(smt.stats   10   1216  29402  28022  2699/2479/129    1212/86    19   52   52.96)
(smt.stats   11   1327  30588  31532  2779/2530/130    1325/87    20   52   52.96)
ramon: poll                 wall=2.002s usage=1.878s mem=55308KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32202  35740  2791/2573/138    1450/102    21   68   53.08)
(smt.stats   13   1583  34926  41800  2796/2574/138    1593/102    21   68   53.08)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 3 := 615&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 576460752303424103 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 3 := 615&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 18446743798831645287 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 612&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 1125899906843236 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 3 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906943 := 274877906943 << 3
(smt.stats   14   1730  41438  51241  2824/2591/140    1739/128    23   71   53.17)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 1 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906937 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906942 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 3 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 3 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 3 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 1 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 1 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 1 := 274877906936&3
(smt.stats   15   1831  43719  54898  2920/2683/183    1817/135    24   73   53.27)
(sat.ddfw       1      1   26.1899    220001      1078          6            1       23)
(smt.stats   16   1942  45192  56598  2959/2723/189    1910/134    25   83   53.36)
(smt.stats   17   2064  48960  59194  2966/2738/189    2043/134    25   83   53.36)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 5&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 4&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 1924145348608 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 1924145348608 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 4&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 2199023255552 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 3992&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 1924145352600 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 7 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 7 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 1 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 4 := 7968&7
(smt.stats   18   2198  51023  65139  3047/2810/230    2062/151    27  222   53.66)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 128 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 128 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 128 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 144 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 144 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 128 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 144 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 912 := 8080&1023
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8080 := 505 << 11
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7856 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7936 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7952 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7856 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7856 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7856 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7896 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7896 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7896 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7896 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7888 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7888 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7888 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7952 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
(smt.stats   19   2345  54051  71395  3156/2876/297    2235/165    28  226   53.96)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8464 := 8464&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8464 := 529 << 35
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8464 := 8480&34359738367
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8336 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8336 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8240 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8240 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8368 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8240 := 8496&68719476735
(smt.stats   20   2506  57902  78423  3225/2981/342    2540/228    30  250   54.53)
ramon: poll                 wall=3.002s usage=2.876s mem=56844KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   23.3879    290001      1421          7            1       30)
(smt.stats   21   2607  59797  79941  3353/3007/342    2679/237    30  250   54.72)
(sat.ddfw       1      1   21.0804    370001      1813          8            1       38)
ramon: poll                 wall=4.002s usage=3.876s mem=57100KiB load=1.00 rootload=0.99
(smt.stats   22   2718  61816  83342  3519/3265/343    2865/268    31  255   54.86)
(smt.stats   23   2840  65674  91791  3574/3334/346    3122/378    32  262   54.96)
(smt.stats   24   2974  68649  99449  3664/3413/350    3361/400    33  263   54.96)
(sat.ddfw       1      1   19.1571    460001      2254          9            1       47)
ramon: poll                 wall=5.002s usage=4.972s mem=57204KiB load=1.10 rootload=1.10
(smt.stats   25   3121  73438 113604  3738/3444/350    3612/447    34  266   55.05)
(smt.stats   26   3282  77744 123922  3859/3588/351    3913/509    35  272   55.15)
(sat.ddfw       1      1   17.1733    560001      2745         10            1       57)
ramon: poll                 wall=6.002s usage=5.906s mem=57404KiB load=0.93 rootload=0.93
(smt.stats   27   3459  82166 133064  3932/3613/351    4259/513    35  272   55.24)
(smt.stats   28   3561  85271 139353  3986/3727/354    4457/576    36  274   55.39)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 9070970929114 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 9070970929114 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8796093022170 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8796093022170 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 4672924418010 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&1
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906941 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&1
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906941 := 274877906942 << 2
(smt.stats   29   3672  87168 146683  4078/3758/355    4675/588    36  274   55.39)
(smt.stats   30   3794  88744 149866  4328/3837/366    5098/636    37  287   55.49)
(smt.stats   31   3928  92254 165638  4398/4127/368    5469/637    37  287   55.82)
(sat.ddfw       1      1   15.8822    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.902s mem=57984KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  96011 178280  4433/4153/376    5984/765    38  292   55.92)
(smt.stats   33   4236 101247 188558  4482/4165/377    6283/986    39  331   56.01)
ramon: poll                 wall=8.000s usage=7.900s mem=58452KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    14.762    790001      3872         12            1       80)
(smt.stats   34   4413 107763 205238  4706/4312/377    6799/1026    40  334   56.20)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 33285998082&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8279623206402 := 274877906941 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 33285998594&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8279623206914 := 274877906941 << 1
(smt.stats   35   4607 109723 208813  4983/4436/378    7257/1101    41  339   56.39)
(smt.stats   36   4708 110914 218485  5334/4747/383    7558/1101    41  339   56.49)
(smt.stats   37   4819 111749 223895  5686/5106/383    7876/1102    41  339   56.58)
ramon: poll                 wall=9.000s usage=8.900s mem=59040KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4941 113514 237038  5839/5433/383    8463/1157    42  340   56.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 184)
(smt.stats   39   5075 117942 248074  5861/5582/383    8973/1158    42  340   56.87)
(sat.ddfw       1      1    13.777    920001      4509         13            1       93)
(smt.stats   40   5222 125284 262603  6012/5588/383    9540/1161    42  340   56.87)
ramon: poll                 wall=10.000s usage=9.898s mem=59700KiB load=1.00 rootload=0.99
(smt.stats   41   5383 131886 285893  6237/5746/384   10612/1346    43  348   57.05)
(smt.stats   42   5560 136988 305922  6325/6005/385   11296/1714    44  356   57.26)
(sat.ddfw       1      1   12.9199   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.900s mem=59772KiB load=1.00 rootload=1.00
(smt.stats   43   5754 144700 336354  6457/6057/385   12284/1724    44  356   57.70)
ramon: poll                 wall=12.000s usage=11.897s mem=59916KiB load=1.00 rootload=1.00
(smt.stats   44   5967 149401 360414  6481/6203/387   13068/2096    45  363   57.80)
(smt.stats   45   6068 151930 370688  6498/6220/388   13524/2099    45  363   57.80)
(sat.ddfw       1      1   12.1556   1210001      5931         15            1      123)
(smt.stats   46   6179 156609 403645  6549/6256/389   13852/2219    46  390   57.99)
(smt.stats   47   6301 161176 429190  6575/6280/389   14494/2219    46  390   57.99)
ramon: poll                 wall=13.002s usage=12.895s mem=60460KiB load=1.00 rootload=1.00
(smt.stats   48   6435 164765 444892  6585/6290/394   15117/2268    47  392   58.09)
(smt.stats   49   6582 167456 457382  6631/6310/396   16055/2269    47  392   58.18)
(sat.ddfw       1      1   11.4844   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=13.896s mem=60624KiB load=1.00 rootload=1.00
(smt.stats   50   6743 174504 492764  6711/6363/397   16805/2271    47  392   58.37)
ramon: poll                 wall=15.002s usage=14.892s mem=60820KiB load=0.99 rootload=0.99
(smt.stats   51   6920 178113 514796  6844/6549/399   17475/2626    48  472   58.47)
(sat.ddfw       1      1   10.8612   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=15.782s mem=61264KiB load=0.89 rootload=0.89
(smt.stats   52   7114 184052 546029  6995/6591/400   18673/2713    49  485   58.76)
ramon: poll                 wall=17.000s usage=16.689s mem=61152KiB load=0.91 rootload=0.91
(sat.ddfw       1      1   10.2395   1720001      8431         18            1      174)
(smt.stats   53   7327 191081 580926  7245/6716/400   19567/2720    49  485   58.95)
ramon: poll                 wall=18.000s usage=17.660s mem=61508KiB load=0.97 rootload=0.97
(smt.stats   54   7561 197825 617833  7347/6949/401   20714/2875    50  495   59.04)
ramon: poll                 wall=19.000s usage=18.661s mem=61460KiB load=1.00 rootload=1.00
(smt.stats   55   7662 200339 628480  7394/7049/402   20950/2876    50  495   59.14)
(sat.ddfw       1      1   9.74509   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=19.662s mem=61780KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:49:42 2024
ramon: root.execname        z3
ramon: root.utime           19.680s
ramon: root.stime           0.020s
ramon: group.total          19.712s
ramon: group.utime          19.688s
ramon: group.stime          0.024s
ramon: group.mempeak        61792KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              0.98
