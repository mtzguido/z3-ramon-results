ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:45:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27869 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aaTJZu3seDxI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             857596
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 2305843009213693950 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1 := 2305843009213693950 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606847040 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606846978 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606846978 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606846978 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 576460752303423490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606846980 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 576460752303423490 << 59
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   102.041     10000        49          0            1        2)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1 := 1152921504606846978 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&576460752303423488
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 576460752303423487 := 576460752303423489 << 59
(smt.stats    0    101    860    651  1280/1143/117      80/8     9   21   51.85)
(smt.stats    1    202   2183   1702  1409/1230/119     179/8    11   23   51.94)
(sat.ddfw       1      1   50.5101     20001        98          1            1        3)
(smt.stats    2    313   3923   3284  1449/1295/120     290/16    12   26   52.04)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387905 := 1152921504606847570 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387905 := 1152921504606847570 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387905 := 1152921504606847570 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387903 := 16 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1008806316530991104
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 62 << 56
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&144115188075855872
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 50 << 56
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1008806316530991104
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 62 << 56
(sat.ddfw       1      1   51.5464     40001       196          2            1        5)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&144115188075855873
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3602879701896396801 := 100 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&144115188075855873
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3602879701896396801 := 100 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387903 := 80 << 54
(smt.stats    3    414   5058   4305  1590/1427/135     382/22    14   36   52.14)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606847014 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606847014 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606847010 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606846998 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606846998 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 1 := 1&230
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&230
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541158 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 1 := 1&230
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&230
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541158 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 1 := 1&230
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&230
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541158 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846975
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846975
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846974
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387902 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&231
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541160 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&231
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541160 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846975
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846974
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387902 := 1152921504606847490 << 59
(smt.stats    4    525   6426   5330  1697/1508/147     480/45    16   40   52.33)
(smt.stats    5    647   7925   7297  1798/1610/163     598/57    18   44   52.42)
(sat.ddfw       1      1   44.7761     70001       343          3            1        8)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   9385   9723  1816/1657/170     692/76    19   50   52.52)
(smt.stats    7    859  11089  14367  1899/1728/171     661/82    20  200   52.73)
ramon: poll                 wall=1.002s usage=0.940s mem=54864KiB load=0.94 rootload=0.93
(smt.stats    8    981  12835  16671  2004/1764/177     799/107    21  207   52.83)
(sat.ddfw       1      1   38.2044    110001       539          4            1       12)
(smt.stats    9   1115  15564  21848  2053/1859/184     958/114    22  211   52.92)
(smt.stats   10   1216  19731  28886  2065/1883/184    1052/141    23  217   52.92)
(smt.stats   11   1327  23300  35706  2080/1893/184    1171/144    23  217   52.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  26350  41054  2102/1918/191    1282/152    25  220   53.02)
(smt.stats   13   1583  30492  46744  2104/1920/191    1417/152    25  220   53.11)
(sat.ddfw       1      1   32.8941    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.936s mem=55384KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   28.8189    220001      1078          6            1       23)
(smt.stats   14   1730  31288  47815  2210/1921/191    1569/184    26  223   53.40)
(sat.ddfw       1      1   25.5195    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.937s mem=55732KiB load=1.00 rootload=1.00
(smt.stats   15   1831  32142  49320  2367/2142/191    1685/186    26  223   53.40)
(sat.ddfw       1      1   22.9029    370001      1813          8            1       38)
(smt.stats   16   1942  33136  51136  2473/2278/191    1812/186    26  223   53.40)
(smt.stats   17   2064  35124  54367  2517/2305/192    1973/226    27  224   53.49)
(smt.stats   18   2198  36955  61573  2563/2378/196    2130/286    28  225   53.49)
(smt.stats   19   2345  42174  74788  2573/2388/196    2307/301    29  233   53.60)
ramon: poll                 wall=4.000s usage=3.939s mem=56112KiB load=1.00 rootload=1.01
(smt.stats   20   2506  48930  90183  2578/2393/196    2481/301    29  233   53.81)
(smt.stats   21   2607  54377 101418  2578/2393/196    2582/301    29  233   53.81)
(smt.stats   22   2718  60234 113309  2578/2393/196    2693/301    29  233   53.81)
(smt.stats   23   2840  66421 125941  2578/2393/196    2815/301    29  233   53.92)
(sat.ddfw       1      1   20.6944    460001      2254          9            1       47)
(smt.stats   24   2974  71463 136509  2590/2398/196    2952/302    29  233   53.92)
(smt.stats   25   3121  72846 140219  2767/2410/196    3121/312    29  233   54.02)
ramon: poll                 wall=5.000s usage=4.939s mem=56080KiB load=1.00 rootload=1.00
(smt.stats   26   3282  74781 146006  2919/2616/196    3316/325    29  233   54.02)
(sat.ddfw       1      1   18.8644    560001      2745         10            1       57)
(smt.stats   27   3459  77525 154629  2992/2752/196    3504/328    29  233   54.02)
(smt.stats   28   3560  79031 157120  3006/2821/196    3616/328    29  233   54.02)
ramon: poll                 wall=6.000s usage=5.875s mem=56248KiB load=0.94 rootload=0.93
(smt.stats   29   3671  81006 161871  3147/2922/207    3574/461    30  407   54.21)
(sat.ddfw       1      1    17.342    670001      3284         11            1       68)
(smt.stats   30   3793  83600 173399  3292/2998/207    3727/464    30  407   54.21)
(smt.stats   31   3927  87786 190148  3311/3127/208    3883/537    31  408   54.21)
ramon: poll                 wall=7.000s usage=6.873s mem=56460KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  89401 194596  3415/3149/224    4028/541    31  408   54.31)
(smt.stats   33   4235  92870 198278  3423/3239/224    4189/541    31  408   54.67)
(smt.stats   34   4412  99330 232473  3422/3242/224    4057/554    32  722   54.67)
(smt.stats   35   4613 104656 249122  3436/3256/224    4260/554    32  722   54.67)
(sat.ddfw       1      1   16.0256    790001      3872         12            1       80)
(smt.stats   36   4715 105925 255182  3525/3266/224    4383/556    32  722   54.67)
(smt.stats   37   4826 108210 259198  3539/3352/235    4269/595    33  955   54.76)
(smt.stats   38   4948 110356 262810  3549/3365/235    4400/598    33  955   54.76)
ramon: poll                 wall=8.000s usage=7.871s mem=56844KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 45)
(smt.stats   39   5082 113593 275072  3560/3382/235    4500/598    33  955   54.76)
(smt.stats   40   5229 118137 284466  3600/3422/238    4649/635    34  963   54.76)
(sat.ddfw       1      1   15.0098    920001      4509         13            1       93)
(smt.stats   41   5390 119920 290673  3817/3431/238    4829/648    34  963   54.76)
ramon: poll                 wall=9.000s usage=8.904s mem=56956KiB load=1.03 rootload=1.04
(smt.stats   42   5567 122993 299056  3964/3664/238    5015/653    34  963   54.86)
(smt.stats   43   5761 124915 304520  4218/3878/240    5255/712    35  966   54.95)
ramon: poll                 wall=10.000s usage=9.905s mem=57156KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.0056   1060001      5196         14            1      108)
(smt.stats   44   5974 126682 311641  4499/4140/240    5504/778    36  969   55.05)
(smt.stats   45   6075 128205 315746  4549/4327/240    5617/778    36  969   55.05)
(smt.stats   46   6186 129198 322157  4563/4380/240    5741/779    36  969   55.05)
ramon: poll                 wall=11.000s usage=10.905s mem=57272KiB load=1.00 rootload=1.00
(smt.stats   47   6309 130368 324978  4723/4545/241    5897/880    37  970   55.14)
(sat.ddfw       1      1   13.1257   1210001      5931         15            1      123)
(smt.stats   48   6443 131603 331292  4837/4550/241    6054/887    37  970   55.24)
(smt.stats   49   6590 133155 337477  4939/4684/241    6252/888    37  970   55.24)
ramon: poll                 wall=12.000s usage=11.904s mem=57488KiB load=1.00 rootload=1.00
(smt.stats   50   6751 135540 345064  5009/4835/249    6411/977    38  982   55.24)
(smt.stats   51   6928 138225 361229  5046/4839/249    6612/980    38  982   55.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7122 141633 374421  5058/4884/249    6829/980    38  982   55.58)
ramon: poll                 wall=13.000s usage=12.904s mem=57628KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.3628   1370001      6715         16            1      139)
(smt.stats   53   7335 144061 384525  5309/4895/249    7113/993    38  982   55.68)
(smt.stats   54   7569 146253 393237  5488/5146/249    7377/995    38  982   55.68)
ramon: poll                 wall=14.000s usage=13.904s mem=57744KiB load=1.00 rootload=1.00
(smt.stats   55   7670 147367 399662  5538/5323/249    7486/998    38  982   55.77)
(smt.stats   56   7781 148516 407582  5619/5396/249    7592/1000    38  982   55.77)
(sat.ddfw       1      1   11.6766   1540001      7549         17            1      156)
(smt.stats   57   7903 149350 411986  5736/5458/249    7739/1001    38  982   55.87)
ramon: poll                 wall=15.000s usage=14.904s mem=57872KiB load=1.00 rootload=1.00
(smt.stats   58   8037 150305 418632  5940/5657/249    7897/1002    38  982   55.96)
ramon: poll                 wall=16.000s usage=15.942s mem=58228KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   11.0524   1720001      8431         18            1      174)
(smt.stats   59   8184 151166 424806  6211/5767/249    8080/1004    38  982   55.96)
ramon: poll                 wall=17.002s usage=16.942s mem=58268KiB load=1.00 rootload=1.00
(smt.stats   60   8345 152685 432484  6400/6052/249    8276/1012    38  982   56.06)
(smt.stats   61   8522 155156 450595  6514/6237/249    8501/1013    38  982   56.16)
ramon: poll                 wall=18.000s usage=17.891s mem=58420KiB load=0.95 rootload=0.94
(smt.stats   62   8716 158451 465153  6603/6348/249    8738/1015    38  982   56.16)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 12682136550675316736 := 1729382256910279798 << 42
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 12682136550675316736 := 1729382256910279798 << 42
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 12682136550675316736 := 1729382256910279734 << 42
(sat.ddfw       1      1   10.4401   1910001      9362         19            1      193)
(smt.stats   63   8929 160582 480439  6730/6452/249    9016/1022    38  982   56.16)
(smt.stats   64   9163 162584 499324  6900/6589/254    9272/1474    39  983   56.25)
ramon: poll                 wall=19.000s usage=18.893s mem=58492KiB load=1.00 rootload=1.01
(smt.stats   65   9420 171955 543339  6907/6732/254    9552/1513    40  983   56.25)
(smt.stats   66   9521 172730 547306  6935/6760/255    9680/1566    41  984   56.25)
(smt.stats   67   9632 175523 566904  6939/6764/255    9790/1566    41  984   56.25)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1 := 2305843009213693892 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2 := 2305843009213693892 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927936
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 1152921504606846946 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927936
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 1152921504606846946 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927936
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 1152921504606846946 << 55
(smt.stats   68   9754 178268 580147  6978/6764/255    9938/1574    41  984   56.25)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927935
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17365880163140632575 := 2305843009213693892 << 53
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927935
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17365880163140632575 := 2305843009213693892 << 53
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927937
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17365880163140632577 := 2305843009213693892 << 53
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&612489549322387456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 132 := 1152921504606846946 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&612489549322387456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 1152921504606846946 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&612489549322387456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 1152921504606846946 << 54
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   69   9888 180755 600441  7019/6807/260   10092/1609    42  985   56.44)
ramon: poll                 wall=20.000s usage=19.853s mem=59112KiB load=0.96 rootload=0.96
ramon: end                  Fri Nov  1 22:45:46 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.010s
ramon: group.total          19.899s
ramon: group.utime          19.887s
ramon: group.stime          0.012s
ramon: group.mempeak        59460KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.048s
ramon: loadavg              0.99
