ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:49:43 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29114 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9NPR5WgCx2de.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             665993
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    109.89     10000        49          0            1        2)
(smt.stats    0    101   2935    724  1252/1116/100      98/16     6   16   51.98)
(sat.ddfw       1      1   54.0595     20001        98          1            1        3)
(smt.stats    1    202   3640   1150  1965/1675/101     222/19     7   18   52.18)
(sat.ddfw       1      1   54.3478     40001       196          2            1        5)
(smt.stats    2    313   3924   1504  2031/1809/101     345/22     7   18   52.28)
(smt.stats    3    414   5137   2611  2241/2067/106     472/41     8   20   52.28)
(sat.ddfw       1      1   47.0219     70001       343          3            1        8)
(smt.stats    4    525   6362   4364  2302/2091/107     568/55     9   27   52.28)
(smt.stats    5    647   7620   5722  2517/2136/107     724/79     9   27   52.38)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748   9483   8730  2746/2569/110     855/134    11   27   52.38)
ramon: poll                 wall=1.000s usage=0.933s mem=54580KiB load=0.93 rootload=0.92
(smt.stats    7    859  11709  11209  2851/2605/110     974/142    11   27   52.47)
(smt.stats    8    981  13706  14098  3033/2730/110    1089/178    12   30   52.57)
(sat.ddfw       1      1    39.604    110001       539          4            1       12)
(smt.stats    9   1115  15706  18841  3225/2906/110    1225/186    12   30   52.67)
(smt.stats   10   1216  18564  23012  3262/3030/110    1330/186    12   30   52.67)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 2 := 2 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 2 := 2 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 2 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 0 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 2 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 0 := 1 << 1
(smt.stats   11   1327  21959  25644  3462/3207/110    1468/186    12   30   52.86)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 18014398509481986 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 0 := 9007199254740993 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  24248  28543  3542/3251/139    1590/236    13   38   52.86)
(smt.stats   13   1583  25300  31357  3597/3325/139    1728/240    14   42   52.96)
(smt.stats   14   1730  28424  36860  3607/3373/139    1879/240    14   42   53.05)
(sat.ddfw       1      1    34.129    160000       784          5            1       17)
(smt.stats   15   1831  29954  40093  3662/3390/139    1993/243    14   42   53.16)
(smt.stats   16   1942  31980  44604  3813/3560/141    2101/256    15   44   53.16)
(smt.stats   17   2064  33202  47923  3829/3568/149    2205/265    17   60   53.25)
(smt.stats   18   2198  36185  51447  3851/3591/149    2338/266    17   60   53.25)
(smt.stats   19   2345  38276  58887  3878/3610/151    2456/268    18   90   53.43)
(smt.stats   20   2506  41100  65768  3884/3629/152    2612/270    20   97   53.43)
(smt.stats   21   2607  42070  69938  3886/3631/152    2711/270    20   97   53.53)
(smt.stats   22   2718  45145  73302  3890/3635/152    2830/270    20   97   53.53)
ramon: poll                 wall=2.009s usage=1.944s mem=55684KiB load=1.00 rootload=1.00
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 0 := 0 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&2
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 1 := 0 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&2
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 1 := 0 << 2
(smt.stats   23   2840  47899  77917  3925/3668/163    2951/289    21   99   53.53)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 9007199254740994&2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 9007199254740994&2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 9007199254740994&2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 9007199254740996&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 9007199254740996 := 13510798882111488 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 13510798882111486&2
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 13510798882111484&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 13510798882111484 := 13510798882111488 << 2
(smt.stats   24   2974  49946  81481  3956/3686/163    3094/290    21   99   53.88)
(sat.ddfw       1      1   29.8364    220001      1078          6            1       23)
(smt.stats   25   3121  53343  88764  3961/3699/168    3310/296    22  100   53.88)
(smt.stats   26   3282  57857  97176  4003/3731/171    3493/308    23  100   53.88)
(smt.stats   27   3459  61953 107029  4029/3751/175    3677/317    25  110   54.13)
(smt.stats   28   3560  64688 112122  4038/3758/182    3781/317    25  110   54.13)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 4&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 4&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 4 := 4 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 0 := 0 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 0&8388608
shl: (shl[54] (bv2int %0) (mod (bv2int %1) 54)) 8388609 := 0 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1 := 1&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 1 := 2 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 1 := 2 << 24
(smt.stats   29   3671  67462 116934  4058/3762/182    3886/317    26  121   54.23)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 9 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 16 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 32 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 16 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 64 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 128 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 512 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1024 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2048 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4096 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8192 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 16384 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 32768 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 65536 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 131072 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 262144 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 524288 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1048576 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2097152 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4194304 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8388608 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8388608 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 256 := 16777216&8388608
(smt.stats   30   3793  68924 122128  4264/3895/308    4052/321    26  121   54.92)
(sat.ddfw       1      1   26.3554    290001      1421          7            1       30)
(smt.stats   31   3928  72569 138448  4484/4203/322    4258/419    28  150   54.92)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8589934592 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8589934592 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8573157376 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 134217728 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 268435456 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1073741824 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4294967296 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582485708800&8589934592
ramon: poll                 wall=3.000s usage=2.930s mem=57412KiB load=0.99 rootload=0.99
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582485708800&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 33554432 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1073741824 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1073741824 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8589934592 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4294967296 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582519263232&8589934592
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  77656 145445  4580/4253/381    4452/469    29  180   55.22)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2147483648 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 268435456 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 268435456 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 268435456 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 536870912 := 39582519263232&8589934592
(smt.stats   33   4236  84776 156159  4612/4308/422    4640/472    29  180   55.22)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 17179869184 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 34359738368 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 17179869184 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 34359738368 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 137438953472 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 137438953472 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 68719476736 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 137438953472 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 34359738368 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 17179869184 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 134217728 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 67108864 := 39582519263232&137438953472
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 274877906944 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 549755813888 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 274877906944 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 1099511627776 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 2199023255552 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4398046511104 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 4398046511104 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 8796093022208 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 17592186044416 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 35184372088832 := 39582519263232&4503599627370496
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 35184372088832 := 39582519263232&4503599627370496
(smt.stats   34   4413  90670 172486  4684/4402/516    4969/669    31  223   55.70)
(sat.ddfw       1      1   23.5849    370001      1813          8            1       38)
(smt.stats   35   4607  95473 183906  4743/4439/526    5226/711    32  246   56.23)
(smt.stats   36   4708  98751 190389  4767/4468/526    5336/711    32  246   56.23)
(smt.stats   37   4819 102678 199929  4800/4502/526    5519/711    32  246   56.33)
(smt.stats   38   4941 108673 214600  4806/4516/531    5644/800    33  262   56.42)
ramon: poll                 wall=4.000s usage=3.929s mem=58704KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 112222 221596  4818/4528/532    5819/800    33  262   56.42)
(smt.stats   40   5222 116380 234783  4829/4531/532    5969/800    33  262   56.42)
(sat.ddfw       1      1   21.3422    460001      2254          9            1       47)
(smt.stats   41   5383 120695 243544  5078/4540/532    6182/860    34  271   56.52)
(smt.stats   42   5560 124047 258606  5092/4796/532    6394/860    34  271   56.61)
(smt.stats   43   5754 130352 279399  5114/4818/532    6669/860    34  271   56.92)
ramon: poll                 wall=5.000s usage=4.930s mem=59332KiB load=1.00 rootload=1.00
(smt.stats   44   5967 136123 296197  5180/4870/536    7040/956    35  273   57.11)
(sat.ddfw       1      1   19.4932    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   45   6068 137777 303773  5232/4935/544    7146/1094    36  275   57.24)
(smt.stats   46   6179 140219 311791  5274/4944/545    7321/1096    36  275   57.50)
(smt.stats   47   6301 143563 320680  5309/5006/545    7535/1181    37  282   57.50)
(smt.stats   48   6435 148305 334196  5329/5014/547    7722/1181    37  282   57.60)
(smt.stats   49   6582 150516 347029  5337/5034/550    7916/1282    38  288   57.60)
ramon: poll                 wall=6.000s usage=5.927s mem=59880KiB load=1.00 rootload=1.00
(smt.stats   50   6743 154180 363506  5353/5038/550    8092/1282    38  288   57.60)
(sat.ddfw       1      1   17.9007    670001      3284         11            1       68)
(smt.stats   51   6920 161169 385427  5357/5054/551    8298/1304    40  321   57.70)
(smt.stats   52   7114 162626 388191  5624/5057/551    8616/1316    40  321   58.08)
(smt.stats   53   7327 166586 404966  6173/5571/551    9022/1318    40  321   58.18)
ramon: poll                 wall=7.000s usage=6.927s mem=60588KiB load=1.00 rootload=1.00
(smt.stats   54   7561 175967 442774  6189/5876/551    9810/1318    40  321   58.27)
(sat.ddfw       1      1   16.5494    790001      3872         12            1       80)
(smt.stats   55   7662 182917 474160  6194/5891/551    9954/1318    40  321   58.27)
(smt.stats   56   7773 193452 508861  6199/5896/551   10121/1318    40  321   58.27)
(smt.stats   57   7895 199249 533408  6205/5898/551   10352/1319    40  321   58.46)
ramon: poll                 wall=8.000s usage=7.926s mem=60844KiB load=1.00 rootload=1.00
(smt.stats   58   8029 201915 544237  6212/5909/551   10680/1319    40  321   58.46)
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&134217728
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 1 := 6013230166048768 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&134217728
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 18014398509481985 := 6013230166048768 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #385 64)) (if (= #743 63) 0 (if #745 1 #869))) 0 := 1&134217728
shl: (shl[64] (bv2int %0) (mod (+ #104 #384) 64)) 18014398509481985 := 6013230166048768 << 28
(smt.stats   59   8176 203472 547544  6462/5914/551   10869/1323    40  321   58.56)
(sat.ddfw       1      1   15.3864    920001      4509         13            1       93)
(smt.stats   60   8337 206921 563393  6700/6239/556   11106/1799    41  322   58.56)
ramon: poll                 wall=9.000s usage=8.966s mem=61296KiB load=1.04 rootload=1.04
(smt.stats   61   8514 209662 575092  6789/6484/557   11312/1843    42  325   59.03)
(smt.stats   62   8708 214544 603182  6833/6484/557   11564/1843    42  325   59.03)
(smt.stats   63   8921 219314 633071  6872/6559/558   11816/1878    43  326   59.03)
(smt.stats   64   9155 223980 659256  6888/6579/558   12254/1878    43  326   59.22)
ramon: poll                 wall=10.000s usage=9.847s mem=61288KiB load=0.88 rootload=0.88
(sat.ddfw       1      1   14.0421   1060001      5196         14            1      108)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9412 234313 710353  6912/6607/559   13040/2260    44  331   59.31)
(smt.stats   66   9513 237086 723499  6953/6640/563   13284/2260    44  331   59.31)
(smt.stats   67   9624 238670 734314  6962/6643/563   13398/2260    44  331   59.41)
(smt.stats   68   9746 243581 769581  6966/6653/563   13533/2260    44  331   59.41)
ramon: poll                 wall=11.000s usage=10.775s mem=61948KiB load=0.93 rootload=0.93
(smt.stats   69   9880 247380 800743  6970/6657/563   13691/2410    45  339   59.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 894)
(smt.stats   70  10027 249987 820371  6983/6668/565   13104/2438    46  345   59.50)
(smt.stats   71  10188 252643 835914  6998/6673/565   13272/2438    46  345   59.50)
(smt.stats   72  10365 259958 865453  7002/6685/565   13503/2438    46  345   59.50)
(sat.ddfw       1      1   12.9702   1210001      5931         15            1      123)
(smt.stats   73  10559 267147 907612  7008/6691/565   14540/2438    46  345   59.60)
ramon: poll                 wall=12.000s usage=11.715s mem=61916KiB load=0.94 rootload=0.94
(smt.stats   74  10772 275219 958338  7015/6694/566   14976/2699    47  347   59.60)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11006 284020 1014399  7021/6702/566   15256/2699    47  347   59.69)
(sat.ddfw       1      1   12.4339   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=12.834s mem=62328KiB load=1.12 rootload=1.12
(smt.stats   76  11263 291358 1059924  7023/6706/566   15612/2699    47  347   59.69)
(smt.stats   77  11545 295631 1099237  7028/6711/566   16098/2699    47  347   59.69)
(smt.stats   78  11646 298608 1124009  7033/6715/566   16209/2699    47  347   59.69)
(smt.stats   79  11757 304203 1147283  7035/6717/566   16349/2699    47  347   59.79)
(smt.stats   80  11879 307895 1174351  7044/6724/566   16475/2699    47  347   59.79)
(smt.stats   81  12013 311883 1198329  7046/6726/567   16636/2942    48  370   60.45)
ramon: poll                 wall=14.000s usage=13.835s mem=62552KiB load=1.00 rootload=1.00
(smt.stats   82  12160 319249 1231822  7053/6733/567   16935/2942    48  370   60.45)
(sat.ddfw       1      1   11.8368   1540001      7549         17            1      156)
(smt.stats   83  12321 325859 1253710  7069/6737/567   17095/2942    48  370   60.45)
(smt.stats   84  12498 332576 1299177  7087/6755/567   17289/2942    48  370   60.54)
(smt.stats   85  12692 339987 1349744  7087/6767/567   17584/2942    48  370   60.91)
ramon: poll                 wall=15.000s usage=14.838s mem=62892KiB load=1.00 rootload=1.00
(smt.stats   86  12905 342380 1370426  7090/6768/567   17848/2942    48  370   60.91)
(smt.stats   87  13139 343358 1386171  7094/6774/567   18094/2942    48  370   60.91)
(smt.stats   88  13396 350907 1430007  7096/6776/567   18398/2942    48  370   61.05)
ramon: poll                 wall=16.000s usage=15.841s mem=63164KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.2437   1720001      8431         18            1      174)
(smt.stats   89  13678 354987 1466178  7096/6776/568   18698/3102    49  393   61.14)
(smt.stats   90  13988 370440 1557122  7098/6778/568   19052/3102    49  393   61.24)
ramon: poll                 wall=17.000s usage=16.841s mem=63676KiB load=1.00 rootload=1.00
(smt.stats   91  14089 377052 1583950  7099/6779/569   19406/3169    50  402   61.24)
(smt.stats   92  14200 385088 1625556  7101/6781/569   19515/3169    50  402   61.24)
(smt.stats   93  14322 389880 1655240  7102/6782/569   19779/3169    50  402   61.33)
(sat.ddfw       1      1   10.7163   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=17.841s mem=63564KiB load=1.00 rootload=1.00
(smt.stats   94  14456 396253 1691684  7107/6787/569   20087/3169    50  402   61.33)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   95  14603 401183 1717972  7109/6789/569   20308/3169    50  402   61.33)
(smt.stats   96  14764 403854 1748340  7110/6790/569   20474/3169    50  402   61.33)
(smt.stats   97  14941 407409 1777719  7110/6790/569   20770/3169    50  402   61.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 286)
ramon: poll                 wall=19.000s usage=18.838s mem=63724KiB load=1.00 rootload=1.00
(smt.stats   98  15135 413781 1808630  7113/6793/569   20700/3169    50  402   61.43)
(smt.stats   99  15348 421162 1863069  7118/6798/569   20948/3169    50  402   61.43)
(sat.ddfw       1      1    10.238   2110001     10343         20            1      214)
(smt.stats  100  15582 437335 1941186  7128/6808/569   21249/3169    50  402   61.43)
ramon: poll                 wall=20.005s usage=19.846s mem=64152KiB load=1.00 rootload=1.01
ramon: end                  Fri Nov  1 21:50:04 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.020s
ramon: group.total          19.925s
ramon: group.utime          19.901s
ramon: group.stime          0.024s
ramon: group.mempeak        64164KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.087s
ramon: loadavg              0.99
