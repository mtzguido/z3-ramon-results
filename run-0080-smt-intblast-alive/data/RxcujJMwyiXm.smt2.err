ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:24:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25605 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/RxcujJMwyiXm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             36626
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16383 := 16383&16383
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 16383 := 8 << 13
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16383 := 16383&16383
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 16383 := 8 << 13
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16383 := 16383&16383
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 16383 := 8 << 13
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16383 := 16383&16383
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 16383 := 8 << 13
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16383 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16382 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16380 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16376 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16368 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 32 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 64 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 512 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 1024 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 2048 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 512 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 1024 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 2048 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 4096 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 8192 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&65535
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&65535
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&258
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&258
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&257
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&260
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&260
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&264
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&256
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 256 := 8 << 13
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&65536
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&65536
(smt.stats    0    101   2497    938   661/602/195     148/58    11   42   19.07)
(smt.stats    1    202   3337   1328  1030/888/195     270/69    11   42   19.45)
(smt.stats    2    313   4815   2288  1290/1192/196     431/102    12   43   19.45)
(smt.stats    3    414   6522   4490  1310/1208/200     601/106    13   54   19.45)
(smt.stats    4    525   9123   7477  1403/1295/206     862/173    15   61   19.55)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 1&682
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #107))) 135 := 341 << 1
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 1&682
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #107))) 135 := 341 << 1
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 1&682
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #107))) 134 := 341 << 1
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 1&682
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #107))) 134 := 341 << 1
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 1&682
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 1 := 1&682
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 1&682
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 1 := 1&682
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 1 := 1&682
(smt.stats    5    647  12455  10995  1471/1342/212    1127/191    16   63   19.65)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 2 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 4 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 4 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 48 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 116 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 148 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 48 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 52 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 148 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 532 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 532 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 532 := 4095&660
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 660 := 4095&660
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 660 := 660 << 11
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  14347  14042  1553/1382/238    1286/224    17   67   19.75)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 65535&98304
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 65535&98304
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 65535&98304
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16384 := 65535&98304
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 32768 := 65535&98304
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 5341184 := 652 << 15
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 32768 := 65535&131072
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 32768 := 65535&131072
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 32768 := 65535&131072
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 32768 := 65535&131072
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 16448 := 65535&131072
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18432 := 65535&131072
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 20480 := 65535&131072
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 20480 := 65535&135168
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 20480 := 65535&151552
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 5394432 := 652 << 15
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 20480 := 65535&159744
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18432 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18432 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18432 := 65535&131144
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18432 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18496 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18432 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18432 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18432 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 18496 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 20480 := 65535&131136
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 20672 := 65535&131136
(smt.stats    7    859  16439  17855  1633/1451/304    1515/281    19   85   20.06)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 22528 := 65535&198656
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 22528 := 65535&202752
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 22528 := 65535&219136
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 21452800 := 652 << 15
(smt.stats    8    981  19629  25468  1703/1582/354    2073/452    21  112   20.25)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 262143&640
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 262143&640
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 262143&640
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 262143&640
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 262143&640
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 262143&384
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 262143&384
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 262143&144
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 128 := 262143&144
(smt.stats    9   1115  21573  30768  1857/1600/357    2362/456    21  112   20.35)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&176
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&140432
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&132240
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&132240
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&132240
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&140432
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&139408
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&139408
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&139408
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 144 := 262143&133264
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 1168 := 262143&67728
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 1168 := 262143&68752
(smt.stats   10   1216  22732  37269  2086/1817/364    2614/494    22  120   20.73)
(smt.stats   11   1327  25611  45655  2113/1992/390    2882/564    24  132   20.83)
(smt.stats   12   1449  28614  55984  2164/2021/393    3407/635    25  136   20.92)
(smt.stats   13   1583  32453  68312  2215/2052/395    3798/870    26  144   21.24)
ramon: poll                 wall=1.000s usage=0.999s mem=22852KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   14   1730  35534  77516  2364/2235/401    4260/1039    27  153   21.34)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 68612 := 262143&101380
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 101380 := 262143&101388
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 101380 := 262143&101382
(smt.stats   15   1831  37393  82658  2386/2237/401    4422/1043    27  153   21.34)
(smt.stats   16   1942  37666  83119  2555/2419/401    4526/1066    28  163   21.62)
(smt.stats   17   2064  39900  92513  2938/2756/418    5581/1074    28  163   21.81)
(smt.stats   18   2198  41064  96847  3223/2869/419    5922/1383    29  217   22.01)
ramon: poll                 wall=2.000s usage=1.999s mem=23380KiB load=1.00 rootload=1.00
(smt.stats   19   2345  43739 109133  3568/3208/419    6554/1388    29  217   22.11)
(smt.stats   20   2506  47317 128473  3692/3561/427    7941/1682    31  230   22.39)
(smt.stats   21   2607  49601 134452  3731/3572/427    8360/1685    31  230   22.49)
(smt.stats   22   2718  52434 147704  3913/3770/430    9080/1937    32  289   22.58)
ramon: poll                 wall=3.000s usage=2.999s mem=24000KiB load=1.00 rootload=1.00
(smt.stats   23   2840  54748 162476  4154/4008/434   10043/2089    33  290   22.77)
(smt.stats   24   2974  57756 175040  4213/4051/434   10666/2091    33  290   22.87)
(smt.stats   25   3121  60621 192309  4327/4151/436   11274/2247    34  294   22.97)
(smt.stats   26   3282  62998 216634  4628/4359/437   12212/2386    35  322   23.16)
(smt.stats   27   3459  65235 234391  4773/4566/437   12709/2396    35  322   23.25)
ramon: poll                 wall=4.000s usage=3.998s mem=24712KiB load=1.00 rootload=1.00
(smt.stats   28   3560  66759 244231  4938/4752/437   13574/2402    35  322   23.44)
(smt.stats   29   3671  68189 253243  5155/4948/440   13892/2555    36  323   23.44)
(smt.stats   30   3793  69991 267135  5295/5024/440   14418/2559    36  323   23.63)
(smt.stats   31   3927  71396 278124  5536/5203/440   14885/2563    36  323   23.63)
(smt.stats   32   4074  74363 297987  5652/5487/444   16366/2914    37  326   23.82)
ramon: poll                 wall=5.000s usage=4.998s mem=25288KiB load=1.00 rootload=0.99
(smt.stats   33   4235  78254 320585  5856/5658/445   17575/2916    37  326   24.21)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   34   4412  81378 364098  5887/5731/449   18684/3351    39  430   24.52)
(smt.stats   35   4606  85439 391817  6117/5925/454   20491/3359    39  430   24.75)
(smt.stats   36   4707  88043 413019  6212/5939/454   21578/3362    39  430   25.13)
ramon: poll                 wall=6.000s usage=5.996s mem=26396KiB load=1.00 rootload=1.00
(smt.stats   37   4818  90189 429396  6335/6043/454   21822/3648    40  444   25.13)
(smt.stats   38   4940  91695 448422  6474/6203/454   22425/3651    40  444   25.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 245)
(smt.stats   39   5074  94323 464278  6555/6310/455   22851/3653    40  444   25.46)
(smt.stats   40   5221  99962 484409  6674/6435/455   24283/3737    41  448   25.56)
ramon: poll                 wall=7.000s usage=6.996s mem=26992KiB load=1.00 rootload=1.00
(smt.stats   41   5382 105091 506040  6781/6516/455   24894/3743    41  448   25.65)
(smt.stats   42   5559 109092 532277  6898/6656/455   25803/3745    41  448   25.75)
(smt.stats   43   5753 113952 563418  7035/6804/456   26640/4012    42  448   25.85)
ramon: poll                 wall=8.000s usage=7.995s mem=27316KiB load=1.00 rootload=1.00
(smt.stats   44   5966 117196 590116  7103/6874/456   27787/4016    42  448   26.08)
(smt.stats   45   6067 119646 609501  7186/6936/456   28774/4021    42  448   26.18)
(smt.stats   46   6178 121848 628056  7227/7005/456   29315/4024    42  448   26.29)
(smt.stats   47   6300 124089 658223  7339/7103/456   29961/4026    42  448   26.38)
(smt.stats   48   6434 126401 694540  7460/7169/456   30550/4033    42  448   26.38)
(smt.stats   49   6581 129160 712330  7532/7297/456   32250/4035    42  448   26.57)
ramon: poll                 wall=9.000s usage=8.995s mem=27900KiB load=1.00 rootload=1.00
(smt.stats   50   6742 133382 744724  7716/7528/457   33264/4632    43  456   26.67)
(smt.stats   51   6919 137194 782516  7768/7560/459   35132/4633    43  456   26.96)
(smt.stats   52   7113 140579 814031  7843/7588/460   36017/4634    43  456   27.07)
ramon: poll                 wall=10.002s usage=9.994s mem=28524KiB load=1.00 rootload=1.00
(smt.stats   53   7326 147025 913913  7862/7678/460   36799/4634    43  456   27.16)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   54   7560 152414 952680  8080/7684/460   37875/5024    44  473   27.38)
(smt.stats   55   7661 155016 979715  8139/7905/460   38613/5027    44  473   27.57)
(smt.stats   56   7772 157646 1002744  8190/7965/460   39453/5028    44  473   27.67)
(smt.stats   57   7894 160476 1025981  8294/8020/460   40232/5032    44  473   27.73)
ramon: poll                 wall=11.000s usage=10.991s mem=29368KiB load=1.00 rootload=0.99
(smt.stats   58   8028 163221 1043364  8378/8161/463   40896/5353    45  483   27.92)
(smt.stats   59   8175 167294 1075572  8552/8223/463   41505/5362    45  483   28.21)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   60   8336 171228 1110233  8752/8554/464   43046/5370    45  483   28.30)
ramon: poll                 wall=12.000s usage=11.991s mem=29920KiB load=1.00 rootload=1.00
(smt.stats   61   8707 177786 1184479  8964/8598/464   45506/5688    46  484   28.69)
(smt.stats   62   8920 182741 1222859  9086/8902/466   46834/5892    47  484   28.69)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 8330 := 131071&77826
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 8534 := 131071&77826
(smt.stats   63   9154 186864 1267355  9294/8914/466   48364/5895    47  484   29.09)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 511&77824
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 569454592 := 524286 << 8
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 1 := 511&77825
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 569454593 := 524286 << 8
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 1 := 511&77825
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 569454593 := 524286 << 8
(smt.stats   64   9411 192380 1335516  9454/9231/467   49810/5902    47  484   29.28)
ramon: poll                 wall=13.002s usage=12.992s mem=30792KiB load=1.00 rootload=1.00
(smt.stats   65   9512 193641 1343318  9498/9308/472   50308/6150    48  489   29.37)
(smt.stats   66   9623 195369 1357608  9531/9310/472   50781/6153    48  489   29.47)
(smt.stats   67   9745 196308 1363653  9729/9378/472   51002/6154    48  489   29.56)
(smt.stats   68   9879 197581 1378079  9824/9597/472   51890/6155    48  489   29.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 185)
(smt.stats   69  10026 199509 1390638  9863/9652/472   52423/6156    48  489   29.76)
ramon: poll                 wall=14.002s usage=13.990s mem=31464KiB load=1.00 rootload=1.00
(smt.stats   70  10187 202992 1421998  9931/9716/475   53279/6160    48  489   29.85)
(smt.stats   71  10364 205688 1454885 10091/9760/475   54597/6162    48  489   29.95)
(smt.stats   72  10558 208130 1483012 10115/9922/476   55623/6402    49  500   30.04)
(smt.stats   73  10771 211166 1530472 10117/9928/479   56698/6402    49  500   30.23)
ramon: poll                 wall=15.000s usage=14.987s mem=31792KiB load=1.00 rootload=1.00
(smt.stats   74  11005 215818 1554549 10136/9933/479   57503/6403    49  500   30.23)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 160 := 262143&161
(smt.stats   75  11262 218532 1601959 10366/9964/479   58973/6408    49  500   30.33)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   76  11544 222559 1642190 10507/10243/479   59965/6679    50  544   30.52)
(smt.stats   77  11645 224297 1661286 10613/10324/479   60266/6682    50  544   30.62)
(smt.stats   78  11756 225312 1682485 10684/10489/479   61075/6682    50  544   30.71)
ramon: poll                 wall=16.000s usage=15.987s mem=32288KiB load=1.00 rootload=1.00
(smt.stats   79  11878 227373 1709021 10686/10495/479   62312/6682    50  544   31.05)
(smt.stats   80  12012 229402 1728805 10691/10500/479   63891/6682    50  544   31.14)
(smt.stats   81  12159 235031 1772360 10698/10503/479   64837/6682    50  544   31.14)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 640 := 16383&196608
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 8194 := 16383&196608
(smt.stats   82  12320 238597 1806734 10777/10512/480   66026/7460    51  559   31.43)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 848 := 16383&196608
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 64 := 16383&196608
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 512 := 16383&196608
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&196608
(smt.stats   83  12497 240558 1827317 10937/10632/481   66910/7461    51  559   31.43)
ramon: poll                 wall=17.002s usage=16.989s mem=32992KiB load=1.00 rootload=1.00
(smt.stats   84  12691 244838 1868066 10970/10752/481   67652/7463    51  559   31.63)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 2 := 7&426
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 426 := 426 << 2
(smt.stats   85  12904 250027 1952515 10993/10791/481   68722/7464    51  559   31.72)
(smt.stats   86  13138 253506 2000396 11100/10866/487   69838/7698    52  583   32.15)
(smt.stats   87  13395 258615 2056402 11385/10925/487   71135/7701    52  583   32.37)
ramon: poll                 wall=18.002s usage=17.987s mem=33892KiB load=1.00 rootload=1.00
(smt.stats   88  13677 264005 2174023 11445/11212/487   72567/7702    52  583   32.46)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 2 := 127&261698
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 2 := 3&261698
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 4294442562 := 524264 << 1
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 2 := 3&261730
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 4294442594 := 524264 << 1
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 2 := 3&261730
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #452 #456) 32)) 4294442594 := 524264 << 1
(smt.stats   89  13987 267654 2217583 11625/11377/489   74086/7857    53  591   32.66)
(smt.stats   90  14088 271418 2289910 11629/11430/494   75256/7857    53  591   32.76)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #107))) 0 := 262138 << 14
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #107))) 0 := 262138 << 14
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #107))) 0 := 262138 << 14
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #107))) 0 := 262138 << 14
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 16382 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 16380 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 32 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 64 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 128 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 256 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 512 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 1024 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 2048 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 4096 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8192 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 4096 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8192 := 16383&163840
(smt.stats   91  14199 274038 2324340 11797/11548/611   76685/7861    53  591   33.26)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8200 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8200 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8208 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8200 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8208 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8448 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8448 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8320 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8256 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8224 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8194 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8196 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 9216 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 9216 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 8192 := 16383&163840
(smt.stats   92  14321 275415 2343113 11968/11637/611   77212/7868    53  591   33.45)
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 12288 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 10240 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 8192 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 1 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 1 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 256 := 16383&163840
band: (band[18] (if (= #211 31) 1 (if #327 3 #445)) (shl[32] (* 2 #105) (mod #460 32))) 0 := 16383&163840
band: (band[18] (if (= #111 17) 1 (if #348 3 #392)) (shl[18] (bv2int %0) (+ 18 #395))) 512 := 16383&163840
(smt.stats   93  14455 277282 2367200 12000/11776/632   78135/8313    54  628   33.64)
ramon: poll                 wall=19.000s usage=18.985s mem=35196KiB load=1.00 rootload=0.99
(smt.stats   94  14602 280981 2385901 12204/11853/633   79179/8318    54  628   33.93)
(smt.stats   95  14763 284475 2422890 12467/12003/633   80001/8328    54  628   34.12)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   96  14940 287449 2455368 12778/12530/637   81476/8333    54  628   34.31)
(smt.delete-inactive-clauses  :num-deleted-clauses 167)
(smt.stats   97  15134 292209 2525242 12819/12550/642   83421/8333    54  628   34.60)
ramon: poll                 wall=20.000s usage=19.985s mem=36560KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:24:22 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.993s
ramon: group.utime          19.969s
ramon: group.stime          0.024s
ramon: group.mempeak        37072KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
