ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:16:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27128 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/vkssSqkFvlyC.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             957258
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   102.041     10000        49          0            1        2)
(sat.ddfw       1      1   50.7665     20001        98          1            1        3)
(smt.stats    0    101   3894    460  1128/1020/104     101/18     9   19   51.95)
(smt.stats    1    202   5861   1260  1721/1565/107     194/27    10   21   52.14)
(sat.ddfw       1      1   49.7512     40001       196          2            1        5)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 1 := 2 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 0 := 2 << 1
(smt.stats    2    313   7917   1885  2272/2046/115     293/64    13   28   52.34)
(smt.stats    3    414  11983   4224  2322/2112/117     391/70    15   32   52.43)
(smt.stats    4    525  13273   5417  2355/2138/122     514/71    16   44   52.53)
(smt.stats    5    647  17247   9863  2363/2147/122     633/94    17   45   52.53)
(sat.ddfw       1      1   43.0416     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18007  12347  2370/2153/122     733/94    17   45   52.53)
(smt.stats    7    859  20302  15513  2373/2160/122     843/94    17   45   52.63)
(smt.stats    8    981  21101  19208  2391/2177/130     975/108    19   57   52.73)
(smt.stats    9   1115  21729  20334  2409/2187/131    1106/126    20   58   52.73)
(smt.stats   10   1216  22942  21746  2441/2209/134    1206/126    20   58   52.73)
ramon: poll                 wall=1.000s usage=0.798s mem=54932KiB load=0.80 rootload=0.79
(smt.stats   11   1327  25133  23678  2456/2225/134    1321/127    21   64   52.83)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  25827  26138  2476/2260/135    1443/146    22   64   52.83)
(sat.ddfw       1      1   38.4986    110001       539          4            1       12)
(smt.stats   13   1583  29101  29512  2495/2275/135    1580/146    22   64   52.94)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 36 := 36&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 35 := 36&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 40 := 40&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 34 := 36&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 32 := 36&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 16 := 36&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 32 := 36&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 64 := 64&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 128&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 256 := 256&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 512 := 512&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2048 := 2048&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4096 := 4096&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 8192 := 8192&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 16384 := 16384&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 32768 := 32768&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 65536 := 65536&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 65536 := 65536&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 131072 := 131072&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 262144 := 262144&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 524288 := 524288&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1048576 := 1048576&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2097152 := 2097152&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4194304 := 4194304&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 8388608 := 8388608&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 16777216 := 16777216&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4194304 := 4194304&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4194304 := 4194304&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 8388608 := 8388608&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 33554432 := 33554432&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 67108864 := 67108864&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 134217728 := 134217728&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 268435456 := 268435456&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 536870912 := 536870912&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1073741824 := 1073741824&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2147483648 := 2147483648&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4294967296 := 4294967296&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 8589934592 := 8589934592&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1090519040 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1073741824 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 939524096 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 805306368 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 536870912 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 268435456 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 268435456 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 201326592 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 671088640 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 536870912 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2147483648 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2147483648 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4294967296 := 17179869182&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 17179869184&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 17179869184 := 17179869184 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 17179869184&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 17179869184 := 17179869184 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 17179869184&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 17179869184 := 17179869184 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 17179869185&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 17179869185 := 17179869185 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 22548578303&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 22548578303 := 22548578303 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 34359738368&17179869184
(smt.stats   14   1730  30746  32945  2758/2390/269    1816/157    23   65   53.85)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 34359738368&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 34359738368&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 34359738368&17179869184
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17179869184 := 34359738368&17179869184
(smt.stats   15   1831  32057  34791  2795/2503/315    1978/223    24  103   53.95)
(sat.ddfw       1      1    31.152    160000       784          5            1       17)
(smt.stats   16   1942  32614  36959  2918/2696/324    2141/289    25  117   54.04)
(smt.stats   17   2064  33521  40603  2931/2709/330    2307/289    25  117   54.04)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52613349381&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 121332826117 := 52613349380 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52613349381&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 121332826117 := 52613349380 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52613349381&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 121332826117 := 52613349380 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52613349381&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 121332826117 := 52613349380 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52613349381&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 121332826117 := 52613349380 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52613349381&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 121332826117 := 52613349380 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 53150220289&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 121869697025 := 52613349380 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52613873664&65536
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 53150220290 := 52613750788 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52613873664&65536
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 53150220290 := 52613750788 << 17
(smt.stats   18   2198  35608  47522  2953/2718/336    2459/390    27  133   54.14)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 52614397952&65536
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 53150220290 := 52614275080 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 34359738368&131072
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 2462940405956608 := 18790744064 << 18
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 34359738368&131072
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 2322202917601280 := 17717002240 << 18
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 34359738368&131072
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 103079215104 := 786432 << 18
ramon: poll                 wall=2.004s usage=1.729s mem=56604KiB load=0.93 rootload=0.93
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 0&131072
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 52076478467 := 0 << 18
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 0&131072
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 52076478467 := 0 << 18
(smt.stats   19   2345  39447  53755  3017/2766/348    2622/393    27  133   54.43)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 32212254720&16
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 3588838165315584 := 27380662272 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 32212254720&16
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 3659138190016512 := 27917008896 << 5
(sat.ddfw       1      1   28.4365    220001      1078          6            1       23)
(smt.stats   20   2506  41817  59405  3098/2856/368    2834/426    29  150   54.62)
(smt.stats   21   2607  44739  64521  3170/2898/372    2956/431    29  150   54.71)
(smt.stats   22   2718  47532  70274  3214/2953/372    3077/476    30  158   54.71)
(smt.stats   23   2840  53115  83155  3246/2990/383    3234/503    32  171   54.81)
(smt.stats   24   2974  56011  89270  3263/3001/383    3392/505    32  171   54.81)
(smt.stats   25   3121  57930  93538  3278/3019/383    3530/506    33  173   55.01)
(sat.ddfw       1      1   25.9067    290001      1421          7            1       30)
(smt.stats   26   3282  61041  98546  3365/3029/383    3695/511    33  173   55.01)
ramon: poll                 wall=3.000s usage=2.720s mem=57372KiB load=1.00 rootload=0.99
(smt.stats   27   3459  65275 107047  3385/3121/383    3886/511    33  173   55.14)
(smt.stats   28   3560  68084 113027  3389/3132/383    4020/511    33  173   55.23)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4 := 4&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 4 := 2 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4 := 4&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 4 := 2 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4 := 4&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 4 := 2 << 3
(smt.stats   29   3671  69722 117730  3412/3137/383    4151/512    33  173   55.23)
(sat.ddfw       1      1   23.6337    370001      1813          8            1       38)
(smt.stats   30   3793  71682 125309  3458/3170/388    4267/584    34  174   55.23)
(smt.stats   31   3927  74437 132878  3460/3205/395    4401/585    35  184   55.33)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 128&256
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 128&256
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 128&256
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 128&256
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 256 := 256&512
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 256 := 256&512
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 128&512
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 512 := 512&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2048 := 2048&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4096 := 4096&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4096 := 4096&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 4096 := 4096&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2048 := 2048&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2048 := 2048&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&8192
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1024 := 1024&4096
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 512 := 512&4096
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 512 := 512&4096
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 512 := 512&4096
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 512 := 512&4096
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 256 := 1023&1024
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  79061 137926  3555/3234/396    4593/595    35  184   55.53)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738368&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738496&128
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 34359738496 := 52616364033 << 8
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738368&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738623&128
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 34359738623 := 52615839745 << 8
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738368&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738623&128
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 34359738623 := 52615323663 << 8
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738368&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738496&128
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 34359738496 := 52614799371 << 8
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34426847232&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34426847488&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34426847488&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738624&128
(sat.ddfw       1      1   23.3524    460001      2254          9            1       47)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34359738624&128
ramon: poll                 wall=4.000s usage=3.868s mem=58396KiB load=1.15 rootload=1.14
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 128 := 34629225728&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 112 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 32 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 64 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 64 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 48 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 32 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 17 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 16 := 34359738624&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 32 := 34359738880&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 16 := 34359738880&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 16 := 34359738880&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1 := 34359738880&128
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 1 := 34359738624&128
(smt.stats   33   4235  82046 142161  3678/3395/472    4834/612    36  191   55.82)
(smt.stats   34   4412  88652 156520  3783/3520/484    5067/699    37  212   55.91)
(sat.ddfw       1      1   21.9587    560001      2745         10            1       57)
(smt.stats   35   4606  95935 171982  3811/3548/490    5391/724    38  216   56.26)
(smt.stats   36   4707 100845 183606  3924/3635/493    5654/804    39  235   56.36)
ramon: poll                 wall=5.000s usage=4.947s mem=58652KiB load=1.08 rootload=1.08
(smt.stats   37   4818 105976 192419  3931/3636/493    5848/834    40  244   56.45)
(sat.ddfw       1      1   20.6612    670001      3284         11            1       68)
(smt.stats   38   4940 107881 195292  4136/3651/493    6001/837    40  244   56.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 156)
(smt.stats   39   5074 112891 201551  4197/3906/495    6084/862    41  250   56.64)
(smt.stats   40   5221 118370 221185  4208/3918/497    6337/942    42  252   56.84)
ramon: poll                 wall=6.000s usage=6.014s mem=59224KiB load=1.07 rootload=1.07
(smt.stats   41   5382 124588 236974  4217/3923/497    6588/942    42  252   56.94)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   42   5559 129795 253363  4227/3937/499    6869/1080    43  259   57.04)
(sat.ddfw       1      1   18.7441    790001      3872         12            1       80)
(smt.stats   43   5753 139122 282668  4247/3957/503    7176/1088    44  274   57.38)
ramon: poll                 wall=7.000s usage=7.008s mem=59736KiB load=0.99 rootload=0.99
(smt.stats   44   5966 147874 306055  4272/3974/505    7529/1138    46  296   57.47)
(smt.stats   45   6067 151498 317742  4282/3990/505    7633/1138    46  296   57.47)
(smt.stats   46   6178 155152 328515  4347/4049/506    7934/1256    47  303   57.57)
(sat.ddfw       1      1   17.2643    920001      4509         13            1       93)
(smt.stats   47   6300 157601 343353  4386/4094/507    8098/1256    47  303   57.57)
(smt.stats   48   6434 161281 357634  4405/4113/509    8369/1281    48  309   57.66)
ramon: poll                 wall=8.000s usage=8.008s mem=59992KiB load=1.00 rootload=1.00
(smt.stats   49   6581 163912 369961  4471/4126/510    8599/1281    48  309   57.76)
(smt.stats   50   6742 166185 388484  4522/4230/511    8770/1341    49  340   57.76)
(sat.ddfw       1      1   16.0293   1060001      5196         14            1      108)
ramon: poll                 wall=9.000s usage=9.004s mem=60248KiB load=1.00 rootload=1.00
(smt.stats   51   6919 171694 415213  4650/4235/511    9073/1347    49  340   57.85)
(smt.stats   52   7113 174854 429868  4714/4391/511    9299/1350    49  340   57.95)
(smt.stats   53   7326 184460 467215  4746/4446/511    9751/1350    49  340   57.95)
ramon: poll                 wall=10.004s usage=10.003s mem=60312KiB load=0.99 rootload=1.00
(smt.stats   54   7560 189628 493144  4776/4480/514   10188/1499    50  363   58.04)
(sat.ddfw       1      1   14.9447   1210001      5931         15            1      123)
(smt.stats   55   7661 191561 507493  4780/4488/514   10302/1499    50  363   58.04)
(smt.stats   56   7772 194233 521147  4856/4495/514   10458/1540    51  370   58.04)
(smt.stats   57   7894 196203 536340  4877/4567/514   10620/1540    51  370   58.15)
(smt.stats   58   8028 198322 550408  4886/4588/514   10757/1541    51  370   58.15)
(smt.stats   59   8175 202648 577063  4911/4597/514   10932/1541    51  370   58.15)
ramon: poll                 wall=11.000s usage=10.998s mem=60568KiB load=1.00 rootload=0.99
(smt.stats   60   8336 205929 602156  4920/4625/514   11106/1541    51  370   58.15)
(smt.stats   61   8513 208853 622143  4936/4631/516   11424/1606    52  381   58.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 210911 643774  4943/4651/516   11696/1606    52  381   58.58)
(sat.ddfw       1      1   14.0142   1370001      6715         16            1      139)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2 := 2&4
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2 := 2&4
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 2 := 2&4
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 1030792151042 := 34823733248 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #294) 64)) 343597383682 := 34823733248 << 3
(smt.stats   63   8920 214954 665000  4983/4659/517   11980/1678    53  386   58.67)
ramon: poll                 wall=12.000s usage=12.048s mem=60788KiB load=1.05 rootload=1.05
(smt.stats   64   9154 222329 691838  5017/4719/523   12273/1678    53  386   58.77)
(smt.stats   65   9411 231172 740326  5029/4734/525   12580/1750    55  447   58.77)
(smt.stats   66   9512 234105 748476  5079/4772/525   12773/1750    55  447   58.86)
(sat.ddfw       1      1   13.1895   1540001      7549         17            1      156)
ramon: poll                 wall=13.000s usage=13.048s mem=61044KiB load=1.00 rootload=1.00
(smt.stats   67   9623 236133 760106  5242/4778/526   12921/1759    55  447   58.96)
(smt.stats   68   9745 237648 776229  5299/4946/526   13138/1759    55  447   58.96)
(smt.stats   69   9879 238766 792422  5302/4995/526   13296/1853    56  447   58.96)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 241648 807945  5311/5004/526   13652/1853    56  447   59.05)
ramon: poll                 wall=14.004s usage=14.017s mem=61404KiB load=0.97 rootload=0.97
(smt.stats   71  10187 248842 843823  5312/5005/526   13858/1853    56  447   59.05)
(smt.stats   72  10364 258300 915770  5312/5005/526   14042/1853    56  447   59.05)
(sat.ddfw       1      1   12.4654   1720001      8431         18            1      174)
(smt.stats   73  10558 264268 950222  5326/5019/528   14493/1953    57  449   59.15)
ramon: poll                 wall=15.000s usage=14.996s mem=61596KiB load=0.98 rootload=0.98
(smt.stats   74  10771 270230 976763  5403/5046/529   14963/2123    58  456   59.34)
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 0&17179869184
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 1 := 786436 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 0&17179869184
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 786437 := 786436 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #295 64)) (if (= #653 63) 0 (if #655 1 #779))) 0 := 0&17179869184
shl: (shl[36] (bv2int %0) (mod (bv2int %1) 36)) 786437 := 786436 << 35
ramon: poll                 wall=16.000s usage=15.996s mem=61764KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.8159   1910001      9362         19            1      193)
(smt.stats   75  11005 274648 991578  5488/5099/530   15228/2130    58  456   59.44)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11262 280433 1035895  5540/5227/536   15677/2192    59  482   59.44)
ramon: poll                 wall=17.004s usage=16.995s mem=62020KiB load=1.00 rootload=0.99
(smt.stats   77  11544 286111 1060523  5687/5242/536   16136/2198    59  482   59.63)
(sat.ddfw       1      1   11.2353   2110001     10343         20            1      214)
ramon: poll                 wall=18.000s usage=17.995s mem=62276KiB load=1.00 rootload=1.00
(smt.stats   78  11645 286882 1062614  6063/5671/536   16329/2207    59  482   59.92)
(smt.stats   79  11756 288170 1074475  6276/5899/536   16507/2214    59  482   59.92)
(smt.stats   80  11878 288969 1081862  6590/6274/538   16658/2340    60  486   60.01)
(smt.stats   81  12012 289586 1090826  6599/6290/539   16908/2340    60  486   60.01)
ramon: poll                 wall=19.000s usage=18.994s mem=62532KiB load=1.00 rootload=1.00
(smt.stats   82  12159 293761 1110598  6616/6293/539   17110/2341    60  486   60.11)
(smt.stats   83  12320 299073 1160180  6656/6330/540   17311/2466    61  491   60.11)
(smt.stats   84  12497 302238 1179248  6671/6362/540   17610/2466    61  491   60.21)
(sat.ddfw       1      1   10.7132   2320001     11372         21            1      235)
ramon: poll                 wall=20.004s usage=19.998s mem=63424KiB load=1.00 rootload=1.01
(smt.stats   85  12691 306778 1215396  6678/6367/540   17933/2466    61  491   60.69)
ramon: end                  Fri Nov  1 23:16:34 2024
ramon: root.execname        z3
ramon: root.utime           20.040s
ramon: root.stime           0.010s
ramon: group.total          20.057s
ramon: group.utime          20.041s
ramon: group.stime          0.016s
ramon: group.mempeak        63812KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              1.00
