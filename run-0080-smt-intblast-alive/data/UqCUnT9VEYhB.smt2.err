ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:29:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25517 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/UqCUnT9VEYhB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             53630
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2150    652   589/532/104      96/13     9   18   18.68)
(smt.stats    1    202   3037   2148   902/784/104     223/16     9   18   18.78)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&16383
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&16383
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&2
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&2
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&4
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&1
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262144 := 524286 << 14
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&0
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #109))) 16384 := 131080 << 15
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262144 := 262146 << 14
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&0
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #109))) 16384 := 131080 << 15
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262144 := 262160 << 14
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 16383&0
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #109))) 16384 := 131080 << 15
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 16383 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 16382 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 4 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 8 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 16 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 32 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 64 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 128 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 256 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 512 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1024 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 2048 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 4096 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 8192 := 16383&131072
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 4 := 16383&32770
(smt.stats    2    313   4026   4089  1119/1022/168     469/63    12   36   19.26)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 4 := 16383&8
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 4 := 16383&8
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 8 := 16383&8
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262152 := 262158 << 14
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 4 := 32767&8
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 8 := 32767&8
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262152 := 262154 << 15
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 4 := 32767&8
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 8 := 32767&8
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262152 := 262154 << 15
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262144 := 262152 << 15
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&0
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #109))) 32768 := 131076 << 16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262144 := 262152 << 15
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&0
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #109))) 32768 := 131076 << 16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 262144 := 262150 << 15
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&65536
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #109))) 131073 := 131073 << 16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&65536
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #109))) 131074 := 131073 << 16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&65536
shl: (shl[18] (bv2int %0) (+ 18 (* 262143 #109))) 131074 := 131073 << 16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 32767 := 32767&196608
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 32766 := 32767&196608
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 32767 := 32767&196608
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 32766 := 32767&196608
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 4 := 32767&196608
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 8 := 32767&196608
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 16 := 32767&196608
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 32 := 32767&196608
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 32767&196608
band: (band[18] (if (= #113 17) 0 (if #354 1 #397)) (shl[18] (bv2int %0) (+ 18 #400))) 64 := 32767&196608
(smt.stats    3    414   4869   5226  1312/1108/171     656/70    13   39   19.55)
(smt.stats    4    525   6579   8374  1388/1260/229     847/192    16   71   19.45)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&32
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&32
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&64
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&64
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&32
(smt.stats    5    647   9040  17007  1487/1326/233    1110/233    17   77   19.55)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&64
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&64
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&64
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&160
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&128
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&128
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&256
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&512
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&256
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&512
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&1024
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&256
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&512
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&1024
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&2048
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&512
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&1024
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&2048
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&256
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&4096
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&2048
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&1024
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&4096
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&8192
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&16384
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&16384
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&32768
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&32768
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&65536
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 65536 := 262136 << 16
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&4096
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&4096
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&512
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&128
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&256
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&256
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&4096
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 65535&4096
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  10451  20723  1584/1460/381    1324/285    19  103   19.95)
(smt.stats    7    859  12862  26409  1642/1495/381    1496/323    20  106   20.04)
(smt.stats    8    981  15241  29858  1772/1635/383    1729/347    21  106   20.15)
(smt.stats    9   1115  21750  39612  1837/1702/384    2050/475    23  110   20.35)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&98324
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&98325
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&98323
(smt.stats   10   1216  24704  47097  1884/1738/386    2244/506    25  110   20.64)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&98321
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&65545
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&65545
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&49153
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&16385
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&32769
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&32769
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&32769
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&32769
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&16385
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&16385
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&16385
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&65537
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&65537
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&65537
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&65537
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&65537
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&8193
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&8193
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&8193
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&257
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&257
(smt.stats   11   1327  26826  51450  2095/1754/391    2480/516    25  110   20.74)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&131073
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 268304385 := 262144 << 17
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&131073
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 268566529 := 262144 << 17
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 131071&131073
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 268566529 := 262144 << 17
(smt.stats   12   1449  28357  59146  2171/1956/441    2865/569    26  121   20.83)
(smt.stats   13   1583  30368  66741  2249/2058/452    3197/690    27  122   20.93)
(smt.stats   14   1730  33868  75275  2387/2179/454    3703/840    29  137   21.03)
(smt.stats   15   1831  37544  86186  2573/2305/456    4233/958    30  144   21.13)
ramon: poll                 wall=1.000s usage=0.939s mem=22420KiB load=0.94 rootload=0.93
(smt.stats   16   1942  40329  96539  2674/2442/456    4776/960    30  144   21.22)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   17   2064  43026 109652  2692/2555/475    5305/1238    32  221   21.42)
(smt.stats   18   2198  45343 126231  2846/2581/475    5625/1245    32  221   21.51)
(smt.stats   19   2345  47980 149992  2923/2731/478    6039/1340    33  247   21.73)
(smt.stats   20   2506  49878 165741  3031/2861/486    6717/1492    35  277   22.01)
(smt.stats   21   2607  52192 175966  3126/2884/488    7013/1502    35  277   22.11)
(smt.stats   22   2718  53996 182443  3234/2962/488    7351/1609    36  293   22.21)
(smt.stats   23   2840  56069 188664  3266/3079/490    7559/1610    36  293   22.30)
(smt.stats   24   2974  58142 203648  3300/3126/493    7977/1651    37  306   22.30)
(smt.stats   25   3121  61049 218436  3338/3159/496    8283/1784    38  312   22.41)
(smt.stats   26   3282  64252 229906  3425/3226/498    8587/1812    39  319   22.60)
(smt.stats   27   3459  68123 251889  3457/3265/501    9422/1858    40  333   22.70)
(smt.stats   28   3560  70589 260875  3480/3272/505   10004/1859    40  333   22.80)
ramon: poll                 wall=2.000s usage=1.938s mem=24144KiB load=1.00 rootload=1.00
(smt.stats   29   3672  73260 275559  3501/3309/507   10758/2219    41  394   22.89)
(smt.stats   30   3794  77052 298224  3514/3320/512   11372/2338    42  466   23.08)
(smt.stats   31   3928  79976 308210  3609/3365/513   11768/2346    42  466   23.08)
(smt.stats   32   4075  83196 323850  3672/3422/513   12279/2348    42  466   23.28)
(smt.stats   33   4236  86284 337340  3725/3518/516   12629/2482    43  468   23.28)
(smt.stats   34   4413  89938 361091  3841/3563/516   13125/2488    43  468   23.38)
(smt.stats   35   4607  91467 381085  3867/3671/516   13792/2537    44  508   23.47)
(smt.stats   36   4708  94925 392456  3912/3707/517   14752/2543    44  508   23.57)
ramon: poll                 wall=3.000s usage=2.938s mem=24880KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   37   4819  98412 405166  3965/3742/517   14923/2732    45  510   23.57)
(smt.stats   38   4941 100961 414770  4019/3784/517   15419/2737    45  510   23.67)
(smt.delete-inactive-clauses  :num-deleted-clauses 58)
(smt.stats   39   5075 103985 430866  4053/3843/517   16029/2739    45  510   23.96)
(smt.stats   40   5222 110522 461102  4056/3862/517   16301/2739    45  510   23.96)
(smt.stats   41   5383 114399 482494  4086/3873/519   17059/2884    46  529   23.96)
(smt.stats   42   5560 115768 490409  4145/3913/519   17294/2888    46  529   23.96)
(smt.stats   43   5754 118108 520870  4286/3966/519   17569/2888    46  529   24.05)
(smt.stats   44   5967 121542 555326  4402/4176/520   17885/3013    47  554   24.05)
(smt.stats   45   6068 123574 571259  4414/4214/520   18165/3013    47  554   24.15)
ramon: poll                 wall=4.000s usage=3.938s mem=25808KiB load=1.00 rootload=0.99
(smt.stats   46   6179 125764 584438  4573/4223/521   18377/3066    48  576   24.34)
(smt.stats   47   6301 128143 612214  4841/4406/521   18753/3073    48  576   24.34)
(smt.stats   48   6435 132537 650934  4849/4652/525   19305/3128    49  576   24.34)
(smt.stats   49   6582 137772 693145  4854/4655/525   19512/3129    49  576   24.45)
(smt.stats   50   6743 140359 713457  4900/4667/525   19752/3238    50  628   24.45)
(smt.stats   51   6920 141416 731188  4905/4708/525   20144/3238    50  628   24.45)
(smt.stats   52   7114 144809 754286  4938/4711/525   21145/3243    50  628   24.65)
ramon: poll                 wall=5.000s usage=4.937s mem=25988KiB load=1.00 rootload=1.00
(smt.stats   53   7327 152579 795909  5054/4797/525   21716/3247    50  628   24.74)
(smt.stats   54   7561 157875 812316  5142/4908/526   22398/3550    51  631   24.74)
(smt.stats   55   7662 159348 821586  5222/4981/526   22764/3551    51  631   24.86)
(smt.stats   56   7773 162118 834486  5314/5048/526   23204/3555    51  631   24.95)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   57   7895 166027 850789  5378/5126/526   23406/3558    51  631   24.95)
(smt.stats   58   8029 168286 871331  5388/5191/527   24159/3767    52  633   25.05)
(smt.stats   59   8176 170976 905576  5414/5206/528   24508/3768    52  633   25.05)
ramon: poll                 wall=6.000s usage=5.936s mem=26444KiB load=1.00 rootload=1.00
(smt.stats   60   8337 175598 950397  5420/5221/529   24782/3768    52  633   25.16)
(smt.stats   61   8514 176854 974945  5426/5229/529   25686/3830    53  664   25.25)
(smt.stats   62   8708 179833 1007502  5439/5242/531   26594/3830    53  664   25.35)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8921 184564 1058601  5524/5292/531   27172/3993    54  712   25.54)
(smt.stats   64   9155 191106 1087193  5564/5345/531   27654/3993    54  712   25.66)
(smt.stats   65   9412 195428 1135800  5597/5351/531   28260/3996    54  712   25.94)
(smt.stats   66   9513 197330 1150319  5607/5391/531   28808/3996    54  712   26.04)
(smt.stats   67   9624 200654 1162345  5624/5401/531   29122/3999    54  712   26.04)
ramon: poll                 wall=7.000s usage=6.936s mem=27364KiB load=1.00 rootload=1.00
(smt.stats   68   9746 204175 1186894  5697/5429/531   29813/4002    54  712   26.13)
(smt.stats   69   9880 208162 1207135  5794/5502/531   30319/4008    54  712   26.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 751)
(smt.stats   70  10027 210825 1224089  5909/5632/531   30599/4012    54  712   26.43)
(smt.stats   71  10188 216781 1269633  5931/5714/532   31580/4313    55  739   26.43)
(smt.stats   72  10365 219185 1282259  5965/5727/532   31905/4314    55  739   26.53)
(smt.stats   73  10559 222926 1304850  6040/5780/532   32772/4317    55  739   26.63)
ramon: poll                 wall=8.002s usage=7.938s mem=27940KiB load=1.00 rootload=1.00
(smt.stats   74  10772 230525 1344281  6183/5834/532   33955/4325    55  739   26.72)
(smt.stats   75  11006 234264 1374301  6406/6042/532   34761/4331    55  739   26.92)
(smt.stats   76  11263 241762 1426022  6609/6197/532   35552/4337    55  739   27.01)
ramon: poll                 wall=9.000s usage=8.936s mem=28484KiB load=1.00 rootload=1.00
(smt.stats   77  11545 248081 1463609  6939/6666/534   36154/4683    56  741   27.11)
(smt.stats   78  11646 249789 1479581  7019/6734/534   36328/4684    56  741   27.11)
(smt.stats   79  11757 251832 1511347  7155/6831/534   36567/4685    56  741   27.30)
(smt.stats   80  11879 255169 1558929  7280/6950/534   36766/4769    57  742   27.30)
(smt.stats   81  12013 257162 1585126  7329/7080/534   37150/4772    57  742   27.30)
(smt.stats   82  12160 259012 1616207  7373/7127/534   37638/4773    57  742   27.40)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12321 261822 1653123  7541/7201/534   38123/4774    57  742   27.40)
ramon: poll                 wall=10.000s usage=9.935s mem=28848KiB load=1.00 rootload=1.00
(smt.stats   84  12498 264234 1685496  7607/7341/534   38794/4776    57  742   27.50)
(smt.stats   85  12692 267877 1727965  7721/7425/535   39114/4927    58  761   27.60)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 38 := 127&32768
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 36 := 127&32768
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 36 := 127&32768
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 32 := 127&32768
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 8 := 127&32768
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 8 := 127&32768
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 127&32768
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 1073774592 := 327682 << 7
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 127&32768
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 1073774592 := 327682 << 7
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 0 := 127&32768
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 1073774592 := 327682 << 7
(smt.stats   86  12905 271265 1748288  7933/7647/546   39659/4932    58  761   27.60)
(smt.stats   87  13139 274253 1781705  8115/7757/553   40230/4934    58  761   27.86)
ramon: poll                 wall=11.000s usage=10.934s mem=29392KiB load=1.00 rootload=1.00
(smt.stats   88  13396 279458 1887472  8216/7937/553   40576/4935    58  761   27.86)
(smt.stats   89  13678 283794 1946552  8368/8050/554   41195/5080    59  808   28.11)
(smt.stats   90  13988 288128 2015732  8478/8157/554   42273/5081    59  808   28.20)
(smt.stats   91  14089 289529 2030855  8510/8289/554   42762/5081    59  808   28.31)
(smt.stats   92  14200 292715 2046963  8525/8295/555   43518/5324    60  809   28.41)
(smt.stats   93  14322 296972 2074736  8554/8333/560   44652/5324    60  809   28.50)
(smt.stats   94  14456 299177 2109423  8577/8352/560   45485/5324    60  809   28.90)
ramon: poll                 wall=12.000s usage=11.934s mem=30288KiB load=1.00 rootload=1.00
(smt.stats   95  14603 301153 2123035  8593/8358/560   46011/5326    60  809   28.99)
(smt.stats   96  14764 304549 2150077  8643/8378/560   46421/5330    60  809   28.99)
(smt.stats   97  14941 307750 2201518  8697/8472/561   47319/5673    61  879   28.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 76)
(smt.stats   98  15135 312604 2239172  8761/8505/563   48480/5678    61  879   29.20)
(smt.stats   99  15348 318330 2280310  8864/8542/563   49262/5684    61  879   29.30)
(smt.stats  100  15582 321911 2314701  8933/8682/563   49834/5938    62  882   29.39)
ramon: poll                 wall=13.000s usage=12.934s mem=30928KiB load=1.00 rootload=1.00
(smt.stats  101  15839 326736 2401916  9083/8719/563   50430/5941    62  882   29.49)
(smt.stats  102  16121 332014 2471730  9219/8871/563   52256/5945    62  882   29.68)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  103  16431 339545 2541430  9520/9295/564   54119/6391    63  885   29.97)
ramon: poll                 wall=14.000s usage=13.933s mem=31508KiB load=1.00 rootload=1.00
(smt.stats  104  16771 347267 2599733  9595/9300/565   55126/6394    63  885   30.16)
(smt.stats  105  16872 349878 2632656  9643/9402/565   55744/6395    63  885   30.16)
(smt.stats  106  16983 351832 2651068  9692/9426/565   56022/6395    63  885   30.16)
(smt.stats  107  17105 354860 2678379  9784/9481/565   56433/6397    63  885   30.25)
(smt.stats  108  17239 357025 2692197  9838/9565/565   56940/6567    64  886   30.35)
ramon: poll                 wall=15.000s usage=14.933s mem=31968KiB load=1.00 rootload=1.00
(smt.stats  109  17386 362176 2768139  9877/9616/565   58452/6567    64  886   30.45)
(smt.stats  110  17547 366116 2794187  9934/9707/566   59440/6567    64  886   30.54)
(smt.stats  111  17724 372115 2841721 10022/9721/566   59857/6567    64  886   30.73)
(smt.stats  112  17918 374065 2903828 10054/9822/566   60262/6823    65  922   30.73)
ramon: poll                 wall=16.000s usage=15.933s mem=32824KiB load=1.00 rootload=1.00
(smt.stats  113  18131 379701 2979954 10100/9841/567   64571/6825    65  922   31.37)
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 1&243849
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 243849 := 451438 << 1
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 1&243849
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 505993 := 451438 << 1
band: (band[18] (if (= #215 31) 0 (if #331 1 #450)) (shl[32] (* 2 #198) (mod #465 32))) 1 := 1&243849
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 17 #457 #461) 32)) 505993 := 451438 << 1
(smt.stats  114  18365 383575 3048408 10238/9906/567   65900/6830    65  922   31.57)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  115  18622 387713 3087748 10337/10027/573   67121/7066    66  932   31.77)
(smt.stats  116  18904 392191 3142183 10514/10123/573   68090/7070    66  932   31.86)
ramon: poll                 wall=17.000s usage=16.932s mem=33600KiB load=1.00 rootload=1.00
(smt.stats  117  19214 399688 3228002 10708/10331/574   70678/7075    66  932   32.15)
(smt.stats  118  19554 406491 3293048 10920/10537/574   72775/7406    67  992   32.44)
ramon: poll                 wall=18.002s usage=17.933s mem=33992KiB load=1.00 rootload=1.00
(smt.stats  119  19927 413588 3429214 10969/10703/574   74442/7407    67  992   32.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 93)
(smt.stats  120  20028 415245 3449752 10990/10750/574   74952/7407    67  992   32.63)
(smt.stats  121  20139 417898 3474628 11026/10784/574   75178/7412    67  992   32.63)
(smt.stats  122  20261 421162 3512615 11056/10813/575   75428/7750    68  994   32.63)
(smt.stats  123  20395 425197 3559910 11106/10837/575   76139/7750    68  994   32.73)
(smt.stats  124  20542 427079 3599602 11121/10889/575   77148/7750    68  994   32.82)
(smt.stats  125  20703 429531 3663385 11121/10893/575   77312/7750    68  994   32.82)
ramon: poll                 wall=19.000s usage=18.931s mem=34372KiB load=1.00 rootload=1.00
(smt.stats  126  20880 431876 3733705 11121/10893/575   77752/7750    68  994   33.27)
(smt.stats  127  21074 434485 3797118 11123/10895/575   78665/7750    68  994   33.27)
(smt.stats  128  21287 443961 3968076 11124/10896/575   79458/7750    68  994   33.38)
(smt.stats  129  21521 445341 4020639 11132/10896/575   80227/7750    68  994   33.57)
ramon: poll                 wall=20.000s usage=19.930s mem=35300KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:29:34 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.995s
ramon: group.utime          19.987s
ramon: group.stime          0.008s
ramon: group.mempeak        35560KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.00
