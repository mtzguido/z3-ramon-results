ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:21:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29326 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/NyHWwGaHKRZV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             394227
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  69       0    18.53   0.00)
(sat.stats    102    622    0   224/224   102/31  69       0    18.84   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 289 :time 0.00)
(sat.stats    102    622    0   224/224   102/31  69       0    18.84   0.01)
(sat.stats    102    622    0   224/224   102/31  69       0    18.84   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 356618.84 :time 0.00)
(sat.stats    102    622    0   226/226    40/30  69       0    18.84   0.01)
(sat.stats    105    637    1   226/226    43/33  69       0    18.84   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    180   1630    2   226/226   118/91  69       0    18.94   0.01)
(sat.stats    316   5554    3   226/226   254/188  69       0    19.03   0.02)
(sat.stats    319   5618    4   226/226   257/188  69       0    19.03   0.02)
(sat.stats    322   5689    5   226/226   260/190  69       0    19.03   0.02)
(sat.stats    325   5770    6   226/226   263/190  69       0    19.03   0.02)
(sat.stats    328   5900    7   226/226   266/190  69       0    19.03   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    331   5959    8   226/226   269/192  69       0    19.03   0.02)
(sat.stats    334   5994    9   226/226   272/195  69       0    19.03   0.02)
(sat.stats    337   6148   10   226/226   275/195  69       0    19.03   0.02)
(sat.stats    340   6349   11   226/226   278/195  69       0    19.03   0.03)
(sat.stats    344   6521   12   226/226   282/196  69       0    19.23   0.03)
(sat.stats    347   6600   13   226/226   285/199  69       0    19.23   0.03)
(sat.stats    350   6660   14   226/226   288/202  69       0    19.23   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1036 :time 0.00)
ramon: poll                 wall=1.000s usage=0.998s mem=21780KiB load=1.00 rootload=0.99
ramon: poll                 wall=2.000s usage=1.998s mem=22292KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.998s mem=22804KiB load=1.00 rootload=1.00
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1211  16285   28  9308/9307  1247/315  76       0    21.76   3.17)
(sat.stats   1215  16323   29  9320/9319  1253/317  76       0    21.76   3.18)
(sat.stats   1218  16341   30  9320/9319  1258/317  76       0    21.76   3.19)
(sat.stats   1599  18902  147 11613/11612  1687/347  76       0    22.29   3.76)
ramon: poll                 wall=4.000s usage=3.998s mem=23756KiB load=1.00 rootload=1.00
(sat.stats   2638  45175  222 16770/16769  2912/436  76       0    25.09   4.97)
ramon: poll                 wall=5.000s usage=4.998s mem=26060KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 17592 :time 0.00)
lshr: (lshr[46] (bv2int %0) (+ 46 (* 70368744177663 #64))) 70368744177663 := 70368744177663 >>l 27
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 0&13663556599808
lshr: (lshr[64] (* 131072 (bv2int %0)) (mod (+ 63 #570 #574) 64)) 22136 := 0 >>l 44
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 1&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 1 := 13663556599808&1
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 2&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 2 := 13663556599808&2
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 1 := 5&13663556599808
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 2 := 5&13663556599808
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 5&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 4 := 13663556599808&5
 (sat-cleaner :elim-literals 11 :elim-clauses 1 :cost 18806 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 248400 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 8 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 509376 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 32 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 128 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 72448 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 366080 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 495616 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 3072 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 2048 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 139264 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 262144 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 16384 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 196608 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 32768 := 13663556599808&524287
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #467)) (if (= #67 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 524287&13663556599808
band: (band[46] (if (= #285 63) 328591616759505360118004364345344 (if #443 164295808379752680059002182172672 #440)) (lshr[64] (* 131072 #55) (mod #577 64))) 131072 := 13663556599808&524287
 (sat-cleaner :elim-literals 793 :elim-clauses 0 :cost 19466 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 20583 :time 0.00)
ramon: poll                 wall=6.000s usage=5.997s mem=27516KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.997s mem=54744KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=64152KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=86928KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.997s mem=92816KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.995s mem=97900KiB load=1.00 rootload=0.98
ramon: poll                 wall=12.000s usage=11.995s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.995s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.995s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.995s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.995s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.995s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.994s mem=149MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.994s mem=151MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.994s mem=153MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:22:16 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.050s
ramon: group.total          20.010s
ramon: group.utime          19.950s
ramon: group.stime          0.060s
ramon: group.mempeak        182MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.00
