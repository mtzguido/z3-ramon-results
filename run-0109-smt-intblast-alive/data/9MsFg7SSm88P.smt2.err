ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:39:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42526 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9MsFg7SSm88P.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2828148
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5359    384  1248/1112/101      91/13     8   20   19.24)
(smt.stats    1    202   6761   1837  2556/2314/103     218/45     9   22   19.43)
(smt.stats    2    313  11152   4805  2599/2350/103     354/47     9   22   19.66)
(smt.stats    3    414  14642   8781  2609/2364/117     439/81    12   40   19.75)
(smt.stats    4    525  16939  11297  2654/2406/117     514/81    12   40   19.75)
(smt.stats    5    647  19557  15232  2735/2419/117     645/83    12   40   19.87)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  21742  17538  2782/2504/117     754/85    12   40   19.87)
(smt.stats    7    859  24218  21553  2813/2555/117     872/85    12   40   19.97)
ramon: poll                 wall=1.000s usage=0.811s mem=21480KiB load=0.81 rootload=0.80
(smt.stats    8    981  24634  21980  2843/2583/117    1000/90    12   40   20.35)
(smt.stats    9   1115  29107  28131  3182/2936/119    1154/120    13   45   20.35)
(smt.stats   10   1216  31766  31839  3201/2941/119    1252/120    13   45   20.35)
(smt.stats   11   1327  34059  36763  3224/2961/119    1450/120    13   45   20.35)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  35496  39877  3303/2992/119    1689/138    13   45   20.35)
(smt.stats   13   1583  38520  43006  3353/3080/119    1927/140    13   45   20.35)
(smt.stats   14   1730  42225  45726  3525/3138/119    2111/145    13   45   20.48)
(smt.stats   15   1831  43861  47985  3581/3332/121    2230/361    14   51   20.48)
(smt.stats   16   1942  46079  51146  3599/3351/126    2355/380    16   57   20.48)
(smt.stats   17   2064  47714  54194  3641/3352/126    2521/380    16   57   20.48)
(smt.stats   18   2198  50535  57916  3668/3404/126    2653/411    17   60   20.58)
ramon: poll                 wall=2.000s usage=1.811s mem=21928KiB load=1.00 rootload=1.00
(smt.stats   19   2345  54077  64417  3678/3426/126    2821/411    17   60   20.58)
(smt.stats   20   2506  56160  70223  3710/3440/126    2980/411    17   60   20.58)
(smt.stats   21   2607  59394  72800  3714/3465/126    3080/411    17   60   20.85)
(smt.stats   22   2718  61674  77009  3736/3469/126    3195/412    17   60   20.85)
(smt.stats   23   2840  63402  83410  3747/3491/127    3317/430    18   60   20.85)
(smt.stats   24   2974  64944  87218  3755/3507/127    3447/430    18   60   20.85)
(smt.stats   25   3121  65781  92582  3775/3511/127    3597/431    18   60   20.85)
(smt.stats   26   3282  68189  99398  3820/3544/127    3757/431    18   60   20.85)
(smt.stats   27   3459  70649 103818  3831/3582/127    3937/431    18   60   20.96)
(smt.stats   28   3560  71283 109727  3834/3585/134    4063/450    19   63   20.96)
(smt.stats   29   3671  73057 112610  3841/3590/134    4169/450    19   63   20.96)
(smt.stats   30   3793  75263 119940  3844/3595/134    4265/460    20   87   20.96)
(smt.stats   31   3927  77031 126173  3845/3596/134    4399/460    20   87   20.96)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  79871 133204  3846/3598/136    4540/461    21   91   21.17)
(smt.stats   33   4235  82196 139043  3855/3599/136    4700/461    21   91   21.17)
(smt.stats   34   4412  84727 146347  3857/3609/136    4880/461    21   91   21.17)
ramon: poll                 wall=3.000s usage=2.810s mem=22600KiB load=1.00 rootload=1.00
(smt.stats   35   4606  86950 153187  3869/3614/136    5081/461    21   91   21.17)
(smt.stats   36   4707  88007 159156  3877/3622/136    5187/461    21   91   21.27)
(smt.stats   37   4818  90899 172644  3883/3633/136    5302/461    21   91   21.27)
(smt.stats   38   4940  91787 180976  3883/3635/136    5425/461    21   91   21.27)
(smt.delete-inactive-clauses  :num-deleted-clauses 117)
(smt.stats   39   5074  94175 187582  3884/3636/136    5443/461    21   91   21.27)
(smt.stats   40   5221  97094 198407  3884/3636/136    5590/461    21   91   21.27)
(smt.stats   41   5382  98620 202384  3885/3637/136    5750/461    21   91   21.27)
(smt.stats   42   5559 100884 209150  3885/3637/136    5942/461    21   91   21.27)
(smt.stats   43   5754 103212 219289  3886/3638/136    6142/461    21   91   21.39)
(smt.stats   44   5967 106063 222751  3888/3640/136    6363/461    21   91   21.39)
(smt.stats   45   6068 107022 226500  3889/3641/136    6509/461    21   91   21.39)
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&4038
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&4038
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&4038
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 256 := 256&4038
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 4038 := 4038 << 8
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 256 := 256&4038
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 4038 := 4038 << 8
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&4038
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 256 := 256&4038
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 4038 := 4038 << 8
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 256 := 256&4039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 4039 := 4038 << 8
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033471
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 1033471 := 4038 << 8
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4503599627370495 := 2019 << 9
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4503599627370495 := 2019 << 9
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4503599627370495 := 2019 << 9
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4503599627368621 := 2019 << 9
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4503599627368621 := 2019 << 9
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 1 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 2 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 4 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 8 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 16 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 32 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 64 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 128 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 256 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 15 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 14 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 12 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 8 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 12 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 2 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 1 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 64 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 256 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 128 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 32 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 256&1033728
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 16 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 8 := 256&1033728
(smt.stats   46   6179 107760 228670  4042/3645/136    6627/472    21   91   21.72)
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 5 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 16 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 32 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 64 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 128 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 256 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 128 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 128 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 256 := 256&1033728
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 256 := 256&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 256 := 606 << 8
(smt.stats   47   6301 109363 235028  4067/3804/295    6779/518    22  115   21.82)
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1 := 2048&79
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 2048&79
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 79 := 80 << 11
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 2048&79
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 79 := 80 << 11
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 2048&79
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 79 := 80 << 11
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 512&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 1 := 84 << 9
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 512&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 1 := 84 << 9
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 1024&81
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 81 := 82 << 10
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 1024&81
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 81 := 82 << 10
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 1024&81
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 81 := 82 << 10
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 1024&81
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 81 := 82 << 10
(smt.stats   48   6435 112162 241250  4114/3856/313    6919/554    23  137   21.93)
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1 := 17592186044416&6773
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 17592186044416&6773
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 6773 := 6774 << 44
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 17592186044416&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 0 := 6774 << 44
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 17592186044416&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 0 := 6774 << 44
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 17592186044416&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 0 := 6774 << 44
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 17592186044416&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 0 := 6774 << 44
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 17592186044416&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 0 := 6774 << 44
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17592186044416 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17592186044416 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17592186043904 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 512 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1024 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2048 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4096 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 8192 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 16384 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 32768 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 65536 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 131072 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 262144 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 524288 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1048576 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2097152 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4194304 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 8388608 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 16777216 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 33554432 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 67108864 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 134217728 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 268435456 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 536870912 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1073741824 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2147483648 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4294967296 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 8589934592 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17179869184 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 34359738368 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 68719476736 := 17592186044416&2075877953241088
(smt.stats   49   6582 114612 245185  4411/3880/313    7094/558    23  137   22.78)
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 67108864 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 67108864 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17179869184 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 68719476736 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 137438953472 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 274877906944 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 549755813888 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1099511627776 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2199023255552 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4398046511104 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 8796093022208 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17592186044416 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 8727373545472 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 137438953472 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 274877906944 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 549755813888 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1099511627776 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2199023255552 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4398046511104 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 549755813888 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1099511627776 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1099511627776 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17179869184 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17179869184 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17179869184 := 17592186044416&2075877953241088
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 34359738368 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 34359738368 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 34359738368 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 68719476736 := 35184372088832&2040693581152256
(smt.stats   50   6743 118392 250288  4476/4074/475    7420/564    23  137   22.78)
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 68719476736 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 68719476736 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 68719476736 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 137438953472 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 17592186044416 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4398046511104 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1099511627776 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1099511627776 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2199023255552 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2199023255552 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2199023255552 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 8796093022208 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 35184372088832 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 35184372088832 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 35184372088832 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 274877906944 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 274877906944 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1073741824 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2147483648 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 4294967296 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 8589934592 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 3221225472 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2147483648 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 12884901888 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 12884901888 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1073741824 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1073741824 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1073741824 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 536870912 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 536870912 := 35184372088832&2040693581152256
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 549755813888 := 35184372088832&2040693581152256
ramon: poll                 wall=4.000s usage=3.810s mem=24204KiB load=1.00 rootload=0.99
(smt.stats   51   6920 127313 267102  4533/4253/568    7770/701    24  176   22.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7114 131815 274593  4561/4256/571    8015/814    25  199   22.97)
(smt.stats   53   7327 135286 281614  4861/4319/571    8332/817    25  199   23.76)
ramon: poll                 wall=5.000s usage=4.810s mem=25304KiB load=1.00 rootload=1.00
(smt.stats   54   7561 142814 302881  5066/4801/578    8659/907    26  221   23.95)
(smt.stats   55   7662 146178 311568  5100/4819/579    8761/923    27  231   23.95)
(smt.stats   56   7773 154988 324454  5116/4848/581    8882/925    27  231   24.31)
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&4503599627369984
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&4503599627369984
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&4503599627369984
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&2111062325329920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 9225483099180105728 := 2103636 << 37
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&2111062325329920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 9225483099180105728 := 2103636 << 37
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&2111062325329920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 9225483099180105728 := 2103636 << 37
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&2111062325329920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #784 #788) 64)) 9225483099180105728 := 2103636 << 37
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1048064 := 1051818 << 38
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1048064 := 1051818 << 38
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1048064 := 1051818 << 38
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1048064 := 1051818 << 38
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 64 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 128 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 128 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 1 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 1 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 1 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 2 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 512 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 1024 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 2048 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 4096 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 8192 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 16384 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 32768 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 16384 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 65536 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 131072 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 262144 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 524288 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 1048576 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 2097152 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 2097152 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 4194304 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 8388608 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 16777216 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 33554432 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 67108864 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 134217728 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 268435456 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 536870912 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 1073741824 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 2147483648 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 4294967296 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 8589934592 := 137438953472&891154174312448
(smt.stats   57   7895 161207 334867  5419/4887/587    9069/960    28  241   25.59)
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 4294967296 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 8589934592 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 17179869184 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 34359738368 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 17179869184 := 137438953472&891154174312448
band: (band[52] (if (= #377 63) 1 (if #585 2 #777)) (shl[64] (* 2 #102) (mod #792 64))) 0 := 137438953472&891154174312448
band: (band[52] (if (= #108 51) 1 (if #605 2 #705)) (shl[52] (bv2int %0) (+ 52 #708))) 34359738368 := 137438953472&891154174312448
(smt.stats   58   8029 164974 344282  5373/5100/754    9538/1127    29  285   25.70)
ramon: poll                 wall=6.000s usage=5.810s mem=27376KiB load=1.00 rootload=0.99
(smt.stats   59   8176 178763 366595  5459/5130/754    9755/1132    29  285   26.02)
(smt.stats   60   8338 184890 389714  5536/5233/759    9921/1185    30  287   26.02)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8515 192465 408934  5574/5287/763   10231/1199    31  295   26.12)
(smt.stats   62   8709 200191 428193  5589/5302/763   10502/1199    31  295   26.21)
ramon: poll                 wall=7.000s usage=6.810s mem=28160KiB load=1.00 rootload=1.00
(smt.stats   63   8922 208643 441375  5756/5313/769   10750/1314    32  304   26.41)
(smt.stats   64   9156 219096 462761  6075/5682/781   11126/1319    33  367   26.80)
ramon: poll                 wall=8.000s usage=7.809s mem=28436KiB load=1.00 rootload=1.00
(smt.stats   65   9413 225565 479447  6506/5775/781   11377/1405    34  400   26.89)
(smt.stats   66   9514 227828 489377  6673/6328/782   11635/1405    34  400   27.09)
(smt.stats   67   9625 233856 511101  6683/6330/783   11820/1433    35  403   27.09)
ramon: poll                 wall=9.000s usage=8.809s mem=28792KiB load=1.00 rootload=1.00
(smt.stats   68   9747 240193 536170  6705/6343/783   12033/1433    35  403   27.11)
(smt.stats   69   9881 246885 559462  6784/6365/783   12315/1470    36  404   27.21)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028 249863 570556  6817/6472/788   12761/1502    37  417   27.42)
(smt.stats   71  10189 256510 593008  7044/6638/792   13127/1502    37  417   27.61)
ramon: poll                 wall=10.000s usage=9.809s mem=29408KiB load=1.00 rootload=1.00
(smt.stats   72  10366 263010 609671  7141/6662/794   13323/1611    38  434   27.96)
(smt.stats   73  10560 269189 627131  7271/6850/801   13818/1673    39  447   28.06)
ramon: poll                 wall=11.000s usage=10.809s mem=30436KiB load=1.00 rootload=1.00
(smt.stats   74  10773 276524 650989  7575/6968/804   14144/1692    40  466   28.64)
ramon: poll                 wall=12.005s usage=11.817s mem=30616KiB load=1.00 rootload=1.01
(smt.stats   75  11007 278257 653435  7806/7333/804   14399/1694    40  466   28.92)
ramon: poll                 wall=13.005s usage=12.817s mem=30644KiB load=1.00 rootload=1.00
(smt.stats   76  11264 290865 699901  9099/8492/806   14821/1763    41  468   29.01)
ramon: poll                 wall=14.000s usage=13.808s mem=31008KiB load=1.00 rootload=0.99
(smt.stats   77  11546 303384 753405  9257/8819/811   15565/1873    42  479   29.40)
(smt.stats   78  11647 308860 772884  9312/8828/811   15760/1873    42  479   29.40)
(smt.stats   79  11758 316480 804532  9323/8889/813   15917/1933    44  488   29.40)
ramon: poll                 wall=15.000s usage=14.808s mem=31268KiB load=1.00 rootload=1.00
(smt.stats   80  11880 321682 822245  9411/8957/816   16137/1933    44  488   29.52)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   81  12014 328085 840621  9456/8997/825   16661/2103    45  525   29.75)
(smt.stats   82  12161 344539 868351  9506/9050/826   16863/2197    46  526   29.84)
ramon: poll                 wall=16.000s usage=15.808s mem=31708KiB load=1.00 rootload=1.00
(smt.stats   83  12322 365392 910717  9548/9064/826   17082/2198    46  526   29.97)
ramon: poll                 wall=17.005s usage=16.815s mem=31736KiB load=1.00 rootload=1.01
(smt.stats   84  12499 379634 949564  9601/9117/827   17463/2226    47  527   30.07)
ramon: poll                 wall=18.000s usage=17.807s mem=32004KiB load=1.00 rootload=0.99
(smt.stats   85  12693 396316 977577  9726/9152/827   17807/2235    47  527   30.26)
ramon: poll                 wall=19.000s usage=18.807s mem=32452KiB load=1.00 rootload=1.00
(smt.stats   86  12906 409559 1017169  9958/9339/827   18384/2240    47  527   30.55)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   87  13140 431955 1069270  9983/9527/828   18831/2390    48  530   30.64)
(smt.stats   88  13397 446434 1113934  9989/9533/828   19275/2390    48  530   30.74)
ramon: poll                 wall=20.005s usage=19.814s mem=32708KiB load=1.00 rootload=1.01
ramon: end                  Tue Dec 24 14:39:33 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.020s
ramon: group.total          19.913s
ramon: group.utime          19.889s
ramon: group.stime          0.024s
ramon: group.mempeak        32968KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.103s
ramon: loadavg              0.99
