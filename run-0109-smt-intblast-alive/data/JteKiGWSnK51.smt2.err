ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:02:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41869 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JteKiGWSnK51.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2908573
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 1 := 4503599627370495 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 1 := 4503599627370495 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1 := 3&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 3 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 4 := 4&4
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 4 := 4&4
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 4 := 4&4
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 52 := 53 >>l 51
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1 := 53 >>l 51
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1 := 53 >>l 51
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1 := 53 >>l 51
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1 := 53 >>l 51
(smt.stats    0    101    612    546   182/170/137     114/32     6   32   18.47)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 11
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 11
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 11
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 10
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 10
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 10
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 2
(smt.stats    1    202   2417   3175   375/347/197     227/39    11   44   18.86)
(smt.stats    2    313   2977   3823   448/397/198     345/50    12   45   19.25)
(smt.stats    3    414   3312   4831   653/568/198     475/53    13   46   19.25)
(smt.stats    4    525   4923   6706   730/673/208     564/88    15   58   19.44)
(smt.stats    5    647   6532   9201   807/757/209     712/98    16   59   19.53)
(smt.stats :restarts  :decisions    :clauses/bin/units        :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions    )
(smt.stats    6    748   7684  11075   912/789/210     826/124    17   63   19.53)
(smt.stats    7    859   9477  13610  1025/981/214     957/159    19   68   19.63)
(smt.stats    8    981  10720  16696  1070/1023/216    1139/161    20   70   19.63)
ramon: poll                 wall=1.000s usage=0.996s mem=20792KiB load=1.00 rootload=0.98
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 2251799813684981 := 4503599627370492&2251799813684981
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 2251799813684982 := 4503599627370492&2251799813684982
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 2251799813684984 := 4503599627370492&2251799813684984
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 9007199254740988 := 4503599627370494 << 2
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1501199875790164 := 1501199875790164&2251799813684984
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1501199875790163 := 1501199875790164&2251799813684984
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&2251799813684984
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&2251799813684984
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&2251799813684984
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 6755399441055480 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&2251799813684984
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 6755399441055480 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&2251799813684984
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 6755399441055480 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 4503599627370495 := 1125899906842624 << 2
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 3002399751580331 := 1501199875790165 << 2
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 3002399751580331 := 1501199875790165 << 2
(smt.stats    9   1115  12758  19641  1144/1091/241    1312/236    22   77   19.82)
(smt.stats   10   1216  14298  22108  1221/1130/241    1436/253    23   81   19.82)
(smt.stats   11   1327  16081  25414  1322/1263/242    1556/260    24   83   19.82)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  17911  28415  1430/1282/242    1689/261    24   83   19.91)
(smt.stats   13   1583  19411  32707  1518/1433/244    1817/272    25   85   20.02)
(smt.stats   14   1730  20718  37556  1592/1500/244    1990/275    25   85   20.02)
(smt.stats   15   1831  21699  40716  1607/1550/246    2095/293    26   87   20.02)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370495&4366328
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 3002399751580327&4366320
(smt.stats   16   1942  22618  45997  1658/1584/253    2189/323    28  108   20.11)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1125899906842625&147450
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4503599627517946 := 4503599627517952 >>l 63
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1125899906842625&40954
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4503599627411450 := 4503599627411456 >>l 63
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1125899906842625&40954
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4503599627411450 := 4503599627411456 >>l 63
(smt.stats   17   2064  25298  51363  1759/1642/273    2334/337    28  108   20.21)
(smt.stats   18   2198  27092  53840  1967/1716/279    2509/366    29  119   20.31)
ramon: poll                 wall=2.000s usage=1.994s mem=21532KiB load=1.00 rootload=1.00
(smt.stats   19   2345  28996  57731  2150/1973/279    2675/371    29  119   20.31)
(smt.stats   20   2506  30976  64758  2287/2218/280    2841/395    31  120   20.50)
(smt.stats   21   2607  32457  67405  2351/2237/280    2948/397    31  120   20.50)
(smt.stats   22   2718  33890  70131  2453/2304/280    3060/399    31  120   20.50)
(smt.stats   23   2840  34974  73203  2681/2465/280    3186/402    31  120   20.59)
(smt.stats   24   2974  36726  79322  2813/2687/280    3324/402    31  120   20.68)
(smt.stats   25   3121  37904  82852  2842/2764/280    3477/402    31  120   20.68)
ramon: poll                 wall=3.000s usage=2.991s mem=21920KiB load=1.00 rootload=0.99
(smt.stats   26   3282  39816  89854  2929/2789/280    3665/402    31  120   20.68)
(smt.stats   27   3459  41235  92811  3006/2888/280    3881/406    31  120   21.35)
ramon: poll                 wall=4.000s usage=3.987s mem=22604KiB load=1.00 rootload=1.00
(smt.stats   28   3560  43547  97072  3265/3187/297    4152/464    32  161   21.26)
(smt.stats   29   3671  46096 100167  3302/3218/298    4333/464    32  161   21.26)
(smt.stats   30   3793  48954 105162  3414/3291/301    4487/631    33  170   21.26)
ramon: poll                 wall=5.000s usage=4.983s mem=22684KiB load=1.00 rootload=1.00
(smt.stats   31   3927  51433 109412  3702/3650/302    4641/675    34  177   21.35)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  53843 116312  3862/3810/304    4860/679    34  177   21.45)
(smt.stats   33   4235  57025 125383  3921/3820/304    5109/703    35  177   21.54)
ramon: poll                 wall=6.000s usage=5.980s mem=22868KiB load=1.00 rootload=0.99
(smt.stats   34   4412  60915 134213  4079/3909/305    5365/749    36  183   21.67)
ramon: poll                 wall=7.000s usage=6.979s mem=23044KiB load=1.00 rootload=1.00
(smt.stats   35   4606  64067 141569  4320/4067/308    5646/783    37  186   21.77)
(smt.stats   36   4707  66900 146734  4453/4277/308    5794/814    38  188   21.77)
(smt.stats   37   4818  69110 154507  4587/4432/308    5961/814    38  188   21.87)
ramon: poll                 wall=8.000s usage=7.974s mem=23140KiB load=0.99 rootload=1.00
(smt.stats   38   4940  71257 158396  4686/4565/308    6110/814    38  188   21.96)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  74124 163465  4817/4757/309    6419/901    39  188   21.96)
ramon: poll                 wall=9.000s usage=8.970s mem=23272KiB load=1.00 rootload=0.99
(smt.stats   40   5221  78108 170319  5005/4840/310    6611/904    39  188   22.06)
(smt.stats   41   5382  82408 177228  5170/5010/310    6832/906    39  188   22.25)
ramon: poll                 wall=10.000s usage=9.966s mem=23564KiB load=1.00 rootload=1.00
(smt.stats   42   5559  86807 188993  5352/5218/311    7097/957    40  188   22.25)
(smt.stats   43   5753  91314 196544  5497/5310/311    7348/992    41  192   22.34)
ramon: poll                 wall=11.000s usage=10.964s mem=23656KiB load=1.00 rootload=1.00
(smt.stats   44   5966  95538 209721  5814/5583/311    7629/992    41  192   22.34)
(smt.stats   45   6067  97094 214115  5863/5810/311    7763/992    41  192   22.44)
ramon: poll                 wall=12.000s usage=11.961s mem=23748KiB load=1.00 rootload=0.99
(smt.stats   46   6178 100054 223189  5910/5810/311    7905/992    41  192   22.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   47   6300 103524 232269  6001/5902/312    8086/1087    42  192   22.44)
(smt.stats   48   6434 106266 239731  6154/5964/312    8282/1087    42  192   22.53)
ramon: poll                 wall=13.000s usage=12.958s mem=23876KiB load=1.00 rootload=1.00
(smt.stats   49   6581 108712 250529  6258/6176/312    8476/1087    42  192   22.53)
(smt.stats   50   6742 112003 261797  6399/6229/312    8708/1087    42  192   22.63)
(smt.stats   51   6919 115618 274738  6547/6437/313    8961/1174    43  206   22.63)
(smt.stats   52   7113 119202 286731  6677/6503/313    9292/1176    43  206   22.72)
ramon: poll                 wall=14.000s usage=13.956s mem=24076KiB load=1.00 rootload=1.00
(smt.stats   53   7326 123451 304691  6888/6771/314    9557/1221    44  206   22.82)
(smt.stats   54   7560 128565 323388  6927/6853/315    9931/1275    45  208   22.92)
ramon: poll                 wall=15.000s usage=14.952s mem=24324KiB load=1.00 rootload=0.99
(smt.stats   55   7661 130303 326127  7025/6892/315   10050/1276    45  208   23.01)
(smt.stats   56   7772 132715 336064  7234/7099/315   10197/1277    45  208   23.11)
ramon: poll                 wall=16.000s usage=15.950s mem=24448KiB load=1.00 rootload=1.00
(smt.stats   57   7894 135500 346169  7347/7216/315   10382/1277    45  208   23.11)
(smt.stats   58   8028 137846 355760  7464/7374/315   10630/1278    45  208   23.11)
ramon: poll                 wall=17.000s usage=16.946s mem=24512KiB load=1.00 rootload=1.00
(smt.stats   59   8175 140880 365431  7578/7419/315   10849/1279    45  208   23.20)
ramon: poll                 wall=18.000s usage=17.942s mem=24632KiB load=1.00 rootload=0.99
(smt.stats   60   8336 143557 377152  7740/7535/315   11124/1279    45  208   23.30)
(smt.stats   61   8513 147258 393756  7785/7726/315   11378/1279    45  208   23.30)
ramon: poll                 wall=19.000s usage=18.939s mem=24736KiB load=1.00 rootload=1.00
(smt.stats   62   8707 150398 414886  7810/7738/315   11701/1279    45  208   23.40)
(smt.stats   63   8920 155680 436381  7898/7781/316   12057/1445    46  209   23.50)
ramon: poll                 wall=20.000s usage=19.936s mem=24972KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:02:56 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.010s
ramon: group.total          19.941s
ramon: group.utime          19.925s
ramon: group.stime          0.016s
ramon: group.mempeak        25228KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
