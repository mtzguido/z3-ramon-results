ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:16:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41579 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QORoWyvwlobI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2953770
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 2147483647&1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 2147483647&1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 2147483647&2
(smt.stats    0    101   2044    512  1572/1078/102      94/33     5   17   19.15)
(smt.stats    1    202   3886   1480  2179/1888/106     199/49     7   21   19.34)
(smt.stats    2    313   5786   5103  2331/2095/111     299/59     9   24   19.44)
(smt.stats    3    414   7462   8426  2369/2138/114     396/64    11   27   19.63)
(smt.stats    4    525   9283   9739  2388/2157/117     495/63    12   33   19.63)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 17592186044415&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 0 := 17592186044444 << 44
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 17592186044415&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 0 := 17592186044495 << 44
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 17592186044415&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 0 := 17592186044546 << 44
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 17592186044415&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 17592227987456 << 44
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 17592186044415&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 17592227987456 << 44
(smt.stats    5    647  10809  11586  2463/2218/123     620/71    14   39   19.73)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 17592186044415&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 17592186044414 := 17592187089536 << 44
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 17592186044415&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 17592219598976 << 44
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 17592186044415&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 17592187096064 << 44
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  11450  12606  2564/2261/123     724/75    14   39   19.92)
(smt.stats    7    859  12118  14424  2727/2353/128     839/75    14   39   20.02)
(smt.stats    8    981  12670  16749  2969/2497/128     961/75    15   40   20.12)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 6755399441055744 := 1051264 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 6755399441055744 := 1051264 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 6755399441055744 := 6784 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 3146752 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 15732736 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 1051264 << 1
(smt.stats    9   1115  15158  19418  3089/2733/129    1111/76    15   40   20.21)
(smt.stats   10   1216  17884  23027  3145/2866/134    1229/92    16   43   20.21)
(smt.stats   11   1327  20889  27933  3157/2909/134    1353/100    17   43   20.21)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 1 := 1&2251799813642088
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&2251799813642088
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813663497 := 2251799813663668 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 1 := 1&2251799813685234
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&2251799813685234
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685235 := 2251799813685241 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 1 := 1&2251799813642088
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&2251799813685234
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685234 := 2251799813685241 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&2251799813685234
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 1 (if #617 3 #758))) 1 := 2251799813685234&1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&2251799813684928
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813684928 := 2251799813685088 << 1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&2251799813684928
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 1 (if #617 3 #758))) 1 := 2251799813684928&1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1&2251799813684928
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813684927 := 2251799813685088 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  24214  32761  3185/2935/152    1483/107    18   43   20.31)
(smt.stats   13   1583  27015  36592  3199/2951/153    1718/121    19   48   20.31)
(smt.stats   14   1730  32116  40803  3209/2961/153    1853/188    20   50   20.31)
(smt.stats   15   1831  35308  46532  3210/2962/153    1954/188    20   50   20.47)
ramon: poll                 wall=1.000s usage=0.993s mem=21620KiB load=0.99 rootload=0.99
(smt.stats   16   1942  37938  50439  3211/2963/153    2065/188    20   50   20.47)
(smt.stats   17   2064  39969  53509  3223/2974/159    2184/195    21   51   20.47)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1125899906842609&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 18068441705010429952 := 2251799813663666 << 50
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1125899906842609&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 18068441705010429952 := 2251799813663666 << 50
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1125899906842609&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 18068441705010429952 := 2251799813663666 << 50
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1125899906842609&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 18068441705010429952 := 2251799813663666 << 50
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1125899906842609&1
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1125899906842609&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 18068441705010429954 := 2251799813663666 << 50
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 1125899906842609&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 18068441705010429954 := 2251799813663666 << 50
(smt.stats   18   2198  43755  59125  3260/2982/159    2350/199    21   51   20.47)
(smt.stats   19   2345  48217  68882  3269/3018/164    2490/213    22   64   20.57)
(smt.stats   20   2506  51314  77501  3277/3026/164    2653/213    23   64   20.57)
(smt.stats   21   2607  54289  83517  3283/3032/164    2755/213    23   64   20.57)
(smt.stats   22   2718  57043  89600  3321/3034/164    2871/213    23   64   20.57)
(smt.stats   23   2840  58837  92978  3400/3089/164    3000/215    23   64   20.76)
(smt.stats   24   2974  60486  95589  3449/3194/164    3143/215    23   64   20.76)
(smt.stats   25   3121  64656 101865  3458/3200/164    3309/215    23   64   20.95)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277270220
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277270220
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277270218
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269712
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269728
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269728
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269728
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269728
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269760
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269760
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269760
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269760
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277270016
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277270016
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277270016
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277270016
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269738
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269736
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269736
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269728
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269696
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269696
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269696
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269706
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269704
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269696
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269662
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 4194303&17592277269660
(smt.stats   26   3282  69400 109035  3585/3322/261    3500/226    24   84   21.14)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 4 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 4 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 12 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 60 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 36 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 44 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269660
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269662
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269692
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 62 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 444 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 444 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 702 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 702 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 446 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 190 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 190 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 190 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 446 := 4194303&17592277269694
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 32 := 4194303&35184636362848
(smt.stats   27   3459  73165 117053  3739/3438/305    3826/268    25   94   21.43)
(smt.stats   28   3560  73668 117735  3817/3527/320    4077/271    25   94   21.77)
(smt.stats   29   3671  74734 119169  4058/3743/320    4450/271    25   94   21.67)
(smt.stats   30   3793  78993 126677  4157/3886/324    4827/330    26   99   21.77)
(smt.stats   31   3927  82790 134506  4262/4011/347    5211/420    27   99   21.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  87386 149574  4300/4021/348    5683/576    28  183   22.07)
ramon: poll                 wall=2.000s usage=1.993s mem=23380KiB load=1.00 rootload=0.99
(smt.stats   33   4235  89849 156019  4502/4070/348    5929/584    28  183   22.16)
(smt.stats   34   4412  90531 158510  4943/4372/348    6425/587    28  183   22.36)
(smt.stats   35   4606  97387 181045  4982/4718/350    6983/886    29  186   22.46)
(smt.stats   36   4707 100979 200527  4993/4748/350    7171/1032    30  193   22.55)
(smt.stats   37   4818 106128 227957  5002/4757/350    7298/1032    30  193   22.55)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4940 109936 248278  5088/4759/350    7661/1035    30  193   23.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 323)
(smt.stats   39   5074 114937 261163  5096/4849/350    7552/1035    30  193   23.06)
(smt.stats   40   5221 122290 291083  5341/4857/351    8066/1403    31  193   23.15)
ramon: poll                 wall=3.000s usage=2.993s mem=24600KiB load=1.00 rootload=1.00
(smt.stats   41   5382 125474 305819  5624/5107/351    8582/1407    31  193   23.25)
(smt.stats   42   5559 135238 362060  5705/5452/352    9250/1565    32  195   23.25)
(smt.stats   43   5753 141705 392327  5945/5465/352    9709/1569    32  195   23.45)
ramon: poll                 wall=4.000s usage=3.993s mem=24996KiB load=1.00 rootload=1.00
(smt.stats   44   5966 144639 408896  6300/5722/352   10302/1575    32  195   23.64)
(smt.stats   45   6067 147880 427245  6339/6086/352   10537/1575    32  195   23.64)
(smt.stats   46   6178 151083 437153  6419/6095/352   10915/1575    32  195   23.74)
(smt.stats   47   6300 154318 448030  6584/6274/355   11191/2331    33  204   23.74)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 274877906943&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 11258999068426240 := 1143492227104778 << 38
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 274877906943&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 11258999068426240 := 1143492227104778 << 38
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 274877906943&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 11258999068426240 := 1143492227104778 << 38
(smt.stats   48   6434 158224 462528  6699/6454/362   11338/2365    34  235   23.83)
(smt.stats   49   6581 162355 469768  6793/6527/363   11505/2365    34  235   23.83)
(smt.stats   50   6742 168184 485100  6809/6543/364   11680/2399    35  248   23.83)
(smt.stats   51   6920 174499 520032  6850/6565/364   12339/2405    36  249   24.03)
ramon: poll                 wall=5.000s usage=4.992s mem=25772KiB load=1.00 rootload=1.00
(smt.stats   52   7114 179845 537086  6959/6590/364   12731/2409    36  249   24.22)
(smt.stats   53   7327 183806 568053  7309/6737/364   13273/2418    36  249   24.41)
(smt.stats   54   7561 186706 587059  7651/7062/364   13899/2425    36  249   24.60)
(smt.stats   55   7662 188047 595358  7736/7464/368   14315/2797    37  254   24.60)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 1 := 8589934591&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796737 := 1125899906842857 << 33
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 8589934591&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 1143492225024075 << 33
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 8589934591&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 1143492225024891 << 33
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 8589934591&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 1143492225025044 << 33
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 8589934591&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 1143492225025044 << 33
(smt.stats   56   7773 189798 602354  7878/7484/368   14488/2797    37  254   24.69)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 8589934591&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 1143492225024942 << 33
ramon: poll                 wall=6.000s usage=5.992s mem=26160KiB load=1.00 rootload=0.99
(smt.stats   57   7895 191293 607582  7988/7637/373   14637/2798    37  254   24.69)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8029 194982 613964  8006/7732/373   14807/2885    38  263   24.69)
(smt.stats   59   8176 199033 622229  8267/7765/374   14993/2894    38  263   24.79)
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 137438953471&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 1143492105470848 << 37
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 137438953471&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 15762598695796736 := 1143492158948224 << 37
(smt.stats   60   8337 203134 638760  8533/8057/374   15229/2897    38  263   24.88)
(smt.stats   61   8514 206113 644505  8661/8271/379   15455/3005    39  264   25.15)
ramon: poll                 wall=7.000s usage=6.990s mem=26740KiB load=1.00 rootload=1.00
band: (band[51] (if (or #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #886)) (shl[64] (bv2int %0) (mod #939 64))) 0 := 137438953471&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #938) 64)) 6755399441055744 := 1680053768290480 << 37
(smt.stats   62   8708 211889 686520  8810/8530/379   15756/3006    39  264   25.25)
ramon: poll                 wall=8.000s usage=7.986s mem=27160KiB load=1.00 rootload=0.99
(smt.stats   63   8921 213386 692952  9030/8567/379   16037/3036    40  264   25.43)
(smt.stats   64   9155 218401 724206  9261/8991/381   16455/3036    40  264   25.43)
(smt.stats   65   9412 227143 817486  9283/9010/381   17316/3209    41  267   25.43)
(smt.stats   66   9513 229091 823790  9303/9033/382   17497/3531    42  269   25.43)
(smt.stats   67   9624 234192 834035  9326/9037/382   17706/3533    42  269   25.53)
ramon: poll                 wall=9.006s usage=8.990s mem=27416KiB load=1.00 rootload=1.00
(smt.stats   68   9746 240704 878547  9352/9082/382   17960/3533    42  269   25.53)
(smt.stats   69   9880 251794 954632  9353/9083/382   18179/3533    42  269   25.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 1506)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   70  10027 256349 1000217  9367/9097/382   17091/3533    42  269   25.64)
(smt.stats   71  10188 263483 1063162  9379/9103/382   17368/3533    42  269   25.73)
ramon: poll                 wall=10.000s usage=9.982s mem=27416KiB load=1.00 rootload=1.00
(smt.stats   72  10365 268052 1082274  9647/9111/382   17836/3534    42  269   25.83)
(smt.stats   73  10559 271798 1112761  9920/9464/382   18399/3537    42  269   25.83)
ramon: poll                 wall=11.000s usage=10.982s mem=27672KiB load=1.00 rootload=1.00
(smt.stats   74  10772 278321 1174654 10262/9687/382   19322/3538    42  269   25.92)
(smt.stats   75  11006 284627 1198358 10311/10025/383   19881/3967    43  274   26.02)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   76  11263 295319 1251473 10344/10060/383   20394/3967    43  274   26.12)
(smt.stats   77  11545 305397 1296266 10373/10098/383   20862/3967    43  274   26.12)
(smt.stats   78  11646 313015 1322046 10378/10108/383   21091/3967    43  274   26.12)
(smt.stats   79  11757 320703 1349050 10382/10112/383   21232/3967    43  274   26.12)
ramon: poll                 wall=12.000s usage=11.982s mem=27928KiB load=1.00 rootload=1.00
(smt.stats   80  11879 326963 1374040 10391/10121/383   21403/3967    43  274   26.21)
(smt.stats   81  12013 330719 1397288 10404/10134/383   21858/3967    43  274   26.21)
(smt.stats   82  12160 339346 1438288 10409/10139/384   22103/4611    44  277   26.21)
(smt.stats   83  12321 345067 1477003 10415/10145/384   22618/4611    44  277   26.21)
(smt.stats   84  12498 350779 1520914 10439/10154/384   23038/4613    44  277   26.31)
ramon: poll                 wall=13.000s usage=12.982s mem=28184KiB load=1.00 rootload=1.00
(smt.stats   85  12692 355583 1554780 10783/10507/386   23379/4850    45  283   26.50)
(smt.stats   86  12905 362127 1593493 11097/10540/386   24216/4853    45  283   26.59)
(smt.stats   87  13139 372817 1650267 11120/10842/386   25089/4855    45  283   26.69)
ramon: poll                 wall=14.000s usage=13.982s mem=28440KiB load=1.00 rootload=1.00
(smt.stats   88  13396 383541 1692046 11141/10871/386   25728/4855    45  283   26.69)
(smt.stats   89  13678 391852 1736143 11193/10923/386   26616/4859    45  283   26.78)
(smt.stats   90  13988 401633 1816868 11381/10980/386   27657/4867    45  283   26.98)
(smt.stats   91  14089 405428 1827376 11411/11121/386   28021/4867    45  283   26.98)
ramon: poll                 wall=15.000s usage=14.982s mem=28696KiB load=1.00 rootload=1.00
(smt.stats   92  14200 409977 1862723 11528/11138/386   28318/4870    45  283   27.08)
(smt.stats   93  14322 414714 1887804 11659/11258/386   28535/4872    45  283   27.08)
(smt.stats   94  14456 419852 1925503 11703/11419/386   29100/4872    45  283   27.18)
(smt.stats   95  14603 425222 1954088 11718/11430/386   29587/4873    45  283   27.27)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   96  14764 431568 2002113 11736/11446/386   30334/4873    45  283   27.27)
(smt.stats   97  14941 437355 2032550 11819/11523/387   30814/6385    46  290   27.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 579)
ramon: poll                 wall=16.000s usage=15.981s mem=29456KiB load=1.00 rootload=1.00
(smt.stats   98  15135 444952 2094981 11962/11559/388   30888/6386    46  290   27.88)
ramon: poll                 wall=17.000s usage=16.981s mem=29848KiB load=1.00 rootload=1.00
(smt.stats   99  15348 450642 2125877 12279/11687/388   31605/6535    47  297   28.07)
(smt.stats  100  15582 457505 2178236 12595/12093/388   32539/6546    47  297   28.26)
ramon: poll                 wall=18.000s usage=17.981s mem=29892KiB load=1.00 rootload=1.00
(smt.stats  101  15839 468120 2246666 12723/12346/389   32992/6753    48  300   28.36)
(smt.stats  102  16121 474553 2298781 12986/12457/389   33979/6756    48  300   28.55)
ramon: poll                 wall=19.000s usage=18.981s mem=30312KiB load=1.00 rootload=1.00
(smt.stats  103  16431 482768 2343193 13167/12713/389   35041/6759    48  300   28.65)
(smt.stats  104  16771 494166 2432125 13284/12964/390   35894/7005    49  302   28.74)
(smt.stats  105  16872 498230 2443589 13284/13000/390   36022/7005    49  302   28.74)
(smt.stats  106  16983 502172 2497079 13294/13010/390   36692/7005    49  302   28.74)
ramon: poll                 wall=20.000s usage=19.980s mem=30420KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:16:30 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.995s
ramon: group.utime          19.975s
ramon: group.stime          0.020s
ramon: group.mempeak        30676KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
