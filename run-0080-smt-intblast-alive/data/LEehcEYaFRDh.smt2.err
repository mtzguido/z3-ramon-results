ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:10:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         26047 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1403
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LEehcEYaFRDh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4184222
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 2199023255550&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255550 := 2199023255551 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 2199023255550&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255550 := 2199023255551 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2 := 2199023255551 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 2199023255550&0
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 2199023255551 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 2199023255550&0
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 2199023255551 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 0&0
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 1099511627776 << 1
(smt.stats    0    101   1945   1045  1071/960/116      86/27    11   20   18.98)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099511627777&1
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099511627777&1
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099511627778&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 1099511627778 := 1099511627776 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099528404990&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 1099528404990 := 1099528404991 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099511627776&1
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1099511627776 := 1099511627777 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099511627776&1
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1099511627776 := 1099511627777 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099511627776&1
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (or #580 #581 #582 #583 #584 #585 #586 #587 #588 #589 #590 #591 #592 #593 #594 #595 ...) 0 (if #619 1 #621))) 1 := 1099511627776&1
(smt.stats    1    202   2925   2354  1413/1270/152     175/33    16   38   19.27)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 1 := 1099511627776&1
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099511627776&1
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 16777222 := 1099511627777 << 40
(smt.stats    2    313   4100   2841  1515/1316/152     292/35    16   38   19.46)
(smt.stats    3    414   5355   4547  1645/1396/152     402/39    17   39   19.56)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 33554431&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199056809983 := 1099528404991 << 39
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 39
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 16
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 10
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 9
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 33554431&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199056809983 := 1099528404991 << 11
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 11
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 11
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 15
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 12
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 13
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 14
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 35
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023255559 := 1099511627779 << 32
(smt.stats    4    525   6993   6146  1725/1494/161     518/58    18   41   19.85)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 33554431&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199056809983 := 1099528404991 << 31
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1031&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256583 := 1099511628291 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1031&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256583 := 1099511628291 << 33
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1027&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256579 := 1099511628289 << 33
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1027&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256579 := 1099511628289 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1027&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256579 := 1099511628289 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1027&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256579 := 1099511628289 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1027&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256579 := 1099511628289 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1031&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256583 := 1099511628291 << 35
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1031&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256583 := 1099511628291 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1031&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023256583 := 1099511628291 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 2051&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023257603 := 1099511628801 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 2051&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2199023257603 := 1099511628801 << 38
ramon: poll                 wall=1.004s usage=0.778s mem=21484KiB load=0.78 rootload=0.76
(smt.stats    5    647   8608   8749  1927/1687/221     618/89    19   70   20.42)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1091055910923&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 3290079166475 := 1645039583237 << 39
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1099108974603&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 3298132230155 := 1649066115077 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1098840539143&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 3297863794695 := 1648931897347 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1095753531399&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 3294776786951 := 1647388393475 << 37
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 ...) 0 (if #830 1 #876))) 0 := 1093606047751&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 3292629303303 := 1646314651651 << 37
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   9921  10723  2245/1947/241     723/110    20   74   20.51)
ramon: poll                 wall=2.004s usage=1.777s mem=21984KiB load=1.00 rootload=1.00
(smt.stats    7    859  11210  12713  2496/2163/251     820/123    21   76   20.61)
ramon: poll                 wall=3.000s usage=2.772s mem=22072KiB load=1.00 rootload=0.99
(smt.stats    8    981  13680  15584  2542/2326/251     940/125    22   76   20.71)
(smt.stats    9   1115  17155  20508  2592/2386/251    1071/126    22   76   20.71)
(smt.stats   10   1216  18358  22537  2803/2413/251    1170/140    22   76   20.71)
ramon: poll                 wall=4.000s usage=3.770s mem=22212KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.770s mem=22212KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.768s mem=22264KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.768s mem=22264KiB load=1.00 rootload=1.00
(smt.stats   11   1327  21452  29340  2946/2681/252    1279/154    23   77   20.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  22710  33547  2971/2782/253    1389/159    24   82   20.80)
ramon: poll                 wall=8.002s usage=7.768s mem=22264KiB load=1.00 rootload=1.00
(smt.stats   13   1583  25034  36938  3020/2795/255    1508/164    25   86   20.80)
(smt.stats   14   1730  27265  40326  3101/2861/255    1727/164    26   88   21.10)
(smt.stats   15   1831  28227  49123  3409/3130/255    1907/164    26   88   21.39)
(smt.stats   16   1942  30302  57164  3453/3173/263    2043/293    28   99   21.59)
(smt.stats   17   2064  35178  61651  3466/3179/279    2162/296    28   99   21.69)
(smt.stats   18   2198  46497  84891  3473/3186/285    2274/324    29  138   21.69)
(smt.stats   19   2345  52342  96000  3485/3205/285    2420/343    30  142   21.78)
ramon: poll                 wall=9.000s usage=8.768s mem=23384KiB load=1.00 rootload=1.00
(smt.stats   20   2506  56289 106499  3541/3266/328    2501/320    34  222   21.88)
(smt.stats   21   2607  61153 114215  3575/3274/328    2621/327    34  222   21.88)
(smt.stats   22   2718  64925 119688  3603/3323/329    2742/346    35  222   21.97)
(smt.stats   23   2840  69878 129497  3654/3333/329    2868/353    35  222   21.97)
(smt.stats   24   2974  75671 142791  3676/3394/335    2996/365    36  226   21.97)
(smt.stats   25   3121  80193 149031  3682/3406/335    3136/363    37  232   21.97)
ramon: poll                 wall=10.000s usage=9.768s mem=23384KiB load=1.00 rootload=1.00
(smt.stats   26   3282  85024 156229  3866/3456/345    3313/369    38  234   22.17)
(smt.stats   27   3459  88691 163387  3989/3669/345    3483/387    39  248   22.26)
ramon: poll                 wall=11.000s usage=10.768s mem=23896KiB load=1.00 rootload=1.00
(smt.stats   28   3560  92547 168096  4085/3776/346    3615/400    40  252   22.36)
(smt.stats   29   3671  95848 175528  4128/3838/348    3760/469    41  254   22.45)
(smt.stats   30   3793 100077 184040  4138/3856/348    3886/469    41  254   22.45)
(smt.stats   31   3927 102580 198069  4210/3928/358    4050/485    42  261   22.55)
ramon: poll                 wall=12.000s usage=11.768s mem=24152KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.768s mem=24152KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 107499 206850  4227/3950/372    4192/512    43  269   22.69)
ramon: poll                 wall=14.000s usage=13.768s mem=24152KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.767s mem=24152KiB load=1.00 rootload=1.00
(smt.stats   33   4235 116707 223445  4297/3961/372    4365/536    44  283   22.69)
(smt.stats   34   4412 125941 236038  4443/4041/372    4567/540    44  283   22.69)
ramon: poll                 wall=16.000s usage=15.767s mem=24408KiB load=1.00 rootload=1.00
(smt.stats   35   4606 131870 245970  4521/4189/378    4778/585    45  290   22.79)
(smt.stats   36   4707 138354 263358  4556/4291/378    4888/592    46  291   22.79)
ramon: poll                 wall=17.000s usage=16.767s mem=24664KiB load=1.00 rootload=1.00
(smt.stats   37   4818 142959 269680  4651/4292/378    5008/596    46  291   22.89)
(smt.stats   38   4940 145729 278315  4812/4532/382    5119/613    47  300   22.89)
(smt.delete-inactive-clauses  :num-deleted-clauses 1263)
(smt.stats   39   5074 149447 284199  4821/4556/382    3995/613    47  300   22.89)
ramon: poll                 wall=18.000s usage=17.767s mem=24664KiB load=1.00 rootload=1.00
(smt.stats   40   5221 155663 297157  4950/4566/382    4179/616    47  300   22.98)
(smt.stats   41   5382 163955 305622  4956/4693/382    4342/616    47  300   22.98)
(smt.stats   42   5559 170590 318822  4974/4713/387    4502/658    48  310   22.98)
(smt.stats   43   5753 179643 346094  4999/4724/387    4724/659    48  310   22.98)
ramon: poll                 wall=19.000s usage=18.767s mem=24664KiB load=1.00 rootload=1.00
(smt.stats   44   5966 185670 352750  5201/4757/387    4964/672    48  310   23.08)
(smt.stats   45   6067 190143 361938  5217/4956/387    5067/672    48  310   23.08)
(smt.stats   46   6178 193840 371668  5220/4958/387    5185/672    48  310   23.17)
(smt.stats   47   6300 197445 377717  5315/4968/387    5325/673    48  310   23.08)
(smt.stats   48   6434 201550 384912  5383/5110/387    5516/673    48  310   23.17)
ramon: poll                 wall=20.000s usage=19.767s mem=24664KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:10:34 2024
ramon: root.execname        z3
ramon: root.utime           19.810s
ramon: root.stime           0.010s
ramon: group.total          19.829s
ramon: group.utime          19.813s
ramon: group.stime          0.016s
ramon: group.mempeak        24920KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              0.99
