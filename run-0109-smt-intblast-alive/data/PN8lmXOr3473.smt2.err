ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:14:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41600 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/PN8lmXOr3473.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2947093
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   1758    518  1177/1032/100     105/15     7   17   19.15)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&2
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&2
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&4
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&2
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&4
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&8
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&2
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&8
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 8 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&8
(smt.stats    1    202   4040   1353  1896/1726/162     209/50    10   38   19.34)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&4
(smt.stats    2    313   6411   2727  2194/1968/168     338/69    11   39   19.54)
(smt.stats    3    414   9402   4601  2392/2156/172     467/107    13   46   19.67)
(smt.stats    4    525  11196   6610  2608/2209/173     613/146    14   47   19.77)
(smt.stats    5    647  14073   9517  2726/2412/173     743/178    15   50   19.96)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19025  13843  2729/2503/174     840/188    16   53   19.96)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2192
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2192
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2192
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2192
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2208
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2208
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2208
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2208
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
(smt.stats    7    859  20774  15972  2843/2547/222     993/213    17   62   20.26)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 3&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 105553116267040 := 176 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 3&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 105553116267040 := 176 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 3&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 35184372089376 := 176 << 1
(smt.stats    8    981  23305  20944  3001/2763/232    1209/246    19   81   20.36)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&178
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 88 := 89 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&178
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 88 := 89 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&178
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 88 := 89 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 1 := 1&178
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&178
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 1 := 1&178
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 8 := 63&168
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 40 := 63&168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 168 := 168 << 5
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 40 := 63&168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 168 := 168 << 5
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 32 := 63&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 544 := 168 << 5
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 32 := 63&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 544 := 168 << 5
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 32 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 16 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 84 := 84 << 6
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 84 := 84 << 6
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 84 := 84 << 6
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 84 := 84 << 6
(smt.stats    9   1116  28868  25758  3097/2835/261    1386/307    20   96   20.66)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 63 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 62 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 60 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 56 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 48 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 32 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 14 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 32 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 4 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 8 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 4 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 8 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 4 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 8 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 40 := 63&5376
(smt.stats   10   1217  31231  30014  3237/2969/315    1545/374    22  112   20.95)
(smt.stats   11   1328  35126  36382  3318/3036/315    1765/378    22  112   21.34)
ramon: poll                 wall=1.000s usage=0.986s mem=22616KiB load=0.99 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  39076  43545  3359/3100/319    1950/433    24  118   21.46)
(smt.stats   13   1584  43229  51282  3370/3109/322    2205/433    24  118   21.46)
(smt.stats   14   1731  49522  62488  3389/3127/324    2460/568    26  136   21.65)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&1708
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 1 := 1&1708
(smt.stats   15   1832  52367  68612  3457/3177/324    2617/573    27  142   21.75)
(smt.stats   16   1943  55964  75515  3490/3207/324    2767/573    27  142   21.75)
(smt.stats   17   2065  60067  82929  3592/3258/331    3067/618    28  160   21.94)
(smt.stats   18   2199  65489  91329  3684/3310/331    3260/687    29  174   22.04)
ramon: poll                 wall=2.000s usage=1.986s mem=23320KiB load=1.00 rootload=1.00
(smt.stats   19   2346  70827 102550  3835/3456/331    3524/695    29  174   22.13)
(smt.stats   20   2507  74465 111870  3927/3637/334    3934/774    30  185   22.23)
(smt.stats   21   2608  78383 119297  3955/3658/335    4211/806    31  191   22.23)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 30 := 17592186044412&30
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 28 := 17592186044412&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 175921860444190 := 35184372091472 << 43
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 28 := 17592186044412&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 175921860444190 := 35184372091472 << 43
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 28 := 17592186044412&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 175921860444190 := 35184372091472 << 43
(smt.stats   22   2719  81478 126942  4055/3671/335    4522/808    31  191   22.32)
(smt.stats   23   2841  85559 138762  4082/3780/340    4946/830    32  192   22.32)
ramon: poll                 wall=3.000s usage=2.985s mem=23628KiB load=1.00 rootload=1.00
(smt.stats   24   2975  88697 148630  4135/3842/341    5276/887    33  192   22.42)
(smt.stats   25   3122  92526 157910  4222/3875/341    5624/940    34  192   22.51)
(smt.stats   26   3283  96614 172551  4367/4064/342    5946/987    35  194   22.70)
(smt.stats   27   3460  99899 183213  4542/4239/345    6419/987    35  194   22.90)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3561 102609 190770  4610/4285/345    6618/1039    36  208   22.90)
(smt.stats   29   3672 108829 203229  4626/4310/345    6825/1039    36  208   23.00)
ramon: poll                 wall=4.000s usage=3.985s mem=24292KiB load=1.00 rootload=1.00
(smt.stats   30   3794 111412 211112  4657/4327/345    6983/1040    36  208   23.12)
(smt.stats   31   3928 115811 221717  4687/4355/345    7198/1042    36  208   23.21)
(smt.stats   32   4075 121490 242379  4699/4378/345    7650/1042    36  208   23.21)
(smt.stats   33   4236 130087 264336  4900/4396/345    8033/1046    36  208   23.31)
ramon: poll                 wall=5.000s usage=4.985s mem=24720KiB load=1.00 rootload=1.00
(smt.stats   34   4413 136967 279792  5040/4609/347    8334/1270    37  231   23.40)
(smt.stats   35   4607 144129 304371  5068/4743/348    8825/1277    38  233   23.50)
(smt.stats   36   4708 148193 322780  5099/4758/348    9063/1279    38  233   23.60)
ramon: poll                 wall=6.000s usage=5.984s mem=25032KiB load=1.00 rootload=0.99
(smt.stats   37   4819 151842 341200  5143/4802/350    9408/1364    39  241   23.69)
(smt.stats   38   4941 155806 357518  5155/4837/350    9744/1364    39  241   23.69)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5075 158436 371363  5204/4847/351   10242/1454    40  249   23.79)
(smt.stats   40   5222 161275 384403  5333/4894/351   10473/1463    40  249   23.88)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 2147483647&645
(smt.stats   41   5383 165227 400625  5464/5075/351   10913/1466    40  249   23.98)
ramon: poll                 wall=7.000s usage=6.984s mem=25328KiB load=1.00 rootload=1.00
(smt.stats   42   5560 169805 418190  5581/5201/351   11399/1468    40  249   23.98)
(smt.stats   43   5754 176572 444232  5600/5271/351   11727/1468    40  249   24.17)
ramon: poll                 wall=8.000s usage=7.984s mem=25684KiB load=1.00 rootload=1.00
(smt.stats   44   5967 181074 468321  5793/5319/351   12169/1471    40  249   24.26)
(smt.stats   45   6068 185131 480499  5798/5470/351   12389/1471    40  249   24.36)
(smt.stats   46   6179 190020 500005  5883/5470/351   12662/1476    40  249   24.45)
ramon: poll                 wall=9.000s usage=8.983s mem=25940KiB load=1.00 rootload=1.00
(smt.stats   47   6301 193735 509852  6061/5609/351   12931/1479    40  249   24.55)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6435 196873 525808  6124/5750/351   13347/1481    40  249   24.64)
(smt.stats   49   6582 199314 534030  6171/5806/351   13882/1482    40  249   24.64)
ramon: poll                 wall=10.000s usage=9.983s mem=26084KiB load=1.00 rootload=1.00
(smt.stats   50   6743 203385 548117  6269/5858/351   14285/1485    40  249   24.74)
(smt.stats   51   6920 209158 587981  6303/5960/351   14657/1485    40  249   24.84)
(smt.stats   52   7114 214911 612396  6407/5989/352   15347/2099    41  258   24.93)
ramon: poll                 wall=11.000s usage=10.983s mem=26552KiB load=1.00 rootload=1.00
(smt.stats   53   7327 226313 652071  6644/6096/352   16198/2102    41  258   25.02)
(smt.stats   54   7561 237223 708832  6662/6320/352   17070/2102    41  258   25.33)
(smt.stats   55   7662 240225 723645  6774/6350/352   17497/2106    41  258   25.33)
(smt.stats   56   7773 242820 742992  6887/6457/352   18125/2110    41  258   25.43)
(smt.stats   57   7895 246012 764605  7005/6608/352   18581/2112    41  258   25.52)
(smt.stats   58   8029 248924 782789  7056/6701/353   19476/2337    42  263   25.62)
ramon: poll                 wall=12.000s usage=11.982s mem=27016KiB load=1.00 rootload=1.00
(smt.stats   59   8176 253006 806317  7189/6741/353   20047/2343    42  263   25.71)
(smt.stats   60   8337 256630 827012  7275/6906/353   20685/2343    42  263   25.81)
(smt.stats   61   8514 260680 852653  7305/6977/353   21426/2343    42  263   25.91)
(smt.stats   62   8708 270819 899834  7321/6993/354   22059/2616    43  263   26.00)
ramon: poll                 wall=13.000s usage=12.982s mem=27460KiB load=1.00 rootload=1.00
(smt.stats   63   8921 276851 936091  7441/7010/354   22892/2619    43  263   26.10)
(smt.stats   64   9155 283942 974915  7524/7129/354   23991/2627    43  263   26.19)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9412 295655 1058174  7582/7228/354   24694/2631    43  263   26.29)
(smt.stats   66   9513 297439 1069067  7599/7265/354   25147/2632    43  263   26.29)
ramon: poll                 wall=14.000s usage=13.982s mem=27760KiB load=1.00 rootload=1.00
(smt.stats   67   9624 299461 1078530  7648/7287/354   25560/2633    43  263   26.38)
(smt.stats   68   9746 302001 1099243  7691/7356/357   25974/2976    44  297   26.48)
(smt.stats   69   9880 305376 1114687  7753/7370/357   26450/2979    44  297   26.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 3144)
(smt.stats   70  10027 307768 1141236  7798/7459/357   24892/2979    44  297   26.69)
ramon: poll                 wall=15.000s usage=14.982s mem=28248KiB load=1.00 rootload=1.00
(smt.stats   71  10188 313066 1168572  7938/7476/357   25655/3043    45  335   26.89)
(smt.stats   72  10365 316569 1183184  8081/7646/358   25941/3043    45  335   26.89)
(smt.stats   73  10559 322818 1224715  8133/7799/358   27603/3100    46  336   26.98)
ramon: poll                 wall=16.000s usage=15.981s mem=28396KiB load=1.00 rootload=1.00
(smt.stats   74  10772 330132 1277583  8363/7807/358   29044/3111    46  336   27.08)
(smt.stats   75  11006 334861 1309848  8474/8054/358   30071/3113    46  336   27.17)
ramon: poll                 wall=17.000s usage=16.981s mem=28704KiB load=1.00 rootload=1.00
(smt.stats   76  11263 340939 1369706  8596/8173/358   31163/3115    46  336   27.27)
(smt.stats   77  11545 345536 1427115  8613/8277/363   32445/3486    47  344   27.46)
(smt.stats   78  11646 347890 1454923  8647/8293/363   32780/3487    47  344   27.46)
ramon: poll                 wall=18.000s usage=17.981s mem=28956KiB load=1.00 rootload=1.00
(smt.stats   79  11757 353990 1501157  8649/8321/363   33155/3487    47  344   27.46)
(smt.stats   80  11879 358842 1536241  8657/8329/363   33827/3487    47  344   27.55)
(smt.stats   81  12013 364358 1566022  8662/8334/364   34789/3889    48  381   27.65)
(smt.stats   82  12160 369280 1613986  8668/8340/364   35399/3889    48  381   27.65)
(smt.stats   83  12321 375920 1673170  8676/8348/364   36047/3889    48  381   27.75)
(smt.stats   84  12498 379475 1705322  8681/8353/364   37231/3889    48  381   27.85)
ramon: poll                 wall=19.000s usage=18.981s mem=29384KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   85  12692 384037 1729603  8778/8356/364   38348/3889    48  381   27.94)
(smt.stats   86  12905 390116 1768194  8792/8464/365   38941/4201    49  394   28.04)
(smt.stats   87  13139 399805 1834917  8840/8476/365   39942/4204    49  394   28.14)
ramon: poll                 wall=20.000s usage=19.980s mem=29688KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:14:33 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.999s
ramon: group.utime          19.979s
ramon: group.stime          0.020s
ramon: group.mempeak        29948KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.019s
ramon: loadavg              1.00
