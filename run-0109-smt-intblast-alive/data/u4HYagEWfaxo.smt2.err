ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:02:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40552 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/u4HYagEWfaxo.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3103673
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   5349    333  1279/1140/118      88/18    10   24   19.44)
ramon: poll                 wall=1.004s usage=0.936s mem=20772KiB load=0.93 rootload=0.93
(smt.stats    1    202   6394   1036  2538/2307/121     211/32    12   28   19.64)
(smt.stats    2    313  10218   2653  2571/2331/128     324/44    14   36   19.64)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&8302163913529026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 64 := 72057594037927642 << 48
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 64 := 72057594037927642 << 48
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 133905869573041&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 64 := 72057594037927642 << 48
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 458 := 133905869573041&36028797018963967
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 458 := 133905869573041&36028797018963966
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 456 := 133905869573041&36028797018963926
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 456 := 133905869573041&36028797018963926
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 452 := 133905869573041&36028797018963926
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 448 := 133905869573041&36028797018963926
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 448 := 133905869573041&36028797018963936
(smt.stats    3    414  13575   4801  2632/2352/130     418/53    15   38   19.85)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&474
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&474
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&133905869573023
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&133905869573023
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&478
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 472 := 133905869573041&512
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 480 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 480 := 133905869573041&8302163913529026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&8302163913529026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&576
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 108086391056892480 := 72057594037927642 << 48
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&8302163913529027
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&8302163913529026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 468 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 464 := 133905869573041&784
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&768
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 512 := 133905869573041&1024
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 133905869573041&1026
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 2048 := 133905869573041&2050
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 72057594037929986 := 72057594037927642 << 48
(smt.stats    4    525  15491   6829  2841/2459/176     550/67    16   47   20.24)
(smt.stats    5    647  21068  11685  2854/2601/226     678/71    17   58   20.24)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&64
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&72
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&71
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&64
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&64
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 128 := 8569975652674633&256
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 128 := 8569975652674633&256
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 128 := 8569975652674633&264
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 128 := 8569975652674633&256
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 256 := 8569975652674633&264
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 256 := 8569975652674633&258
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 256 := 8569975652674633&264
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 256 := 8569975652674633&262
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1028 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 216172782113784834 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 216172782113784834 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 216172782113784834 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  23117  14169  3006/2683/250     842/115    19   65   20.43)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 216172782113784834 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1032
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1030
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 252201579132748806 := 72057594037927630 << 54
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 1024 := 8569975652674633&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 252201579132748802 := 72057594037927630 << 54
(smt.stats    7    859  23699  14913  3058/2745/270     969/115    19   65   20.81)
(smt.stats    8    981  25272  18575  3613/3352/279    1187/162    21   75   20.91)
(smt.stats    9   1116  28612  22481  3670/3409/283    1342/169    24   91   21.00)
(smt.stats   10   1217  30932  24036  3722/3416/284    1487/171    24   91   21.00)
(smt.stats   11   1328  33860  28880  3841/3580/286    1628/177    26   99   21.00)
ramon: poll                 wall=2.000s usage=1.931s mem=22308KiB load=1.00 rootload=0.98
(smt.stats   12   1450  35218  32061  4016/3755/288    1788/177    26   99   21.11)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1584  37023  35034  4037/3760/288    1966/294    27  105   21.11)
(smt.stats   14   1731  40288  41666  4156/3782/288    2205/297    27  105   21.20)
(smt.stats   15   1832  41553  44222  4205/3909/288    2369/297    27  105   21.20)
(smt.stats   16   1943  43994  47845  4261/3999/289    2520/342    28  108   21.31)
(smt.stats   17   2065  47117  52349  4292/4004/289    2708/344    28  108   21.31)
ramon: poll                 wall=3.000s usage=2.931s mem=22580KiB load=1.00 rootload=1.00
(smt.stats   18   2199  48767  54107  4456/4041/289    2855/346    28  108   21.53)
(smt.stats   19   2346  52044  65963  4701/4274/289    3126/346    28  108   21.53)
ramon: poll                 wall=4.000s usage=3.931s mem=22848KiB load=1.00 rootload=1.00
(smt.stats   20   2507  55116  74498  4847/4540/291    3429/398    30  117   21.63)
(smt.stats   21   2608  57334  78009  4859/4592/291    3576/398    30  117   21.73)
(smt.stats   22   2719  60193  84787  4895/4611/298    3749/509    31  119   21.82)
(smt.stats   23   2841  63364  90444  4924/4658/298    3896/550    32  127   21.82)
ramon: poll                 wall=5.000s usage=4.931s mem=23136KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.930s mem=23312KiB load=1.00 rootload=1.00
(smt.stats   24   2975  65348  93277  5062/4663/298    4059/557    32  127   22.02)
(smt.stats   25   3122  71492 104075  5287/4946/301    4422/612    33  133   22.11)
ramon: poll                 wall=7.000s usage=6.930s mem=23432KiB load=1.00 rootload=1.00
(smt.stats   26   3283  74892 108978  5508/5049/301    4670/623    33  133   22.21)
(smt.stats   27   3460  78026 117842  5748/5324/301    4986/626    33  133   22.30)
(smt.stats   28   3561  80052 123718  5795/5510/301    5110/627    33  133   22.30)
ramon: poll                 wall=8.000s usage=7.930s mem=23664KiB load=1.00 rootload=1.00
(smt.stats   29   3672  82330 131699  5923/5590/302    5282/830    34  133   22.30)
ramon: poll                 wall=9.000s usage=8.930s mem=23668KiB load=1.00 rootload=1.00
(smt.stats   30   3794  84308 133235  6019/5667/302    5419/832    34  133   22.40)
ramon: poll                 wall=10.000s usage=9.930s mem=23736KiB load=1.00 rootload=1.00
(smt.stats   31   3928  86111 140122  6231/5860/302    5615/832    34  133   22.40)
(smt.stats   32   4075  89912 143978  6253/5978/307    5788/879    35  143   22.68)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   33   4236  95259 157601  6263/6002/307    5990/879    35  143   22.68)
(smt.stats   34   4413 105914 185870  6275/6013/307    6189/879    35  143   22.68)
(smt.stats   35   4607 110189 199040  6285/6020/307    6409/879    35  143   22.93)
(smt.stats   36   4708 113145 210267  6296/6031/307    6534/879    35  143   23.03)
(smt.stats   37   4819 115792 220289  6302/6041/310    6671/1002    36  152   23.03)
(smt.stats   38   4941 119514 235135  6312/6051/312    6809/1136    37  163   23.03)
ramon: poll                 wall=11.000s usage=10.929s mem=24384KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 91)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   39   5075 122552 245215  6332/6071/316    7083/1139    37  163   23.13)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&62
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 8569975652674633&54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #876 #880) 64)) 72057594037927990 := 0 << 54
(smt.stats   40   5222 125725 257894  6345/6075/316    7310/1236    38  174   23.13)
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 66952934786520&58
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 0 := 66952934786520&58
band: (band[55] (if (or #615 #619) 0 (if #610 1 #866)) (shl[64] (* 2 #115) (mod #884 64))) 8 := 66952934786520&62
(smt.stats   41   5383 128364 262400  6447/6124/317    7520/1297    39  174   23.22)
(smt.stats   42   5560 132424 278938  6604/6311/317    7941/1297    39  174   23.22)
(smt.stats   43   5754 144363 322904  6608/6340/317    8249/1297    39  174   23.22)
(smt.stats   44   5967 151878 355001  6627/6359/318    8744/1523    40  177   23.43)
(smt.stats   45   6068 153936 363612  6630/6362/318    8867/1523    40  177   23.43)
(smt.stats   46   6179 156807 375926  6638/6370/318    9112/1523    40  177   23.43)
(smt.stats   47   6301 161019 388111  6650/6380/320    9307/1676    41  181   23.43)
(smt.stats   48   6435 164243 400031  6654/6383/320    9471/1676    41  181   23.43)
ramon: poll                 wall=12.000s usage=11.929s mem=24884KiB load=1.00 rootload=1.00
(smt.stats   49   6582 167651 413307  6662/6392/320    9712/1676    41  181   23.43)
(smt.stats   50   6743 182813 450974  6680/6394/320    9887/1677    41  181   23.53)
(smt.stats   51   6920 186103 466474  6956/6686/323   10170/1713    42  192   23.62)
(smt.stats   52   7114 193367 503889  6960/6686/323   10571/1713    42  192   23.72)
(smt.stats   53   7327 202569 554029  6975/6696/323   10836/1867    43  204   24.12)
(smt.stats   54   7561 210043 566255  6983/6712/323   11100/1867    43  204   24.12)
(smt.stats   55   7662 213796 585784  6988/6717/323   11325/1867    43  204   24.12)
(smt.stats   56   7773 219515 612846  7017/6738/323   11454/1868    43  204   24.22)
(smt.stats   57   7895 224310 641642  7024/6740/323   11612/1869    43  204   24.32)
(smt.stats   58   8029 227575 653489  7043/6758/323   11883/1869    43  204   24.32)
ramon: poll                 wall=13.000s usage=12.929s mem=25724KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8176 232528 661489  7053/6769/323   12068/1870    43  204   24.32)
(smt.stats   60   8337 239475 691145  7081/6796/323   12259/1874    43  204   24.41)
(smt.stats   61   8514 245156 729451  7095/6809/323   12591/1874    43  204   24.51)
(smt.stats   62   8708 250746 754875  7117/6816/323   12994/1874    43  204   24.60)
ramon: poll                 wall=14.000s usage=13.929s mem=26044KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.929s mem=26164KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.929s mem=26192KiB load=1.00 rootload=1.00
(smt.stats   63   8921 255383 775678  7391/6873/323   13299/1880    43  204   24.70)
(smt.stats   64   9155 259683 786036  7425/7144/324   13570/2217    44  206   24.70)
ramon: poll                 wall=17.000s usage=16.928s mem=26376KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.004s usage=17.932s mem=26376KiB load=1.00 rootload=1.01
ramon: poll                 wall=19.000s usage=18.928s mem=26544KiB load=1.00 rootload=0.99
(smt.stats   65   9412 263550 803060  7613/7145/324   13870/2224    44  206   24.79)
(smt.stats   66   9513 265515 807183  7643/7362/324   14009/2224    44  206   24.91)
(smt.stats   67   9624 269683 835172  7644/7363/327   14249/2251    45  212   24.91)
(smt.stats   68   9746 272624 848279  7646/7365/327   14450/2295    46  236   24.91)
(smt.stats   69   9880 276040 858181  7651/7370/327   14627/2295    46  236   24.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 945)
(smt.stats   70  10027 279611 871304  7662/7372/327   13995/2296    46  236   25.01)
ramon: poll                 wall=20.000s usage=19.928s mem=26556KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:02:50 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.010s
ramon: group.total          20.002s
ramon: group.utime          19.990s
ramon: group.stime          0.012s
ramon: group.mempeak        26816KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
