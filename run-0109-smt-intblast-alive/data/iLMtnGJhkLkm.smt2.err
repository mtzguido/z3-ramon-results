ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:46:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40854 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1259
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/iLMtnGJhkLkm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3052531
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3271   4395  1321/1191/90      96/4     3   14   19.07)
(smt.stats    1    203   5343   7953  1551/1398/96     186/10     5   18   19.26)
(smt.stats    2    314   7243   9709  2300/1708/96     297/46     5   18   19.46)
(smt.stats    3    415   8767  13009  2690/2421/100     392/75     7   24   19.65)
(smt.stats    4    526   9233  16162  2719/2454/100     502/78     7   24   19.65)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 53 := 53&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 53&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 59&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 56&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 179&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 56&4074372053913782
(smt.stats    5    648  11099  20664  2754/2455/107     620/80     8   25   19.75)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 1376&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 2080&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 4096&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 4074372053913760&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 3392&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854779200 := 3391 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 6048334299558576128&4074372053913782
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3392 := 3391 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 6048334299558576128&4074372053913782
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3392 := 3391 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 6048334299558576128&4074372053913782
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3392 := 3391 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4074372053913781 := 4503599627370496&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4074372053913781 := 72057594037927936&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4074372053913780 := 72057594037927936&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913782 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913780 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913776 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913768 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913760 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 64 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 128 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 256 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 512 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1024 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2048 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2048 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4096 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 8192 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 16384 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 32768 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 65536 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 131072 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 262144 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 524288 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1048576 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2097152 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4194304 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 8388608 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 16777216 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 33554432 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 67108864 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 134217728 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 268435456 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 536870912 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1073741824 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2147483648 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4294967296 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 8589934592 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 17179869184 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 34359738368 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 68719476736 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 137438953472 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 274877906944 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 549755813888 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 549755813888 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1099511627776 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2199023255552 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4398046511104 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 8796093022208 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 17592186044416 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 35184372088832 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 70368744177664 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 140737488355328 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 281474976710656 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 562949953421312 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1125899906842624 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 90071992547409920&4074372053913782
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 9223372036854775791 := 2068 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2251799813685249 := 90071992547409920&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 90071992547409920&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 90071992547409920&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 90071992547409920&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 90071992547409920&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 9169328841326329856&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 9169328841326329856&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 9169328841326329856&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 9169328841326329856&4074372053913782
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  11937  21955  3012/2687/371     772/83     9   33   21.51)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 1125899906842623 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 9169328841326329856&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1125899906842624 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 1125899906842625 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 373798769071751168&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1125899906842624 := 373798769071751168&4074372053913782
(smt.stats    7    860  16496  26352  3037/2712/376     888/83     9   33   21.61)
(smt.stats    8    983  19739  32081  3029/2753/395    1021/224    12  117   21.71)
(smt.stats    9   1117  23944  35798  3100/2771/400    1164/227    12  117   22.10)
(smt.stats   10   1218  26781  39404  3148/2872/401    1256/249    14  132   22.10)
(smt.stats   11   1329  33173  45236  3158/2882/402    1373/249    14  132   22.20)
ramon: poll                 wall=1.000s usage=0.916s mem=23964KiB load=0.92 rootload=0.90
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  35361  48905  3296/3014/406    1510/266    16  148   22.48)
(smt.stats   13   1585  42163  53772  3303/3021/409    1698/266    16  148   22.48)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456129&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456129&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456130&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456130&474319
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 418834765345456130 := 13510798882127965 << 19
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456136&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4 := 418834765345456136&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456136&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456136&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456136&474319
(smt.stats   14   1732  48844  60431  3423/3027/409    1841/296    17  207   22.58)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 130 := 418834765345456770&474319
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 418834765345456770 := 13510798882127965 << 19
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 128 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 131 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 6 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 10 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 18 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 34 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 66 := 418834765345456706&474319
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 418834765345456706 := 13510798882127965 << 19
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 256 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 35 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 290 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 1090 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2114 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4490 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4554 := 418834765345456706&474319
(smt.stats   15   1833  50481  62958  3654/3232/471    2150/316    18  212   22.68)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 38 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 34 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 66 := 418834765345456706&474319
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 418834765345456706 := 13510798882127965 << 19
(smt.stats   16   1944  54910  72353  3691/3382/500    2472/318    18  212   22.81)
(smt.stats   17   2066  59390  81265  3714/3424/505    2842/610    20  257   22.81)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 18 := 4503599627370551&115
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 23 := 4503599627371319&115
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 19 := 4503599627371319&115
(smt.stats   18   2200  63570  92426  3943/3656/508    3182/814    21  265   23.00)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
(smt.stats   19   2347  67400  99870  4165/3776/516    3489/820    21  265   23.10)
(smt.stats   20   2508  73303 114339  4210/3910/517    3835/911    23  276   23.19)
ramon: poll                 wall=2.000s usage=1.916s mem=24612KiB load=1.00 rootload=0.99
(smt.stats   21   2609  78940 125436  4299/3971/517    4050/912    23  276   23.29)
(smt.stats   22   2720  84322 140828  4311/4014/519    4220/996    24  284   23.29)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   23   2842  86974 145751  4491/4016/520    4397/1007    25  287   23.58)
(smt.stats   24   2976  89909 150692  4603/4200/520    4653/1008    25  287   23.58)
(smt.stats   25   3123  98787 168413  4625/4318/524    5036/1051    26  292   23.67)
(smt.stats   26   3284 106510 187953  4650/4342/526    5410/1208    27  295   23.77)
(smt.stats   27   3461 114029 203203  4719/4366/526    5924/1216    27  295   23.77)
ramon: poll                 wall=3.001s usage=2.917s mem=25080KiB load=1.00 rootload=1.00
(smt.stats   28   3562 117995 213359  4751/4443/527    6224/1396    28  297   23.77)
(smt.stats   29   3673 124130 230912  4769/4469/528    6413/1477    29  299   23.86)
(smt.stats   30   3795 127260 237248  4855/4472/528    6571/1477    29  299   23.96)
(smt.stats   31   3929 127887 238919  5095/4636/528    6738/1477    29  299   24.16)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 702561541869797632&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9925933578724573440 := 127 << 1
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 702561541869797632&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9925933578724573440 := 64 << 1
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 702561541869797888&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9925933578724573696 := 127 << 1
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 702561541869797888&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9925933578724573696 := 127 << 1
ramon: poll                 wall=4.000s usage=3.915s mem=25644KiB load=1.00 rootload=1.00
(smt.stats   32   4076 131866 249725  5387/5050/538    7249/1739    30  331   24.16)
(smt.stats   33   4237 134888 259040  5600/5269/544    7651/1742    30  331   24.35)
(smt.stats   34   4414 138465 266879  5758/5315/544    7955/1744    30  331   24.53)
ramon: poll                 wall=5.000s usage=4.915s mem=26028KiB load=1.00 rootload=1.00
(smt.stats   35   4608 146316 287771  5847/5523/545    8478/1882    31  334   24.62)
(smt.stats   36   4709 149778 298381  5881/5557/545    8630/2013    32  337   24.72)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 3 := 66&7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 66&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 66 := 66 << 3
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 66&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 66 := 66 << 3
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 66&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 66 := 66 << 3
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 3 := 3&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 3 := 3 << 3
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 3 := 3&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 3 := 3 << 3
(smt.stats   37   4821 152833 305298  5966/5652/547    8811/2015    32  337   24.72)
(smt.stats   38   4943 155441 316920  5994/5683/552    9138/2016    32  337   24.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 96)
(smt.stats   39   5077 159960 329487  5997/5692/552    9260/2100    33  338   24.81)
(smt.stats   40   5224 165287 356682  6008/5699/553    9458/2103    33  338   25.04)
(smt.stats   41   5385 172230 390737  6023/5715/555    9666/2147    34  338   25.04)
(smt.stats   42   5562 177372 404801  6046/5740/556   10207/2160    35  343   25.14)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5756 188571 443318  6291/5749/557   10810/2165    35  343   25.23)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627379225&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627380761&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627380761&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381017&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381017&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381273&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381273&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381785&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381273&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 8721 := 4503599627381273&2086078491603856855
ramon: poll                 wall=6.000s usage=5.915s mem=26812KiB load=1.00 rootload=1.00
(smt.stats   44   5969 195266 468014  6640/6028/557   11383/2249    36  355   25.52)
(smt.stats   45   6070 199552 477723  6658/6334/603   11604/2307    37  378   25.52)
(smt.stats   46   6181 203022 494015  6708/6372/604   11789/2307    37  378   25.71)
(smt.stats   47   6303 209301 509975  6850/6411/604   12065/2386    38  380   25.71)
(smt.stats   48   6437 214761 530906  6979/6551/605   12457/2390    38  380   25.90)
ramon: poll                 wall=7.000s usage=6.914s mem=27432KiB load=1.00 rootload=1.00
(smt.stats   49   6584 219352 545224  7088/6684/605   13029/2525    39  383   25.90)
(smt.stats   50   6745 226008 568013  7486/6841/605   13496/2530    39  383   26.00)
ramon: poll                 wall=8.000s usage=7.914s mem=28080KiB load=1.00 rootload=1.00
(smt.stats   51   6922 232838 594042  7645/7295/606   13906/2644    40  383   26.37)
(smt.stats   52   7116 241718 630017  7811/7410/609   14402/2647    40  383   26.46)
(smt.stats   53   7329 252317 661487  8165/7520/609   14961/2766    41  406   26.56)
ramon: poll                 wall=9.000s usage=8.913s mem=28336KiB load=1.00 rootload=1.00
(smt.stats   54   7563 261282 697765  8462/8116/610   15994/2959    42  410   26.88)
(smt.stats   55   7664 266468 707678  8698/8162/610   16577/2964    42  410   27.08)
ramon: poll                 wall=10.000s usage=9.896s mem=28688KiB load=0.98 rootload=0.98
(smt.stats   56   7775 270814 716382  8847/8405/610   16822/2967    42  410   27.17)
ramon: poll                 wall=11.005s usage=10.900s mem=28936KiB load=1.00 rootload=1.00
(smt.stats   57   7897 275379 728105  9063/8554/610   17001/2967    42  410   27.27)
(smt.stats   58   8031 280301 749177  9163/8849/610   17316/2967    42  410   27.27)
(smt.stats   59   8178 290294 784289  9194/8880/611   17648/3246    43  416   27.40)
(smt.stats   60   8339 298184 814533  9363/8921/612   18037/3304    44  434   27.49)
(smt.stats   61   8516 302907 834855  9431/9117/613   18515/3304    44  434   27.59)
ramon: poll                 wall=12.000s usage=11.894s mem=29304KiB load=1.00 rootload=1.00
(smt.stats   62   8710 308879 873443  9444/9130/613   19123/3373    45  448   27.68)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8923 313386 879868  9731/9132/614   19506/3549    46  451   27.87)
ramon: poll                 wall=13.001s usage=12.894s mem=29436KiB load=1.00 rootload=1.00
(smt.stats   64   9157 321700 936725  9972/9658/618   20741/3549    46  451   27.87)
(smt.stats   65   9414 335820 991907  9987/9673/618   21590/3874    47  488   27.97)
(smt.stats   66   9515 337932 1003546 10011/9686/618   22045/3874    47  488   28.07)
(smt.stats   67   9626 340143 1010270 10178/9758/618   22245/3875    47  488   28.16)
ramon: poll                 wall=14.001s usage=13.893s mem=29760KiB load=1.00 rootload=1.00
(smt.stats   68   9748 341770 1016378 10572/10015/618   22414/3878    47  488   28.26)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9882 344713 1020195 10736/10269/618   22635/3878    47  488   28.35)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=15.000s usage=14.880s mem=30104KiB load=0.99 rootload=0.99
(smt.stats   70  10029 348912 1032920 11087/10644/618   22914/3878    47  488   28.45)
(smt.stats   71  10190 352964 1045516 11472/10840/618   23220/3878    47  488   28.54)
ramon: poll                 wall=16.000s usage=15.880s mem=30536KiB load=1.00 rootload=1.00
(smt.stats   72  10367 356091 1062240 11978/11266/618   23539/3878    47  488   28.73)
(smt.stats   73  10561 365595 1099302 12155/11812/619   24558/4242    48  493   28.83)
(smt.stats   74  10774 374916 1124512 12323/11855/620   25060/4244    48  493   28.83)
ramon: poll                 wall=17.000s usage=16.880s mem=30856KiB load=1.00 rootload=1.00
(smt.stats   75  11008 384465 1170813 12366/12052/625   25894/4455    49  493   28.93)
(smt.stats   76  11265 397110 1202654 12610/12062/625   26303/4631    50  542   29.12)
(smt.stats   77  11547 409617 1254646 12796/12357/625   27187/4636    50  542   29.21)
ramon: poll                 wall=18.000s usage=17.880s mem=30932KiB load=1.00 rootload=1.00
(smt.stats   78  11648 415731 1273188 12873/12489/625   27528/4641    50  542   29.34)
(smt.stats   79  11759 421826 1300240 13002/12621/625   27874/4642    50  542   29.44)
(smt.stats   80  11881 429424 1327391 13007/12693/625   28082/4643    50  542   29.44)
(smt.stats   81  12015 433494 1335414 13060/12707/625   28363/4644    50  542   29.44)
(smt.stats   82  12162 443083 1356861 13081/12763/625   28564/4644    50  542   29.44)
ramon: poll                 wall=19.000s usage=18.879s mem=31152KiB load=1.00 rootload=0.99
(smt.stats   83  12323 452127 1397736 13090/12776/625   28891/4644    50  542   29.53)
(smt.stats   84  12500 461145 1438817 13178/12781/625   29444/4646    50  542   29.53)
(smt.stats   85  12694 472772 1473563 13430/12871/625   30182/4647    50  542   29.74)
ramon: poll                 wall=20.000s usage=19.879s mem=31332KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:46:35 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.961s
ramon: group.utime          19.941s
ramon: group.stime          0.020s
ramon: group.mempeak        31584KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              0.99
