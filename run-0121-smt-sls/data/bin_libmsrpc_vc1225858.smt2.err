ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:19:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         32391 MiB
ramon: sys.mem.avail        62136 MiB
ramon: sys.nprocs           1178
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1225858.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1312218
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
tabu (if (= (extract[1:1] v499045484) bv[0:1]) (if (and #25974 #25975) bv[0:64] (if #25979 #16777 #20070)) (concat (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) (extract[7:7] v545166796) ...))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      47      3   227.318     10002         0          0          139      532)
(sat.ddfw      44     45   132.224     20051         0          1          119      614)
(sat.ddfw      18     12    205.66     40000         0          2            3    11331)
(sat.ddfw      18     12    303.03     70000         0          3            3    33244)
(sat.ddfw      18     12    388.35    110000         0          4            3    62233)
(sat.ddfw      18     12    467.29    160000         0          5            3    98506)
(sat.ddfw      18     97   364.261    220103         1          6          169   127861)
(sat.ddfw      18    181   323.597    290000         1          7            3   167968)
(sat.ddfw      18    185   353.982    370000         2          8            3   226022)
(sat.ddfw      18    514   215.457    460061         3          9           90   246236)
(sat.ddfw      18    972   145.562    560062         3         10          152   247149)
ramon: poll                 wall=1.001s usage=1.001s mem=24228KiB load=1.00 rootload=0.99
(sat.ddfw      15     69   101.485    670072         4         11          107   247619)
(sat.ddfw      10    591   78.7126    790030         5         12          127   248365)
ramon: poll                 wall=2.000s usage=1.997s mem=24228KiB load=1.00 rootload=0.99
(sat.ddfw      10   1025   65.4783    920070         6         13           83   248781)
(sat.ddfw       5    495   52.8855   1060005         7         14           18   249470)
ramon: poll                 wall=3.000s usage=2.997s mem=24228KiB load=1.00 rootload=1.00
(sat.ddfw       3    277   43.9143   1210060         7         15          145   250191)
ramon: poll                 wall=4.000s usage=3.996s mem=24228KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   37.5907   1370046         7         16           60   251428)
ramon: poll                 wall=5.000s usage=4.996s mem=24228KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   34.1503   1540046         9         17           45   252428)
ramon: poll                 wall=6.000s usage=5.996s mem=24228KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.996s mem=24228KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   24.1026   1720068        11         18           99   253094)
ramon: poll                 wall=8.000s usage=7.996s mem=24228KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=24228KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   19.5043   1910001        13         19           16   254192)
ramon: poll                 wall=10.000s usage=9.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=24024KiB load=1.00 rootload=1.00
(sat.ddfw       1    515   13.9713   2110000        17         20           62   254973)
ramon: poll                 wall=15.000s usage=14.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.994s mem=24024KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.994s mem=24024KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:19:33 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.003s
ramon: group.utime          19.995s
ramon: group.stime          0.008s
ramon: group.mempeak        24280KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
