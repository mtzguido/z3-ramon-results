ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:27:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25543 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Ts7qrtwYSLwZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             48456
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 97 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 97 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 4398046511104 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 4398046511104 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 4398046511104 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 4398046511104 := 1610612736 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 4398046511104 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 97 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 97 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 97 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 97 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&3298534883328
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1 := 48 << 36
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&3298534883328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 3298534883328 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&3298534883328
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1 := 48 << 36
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 18446744073709551615 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&3298534883328
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1 := 48 << 36
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 97 := 96 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&3298534883328
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1 := 48 << 36
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 769 := 768 << 35
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&0
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1 := 384 << 36
(smt.stats    0    101   1127    507  1062/927/99      96/7     5   19   18.98)
(smt.stats    1    202   1941   1369  1157/1036/107     190/11     8   23   19.17)
(smt.stats    2    313   2463   2607  1398/1163/109     322/14     9   25   19.27)
(smt.stats    3    414   2905   4365  1531/1343/110     444/27    10   30   19.36)
(smt.stats    4    525   4513   7643  1610/1479/129     567/75    14   66   19.36)
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&82
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 40 := 41 << 1
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&82
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 40 := 41 << 1
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&82
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 268437841 := 41 << 1
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&82
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 268437841 := 41 << 1
(smt.stats    5    647   6034   9225  1655/1503/129     691/84    15   69   19.36)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   8357  12627  1675/1536/134     800/85    16   70   19.36)
(smt.stats    7    859   9977  17455  1691/1550/134     931/86    17   70   19.46)
(smt.stats    8    981  12210  19898  1704/1563/134    1051/86    17   70   19.46)
(smt.stats    9   1115  14418  22471  1729/1586/144    1206/97    18   71   19.46)
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 33 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 31 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 32 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 32 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 32 := 33&536872142
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 33&536872192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 536872192 := 536872140 << 41
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 33&4397778073345
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 1 := 33&4397778073345
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 4397778073345 := 536872140 << 41
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 31 := 33&4397778073375
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 31 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 31 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 29 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 9 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 17 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 4 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 17 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 5 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 9 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 5 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 5 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 5 := 33&536872141
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 1 := 33&536872141
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 536872141 := 536872140 << 41
(smt.stats   10   1216  15719  24485  1804/1634/195    1307/187    19   82   19.69)
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&536872194
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 118747792672002 := 536872192 << 15
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 0&536872194
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 21990769427714 := 536872192 << 15
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 1&2954669061888
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 16148808595200 := 536872150 << 36
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 1&2954937499648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 16149077032960 := 536872150 << 36
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 1&1511828488192
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2954937499647 := 268436075 << 37
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 1&1511828488192
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2954937499647 := 268436075 << 37
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 1&1511828488192
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #580 1 #590)) (shl[42] (bv2int %0) (+ 42 #730))) 1 := 1&1511828488192
(smt.stats   11   1328  18126  27058  1837/1666/205    1415/197    20   97   19.89)
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 1&1511828488192
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 0 := 268436075 << 37
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 1 := 1&1511828488192
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  21285  29085  1877/1723/225    1540/201    21  101   19.89)
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 8 := 8&536873322
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 8796629895530 := 536873320 << 39
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 8 := 8&536873322
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 8796629895530 := 536873320 << 39
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 8 := 8&536873322
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 8796629895530 := 536873320 << 39
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 8 := 8&686926329608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 13881065862920 := 536873236 << 39
(smt.stats   13   1584  22975  31042  1947/1741/227    1676/208    22  101   20.11)
ramon: poll                 wall=1.000s usage=0.998s mem=21328KiB load=1.00 rootload=0.98
(smt.stats   14   1731  24390  32482  2088/1838/232    1842/215    23  107   20.40)
(smt.stats   15   1832  25399  33349  2253/2029/232    1952/215    23  107   20.40)
ramon: poll                 wall=2.000s usage=1.997s mem=21640KiB load=1.00 rootload=1.00
(smt.stats   16   1943  25803  34500  2469/2320/233    2064/245    24  107   20.49)
(smt.stats   17   2065  29788  36938  2489/2340/235    2182/259    25  121   20.49)
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 16&886369399328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 886369399328 := 8796093021662 << 40
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 16&886369399326
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 16&886369399296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 886369399296 := 8796093021662 << 40
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 0 := 16&884750398064
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 16 := 16&884750398064
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 884750398064 := 8796093021662 << 40
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 16 := 16&884750398065
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 884750398065 := 8796093021662 << 40
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 16 := 16&884750398065
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 884750398065 := 8796093021662 << 40
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 16 := 16&4397778072981
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 4397778072981 := 8796093021662 << 40
(smt.stats   18   2199  32127  40005  2582/2389/246    2351/263    26  122   20.68)
ramon: poll                 wall=3.000s usage=2.997s mem=21872KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.997s mem=21924KiB load=1.00 rootload=1.00
(smt.stats   19   2346  34660  42328  2762/2519/246    2510/287    27  127   20.78)
(smt.stats   20   2507  37306  45618  3028/2654/246    2712/290    27  127   20.78)
(smt.stats   21   2608  40361  49544  3036/2878/246    2821/290    27  127   20.88)
(smt.stats   22   2719  42499  51894  3217/2888/246    2974/290    27  127   20.97)
(smt.stats   23   2841  45755  54700  3296/3096/246    3135/291    27  127   20.97)
ramon: poll                 wall=5.000s usage=4.997s mem=22308KiB load=1.00 rootload=1.00
(smt.stats   24   2975  48331  59397  3406/3150/246    3302/300    27  127   20.97)
ramon: poll                 wall=6.000s usage=5.997s mem=22308KiB load=1.00 rootload=1.00
(smt.stats   25   3122  51053  62920  3518/3332/246    3450/302    27  127   21.07)
ramon: poll                 wall=7.000s usage=6.996s mem=22348KiB load=1.00 rootload=1.00
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 3 := 33&879061248633
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 3 := 33&879052862073
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 3 := 33&879052859385
band: (band[42] (if (or #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 ...) 0 (if #800 1 #810)) (shl[64] (* 2 #114) (mod #1044 64))) 33 := 33&879052859385
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1041 #1043) 64)) 3690397308473714681 := 4398690760128 << 41
(smt.stats   26   3283  53387  69407  3967/3388/246    3673/314    27  127   21.37)
(smt.stats   27   3460  56273  75916  4166/4009/253    3923/472    29  134   21.50)
(smt.stats   28   3561  59764  81063  4184/4025/254    4042/472    29  134   21.50)
(smt.stats   29   3672  63146  90459  4216/4029/254    4172/519    30  135   21.59)
(smt.stats   30   3794  65766  95336  4285/4116/257    4315/529    31  141   21.59)
ramon: poll                 wall=8.000s usage=7.996s mem=22980KiB load=1.00 rootload=1.00
(smt.stats   31   3928  68514 100769  4296/4135/257    4500/529    31  141   21.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  74031 105898  4305/4142/257    4657/565    32  145   21.69)
(smt.stats   33   4236  76553 109106  4394/4155/257    4824/573    32  145   21.78)
(smt.stats   34   4413  83783 119702  4593/4293/257    5032/577    32  145   21.78)
(smt.stats   35   4607  87910 127412  4679/4458/258    5335/607    33  147   21.78)
ramon: poll                 wall=9.000s usage=8.996s mem=23128KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.996s mem=23176KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.996s mem=23176KiB load=1.00 rootload=1.00
(smt.stats   36   4708  90116 133915  4798/4526/258    5479/607    33  147   21.98)
ramon: poll                 wall=12.000s usage=11.995s mem=23212KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.995s mem=23212KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.995s mem=23212KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.995s mem=23212KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.995s mem=23212KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.994s mem=23212KiB load=1.00 rootload=1.00
(smt.stats   37   4819  92171 142332  4862/4653/258    5588/610    33  147   21.98)
ramon: poll                 wall=18.000s usage=17.994s mem=23212KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.994s mem=23212KiB load=1.00 rootload=1.00
(smt.stats   38   4941  93806 147648  4897/4733/263    5732/649    34  149   21.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 54)
(smt.stats   39   5075  96179 152044  4964/4744/263    5833/655    34  149   21.98)
(smt.stats   40   5222  99568 159876  5068/4902/265    5974/696    35  162   21.98)
ramon: poll                 wall=20.000s usage=19.994s mem=23532KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:27:57 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.985s
ramon: group.stime          0.016s
ramon: group.mempeak        23788KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
