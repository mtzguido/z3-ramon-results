ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:55:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28398 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EB8t6GAnSudu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4130918
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 0 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 0 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 1 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 1 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (or #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 ...) 0 (if #594 1 #596))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 34359738370 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 34359738368 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (or #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 ...) 0 (if #594 1 #596))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 1 := 34359738368&1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 37 := 35 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 37 := 35 << 35
(smt.stats    0    101   2124    678  1067/933/131      90/18     7   27   19.09)
(smt.stats    1    202   3424   1921  1467/1294/141     184/28    10   36   19.37)
(smt.stats    2    313   4616   3555  1576/1421/144     318/50    12   41   19.47)
(smt.stats    3    414   6605   5768  1595/1436/145     424/53    13   41   19.47)
(smt.stats    4    525   7341   6417  1657/1444/148     537/56    14   44   19.66)
ramon: poll                 wall=1.000s usage=0.930s mem=20776KiB load=0.93 rootload=0.92
(smt.stats    5    647   7937   7088  1816/1566/148     666/58    14   44   19.66)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   9212   8987  1906/1724/148     771/58    14   44   19.66)
(smt.stats    7    859  11451  12496  1928/1763/149     904/65    15   47   19.75)
(smt.stats    8    981  12354  14756  2053/1865/150    1042/84    16   53   19.85)
(smt.stats    9   1115  13762  18030  2176/2009/151    1196/99    17   53   19.95)
ramon: poll                 wall=2.000s usage=1.929s mem=21156KiB load=1.00 rootload=1.00
(smt.stats   10   1216  16071  21775  2239/2021/151    1311/101    17   53   20.04)
(smt.stats   11   1327  18256  24341  2258/2095/151    1429/101    17   53   20.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  18997  25593  2381/2102/151    1558/104    17   53   20.14)
(smt.stats   13   1583  21133  28505  2519/2307/152    1722/117    18   54   20.14)
ramon: poll                 wall=3.000s usage=2.928s mem=21356KiB load=1.00 rootload=1.00
(smt.stats   14   1730  23384  32314  2663/2420/155    1917/129    19   58   20.23)
(smt.stats   15   1831  25098  34575  2724/2511/155    2028/137    20   64   20.34)
(smt.stats   16   1942  27152  37388  2815/2566/157    2157/138    20   64   20.34)
(smt.stats   17   2064  28789  40666  2830/2669/161    2280/155    21   73   20.34)
(smt.stats   18   2198  30841  46917  2887/2725/163    2440/168    23   78   20.34)
ramon: poll                 wall=4.000s usage=3.928s mem=21572KiB load=1.00 rootload=1.00
(smt.stats   19   2345  32950  53969  2975/2801/165    2632/179    24   83   20.44)
(smt.stats   20   2506  35949  58801  3139/2857/165    2881/180    24   83   20.53)
(smt.stats   21   2607  37731  62082  3232/3015/165    2990/180    24   83   20.53)
(smt.stats   22   2718  39373  67248  3372/3086/165    3103/181    24   83   20.53)
(smt.stats   23   2840  41127  71019  3412/3227/165    3225/181    24   83   20.63)
(smt.stats   24   2974  42465  76666  3460/3263/165    3427/183    24   83   20.73)
(smt.stats   25   3121  45292  82421  3494/3317/169    3588/276    25   85   20.73)
ramon: poll                 wall=5.000s usage=4.928s mem=22100KiB load=1.00 rootload=1.00
(smt.stats   26   3282  47529  89537  3511/3332/169    3773/294    26   91   20.92)
(smt.stats   27   3459  50044  99609  3576/3355/169    3992/297    26   91   20.92)
(smt.stats   28   3560  51610 104257  3617/3418/170    4117/343    27   94   20.92)
(smt.stats   29   3671  53031 109786  3689/3470/170    4284/343    27   94   20.92)
(smt.stats   30   3793  55022 116474  3763/3541/170    4447/345    27   94   20.92)
(smt.stats   31   3927  56991 122933  3888/3615/171    4603/389    28   97   21.02)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  58407 133437  3962/3734/171    4776/390    28   97   21.02)
ramon: poll                 wall=6.000s usage=5.928s mem=22252KiB load=1.00 rootload=1.00
(smt.stats   33   4235  60099 143620  4075/3860/177    4974/452    29  102   21.12)
(smt.stats   34   4412  62327 157109  4255/3983/177    5167/453    29  102   21.12)
(smt.stats   35   4606  65629 164803  4341/4091/177    5354/493    30  122   21.21)
(smt.stats   36   4707  68070 170914  4356/4190/177    5488/493    30  122   21.21)
(smt.stats   37   4818  70835 180833  4376/4202/178    5601/538    31  126   21.21)
(smt.stats   38   4940  72624 189224  4400/4222/178    5776/538    31  126   21.31)
(smt.delete-inactive-clauses  :num-deleted-clauses 94)
(smt.stats   39   5074  73947 193013  4445/4240/178    5852/540    31  126   21.31)
ramon: poll                 wall=7.000s usage=6.927s mem=22604KiB load=1.00 rootload=1.00
(smt.stats   40   5221  75745 199026  4535/4291/178    6033/543    31  126   21.40)
ramon: poll                 wall=8.000s usage=7.927s mem=22744KiB load=1.00 rootload=1.00
(smt.stats   41   5382  76936 201467  4689/4375/178    6197/545    31  126   21.50)
(smt.stats   42   5559  78213 209543  4860/4610/178    6376/548    31  126   21.59)
(smt.stats   43   5753  80228 212841  4972/4723/178    6595/553    31  126   21.69)
(smt.stats   44   5966  83206 224188  5119/4952/179    6869/686    32  128   21.69)
(smt.stats   45   6067  84382 229869  5122/4955/179    6980/686    32  128   21.69)
ramon: poll                 wall=9.000s usage=8.927s mem=22912KiB load=1.00 rootload=1.00
(smt.stats   46   6178  85220 234319  5125/4958/179    7119/686    32  128   21.69)
(smt.stats   47   6300  86646 239314  5145/4962/179    7255/687    32  128   21.91)
(smt.stats   48   6434  88616 247075  5211/5002/179    7402/690    32  128   22.01)
(smt.stats   49   6581  90674 253932  5246/5066/179    7584/690    32  128   22.01)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1 := 68719476674 << 2
(smt.stats   50   6742  92895 260462  5325/5082/179    7816/694    32  128   22.01)
(smt.stats   51   6919  95388 269872  5544/5320/184    8090/790    33  129   22.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113  97606 278993  5693/5466/184    8322/801    34  129   22.20)
ramon: poll                 wall=10.000s usage=9.927s mem=23488KiB load=1.00 rootload=1.00
(smt.stats   53   7326  99816 287251  5851/5542/184    8581/805    34  129   22.20)
(smt.stats   54   7560 103263 297098  5994/5757/184    8856/807    34  129   22.29)
(smt.stats   55   7661 104492 301533  6107/5837/184    9011/809    34  129   22.39)
(smt.stats   56   7772 105249 303664  6133/5951/184    9128/809    34  129   22.39)
ramon: poll                 wall=11.000s usage=10.926s mem=23684KiB load=1.00 rootload=0.99
(smt.stats   57   7894 106865 308914  6199/5967/184    9280/809    34  129   22.39)
(smt.stats   58   8028 108090 314343  6217/6048/199    9408/953    35  162   22.39)
(smt.stats   59   8175 110306 329740  6286/6065/199    9568/953    35  162   22.39)
(smt.stats   60   8336 112854 344667  6490/6158/199    9786/954    35  162   22.48)
(smt.stats   61   8513 114377 350727  6645/6356/199    9978/955    35  162   22.48)
ramon: poll                 wall=12.004s usage=11.929s mem=23832KiB load=1.00 rootload=1.01
(smt.stats   62   8707 115732 356162  6745/6525/199   10191/955    35  162   22.58)
(smt.stats   63   8920 117887 368056  6830/6628/199   10418/955    35  162   22.67)
(smt.stats   64   9154 119877 376531  6884/6674/199   10680/956    35  162   22.67)
(smt.stats   65   9411 122295 397689  6999/6736/199   10936/956    35  162   22.77)
(smt.stats   66   9512 123069 402599  7021/6854/199   11056/957    35  162   22.77)
ramon: poll                 wall=13.000s usage=12.925s mem=24096KiB load=1.00 rootload=0.99
(smt.stats   67   9623 124260 407394  7147/6865/199   11182/957    35  162   22.77)
(smt.stats   68   9745 125417 412159  7414/7043/199   11335/960    35  162   22.87)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 576439726223917676 := 68182606526 << 14
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 576439726223917676 := 68182606526 << 14
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 576440275979731564 := 68182606526 << 14
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42127119614572 := 68182606524 << 12
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42264558568044 := 68182606524 << 12
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42264558568044 := 68182606524 << 12
(smt.stats   69   9879 127371 422114  7577/7263/199   11543/962    35  162   22.87)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42195839091308 := 68182606522 << 10
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42264558568044 := 68182606522 << 10
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42264558568044 := 68182606522 << 10
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42264558568044 := 68182606523 << 11
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42195839091308 := 68182606523 << 11
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42195839091308 := 68182606523 << 11
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10026 128775 426259  7656/7435/209   11720/1154    36  164   22.96)
(smt.stats   71  10187 129865 432231  7686/7491/219   11886/1154    36  164   22.96)
(smt.stats   72  10364 131662 436432  7702/7516/219   12069/1155    36  164   23.06)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&1
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (or #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 ...) 0 (if #594 1 #596))) 1 := 34359738368&1
(smt.stats   73  10558 133478 443865  7734/7539/219   12446/1187    37  166   23.15)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 32749125630&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 69851737489406 := 68182606540 << 28
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 32749125630&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 69920456966142 := 68182606540 << 28
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738366&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 69922067578878 := 68182606540 << 28
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 54760833024&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 54760833152 := 68182606540 << 28
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 54760833024&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 54760833152 := 68182606540 << 28
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 55834574848&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 18302629078907224064 := 68182606544 << 32
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 46170898508&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 41758893277260 := 68182606544 << 32
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 46170898508&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 41758893277260 := 68182606544 << 32
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 1 := 68182606544 << 32
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 2 := 68182606544 << 32
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 2 := 68182606544 << 32
(smt.stats   74  10772 136299 463162  7816/7562/224   12800/1192    37  166   23.27)
(smt.stats   75  11006 139298 475055  7854/7668/244   13061/1267    38  171   23.36)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1117172533297153 := 68182606513 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 41644002902017 := 68182606513 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 0 := 68182606515 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606515 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606515 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606514 << 2
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606514 << 2
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606516 << 4
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606518 << 6
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606517 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476737 := 68182606519 << 7
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606519 << 7
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 68719476736 := 68182606519 << 7
(smt.stats   76  11263 143835 497760  7955/7678/244   13356/1269    38  171   23.56)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 88960&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 88962 := 68182606519 << 7
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 88960&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 88962 := 68182606519 << 7
(smt.stats   77  11545 146890 513348  8054/7817/274   13799/1304    39  177   23.75)
ramon: poll                 wall=14.000s usage=13.925s mem=25136KiB load=1.00 rootload=1.00
(smt.stats   78  11646 148770 523114  8061/7865/279   13899/1304    39  177   23.75)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 279207233978371 := 68182606536 << 24
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2147484007&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 139640124211559 := 68182606536 << 24
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375407&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 139708776579695 := 68182606536 << 24
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2080375407&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 139708776579695 := 68182606536 << 24
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 11945377792&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 0 := 68182606536 << 24
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 11945377792&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 0 := 68182606536 << 24
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 41987600285698 := 68182606537 << 25
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42056319762434 := 68182606537 << 25
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 42056319762434 := 68182606537 << 25
(smt.stats   79  11757 151051 534613  8156/7879/279   14038/1360    40  178   24.15)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 23924310016&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 34359738368 := 68182606537 << 25
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 23924310016&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 34359738366 := 68182606537 << 25
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 23924310016&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 28219277612 := 68182606537 << 25
(smt.stats   80  11879 153342 545805  8297/7971/294   14265/1363    40  178   24.34)
(smt.stats   81  12013 154404 553688  8323/8104/299   14484/1363    40  178   24.34)
(smt.stats   82  12160 156061 561330  8520/8132/299   14655/1393    41  182   24.44)
(smt.stats   83  12321 159413 581390  8715/8365/299   14898/1395    41  182   24.53)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 159494&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1143914030474358534 := 68182606531 << 19
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 26&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1143914030474199066 := 68182606531 << 19
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 26&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1143914030474199066 := 68182606531 << 19
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 28&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1143913824315768860 := 68182606533 << 21
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 28&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1143913824315768860 := 68182606535 << 23
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 48&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 14499809591344 := 68182606539 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 56 := 68182606539 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549755813944 := 68182606539 << 27
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 56 := 68182606546 << 34
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2 := 68182606546 << 34
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2 := 68182606546 << 34
(smt.stats   84  12498 162740 603140  8823/8530/299   15240/1401    41  182   24.63)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 0 := 68182606546 << 34
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 2 := 68182606546 << 34
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359738368&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 2 := 68182606546 << 34
(smt.stats   85  12692 166684 619823  8901/8656/324   15461/1452    42  187   24.63)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606518&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1143914098656805558 := 68182606516 << 4
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606518&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 1143914098656805558 := 68182606516 << 4
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 60129553216&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 47244640256 := 68182606516 << 4
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 60129553216&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 47244640256 := 68182606516 << 4
(smt.stats   86  12905 171480 636878  8935/8698/329   15753/1454    42  187   24.82)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 64424514968&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 68182606720 := 68182606515 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 64424514968&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 68182606720 := 68182606515 << 3
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606946&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218944098 := 68182606527 << 15
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606436&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943588 := 68182606527 << 15
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606436&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943588 := 68182606527 << 15
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606425&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943577 := 68182606518 << 6
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606425&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943577 := 68182606518 << 6
ramon: poll                 wall=15.000s usage=14.925s mem=26456KiB load=1.00 rootload=0.99
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606427&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943579 := 68182606517 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606427&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943579 := 68182606517 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606431&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943583 := 68182606520 << 8
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606431&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943583 := 68182606520 << 8
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606595&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943747 := 68182606520 << 8
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606433&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943585 := 68182606525 << 13
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606427&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943579 := 68182606525 << 13
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606427&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943579 := 68182606525 << 13
(smt.stats   87  13139 175886 645953  9010/8718/334   16006/1468    43  189   25.02)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606428&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943580 := 68182606521 << 9
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606430&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943582 := 68182606521 << 9
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 68182606430&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 549218943582 := 68182606521 << 9
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 481036337159 := 68182606514 << 2
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 6&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 481036337158 := 68182606517 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 38117835406&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 519154172558 := 68182606528 << 16
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 38117835396&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 519154172548 := 68182606528 << 16
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 38117835396&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 519154172548 := 68182606528 << 16
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 481036337152 := 68182606529 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 481036337154 := 68182606529 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 481036337154 := 68182606529 << 17
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 38117835406&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 519154172558 := 68182606530 << 18
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 38117835396&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 519154172548 := 68182606530 << 18
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 38117835396&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 519154172548 := 68182606530 << 18
(smt.stats   88  13396 182602 668940  9129/8811/354   16507/1474    43  189   25.11)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 185073664&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 68719476312 := 68182606530 << 18
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 185073664&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 68719476312 := 68182606530 << 18
(smt.stats   89  13678 187236 686232  9198/8892/374   16875/1483    44  197   25.40)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 67645736290&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 180617214 := 68182606513 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 67645736290&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 180617214 := 68182606513 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 66571995848&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 34359738368 := 68182606514 << 2
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 66571995848&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 34359738368 := 68182606514 << 2
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 51539629728&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 17179869184 := 68182606517 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 51539629728&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 17179869184 := 68182606517 << 5
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359782784&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 34359738368 := 68182606518 << 6
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 34359782784&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 34359738368 := 68182606518 << 6
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 178176&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 0 := 68182606520 << 8
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 178176&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 0 := 68182606520 << 8
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   90  13988 194148 709822  9325/8963/379   17218/1489    44  197   25.69)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2867200&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 50465865726 := 68182606524 << 12
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 2867200&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 47244640256 := 68182606524 << 12
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1431552&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 39191576516 := 68182606523 << 11
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 1431552&0
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 39191576516 := 68182606523 << 11
(smt.stats   91  14089 196532 718461  9391/9083/404   17340/1506    45  203   25.69)
(smt.stats   92  14200 199714 726613  9402/9140/414   17459/1506    45  203   25.78)
(smt.stats   93  14322 202331 735784  9420/9156/414   17599/1507    45  203   25.78)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56371446486&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2049236271830 := 68182606545 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56371446486&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2049236271830 := 68182606545 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56371446486&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2049236271830 := 68182606545 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56371446486&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 2049236271830 := 68182606545 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56371446520&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 13662827840248 := 68182606545 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #780 1 #836))) 0 := 56371446520&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 13662827840248 := 68182606545 << 33
(smt.stats   94  14456 204796 751685  9454/9176/414   17776/1511    45  203   25.88)
ramon: poll                 wall=16.000s usage=15.925s mem=27740KiB load=1.00 rootload=0.99
(smt.stats   95  14603 208137 764932  9486/9221/419   18038/1530    46  206   26.17)
ramon: poll                 wall=17.000s usage=16.924s mem=28412KiB load=1.00 rootload=1.00
(smt.stats   96  14764 216466 775008  9604/9229/419   18221/1539    46  206   26.59)
ramon: poll                 wall=18.000s usage=17.924s mem=28560KiB load=1.00 rootload=1.00
(smt.stats   97  14941 222187 792361  9761/9387/419   18599/1586    47  206   26.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
(smt.stats   98  15135 225298 813436  9793/9528/419   18793/1586    47  206   26.78)
ramon: poll                 wall=19.000s usage=18.924s mem=28596KiB load=1.00 rootload=1.00
(smt.stats   99  15348 235093 834853  9856/9564/421   19006/1718    48  210   26.88)
(smt.stats  100  15582 243501 854375 10006/9734/423   19248/1750    49  217   27.07)
ramon: poll                 wall=20.000s usage=19.924s mem=28816KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:55:27 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.998s
ramon: group.utime          19.966s
ramon: group.stime          0.032s
ramon: group.mempeak        29072KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
