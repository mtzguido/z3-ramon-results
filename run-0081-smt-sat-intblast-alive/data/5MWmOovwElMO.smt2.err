ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:34:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29980 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5MWmOovwElMO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             251637
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   211/210     0/0  58       0    18.63   0.00)
(sat.stats    132   1630    0   211/210   132/59  58       0    19.01   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 628 :time 0.00)
(sat.stats    132   1630    0   211/210   132/59  58       0    19.01   0.02)
(sat.stats    132   1630    0   211/210   132/59  58       0    19.01   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 482619.01 :time 0.00)
(sat.stats    132   1630    0   211/210   137/64  58       0    19.01   0.02)
(sat.stats    135   1703    1   211/210   140/67  58       0    19.01   0.02)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    159   2776    2   211/210   164/88  58       0    19.11   0.02)
(sat.stats    162   2799    3   211/210   167/89  58       0    19.11   0.02)
(sat.stats    165   2834    4   211/210   170/90  58       0    19.11   0.02)
(sat.stats    168   2969    5   211/210   173/93  58       0    19.11   0.02)
(sat.stats    171   3132    6   211/210   176/95  58       0    19.11   0.02)
(sat.stats    174   3204    7   211/210   179/95  58       0    19.11   0.02)
(sat.stats    177   3355    8   211/210   182/95  58       0    19.11   0.02)
(sat.stats    180   3519    9   211/210   185/95  58       0    19.11   0.02)
(sat.stats    183   3646   10   211/210   188/95  58       0    19.11   0.02)
(sat.stats    186   3740   11   211/210   191/95  58       0    19.11   0.02)
(sat.stats    189   3885   12   211/210   194/95  58       0    19.11   0.02)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    210   4813   19   211/210   215/101  58       0    19.11   0.03)
(sat.stats    334   5735   29   213/212   339/195  58       0    19.11   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2968 :time 0.00)
(sat.stats    477   6633   42   210/209   480/241  65       0    19.20   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4570 :time 0.00)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 70 := 70 << 24
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #660 #662) 64)) 8388607 := 20010101637120 << 23
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 10451 := 8388607&570425344
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 16622 := 8388607&570425344
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 14545 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 4794 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 8286908 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 47680 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 8 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 48 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 32 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 2326016 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 128 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 256 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 8171520 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 1024 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 2048 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 5103616 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 3309568 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 16384 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 5111808 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 65536 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 7077888 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 4718592 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 2097152 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 1048576 := 570425344&8388607
band: (band[47] (if (= #77 46) 0 (if #517 1 #646)) (shl[47] (bv2int %0) (+ 47 #649))) 0 := 8388607&570425344
band: (band[47] (shl[64] (* 2 #62) (mod #663 64)) (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #688 1 #778))) 4194304 := 570425344&8388607
(sat.stats   1215  17935   57 82189/82185  2404/1477  84       0    33.80   0.89)
(sat.stats   1218  17958   58 83020/83016  2421/1491  84       0    34.92   0.90)
ramon: poll                 wall=1.000s usage=0.991s mem=35944KiB load=0.99 rootload=0.96
ramon: poll                 wall=2.000s usage=1.991s mem=41460KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.002s usage=2.995s mem=44640KiB load=1.00 rootload=1.00
(sat.stats   1627  22361  109 141772/141768  3694/2376  84       0    45.68   3.45)
ramon: poll                 wall=4.000s usage=3.991s mem=46944KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 4 :elim-clauses 2 :cost 11165 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11100 :time 0.00)
ramon: poll                 wall=5.000s usage=4.991s mem=50752KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.990s mem=50752KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.990s mem=50752KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.990s mem=68280KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.990s mem=76728KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.990s mem=82608KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.990s mem=102MiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.990s mem=107MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.990s mem=110MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.990s mem=115MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.990s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.990s mem=119MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.002s usage=16.994s mem=121MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.990s mem=123MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.990s mem=125MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.990s mem=127MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:34:40 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.100s
ramon: group.total          20.011s
ramon: group.utime          19.907s
ramon: group.stime          0.104s
ramon: group.mempeak        127MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.020s
ramon: loadavg              1.00
