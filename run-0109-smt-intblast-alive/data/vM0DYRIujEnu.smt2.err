ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:04:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40462 MiB
ramon: sys.mem.avail        61705 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/vM0DYRIujEnu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3108580
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3058    664   734/665/113     114/14    11   19   18.84)
(smt.stats    1    202   4647   2004  1117/990/116     263/30    13   21   18.94)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&1
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&1
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 222 := 268435455&223
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 220 := 268435455&222
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&222
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&221
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&216
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&18
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 2 := 268435455&18
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&220
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&220
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&220
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&220
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&216
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32 := 268435455&64
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 64 := 268435455&128
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&24
(smt.stats    2    313   5711   3432  1307/1153/163     472/85    15   31   19.33)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32 := 268435455&36
(smt.stats    3    414   6733   8120  1550/1412/218     683/119    17   48   19.42)
(smt.stats    4    525   8070  10414  1564/1427/230     998/168    19   63   19.52)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 128 := 65535&257
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 129 := 65535&257
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 256 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 257 := 65535&513
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 513 := 65535&641
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 321 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 257 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 129 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 129 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 897 := 65535&268435201
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 897 := 65535&268435329
(smt.stats    5    647   9277  13031  1728/1469/263    1289/189    21   77   19.81)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 961 := 65535&2433
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 961 := 65535&2433
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 2433 := 65535&2945
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4481 := 65535&268435329
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4481 := 65535&5505
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4481 := 65535&6529
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4481 := 65535&4481
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 1073746305 := 136 << 15
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6529 := 65535&6529
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 1073748353 := 80 << 15
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6529 := 65535&6529
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 1073748353 := 80 << 15
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6529 := 65535&6529
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 1073748353 := 24 << 15
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  10340  16722  1880/1712/304    1669/257    22   89   20.12)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4917 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4916 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4912 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 5408 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 5376 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 5120 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6144 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6144 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6144 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8192 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 16384 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32768 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 16384 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32768 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32768 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8192 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8192 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4608 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 512 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 512 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 11 := 12 << 16
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 11 := 12 << 16
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 11 := 12 << 16
(smt.stats    7    860  12244  20834  2031/1752/304    2289/271    22   89   20.31)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 0 := 12 << 16
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 0 := 12 << 16
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 65535 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 65534 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 4 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 8 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 8 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 32 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 64 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 128 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 256 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 512 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 1024 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 2048 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 8192 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16384 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 32768 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 4 := 65535&786432
(smt.stats    8    982  14500  27995  2111/1970/453    2940/572    24  119   20.92)
(smt.stats    9   1116  16466  35520  2123/1981/453    3210/829    25  233   21.01)
(smt.stats   10   1217  19116  40866  2277/2064/453    3469/839    25  233   21.21)
ramon: poll                 wall=1.000s usage=0.906s mem=22456KiB load=0.91 rootload=0.89
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 63&384
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 536871296 := 536625140 << 5
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 63&384
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 536871296 := 336076820 << 5
(smt.stats   11   1328  21584  45558  2388/2118/453    3681/841    25  233   21.40)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   12   1450  24037  54260  2592/2397/467    4144/1101    27  267   21.49)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 129 := 8191&387
(smt.stats   13   1584  27826  66605  2647/2405/468    4636/1111    27  267   21.59)
(smt.stats   14   1731  31820  77120  2722/2462/470    5045/1170    28  281   21.87)
(smt.stats   15   1832  33708  83551  2838/2603/470    5289/1174    28  281   22.07)
(smt.stats   16   1943  35121  89532  3021/2692/471    5740/1219    29  283   22.16)
(smt.stats   17   2065  36975  93628  3052/2845/471    6374/1219    29  283   22.26)
ramon: poll                 wall=2.000s usage=1.906s mem=23624KiB load=1.00 rootload=1.00
(smt.stats   18   2199  41264 113482  3058/2859/471    6929/1219    29  283   22.35)
(smt.stats   19   2346  45337 124235  3193/2911/472    7571/1489    30  283   22.84)
(smt.stats   20   2507  48034 133455  3358/3145/474    8230/1581    31  291   23.03)
(smt.stats   21   2608  49862 142988  3366/3161/474    8562/1581    31  291   23.03)
ramon: poll                 wall=3.000s usage=2.905s mem=24496KiB load=1.00 rootload=1.00
(smt.stats   22   2719  54111 162181  3506/3260/476    8903/1700    32  291   23.22)
(smt.stats   23   2841  58158 185808  3623/3406/478    9546/1779    33  298   23.22)
(smt.stats   24   2975  60605 199677  3662/3431/478   10059/1780    33  298   23.32)
(smt.stats   25   3122  63979 218148  3789/3466/478   10772/1929    34  309   23.41)
(smt.stats   26   3283  67016 234470  3903/3625/478   11188/1935    34  309   23.51)
ramon: poll                 wall=4.000s usage=3.905s mem=24880KiB load=1.00 rootload=1.00
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 170 := 268435455&268435432
(smt.stats   27   3460  71336 266145  3981/3772/487   12009/2231    36  336   23.60)
(smt.stats   28   3561  73905 283070  4041/3787/489   12432/2233    36  336   23.90)
(smt.stats   29   3672  76265 301389  4111/3856/489   12985/2414    37  344   23.99)
(smt.stats   30   3794  80820 323271  4260/3996/491   13441/2418    37  344   24.09)
(smt.stats   31   3928  84036 350009  4281/4056/491   13802/2549    38  347   24.09)
ramon: poll                 wall=5.000s usage=4.905s mem=25476KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4075  87524 371636  4296/4065/495   14951/2770    39  349   24.28)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 16 := 268435455&784
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 16 := 268435455&784
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 272 := 268435455&784
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&64
(smt.stats   33   4236  91510 400037  4320/4081/497   15537/2899    40  383   24.47)
(smt.stats   34   4413  94505 422075  4366/4097/503   15806/2900    40  383   24.47)
(smt.stats   35   4607  96998 435057  4493/4156/503   16319/2959    41  389   24.57)
ramon: poll                 wall=6.000s usage=5.905s mem=26068KiB load=1.00 rootload=1.00
(smt.stats   36   4708  98695 443551  4613/4328/503   16613/2961    41  389   24.68)
(smt.stats   37   4819 100309 450012  4844/4408/505   16902/2963    41  389   24.87)
(smt.stats   38   4941 102684 467484  5013/4784/507   17449/3103    42  399   24.87)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=7.002s usage=6.905s mem=26420KiB load=1.00 rootload=1.00
(smt.stats   39   5075 106533 491435  5084/4795/509   18479/3108    42  399   25.26)
(smt.stats   40   5222 111106 519717  5114/4881/509   19659/3108    42  399   25.35)
(smt.stats   41   5383 112733 525959  5406/4886/509   20059/3463    43  408   25.35)
(smt.stats   42   5560 115899 553047  5563/5277/509   21126/3466    43  408   25.54)
ramon: poll                 wall=8.000s usage=7.903s mem=27344KiB load=1.00 rootload=1.00
(smt.stats   43   5754 119960 585630  5646/5338/509   21942/3474    43  408   25.92)
(smt.stats   44   5967 123062 597029  5963/5450/509   22903/3479    43  408   26.11)
(smt.stats   45   6068 125991 615135  5987/5742/509   23669/3479    43  408   26.21)
(smt.stats   46   6179 129514 636312  6057/5777/509   24127/3481    43  408   26.21)
(smt.stats   47   6301 133145 660205  6146/5856/509   24602/3490    43  408   26.31)
ramon: poll                 wall=9.000s usage=8.902s mem=27776KiB load=1.00 rootload=1.00
(smt.stats   48   6435 136479 684791  6329/5975/509   25448/3496    43  408   26.50)
(smt.stats   49   6582 139942 701486  6469/6121/514   26416/4269    44  438   26.79)
ramon: poll                 wall=10.000s usage=9.902s mem=28436KiB load=1.00 rootload=1.00
(smt.stats   50   6743 145614 734715  6764/6394/515   27684/4273    44  438   27.07)
ramon: poll                 wall=11.000s usage=10.902s mem=28576KiB load=1.00 rootload=1.00
(smt.stats   51   6920 150205 753281  7152/6579/515   28369/4599    45  477   27.26)
ramon: poll                 wall=12.000s usage=11.902s mem=28868KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7114 153570 774626  7456/7189/516   29796/4601    45  477   27.45)
(smt.stats   53   7327 160852 848180  7782/7508/518   30915/4948    46  483   27.81)
ramon: poll                 wall=13.000s usage=12.901s mem=29272KiB load=1.00 rootload=1.00
(smt.stats   54   7561 165825 900691  7908/7623/521   32755/4950    46  483   27.90)
(smt.stats   55   7662 167974 923108  7940/7701/521   33365/4951    46  483   28.00)
(smt.stats   56   7773 170012 943797  8054/7719/521   34291/5313    47  519   28.19)
ramon: poll                 wall=14.000s usage=13.897s mem=29824KiB load=1.00 rootload=0.99
(smt.stats   57   7895 173397 972265  8114/7875/522   35542/5313    47  519   28.29)
(smt.stats   58   8029 176318 988846  8139/7883/526   36392/5313    47  519   28.38)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   59   8176 179658 1013130  8255/7972/526   37518/5315    47  519   28.38)
ramon: poll                 wall=15.000s usage=14.897s mem=30096KiB load=1.00 rootload=1.00
(smt.stats   60   8337 184677 1040750  8393/8045/526   38040/5915    48  590   28.58)
(smt.stats   61   8514 189628 1071500  8478/8206/526   39026/5916    48  590   28.67)
(smt.stats   62   8708 196914 1107465  8628/8255/526   39776/5923    48  590   28.87)
ramon: poll                 wall=16.000s usage=15.896s mem=30388KiB load=1.00 rootload=1.00
(smt.stats   63   8921 204032 1160554  8871/8458/526   40963/5927    48  590   28.96)
(smt.stats   64   9155 210068 1209125  9052/8678/526   43317/5936    48  590   29.55)
ramon: poll                 wall=17.000s usage=16.896s mem=30948KiB load=1.00 rootload=1.00
(smt.stats   65   9412 217228 1290474  9206/8897/527   44691/6485    49  592   29.74)
(smt.stats   66   9513 218629 1316269  9222/8977/527   45695/6485    49  592   29.83)
(smt.stats   67   9624 220781 1350872  9322/8992/527   45912/6487    49  592   29.83)
ramon: poll                 wall=18.000s usage=17.896s mem=31288KiB load=1.00 rootload=1.00
(smt.stats   68   9746 222198 1373514  9474/9088/527   46154/6488    49  592   29.93)
(smt.stats   69   9880 225461 1443474  9530/9245/529   46658/6672    50  621   30.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 2983)
(smt.stats   70  10027 228038 1484275  9540/9306/529   45623/6672    50  621   30.22)
(smt.stats   71  10188 229437 1513211  9558/9315/529   46495/6672    50  621   30.32)
ramon: poll                 wall=19.000s usage=18.896s mem=31816KiB load=1.00 rootload=1.00
(smt.stats   72  10365 232898 1560553  9672/9331/529   47383/6675    50  621   30.41)
(smt.stats   73  10559 236360 1583612  9752/9449/529   48273/6677    50  621   30.50)
ramon: poll                 wall=20.000s usage=19.896s mem=32380KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:04:29 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.976s
ramon: group.stime          0.020s
ramon: group.mempeak        32636KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.100s
ramon: loadavg              0.99
