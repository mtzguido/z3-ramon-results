ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:25:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25598 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Sul70Kg1m0x6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             42744
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 130767450754&1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 130767450754&1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 94 << 39
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 94 << 39
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 94 << 39
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 94 << 39
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 130767450754&1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 905969664 << 39
(smt.stats    0    101   3952    674  1260/1109/91     102/7     4   14   19.36)
(smt.stats    1    202   4217    747  2160/1953/96     203/8     5   15   19.93)
(smt.stats    2    313   4864   1572  2454/2240/96     341/8     6   15   20.03)
ramon: poll                 wall=1.000s usage=0.931s mem=21160KiB load=0.93 rootload=0.92
(smt.stats    3    414   5896   3029  2747/2510/96     458/9     6   15   19.93)
(smt.stats    4    528   8497   5328  2930/2722/104     610/100     9   23   19.93)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&1644232716
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028798663196684 := 1644232718 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797018963968 := 1644232718 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797018963968 := 1677721503 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797018963968 := 1644232718 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797018963968 := 1644232718 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62354 := 62354&62354
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797019026322 := 1644232718 << 18
(smt.stats    5    650  12922   9513  3023/2772/111     743/104    10   28   20.06)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&36028797013458944
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1055806040571882 := 1055806040571883 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&36028797013458944
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1055806040571882 := 1055806040571883 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17182490624
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 17048335251 := 1055668601683978 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&36028797013458944
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 402653185 := 1055806040571883 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&8796080963584
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 402653185 := 1055668635172818 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62353 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62352 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62336 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62208 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 61952 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 61440 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 57344 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 3072 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 2048 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&26405479645184
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62354 := 26405479645184&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&26405479645184
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62353 := 26405479645184&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62354 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62354 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62353 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62354 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62353 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62348 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62344 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62336 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 256 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 16 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 16 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 64 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 528 := 17180131328&62354
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    751  14303  10716  3237/2961/128     846/108    11   32   20.36)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 35 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 128 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 128 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17194549248
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 128 := 17194549248&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 256 := 17180131328&62354
(smt.stats    7    862  15413  12038  3340/3008/170    1046/122    12   44   20.46)
(smt.stats    8    984  17028  17679  3682/3444/200    1441/254    16   63   20.55)
(smt.stats    9   1118  18967  23859  3777/3468/202    1586/351    17   63   20.65)
(smt.stats   10   1219  21394  32073  3847/3600/202    1705/356    18   64   20.65)
(smt.stats   11   1330  24843  40552  3868/3619/203    1804/371    19   65   20.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  27851  50413  3889/3640/213    1661/376    21  343   20.75)
(smt.stats   13   1586  32195  60921  3909/3643/213    1976/378    21  343   20.75)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927679 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927678 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927676 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927672 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927664 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536489472 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536489472 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481282 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481284 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481284 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481284 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481284 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536497664 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481282 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481282 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481282 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481281 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481288 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481296 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481312 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481344 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481408 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481536 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536482304 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483328 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536482560 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536482560 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481408 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481408 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344606207
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605696
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605696
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344606207
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605696
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659348800000
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659348799488
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605696
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22884123136
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22875734528
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928319
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928288
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928319
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928303
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22875734528
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22850829259
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22850829824
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928319
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928303
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22850829824
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22850829824
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879927295
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879927279
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879926784
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879925120
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879926912
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879926912
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879927215
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879926912
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879890415
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879890304
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483960 := 16345931344&22879906304
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483952 := 16345931344&22879906304
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879906304
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879816192
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
(smt.stats   14   1733  35715  70362  4191/3663/213    2274/518    22  347   21.33)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879666688
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879666688
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22878880256
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22878618112
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22878364160
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22860005888
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22783459840
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22717399552
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 22717399552 := 1207959536 << 36
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22717399552
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 22717399552 := 1207959536 << 36
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22716613120
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 22716613120 := 1207959481 << 36
(smt.stats   15   1834  38441  80922  4362/3917/418    2530/569    23  388   21.73)
(smt.stats   16   1945  40899  86551  4440/4192/453    2849/833    25  428   21.92)
(smt.stats   17   2067  45604  99742  4462/4214/455    2986/866    27  429   22.03)
ramon: poll                 wall=2.000s usage=1.931s mem=23324KiB load=1.00 rootload=0.99
(smt.stats   18   2201  52041 116075  4619/4268/460    3116/883    29  431   22.13)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 0&22817013760
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9151314465633861632 := 1337006844018671 << 1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 0&22817013760
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9151314465633861632 := 1337006911127526 << 1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 0&22817013760
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9151314465633861632 := 1337006911127526 << 1
(smt.stats   19   2348  55462 122927  4824/4404/460    3310/895    29  431   22.23)
(smt.stats   20   2509  61128 132982  4963/4701/467    3701/921    30  432   22.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2610  65722 143947  5039/4721/467    3843/1053    31  435   22.44)
(smt.stats   22   2721  72039 157856  5083/4791/469    3992/1090    33  436   22.44)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18080858112
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18080858112 := 68973 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18080858112
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18080858112 := 68973 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18080858112
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18080858112 := 68973 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18037604352
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18037604352 := 68808 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18037604352
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18037604352 := 68808 << 3
(smt.stats   23   2843  78315 173007  5141/4874/477    4155/1092    33  436   22.55)
(smt.stats   24   2977  83536 185537  5159/4893/482    4364/1174    35  463   22.55)
(smt.stats   25   3124  90819 204748  5225/4959/486    4533/1212    37  471   22.66)
(smt.stats   26   3285 103147 254478  5237/4970/491    4736/1216    38  482   22.66)
ramon: poll                 wall=3.000s usage=2.930s mem=23984KiB load=1.00 rootload=1.00
(smt.stats   27   3462 116281 307181  5252/4985/494    5008/1245    40  495   22.75)
(smt.stats   28   3563 120495 322964  5266/4999/494    5282/1245    40  495   22.75)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 4284987826583111 := 83867134 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 4284987826583111 := 83867134 << 54
(smt.stats   29   3674 125320 343407  5398/5057/495    5506/1335    42  508   23.32)
(smt.stats   30   3796 129924 363978  5556/5160/505    5743/1341    43  510   23.42)
(smt.stats   31   3930 134172 375325  5735/5302/505    6017/1376    44  510   23.51)
(smt.stats   32   4077 141573 402477  5750/5479/509    6237/1430    45  514   23.51)
(smt.stats   33   4238 155484 461388  5751/5480/509    6424/1441    46  522   23.66)
ramon: poll                 wall=4.000s usage=3.930s mem=25024KiB load=1.00 rootload=0.99
(smt.stats   34   4415 162010 484654  5807/5500/510    6701/1515    47  527   23.66)
(smt.stats   35   4609 172528 510166  5909/5620/510    7029/1515    47  527   23.79)
(smt.stats   36   4710 179158 532098  5926/5637/510    7205/1515    47  527   23.79)
(smt.stats   37   4821 184091 544662  6011/5640/510    7385/1519    47  527   24.01)
(smt.stats   38   4943 188012 556166  6185/5896/511    7611/1638    48  533   24.01)
(smt.delete-inactive-clauses  :num-deleted-clauses 141)
(smt.stats   39   5077 200305 575302  6189/5898/511    7667/1639    48  533   24.01)
(smt.stats   40   5224 208900 610057  6215/5926/512    7871/1699    49  534   24.01)
ramon: poll                 wall=5.000s usage=4.930s mem=25500KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   41   5385 219187 644403  6290/5989/513    8337/1892    50  534   24.11)
(smt.stats   42   5562 225238 660157  6359/6057/515    8856/1898    50  534   24.20)
(smt.stats   43   5758 237305 701690  6376/6087/517    9276/2098    52  562   24.45)
(smt.stats   44   5971 245086 724579  6392/6100/518    9683/2123    53  576   24.45)
(smt.stats   45   6072 249944 742499  6396/6107/519    9786/2220    54  578   24.45)
(smt.stats   46   6183 252660 754901  6532/6211/519   10010/2220    54  578   24.54)
(smt.stats   47   6305 259030 780939  6589/6227/519   10215/2260    55  581   24.64)
ramon: poll                 wall=6.000s usage=5.929s mem=26112KiB load=1.00 rootload=1.00
(smt.stats   48   6439 263341 800584  6779/6452/521   10526/2306    56  582   24.74)
(smt.stats   49   6586 269162 826842  6877/6474/522   10827/2309    56  582   24.83)
(smt.stats   50   6747 275751 857148  7150/6582/522   11205/2358    57  590   25.02)
ramon: poll                 wall=7.000s usage=6.927s mem=26552KiB load=1.00 rootload=1.00
(smt.stats   51   6924 283407 891760  7380/6837/522   12132/2375    57  590   25.21)
(smt.stats   52   7118 295565 922490  7548/7074/523   12731/2635    58  595   25.40)
ramon: poll                 wall=8.000s usage=7.927s mem=27112KiB load=1.00 rootload=1.00
(smt.stats   53   7331 303878 954832  8049/7229/524   13315/2738    59  600   25.79)
(smt.stats   54   7565 312075 993486  8242/7914/537   14817/2939    60  601   25.98)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 1&24
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&24
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 3518437410209722 := 3 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&24
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 3518437410209722 := 3 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&24
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 1 := 24&1
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7668 314927 1005619  8280/7945/553   15257/3456    61  621   26.18)
ramon: poll                 wall=9.000s usage=8.927s mem=27744KiB load=1.00 rootload=1.00
(smt.stats   56   7779 318000 1014790  8332/7953/553   15687/3457    61  621   26.27)
(smt.stats   57   7901 320695 1020349  8663/8011/553   15886/3467    61  621   26.37)
(smt.stats   58   8035 326864 1045404  8739/8406/553   16192/3637    62  625   26.37)
(smt.stats   59   8182 336272 1113731  8754/8421/553   16454/3637    62  625   26.37)
ramon: poll                 wall=10.000s usage=9.926s mem=27944KiB load=1.00 rootload=1.00
(smt.stats   60   8343 344656 1170655  8838/8442/554   16595/3746    63  781   26.46)
(smt.stats   61   8520 350290 1195989  8988/8654/556   17069/3779    64  783   26.46)
(smt.stats   62   8714 356319 1217227  9303/8660/556   17517/3788    64  783   26.70)
ramon: poll                 wall=11.000s usage=10.926s mem=28380KiB load=1.00 rootload=1.00
(smt.stats   63   8927 373046 1353406  9353/9019/557   18148/4163    66  795   26.79)
(smt.stats   64   9161 385638 1382099  9424/9063/558   18873/4202    67  795   26.99)
ramon: poll                 wall=12.000s usage=11.926s mem=28660KiB load=1.00 rootload=1.00
(smt.stats   65   9418 399915 1441396  9740/9095/558   19930/4210    67  795   27.18)
(smt.stats   66   9519 404139 1460835  9808/9463/558   20321/4212    67  795   27.27)
ramon: poll                 wall=13.000s usage=12.925s mem=28896KiB load=1.00 rootload=1.00
(smt.stats   67   9630 410328 1482720  9956/9479/558   20729/4214    67  795   27.37)
(smt.stats   68   9752 416724 1508953 10239/9693/558   21307/4219    67  795   27.46)
ramon: poll                 wall=14.000s usage=13.925s mem=29052KiB load=1.00 rootload=1.00
(smt.stats   69   9886 423453 1547650 10510/9924/558   21624/4219    67  795   27.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 358)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   70  10033 428549 1572256 10597/10196/558   22269/4220    67  795   27.67)
ramon: poll                 wall=15.000s usage=14.925s mem=29424KiB load=1.00 rootload=1.00
(smt.stats   71  10194 435735 1603620 10850/10276/558   23050/4235    67  795   27.76)
(smt.stats   72  10371 446277 1645125 10985/10582/559   23696/5083    68  801   27.86)
(smt.stats   73  10565 456886 1717197 11118/10760/560   24465/5134    69  801   28.13)
ramon: poll                 wall=16.000s usage=15.924s mem=29932KiB load=1.00 rootload=1.00
(smt.stats   74  10778 464039 1754959 11533/10794/560   25306/5142    69  801   28.42)
ramon: poll                 wall=17.000s usage=16.924s mem=30144KiB load=1.00 rootload=1.00
(smt.stats   75  11012 471142 1798104 11958/11622/562   26449/5203    70  803   28.61)
ramon: poll                 wall=18.000s usage=17.924s mem=30300KiB load=1.00 rootload=1.00
(smt.stats   76  11269 486069 1880289 12254/11629/562   27821/5216    70  803   28.89)
ramon: poll                 wall=19.004s usage=18.927s mem=30464KiB load=1.00 rootload=1.00
(smt.stats   77  11551 498102 1939906 12707/11966/563   29834/5516    71  805   29.00)
ramon: poll                 wall=20.000s usage=19.922s mem=30980KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 18:26:11 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.976s
ramon: group.stime          0.020s
ramon: group.mempeak        31236KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
