ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:49:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40828 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/kOwmjVx86R57.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3062379
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4325    701  1211/1088/118      75/24    12   30   19.25)
(smt.stats    1    202   6200   1496  2258/1981/118     197/29    13   30   19.53)
(smt.stats    2    313   7401   2489  2359/2065/120     324/41    14   32   19.63)
(smt.stats    3    414  10756   3886  2469/2252/124     447/67    15   39   19.73)
(smt.stats    4    525  14239   7414  2564/2260/128     560/81    16   39   19.73)
(smt.stats    5    647  17526  11071  2605/2367/131     693/95    18   46   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19711  13962  2619/2386/131     789/114    19   48   19.84)
(smt.stats    7    859  22319  16391  2653/2403/131     913/115    19   48   19.84)
ramon: poll                 wall=1.000s usage=0.949s mem=20988KiB load=0.95 rootload=0.94
(smt.stats    8    981  23479  19553  2684/2441/132    1044/134    20   49   19.94)
(smt.stats    9   1115  26273  23574  2698/2462/132    1176/136    20   49   20.03)
(smt.stats   10   1216  27776  27681  2716/2489/136    1276/142    21   62   20.03)
(smt.stats   11   1327  31070  31527  2748/2508/136    1392/145    22   67   20.13)
(smt.stats   12   1449  33079  34305  2814/2534/136    1539/145    22   67   20.13)
(smt.stats   13   1583  34826  38292  2831/2598/142    1685/181    23   73   20.13)
(smt.stats   14   1730  36052  42128  2833/2600/142    1835/181    23   73   20.22)
(smt.stats   15   1831  36969  45684  2836/2601/142    1937/181    23   73   20.22)
(smt.stats   16   1942  38783  49985  2843/2611/145    2046/192    24   79   20.34)
(smt.stats   17   2064  41137  55199  2849/2614/145    2168/192    24   79   20.34)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 3 := 4&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 4&3
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4398046511108 := 1431 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 252&3
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 252 := 1431 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 252&3
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 252 := 1431 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 0 := 1431 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 1 := 1431 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 1 := 1431 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 0 (if #589 1 #703))) 3 := 11448&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 0 (if #589 1 #703))) 2 := 11448&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 2 := 11448&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 0 (if #589 1 #703))) 1 := 11448&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 0 (if #589 1 #703))) 2 := 11448&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 0 (if #589 1 #703))) 2 := 11448&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 0 (if #589 1 #703))) 2 := 11448&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11448&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 0 (if #589 1 #703))) 1 := 11448&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 11640&67108863
(smt.stats   18   2198  43636  60140  2914/2658/182    2339/228    25   87   20.44)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 16 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 24 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 24 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 24 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 104 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 106 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 104 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 104 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 24 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 24 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 40 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 56 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 40 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 56 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 24 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 40 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 56 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 40 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 24 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 56 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 120 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 120 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 632 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 888 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 5502 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 5500 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 5496 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 6264 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 6520 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7032 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7546 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7544 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7160 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7160 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7160 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7544 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 9594 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 9592 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 10616 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7160 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7160 := 11640&67108863
(smt.stats   19   2345  45208  63868  3224/2960/321    2605/243    26   99   20.95)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7160 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7032 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 7032 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 6520 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 6520 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 6520 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 5496 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 5498 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 5498 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 5496 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 3448 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 3450 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 3448 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 3450 := 11640&67108863
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 3448 := 8063&67108863
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   20   2506  48722  71559  3387/3145/356    2924/362    28  126   21.28)
(smt.stats   21   2607  51213  76547  3404/3160/357    3168/478    29  131   21.38)
(smt.stats   22   2718  54230  85356  3417/3173/357    3405/478    29  131   21.48)
(smt.stats   23   2840  58613  90785  3511/3233/358    3667/615    30  131   21.57)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 12416&15
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4398046523520 := 89 << 5
(smt.stats   24   2974  61362  97090  3593/3332/370    4022/617    30  131   21.75)
ramon: poll                 wall=2.000s usage=1.948s mem=23044KiB load=1.00 rootload=0.99
(smt.stats   25   3121  66038 112125  3673/3347/370    4319/792    31  151   21.75)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 4404 := 274877927696&274877906943
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 4404 := 274877927696&274877906943
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 4404 := 274877928208&274877906943
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 4404 := 274877928208&274877906943
(smt.stats   26   3282  69361 130547  4006/3422/370    4708/799    31  151   22.24)
(smt.stats   27   3459  72254 148979  4350/3767/375    5309/911    32  152   22.53)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560  73544 155235  4368/4105/376    5461/1040    33  152   22.62)
(smt.stats   29   3671  75054 165276  4375/4112/378    5809/1141    34  167   22.62)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 274877939744&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4672924450848 := 43 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 21024&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4398046532128 := 43 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 21024&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4398046532128 := 43 << 1
(smt.stats   30   3793  76891 171279  4507/4118/378    6329/1146    34  167   22.92)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 86&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 346 := 43 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 86&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 346 := 43 << 1
(smt.stats   31   3927  78821 182193  4613/4305/383    6763/1148    34  167   23.02)
(smt.stats   32   4074  81685 194378  4674/4353/388    7341/1363    35  169   23.30)
ramon: poll                 wall=3.000s usage=2.948s mem=24708KiB load=1.00 rootload=1.00
(smt.stats   33   4235  84703 210182  4904/4431/388    7732/1368    35  169   23.52)
(smt.stats   34   4412  90180 241625  5225/4705/388    8590/1541    36  169   23.61)
(smt.stats   35   4606  97105 257986  5236/4943/388    9068/1541    36  169   23.71)
(smt.stats   36   4707 101796 272020  5310/4944/388    9571/1547    36  169   23.71)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 8264 := 20672&549755813887
(smt.stats   37   4818 104897 287591  5459/5071/388    9885/1549    36  169   23.71)
(smt.stats   38   4940 108236 307926  5557/5208/388   10338/1555    36  169   23.92)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 112304 320998  5665/5320/391   11112/2034    37  176   24.02)
ramon: poll                 wall=4.000s usage=3.947s mem=25428KiB load=1.00 rootload=1.00
(smt.stats   40   5221 116114 336830  5990/5390/391   11696/2039    37  176   24.20)
(smt.stats   41   5382 124079 369207  6151/5719/391   12219/2267    38  195   24.30)
(smt.stats   42   5559 129730 399259  6216/5865/391   12776/2267    38  195   24.39)
ramon: poll                 wall=5.000s usage=4.947s mem=25864KiB load=1.00 rootload=1.00
(smt.stats   43   5753 134792 422768  6457/5963/392   13459/2396    39  205   24.58)
ramon: poll                 wall=6.000s usage=5.946s mem=26016KiB load=1.00 rootload=1.00
(smt.stats   44   5966 136915 435092  6825/6532/393   14231/2465    40  207   24.78)
(smt.stats   45   6067 140379 442586  6834/6541/394   14520/2465    40  207   24.97)
ramon: poll                 wall=7.000s usage=6.946s mem=26512KiB load=1.00 rootload=1.00
(smt.stats   46   6178 144199 457644  6875/6548/395   14914/2465    40  207   25.06)
ramon: poll                 wall=8.000s usage=7.946s mem=26580KiB load=1.00 rootload=1.00
(smt.stats   47   6300 146099 464605  7029/6590/395   15170/2591    41  210   25.16)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 148546 481483  7204/6809/395   15632/2591    41  210   25.25)
(smt.stats   49   6581 153189 514256  7261/6966/396   16295/2591    41  210   25.25)
(smt.stats   50   6742 157601 549534  7286/6993/400   16697/2881    43  269   25.25)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #723 #724) 0 (if #725 1 #867))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 13194139533312 := 127 << 1
ramon: poll                 wall=9.000s usage=8.945s mem=26784KiB load=1.00 rootload=0.99
(smt.stats   51   6919 162034 563603  7409/7008/403   17070/2884    43  269   25.47)
ramon: poll                 wall=10.000s usage=9.943s mem=27124KiB load=1.00 rootload=1.00
(smt.stats   52   7113 167802 588310  7626/7193/404   18816/2885    43  269   25.75)
(smt.stats   53   7326 176544 626367  7778/7346/404   20345/3111    44  306   25.94)
ramon: poll                 wall=11.003s usage=10.945s mem=27488KiB load=1.00 rootload=1.00
(smt.stats   54   7560 182732 653712  7985/7517/404   21924/3112    44  306   26.13)
(smt.stats   55   7661 189204 681195  8003/7709/404   22177/3112    44  306   26.13)
(smt.stats   56   7772 193104 710905  8015/7721/404   23250/3112    44  306   26.33)
(smt.stats   57   7894 198504 754724  8024/7730/405   23855/3700    45  309   26.33)
ramon: poll                 wall=12.000s usage=11.942s mem=27868KiB load=1.00 rootload=1.00
(smt.stats   58   8028 201134 775207  8031/7737/411   24429/3940    46  338   26.43)
(smt.stats   59   8175 204428 796526  8054/7740/411   24737/3940    46  338   26.43)
(smt.stats   60   8336 208560 827676  8062/7768/411   25004/3940    46  338   26.52)
(smt.stats   61   8513 213587 856018  8082/7784/414   25458/4041    47  354   26.52)
ramon: poll                 wall=13.000s usage=12.942s mem=28056KiB load=1.00 rootload=1.00
(smt.stats   62   8707 223837 898236  8195/7802/414   26349/4046    47  354   26.62)
ramon: poll                 wall=14.000s usage=13.941s mem=28284KiB load=1.00 rootload=1.00
(smt.stats   63   8920 232715 940537  8370/7950/414   27196/4317    48  388   26.82)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9154 244296 1006358  8458/8130/419   27961/4401    49  396   27.01)
ramon: poll                 wall=15.000s usage=14.941s mem=28744KiB load=1.00 rootload=1.00
(smt.stats   65   9411 254687 1082716  8710/8394/421   28948/4593    50  404   27.26)
(smt.stats   66   9512 257145 1102806  8735/8443/424   29620/4593    50  404   27.35)
(smt.stats   67   9623 261842 1132615  8790/8451/424   30036/4593    50  404   27.35)
(smt.stats   68   9745 267053 1165406  8970/8505/424   30360/4732    51  460   27.45)
ramon: poll                 wall=16.000s usage=15.941s mem=28820KiB load=1.00 rootload=1.00
(smt.stats   69   9879 272427 1196160  9215/8704/424   30853/4733    51  460   27.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10026 276680 1219595  9299/8942/424   31252/4735    51  460   27.55)
ramon: poll                 wall=17.000s usage=16.941s mem=29028KiB load=1.00 rootload=1.00
(smt.stats   71  10187 280127 1238114  9682/9038/424   31529/4737    51  460   27.64)
(smt.stats   72  10364 285629 1285788  9902/9412/424   32034/4738    51  460   27.94)
ramon: poll                 wall=18.000s usage=17.940s mem=29668KiB load=1.00 rootload=1.00
(smt.stats   73  10558 290509 1320464 10078/9643/424   32562/4740    51  460   28.10)
(smt.stats   74  10771 292826 1328285 10331/9831/424   32801/4746    51  460   28.20)
ramon: poll                 wall=19.000s usage=18.940s mem=29776KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   75  11005 296631 1371459 10651/10164/424   33475/4753    51  460   28.30)
ramon: poll                 wall=20.000s usage=19.940s mem=29924KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:49:39 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.997s
ramon: group.utime          19.981s
ramon: group.stime          0.016s
ramon: group.mempeak        30440KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.057s
ramon: loadavg              1.00
