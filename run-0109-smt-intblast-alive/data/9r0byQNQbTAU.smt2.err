ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:40:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42499 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1249
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9r0byQNQbTAU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2832561
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4481   2576  1168/1053/90      97/8     3   14   18.97)
(smt.stats    1    202   5500   3918  1828/1572/91     193/18     4   15   19.17)
(smt.stats    2    313   6292   5420  2196/1981/103     290/47     7   23   19.27)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 1&101
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 101 := 100 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 1&101
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 101 := 100 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 1&101
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 101 := 100 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 1&150
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&150
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 150 := 149 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&596
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2 := 149 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&562949953421311
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&562949953421311
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&562949953421310
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 562949953421310 := 100 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&400
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 100 << 2
(smt.stats    3    414   7373   6930  2242/2019/129     387/50     8   23   19.46)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&33
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 562949953421345 := 281474976710642 << 1
(smt.stats    4    525   8318   8722  2265/2042/143     468/55    11   57   19.65)
(smt.stats    5    647  10202  11450  2302/2072/144     597/59    12   57   19.65)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  13040  14005  2321/2089/144     687/59    12   57   19.65)
(smt.stats    7    860  16336  19445  2353/2121/149     718/68    14  105   19.75)
(smt.stats    8    982  18350  21926  2355/2123/149     853/68    14  105   19.75)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&46
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&46
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&46
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&45
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&36
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842660 := 48 << 48
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 12 := 72313030766555&46
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 10 := 72313030766555&46
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 13510798882111534 := 48 << 48
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&0
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 47 := 48 << 48
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&0
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 47 := 48 << 48
(smt.stats    9   1116  20434  26008  2398/2165/185     801/81    16  288   19.94)
(smt.stats   10   1217  23351  29745  2429/2192/188     900/81    16  288   20.06)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&4
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 4 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 0 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 0 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2049 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 8 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 8 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 6 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2049 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 1 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 2 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 64 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 60 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 60 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 56 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 48 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 60 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 64 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 63 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 8 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 48 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 32 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 12 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 8 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 8 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 8 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 32 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 16 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 2 := 2048&65
(smt.stats   11   1328  24884  32649  2554/2285/292    1014/92    18  309   20.54)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  27223  36359  2583/2336/319    1143/111    19  319   20.80)
(smt.stats   13   1584  30121  40825  2657/2392/320    1275/114    20  350   20.89)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842626 := 4 << 4
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842624 := 4 << 4
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842624 := 4 << 4
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 4&64
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&64
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 34 := 4 << 4
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&64
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 34 := 4 << 4
(smt.stats   14   1731  32327  46213  2708/2418/329    1489/133    21  352   21.18)
(smt.stats   15   1832  36687  51775  2829/2527/339    1665/138    22  358   21.56)
(smt.stats   16   1943  37944  54102  2947/2650/344    1857/146    23  358   21.87)
(smt.stats   17   2065  41552  60162  2965/2667/352    2042/166    24  387   21.87)
ramon: poll                 wall=1.000s usage=0.965s mem=23236KiB load=0.96 rootload=0.95
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 16&214457125112920
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 16&214457125112920
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 7434792911720 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 7434792911720 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 7434792911720 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 7434792911720 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 9633816167198 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 9633816167296 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 13194139533266 << 6
(smt.stats   18   2199  47662  69995  3080/2769/359    2238/189    26  392   21.97)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&412829965843584
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 16&412829965843584
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 412829965843562 := 24042654260722 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 16&412829965843584
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 412829965843562 := 24042654260722 << 6
(smt.stats   19   2346  50444  75368  3174/2786/359    2516/193    26  392   22.15)
(smt.stats   20   2507  56338  89592  3177/2864/371    2777/193    26  392   22.15)
(smt.stats   21   2608  59713  96919  3180/2869/372    2977/221    27  398   22.15)
(smt.stats   22   2719  66774 109264  3192/2879/372    3134/235    28  400   22.15)
(smt.stats   23   2841  75526 121875  3207/2886/372    3318/236    28  400   22.25)
(smt.stats   24   2975  79494 128902  3262/2907/372    3633/238    28  400   22.34)
(smt.stats   25   3122  84846 137213  3273/2960/372    3860/238    28  400   22.34)
ramon: poll                 wall=2.000s usage=1.964s mem=24000KiB load=1.00 rootload=1.00
(smt.stats   26   3283  93193 149542  3333/3016/375    4097/288    29  402   22.53)
(smt.stats   27   3460  97969 158438  3448/3131/377    4333/310    30  402   22.53)
(smt.stats   28   3561 100644 165091  3473/3141/377    4550/312    30  402   22.62)
(smt.stats   29   3672 104842 175117  3491/3174/377    4700/312    30  402   22.62)
(smt.stats   30   3794 109176 183224  3572/3182/377    4917/332    31  405   22.72)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766555
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766555
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766547
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&37529996895219
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&37529996895251
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&37529996895251
ramon: poll                 wall=3.000s usage=2.964s mem=24160KiB load=1.00 rootload=1.00
(smt.stats   31   3928 112470 190761  3778/3264/377    5209/345    31  405   22.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 116739 203252  3802/3476/405    5620/361    32  410   22.92)
(smt.stats   33   4236 123810 220114  3831/3487/405    5941/389    33  427   23.14)
(smt.stats   34   4413 132573 242769  3857/3518/406    6233/428    34  431   23.14)
(smt.stats   35   4607 140391 261527  3866/3543/406    6566/428    34  431   23.14)
(smt.stats   36   4708 144236 271281  3947/3545/406    6729/431    34  431   23.23)
(smt.stats   37   4819 147484 280531  4186/3666/406    6977/433    34  431   23.23)
(smt.stats   38   4941 150395 289329  4260/3937/407    7390/502    35  437   23.33)
(smt.delete-inactive-clauses  :num-deleted-clauses 64)
ramon: poll                 wall=4.000s usage=3.964s mem=24748KiB load=1.00 rootload=1.00
(smt.stats   39   5075 154787 299750  4284/3946/407    7864/503    35  437   23.43)
(smt.stats   40   5222 161592 316707  4345/3977/407    8293/508    35  437   23.52)
(smt.stats   41   5383 167950 333606  4370/4045/407    8737/509    35  437   23.84)
(smt.stats   42   5560 173518 347800  4533/4056/407    9277/515    35  437   23.93)
ramon: poll                 wall=5.000s usage=4.964s mem=25444KiB load=1.00 rootload=1.00
(smt.stats   43   5754 181332 374784  4645/4235/407    9690/518    35  437   24.22)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077476 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077476 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077480 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077472 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077472 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077472 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077472 := 1077548&428914250226739
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077505 := 1077548&428914250226739
(smt.stats   44   5967 186014 388841  4856/4408/407   10191/525    35  437   24.30)
(smt.stats   45   6068 188349 398459  4883/4560/413   10551/776    36  438   24.30)
(smt.stats   46   6179 193619 420330  4923/4565/413   10904/779    36  438   24.40)
ramon: poll                 wall=6.000s usage=5.963s mem=25980KiB load=1.00 rootload=1.00
(smt.stats   47   6301 197647 429921  5146/4615/413   11108/879    37  455   24.49)
(smt.stats   48   6435 200943 438708  5262/4841/413   11339/880    37  455   24.59)
(smt.stats   49   6582 206024 446584  5287/4962/413   11593/880    37  455   24.59)
(smt.stats   50   6743 211186 467580  5312/4978/413   11855/880    37  455   24.69)
(smt.stats   51   6920 219468 502714  5339/5011/413   12224/881    37  455   24.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7114 225747 524169  5404/5021/417   13027/985    38  463   24.78)
ramon: poll                 wall=7.002s usage=6.966s mem=26244KiB load=1.00 rootload=1.00
(smt.stats   53   7327 233683 555441  5539/5208/418   13637/1104    39  465   24.88)
(smt.stats   54   7561 242462 582417  5656/5219/418   14499/1107    39  465   24.97)
ramon: poll                 wall=8.000s usage=7.963s mem=26584KiB load=1.00 rootload=1.00
(smt.stats   55   7662 245490 591752  5804/5338/418   14902/1110    39  465   25.16)
(smt.stats   56   7773 248490 601429  5947/5518/418   15263/1111    39  465   25.16)
(smt.stats   57   7895 251900 619360  6181/5637/418   15687/1111    39  465   25.16)
(smt.stats   58   8029 255476 630966  6236/5898/418   16045/1111    39  465   25.26)
(smt.stats   59   8176 261863 659275  6383/5910/418   16678/1114    39  465   25.35)
ramon: poll                 wall=9.000s usage=8.963s mem=26816KiB load=1.00 rootload=1.00
(smt.stats   60   8337 267443 692232  6668/6086/418   17375/1123    39  465   25.45)
(smt.stats   61   8514 271120 711077  6912/6371/418   18044/1125    39  465   25.55)
(smt.stats   62   8708 277082 732212  6931/6599/418   18390/1125    39  465   25.66)
ramon: poll                 wall=10.000s usage=9.963s mem=27144KiB load=1.00 rootload=1.00
(smt.stats   63   8921 286260 767698  7085/6614/418   19500/1139    39  465   25.85)
(smt.stats   64   9155 295901 791495  7125/6797/418   20162/1139    39  465   25.95)
ramon: poll                 wall=11.000s usage=10.963s mem=27572KiB load=1.00 rootload=1.00
(smt.stats   65   9412 307487 845296  7248/6818/418   20839/1145    39  465   26.04)
(smt.stats   66   9513 308690 854054  7256/6928/418   21831/1145    39  465   26.14)
(smt.stats   67   9624 311437 867423  7280/6934/418   22196/1145    39  465   26.23)
(smt.stats   68   9746 317546 899072  7283/6955/420   22727/2002    40  479   26.23)
(smt.stats   69   9880 324993 934208  7285/6957/420   23269/2002    40  479   26.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 114)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10027 328075 954589  7292/6964/420   23993/2002    40  479   26.33)
(smt.stats   71  10188 335618 988812  7357/6967/420   24522/2128    41  483   26.42)
ramon: poll                 wall=12.000s usage=11.953s mem=27904KiB load=0.99 rootload=0.99
(smt.stats   72  10365 343300 1019384  7441/7045/420   25000/2131    41  483   26.42)
(smt.stats   73  10559 348093 1044338  7455/7123/422   25821/2226    42  499   26.52)
(smt.stats   74  10772 356887 1094052  7508/7133/422   26512/2228    42  499   26.71)
(smt.stats   75  11006 361889 1121987  7533/7205/422   27218/2395    43  505   26.71)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11263 373172 1168829  7623/7213/422   27651/2401    43  505   26.91)
ramon: poll                 wall=13.000s usage=12.933s mem=28332KiB load=0.98 rootload=0.98
(smt.stats   77  11545 385376 1210116  7640/7307/422   28205/2402    43  505   26.91)
(smt.stats   78  11646 389162 1223583  7649/7318/422   28461/2402    43  505   27.01)
(smt.stats   79  11757 393068 1248920  7657/7326/422   28744/2402    43  505   27.01)
(smt.stats   80  11879 397425 1266319  7690/7332/422   29069/2403    43  505   27.10)
(smt.stats   81  12013 399901 1279687  7700/7369/422   29605/2403    43  505   27.10)
(smt.stats   82  12160 405300 1305809  7705/7374/422   29855/2403    43  505   27.57)
(smt.stats   83  12321 406995 1315495  7707/7376/422   30132/2403    43  505   27.67)
(smt.stats   84  12498 410383 1335117  7710/7379/422   30620/2403    43  505   27.86)
ramon: poll                 wall=14.000s usage=13.933s mem=29408KiB load=1.00 rootload=1.00
(smt.stats   85  12692 417391 1372422  7851/7391/422   31670/2405    43  505   28.05)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 73 := 36156515383277&419978536681561
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 73 := 36156515383277&419978536681561
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 73 := 36156515383277&419978536681721
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 73 := 36156515383277&419978536681721
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 89 := 36156515383277&419978536682073
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 89 := 36156515383277&419978536682201
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 73 := 36156515383277&419978536682201
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 73 := 36156515383277&419978536682201
(smt.stats   86  12905 422788 1406743  8254/7540/424   32544/2772    44  507   28.34)
(smt.stats   87  13139 432377 1452739  8339/7932/444   34064/2773    44  507   28.53)
ramon: poll                 wall=15.000s usage=14.933s mem=30088KiB load=1.00 rootload=1.00
(smt.stats   88  13396 444032 1503785  8446/8028/444   35245/2958    45  518   28.63)
(smt.stats   89  13678 452855 1550966  8560/8135/444   37640/2962    45  518   28.82)
ramon: poll                 wall=16.000s usage=15.932s mem=30540KiB load=1.00 rootload=1.00
(smt.stats   90  13988 462483 1613259  8757/8360/445   39200/3152    46  518   29.21)
(smt.stats   91  14089 465645 1635689  8771/8434/445   39852/3153    46  518   29.21)
(smt.stats   92  14200 469605 1648784  8797/8441/445   40210/3153    46  518   29.30)
(smt.stats   93  14322 476024 1691065  8840/8470/445   40633/3157    46  518   29.40)
ramon: poll                 wall=17.000s usage=16.932s mem=31048KiB load=1.00 rootload=1.00
(smt.stats   94  14456 479602 1712118  9076/8560/445   41073/3159    46  518   29.68)
(smt.stats   95  14603 484645 1745984  9160/8734/445   42185/3166    46  518   29.77)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   96  14764 490416 1784476  9289/8834/445   43036/3170    46  518   29.96)
ramon: poll                 wall=18.000s usage=17.932s mem=31516KiB load=1.00 rootload=0.99
(smt.stats   97  14941 495968 1819012  9400/8976/445   44165/3174    46  518   30.25)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15135 501200 1849407  9477/9086/445   45489/3178    46  518   30.25)
(smt.stats   99  15348 508677 1876773  9603/9141/445   46822/3182    46  518   30.44)
ramon: poll                 wall=19.000s usage=18.927s mem=32776KiB load=1.00 rootload=1.00
(smt.stats  100  15582 514899 1916902  9699/9279/445   48296/3183    46  518   30.63)
ramon: poll                 wall=20.000s usage=19.927s mem=32856KiB load=1.00 rootload=1.00
(smt.stats  101  15839 524822 1980043  9953/9380/445   49429/3187    46  518   30.82)
ramon: end                  Tue Dec 24 14:40:56 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.969s
ramon: group.utime          19.957s
ramon: group.stime          0.012s
ramon: group.mempeak        34700KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.041s
ramon: loadavg              1.00
