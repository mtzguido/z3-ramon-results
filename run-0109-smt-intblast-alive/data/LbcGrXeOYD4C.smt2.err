ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:06:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41813 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1259
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LbcGrXeOYD4C.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2921132
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2408    450   684/616/106     118/25     7   52   18.75)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108863
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&1
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&2
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108863
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108862
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108860
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108863
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108862
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108844
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108848
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108800
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108800
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&33554432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&2
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&4
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 67108868 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&33554430
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&33554428
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 67108880 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 67108880 := 0 << 25
(smt.stats    1    202   3693   2065  1330/1182/144     304/38     8   60   19.14)
(smt.stats    2    313   5027   3344  1435/1240/150     481/44     9   62   19.33)
(smt.stats    3    414   5891   4788  1573/1431/153     758/63    11   70   19.33)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 66 := 8191&66
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 66 := 130 << 12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 66 := 8191&66
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 66 := 130 << 12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8188 := 8191&8188
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 8188 := 130 << 12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8188 := 8191&8188
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 8188 := 130 << 12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8190 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8188 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8188 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8184 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8176 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
(smt.stats    4    525   6658   6391  1676/1450/175     800/109    13  262   19.64)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 532481 := 65 << 13
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 532481 := 65 << 13
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 532481 := 65 << 13
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8191 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8190 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8188 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8184 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8176 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 12 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8 := 8191&532480
(smt.stats    5    647   8384   8934  1829/1651/402     981/139    15  309   20.25)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 65536 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16384 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 73728 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 73728 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 73728 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 335872 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 466944 := 2097151&466944
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 466944 := 114 << 20
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 204800 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 212992 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 212992 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 245760 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 212992 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 229376 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 245760 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  11869  12882  1974/1814/518    1210/208    16  344   20.76)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 475136 := 1048575&475136
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 475136 := 116 << 19
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 458752 := 4194302&458752
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 458752 := 112 << 21
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 409600 := 8388605&450560
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 417792 := 8388605&450560
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 417792 := 8388605&450560
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 417792 := 8388605&450560
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 450560 := 8388605&450560
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 450560 := 110 << 22
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 442368 := 16777210&442368
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 442368 := 108 << 23
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 434176 := 33554421&434176
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 434176 := 106 << 24
(smt.stats    7    859  17578  19421  2081/1849/518    1366/219    16  344   21.16)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 511&565248
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 511&565248
(smt.stats    8    981  21271  23927  2174/2003/567    1835/374    19  392   21.64)
(smt.stats    9   1115  27887  31044  2262/2095/583    2284/449    20  422   22.02)
ramon: poll                 wall=1.004s usage=0.941s mem=23740KiB load=0.94 rootload=0.92
(smt.stats   10   1216  31760  35652  2355/2150/588    2674/471    21  443   22.31)
(smt.stats   11   1327  35367  42792  2626/2438/592    2997/531    23  460   22.40)
(smt.stats   12   1449  37498  47729  2727/2540/597    3479/594    24  508   22.70)
ramon: poll                 wall=2.000s usage=1.933s mem=24288KiB load=1.00 rootload=0.99
(smt.stats   13   1583  43416  57842  2896/2627/599    3936/723    25  513   23.08)
(smt.stats   14   1730  49226  67902  2991/2693/600    4441/760    26  513   23.27)
(smt.stats   15   1831  53415  74326  3103/2858/603    4769/813    27  524   23.37)
ramon: poll                 wall=3.000s usage=2.933s mem=25144KiB load=1.00 rootload=1.00
(smt.stats   16   1942  57693  83626  3171/2960/605    5440/837    28  526   23.27)
(smt.stats   17   2064  61236  94179  3212/2979/613    6143/839    28  526   23.46)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  65277 103731  3307/3046/618    6525/1066    29  572   23.55)
(smt.stats   19   2345  69579 113415  3559/3141/619    7042/1161    30  589   23.65)
ramon: poll                 wall=4.000s usage=3.933s mem=25324KiB load=1.00 rootload=1.00
(smt.stats   20   2506  75763 123018  3678/3386/621    7734/1173    30  589   23.84)
(smt.stats   21   2607  79159 131144  3879/3632/624    8084/1360    31  612   23.93)
ramon: poll                 wall=5.000s usage=4.932s mem=25536KiB load=1.00 rootload=1.00
(smt.stats   22   2718  82956 139727  4067/3727/624    8549/1366    31  612   24.03)
ramon: poll                 wall=6.000s usage=5.932s mem=25712KiB load=1.00 rootload=1.00
(smt.stats   23   2840  86229 148365  4324/3874/624    8901/1465    32  623   24.32)
(smt.stats   24   2974  89115 156615  4696/4484/625    9931/1649    33  644   24.41)
ramon: poll                 wall=7.000s usage=6.932s mem=26032KiB load=1.00 rootload=1.00
(smt.stats   25   3121  94226 170232  4825/4550/626   10788/1664    33  644   24.60)
(smt.stats   26   3282  99584 185701  5016/4769/627   11433/2044    34  651   24.90)
ramon: poll                 wall=8.000s usage=7.932s mem=26616KiB load=1.00 rootload=1.00
(smt.stats   27   3459 103760 200825  5278/5047/632   13264/2379    35  686   25.29)
(smt.stats   28   3560 107083 216126  5314/5057/634   14041/2382    35  686   25.48)
(smt.stats   29   3671 112544 238939  5421/5130/636   15137/2389    35  686   25.58)
ramon: poll                 wall=9.000s usage=8.932s mem=27208KiB load=1.00 rootload=1.00
(smt.stats   30   3793 117477 257221  5584/5215/636   16070/2692    36  696   25.82)
(smt.stats   31   3927 122386 278415  5746/5386/636   16795/2697    36  696   25.92)
ramon: poll                 wall=10.000s usage=9.930s mem=27640KiB load=1.00 rootload=1.00
(smt.stats   32   4074 127352 305105  5887/5567/645   18875/2984    37  703   26.21)
(smt.stats   33   4235 132300 321418  6161/5691/645   19476/2997    37  703   26.40)
ramon: poll                 wall=11.000s usage=10.929s mem=28032KiB load=1.00 rootload=1.00
(smt.stats   34   4412 138082 340399  6356/6060/647   20311/3353    38  792   26.49)
(smt.stats   35   4606 142869 363239  6474/6186/651   22087/3358    38  792   26.69)
ramon: poll                 wall=12.000s usage=11.928s mem=28344KiB load=1.00 rootload=1.00
(smt.stats   36   4707 146084 378316  6665/6299/651   22577/3879    39  828   26.69)
(smt.stats   37   4818 149461 392796  6787/6459/652   23256/3883    39  828   26.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4940 152155 410207  6984/6633/652   24042/3886    39  828   26.98)
ramon: poll                 wall=13.000s usage=12.928s mem=28676KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 45)
(smt.stats   39   5074 156049 429753  7025/6757/652   24934/4191    40  829   27.17)
(smt.stats   40   5221 161384 448290  7208/6825/654   25533/4194    40  829   27.33)
ramon: poll                 wall=14.000s usage=13.928s mem=29204KiB load=1.00 rootload=1.00
(smt.stats   41   5382 166678 463367  7382/7005/654   25990/4199    40  829   27.52)
(smt.stats   42   5559 171353 489333  7465/7232/659   26971/4358    41  843   27.52)
ramon: poll                 wall=15.000s usage=14.927s mem=29404KiB load=1.00 rootload=1.00
(smt.stats   43   5753 180467 548132  7559/7323/660   28130/4714    42  884   27.81)
(smt.stats   44   5966 185584 575193  7669/7410/663   29101/4715    42  884   28.15)
(smt.stats   45   6067 189144 582930  7734/7449/663   29651/4718    42  884   28.25)
(smt.stats   46   6178 191878 594898  7854/7486/664   30061/4722    42  884   28.44)
ramon: poll                 wall=16.000s usage=15.927s mem=30244KiB load=1.00 rootload=0.99
(smt.stats   47   6300 195378 609165  7979/7622/664   30407/5086    43  929   28.54)
(smt.stats   48   6434 198137 620388  8162/7725/664   30779/5089    43  929   28.64)
(smt.stats   49   6581 200525 638528  8198/7903/664   31978/5091    43  929   28.73)
ramon: poll                 wall=17.000s usage=16.926s mem=30484KiB load=1.00 rootload=1.00
(smt.stats   50   6742 204598 663576  8382/7964/665   32472/5095    43  929   28.83)
ramon: poll                 wall=18.000s usage=17.926s mem=30836KiB load=1.00 rootload=1.00
(smt.stats   51   6919 208621 683976  8780/8509/667   33208/5414    44  932   29.02)
(smt.stats   52   7113 215886 728077  8897/8516/667   34598/5415    44  932   29.30)
ramon: poll                 wall=19.000s usage=18.926s mem=30892KiB load=1.00 rootload=1.00
(smt.stats   53   7326 222167 754644  9200/8911/670   35465/5647    45  996   29.61)
ramon: poll                 wall=20.000s usage=19.925s mem=31488KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:06:41 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.984s
ramon: group.stime          0.016s
ramon: group.mempeak        32004KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.071s
ramon: loadavg              1.00
