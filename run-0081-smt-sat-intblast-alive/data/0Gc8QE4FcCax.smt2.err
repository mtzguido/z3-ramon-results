ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:19:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31151 MiB
ramon: sys.mem.avail        62093 MiB
ramon: sys.nprocs           1354
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0Gc8QE4FcCax.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             206531
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts     :learned/bin    :gc          :time)
(sat.stats          :decisions   :clauses/bin :units       :memory       )
(sat.stats      0      0    0     8/8     0/0  76       0    17.93   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 30 :time 0.00)
lshr: (lshr[60] (bv2int %1) (+ 60 (* 1152921504606846975 #75))) 1 := 1 >>l 1
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 52 :time 0.00)
shl: (shl[60] (bv2int %0) (mod (bv2int %0) 60)) 119 := 119 << 59
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 88 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 104 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 139 :time 0.00)
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 0&576460752303423488
shl: (shl[64] (bv2int %0) (mod (+ #50 #128) 64)) 0 := 419 << 59
 (sat-cleaner :elim-literals 15 :elim-clauses 0 :cost 265 :time 0.00)
 (sat-cleaner :elim-literals 11 :elim-clauses 2 :cost 293 :time 0.00)
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 1 := 1&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 2 := 2&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 22604 := 576460752303298183&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 53000 := 576460752303359815&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 170648 := 211471&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 16 := 29&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 140352 := 500264&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 149824 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 32 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 277632 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 70400 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 55296 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 1536 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 1024 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 225280 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 335872 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 180224 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 262144 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 32768 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 65536 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 131072 := 500223&576460752303423488
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 500223&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 10946 := 576460752303423488&500223
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 229375&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 88869 := 576460752303423488&229375
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24141&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 10048 := 576460752303423488&24141
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24137&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 4 := 576460752303423488&24137
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24143&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 8 := 576460752303423488&24143
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24143&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 48 := 576460752303423488&24143
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24136&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 32 := 576460752303423488&24136
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24143&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 6912 := 576460752303423488&24143
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24136&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 128 := 576460752303423488&24136
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24138&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 1536 := 576460752303423488&24138
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24140&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 2048 := 576460752303423488&24140
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24141&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 1024 := 576460752303423488&24141
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24140&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 16384 := 576460752303423488&24140
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24140&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 12288 := 576460752303423488&24140
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 24141&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 8192 := 576460752303423488&24141
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 56911&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 32768 := 576460752303423488&56911
band: (band[60] (lshr[60] (bv2int %1) (+ 60 #119)) (shl[60] (bv2int %0) (mod #50 60))) 0 := 89676&576460752303423488
band: (band[60] (shl[64] (bv2int %0) (mod #129 64)) (lshr[64] (mod #95 576460752303423488) (mod #137 64))) 65536 := 576460752303423488&89676
(sat.stats    169   1740    0  2317/2315   200/63 112       0    20.31   0.12)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 739 :time 0.00)
(sat.stats    169   1740    0  2816/2814   198/62 339       0    20.31   0.12)
(sat.stats    169   1740    0  2816/2814   198/62 339       0    20.31   0.12)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 9 :elim-bin 1142 :time 0.00)
 (sat-probing :cost 19902220.50 :time 0.00)
(sat.stats    169   1740    0   688/686   146/21 341       0    20.50   0.12)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 672 :time 0.00)
 (sat-cleaner :elim-literals 8 :elim-clauses 1 :cost 917 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 906 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 906 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 906 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 903 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 903 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 900 :time 0.00)
(sat.stats    250   5880    1 16242/16240   650/456 357       0    23.31   0.22)
(sat.stats :conflicts    :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions  :clauses/bin         :units         :memory       )
(sat.stats    256   6191    2 16990/16988   680/480 357       0    23.31   0.23)
(sat.stats    259   6367    3 18417/18415   702/499 357       0    23.62   0.23)
(sat.stats    262   6450    4 18951/18949   718/512 357       0    23.62   0.24)
(sat.stats    265   6705    5 19475/19473   732/523 357       0    23.72   0.24)
(sat.stats    268   6885    6 20475/20473   754/542 357       0    23.98   0.25)
(sat.stats    271   6974    7 20819/20817   774/559 357       0    23.98   0.25)
(sat.stats    274   7233    8 21033/21031   788/570 357       0    23.98   0.26)
(sat.stats    277   7409    9 21646/21644   810/589 357       0    24.26   0.26)
(sat.stats    280   7499   10 21986/21984   830/606 357       0    24.26   0.26)
(sat.stats    283   7767   11 22200/22198   844/617 357       0    24.26   0.27)
(sat.stats    286   7939   12 22866/22864   866/636 357       0    24.36   0.27)
(sat.stats    289   8028   13 23210/23208   882/649 357       0    24.45   0.28)
(sat.stats    316   9546   22 26829/26827  1042/782 357       0    25.13   0.31)
ramon: poll                 wall=1.000s usage=0.999s mem=36504KiB load=1.00 rootload=0.98
ramon: poll                 wall=2.000s usage=1.999s mem=53436KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.999s mem=58976KiB load=1.00 rootload=0.99
(sat.stats :conflicts   :restarts         :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin            :units         :memory       )
(sat.stats   1200  65059   51 142748/142746  6377/5233 357       0    60.54   3.39)
(sat.stats   1203  65341   52 143234/143232  6400/5253 357       0    60.65   3.42)
(sat.stats   1206  65350   53 143626/143624  6408/5258 357       0    60.65   3.43)
ramon: poll                 wall=4.000s usage=3.998s mem=64896KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.998s mem=84608KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.998s mem=88996KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.998s mem=94456KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=99MiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.997s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.997s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.996s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.996s mem=111MiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 11412 :time 0.01)
ramon: poll                 wall=13.000s usage=12.996s mem=113MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.996s mem=113MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.995s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.995s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.995s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.001s usage=17.996s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.992s mem=115MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.994s mem=117MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:19:36 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.080s
ramon: group.total          20.020s
ramon: group.utime          19.936s
ramon: group.stime          0.084s
ramon: group.mempeak        117MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.026s
ramon: loadavg              1.00
