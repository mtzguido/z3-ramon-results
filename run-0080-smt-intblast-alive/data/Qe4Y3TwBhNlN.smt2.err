ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:21:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25772 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Qe4Y3TwBhNlN.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             27893
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 1 := 1&68
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&68
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 68 := 38 << 14
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 1 := 1&68
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&68
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 68 := 38 << 14
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 1 := 1&68
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&68
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 68 := 38 << 14
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65535
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65535
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65534
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 65534 := 4 << 14
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 131071 := 2 << 15
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 65535 := 2 << 15
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 65535 := 2 << 15
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
band: (band[17] (if (or #360 #361 #362 #363 #364 #365 #366 #367 #368 #369 #370 #371 #372 #373) 0 (if #374 1 #378)) (shl[17] (bv2int %0) (+ 17 #430))) 1 := 1&65536
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 65538 := 2 << 15
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
band: (band[17] (if (or #360 #361 #362 #363 #364 #365 #366 #367 #368 #369 #370 #371 #372 #373) 0 (if #374 1 #378)) (shl[17] (bv2int %0) (+ 17 #430))) 1 := 1&65536
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 131071 := 2 << 15
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
band: (band[17] (if (or #360 #361 #362 #363 #364 #365 #366 #367 #368 #369 #370 #371 #372 #373) 0 (if #374 1 #378)) (shl[17] (bv2int %0) (+ 17 #430))) 1 := 1&65536
(smt.stats    0    101   1695    686   584/521/126     134/17     4   23   18.78)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 1 := 1&65536
(smt.stats    1    202   2867   2349   765/686/141     308/18     8   31   18.88)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&98304
band: (band[17] (if (or #360 #361 #362 #363 #364 #365 #366 #367 #368 #369 #370 #371 #372 #373) 0 (if #374 1 #378)) (shl[17] (bv2int %0) (+ 17 #430))) 1 := 1&98304
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 1 := 1&98304
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 1 := 1&98304
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 2 := 3&65538
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 720898 := 36 << 15
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 2 := 3&65538
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 720898 := 36 << 15
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&32770
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&131070
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&131068
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&131070
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&131068
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&131068
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&131064
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 917496 := 34 << 16
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&131070
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&32772
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&32776
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 950280 := 34 << 16
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&32770
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&32769
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 1212417 := 34 << 16
(smt.stats    2    313   3888   3823   899/802/178     521/28     9   38   19.17)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&10
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 10 := 56 << 5
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 40 << 13
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 48 << 9
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 44 << 11
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 42 << 12
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 46 << 10
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 62 << 2
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 60 << 3
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 58 << 4
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 50 << 8
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 54 << 6
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 18 := 52 << 7
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 1048594 := 50 << 8
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&14
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 1048590 := 50 << 8
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&14
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 1048590 := 50 << 8
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 1048594 := 48 << 9
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&18
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 1048594 := 48 << 9
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&12
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 1048588 := 48 << 9
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&8
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 1048584 := 40 << 13
(smt.stats    3    414   4704   5561  1071/868/178     720/31     9   38   19.65)
(smt.stats    4    525   6176   8164  1219/1087/268     959/133    12  113   20.04)
ramon: poll                 wall=1.000s usage=0.999s mem=21952KiB load=1.00 rootload=0.98
(smt.stats    5    647   8400  10768  1544/1207/268    1167/137    12  113   20.62)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 1 := 1&65536
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
band: (band[17] (if (or #360 #361 #362 #363 #364 #365 #366 #367 #368 #369 #370 #371 #372 #373) 0 (if #374 1 #378)) (shl[17] (bv2int %0) (+ 17 #430))) 1 := 1&65536
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 1&65536
band: (band[17] (if (or #360 #361 #362 #363 #364 #365 #366 #367 #368 #369 #370 #371 #372 #373) 0 (if #374 1 #378)) (shl[17] (bv2int %0) (+ 17 #430))) 1 := 1&65536
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  10073  14263  1631/1453/277    1360/159    13  124   20.62)
(smt.stats    7    859  12522  17446  1712/1536/278    1558/176    14  126   20.81)
ramon: poll                 wall=2.000s usage=1.999s mem=22272KiB load=1.00 rootload=1.00
(smt.stats    8    981  13409  19613  1993/1620/278    1721/188    15  127   21.09)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 2 := 3&32772
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 2 := 3&32772
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 2 := 3&32774
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 819206 := 262142 << 15
(smt.stats    9   1115  17353  25574  2046/1856/278    2128/190    15  127   21.09)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 3&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 34502 := 131071 << 16
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 3&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 7713 := 131071 << 16
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 3&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 7713 := 131071 << 16
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 3&65536
band: (band[17] (if (or #360 #361 #362 #363 #364 #365 #366 #367 #368 #369 #370 #371 #372 #373) 0 (if #374 1 #378)) (shl[17] (bv2int %0) (+ 17 #430))) 2 := 3&65536
(smt.stats   10   1216  20456  29506  2098/1938/294    2319/293    16  132   21.18)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 6&131068
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 4 := 6&131068
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 262140 := 262140 << 16
(smt.stats   11   1327  23127  34623  2131/1964/301    2602/296    17  135   21.28)
(smt.stats   12   1449  25931  40450  2210/2008/301    3007/297    17  135   21.28)
ramon: poll                 wall=3.000s usage=2.998s mem=22736KiB load=1.00 rootload=1.00
(smt.stats   13   1583  30640  50107  2232/2056/302    3221/429    18  136   21.47)
(smt.stats   14   1730  33783  55244  2486/2075/303    3530/444    19  138   21.66)
ramon: poll                 wall=4.000s usage=3.998s mem=22968KiB load=1.00 rootload=1.00
(smt.stats   15   1831  35079  58383  2783/2385/305    3690/447    19  138   21.76)
(smt.stats   16   1942  37011  62954  2986/2813/309    4038/492    20  146   21.85)
(smt.stats   17   2064  39944  70690  2990/2817/309    4370/492    20  146   22.03)
ramon: poll                 wall=5.000s usage=4.997s mem=23388KiB load=1.00 rootload=1.00
(smt.stats   18   2198  42804  79089  3022/2831/310    4775/584    21  168   22.03)
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 54263824 := 197450 << 10
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 54263824 := 197450 << 10
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 54263824 := 197446 << 12
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 54263824 := 197446 << 12
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 54263824 := 197448 << 11
band: (band[17] (if (or #446 #447 #448 #449 #450 #451 #452 #453 #454 #455 #456 #457 #458 #459) 0 (if #460 1 #506)) (shl[32] (* 2 #118) (mod #577 32))) 0 := 0&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #562 #215 #438) 32)) 54263824 := 197448 << 11
(smt.stats   19   2345  44002  81245  3082/2888/310    4963/589    21  168   23.22)
(smt.stats   20   2506  47009  89291  3484/3282/315    5746/724    22  178   23.03)
(smt.stats   21   2607  49233  97702  3529/3316/315    6065/724    22  178   23.13)
ramon: poll                 wall=6.000s usage=5.997s mem=24608KiB load=1.00 rootload=1.00
(smt.stats   22   2718  51362 106541  3624/3439/316    6330/766    23  185   23.13)
(smt.stats   23   2840  52939 111058  3757/3522/316    6693/771    23  185   23.32)
(smt.stats   24   2974  54942 116735  3938/3648/316    6983/805    24  185   23.32)
ramon: poll                 wall=7.000s usage=6.997s mem=24828KiB load=1.00 rootload=1.00
(smt.stats   25   3121  56842 126301  4002/3788/316    7660/805    24  185   23.41)
ramon: poll                 wall=8.000s usage=7.996s mem=25096KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   26   3282  60820 138802  4165/3829/316    8165/814    24  185   23.60)
ramon: poll                 wall=9.000s usage=8.996s mem=25468KiB load=1.00 rootload=0.99
(smt.stats   27   3459  64642 148566  4296/4010/316    9088/816    24  185   23.79)
(smt.stats   28   3560  66616 157763  4310/4123/323    9678/980    25  193   23.88)
ramon: poll                 wall=10.000s usage=9.995s mem=25484KiB load=1.00 rootload=1.00
(smt.stats   29   3671  69428 171010  4407/4144/324   10371/981    25  193   23.98)
(smt.stats   30   3793  71206 179976  4442/4253/325   10759/1041    26  215   23.98)
(smt.stats   31   3927  73532 187554  4455/4269/325   11181/1041    26  215   23.98)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4074  76738 199216  4491/4275/325   11603/1042    26  215   24.07)
ramon: poll                 wall=11.000s usage=10.995s mem=25552KiB load=1.00 rootload=1.00
(smt.stats   33   4235  79045 210002  4548/4345/325   11988/1043    26  215   24.07)
ramon: poll                 wall=12.000s usage=11.994s mem=25792KiB load=1.00 rootload=1.00
(smt.stats   34   4412  82144 220563  4652/4379/325   12392/1044    26  215   24.36)
(smt.stats   35   4606  85555 235408  4667/4481/326   12837/1143    27  219   24.46)
(smt.stats   36   4707  88403 246362  4669/4487/326   13255/1143    27  219   24.46)
ramon: poll                 wall=13.000s usage=12.994s mem=26000KiB load=1.00 rootload=1.00
(smt.stats   37   4818  90840 257292  4675/4487/329   13478/1229    28  232   24.46)
(smt.stats   38   4940  93774 268313  4719/4500/329   13953/1229    28  232   24.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  95614 276397  4753/4554/329   14336/1229    28  232   24.56)
ramon: poll                 wall=14.000s usage=13.993s mem=26096KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.004s usage=14.997s mem=26272KiB load=1.00 rootload=1.00
(smt.stats   40   5221  96981 281056  4886/4582/329   14583/1229    28  232   24.75)
(smt.stats   41   5382  98411 288261  5069/4842/329   14823/1229    28  232   24.75)
ramon: poll                 wall=16.000s usage=15.992s mem=26392KiB load=1.00 rootload=1.00
(smt.stats   42   5559 101334 306263  5088/4889/329   15253/1230    28  232   24.85)
ramon: poll                 wall=17.000s usage=16.992s mem=26424KiB load=1.00 rootload=1.00
(smt.stats   43   5753 105071 322372  5125/4908/329   15686/1230    28  232   24.85)
(smt.stats   44   5966 109154 335337  5192/4972/329   16347/1230    28  232   24.94)
ramon: poll                 wall=18.000s usage=17.991s mem=26600KiB load=1.00 rootload=1.00
(smt.stats   45   6067 111110 340655  5240/5039/329   16669/1230    28  232   25.04)
(smt.stats   46   6178 113144 352155  5262/5064/329   16925/1230    28  232   25.04)
ramon: poll                 wall=19.000s usage=18.991s mem=26620KiB load=1.00 rootload=1.00
(smt.stats   47   6300 115623 367120  5336/5081/329   17161/1231    28  232   25.04)
(smt.stats   48   6434 117624 383817  5372/5166/329   17578/1232    28  232   25.04)
(smt.stats   49   6581 119862 395794  5441/5205/330   17901/1481    29  244   25.14)
ramon: poll                 wall=20.000s usage=19.990s mem=26708KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:21:46 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.996s
ramon: group.utime          19.980s
ramon: group.stime          0.016s
ramon: group.mempeak        26964KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
