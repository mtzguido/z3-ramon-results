ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:50:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24960 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/iC5YeRdmK2O0.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             123975
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3728    339  1319/1135/106     117/6     4   17   19.37)
(smt.stats    1    203   6511    978  2076/1893/107     250/19     5   18   19.46)
(smt.stats    2    314  11799   2541  2085/1896/107     378/20     5   18   19.57)
(smt.stats    3    415  18300   6944  2164/1946/107     486/30     5   18   19.67)
(smt.stats    4    526  19495   8006  2339/2058/112     645/123     7   24   19.77)
(smt.stats    5    648  21719  10875  2784/2521/115     851/156     9   29   19.86)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  23209  15360  2834/2588/117     961/178    10   30   19.86)
(smt.stats    7    860  25536  18472  2874/2603/118    1101/182    11   30   19.96)
(smt.stats    8    982  27005  23068  2909/2656/119    1246/192    12   32   19.96)
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 1 := 31525197391593472&1
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 2 := 31525197391593472&2
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 4 := 31525197391593472&4
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 8 := 31525197391593472&8
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 16 := 31525197391593472&16
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 32 := 31525197391593472&32
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 64 := 31525197391593472&64
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 128 := 31525197391593472&128
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 256 := 31525197391593472&256
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 512 := 31525197391593472&512
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 1024 := 31525197391593472&1024
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 2048 := 31525197391593472&2048
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 1024 := 31525197391593472&1024
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 2048 := 31525197391593472&2048
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 4096 := 31525197391593472&4096
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 8192 := 31525197391593472&8192
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 7 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 7 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 6 := 31525197391593472&6
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 4 := 31525197391593472&4
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&1
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 1 := 128128 >>l 14
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&1
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 1 := 128128 >>l 14
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&8
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 8 := 128128 >>l 14
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 6 := 1001 >>l 7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 7 := 128128 >>l 14
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 6 := 1001 >>l 7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 7 := 128128 >>l 14
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 6 := 1001 >>l 7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 1 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 1 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 2 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&6
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 6 := 128128 >>l 14
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 8 := 1001 >>l 7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 1 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 2 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 2 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 2 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 2 := 31525197391593472&7
(smt.stats    9   1116  30595  28722  3005/2738/194    1402/198    13   41   20.35)
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 1 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 2 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 4 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 1 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 2 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 2 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 2 := 31525197391593472&7
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 31525197391593472&7
band: (band[56] (if (= #114 55) 776575376265411502036851382812672 (if #514 388287688132705751018425691406336 #622)) (lshr[56] (bv2int %0) (+ 56 #625))) 4 := 31525197391593472&7
(smt.stats   10   1217  31901  33591  3040/2784/227    1500/217    14   55   20.35)
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&38
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 38 := 128000 >>l 15
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&6
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 6 := 128000 >>l 15
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&3
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 47 := 1000 >>l 8
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&3
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 3 := 128000 >>l 15
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&3
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 47 := 1000 >>l 8
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&3
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 3 := 128000 >>l 15
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&3
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 8 := 1000 >>l 8
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&6
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 6 := 128000 >>l 15
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&3
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 8 := 1000 >>l 8
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&2
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 2 := 128000 >>l 15
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&2
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 2 := 128000 >>l 15
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&2
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 2 := 128000 >>l 15
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 0 := 51791395714760704&2
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #636 #640) 64)) 2 := 128000 >>l 15
(smt.stats   11   1328  34130  39249  3083/2823/243    1635/229    16   69   20.47)
(smt.stats   12   1450  36497  44711  3130/2866/246    1764/236    17   70   20.56)
ramon: poll                 wall=1.000s usage=0.933s mem=21956KiB load=0.93 rootload=0.92
(smt.stats   13   1584  38751  49149  3201/2908/247    1903/261    19   76   20.86)
(smt.stats   14   1731  42235  54280  3458/3010/247    2060/263    19   76   20.86)
(smt.stats   15   1832  43265  57173  3739/3241/247    2191/264    19   76   21.06)
(smt.stats   16   1943  45072  62353  3876/3612/248    2376/319    20   84   21.15)
ramon: poll                 wall=2.000s usage=1.931s mem=22368KiB load=1.00 rootload=1.00
(smt.stats   17   2065  47838  68413  3890/3619/248    2539/320    20   84   21.15)
(smt.stats   18   2199  51094  77526  3902/3638/249    2718/378    21   86   21.25)
(smt.stats   19   2346  57905  89141  3955/3645/249    2905/383    21   86   21.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   20   2507  63028 100877  4028/3702/249    3123/384    21   86   21.34)
(smt.stats   21   2608  67000 114104  4084/3770/249    3285/389    21   86   21.34)
(smt.stats   22   2719  71244 124267  4096/3832/250    3404/466    22   88   21.34)
ramon: poll                 wall=3.000s usage=2.929s mem=22632KiB load=1.00 rootload=1.00
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 48 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 48 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 64 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 64 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 64 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 64 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 64 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 64 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 128 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 128 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 256 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 8192 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 16384 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 32768 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 65536 := 54711074978267136&65536
(smt.stats   23   2841  72908 127524  4263/3834/250    3628/472    22   88   21.44)
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 58912 := 54711074978267136&58912
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 32768 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 24576 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 16384 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 8192 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 16384 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 8192 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 8192 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 1536 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 1536 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 1024 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 544 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 544 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 544 := 54711074978267136&36336
band: (band[56] (if (= #355 63) 198803296323945344521433954000044032 (if #493 99401648161972672260716977000022016 #490)) (lshr[64] (* 128 #108) (mod #643 64))) 544 := 54711074978267136&36336
(smt.stats   24   2975  75379 134807  4352/4088/330    3992/539    24  116   21.64)
(smt.stats   25   3122  79241 144842  4370/4090/331    4226/542    24  116   21.73)
(smt.stats   26   3283  83671 160389  4384/4118/332    4453/623    26  117   21.73)
(smt.stats   27   3460  88543 175389  4418/4154/333    4697/677    27  118   21.83)
(smt.stats   28   3561  90551 185312  4432/4156/333    4841/679    27  118   21.83)
(smt.stats   29   3672  94349 198213  4456/4172/334    4976/698    28  125   21.83)
ramon: poll                 wall=4.000s usage=3.926s mem=23184KiB load=1.00 rootload=0.99
(smt.stats   30   3794  97944 209680  4569/4206/334    5135/700    28  125   21.92)
(smt.stats   31   3928 101404 220713  4678/4318/334    5359/702    28  125   21.92)
(smt.stats   32   4075 105155 232736  4732/4430/335    5609/770    29  126   22.02)
(smt.stats   33   4236 110723 255009  4754/4475/335    5861/770    29  126   22.02)
ramon: poll                 wall=5.000s usage=4.926s mem=23408KiB load=1.00 rootload=1.00
(smt.stats   34   4413 113679 260461  4899/4501/335    6050/771    29  126   22.12)
(smt.stats   35   4607 116453 276266  5038/4675/335    6298/774    29  126   22.34)
(smt.stats   36   4708 118317 284671  5162/4798/335    6412/776    29  126   22.34)
(smt.stats   37   4819 120078 291131  5299/4907/335    6577/776    29  126   22.43)
ramon: poll                 wall=6.000s usage=5.922s mem=23980KiB load=1.00 rootload=1.00
(smt.stats   38   4941 122769 301923  5397/5090/335    6880/776    29  126   22.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5075 125219 310410  5472/5143/337    7114/867    30  140   22.53)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5222 128320 322666  5594/5234/337    7296/869    30  140   22.53)
(smt.stats   41   5383 131633 337737  5645/5333/337    7479/869    30  140   22.62)
ramon: poll                 wall=7.000s usage=6.920s mem=24232KiB load=1.00 rootload=0.99
(smt.stats   42   5560 135136 351115  5744/5426/337    7778/872    30  140   22.62)
(smt.stats   43   5754 140424 368781  5835/5491/338    8019/933    31  143   22.91)
(smt.stats   44   5967 146241 386635  5986/5611/338    8446/941    31  143   22.91)
(smt.stats   45   6068 148682 396701  5998/5733/338    8628/941    31  143   22.91)
(smt.stats   46   6179 150571 406531  6005/5736/338    8778/941    31  143   23.02)
ramon: poll                 wall=8.000s usage=7.919s mem=24688KiB load=1.00 rootload=1.00
(smt.stats   47   6301 153344 424191  6020/5749/339    8961/1086    32  143   23.02)
(smt.stats   48   6435 155889 435038  6080/5767/339    9125/1086    32  143   23.02)
(smt.stats   49   6582 158056 450340  6119/5832/339    9388/1088    32  143   23.12)
(smt.stats   50   6744 162284 472848  6211/5946/340    9651/1140    33  144   23.12)
(smt.stats   51   6921 165379 492505  6247/5953/340    9929/1140    33  144   23.12)
ramon: poll                 wall=9.000s usage=8.918s mem=24748KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7115 168559 517290  6257/5988/341   10239/1157    34  145   23.12)
(smt.stats   53   7328 172156 538765  6397/5993/341   10539/1157    34  145   23.21)
(smt.stats   54   7562 175194 564228  6456/6162/344   10880/1202    35  148   23.31)
(smt.stats   55   7663 176858 575779  6483/6197/344   11045/1203    35  148   23.31)
(smt.stats   56   7774 179599 593475  6515/6220/344   11181/1224    36  167   23.31)
ramon: poll                 wall=10.000s usage=9.918s mem=24748KiB load=1.00 rootload=1.00
(smt.stats   57   7896 182210 610661  6579/6264/345   11344/1224    36  167   23.40)
(smt.stats   58   8030 184545 629866  6652/6333/345   11626/1233    37  170   23.40)
(smt.stats   59   8177 186679 645232  6767/6407/346   11831/1296    38  170   23.50)
ramon: poll                 wall=11.000s usage=10.917s mem=25084KiB load=1.00 rootload=1.00
(smt.stats   60   8338 188199 656650  6926/6507/346   12041/1297    38  170   23.50)
(smt.stats   61   8515 190049 670780  7089/6730/346   12350/1297    38  170   23.69)
(smt.stats   62   8709 191721 698775  7225/6908/346   12586/1299    38  170   23.69)
ramon: poll                 wall=12.000s usage=11.916s mem=25272KiB load=1.00 rootload=1.00
(smt.stats   63   8922 193503 720693  7391/6994/346   12891/1301    38  170   23.79)
(smt.stats   64   9156 196836 750128  7440/7132/346   13245/1302    38  170   23.79)
(smt.stats   65   9413 201683 774701  7581/7214/347   13634/1361    39  170   23.89)
ramon: poll                 wall=13.000s usage=12.915s mem=25232KiB load=1.00 rootload=1.00
(smt.stats   66   9514 203228 788910  7662/7364/347   13769/1361    39  170   23.89)
(smt.stats   67   9625 204780 804370  7723/7397/347   13990/1361    39  170   23.89)
(smt.stats   68   9747 205867 815904  7778/7467/347   14155/1362    39  170   23.89)
(smt.stats   69   9881 207908 830884  7829/7528/347   14343/1362    39  170   23.89)
(smt.delete-inactive-clauses  :num-deleted-clauses 17)
(smt.stats   70  10028 210007 844874  7890/7579/347   14537/1362    39  170   23.98)
(smt.stats   71  10189 211526 859065  7924/7631/347   14735/1362    39  170   23.98)
ramon: poll                 wall=14.000s usage=13.915s mem=25628KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10366 213977 879296  7993/7662/347   14971/1362    39  170   23.98)
(smt.stats   73  10560 216095 897625  8063/7731/347   15202/1362    39  170   24.08)
(smt.stats   74  10773 218609 920723  8190/7801/347   15501/1364    39  170   24.08)
ramon: poll                 wall=15.000s usage=14.914s mem=25804KiB load=1.00 rootload=1.00
(smt.stats   75  11007 220821 943826  8326/7934/347   15804/1364    39  170   24.18)
(smt.stats   76  11264 223483 975803  8458/8109/347   16075/1367    39  170   24.38)
(smt.stats   77  11546 226869 1005392  8571/8208/347   16579/1367    39  170   24.47)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11647 228236 1020545  8588/8309/347   16695/1367    39  170   24.47)
ramon: poll                 wall=16.005s usage=15.921s mem=26160KiB load=1.00 rootload=1.00
(smt.stats   79  11758 228811 1030423  8599/8330/347   16849/1367    39  170   24.47)
(smt.stats   80  11880 230582 1045924  8613/8335/347   17040/1367    39  170   24.47)
(smt.stats   81  12014 231780 1058320  8640/8352/347   17190/1367    39  170   24.57)
(smt.stats   82  12161 232970 1082758  8698/8379/347   17386/1367    39  170   24.57)
(smt.stats   83  12322 235715 1103173  8785/8437/347   17586/1367    39  170   24.67)
ramon: poll                 wall=17.000s usage=16.905s mem=26160KiB load=0.99 rootload=0.98
(smt.stats   84  12499 238251 1124020  8832/8534/347   17811/1370    39  170   24.67)
(smt.stats   85  12693 241188 1149469  8863/8572/347   18052/1370    39  170   24.67)
(smt.stats   86  12906 243116 1177927  8942/8612/347   18383/1370    39  170   24.76)
ramon: poll                 wall=18.000s usage=17.904s mem=26388KiB load=1.00 rootload=1.00
(smt.stats   87  13140 246731 1220001  9142/8677/347   18665/1371    39  170   24.86)
(smt.stats   88  13397 250597 1259748  9233/8882/347   19007/1372    39  170   24.86)
(smt.stats   89  13679 253497 1290342  9311/9007/347   19514/1373    39  170   24.96)
ramon: poll                 wall=19.000s usage=18.904s mem=26644KiB load=1.00 rootload=1.00
(smt.stats   90  13989 257232 1343731  9419/9054/347   19866/1373    39  170   24.96)
(smt.stats   91  14090 258433 1365578  9453/9156/347   19986/1374    39  170   24.96)
(smt.stats   92  14201 259744 1379147  9481/9188/347   20121/1374    39  170   25.05)
(smt.stats   93  14323 261755 1393151  9518/9220/347   20375/1374    39  170   25.05)
(smt.stats   94  14457 263398 1418175  9558/9256/347   20605/1375    39  170   25.05)
ramon: poll                 wall=20.000s usage=19.903s mem=26644KiB load=1.00 rootload=1.00
(smt.stats   95  14604 264464 1440626  9581/9299/347   20787/1375    39  170   25.15)
ramon: end                  Fri Nov  1 18:51:07 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.957s
ramon: group.utime          19.941s
ramon: group.stime          0.016s
ramon: group.mempeak        26900KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.050s
ramon: loadavg              1.00
