ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:51:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27682 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/eIhdP7lJpTVF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             877570
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 288230376151711744 := 4 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 288230376151711744 := 4 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4096 := 4096&4503599627370497
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4095 := 4096&4503599627370497
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4503599627370497
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 4503599627370497 := 4503599627370496 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407507456
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 1 := 2252349703749641 << 13
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4096 := 4096&4503599627370497
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4094 := 4096&4503599627370497
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4503599627370497
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 4503599627370497 := 4503599627370496 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407507456
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 1 := 2252349703749641 << 13
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407507456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 4504699407507456 := 4504699407499282 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407507456
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 1 := 2252349703749641 << 13
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 4096 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 4095 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 4094 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 4092 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 4088 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 4080 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 32 := 4096&8192
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   91.7431     10000        49          0            1        2)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 64 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 128 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 256 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 512 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 1024 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %0) (+ 58 #749))) 2048 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&288230376151703551
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407503359
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 4504699407503359 := 4504699407499282 << 12
(smt.stats    0    101   4440    446  1357/1234/190      89/8    12   41   52.24)
(smt.stats    1    202   7847   5126  1660/1499/191     197/17    13   44   52.54)
(smt.stats    2    313  10016   7983  2195/1985/192     310/78    14   44   52.74)
(sat.ddfw       1      1   46.7336     20001        98          1            1        3)
(smt.stats    3    414  15203  16154  2578/2321/199     393/129    17   55   52.94)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 72057594037927936 := 72057594037927936&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 56
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 72057594037927936 := 72057594037927936&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 18446744073709543424 := 4573968371548416 << 56
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 36028797018963968 := 36028797018963968&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 55
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 1099511627776&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 40
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 1099511627776&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 40
(smt.stats    4    527  16631  20316  2647/2380/248     486/165    19   76   53.13)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 1099511627776&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 40
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 1099511627776&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 40
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 128 := 128&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 128 := 128&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 124 := 128&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 128&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 7
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 32 := 32&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 28 := 32&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 24 := 32&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 32&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 32&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 5
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 16&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 4
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 8&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 3
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4 := 4&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 2
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 2&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 1
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
(smt.stats    5    649  18394  25538  2726/2442/269     605/175    20   83   53.33)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 4899916394579091456 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 262144 := 262144&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 18446744073709543424 := 4573968371548160 << 18
(sat.ddfw       1      1     46.62     40001       196          2            1        5)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 131072 := 131072&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 17
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 131072 := 131072&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 17
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 131072 := 131072&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 4899916394579091456 := 4573968371548160 << 17
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 32768 := 32768&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 15
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 32 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 64 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 64 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 64 := 64&288230376151703616
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 2594073385365397568 := 4573968371548160 << 6
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 32 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 64&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 6
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 64&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 6
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    750  20130  30754  2867/2578/340     714/187    22   99   53.52)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 32&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 576460752303415296 := 4573968371548160 << 5
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 32&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 576460752303415296 := 4573968371548160 << 5
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1024&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 10
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1024&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 4899916394579091456 := 4573968371548160 << 10
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 274877906944 := 274877906944&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 4899916394579091456 := 4573968371548160 << 38
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 274877906944 := 274877906944&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 9511602413006479360 := 4573968371548160 << 38
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 274877906944 := 274877906944&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 9511602413006479360 := 4573968371548160 << 38
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 274877906944 := 274877906944&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 9511602413006479360 := 4573968371548160 << 38
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 144115188075855872&288230376151707647
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 144115188075855872&288230376151703552
(smt.stats    7    861  22347  37266  2973/2693/388     831/210    24  108   53.61)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 144115188075855872 := 144115188075855872&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 2305843009213685760 := 4573968371548160 << 57
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 144115188075855872 := 144115188075855872&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 2594073385365397504 := 4573968371548160 << 57
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 144115188075855872 := 144115188075855872&288230376151703552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 2594073385365397504 := 4573968371548160 << 57
(smt.stats    8    983  24914  43304  3045/2763/414     888/219    27  148   54.19)
(sat.ddfw       1      1   39.2157     70001       343          3            1        8)
(smt.stats    9   1117  27670  47217  3084/2770/414    1021/223    27  148   54.38)
ramon: poll                 wall=1.000s usage=0.933s mem=56888KiB load=0.93 rootload=0.91
(sat.ddfw       1      1   33.1675    110001       539          4            1       12)
(smt.stats   10   1218  31268  50242  3174/2812/416    1122/236    28  149   54.68)
(sat.ddfw       1      1   28.6199    160000       784          5            1       17)
(smt.stats   11   1329  35036  53069  3261/2920/419    1227/255    29  153   54.68)
ramon: poll                 wall=2.000s usage=1.961s mem=56892KiB load=1.03 rootload=1.03
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  37722  55900  3479/3194/422    1345/272    31  159   54.77)
(sat.ddfw       1      1   25.0631    220001      1078          6            1       23)
(smt.stats   13   1585  41340  62634  3490/3206/427    1464/272    32  169   54.87)
ramon: poll                 wall=3.000s usage=2.961s mem=57404KiB load=1.00 rootload=1.00
(smt.stats   14   1732  47586  72415  3527/3213/428    1614/285    33  171   54.99)
(sat.ddfw       1      1    22.194    290001      1421          7            1       30)
ramon: poll                 wall=4.003s usage=3.961s mem=57404KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.8216    370001      1813          8            1       38)
(smt.stats   15   1833  48524  73249  3627/3293/428    1722/300    33  171   55.19)
(smt.stats   16   1944  51444  78631  3935/3651/431    1853/307    34  175   55.29)
ramon: poll                 wall=5.000s usage=4.958s mem=57660KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   17.9462    460001      2254          9            1       47)
(smt.stats   17   2066  55315  82529  3950/3657/431    1992/323    35  178   55.29)
(smt.stats   18   2200  59614  88284  3990/3706/434    2135/342    36  179   55.29)
(smt.stats   19   2347  66950 101402  4018/3721/435    2264/360    38  188   55.51)
(smt.stats   20   2508  73563 113592  4041/3757/435    2436/360    38  188   55.51)
ramon: poll                 wall=6.000s usage=5.958s mem=57916KiB load=1.00 rootload=1.00
(smt.stats   21   2609  77862 119416  4053/3763/435    2543/360    38  188   55.61)
(sat.ddfw       1      1   16.3532    560001      2745         10            1       57)
(smt.stats   22   2720  80519 125049  4141/3833/437    2691/407    39  188   55.70)
(smt.stats   23   2842  83238 131884  4294/3956/437    2820/441    40  189   55.70)
(smt.stats   24   2976  88148 143628  4339/3999/440    2957/449    41  192   55.80)
ramon: poll                 wall=7.000s usage=6.957s mem=58428KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.0171    670001      3284         11            1       68)
(smt.stats   25   3123  95402 151920  4385/4056/446    3122/478    43  201   56.02)
ramon: poll                 wall=8.000s usage=7.955s mem=58428KiB load=1.00 rootload=1.00
(smt.stats   26   3284 102554 167743  4490/4162/451    3378/512    44  217   56.21)
(sat.ddfw       1      1   13.8969    790001      3872         12            1       80)
(smt.stats   27   3461 113482 196427  4513/4171/451    3573/543    45  224   56.21)
ramon: poll                 wall=9.000s usage=8.955s mem=58684KiB load=1.00 rootload=1.00
(smt.stats   28   3562 116881 204320  4531/4203/461    3682/585    47  238   56.31)
ramon: poll                 wall=10.000s usage=9.953s mem=58940KiB load=1.00 rootload=0.99
(smt.stats   29   3673 118962 207813  4652/4203/461    3810/598    47  238   56.50)
(sat.ddfw       1      1   12.9289    920001      4509         13            1       93)
(smt.stats   30   3795 123269 215606  4793/4439/463    3912/609    48  248   56.50)
(smt.stats   31   3929 127249 225147  4825/4497/464    4093/632    49  250   56.60)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076 134231 245319  4832/4504/465    4287/632    49  250   56.64)
ramon: poll                 wall=11.000s usage=10.952s mem=59196KiB load=1.00 rootload=1.00
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4 := 72057594037927936&58617163899998208
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 72057594037927936&58617163899998213
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 18217130861457838085 := 1125076749312510 << 56
(sat.ddfw       1      1   12.0773   1060001      5196         14            1      108)
ramon: poll                 wall=12.003s usage=11.951s mem=59256KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=13.024s mem=59352KiB load=1.08 rootload=1.08
(smt.stats   33   4237 138334 252141  5217/4508/465    4474/712    50  255   57.06)
(sat.ddfw       1      1   11.3439   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=14.179s mem=59424KiB load=1.15 rootload=1.15
(sat.ddfw       1      1   11.0719   1370001      6715         16            1      139)
(smt.stats   34   4414 142209 263237  5645/4960/470    4686/731    51  256   57.25)
ramon: poll                 wall=15.000s usage=15.277s mem=59528KiB load=1.10 rootload=1.10
(smt.stats   35   4608 150312 280580  5821/5451/474    4927/766    52  256   57.25)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 2199023255552 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4398046511104 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 17592186044416 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 35184372088832 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 70368744177664 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 140737488355328 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 281474976710656 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 562949953421312 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1125899906842624 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 2251799813685248 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4503599627370496 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 9007199254740992 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 18014398509481984 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 36028797018963968 := 36028797018963968&58561638562791424
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 18217075336120631296 := 280651819192318 << 55
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 35184372088832 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 17592186044416 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 17592186044416 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 70368744177664 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4503599627370496 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 9007199254740992 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 18014398509481984 := 18014398509481984&58561638562791424
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 18217075336120631296 := 280651819190270 << 54
(smt.stats   36   4709 154354 293672  5982/5653/563    5033/843    54  283   57.44)
ramon: poll                 wall=16.003s usage=16.277s mem=59876KiB load=1.00 rootload=0.99
(smt.stats   37   4820 160858 311213  6011/5680/565    5126/844    55  285   57.54)
(smt.stats   38   4942 163804 320266  6021/5691/566    5249/844    56  286   57.54)
(sat.ddfw       1      1   10.4211   1540001      7549         17            1      156)
(smt.delete-inactive-clauses  :num-deleted-clauses 993)
(smt.stats   39   5076 170635 331089  6053/5712/566    4418/844    56  286   57.63)
(smt.stats   40   5223 181261 354133  6064/5733/566    4578/867    57  287   57.63)
ramon: poll                 wall=17.000s usage=17.275s mem=60252KiB load=1.00 rootload=1.00
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115179485921802
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115188075848713
(smt.stats   41   5384 191286 370423  6102/5747/568    4741/883    58  289   57.63)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115188075848713
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115179485921802
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115179485921802
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115179485921802
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 562949953421312 := 562949953421312&144115179485921802
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 18302628877043761674 := 567728439075799294 << 49
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 562949953421312 := 562949953421312&144115179485921802
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 18302628877043761674 := 567728439075799294 << 49
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 562949953421312 := 562949953421312&144115179485921802
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #825 #829) 64)) 18302628877043761674 := 567728439075799294 << 49
(smt.stats   42   5561 194518 378550  6213/5816/568    4922/897    59  290   57.81)
ramon: poll                 wall=18.003s usage=18.275s mem=60948KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.84737   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=19.272s mem=60984KiB load=1.00 rootload=1.00
(smt.stats   43   5755 200865 394014  6431/5897/584    5143/921    60  293   58.10)
ramon: poll                 wall=20.000s usage=20.271s mem=61004KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:51:54 2024
ramon: root.execname        z3
ramon: root.utime           20.300s
ramon: root.stime           0.020s
ramon: group.total          20.329s
ramon: group.utime          20.301s
ramon: group.stime          0.028s
ramon: group.mempeak        61004KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.01
