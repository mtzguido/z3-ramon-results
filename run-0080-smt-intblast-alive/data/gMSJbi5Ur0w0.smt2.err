ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:48:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25066 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/gMSJbi5Ur0w0.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             115081
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2146   1427  1229/1107/97      98/61     3   14   19.08)
(smt.stats    1    202   2456   3219  2366/1672/97     197/110     3   14   19.27)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 1 := 18014398509481983 << 5
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 1&1
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 2 := 18014398509481983 << 5
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 1 := 18014398509481983 << 5
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 1 := 18014398509481983 << 5
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 1 := 18014398509481983 << 5
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 1 << 5
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 32&1
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 32&1
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 1 := 1 << 5
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&1
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 562949953421312 := 562949953421312 << 5
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&1
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 562949953421312 := 562949953421312 << 5
(smt.stats    2    313   3596   4049  2493/2198/113     246/115     6   71   19.66)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 13946631104115104&1
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 13946631104115104&1
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 13946631104115104&1
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 13946631104115085 := 13946631104115085 << 5
(smt.stats    3    414   5499   5861  2544/2303/121     345/120     8   72   19.66)
(smt.stats    4    525   8848  10306  2563/2318/127     452/126    10   81   19.76)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 2401919801264264&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1415590271 := 1415590271&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1415590270 := 1415590270&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1415590268 := 1415590268&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1415590372 := 1415590373&1415590372
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 36028798434554341 := 1 << 35
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1415590372 := 1415590373&1415590372
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 36028798434554341 := 1 << 35
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 3 := 33&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 33&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 32 := 33&1415590372
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 18014398509482017 := 1 << 35
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 2401917510615040&1415590372
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 1118482 := 1118481 << 35
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 16777249 := 16777249&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 16777248 := 16777249&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 33554432 := 33554433&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 16777249 := 16777249&1415590372
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 67108864 := 67108864&1415590372
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 18014398576590848 := 524289 << 35
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 34359738368&1415590372
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 16777247 := 524289 << 35
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 34359738368&1415590372
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 524290 := 524289 << 35
ramon: poll                 wall=1.000s usage=0.993s mem=21108KiB load=0.99 rootload=0.99
ramon: poll                 wall=2.000s usage=1.992s mem=21184KiB load=1.00 rootload=1.00
(smt.stats    5    647   9916  12380  2658/2349/160     573/128    12   85   19.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  11068  13680  2928/2598/160     682/127    13   90   19.99)
ramon: poll                 wall=3.000s usage=2.992s mem=21192KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.992s mem=21320KiB load=1.00 rootload=1.00
(smt.stats    7    859  11657  14478  3036/2707/160     793/127    13   90   20.28)
(smt.stats    8    981  12743  17554  3465/3218/171     904/154    15  106   20.28)
(smt.stats    9   1115  14410  22659  3528/3270/174    1119/169    16  106   20.38)
ramon: poll                 wall=5.000s usage=4.991s mem=21612KiB load=1.00 rootload=1.00
(smt.stats   10   1216  16454  26741  3641/3372/174    1136/176    17  189   20.38)
(smt.stats   11   1327  18747  35018  3658/3384/179    1238/188    18  194   20.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  19254  36786  3871/3554/181    1381/201    19  195   21.06)
(smt.stats   13   1583  22424  39751  4267/3967/193    1589/277    20  213   20.96)
(smt.stats   14   1730  26953  44122  4469/4010/193    1869/279    20  213   21.06)
(smt.stats   15   1831  31283  51465  4563/4223/193    2031/279    20  213   21.06)
(smt.stats   16   1942  34943  61247  4626/4350/195    2256/494    21  214   21.16)
(smt.stats   17   2064  39444  73916  4628/4355/195    2449/494    21  214   21.16)
(smt.stats   18   2198  44289  88005  4643/4364/195    2598/500    22  215   21.29)
ramon: poll                 wall=6.000s usage=5.991s mem=22500KiB load=1.00 rootload=1.00
(smt.stats   19   2345  47387  94999  4729/4389/195    2753/503    22  215   21.29)
(smt.stats   20   2506  50862 106033  4774/4491/195    2945/504    22  215   21.29)
(smt.stats   21   2607  54168 114136  4841/4507/196    3053/565    23  217   21.29)
(smt.stats   22   2718  57303 120022  4903/4601/196    3160/566    23  217   21.29)
(smt.stats   23   2840  60951 129825  4911/4634/196    3282/566    23  217   21.29)
(smt.stats   24   2974  65904 139207  4913/4640/196    3452/566    23  217   21.58)
(smt.stats   25   3121  71623 148019  4920/4643/196    3598/566    23  217   21.58)
(smt.stats   26   3282  77406 158761  5004/4648/196    3769/571    23  217   21.69)
(smt.stats   27   3459  78155 160304  5316/4790/196    3982/579    23  217   21.88)
(smt.stats   28   3560  80810 164503  5663/5372/196    4136/580    23  217   21.88)
(smt.stats   29   3671  83138 170200  5774/5394/196    4293/581    23  217   21.88)
ramon: poll                 wall=7.000s usage=6.991s mem=23232KiB load=1.00 rootload=1.00
(smt.stats   30   3793  86743 180862  5829/5538/196    4458/581    23  217   21.88)
(smt.stats   31   3927  89681 191121  5883/5574/196    4614/581    23  217   21.99)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014176244924416&2
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 324258950906118144 := 17959919533686785 << 6
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014176244924416&2
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 450359740472492032 := 17959919533686784 << 6
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  91739 198142  5944/5631/196    4779/586    23  217   22.08)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014194498535424&2
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 508481716042200 := 18014395321810944 << 6
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014209665138688&2
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 562937572884467 := 18014395558789120 << 6
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014194498535424&2
band: (band[54] (shl[54] (bv2int %1) (mod #104 54)) (if (or #621 #622 #623 #624) 0 (if #625 1 #766))) 2 := 18014194498535424&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014194498535424&2
band: (band[54] (shl[54] (bv2int %1) (mod #104 54)) (if (or #621 #622 #623 #624) 0 (if #625 1 #766))) 1 := 18014194498535424&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014194498535424&2
band: (band[54] (shl[54] (bv2int %1) (mod #104 54)) (if (or #621 #622 #623 #624) 0 (if #625 1 #766))) 1 := 18014194498535424&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014194498535424&2
band: (band[54] (shl[54] (bv2int %1) (mod #104 54)) (if (or #621 #622 #623 #624) 0 (if #625 1 #766))) 2 := 18014194498535424&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014194566377472&2
band: (band[54] (shl[54] (bv2int %1) (mod #104 54)) (if (or #621 #622 #623 #624) 0 (if #625 1 #766))) 2 := 18014194566377472&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 18014194499268608&2
band: (band[54] (shl[54] (bv2int %1) (mod #104 54)) (if (or #621 #622 #623 #624) 0 (if #625 1 #766))) 2 := 18014194499268608&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 2 := 18014194498535488&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 18014194498535488&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 2 := 18014194498535488&2
(smt.stats   33   4235  94780 211239  6066/5744/211    4979/759    24  218   22.18)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 18014194599198784&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1 := 18014194599198784&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 2 := 18014194599198784&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 2 := 18014194599198784&2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 2 := 562937571835968&2
(smt.stats   34   4412  97612 227014  6148/5809/241    5243/791    25  230   22.27)
(smt.stats   35   4606 100760 235927  6188/5885/259    5487/862    26  232   22.27)
(smt.stats   36   4707 105209 250201  6199/5918/259    5600/862    26  232   22.27)
(smt.stats   37   4818 108205 259634  6254/5933/259    5681/903    27  275   22.37)
(smt.stats   38   4940 111767 273016  6260/5976/259    5810/903    27  275   22.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 42)
(smt.stats   39   5074 116597 281181  6267/5983/264    5936/912    28  279   22.37)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 5811061654734440 := 0 << 2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 5811061654734440 := 0 << 2
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 3
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 3
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 5811061654734440 := 0 << 3
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 3
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 5811061654734440 := 0 << 3
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 4
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 5811061654734440 := 0 << 4
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 0 << 4
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 5811061654734440 := 0 << 4
(smt.stats   40   5221 120116 299671  6327/5989/264    6261/942    29  279   22.59)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 0 := 508468293271552 << 3
(smt.stats   41   5382 123758 315569  6488/6156/281    6493/987    30  282   22.68)
ramon: poll                 wall=8.000s usage=7.991s mem=24280KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   42   5559 127381 327720  6531/6193/293    6736/1019    31  287   23.01)
(smt.stats   43   5753 131545 342778  6582/6224/293    6952/1040    32  307   23.01)
(smt.stats   44   5966 134213 357330  6604/6292/295    7219/1090    33  310   23.01)
(smt.stats   45   6067 137841 365591  6611/6299/295    7364/1090    33  310   23.01)
(smt.stats   46   6178 139966 382387  6624/6306/295    7512/1091    33  310   23.10)
ramon: poll                 wall=9.000s usage=8.990s mem=24876KiB load=1.00 rootload=1.00
(smt.stats   47   6300 142277 391713  6688/6355/295    7680/1147    34  310   23.39)
ramon: poll                 wall=10.000s usage=9.990s mem=24884KiB load=1.00 rootload=1.00
(smt.stats   48   6434 144136 399618  7135/6566/298    7872/1147    34  310   23.39)
(smt.stats   49   6581 146393 409620  7152/6825/299    8170/1199    35  313   23.39)
ramon: poll                 wall=11.000s usage=10.990s mem=24952KiB load=1.00 rootload=1.00
(smt.stats   50   6742 150224 429504  7206/6838/299    8417/1202    35  313   23.39)
(smt.stats   51   6919 152665 442130  7246/6899/299    8614/1321    36  318   23.48)
(smt.stats   52   7113 156267 454764  7257/6925/299    8911/1321    36  318   23.48)
(smt.stats   53   7326 160071 476490  7305/6934/299    9190/1322    36  318   23.48)
(smt.stats   54   7560 164521 496036  7352/6989/299    9495/1323    36  318   23.58)
(smt.stats   55   7661 166386 505230  7396/7049/299    9647/1323    36  318   23.58)
ramon: poll                 wall=12.000s usage=11.990s mem=25004KiB load=1.00 rootload=1.00
(smt.stats   56   7772 169130 514443  7417/7073/299    9781/1323    36  318   23.67)
(smt.stats   57   7894 171457 532753  7431/7106/299    9905/1323    36  318   23.67)
(smt.stats   58   8028 172819 541384  7444/7119/299   10077/1323    36  318   23.67)
(smt.stats   59   8175 174845 550830  7453/7122/299   10241/1323    36  318   23.67)
(smt.stats   60   8336 181473 582170  7463/7130/299   10560/1324    36  318   23.67)
(smt.stats   61   8513 185224 596844  7485/7146/299   10807/1325    36  318   23.77)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 189922 613451  7569/7163/299   11007/1327    36  318   23.77)
(smt.stats   63   8920 193815 636163  7594/7249/299   11232/1327    36  318   23.77)
ramon: poll                 wall=13.000s usage=12.989s mem=25292KiB load=1.00 rootload=0.99
(smt.stats   64   9154 196867 653030  7648/7275/299   11495/1329    36  318   23.77)
(smt.stats   65   9411 202792 687438  7739/7406/299   11846/1330    36  318   23.87)
(smt.stats   66   9512 205016 696962  7742/7417/300   11949/1672    37  322   23.87)
(smt.stats   67   9623 206388 710521  7748/7419/301   12084/1672    37  322   23.87)
(smt.stats   68   9745 209479 732916  7749/7424/301   12222/1672    37  322   23.96)
(smt.stats   69   9879 211879 747542  7751/7426/301   12368/1673    38  329   24.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 161)
(smt.stats   70  10026 213718 759720  7755/7430/301   12431/1673    38  329   24.06)
(smt.stats   71  10187 219034 787668  7764/7434/301   12617/1673    38  329   24.06)
(smt.stats   72  10364 224008 814440  7773/7442/301   12818/1674    38  329   24.06)
(smt.stats   73  10558 226526 827219  7791/7464/301   13041/1674    38  329   24.06)
(smt.stats   74  10771 232009 842338  7798/7468/302   13273/1745    39  331   24.15)
ramon: poll                 wall=14.000s usage=13.989s mem=25556KiB load=1.00 rootload=1.00
(smt.stats   75  11005 238541 857552  7812/7486/302   13523/1745    39  331   24.15)
(smt.stats   76  11262 241625 904271  7831/7498/302   13775/1745    39  331   24.57)
(smt.stats   77  11544 246472 935830  7850/7520/302   14107/1745    39  331   24.66)
(smt.stats   78  11645 250156 957058  7851/7524/302   14209/1745    39  331   24.66)
(smt.stats   79  11756 254515 982902  7864/7525/302   14324/1746    39  331   24.66)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   80  11878 258501 1005940  7867/7540/302   14455/1746    39  331   24.66)
(smt.stats   81  12012 260355 1014562  7868/7541/302   14628/1746    39  331   24.66)
(smt.stats   82  12159 264322 1027049  7885/7542/302   14799/1747    39  331   24.76)
ramon: poll                 wall=15.000s usage=14.989s mem=26276KiB load=1.00 rootload=1.00
(smt.stats   83  12320 267764 1035747  7905/7563/302   14992/1747    39  331   24.76)
(smt.stats   84  12497 272718 1060649  7932/7597/304   15170/1810    40  333   24.76)
(smt.stats   85  12691 280713 1093888  7939/7612/315   15352/1808    41  347   24.76)
ramon: poll                 wall=16.000s usage=15.989s mem=26536KiB load=1.00 rootload=1.00
(smt.stats   86  12904 283356 1104483  8194/7615/315   15617/1813    41  347   25.14)
(smt.stats   87  13138 290408 1118019  8409/8082/315   15977/1813    41  347   25.14)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 12203184694374792&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 2588262171550298504 := 1048570 << 1
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 12203184694374792&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 2570247773040816520 := 1048570 << 1
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 12203336855677728&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 2570247925202119456 := 930182 << 1
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 1048580&0
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 5811061655783017 := 524290 << 1
(smt.stats   88  13395 296224 1142502  8592/8085/315   16317/1922    42  353   25.33)
(smt.stats   89  13677 302309 1164434  8622/8291/326   16624/1922    42  353   25.33)
ramon: poll                 wall=17.000s usage=16.988s mem=26928KiB load=1.00 rootload=1.00
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 0 := 1048576&0
shl: (shl[54] (bv2int %1) (mod (bv2int %0) 54)) 8388609 := 524288 << 1
(smt.stats   90  13987 308833 1188604  8636/8301/326   16941/1956    43  356   25.43)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 4 := 930184&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 8 := 930184&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 16 := 930184&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 32 := 930184&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 32 := 930184&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 64 := 930184&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 128 := 930184&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 128 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 256 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 128 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 128 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 128 := 930432&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 256 := 930432&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 930432&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 1048448&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 256 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 262144 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 256 := 930304&345603
(smt.stats   91  14088 310895 1199975  8694/8345/367   17055/1965    44  365   25.65)
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 262144 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 262144 := 930816&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 930816&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 1024 := 930816&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 262144 := 930816&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 512 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 262144 := 930304&345603
band: (band[54] (shl[64] (bv2int %1) (mod #386 64)) (if (or #795 #796 #797 #798 #799) 0 (if #800 1 #924))) 262656 := 930304&345603
shl: (shl[64] (bv2int %1) (mod (+ #104 #385) 64)) 930304 := 930304 << 23
(smt.stats   92  14199 313808 1213807  8715/8364/387   17183/1967    44  365   25.75)
(smt.stats   93  14321 315414 1219626  8758/8391/407   17334/1967    44  365   25.75)
(smt.stats   94  14455 316572 1227686  8793/8456/408   17525/1967    44  365   25.84)
(smt.stats   95  14602 318259 1238975  8799/8462/408   17709/1967    44  365   25.84)
ramon: poll                 wall=18.000s usage=17.988s mem=27436KiB load=1.00 rootload=1.00
(smt.stats   96  14763 324296 1280175  8801/8472/409   17868/2028    46  376   25.84)
(smt.stats   97  14940 326440 1300341  8809/8480/413   18072/2028    46  376   25.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   98  15134 331832 1330910  8816/8487/413   18266/2028    46  376   26.03)
(smt.stats   99  15347 338256 1365550  8824/8495/415   18486/2028    47  401   26.03)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  100  15581 345281 1410325  8830/8497/415   18746/2028    47  401   26.13)
(smt.stats  101  15838 348569 1465336  8892/8512/415   19017/2048    48  404   26.13)
ramon: poll                 wall=19.000s usage=18.988s mem=27768KiB load=1.00 rootload=1.00
(smt.stats  102  16120 356773 1494299  8961/8599/420   19367/2057    49  409   26.32)
(smt.stats  103  16430 364409 1524616  9048/8626/420   19871/2059    49  409   26.41)
(smt.stats  104  16770 372003 1552782  9075/8712/420   20241/2063    49  409   26.41)
ramon: poll                 wall=20.000s usage=19.987s mem=28068KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:48:21 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.999s
ramon: group.utime          19.991s
ramon: group.stime          0.008s
ramon: group.mempeak        28324KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.00
