ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:00:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28409 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1401
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/hzxyYeLRagLs.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             507525
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   186/185     0/0  58       0    18.54   0.00)
(sat.stats    144    808    0   190/189   144/69  58       0    18.95   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 481 :time 0.00)
(sat.stats    144    808    0   190/189   144/69  61       0    18.95   0.01)
(sat.stats    144    808    0   190/189   144/69  61       0    18.95   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 473618.95 :time 0.00)
(sat.stats    144    808    0   189/188   139/68  61       0    18.95   0.01)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1189 :time 0.00)
(sat.stats    295   2720    1   188/187   288/161  69       0    19.05   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    298   2807    2   188/187   291/163  69       0    19.05   0.01)
(sat.stats    301   2933    3   188/187   294/163  69       0    19.05   0.01)
(sat.stats    304   3040    4   188/187   297/163  69       0    19.05   0.01)
(sat.stats    307   3173    5   188/187   300/163  69       0    19.05   0.01)
(sat.stats    310   3312    6   188/187   303/163  69       0    19.05   0.01)
(sat.stats    313   3402    7   188/187   306/163  69       0    19.05   0.01)
(sat.stats    316   3574    8   188/187   309/164  69       0    19.05   0.01)
(sat.stats    319   3600    9   188/187   312/167  69       0    19.05   0.01)
(sat.stats    322   3643   10   188/187   315/170  69       0    19.05   0.01)
(sat.stats    325   3697   11   188/187   318/173  69       0    19.05   0.01)
(sat.stats    328   3759   12   188/187   321/174  69       0    19.05   0.01)
(sat.stats    331   3844   13   188/187   324/177  69       0    19.05   0.01)
(sat.stats    334   3916   14   188/187   327/180  69       0    19.05   0.01)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 2539 :time 0.00)
(sat.stats    474   6832   38   274/272   464/237  70       0    19.52   0.06)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2826 :time 0.00)
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 0 := 549754652089 << 19
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&0
shl: (shl[64] (bv2int %0) (mod (+ #66 #652) 64)) 549755810209 := 311893688320 << 19
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4322 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5369 :time 0.00)
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 7822 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 7821 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 141444 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 56104 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 66512 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 79200 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 62144 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 43264 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 128 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 104960 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 49152 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 1024 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 12288 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 2048 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 8192 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 131072 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 32768 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 65536 := 262143&9961472
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 18542 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 81353 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 108844 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 192144 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 8 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 246208 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 32 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 177152 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 128 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 512 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 256 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 206848 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 147456 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 4096 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 8192 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 98304 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 196608 := 9961472&262143
band: (band[39] (if (= #537 38) 0 (if #539 1 #643)) (shl[39] (bv2int %0) (mod #66 39))) 0 := 262143&9961472
band: (band[39] (shl[64] (bv2int %0) (mod #653 64)) (if (or #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 ...) 0 (if #691 1 #763))) 131072 := 9961472&262143
ramon: poll                 wall=1.000s usage=0.932s mem=37020KiB load=0.93 rootload=0.91
ramon: poll                 wall=2.000s usage=1.930s mem=55516KiB load=1.00 rootload=0.98
ramon: poll                 wall=3.000s usage=2.930s mem=62436KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.929s mem=68172KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.929s mem=89068KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.929s mem=93476KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.929s mem=97196KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.929s mem=97MiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.928s mem=100MiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.928s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.927s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.927s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.926s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.926s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.926s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.924s mem=114MiB load=1.00 rootload=1.00
(sat.stats :conflicts   :restarts         :learned/bin          :gc         :time )
(sat.stats      :decisions   :clauses/bin             :units       :memory        )
(sat.stats   1200  25047   72 153971/153968  7886/7013  81       0   117.73  16.65)
ramon: poll                 wall=17.000s usage=16.924s mem=117MiB load=1.00 rootload=1.00
(sat.stats   1203  25125   73 155126/155123  7940/7064  81       0   118.06  17.00)
ramon: poll                 wall=18.004s usage=17.928s mem=118MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.924s mem=152MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.924s mem=154MiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:00:26 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.000s
ramon: group.utime          19.952s
ramon: group.stime          0.048s
ramon: group.mempeak        184MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.00
