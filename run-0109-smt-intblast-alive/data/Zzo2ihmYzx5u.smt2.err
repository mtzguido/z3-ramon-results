ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:33:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41224 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Zzo2ihmYzx5u.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3010592
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3921    296  1213/1098/101      93/9     7   18   19.25)
(smt.stats    1    202   4436    491  1998/1732/101     199/15     7   18   19.55)
(smt.stats    2    313   6772   1781  2184/1973/106     328/36     9   24   19.55)
(smt.stats    3    414   8810   2807  2323/2052/109     423/38    10   25   19.64)
(smt.stats    4    525  10039   3434  2822/2220/113     541/89    11   27   19.74)
(smt.stats    5    647  11140   5078  2936/2613/114     653/102    12   34   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  15933   9667  2989/2731/114     750/107    13   35   19.84)
(smt.stats    7    859  20215  13756  3074/2768/114     863/109    13   35   19.95)
(smt.stats    8    981  23303  18024  3185/2942/116     985/129    14   36   20.05)
(smt.stats    9   1115  26524  19385  3249/2959/116    1126/132    14   36   20.05)
ramon: poll                 wall=1.000s usage=0.942s mem=21380KiB load=0.94 rootload=0.93
(smt.stats   10   1216  28589  20916  3357/3077/116    1230/134    14   36   20.05)
(smt.stats   11   1327  31657  23517  3442/3134/116    1350/134    14   36   20.15)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  34765  27833  3524/3231/116    1471/137    14   36   20.15)
(smt.stats   13   1583  35534  30962  3675/3367/116    1641/142    14   36   20.24)
(smt.stats   14   1730  36510  32421  3772/3485/116    1796/147    14   36   20.72)
(smt.stats   15   1831  37079  33027  4274/3992/116    1940/151    14   36   20.72)
ramon: poll                 wall=2.000s usage=1.940s mem=22148KiB load=1.00 rootload=1.00
(smt.stats   16   1942  38138  38554  4374/4111/116    2110/151    14   36   20.72)
(smt.stats   17   2064  40388  40248  4402/4145/116    2255/151    14   36   20.72)
(smt.stats   18   2198  42707  43635  4426/4168/116    2398/151    14   36   20.72)
(smt.stats   19   2345  48463  53591  4523/4198/117    2563/323    15   39   20.82)
(smt.stats   20   2506  53467  60138  4643/4334/117    2757/324    15   39   20.82)
(smt.stats   21   2607  55644  67215  4694/4412/117    2879/324    15   39   20.82)
(smt.stats   22   2718  60632  70671  4698/4462/117    3024/325    15   39   20.82)
(smt.stats   23   2840  62962  74641  4713/4472/117    3162/325    15   39   20.82)
(smt.stats   24   2974  65564  79420  4718/4481/123    3323/418    16   46   20.92)
(smt.stats   25   3121  68032  87169  4780/4493/125    3468/434    17   50   21.02)
(smt.stats   26   3282  71836 104514  4800/4552/126    3626/439    18   52   21.02)
(smt.stats   27   3459  73850 116557  4866/4575/126    3851/440    18   52   21.02)
ramon: poll                 wall=3.000s usage=2.938s mem=22404KiB load=1.00 rootload=1.00
(smt.stats   28   3560  75141 120380  4931/4648/126    3956/440    18   52   21.02)
(smt.stats   29   3671  76117 124848  4995/4709/126    4069/440    18   52   21.02)
(smt.stats   30   3793  78317 131118  5032/4772/126    4190/440    18   52   21.13)
(smt.stats   31   3927  81511 136689  5041/4801/126    4344/440    18   52   21.13)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  82630 142935  5110/4813/126    4525/440    18   52   21.13)
(smt.stats   33   4235  84449 149857  5140/4884/126    4739/440    18   52   21.13)
(smt.stats   34   4412  86922 163347  5194/4957/132    4923/582    19   55   21.22)
(smt.stats   35   4606  89510 178561  5221/4960/132    5121/582    19   55   21.43)
(smt.stats   36   4707  90762 183097  5236/4984/132    5223/582    19   55   21.43)
(smt.stats   37   4818  91884 192271  5251/5005/132    5339/582    19   55   21.43)
(smt.stats   38   4940  94069 197611  5264/5027/132    5469/582    19   55   21.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 16)
ramon: poll                 wall=4.000s usage=3.938s mem=22660KiB load=1.00 rootload=1.00
(smt.stats   39   5074  96260 205320  5284/5028/132    5587/582    19   55   21.43)
(smt.stats   40   5221  97345 215034  5318/5055/132    5753/582    19   55   21.43)
(smt.stats   41   5382  98558 224799  5379/5103/132    5920/582    19   55   21.53)
(smt.stats   42   5559 100641 232755  5402/5145/132    6109/582    19   55   21.53)
(smt.stats   43   5753 102601 246192  5474/5180/132    6327/585    19   55   21.53)
(smt.stats   44   5966 104243 266678  5480/5243/132    6551/585    19   55   21.53)
(smt.stats   45   6067 106818 270387  5482/5245/132    6650/585    19   55   21.63)
(smt.stats   46   6178 110159 274472  5484/5247/132    6761/585    19   55   21.63)
(smt.stats   47   6300 114169 279969  5484/5247/132    6885/585    19   55   21.63)
(smt.stats   48   6434 117539 286205  5486/5249/132    7018/585    19   55   21.63)
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 1048406&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 18372434679858986838 := 8588550144 >>l 13
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 0&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 18372434679857938432 := 8588550144 >>l 13
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 0&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 18372434679857938432 := 8588550144 >>l 13
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 0&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 18372434679857938432 := 8588550144 >>l 13
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 0&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 18372434679857938432 := 8588550144 >>l 13
(smt.stats   49   6581 120246 294971  5505/5251/132    7179/585    19   55   21.63)
(smt.stats   50   6742 122627 299521  5526/5280/137    7351/679    20   56   21.72)
(smt.stats   51   6919 123598 306844  5535/5294/137    7530/679    20   56   21.72)
ramon: poll                 wall=5.000s usage=4.938s mem=23172KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 125670 313846  5670/5305/137    7777/692    21   56   21.72)
(smt.stats   53   7326 127445 319434  5828/5477/137    8018/692    21   56   21.92)
(smt.stats   54   7560 129327 330379  5943/5598/137    8266/692    21   56   21.92)
(smt.stats   55   7661 130298 331776  6044/5762/137    8369/700    21   56   22.02)
(smt.stats   56   7772 131978 337661  6211/5918/137    8458/706    21   56   22.02)
(smt.stats   57   7894 134955 343801  6230/5989/137    8585/706    21   56   22.02)
(smt.stats   58   8028 135756 350616  6268/6005/137    8742/707    21   56   22.02)
(smt.stats   59   8175 136740 359893  6308/6055/137    8880/709    21   56   22.13)
(smt.stats   60   8336 138283 365282  6360/6098/137    9054/710    21   56   22.30)
ramon: poll                 wall=6.000s usage=5.938s mem=23744KiB load=1.00 rootload=1.00
(smt.stats   61   8513 139643 371156  6410/6142/137    9254/712    21   56   22.30)
(smt.stats   62   8707 140931 375755  6544/6194/137    9462/718    21   56   22.40)
(smt.stats   63   8920 142124 379223  6831/6338/137    9695/727    21   56   22.50)
ramon: poll                 wall=7.000s usage=6.938s mem=24000KiB load=1.00 rootload=1.00
(smt.stats   64   9154 145066 387232  6997/6595/137    9969/728    21   56   22.59)
(smt.stats   65   9411 148317 393821  7224/6765/137   10244/729    21   56   22.69)
(smt.stats   66   9512 149364 397677  7344/7049/137   10359/730    21   56   22.69)
(smt.stats   67   9623 150306 405010  7492/7251/138   10473/923    22   58   22.69)
(smt.stats   68   9745 151869 411995  7743/7271/138   10605/925    22   58   22.78)
ramon: poll                 wall=8.000s usage=7.938s mem=24256KiB load=1.00 rootload=1.00
(smt.stats   69   9879 153190 420664  7964/7697/139   10745/925    22   58   22.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 154337 430476  8025/7751/139   10917/925    22   58   22.88)
(smt.stats   71  10187 155674 438228  8178/7799/139   11083/941    23   62   22.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   72  10364 157445 457580  8365/8014/140   11307/941    23   62   22.97)
ramon: poll                 wall=9.000s usage=8.938s mem=24512KiB load=1.00 rootload=1.00
(smt.stats   73  10558 159758 467143  8510/8195/140   11523/950    24   66   22.97)
(smt.stats   74  10771 163309 480473  8538/8298/143   11760/984    25   70   23.09)
(smt.stats   75  11005 165861 491932  8617/8302/143   12031/984    25   70   23.09)
(smt.stats   76  11262 167769 508644  8768/8424/144   12334/984    25   70   23.18)
ramon: poll                 wall=10.000s usage=9.938s mem=24768KiB load=1.00 rootload=0.99
(smt.stats   77  11544 170923 520921  9049/8557/144   12624/1029    26   76   23.28)
(smt.stats   78  11645 171874 525758  9112/8842/144   12731/1029    26   76   23.28)
(smt.stats   79  11756 172962 537116  9197/8888/144   12881/1030    26   76   23.38)
(smt.stats   80  11878 174194 545618  9290/8973/144   13022/1031    26   76   23.38)
(smt.stats   81  12012 175208 550682  9323/9064/144   13161/1032    26   76   23.38)
ramon: poll                 wall=11.000s usage=10.937s mem=24948KiB load=1.00 rootload=1.00
(smt.stats   82  12159 176864 571895  9417/9104/144   13304/1035    26   76   23.47)
(smt.stats   83  12320 179719 589138  9493/9212/144   13479/1038    26   76   23.47)
(smt.stats   84  12497 181332 599155  9594/9295/144   13675/1049    26   76   23.57)
(smt.stats   85  12691 183439 612775  9731/9367/144   13902/1049    26   76   23.57)
(smt.stats   86  12904 185630 625264  9838/9510/144   14147/1049    26   76   23.66)
ramon: poll                 wall=12.000s usage=11.919s mem=25224KiB load=0.98 rootload=0.98
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas            :deletions    )
(smt.stats   87  13138 188881 633871 10022/9640/144   14420/1055    26   76   23.76)
(smt.stats   88  13395 191710 650340 10336/9873/144   14712/1056    26   76   23.76)
(smt.stats   89  13677 194124 667815 10563/10119/144   15016/1062    26   76   23.85)
ramon: poll                 wall=13.000s usage=12.918s mem=25400KiB load=1.00 rootload=1.00
(smt.stats   90  13987 196255 684116 10731/10380/144   15345/1066    26   76   23.85)
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358272 := 12358272&2251799813685246
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2251799826043520 := 2251799845740544 >>l 63
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358271 := 12358271&2251799813685246
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358270 := 12358270&2251799813685246
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2251799826043518 := 2251799845740544 >>l 63
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 10204081 := 10204081&2251799813685246
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 10204082 := 10204082&2251799813685246
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2251799823889330 := 2251799845740544 >>l 63
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358233 := 12358320&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358234 := 12358320&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358186 := 12358272&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358188 := 12358272&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358192 := 12358272&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358208 := 12358272&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358272 := 12358272&2251799813685244
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2251799826043520 := 2251799845732352 >>l 62
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358186 := 12358271&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358186 := 12358271&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358186 := 12358271&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358186 := 12358271&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358186 := 12358271&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358184 := 12358271&2251799813685244
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358188 := 12358188&2251799813685244
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2251799826043436 := 2251799845732352 >>l 62
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358188 := 12358188&2251799813685244
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2251799826043436 := 2251799845732352 >>l 62
(smt.stats   91  14088 197264 689453 10828/10583/180   15459/1282    27   84   24.04)
(smt.stats   92  14199 197930 693705 10864/10600/181   15571/1284    27   84   24.04)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas            :deletions    )
(smt.stats   93  14321 199860 703214 10897/10638/181   15709/1288    27   84   24.04)
(smt.stats   94  14455 201577 711181 10994/10751/183   15859/1292    27   84   24.14)
(smt.stats   95  14603 202594 719645 11004/10761/183   16001/1320    28   89   24.14)
(smt.stats   96  14764 204344 726547 11013/10767/183   16174/1320    28   89   24.14)
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 656 := 2251799811021749&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 672 := 2251799811021765&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 704 := 2251799811021824&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 768 := 2251799811021952&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 1024 := 2251799811022336&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 1024 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 2048 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 4096 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 8192 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 16384 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 32768 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 65536 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 131072 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 262144 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 524288 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 1048576 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 2097152 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 1048576 := 2251799812069760&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 1048576 := 2251799812636672&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 4096 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 2048 := 2251799811023232&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 2048 := 2251799811023232&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 2048 := 2251799811024896&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 2048 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 2048 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 8192 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 16384 := 2251799811037570&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 16384 := 2251799811037568&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 16384 := 2251799811047424&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 16384 := 2251799811040258&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 16384 := 2251799811047426&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 16384 := 2251799811047424&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 65536 := 2251799811086720&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 65536 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 32768 := 2251799813685120&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 32768 := 2251799811053952&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 32768 := 2251799811080192&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 32768 := 2251799811112960&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 131072 := 2251799811178496&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 131072 := 2251799811211264&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 262144 := 2251799811342336&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 524288 := 2251799811604480&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 524288 := 2251799811604480&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 524288 := 2251799812128768&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 2097152 := 2251799813177344&1125899906842624
(smt.stats   97  14941 206088 731338 11205/10772/183   16516/1333    28   89   24.87)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 12358272 := 12358274&2251799813685240
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 18376938279497667202 := 393216 >>l 61
(smt.stats   98  15135 210869 747214 11338/11094/359   16880/1356    29  121   24.87)
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 32 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 24 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 24 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 21 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 270336 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 286720 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 319488 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 319488 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 122880 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 122880 := 385024&2251799813685232
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 122880 := 385024&2251799813685232
ramon: poll                 wall=14.000s usage=13.918s mem=26556KiB load=1.00 rootload=1.00
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 385024 := 385024&2251799813685232
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 385024 := 385024 >>l 60
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 335872 := 393216&2251799813685240
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 335872 := 393216&2251799813685240
(smt.stats   99  15348 216871 763325 11462/11179/393   17212/1626    30  131   24.96)
(smt.stats  100  15582 221033 778766 11574/11251/404   17892/1638    30  131   25.17)
(smt.stats  101  15839 228388 826700 11713/11350/404   18288/1640    30  131   25.40)
(smt.stats  102  16121 238961 866925 11764/11516/407   18681/2083    31  140   25.40)
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 8 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 8 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 8 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 8 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 8 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 4 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 4 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 4 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 1 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 1 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 256&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 256 := 2097152 >>l 14
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 2&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2 := 2097152 >>l 14
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 451 := 256 >>l 1
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 128 := 2097152 >>l 14
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 145 := 256 >>l 1
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 128 := 2097152 >>l 14
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 145 := 256 >>l 1
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 2&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2 := 2097152 >>l 14
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 2&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #97 #318) 64)) 2 := 2097152 >>l 14
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 128 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 128 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 128 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 64 := 128&1125899906842624
ramon: poll                 wall=15.000s usage=14.917s mem=27304KiB load=1.00 rootload=0.99
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 16 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 38 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 36 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 1 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 8 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 16 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 8 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 16 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 32 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 32 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 32 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 24 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 16 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 16 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 10 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 8 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 8 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 8 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 2 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 2 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 4 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 1 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 1 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 1 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 65 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 64 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 64 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 64 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 64 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 64 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 128 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 128 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #97) (mod #319 64)) (if (= #618 63) 41538374868278602581499896924209152 (if #620 20769187434139301290749948462104576 #744))) 0 := 128&1125899906842624
band: (band[51] (lshr[51] (bv2int %0) (mod #97 51)) (if (= #495 50) 2535301200456457677093499568128 (if #497 1267650600228228838546749784064 #595))) 128 := 128&1125899906842624
(smt.stats  103  16431 247783 891059 11959/11686/523   19159/2197    32  152   25.81)
(smt.stats  104  16771 262306 937859 11975/11722/529   19570/2337    33  199   25.92)
(smt.stats  105  16872 265885 950318 11986/11731/529   19633/2402    34  245   26.02)
(smt.stats  106  16983 268448 963286 12101/11821/532   19853/2403    34  245   26.12)
(smt.stats  107  17105 271064 981293 12115/11826/532   20038/2403    34  245   26.21)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  108  17239 276511 1026759 12132/11843/532   20171/2410    35  278   26.31)
(smt.stats  109  17386 281534 1082143 12144/11854/533   20401/2438    36  282   26.31)
ramon: poll                 wall=16.000s usage=15.917s mem=27996KiB load=1.00 rootload=1.00
(smt.stats  110  17547 285498 1107260 12343/11997/537   20775/2459    37  285   26.69)
ramon: poll                 wall=17.001s usage=16.917s mem=28524KiB load=1.00 rootload=1.00
(smt.stats  111  17724 291670 1135689 12485/12033/537   21121/2466    37  285   26.79)
(smt.stats  112  17918 296490 1150354 12555/12171/537   21371/2524    38  298   26.88)
ramon: poll                 wall=18.002s usage=17.921s mem=28800KiB load=1.00 rootload=1.00
(smt.stats  113  18131 302825 1177758 12637/12239/537   21700/2524    38  298   26.98)
(smt.stats  114  18365 311633 1197985 12798/12326/537   22285/2533    38  298   27.17)
ramon: poll                 wall=19.000s usage=18.916s mem=28904KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.916s mem=29144KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:33:28 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.979s
ramon: group.utime          19.947s
ramon: group.stime          0.032s
ramon: group.mempeak        29400KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
