ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:57:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27529 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/iTiIRjJbKqFK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             898252
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 5 := 4 << 1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 5 := 4 << 58
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 65 := 64 << 57
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 65 := 64 << 56
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 65 := 64 << 55
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 5 := 4 << 2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 15 := 4 << 3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 15 := 4 << 4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 255 := 254 << 4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 2305843009213693952 := 1152921504606846976 << 4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 2305843009213693952 := 1152921504606846976 << 3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 2305843009213693952 := 2305843009213693950 << 2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 2305843009213693952 := 2305843009213693950 << 3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 2305843009213693951 := 2305843009213693950 << 4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 2305843009213693951 := 2305843009213693950 << 3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 2305843009213693951 := 2305843009213693950 << 2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 2305843009213693951 := 2305843009213693950 << 1
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1152921504606846974 := 1152921504606846975 << 2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 1152921504606846978 := 1152921504606846976 << 2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 1152921504606846978 := 1152921504606846976 << 2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 1152921504606846978 := 1152921504606846976 << 3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387903 := 1152921504606846976 << 4
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 76861433640456482 := 614891469123651721 << 5
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 5 := 4 << 3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 6 := 4 << 3
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 2 << 4
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 2 << 4
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 2 << 4
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 538030035483195254 := 538030035483195255 << 4
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 17 := 576460752303423489 << 3
(smt.stats    0    102    565    625   148/143/103      90/17    11   22   51.06)
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 1152921504606846975 << 3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 58
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 6
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 6
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 7
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4899916394579099640 := 1224979098644774910 << 6
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4899916394579099640 := 1224979098644774910 << 7
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 7
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   59.8802     10000        49          0            1        2)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 7
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4611686018427387912 := 1152921504606846978 << 9
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4647998506761461832 := 1161999626690365458 << 10
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4647998506761461832 := 1161999626690365458 << 11
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4647998506761461832 := 1161999626690365458 << 12
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4647998506761461832 := 1161999626690365458 << 13
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4827858800541171712 := 1206964700135292928 << 7
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4755801206503243776 := 1188950301625810944 << 8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4755801206503243776 := 1188950301625810944 << 9
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4755801206503243776 := 1188950301625810944 << 10
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4755801206503243776 := 1188950301625810944 << 11
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4755801206503243776 := 1188950301625810944 << 12
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4755801206503243776 := 1188950301625810944 << 13
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4758124509486391432 := 1189531127371597858 << 14
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4758124509486392320 := 1189531127371598080 << 15
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4758124509486392320 := 1189531127371598080 << 16
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4776358930640048712 := 1194089732660012178 << 17
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4776630354779832320 := 1194157588694958080 << 18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4776630354779832320 := 1194157588694958080 << 19
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4776630354779832320 := 1194157588694958080 << 19
(sat.ddfw       1      1   33.5604     20001        98          1            1        3)
(smt.stats    1    203   1136   1182   295/176/105     188/39    12   23   51.74)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4787889353848258560 := 1196972338462064640 << 7
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4787889353848258560 := 1196972338462064640 << 6
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4787889353848258560 := 1196972338462064640 << 7
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4785637554034573312 := 1196409388508643328 << 7
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4787889353848258560 := 1196972338462064640 << 5
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 4785658790945281056 := 1196414697736320264 << 5
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 7
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 7
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 7
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 7
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 6
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 6
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 5
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 5
(smt.stats    2    314   2401   3178   492/379/184     303/45    15   47   52.04)
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 1
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 1
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 8
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 8
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 8
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 12
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 11
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 10
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 10
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 11
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 11
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 10
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 11
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 9
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 9
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 58
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 58
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 57
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 57
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 55
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 54
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 53
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 52
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 51
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 50
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 22
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 20
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 22
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 50
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 51
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 52
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 53
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 54
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 55
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 22
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 50
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 51
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 52
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 53
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 54
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 22
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 50
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 51
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 52
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 53
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 51
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 50
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 22
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 21
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 22
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 22
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 50
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 51
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 50
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 22
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 23
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 49
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 50
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 24
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 25
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 47
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 26
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 27
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
(sat.ddfw       1      1   36.1664     40001       196          2            1        5)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 45
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 28
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 44
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 43
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 42
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 39
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 38
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 37
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 36
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 35
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 34
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 33
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 31
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 30
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 0 := 0 << 29
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 1 := 0 << 30
(smt.stats    3    415   3099   5988  1073/671/205     456/63    16   54   53.66)
ramon: poll                 wall=1.000s usage=1.054s mem=56412KiB load=1.05 rootload=1.02
(sat.ddfw       1      1   32.1543     70001       343          3            1        8)
(sat.ddfw       1      1   27.7778    110001       539          4            1       12)
(smt.stats    4    526   9703   9497  1265/1089/290     623/87    17   74   54.13)
ramon: poll                 wall=2.000s usage=2.184s mem=56668KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   25.1251    160000       784          5            1       17)
(sat.ddfw       1      1   22.8401    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=3.272s mem=57364KiB load=1.09 rootload=1.09
(smt.stats    5    648  16147  15737  1366/1179/294     763/130    20  100   54.81)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 3460479765716140033 := 865119941261551230 << 20
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 3460479765716140033 := 865119941261551230 << 20
(sat.ddfw       1      1    19.926    290001      1421          7            1       30)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 3461227570199790127 := 865119941261557630 << 20
ramon: poll                 wall=4.000s usage=4.272s mem=57388KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    749  20983  21975  1454/1252/295     870/149    21  101   55.00)
(sat.ddfw       1      1   17.6952    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=5.272s mem=57676KiB load=1.00 rootload=1.00
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 3461016313634226177 := 865119942284935038 << 20
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 288230367427559425 := 432559971142467519 << 21
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 288230367427559425 := 432559971142467519 << 21
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 288230367427559425 := 432559971142467519 << 21
(sat.ddfw       1      1   15.9236    460001      2254          9            1       47)
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #92))) 288230350247690241 := 432559971142467391 << 21
ramon: poll                 wall=6.003s usage=6.280s mem=57780KiB load=1.01 rootload=1.01
(smt.stats    7    860  24541  26764  1609/1377/300     995/161    22  102   55.10)
(smt.stats    8    982  28194  32198  1655/1524/306    1125/182    24  104   55.20)
(sat.ddfw       1      1   14.4592    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=7.273s mem=57924KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=8.273s mem=58220KiB load=1.00 rootload=1.00
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 17293822569102704641 := 898327791363652206 << 59
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 17293822569102704641 := 898327791363652156 << 59
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 17293822569102704641 := 898327791363652156 << 59
(sat.ddfw       1      1   13.2498    670001      3284         11            1       68)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 17293822569102704641 := 898327791363652156 << 59
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 17293822569102704641 := 898327791363652156 << 59
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 17297125514637197311 := 898327791363652190 << 59
ramon: poll                 wall=9.000s usage=9.270s mem=58228KiB load=1.00 rootload=1.00
(smt.stats    9   1116  32568  35883  1770/1525/306    1274/200    24  104   55.39)
(sat.ddfw       1      1   12.2324    790001      3872         12            1       80)
ramon: poll                 wall=10.000s usage=10.250s mem=58236KiB load=0.98 rootload=0.98
ramon: poll                 wall=11.000s usage=11.250s mem=58240KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3418    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=12.249s mem=58240KiB load=1.00 rootload=1.00
(smt.stats   10   1217  35657  38577  2047/1775/311    1375/218    25  105   55.58)
ramon: poll                 wall=13.000s usage=13.263s mem=57992KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   10.6077   1060001      5196         14            1      108)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14987979559889010689 := 893543250730708536 << 56
ramon: poll                 wall=14.000s usage=14.258s mem=58276KiB load=0.99 rootload=1.00
ramon: poll                 wall=15.000s usage=15.258s mem=58276KiB load=1.00 rootload=1.00
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14995639204940824575 := 893543248583242586 << 56
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14995639204940824575 := 893543248583242586 << 56
(sat.ddfw       1      1    9.9318   1210001      5931         15            1      123)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14995639204940824575 := 893543248583242586 << 58
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14995639204940824575 := 893543248583242586 << 58
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14995639204940824575 := 893543248583242586 << 57
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14995639204940824575 := 893543248583242586 << 57
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14987979559889010689 := 893543248583242586 << 57
(smt.stats   11   1328  38481  40963  2203/1955/311    1503/250    26  105   55.67)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14987979559889010689 := 893543250730708536 << 58
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14987979559889010689 := 893543250730708536 << 58
ramon: poll                 wall=16.000s usage=16.258s mem=58288KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=17.254s mem=58288KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    9.3447   1370001      6715         16            1      139)
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #127 #131) 64)) 14995656797015457791 := 893543250730712634 << 58
ramon: poll                 wall=18.000s usage=18.250s mem=58292KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.003s usage=19.240s mem=58292KiB load=0.99 rootload=0.99
(sat.ddfw       1      1    8.8051   1540001      7549         17            1      156)
ramon: poll                 wall=20.000s usage=20.289s mem=58316KiB load=1.05 rootload=1.05
ramon: end                  Fri Nov  1 22:58:12 2024
ramon: root.execname        z3
ramon: root.utime           20.320s
ramon: root.stime           0.020s
ramon: group.total          20.355s
ramon: group.utime          20.327s
ramon: group.stime          0.028s
ramon: group.mempeak        58572KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.01
