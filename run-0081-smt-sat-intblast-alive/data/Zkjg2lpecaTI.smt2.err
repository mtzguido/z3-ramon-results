ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:46:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28647 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Zkjg2lpecaTI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             466000
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  64       0    18.51   0.00)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.80   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1025 :time 0.00)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.80   0.01)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.80   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 470018.80 :time 0.00)
(sat.stats    158   1600    0   228/228    93/66  64       0    18.80   0.01)
(sat.stats    161   1703    1   228/228    96/68  64       0    18.90   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    164   1756    2   228/228    99/71  64       0    18.90   0.01)
(sat.stats    167   1840    3   228/228   102/74  64       0    18.90   0.01)
(sat.stats    170   1969    4   228/228   105/76  64       0    18.90   0.01)
(sat.stats    173   2045    5   228/228   108/78  64       0    18.90   0.01)
(sat.stats    176   2242    6   228/228   111/79  64       0    18.90   0.01)
(sat.stats    179   2460    7   228/228   114/79  64       0    18.90   0.01)
(sat.stats    182   2593    8   228/228   117/81  64       0    18.90   0.01)
(sat.stats    185   2771    9   228/228   120/81  64       0    18.90   0.01)
(sat.stats    188   2871   10   228/228   123/81  64       0    18.90   0.01)
(sat.stats    191   3006   11   228/228   126/81  64       0    18.90   0.01)
(sat.stats    194   3085   12   228/228   129/81  64       0    18.90   0.01)
(sat.stats    209   3621   17   228/228   144/86  64       0    18.90   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2771 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats      :decisions     :clauses/bin      :units        :memory       )
(sat.stats    400  10382   38   253/252   334/191  74       0    19.48   0.07)
lshr: (lshr[46] (bv2int %0) (+ 46 (* 70368744177663 #57))) 148 := 148 >>l 36
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4949 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1&2048
lshr: (lshr[64] (mod (div #55 2) 35184372088832) (mod (+ 45 #685 #687) 64)) 34359738507 := 34359738507 >>l 35
(sat.stats    523  12841   39   461/458   458/229  88       0    19.87   0.12)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 1 := 1&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 170 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 1020 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 400 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 8 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 896 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 64 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 32 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 512 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 256 := 1023&2048
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 679 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 280 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 82 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 260 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 16 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 224 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 704 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 896 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 256 := 2048&1023
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 1023&2048
band: (band[46] (if (= #554 63) 18446744073709551616 (if #556 9223372036854775808 #680)) (lshr[64] (mod #434 35184372088832) (mod #688 64))) 512 := 2048&1023
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 6976 :time 0.00)
(sat.stats    711  17542   65  1130/1126   642/307 213       0    21.05   0.18)
 (sat-cleaner :elim-literals 8 :elim-clauses 1 :cost 8173 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #451)) (if (= #52 45) 70368744177664 (if #455 35184372088832 #543))) 0 := 0&2
lshr: (lshr[64] (mod (div #55 2) 35184372088832) (mod (+ 45 #685 #687) 64)) 5 := 206158430207 >>l 45
ramon: poll                 wall=1.000s usage=0.946s mem=29908KiB load=0.95 rootload=0.92
ramon: poll                 wall=2.000s usage=1.945s mem=34652KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.942s mem=35452KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.945s mem=35968KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.944s mem=36600KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.944s mem=37252KiB load=1.00 rootload=1.00
(sat.stats   2291  36939   83 40334/40329  3619/2236 223       0    37.09   6.26)
(sat.stats   2295  37322   84 54605/54600  3623/2236 223       0    37.67   6.81)
ramon: poll                 wall=7.000s usage=6.944s mem=39612KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.944s mem=42064KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.943s mem=42704KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.943s mem=44076KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.940s mem=48960KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.943s mem=50432KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.943s mem=53276KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.942s mem=55444KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.942s mem=58268KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 13996 :time 0.00)
ramon: poll                 wall=16.000s usage=15.942s mem=61600KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.002s usage=16.942s mem=61600KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.936s mem=61600KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.936s mem=61856KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.936s mem=61856KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:46:21 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.001s
ramon: group.utime          19.945s
ramon: group.stime          0.056s
ramon: group.mempeak        61856KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
