ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:08:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27328 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/pf8FxJENktVQ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             931658
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   76.3359     10000        49          0            1        2)
(sat.ddfw       1      1   38.7636     20001        98          1            1        3)
(smt.stats    0    101   4716    476  1129/990/114      98/9     6   19   52.06)
(smt.stats    1    202   7493   1045  1552/1377/114     207/9     6   19   52.06)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&1
(sat.ddfw       1      1   39.0625     40001       196          2            1        5)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&1
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&2
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&8
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&8
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&8
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&16
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&16
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&32
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&48
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&32
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&16
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&32
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 32 := 255&36
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&48
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 16 := 255&48
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 48 := 255&52
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 51 := 255&52
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 50 := 255&52
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 48 := 255&52
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 16 := 255&24
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 16 := 255&24
(smt.stats    2    313  11186   2394  1752/1568/195     342/31     9   40   52.45)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&120
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&120
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&120
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&120
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 59 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 58 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 59 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 122 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 120 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 120 := 255&248
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 122 := 255&248
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 124 := 255&248
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 124 := 255&252
(smt.stats    3    415  14477   3694  1883/1729/245     587/70    11   51   52.75)
(smt.stats    4    526  16639   6282  2092/1919/248     714/162    14   65   52.84)
(smt.stats    5    648  22467   9496  2110/1920/248     841/162    14   65   53.13)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755814144 := 52 << 12
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755814144 := 52 << 12
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755814144 := 52 << 12
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    749  25183  12391  2142/1951/248    1081/163    14   65   53.13)
(sat.ddfw       1      1   33.7838     70001       343          3            1        8)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 192 := 4095&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755814080 := 52 << 12
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 176 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 160 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 128 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 512 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1024 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 512 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1024 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1024 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) ramon: poll                 2048 := 4095wall=1.000s usage=0.993s mem=55572KiB load=0.99 rootload=0.98&
212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 25 := 26 << 13
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 25 := 26 << 13
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 25 := 26 << 13
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 1 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 2 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 4 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 8 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 16 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 96 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 64 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 128 := 4095&212992
(smt.stats    7    860  27305  15743  2296/2001/275    1273/319    16   73   53.43)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 66 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 69 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 68 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 72 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 8 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 80 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 96 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 192 := 4095&212992
(smt.stats    8    982  31914  22737  2323/2145/375    1472/370    17   97   53.62)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 0 := 38 << 19
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 0 := 38 << 19
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 0 := 38 << 19
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813888 := 38 << 19
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813888 := 38 << 19
(smt.stats    9   1116  37380  27925  2433/2236/382    1681/426    19  114   53.81)
(smt.stats   10   1217  41780  33444  2557/2341/384    1834/446    20  117   53.93)
(smt.stats   11   1328  44312  39007  2706/2437/386    2066/469    22  132   54.35)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1032 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1032 := 274877906943&1288
(sat.ddfw       1      1   28.8392    110001       539          4            1       12)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1032 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264 := 274877906943&1288
(smt.stats   12   1450  46768  46649  2974/2712/405    2457/508    23  136   54.73)
(smt.stats   13   1584  52059  61190  3291/2945/407    2729/624    25  152   54.92)
(smt.stats   14   1731  57498  70651  3350/3044/408    2949/633    26  153   55.11)
(smt.stats   15   1832  63359  85529  3363/3066/414    3212/633    27  154   55.24)
ramon: poll                 wall=2.000s usage=2.136s mem=57376KiB load=1.14 rootload=1.12
(sat.ddfw       1      1    24.987    160000       784          5            1       17)
(smt.stats   16   1943  66024  92165  3364/3068/414    3402/678    28  160   55.34)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   17   2065  70329 105428  3367/3071/414    3571/678    28  160   55.34)
(smt.stats   18   2199  76633 118338  3418/3074/414    3771/685    28  160   55.34)
(smt.stats   19   2346  82940 132969  3453/3139/414    4002/685    28  160   55.34)
(sat.ddfw       1      1   21.8424    220001      1078          6            1       23)
(smt.stats   20   2507  88744 145135  3574/3159/414    4797/690    28  160   55.68)
ramon: poll                 wall=3.000s usage=3.344s mem=58000KiB load=1.21 rootload=1.21
(smt.stats   21   2608  93048 150785  3636/3285/414    5016/694    28  160   55.88)
(smt.stats   22   2719  97899 159926  3743/3378/414    5464/695    28  160   55.97)
(smt.stats   23   2841 102042 170965  3785/3462/414    5832/697    28  160   56.07)
(smt.stats   24   2975 106710 180747  3841/3498/414    6566/699    28  160   56.16)
(sat.ddfw       1      1   18.8425    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=4.265s mem=58556KiB load=0.92 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3122 114437 197784  3932/3638/421    7074/1018    29  173   56.35)
(sat.ddfw       1      1   16.7119    370001      1813          8            1       38)
ramon: poll                 wall=5.003s usage=5.200s mem=58876KiB load=0.93 rootload=0.94
(smt.stats   26   3283 122017 214231  4076/3647/421    7578/1043    30  173   56.72)
ramon: poll                 wall=6.000s usage=6.196s mem=59616KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   15.1388    460001      2254          9            1       47)
ramon: poll                 wall=7.000s usage=7.196s mem=59636KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.8427    560001      2745         10            1       57)
ramon: poll                 wall=8.000s usage=8.196s mem=59644KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7581    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=9.196s mem=59648KiB load=1.00 rootload=1.00
(smt.stats   27   3460 127445 229083  4310/3801/421    8193/1050    30  173   57.10)
(smt.stats   28   3561 129811 240733  4369/4073/430    8570/1166    31  186   57.10)
ramon: poll                 wall=10.003s usage=10.196s mem=59764KiB load=1.00 rootload=1.00
(smt.stats   29   3672 131860 252151  4375/4077/437    8775/1222    32  242   57.20)
(sat.ddfw       1      1   11.8157    790001      3872         12            1       80)
ramon: poll                 wall=11.000s usage=11.244s mem=59732KiB load=1.05 rootload=1.05
(sat.ddfw       1      1   10.9983    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=12.244s mem=59988KiB load=1.00 rootload=1.00
(smt.stats   30   3794 134967 269755  4443/4130/440    9075/1222    32  242   57.49)
(smt.stats   31   3928 139433 289174  4534/4204/445    9485/1334    34  270   57.81)
(smt.stats   32   4075 145235 307851  4553/4221/449   10424/1334    34  270   57.90)
ramon: poll                 wall=13.000s usage=13.244s mem=60300KiB load=1.00 rootload=1.00
(smt.stats   33   4236 150048 331801  4564/4228/449   10683/1507    35  340   58.00)
(sat.ddfw       1      1   10.2843   1060001      5196         14            1      108)
ramon: poll                 wall=14.000s usage=14.244s mem=60428KiB load=1.00 rootload=1.00
(smt.stats   34   4413 163011 366737  4681/4307/450   11474/1544    36  343   58.10)
ramon: poll                 wall=15.000s usage=15.244s mem=60516KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.66121   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=16.244s mem=60364KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=17.241s mem=60740KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   9.10591   1370001      6715         16            1      139)
(smt.stats   35   4607 169322 393168  4747/4362/450   12698/1545    36  343   58.29)
ramon: poll                 wall=18.000s usage=18.241s mem=60848KiB load=1.00 rootload=1.00
(smt.stats   36   4708 170432 405257  4758/4420/450   13134/1546    36  343   58.48)
(smt.stats   37   4819 174774 420803  4867/4483/450   13729/1548    36  343   58.57)
ramon: poll                 wall=19.003s usage=19.249s mem=60996KiB load=1.01 rootload=1.01
(smt.stats   38   4941 179083 436627  5016/4546/450   14375/1548    36  343   58.67)
(smt.delete-inactive-clauses  :num-deleted-clauses 321)
(smt.stats   39   5075 180876 446477  5023/4672/450   14704/1548    36  343   58.76)
(sat.ddfw       1      1   8.61065   1540001      7549         17            1      156)
(smt.stats   40   5222 186824 470360  5074/4697/452   15406/1931    37  358   58.86)
ramon: poll                 wall=20.000s usage=20.261s mem=61372KiB load=1.01 rootload=1.01
ramon: end                  Fri Nov  1 23:08:25 2024
ramon: root.execname        z3
ramon: root.utime           20.290s
ramon: root.stime           0.030s
ramon: group.total          20.327s
ramon: group.utime          20.295s
ramon: group.stime          0.032s
ramon: group.mempeak        61628KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.01
