ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:16:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28190 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1357
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tCXOcBIkmbN9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             556912
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   228/228     0/0  61       0    18.52   0.00)
(sat.stats    185    984    0   228/228   185/65  61       0    18.92   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 656 :time 0.00)
(sat.stats    185    984    0   228/228   185/65  61       0    18.92   0.01)
(sat.stats    185    984    0   228/228   185/65  61       0    18.92   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 591818.92 :time 0.00)
(sat.stats    185    984    0   228/228   187/67  61       0    18.92   0.01)
(sat.stats    248   2055    1   228/228   250/105  61       0    18.92   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    251   2166    2   228/228   253/105  61       0    18.92   0.01)
(sat.stats    254   2205    3   228/228   256/105  61       0    18.92   0.01)
(sat.stats    257   2276    4   228/228   259/107  61       0    18.92   0.01)
(sat.stats    260   2386    5   228/228   262/109  61       0    18.92   0.01)
(sat.stats    263   2481    6   228/228   265/112  61       0    19.02   0.01)
(sat.stats    266   2555    7   228/228   268/114  61       0    19.02   0.01)
(sat.stats    269   2565    8   228/228   271/115  61       0    19.02   0.01)
(sat.stats    273   2568    9   228/228   275/115  61       0    19.02   0.01)
(sat.stats    280   2574   10   228/228   282/115  61       0    19.02   0.01)
(sat.stats    283   2580   11   228/228   285/118  61       0    19.02   0.01)
(sat.stats    286   2590   12   228/228   288/121  61       0    19.02   0.01)
(sat.stats    289   2605   13   228/228   291/124  61       0    19.02   0.01)
(sat.stats    316   3377   22   228/228   318/141  61       0    19.02   0.01)
(sat.stats    543  10311   39   237/237   545/230  61       0    19.50   0.15)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2747 :time 0.00)
 (sat-cleaner :elim-literals 19 :elim-clauses 1 :cost 3862 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    798  15164   48  1592/1591   812/257  76       0    20.15   0.47)
(sat.stats   1200  25878   66  2970/2969  1224/305  76       0    20.34   0.74)
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 1227 := 1227 << 27
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 19569 := 118581073&164685152256
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6355 :time 0.00)
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 55554 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 117480 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
shl: (shl[64] (bv2int %0) (mod (+ #59 #318) 64)) 1227 := 1227 << 27
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 4 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 178528 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 16 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 1654464 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 3979136 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 3559936 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 256 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 26195968 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 1024 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 4096 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 59998208 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 8192 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 16384 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 105971712 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 7733248 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 114294784 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 262144 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 2097152 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 524288 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 8388608 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 4194304 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 16777216 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 67108864 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 33554432 := 118581073&164685152256
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 7155 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 2898 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 10748 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 136544 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 8 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 16 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 1029760 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 64 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 1457664 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 256 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 1024 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 29407232 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 30482432 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 4096 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 105873408 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 16384 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 16056320 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 102498304 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 131072 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 87556096 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 94371840 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 1048576 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 100663296 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 4194304 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 16777216 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 8388608 := 164685152256&118581073
band: (band[48] (if (= #564 47) 1 (if #566 3 #699)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 118581073&164685152256
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (= #719 63) 0 (if #721 1 #859))) 67108864 := 164685152256&118581073
ramon: poll                 wall=1.000s usage=0.955s mem=23936KiB load=0.95 rootload=0.93
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 8533 :time 0.00)
(sat.stats   1598  42932  138 17524/17523  1755/547 449       0    25.53   1.21)
ramon: poll                 wall=2.000s usage=1.954s mem=33504KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.954s mem=35772KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.954s mem=37548KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.954s mem=40184KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.954s mem=41548KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11913 :time 0.00)
ramon: poll                 wall=7.000s usage=6.953s mem=43444KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.953s mem=43652KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.005s usage=8.957s mem=44488KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 15219 :time 0.00)
ramon: poll                 wall=10.000s usage=9.953s mem=44564KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.952s mem=45028KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.951s mem=45044KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.951s mem=45060KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.951s mem=45204KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.950s mem=46160KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.950s mem=46508KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.950s mem=47020KiB load=1.00 rootload=1.00
(sat.stats   3273  89098  226 136311/136310  4241/1428 463       0    48.41  17.16)
ramon: poll                 wall=18.000s usage=17.950s mem=47476KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.950s mem=48392KiB load=1.00 rootload=1.00
(sat.stats   3597  90100  277 141342/141341  4566/1429 463       0    49.80  19.35)
ramon: poll                 wall=20.005s usage=19.954s mem=48688KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:17:04 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.040s
ramon: group.total          20.002s
ramon: group.utime          19.962s
ramon: group.stime          0.040s
ramon: group.mempeak        48944KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.00
