ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:53:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41958 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1328
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/39zEuJqIN9SZ.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3659729
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  64       0    18.51   0.00)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1025 :time 0.00)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 470018.83 :time 0.00)
(sat.stats    158   1600    0   228/228    93/66  64       0    18.83   0.01)
(sat.stats    161   1703    1   228/228    96/68  64       0    18.83   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    164   1756    2   228/228    99/71  64       0    18.83   0.01)
(sat.stats    167   1840    3   228/228   102/74  64       0    18.83   0.01)
(sat.stats    170   1969    4   228/228   105/76  64       0    18.92   0.01)
(sat.stats    173   2045    5   228/228   108/78  64       0    18.92   0.01)
(sat.stats    176   2242    6   228/228   111/79  64       0    18.92   0.01)
(sat.stats    179   2460    7   228/228   114/79  64       0    18.92   0.01)
(sat.stats    182   2593    8   228/228   117/81  64       0    18.92   0.01)
(sat.stats    185   2771    9   228/228   120/81  64       0    18.92   0.01)
(sat.stats    188   2871   10   228/228   123/81  64       0    18.92   0.01)
(sat.stats    191   3006   11   228/228   126/81  64       0    18.92   0.01)
(sat.stats    194   3085   12   228/228   129/81  64       0    18.92   0.01)
(sat.stats    209   3621   17   228/228   144/86  64       0    18.92   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2771 :time 0.00)
lshr: (lshr[46] (bv2int %0) (+ 46 (* 70368744177663 #56))) 70368744177663 := 102 >>l 36
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 236 := 237&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 1&70368744176640
lshr: (lshr[64] (mod (div #54 2) 35184372088832) (mod (+ 45 #692 #694) 64)) 34359738369 := 34359738369 >>l 35
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3549 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 2&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 2 := 70368744176640&2
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 2&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 1 := 70368744176640&2
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 4&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 4 := 70368744176640&4
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 8&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 8 := 70368744176640&8
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 16&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 16 := 70368744176640&16
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 16 := 32&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 32&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 32 := 70368744176640&32
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 32 := 64&70368744176640
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats      :decisions     :clauses/bin     :units         :memory       )
(sat.stats    381  10047   38   750/748   320/156 144       0    20.10   0.14)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 64&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 64 := 70368744176640&64
 (sat-cleaner :elim-literals 6 :elim-clauses 2 :cost 5278 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 48 := 48&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 43 := 48&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 42 := 48&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 32 := 48&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 11 := 35&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 10 := 35&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 8 := 35&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 8 := 43&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 155&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 128 := 70368744176640&155
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 331&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 256 := 70368744176640&331
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 0 := 523&70368744176640
band: (band[46] (if (= #561 63) 649037107316844230194275186376704 (if #563 324518553658422115097137593188352 #687)) (lshr[64] (mod #440 35184372088832) (mod #695 64))) 512 := 70368744176640&523
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 768 := 959&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 64 := 959&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 128 := 959&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 512 := 959&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #458)) (if (= #76 45) 2475880078570725365426159616 (if #462 1237940039285362682713079808 #550))) 64 := 895&70368744176640
 (sat-cleaner :elim-literals 38 :elim-clauses 3 :cost 6844 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 7115 :time 0.00)
(sat.stats    551  17101   44  3570/3567   530/231 235       0    21.66   0.31)
(sat.stats    720  34109   59  5635/5632   720/269 235       0    22.21   0.63)
ramon: poll                 wall=1.000s usage=0.992s mem=25840KiB load=0.99 rootload=0.97
(sat.stats   1200  53324   65 15023/15020  1338/510 235       0    25.55   1.05)
ramon: poll                 wall=2.000s usage=1.992s mem=30192KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.001s usage=2.996s mem=31472KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.992s mem=33008KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.001s usage=4.996s mem=34280KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.992s mem=35816KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.992s mem=38632KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.992s mem=38888KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.991s mem=41192KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.991s mem=44624KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.991s mem=48916KiB load=1.00 rootload=1.00
(sat.stats   3759  89230   68 123379/123376  4273/1109 235       0    51.39  11.84)
ramon: poll                 wall=12.001s usage=11.983s mem=52864KiB load=0.99 rootload=0.99
(sat.stats   3762  89293   69 123379/123376  4276/1109 235       0    51.39  12.07)
(sat.stats :conflicts   :restarts         :learned/bin          :gc         :time )
(sat.stats      :decisions   :clauses/bin            :units         :memory       )
(sat.stats   3765  89453   70 123379/123376  4279/1109 235       0    51.39  12.43)
ramon: poll                 wall=13.000s usage=12.978s mem=52864KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.978s mem=52864KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.001s usage=14.982s mem=53376KiB load=1.00 rootload=1.01
ramon: poll                 wall=16.000s usage=15.978s mem=54144KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.978s mem=54912KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.978s mem=57216KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.978s mem=57216KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.978s mem=59264KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:53:34 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.992s
ramon: group.utime          19.964s
ramon: group.stime          0.028s
ramon: group.mempeak        59520KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
