ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:15:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28456 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KyeWknrAA5vF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             756939
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1      62.5     10000        49          0            1        2)
(smt.stats    0    101   6189    577  1172/1064/102      87/10     9   21   52.11)
(sat.ddfw       1      1   34.7257     20001        98          1            1        3)
(smt.stats    1    202   8584   3541  1894/1703/105     190/15    11   26   52.31)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 0&874555
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 3846337964565069824 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 0&874555
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 3846337964565069824 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 0&874555
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 3846337964565069824 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 101&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 101&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 100&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 31&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 0&874555
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 3846337964565069824 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 1&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 0&874555
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 3846355556751114240 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 0&874555
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 3846373148937158656 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 874555 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 102 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 65 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 874555 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 874554 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 874552 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 874544 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 874528 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 64 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 128 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 256 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 512 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 1024 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 2048 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 4096 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 8192 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 16384 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 32768 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 65536 := 67108864&874555
(smt.stats    2    313  11626   5173  2342/1988/126     299/18    12   31   52.89)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 4 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 4 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 103 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 66234314 := 64 << 20
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 874555 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 874554 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 874552 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 874544 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 874528 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 874496 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 872448 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 870336 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 870272 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 868352 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 32768 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 65536 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 131072 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 262144 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 524288 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 262144 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 262144 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 696320 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 688128 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 655360 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 524288 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 131072 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 1 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 4 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 8 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 16 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 32 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 64 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 32 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 77 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 76 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 76 := 67108864&874555
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 67108864&874555
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 76 := 67108864&874555
(smt.stats    3    419  13072   8420  2425/2213/330     510/102    17   79   53.18)
(sat.ddfw       1      1    41.841     40001       196          2            1        5)
(smt.stats    4    530  13839   9835  2467/2241/333     634/106    18   82   53.29)
(smt.stats    5    652  14210  12437  2512/2266/333     754/126    19   86   53.40)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    753  14451  15480  2626/2326/333     860/132    19   86   53.49)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 64&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 17592186044480 := 1 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 65&1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 65&1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 64&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 17592186044480 := 1 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 64&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 17592186044480 := 1 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 2&1
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 3 := 1 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 1 := 2&1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 2&1
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 1 := 1 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 2&1
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 1 := 1 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 2&1
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 1 := 2&1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 2&1
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 1 (if #587 3 #708))) 1 := 2&1
(smt.stats    7    864  17564  19124  2686/2423/346    1013/135    20   88   53.69)
(smt.stats    8    986  22235  25079  2759/2488/353    1157/165    22   95   53.78)
(sat.ddfw       1      1   39.1645     70001       343          3            1        8)
ramon: poll                 wall=1.004s usage=0.848s mem=56276KiB load=0.84 rootload=0.83
(smt.stats    9   1120  26046  31216  2806/2542/369    1337/220    25  132   53.99)
(sat.ddfw       1      1   34.7826    110001       539          4            1       12)
(smt.stats   10   1221  28414  34839  2830/2558/369    1456/223    26  136   54.08)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 18&229259520912
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 0&229259520912
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 9223389629040820224 := 8796093022238 << 38
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 0&229259520912
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 18446726481523507200 := 8796093022238 << 38
(smt.stats   11   1332  32513  40729  2862/2603/394    1592/274    28  155   54.18)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 0 := 8246337208320&229259520912
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 64 := 8796093022238 << 38
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1454  35560  47234  2891/2634/407    1734/277    29  159   54.27)
(smt.stats   13   1588  41723  57113  2911/2653/407    1869/277    29  159   54.37)
(sat.ddfw       1      1   30.5244    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.834s mem=56688KiB load=0.99 rootload=0.99
(sat.ddfw       1      1    27.113    220001      1078          6            1       23)
(smt.stats   14   1735  44053  61139  3202/2665/407    2043/316    30  175   54.97)
(sat.ddfw       1      1   24.2466    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.834s mem=57356KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.8579    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.834s mem=57540KiB load=1.00 rootload=1.00
(smt.stats   15   1836  45354  63268  3318/2972/407    2171/322    30  175   55.06)
(sat.ddfw       1      1   19.8588    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.833s mem=57580KiB load=1.00 rootload=1.00
(smt.stats   16   1947  45754  64594  3641/3172/407    2309/324    30  175   55.16)
(sat.ddfw       1      1   18.1061    560001      2745         10            1       57)
(smt.stats   17   2069  48637  70947  3748/3395/411    2526/382    31  176   55.16)
ramon: poll                 wall=6.004s usage=5.801s mem=57512KiB load=0.96 rootload=0.96
(smt.stats   18   2203  53020  79544  3994/3545/411    2720/384    31  176   55.38)
(sat.ddfw       1      1   16.6996    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.796s mem=57628KiB load=1.00 rootload=1.00
(smt.stats   19   2350  56754  86338  4213/3757/411    2919/443    32  180   55.47)
(sat.ddfw       1      1   15.5079    790001      3872         12            1       80)
ramon: poll                 wall=8.004s usage=7.800s mem=58240KiB load=1.00 rootload=1.00
(smt.stats   20   2511  60570  94040  4434/4162/416    3297/455    33  186   55.57)
(smt.stats   21   2612  61328  95834  4575/4275/416    3432/457    33  186   55.57)
ramon: poll                 wall=9.000s usage=8.792s mem=58252KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   14.4911    920001      4509         13            1       93)
(smt.stats   22   2723  64838 102678  4846/4450/416    3722/538    34  191   55.82)
ramon: poll                 wall=10.004s usage=9.854s mem=58252KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   13.8013   1060001      5196         14            1      108)
(smt.stats   23   2845  68813 112483  4980/4678/418    3993/670    35  195   55.92)
ramon: poll                 wall=11.000s usage=10.853s mem=58384KiB load=1.00 rootload=1.00
(smt.stats   24   2979  72440 124296  5118/4855/424    4383/772    37  201   56.02)
(sat.ddfw       1      1   12.8977   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.833s mem=58464KiB load=0.98 rootload=0.98
(smt.stats   25   3126  77447 134987  5248/4867/424    4761/777    37  201   56.21)
ramon: poll                 wall=13.004s usage=12.833s mem=58596KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.1387   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=13.831s mem=58612KiB load=1.00 rootload=1.00
(smt.stats   26   3287  80411 139133  5531/5074/424    4996/914    38  205   56.40)
(sat.ddfw       1      1   11.4663   1540001      7549         17            1      156)
ramon: poll                 wall=15.004s usage=14.835s mem=58724KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.004s usage=15.835s mem=58788KiB load=1.00 rootload=1.00
(smt.stats   27   3464  83688 146828  5958/5435/426    5438/918    38  205   56.50)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3565  86511 154620  6034/5735/427    5717/1030    39  216   56.59)
(sat.ddfw       1      1    10.846   1720001      8431         18            1      174)
(smt.stats   29   3676  89064 165388  6096/5806/427    6018/1032    39  216   56.59)
(smt.stats   30   3798  92097 184681  6159/5851/427    6285/1036    39  216   56.59)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022208&229259520912
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022208&229259520912
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022214&229259520912
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022214&229259520912
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022214&229259520912
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022212&458519041825
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022212&458519041825
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022212&458519041825
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (= #727 63) 0 (if #729 1 #871))) 35972 := 8796093022212&458519041825
ramon: poll                 wall=17.000s usage=16.811s mem=59204KiB load=0.98 rootload=0.98
(smt.stats   31   3932  95309 193754  6413/5923/427    6616/1039    39  216   56.88)
(smt.stats   32   4079  99767 212510  6451/6162/438    7094/1249    40  218   56.97)
ramon: poll                 wall=18.000s usage=17.744s mem=59144KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   10.2814   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=18.684s mem=59500KiB load=0.94 rootload=0.94
ramon: poll                 wall=20.000s usage=19.641s mem=59756KiB load=0.96 rootload=0.96
(smt.stats   33   4240 103871 221959  6706/6208/438    7398/1408    41  220   57.06)
ramon: end                  Fri Nov  1 22:16:11 2024
ramon: root.execname        z3
ramon: root.utime           19.690s
ramon: root.stime           0.010s
ramon: group.total          19.715s
ramon: group.utime          19.699s
ramon: group.stime          0.016s
ramon: group.mempeak        60012KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              0.98
