ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:09:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28751 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/I5cuaKM9PFCb.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             735356
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   131.579     10000        49          0            1        2)
(sat.ddfw       1      1    80.008     20001        98          1            1        3)
(smt.stats    0    101   3119    673  1053/945/89     119/19     5   14   51.66)
(sat.ddfw       1      1   76.3359     40001       196          2            1        5)
(sat.ddfw       1      1   74.0741     70001       343          3            1        8)
(smt.stats    1    202   4807   1455  1775/1429/91     245/29     6   17   51.85)
(smt.stats    2    313   6206   4331  1980/1637/92     420/52     7   19   51.95)
(sat.ddfw       1      1   66.6667    110001       539          4            1       12)
(smt.stats    3    414   7814   7219  2015/1841/100     625/61     8   20   52.35)
(smt.stats    4    525   9213   8926  2416/2118/101     926/76     9   25   52.25)
(smt.stats    5    647  11013  13527  2527/2322/102    1173/254    11   27   52.35)
(sat.ddfw       1      1   60.0228    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  12711  18145  2606/2355/103    1425/277    12   31   52.45)
(smt.stats    7    859  14502  22154  2632/2424/106    1700/301    13   36   52.55)
(smt.stats    8    982  15286  26884  2671/2458/109    2348/382    14   38   52.64)
(smt.stats    9   1116  17903  31982  2685/2468/109    2634/382    14   38   52.64)
ramon: poll                 wall=1.000s usage=0.924s mem=54828KiB load=0.92 rootload=0.92
(smt.stats   10   1217  18993  39460  2691/2474/109    2966/388    15   40   52.75)
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 5 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6&32
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 6 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6&32
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 1 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6&32
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 4 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6&32
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 6 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 6 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 5 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 6 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 5 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 1 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 2 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 2 := 6&32
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 6 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 8 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 16 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 32 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 64 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 128 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 256 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 512 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 1024 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 1024 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 2048 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4096 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 2048 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 256 := 6320&32768
(smt.stats   11   1328  20374  44014  2765/2540/204    3223/392    16   51   53.30)
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 256 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 512 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 1024 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4096 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4096 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4096 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 256 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 2048 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 512 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 1024 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 8 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 16 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 32 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 64 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 128 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 32 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 64 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 16 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 16 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 16 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 16 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 16 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 8 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 1 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 2 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 2 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 4 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 4 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 8 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 16 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 32 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 64 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 128 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 256 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 512 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 1024 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 2048 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 4096 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 512 := 6320&32768
(sat.ddfw       1      1   53.6202    220001      1078          6            1       23)
(smt.stats   12   1450  21942  52213  2888/2665/340    3604/462    18  122   53.59)
(smt.stats   13   1584  23848  58415  2944/2704/342    4059/463    18  122   53.79)
(smt.stats   14   1731  27641  72494  3055/2795/344    4379/563    20  164   53.89)
(smt.stats   15   1832  29111  80631  3160/2858/345    4543/575    21  167   53.98)
(sat.ddfw       1      1   47.8796    290001      1421          7            1       30)
(smt.stats   16   1943  30342  85419  3251/2962/346    4746/576    21  167   53.98)
(smt.stats   17   2065  32846  95737  3304/3025/355    5366/617    22  182   54.21)
(sat.ddfw       1      1   43.1965    370001      1813          8            1       38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2199  35283 112389  3353/3063/358    5842/670    23  336   54.50)
ramon: poll                 wall=2.000s usage=1.983s mem=56772KiB load=1.06 rootload=1.05
(smt.stats   19   2346  35957 116076  3740/3198/358    6038/672    23  336   54.50)
(smt.stats   20   2507  36533 123151  3839/3486/358    6297/672    23  336   54.50)
(sat.ddfw       1      1   39.3529    460001      2254          9            1       47)
(smt.stats   21   2608  36873 129279  3886/3561/358    6441/674    23  336   54.60)
(smt.stats   22   2719  38927 148358  3887/3597/359    6886/721    24  342   54.60)
(smt.stats   23   2841  40858 159754  3912/3600/359    7231/722    24  342   54.70)
(sat.ddfw       1      1   36.0231    560001      2745         10            1       57)
(smt.stats   24   2975  41391 165027  3982/3634/359    7422/723    24  342   55.09)
(smt.stats   25   3122  43874 175233  4004/3702/361    7890/745    25  345   55.09)
ramon: poll                 wall=3.000s usage=2.978s mem=57548KiB load=1.00 rootload=1.00
(smt.stats   26   3283  45744 184326  4089/3734/361    8106/746    25  345   55.29)
(sat.ddfw       1      1   33.1825    670001      3284         11            1       68)
(smt.stats   27   3460  47568 197120  4174/3868/364    8854/766    26  350   55.38)
(smt.stats   28   3561  48866 205506  4183/3875/368    9222/872    27  392   55.63)
(smt.stats   29   3672  49617 216358  4273/3922/368    9563/875    27  392   55.63)
(smt.stats   30   3794  50368 225955  4367/3987/368    9815/882    27  392   55.76)
(smt.stats   31   3928  53314 242883  4375/4055/378   10606/962    28  397   55.86)
(sat.ddfw       1      1   30.6592    790001      3872         12            1       80)
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 2 := 3160&16384
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 2 := 3160&16384
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4 := 3160&16384
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 4 := 3160&16384
(smt.stats   32   4075  55382 251880  4421/4072/378   11259/972    28  397   56.05)
ramon: poll                 wall=4.000s usage=3.977s mem=58392KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4236  57063 264999  4453/4114/378   11569/1149    29  445   56.05)
(sat.ddfw       1      1   29.8097    920001      4509         13            1       93)
(smt.stats   34   4413  61783 282302  4513/4190/379   12159/1191    30  460   56.30)
(smt.stats   35   4607  66195 312163  4525/4194/379   12793/1191    30  460   56.50)
(smt.stats   36   4708  68008 318655  4562/4216/381   13016/1235    31  471   56.50)
(sat.ddfw       1      1   28.1974   1060001      5196         14            1      108)
ramon: poll                 wall=5.000s usage=5.127s mem=58660KiB load=1.15 rootload=1.15
(smt.stats   37   4819  71056 330278  4613/4290/382   13338/1236    31  471   56.59)
(smt.stats   38   4941  72349 337953  4621/4296/382   13645/1236    31  471   56.59)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5075  74794 349938  4632/4305/382   14149/1304    32  473   56.69)
(smt.stats   40   5222  77884 363539  4635/4312/383   14438/1304    32  473   56.69)
(sat.ddfw       1      1   26.1643   1210001      5931         15            1      123)
(smt.stats   41   5383  80906 386701  4641/4314/384   14821/1304    32  473   56.69)
ramon: poll                 wall=6.000s usage=6.090s mem=59060KiB load=0.96 rootload=0.96
(smt.stats   42   5560  84109 403165  4646/4323/384   15437/1355    33  482   56.78)
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 2 := 98&512
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 98&512
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 41 := 98&512
(smt.stats   43   5754  86382 420323  4725/4326/384   16130/1357    33  482   56.88)
(smt.stats   44   5967  88257 437378  4734/4411/384   16547/1357    33  482   56.97)
(sat.ddfw       1      1   24.2534   1370001      6715         16            1      139)
(smt.stats   45   6068  89122 445817  4739/4412/384   16800/1357    33  482   57.18)
(smt.stats   46   6179  91362 466150  4765/4421/384   17087/1357    33  482   57.18)
(smt.stats   47   6301  92479 480611  4799/4451/384   17471/1358    33  482   57.41)
ramon: poll                 wall=7.000s usage=7.069s mem=59432KiB load=0.98 rootload=0.98
(smt.stats   48   6435  93648 495787  4815/4484/384   17699/1358    33  482   57.41)
(smt.stats   49   6582  94562 507541  4875/4499/384   17883/1359    33  482   57.51)
(sat.ddfw       1      1   22.8372   1540001      7549         17            1      156)
(smt.stats   50   6743  98172 537963  4892/4562/386   18464/1505    34  501   57.60)
(smt.stats   51   6920 100014 559746  4964/4581/386   18857/1506    34  501   57.70)
ramon: poll                 wall=8.002s usage=8.073s mem=59984KiB load=1.00 rootload=1.00
(smt.stats   52   7114 101813 580718  5014/4671/388   19566/1508    34  501   57.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7327 106495 611622  5027/4683/388   19951/1541    35  532   57.79)
(sat.ddfw       1      1   21.6659   1720001      8431         18            1      174)
(smt.stats   54   7561 110075 639369  5040/4703/389   20868/1542    35  532   57.89)
(smt.stats   55   7662 112288 652682  5045/4707/389   21002/1587    36  542   57.89)
(smt.stats   56   7773 115287 669508  5045/4711/389   21638/1587    36  542   57.99)
ramon: poll                 wall=9.000s usage=9.069s mem=60240KiB load=1.00 rootload=1.00
(smt.stats   57   7895 118138 688222  5046/4712/391   22366/1587    36  542   58.08)
(sat.ddfw       1      1   20.6141   1910001      9362         19            1      193)
(smt.stats   58   8029 119955 701522  5048/4714/393   22886/1587    36  542   58.08)
ramon: poll                 wall=10.000s usage=10.068s mem=61008KiB load=1.00 rootload=1.00
(smt.stats   59   8176 122150 720814  5099/4714/393   23164/1650    37  611   58.46)
(sat.ddfw       1      1   19.6309   2110001     10343         20            1      214)
(smt.stats   60   8337 122904 727490  5739/5095/393   23409/1652    37  611   58.46)
(smt.stats   61   8514 124793 744294  5943/5559/393   23896/1652    37  611   58.46)
(smt.stats   62   8708 126593 761778  6067/5632/393   24272/1657    37  611   58.46)
ramon: poll                 wall=11.000s usage=11.068s mem=61124KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.7517   2320001     11372         21            1      235)
(smt.stats   63   8921 131261 794562  6131/5738/393   24762/1657    37  611   58.56)
(smt.stats   64   9155 134579 817265  6172/5808/393   25212/1657    37  611   58.71)
(smt.stats   65   9412 137026 862221  6196/5849/393   25855/1658    37  611   58.71)
ramon: poll                 wall=12.000s usage=12.068s mem=61124KiB load=1.00 rootload=1.00
(smt.stats   66   9513 137906 868908  6202/5868/393   25979/1658    37  611   58.71)
(smt.stats   67   9624 138391 885819  6203/5869/394   26160/1806    38  617   59.04)
(smt.stats   68   9746 139077 891457  6237/5870/394   26293/1806    38  617   59.04)
(sat.ddfw       1      1   17.9431   2540001     12451         22            1      257)
(smt.stats   69   9880 139923 906723  6306/5920/394   26522/1806    38  617   59.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 939)
(smt.stats   70  10027 141643 930457  6320/5974/394   25837/1806    38  617   59.04)
(smt.stats   71  10188 143058 956477  6320/5986/394   26036/1806    38  617   59.13)
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 1 := 1&8
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 1&8
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 1 := 1&8
(smt.stats   72  10365 144483 974204  6335/5987/394   26306/1806    38  617   59.13)
ramon: poll                 wall=13.002s usage=13.072s mem=61380KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   73  10559 145745 996280  6343/6004/404   26726/1834    39  619   59.13)
(smt.stats   74  10772 146810 1016125  6357/6014/404   27034/1834    39  619   59.13)
(sat.ddfw       1      1   17.1975   2770001     13578         23            1      280)
(smt.stats   75  11006 148520 1046863  6372/6028/404   27515/1836    39  619   59.35)
(smt.stats   76  11263 149870 1061423  6514/6045/404   27989/1862    40  619   59.35)
ramon: poll                 wall=14.002s usage=14.060s mem=61636KiB load=0.99 rootload=0.99
(smt.stats   77  11545 151236 1083615  6723/6195/404   28494/1866    40  619   59.85)
(smt.stats   78  11646 151722 1094389  6782/6405/404   28628/1866    40  619   59.85)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11757 152529 1115912  6782/6441/405   28827/1866    40  619   59.85)
(sat.ddfw       1      1   16.4994   3010001     14754         24            1      305)
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6&32
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 4 := 6&32
(smt.stats   80  11879 153851 1152880  6786/6443/405   29142/1867    40  619   59.85)
(smt.stats   81  12013 154472 1161203  6865/6460/405   29381/1906    41  621   59.94)
(smt.stats   82  12160 155009 1172014  6919/6540/405   29585/1906    41  621   59.94)
ramon: poll                 wall=15.000s usage=15.020s mem=62036KiB load=0.96 rootload=0.96
(smt.stats   83  12321 155754 1189455  6978/6581/405   29787/1906    41  621   60.04)
(smt.stats   84  12498 156744 1208013  7012/6639/405   30191/1906    41  621   60.04)
(smt.stats   85  12692 158648 1241867  7021/6672/406   30716/1906    41  621   60.13)
(smt.stats   86  12905 161278 1268278  7087/6740/411   31240/2068    42  633   60.13)
(sat.ddfw       1      1   15.8599   3260001     15980         25            1      330)
ramon: poll                 wall=16.002s usage=16.024s mem=62344KiB load=1.00 rootload=1.00
(smt.stats   87  13139 164970 1312894  7118/6743/411   31966/2069    42  633   60.23)
(smt.stats   88  13396 168558 1345126  7186/6784/411   32509/2072    42  633   60.33)
ramon: poll                 wall=17.000s usage=17.021s mem=62536KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.2681   3520001     17254         26            1      356)
(smt.stats   89  13678 173894 1436955  7194/6845/411   33315/2321    43  662   60.42)
(smt.stats   90  13988 177618 1476476  7265/6857/411   33962/2325    43  662   60.52)
(smt.stats   91  14089 178360 1494529  7277/6928/411   34160/2325    43  662   60.52)
(smt.stats   92  14200 179444 1512437  7282/6937/411   34399/2325    43  662   60.52)
(smt.stats   93  14322 180157 1523754  7310/6937/411   34543/2325    43  662   60.52)
ramon: poll                 wall=18.000s usage=18.019s mem=62800KiB load=1.00 rootload=0.99
(smt.stats   94  14456 182751 1559967  7326/6981/411   34911/2325    43  662   60.62)
(smt.stats   95  14603 184245 1582065  7344/6986/411   35191/2326    43  662   60.62)
(sat.ddfw       1      1   14.7211   3790001     18578         27            1      383)
(smt.stats   96  14764 187283 1614261  7352/7007/411   35606/2326    43  662   60.62)
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 56 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 40 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 48 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 48 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 96 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 64 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 64 := 6320&32768
band: (band[17] (if (or #551 #552) 0 (if #553 1 #625)) (if (= #649 31) 4294967296 (if #651 2147483648 #711))) 0 := 6320&32768
band: (band[17] (if (or #456 #457) 0 (if #458 1 #495)) (if (= #503 16) 65536 (if #505 32768 #535))) 64 := 6320&32768
(smt.stats   97  14941 188823 1640484  7396/7027/422   36307/2611    44  664   60.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=19.002s usage=19.022s mem=63336KiB load=1.00 rootload=1.00
(smt.stats   98  15135 190686 1667480  7417/7053/437   36746/2612    44  664   60.81)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   99  15348 192772 1698007  7496/7102/437   37068/2612    44  664   60.81)
(sat.ddfw       1      1   14.2118   4070001     19951         28            1      412)
(smt.stats  100  15582 197227 1739200  7519/7137/437   37584/2612    44  664   60.91)
ramon: poll                 wall=20.002s usage=20.022s mem=63376KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:09:54 2024
ramon: root.execname        z3
ramon: root.utime           20.000s
ramon: root.stime           0.020s
ramon: group.total          20.036s
ramon: group.utime          20.008s
ramon: group.stime          0.028s
ramon: group.mempeak        63632KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.020s
ramon: loadavg              1.00
