ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:28:38 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28233 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/R4fapA3qIu3u.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             800510
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 0&17179869184
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 18014398509481984 := 18446744073709550592 >>l 30
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1&17179869184
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 1 := 18446744073709550592 >>l 30
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 17179869183&17179869184
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 18014398509481982 := 18014398509481983 >>l 20
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 17179869183&17179869184
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 17179869183 := 18446744073709550592 >>l 30
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 17179869183&17179869184
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 18014398509481982 := 18014398509481983 >>l 20
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 2047 := 2047&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 2047 := 2047&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1&17179869184
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 1 := 3072 >>l 30
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1&17179869184
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 2 := 1048576 >>l 20
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 2 := 2&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 4 := 4&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1&17179869184
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 1 := 18446744073709550592 >>l 30
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 17179869183&17179869184
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 17179869184 := 18014398509481983 >>l 20
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 1 := 17179869183&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 4 := 17179869183&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 4 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 8 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 16 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 32 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 128 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 256 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 512 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 1024 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 2048 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 4096 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 8192 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 16384 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 32768 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 65536 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 131072 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 262144 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 524288 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 1048576 := 17179869182&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 2097152 := 17179869182&17179869184
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   72.9927     10000        49          0            1        2)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 4 := 17179869183&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 12 := 17179869183&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 12 := 17179869183&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 12 := 17179869183&17179869184
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 8 := 17179869183&17179869184
(smt.stats    0    101   3584   1100  1377/1254/232      97/24    13   47   52.46)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 8 := 9&4398046511104
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 8 := 9&4398046511104
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 18 := 19&4398046511104
(smt.stats    1    202   5750   3291  2266/2043/233     220/60    14   48   52.65)
(sat.ddfw       1      1   38.1718     20001        98          1            1        3)
(smt.stats    2    313   9657   6209  2480/2100/238     433/83    15   49   52.85)
(smt.stats    3    414  12346   9624  2744/2502/241     804/208    17   52   53.05)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 0&0
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 18014398509481984 := 18014398509483008 >>l 10
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 0&0
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 18014398509481984 := 18014399583223808 >>l 10
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 0&0
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 18014398509481984 := 18014399583223808 >>l 10
(sat.ddfw       1      1     38.61     40001       196          2            1        5)
(smt.stats    4    525  13623  14734  2917/2643/253     964/353    19   85   53.15)
(smt.stats    5    647  16476  23656  2983/2723/260    1104/388    21   94   53.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  18999  30033  2996/2734/261    1214/393    22   94   53.38)
(smt.stats    7    859  23776  42147  2998/2736/262    1357/397    23   96   53.38)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 18014398509482028 := 18014398509483008 >>l 55
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 44 := 567296 >>l 55
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 2&512
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 2 := 524288 >>l 55
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1&512
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 18014398509481983 := 35184372088832 >>l 45
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1&512
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 35184372088832 := 35184372088832 >>l 45
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1&512
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 35184372088832 := 35184372088832 >>l 45
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 1 := 44&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 1 := 43&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 1 := 43&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 1 := 44&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 2 := 44&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 4 := 44&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 8 := 44&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 16 := 44&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 16 := 44&512
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 44&512
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 32 := 44&512
(smt.stats    8    981  26385  46401  3063/2792/321    1523/439    25  114   53.68)
(sat.ddfw       1      1    35.503     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.819s mem=55856KiB load=0.82 rootload=0.81
(sat.ddfw       1      1   31.1526    110001       539          4            1       12)
(smt.stats    9   1115  27903  49365  3110/2836/323    1677/459    26  117   54.27)
(smt.stats   10   1216  30393  54608  3342/3010/323    1798/466    26  117   54.17)
(smt.stats   11   1327  34004  64182  3426/3096/323    1913/502    27  119   54.27)
(smt.stats   12   1449  37804  72675  3444/3172/324    2096/551    28  121   54.27)
(smt.stats   13   1583  40617  81627  3537/3210/334    2271/572    29  126   54.27)
(sat.ddfw       1      1   26.9246    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.787s mem=56908KiB load=0.97 rootload=0.96
(smt.stats   14   1730  43182  90823  3614/3276/335    2413/608    30  151   54.39)
(smt.stats   15   1831  44415  95247  3692/3360/335    2527/609    30  151   54.49)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   16   1942  46492 102024  3828/3492/335    2661/612    30  151   54.49)
(smt.stats   17   2064  47488 105633  3882/3568/335    2815/612    30  151   54.49)
(sat.ddfw       1      1   23.9525    220001      1078          6            1       23)
(smt.stats   18   2198  48474 110068  3930/3621/335    2969/612    30  151   54.49)
(smt.stats   19   2345  50463 115043  3992/3665/335    3161/616    30  151   54.58)
(smt.stats   20   2506  53430 125539  4015/3740/340    3320/721    31  159   54.58)
(smt.stats   21   2607  55313 135705  4021/3743/340    3456/725    32  162   54.71)
ramon: poll                 wall=3.000s usage=2.767s mem=57152KiB load=0.98 rootload=0.98
(smt.stats   22   2718  60834 147975  4034/3759/340    3622/725    32  162   54.71)
(smt.stats   23   2840  65263 157556  4046/3769/340    3797/725    32  162   54.85)
(smt.stats   24   2974  68986 169286  4058/3781/348    3955/829    34  189   54.85)
(smt.stats   25   3121  76808 188995  4066/3789/349    4131/829    34  189   54.95)
(sat.ddfw       1      1   20.8147    290001      1421          7            1       30)
(smt.stats   26   3282  83453 214254  4066/3789/349    4290/837    35  198   54.95)
(smt.stats   27   3459  90324 236383  4076/3797/349    4529/837    35  198   55.16)
(smt.stats   28   3560  94566 248663  4077/3798/349    4635/837    35  198   55.27)
(smt.stats   29   3671  98158 258337  4078/3799/349    4753/837    35  198   55.36)
(smt.stats   30   3793 102218 268423  4083/3804/350    4918/870    36  204   55.36)
ramon: poll                 wall=4.000s usage=3.711s mem=57420KiB load=0.94 rootload=0.95
(smt.stats   31   3927 107750 285715  4086/3807/350    5108/870    36  204   55.36)
(smt.stats   32   4074 113151 303737  4088/3809/350    5312/870    36  204   55.36)
(smt.stats   33   4235 120459 333518  4091/3812/351    5466/927    37  211   55.36)
(sat.ddfw       1      1   18.7793    370001      1813          8            1       38)
(smt.stats   34   4412 126726 353996  4091/3812/351    5647/927    37  211   55.36)
(smt.stats   35   4606 135227 378413  4092/3813/354    5867/925    38  217   55.36)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   36   4707 139854 392116  4092/3813/354    5968/925    38  217   55.70)
(smt.stats   37   4818 144994 407915  4093/3814/354    6091/925    38  217   55.70)
(smt.stats   38   4940 149560 421904  4093/3814/354    6218/925    38  217   55.70)
ramon: poll                 wall=5.000s usage=4.668s mem=57956KiB load=0.96 rootload=0.96
(smt.delete-inactive-clauses  :num-deleted-clauses 280)
(smt.stats   39   5074 154030 436632  4093/3814/354    6079/925    38  217   55.70)
(smt.stats   40   5221 161713 456974  4093/3814/354    6226/925    38  217   55.70)
(smt.stats   41   5382 166905 472968  4093/3814/354    6397/925    38  217   55.70)
(sat.ddfw       1      1    16.946    460001      2254          9            1       47)
(smt.stats   42   5559 174920 497984  4093/3814/354    6634/925    38  217   55.94)
(smt.stats   43   5753 182887 523702  4093/3814/354    6835/925    38  217   55.94)
(smt.stats   44   5966 190253 545564  4094/3815/354    7051/925    38  217   56.03)
ramon: poll                 wall=6.000s usage=5.584s mem=58200KiB load=0.92 rootload=0.91
(smt.stats   45   6067 194728 557865  4094/3815/355    7154/1002    39  219   56.03)
(smt.stats   46   6178 199924 571879  4094/3815/355    7266/1002    39  219   56.03)
(smt.stats   47   6300 204818 580155  4097/3818/355    7388/1002    39  219   56.03)
(smt.stats   48   6434 206332 585969  4108/3819/355    7528/1002    39  219   56.03)
(smt.stats   49   6581 207729 593296  4143/3833/355    7679/1002    39  219   56.48)
(sat.ddfw       1      1   15.6495    560001      2745         10            1       57)
(smt.stats   50   6742 210672 607991  4155/3876/358    7890/1015    40  219   56.48)
(smt.stats   51   6919 215204 629756  4158/3879/358    8072/1015    40  219   56.48)
(smt.stats   52   7113 217699 649518  4159/3880/358    8268/1015    40  219   56.58)
ramon: poll                 wall=7.000s usage=6.579s mem=58756KiB load=0.99 rootload=0.99
(smt.stats   53   7326 220908 675531  4160/3881/358    8487/1015    40  219   56.58)
(smt.stats   54   7560 228979 705569  4164/3885/359    8732/1056    41  228   56.69)
(smt.stats   55   7661 232284 715284  4166/3887/359    8835/1056    41  228   56.69)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   56   7772 235860 731462  4166/3887/359    8955/1056    41  228   56.69)
(smt.stats   57   7894 239928 743905  4171/3892/359    9086/1056    41  228   56.69)
(sat.ddfw       1      1   14.5195    670001      3284         11            1       68)
(smt.stats   58   8028 244495 758754  4173/3894/359    9222/1056    41  228   56.69)
(smt.stats   59   8175 249531 774828  4179/3894/359    9369/1056    41  228   56.69)
ramon: poll                 wall=8.006s usage=7.571s mem=58996KiB load=0.99 rootload=0.98
(smt.stats   60   8336 252477 794581  4184/3905/359    9543/1056    41  228   56.69)
(smt.stats   61   8513 255313 808261  4225/3913/359    9780/1059    41  228   56.78)
(smt.stats   62   8707 258473 822003  4257/3955/359    9982/1059    41  228   56.78)
(smt.stats   63   8921 261603 835088  4339/4057/360   10207/1102    42  229   56.89)
(smt.stats   64   9155 267193 866998  4343/4061/360   10444/1102    42  229   56.89)
(smt.stats   65   9412 271065 890029  4374/4064/360   10711/1102    42  229   56.99)
(smt.stats   66   9513 273052 899630  4384/4102/360   10815/1102    42  229   56.99)
ramon: poll                 wall=9.000s usage=8.636s mem=59316KiB load=1.07 rootload=1.08
(smt.stats   67   9624 275783 917280  4384/4102/360   10939/1102    42  229   56.99)
(sat.ddfw       1      1   13.3944    790001      3872         12            1       80)
(smt.stats   68   9746 277924 935193  4386/4104/360   11065/1102    42  229   56.99)
(smt.stats   69   9880 282472 953461  4393/4105/360   11230/1103    42  229   56.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 391)
(smt.stats   70  10027 287162 971833  4399/4117/360   11119/1103    42  229   56.99)
(smt.stats   71  10188 292652 992231  4399/4117/360   11286/1103    42  229   56.99)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   72  10365 299210 1023701  4400/4118/360   11466/1103    42  229   56.99)
(smt.stats   73  10559 309294 1052513  4403/4121/360   11723/1103    42  229   57.08)
ramon: poll                 wall=10.000s usage=9.672s mem=59648KiB load=1.04 rootload=1.04
(smt.stats   74  10772 318904 1080278  4404/4122/360   11946/1103    42  229   57.65)
(smt.stats   75  11006 331227 1111223  4405/4123/360   12193/1103    42  229   57.74)
(smt.stats   76  11263 341787 1158086  4405/4123/360   12452/1103    42  229   57.74)
(sat.ddfw       1      1   12.4952    920001      4509         13            1       93)
(smt.stats   77  11545 354572 1205935  4405/4123/360   12736/1103    42  229   57.74)
(smt.stats   78  11646 359638 1222586  4405/4123/360   12837/1103    42  229   57.74)
(smt.stats   79  11757 364772 1237543  4405/4123/360   12948/1103    42  229   57.74)
ramon: poll                 wall=11.000s usage=10.649s mem=59960KiB load=0.98 rootload=0.97
(smt.stats   80  11879 371378 1250794  4405/4123/360   13070/1103    42  229   57.74)
(smt.stats   81  12013 378289 1271308  4406/4124/360   13206/1103    42  229   58.17)
(smt.stats   82  12160 385696 1298827  4406/4124/360   13355/1103    42  229   58.17)
(smt.stats   83  12321 392405 1322445  4408/4126/360   13562/1103    42  229   58.17)
(smt.stats   84  12498 400999 1349152  4409/4127/361   13739/1291    43  236   58.17)
(smt.stats   85  12692 412456 1380018  4409/4127/361   13936/1291    43  236   58.17)
ramon: poll                 wall=12.000s usage=11.612s mem=60492KiB load=0.96 rootload=0.97
(sat.ddfw       1      1   11.6803   1060001      5196         14            1      108)
(smt.stats   86  12905 422428 1411646  4410/4128/361   14150/1291    43  236   58.17)
(smt.stats   87  13139 434086 1431546  4412/4130/361   14382/1291    43  236   58.27)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 2 := 18014398509481983&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 2 := 18014398509481983&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 18014398509481983&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 2286984185774082&4096
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 2286984185774082 := 2341871806232658944 >>l 52
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 2286984185774082&4096
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 2286984185774082 := 2341871806232658944 >>l 52
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 2286984185774082&4096
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 2286984185774082 := 2341871806232658944 >>l 52
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 2286984185774082&4096
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 2286984185774082 := 2341871806232658944 >>l 52
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 520&4096
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 65 := 2286984185774081 >>l 42
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 480 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 480 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 480 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 496 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 496 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 496 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 496 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 512 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 512 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 512 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 416 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 416 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 384 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 384 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 384 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 256 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 256 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 256 := 512&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 64 := 2286984184725505 >>l 42
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
lshr: (lshr[54] (bv2int %1) (mod (bv2int %0) 54)) 64 := 2286984185774079 >>l 42
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 1 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 2 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 4 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 2 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 8 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 8 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 8 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 32 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 32 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 64 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 128 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 256 := 519&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 519&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 512 := 519&4096
(smt.stats   88  13396 439453 1452468  4569/4271/462   14755/1336    44  257   58.76)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 592&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 256 := 592&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 592&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 512 := 592&4096
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 599&4096
band: (band[54] (lshr[54] (bv2int %1) (mod #100 54)) (if (= #497 53) 9007199254740992 (if #499 4503599627370496 #603))) 16 := 599&4096
ramon: poll                 wall=13.000s usage=12.566s mem=61216KiB load=0.95 rootload=0.94
(smt.stats   89  13678 444800 1467611  4723/4396/475   15157/1343    44  257   58.96)
(smt.stats   90  13988 453578 1502171  4763/4444/476   15570/1343    44  257   59.15)
(smt.stats   91  14089 456168 1508443  4804/4490/476   15716/1413    45  270   59.15)
(sat.ddfw       1      1   10.9609   1210001      5931         15            1      123)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   92  14200 460264 1520378  4831/4512/478   15891/1413    45  270   59.25)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1096&0
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 1096 := 2846274964499080192 >>l 10
ramon: poll                 wall=14.000s usage=13.540s mem=61692KiB load=0.97 rootload=0.98
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 0 := 1544&0
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 1544 := 2846274964499604480 >>l 10
(smt.stats   93  14322 463177 1535370  4911/4529/479   16060/1416    45  270   59.35)
(smt.stats   94  14456 466797 1544237  4952/4622/482   16315/1441    46  275   60.34)
(smt.stats   95  14603 468531 1550818  5007/4643/482   16552/1441    46  275   60.43)
(smt.stats   96  14764 471883 1567784  5044/4701/482   16748/1441    46  275   60.43)
(smt.stats   97  14941 475184 1585807  5060/4722/485   17113/1526    47  295   60.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
ramon: poll                 wall=15.000s usage=14.520s mem=62512KiB load=0.98 rootload=0.98
(smt.stats   98  15135 481221 1604725  5100/4744/485   17520/1528    47  295   60.72)
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 32 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 32 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 32 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4832&64
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 4575657221408428768 := 18446744073709550592 >>l 58
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4832&64
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 4575657221408428768 := 18446744073709550592 >>l 58
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4832&64
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 4575657221408428768 := 18446744073709550592 >>l 58
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4768&64
band: (band[54] (lshr[64] (* 1024 #99) (mod #328 64)) (if (= #626 63) 18446744073709551616 (if #628 9223372036854775808 #752))) 64 := 4832&64
lshr: (lshr[64] (* 1024 (bv2int %1)) (mod (+ 10 #100 #327) 64)) 4575657221408428768 := 18446744073709550592 >>l 58
(smt.stats   99  15348 486522 1625599  5215/4859/505   18021/1537    47  295   60.81)
(sat.ddfw       1      1   10.3849   1370001      6715         16            1      139)
(smt.stats  100  15582 489705 1637358  5312/4892/505   18300/1659    48  340   60.91)
ramon: poll                 wall=16.000s usage=15.463s mem=62940KiB load=0.94 rootload=0.94
(smt.stats  101  15839 497526 1667600  5321/4971/505   18642/1660    48  340   61.01)
(smt.stats  102  16121 503878 1704434  5331/4985/505   19131/1660    48  340   61.10)
(smt.stats  103  16431 515436 1761271  5361/5015/509   19612/1783    49  344   61.21)
ramon: poll                 wall=17.000s usage=16.454s mem=63040KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   9.84252   1540001      7549         17            1      156)
(smt.stats  104  16771 524694 1795800  5436/5051/510   20251/1821    50  353   61.40)
(smt.stats  105  16872 529366 1813474  5459/5094/510   20466/1823    50  353   61.40)
(smt.stats  106  16983 533542 1824970  5467/5114/510   20662/1823    50  353   61.49)
(smt.stats  107  17105 537373 1845708  5474/5121/510   21028/1923    51  358   61.49)
ramon: poll                 wall=18.000s usage=17.368s mem=63456KiB load=0.91 rootload=0.91
(smt.stats  108  17239 543440 1877479  5478/5125/510   21280/1923    51  358   61.59)
(smt.stats  109  17386 549677 1895409  5558/5178/510   21518/1923    51  358   61.59)
(smt.stats  110  17547 553504 1911043  5615/5229/511   21956/1980    52  361   61.68)
ramon: poll                 wall=19.000s usage=18.357s mem=63856KiB load=0.99 rootload=0.99
(smt.stats  111  17724 559697 1936936  5731/5254/511   22253/1981    52  361   61.78)
(sat.ddfw       1      1   9.31581   1720001      8431         18            1      174)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  112  17918 565706 1960956  5825/5360/511   22702/1987    52  361   61.88)
(smt.stats  113  18131 579084 1996120  5826/5449/511   23168/1987    52  361   61.97)
ramon: poll                 wall=20.000s usage=19.353s mem=64120KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:28:58 2024
ramon: root.execname        z3
ramon: root.utime           19.430s
ramon: root.stime           0.010s
ramon: group.total          19.453s
ramon: group.utime          19.433s
ramon: group.stime          0.020s
ramon: group.mempeak        64480KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.100s
ramon: loadavg              0.97
