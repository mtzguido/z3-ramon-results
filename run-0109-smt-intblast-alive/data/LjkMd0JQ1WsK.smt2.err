ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:06:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41848 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LjkMd0JQ1WsK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2922119
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2597    396  1180/1009/96     115/18     2   15   19.04)
(smt.stats    1    202   2950    582  1723/1544/96     220/19     2   15   19.24)
(smt.stats    2    313   3215    790  1898/1710/96     350/21     2   15   19.43)
(smt.stats    3    414   5396   2069  2206/1956/96     499/22     2   15   19.43)
(smt.stats    4    526   6403   5129  2603/2416/98     616/104     3   16   19.64)
(smt.stats    5    648  11131   7682  2788/2579/99     817/132     5   18   19.73)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  13503  10525  2864/2592/100     964/192     6   19   19.83)
(smt.stats    7    860  15314  12575  2997/2760/101    1114/226     7   21   19.83)
(smt.stats    8    982  16936  16371  3072/2834/105    1301/243     8   23   19.83)
(smt.stats    9   1116  20252  18980  3119/2871/105    1470/309     9   27   19.93)
(smt.stats   10   1217  22795  22927  3138/2912/106    1582/348    10   29   19.93)
(smt.stats   11   1328  25881  26233  3152/2930/106    1691/348    10   29   20.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  29249  30911  3167/2953/107    1812/375    11   30   20.16)
(smt.stats   13   1584  32045  33902  3183/2961/108    1949/376    11   30   20.16)
ramon: poll                 wall=1.000s usage=0.871s mem=21372KiB load=0.87 rootload=0.86
(smt.stats   14   1731  37757  38127  3189/2973/108    2093/383    12   31   20.16)
(smt.stats   15   1832  40429  41144  3193/2977/108    2190/383    12   31   20.42)
(smt.stats   16   1943  41739  45786  3212/2977/109    2306/386    13   32   20.42)
(smt.stats   17   2065  44226  48526  3229/3005/113    2427/392    14   32   20.42)
(smt.stats   18   2199  46457  54650  3240/3018/113    2566/392    14   32   20.42)
(smt.stats   19   2346  48666  58825  3250/3028/113    2713/393    14   32   20.65)
(smt.stats   20   2507  50822  65916  3269/3037/113    2880/394    14   32   20.65)
(smt.stats   21   2608  51922  69269  3284/3065/113    2981/394    14   32   20.74)
(smt.stats   22   2719  52524  74277  3296/3071/113    3119/394    14   32   20.74)
(smt.stats   23   2841  53518  79297  3302/3084/113    3247/394    14   32   20.74)
(smt.stats   24   2975  55655  83491  3310/3094/114    3381/440    15   32   20.74)
(smt.stats   25   3122  56669  89063  3316/3094/114    3530/440    15   32   20.84)
(smt.stats   26   3283  58193  96172  3330/3104/114    3692/442    15   32   20.84)
(smt.stats   27   3460  59034  99292  3331/3115/114    3872/442    15   32   20.94)
(smt.stats   28   3561  59902 102372  3335/3115/114    3974/443    15   32   20.94)
(smt.stats   29   3674  60667 106151  3341/3125/114    4085/443    15   32   21.37)
(smt.stats   30   3796  61131 108764  3355/3129/114    4219/443    15   32   21.37)
(smt.stats   31   3930  61743 113976  3409/3183/115    4364/466    16   33   21.37)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4077  62746 120574  3418/3200/115    4519/466    16   33   21.37)
(smt.stats   33   4238  64430 125531  3419/3201/115    4680/466    16   33   21.46)
(smt.stats   34   4415  66601 132749  3419/3201/116    4863/473    17   34   21.46)
(smt.stats   35   4609  67504 139002  3436/3206/116    5072/473    17   34   21.46)
(smt.stats   36   4710  68252 142863  3436/3218/116    5174/473    17   34   21.56)
(smt.stats   37   4821  69113 147207  3440/3218/116    5285/473    17   34   21.56)
(smt.stats   38   4943  69703 153505  3469/3225/116    5405/473    17   34   21.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 140)
(smt.stats   39   5077  71391 157982  3477/3252/116    5399/473    17   34   21.66)
(smt.stats   40   5224  73744 167529  3477/3259/117    5547/490    18   34   21.66)
(smt.stats   41   5385  74748 173975  3485/3259/117    5710/490    18   34   21.66)
ramon: poll                 wall=2.000s usage=1.871s mem=23076KiB load=1.00 rootload=0.99
(smt.stats   42   5562  76214 181136  3487/3269/117    5889/490    18   34   21.66)
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 2199023255297&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 2199023255297&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 2199023255297&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 2199023255297&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 2199023255296 := 2199023255297&2199023255296
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 279275953454849 := 16777216 >>l 56
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 2199023255296 := 2199023255297&2199023255296
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 277076930199297 := 277076921810944 >>l 56
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 2199023255296 := 2199023255297&2199023255296
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 37383395344129 := 16777216 >>l 56
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 254 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 253 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 248 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 240 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 32 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 128 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 192 := 2190433320960 >>l 33
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 2190433320960 >>l 33
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 2190433320960 >>l 33
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 255 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 1 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 16 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 256 := 2199023255551 >>l 33
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 1 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 4 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 4 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 256 := 2190433320960 >>l 33
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 1 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 256 := 2199023255551 >>l 33
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 1 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 255 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 254 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 4 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 8 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 16 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 32 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 128 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 128 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 8 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 16 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 32 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 8 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 260 := 2190433320960 >>l 33
(smt.stats   43   5756  80688 189318  3646/3396/254    6087/511    19   35   22.24)
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 4 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 64 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 8 := 255&2199023255296
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255296
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 8 := 255&2199023255296
(smt.stats   44   5969  87994 201113  3661/3436/263    6322/527    20   68   22.24)
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 2 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 6 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 14 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 14 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 62 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 62 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 62 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 222 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 222 := 255&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 510 := 767&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 510 := 767&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 510 := 767&2199023255550
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 1278 := 1279&2199023255550
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 279275953456383 := 0 >>l 63
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 766 := 767&2199023255550
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 279275953455871 := 0 >>l 63
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 766 := 767&2199023255550
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 279275953455871 := 0 >>l 63
(smt.stats   45   6070  90098 203778  3767/3451/279    6439/547    21   79   22.43)
(smt.stats   46   6181  92261 210454  3841/3601/332    6563/550    21   79   22.43)
(smt.stats   47   6303  94392 215315  3876/3620/333    6688/580    22   94   22.43)
(smt.stats   48   6437  98268 223146  3901/3657/333    6898/581    22   94   22.53)
(smt.stats   49   6584 102220 233695  3906/3673/335    7061/628    23   97   22.53)
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1&2199023255550
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 129 := 1099511627776 >>l 40
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1&2199023255550
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 129 := 1099511627776 >>l 40
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1&2199023255550
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 0 := 1108101562367 >>l 40
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1&2199023255550
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 2 := 1099511627776 >>l 40
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1&2199023255550
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 2 := 2190433320960 >>l 40
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 1 := 1&2199023255550
(smt.stats   50   6745 105329 245343  3994/3730/345    7301/639    25  111   22.73)
(smt.stats   51   6922 106937 259199  4245/3936/346    7640/639    25  111   23.16)
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1099511627519&0
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 280375465082623 := 280375465082880 >>l 23
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1099511627519&0
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 36283883716351 := 36283883716608 >>l 23
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 4194559&0
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 35184376283391 := 35184380477440 >>l 23
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7116 108252 268799  4293/3970/356    7980/679    26  123   23.37)
(smt.stats   53   7329 113096 289112  4356/4035/361    8301/746    27  179   23.58)
(smt.stats   54   7563 117524 310422  4393/4072/368    8906/756    28  211   23.88)
(smt.stats   55   7664 118892 314711  4451/4115/368    9032/756    28  211   23.88)
ramon: poll                 wall=3.000s usage=2.871s mem=25492KiB load=1.00 rootload=0.99
(smt.stats   56   7775 122616 331337  4463/4116/368    9260/756    28  211   23.97)
(smt.stats   57   7897 126128 344976  4475/4137/368    9499/794    29  220   23.97)
(smt.stats   58   8031 129389 357543  4489/4149/368    9901/794    29  220   24.07)
(smt.stats   59   8178 130312 361635  4494/4154/368   10111/794    29  220   24.07)
(smt.stats   60   8339 132902 375702  4506/4166/370   10336/843    30  227   24.26)
(smt.stats   61   8516 136453 396428  4517/4177/371   10749/885    31  251   24.26)
(smt.stats   62   8710 142645 425121  4531/4183/372   11208/897    32  251   24.26)
ramon: poll                 wall=4.000s usage=3.870s mem=25932KiB load=1.00 rootload=1.00
(smt.stats   63   8923 145376 433288  4609/4205/374   11724/903    32  251   24.36)
(smt.stats   64   9157 149468 450370  4684/4296/375   12233/941    33  255   24.57)
(smt.stats   65   9414 155456 470536  4875/4374/375   12717/950    33  255   25.05)
(smt.stats   66   9515 157360 478146  4907/4554/375   12954/950    33  255   25.05)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   67   9626 159123 488380  4932/4591/376   13160/1057    34  256   25.15)
(smt.stats   68   9748 160167 501828  4937/4592/376   13292/1057    34  256   25.15)
(smt.stats   69   9882 162455 519588  4937/4596/376   13466/1057    34  256   25.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 16)
(smt.stats   70  10029 163100 529525  4945/4604/376   13675/1057    34  256   25.34)
(smt.stats   71  10190 163769 543556  4984/4643/376   13817/1057    34  256   25.34)
ramon: poll                 wall=5.000s usage=4.870s mem=26988KiB load=1.00 rootload=1.00
(smt.stats   72  10367 167262 576154  4997/4656/376   14101/1057    34  256   25.34)
(smt.stats   73  10561 171805 593636  5009/4668/376   15077/1057    34  256   25.44)
(smt.stats   74  10774 182138 629370  5018/4677/376   15312/1057    34  256   25.44)
(smt.stats   75  11008 188028 671869  5026/4685/377   15648/1206    35  273   25.53)
ramon: poll                 wall=6.000s usage=5.867s mem=27148KiB load=1.00 rootload=1.00
(smt.stats   76  11265 193048 695422  5121/4698/377   16106/1208    35  273   25.63)
(smt.stats   77  11547 198678 727301  5149/4804/377   16519/1209    35  273   25.63)
(smt.stats   78  11648 201182 741984  5174/4830/378   16646/1252    36  273   25.63)
(smt.stats   79  11759 202489 756839  5204/4863/378   16769/1252    36  273   25.73)
(smt.stats   80  11881 203156 766076  5236/4895/378   16923/1252    36  273   25.73)
(smt.stats   81  12015 206339 782080  5257/4899/380   17361/1254    36  273   25.82)
(smt.stats   82  12162 210257 802478  5333/4919/381   17560/1291    37  322   25.82)
(smt.stats   83  12323 212580 819796  5338/4997/381   17985/1291    37  322   25.82)
ramon: poll                 wall=7.000s usage=6.867s mem=27432KiB load=1.00 rootload=1.00
(smt.stats   84  12500 215907 840066  5340/4999/381   18395/1291    37  322   26.01)
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1009&0
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 1009 := 18446744073701163008 >>l 23
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 642 := 1099511630101&1099511627776
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 642 := 1099511631125&1099511627776
(smt.stats   85  12694 220216 858493  5485/5001/381   18762/1295    37  322   26.11)
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 642 := 2199023124275&1099511627776
(smt.stats   86  12907 224635 880280  5540/5166/381   19176/1296    37  322   26.11)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   87  13141 229804 912633  5563/5209/384   19712/1357    38  343   26.96)
(smt.stats   88  13398 235173 965931  5585/5227/384   20258/1357    38  343   26.96)
ramon: poll                 wall=8.000s usage=7.867s mem=28728KiB load=1.00 rootload=0.99
(smt.stats   89  13680 239402 989984  5659/5247/384   20825/1358    38  343   27.15)
(smt.stats   90  13990 243834 1020171  5769/5325/384   21262/1359    38  343   27.15)
(smt.stats   91  14091 245158 1028081  5800/5448/385   21443/1455    39  347   27.15)
(smt.stats   92  14202 246863 1035347  5819/5467/385   21649/1455    39  347   27.24)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   93  14324 251438 1063646  5821/5480/386   21878/1455    39  347   27.24)
(smt.stats   94  14458 254715 1084979  5840/5499/388   22415/1546    40  360   27.34)
ramon: poll                 wall=9.000s usage=8.867s mem=28892KiB load=1.00 rootload=1.00
(smt.stats   95  14605 257094 1103586  5843/5502/388   22866/1546    40  360   27.34)
(smt.stats   96  14766 260857 1123381  5852/5511/388   23049/1546    40  360   27.34)
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 1&2199023255550
band: (band[41] (lshr[41] (bv2int %0) (mod #100 41)) (if (= #481 40) 1208925819613529663078400 (if #483 604462909806764831539200 #561))) 1 := 1&2199023255550
(smt.stats   97  14943 262637 1140777  5863/5520/389   23447/1546    40  360   27.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 1182)
(smt.stats   98  15137 266860 1162016  5870/5528/390   22680/1620    41  367   27.43)
(smt.stats   99  15350 277284 1214570  5877/5534/390   23258/1620    41  367   27.43)
ramon: poll                 wall=10.000s usage=9.867s mem=29256KiB load=1.00 rootload=1.00
(smt.stats  100  15584 282443 1235451  5963/5538/390   24005/1675    42  373   27.53)
(smt.stats  101  15841 288199 1288737  6313/5711/390   24537/1676    42  373   27.63)
ramon: poll                 wall=11.000s usage=10.866s mem=29656KiB load=1.00 rootload=1.00
(smt.stats  102  16123 294976 1331823  6453/5989/390   25323/1678    42  373   27.82)
(smt.stats  103  16433 298630 1371265  6479/6117/392   26049/1778    43  377   27.82)
(smt.stats  104  16773 301582 1401892  6507/6141/392   26871/1780    43  377   27.91)
(smt.stats  105  16874 303843 1414791  6594/6193/392   27265/1781    43  377   27.91)
(smt.stats  106  16985 306356 1425375  6598/6252/393   27837/1880    44  405   28.10)
(smt.stats  107  17107 309781 1448435  6653/6253/393   28412/1881    44  405   28.20)
ramon: poll                 wall=12.000s usage=11.866s mem=30104KiB load=1.00 rootload=1.00
(smt.stats  108  17241 313344 1469444  6732/6320/393   28830/1881    44  405   28.29)
(smt.stats  109  17388 316654 1496769  6879/6430/393   29523/1884    44  405   28.39)
(smt.stats  110  17549 317933 1510052  6908/6547/393   29807/1884    44  405   28.39)
(smt.stats  111  17726 325877 1549660  6927/6566/393   30336/1885    44  405   28.48)
ramon: poll                 wall=13.000s usage=12.866s mem=30160KiB load=1.00 rootload=1.00
(smt.stats  112  17920 332060 1588049  7063/6590/393   31209/1889    44  405   28.58)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  113  18133 334447 1605934  7073/6717/393   31626/1889    44  405   28.68)
ramon: poll                 wall=14.000s usage=13.866s mem=30796KiB load=1.00 rootload=1.00
(smt.stats  114  18367 341978 1632260  7282/6741/393   32569/1896    44  405   28.87)
(smt.stats  115  18624 346021 1662952  7310/6964/393   34032/1896    44  405   28.97)
(smt.stats  116  18906 349927 1701972  7370/6970/394   34779/2142    45  416   29.06)
(smt.stats  117  19216 354742 1759629  7376/7030/394   35962/2142    45  416   29.16)
ramon: poll                 wall=15.000s usage=14.866s mem=31188KiB load=1.00 rootload=1.00
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 4 := 8&2199023247360
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 4 := 8&2199023247360
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 8&2199023247360
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 9223372036854775816 := 9223372036854775808 >>l 51
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 8&2199023247360
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 35184372088840 := 720575940379279360 >>l 51
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 8&2199023247360
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #100 #282) 64)) 35184372088840 := 9223372036846387200 >>l 51
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 8&2199023247360
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 9 := 2147483648 >>l 28
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 8&2199023247360
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 9 := 2147483648 >>l 28
band: (band[41] (lshr[64] (* 8388608 #99) (mod #283 64)) (if (= #584 63) 20282409603633223679873541734400 (if #586 10141204801816611839936770867200 #710))) 0 := 8&2199023247360
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 9 := 2147483648 >>l 28
(smt.stats  118  19556 361950 1809389  7520/7043/394   36897/2150    45  416   29.45)
(smt.stats  119  19929 368325 1862522  7652/7191/404   38230/2433    46  418   29.64)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20030 369493 1874361  7667/7315/404   38916/2433    46  418   29.64)
(smt.stats  121  20141 373145 1902609  7679/7317/404   39444/2433    46  418   29.74)
ramon: poll                 wall=16.000s usage=15.865s mem=31700KiB load=1.00 rootload=1.00
(smt.stats  122  20263 374928 1917672  7738/7331/404   40022/2546    47  418   29.83)
(smt.stats  123  20397 377871 1932959  7743/7391/404   40269/2546    47  418   29.83)
(smt.stats  124  20544 379609 1948223  7771/7393/404   41040/2546    47  418   30.05)
(smt.stats  125  20705 384075 1970502  7908/7425/404   42041/2550    47  418   30.15)
ramon: poll                 wall=17.000s usage=16.865s mem=32128KiB load=1.00 rootload=1.00
(smt.stats  126  20882 388173 2003221  7986/7564/404   42672/2553    47  418   30.24)
(smt.stats  127  21076 392902 2033224  8105/7654/404   43583/2556    47  418   30.34)
(smt.stats  128  21289 397350 2075098  8200/7775/404   43846/2558    47  418   30.43)
(smt.stats  129  21523 401387 2113545  8254/7885/404   44524/2559    47  418   30.43)
ramon: poll                 wall=18.000s usage=17.865s mem=32260KiB load=1.00 rootload=1.00
(smt.stats  130  21780 406683 2159919  8292/7922/406   45257/2886    48  420   30.53)
(smt.stats  131  22062 413084 2202862  8413/7946/406   46857/2893    48  420   30.81)
ramon: poll                 wall=19.000s usage=18.865s mem=32680KiB load=1.00 rootload=1.00
(smt.stats  132  22372 421022 2281379  8430/8063/406   47414/2893    48  420   30.81)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  133  22712 431469 2369894  8442/8085/406   49684/3092    49  421   31.10)
ramon: poll                 wall=20.000s usage=19.865s mem=32900KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:06:56 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.030s
ramon: group.total          19.935s
ramon: group.utime          19.903s
ramon: group.stime          0.032s
ramon: group.mempeak        33160KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              0.99
