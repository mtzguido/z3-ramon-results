ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:38:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29389 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4gA1WARdC56w.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             625373
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   74.0741     10000        49          0            1        2)
(sat.ddfw       1      1   37.0407     20001        98          1            1        3)
(sat.ddfw       1      1    37.037     40001       196          2            1        5)
(smt.stats    0    101   3882    315  1393/1191/113     105/18     4   18   52.14)
ramon: poll                 wall=1.000s usage=0.920s mem=54272KiB load=0.92 rootload=0.92
(sat.ddfw       1      1   31.8471     70001       343          3            1        8)
(sat.ddfw       1      1   27.1186    110001       539          4            1       12)
(smt.stats    1    202   7094   1189  2043/1771/113     252/20     4   18   52.24)
ramon: poll                 wall=2.000s usage=1.923s mem=54500KiB load=1.00 rootload=1.00
(smt.stats    2    313   9769   2772  2359/2133/114     366/39     5   19   52.34)
(sat.ddfw       1      1   23.2014    160000       784          5            1       17)
(smt.stats    3    414  11758   4207  2409/2206/114     474/39     5   19   52.43)
(smt.stats    4    525  12877   5539  2800/2554/116     601/66     7   21   52.62)
(smt.stats    5    647  14561   7982  3009/2714/116     732/66     7   21   52.62)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  17078   9317  3026/2762/117     840/72     8   22   52.81)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&2
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&2
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843009213693956 := 0 << 60
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843009213693956 := 0 << 60
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843009213693956 := 0 << 60
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3 := 730483956308953259&4
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 2 := 730483956308953259&4
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843009213693956 := 0 << 60
(smt.stats    7    859  18334  11409  3112/2845/144     985/85     9   33   53.01)
(smt.stats    8    981  21323  14730  3179/2902/151    1128/93    10   33   53.10)
ramon: poll                 wall=3.000s usage=2.927s mem=55420KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.3669    220001      1078          6            1       23)
(smt.stats    9   1115  22742  18938  3207/2924/164    1252/125    12   60   53.20)
(smt.stats   10   1216  24340  20830  3222/2937/164    1364/125    12   60   53.20)
(smt.stats   11   1327  27701  29532  3247/2971/164    1490/125    12   60   53.30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30250  32742  3297/3014/168    1649/152    13   71   53.46)
(smt.stats   13   1583  31877  37707  3314/3032/169    1802/160    14   73   53.46)
(smt.stats   14   1730  35473  44534  3318/3036/169    1963/162    14   73   53.72)
(smt.stats   15   1831  38644  48581  3321/3039/169    2062/162    14   73   53.72)
(smt.stats   16   1942  41153  52767  3327/3044/169    2184/162    14   73   53.86)
(sat.ddfw       1      1   17.9949    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.924s mem=56092KiB load=1.00 rootload=1.00
(smt.stats   17   2064  46017  58469  3334/3049/169    2320/162    14   73   54.08)
(smt.stats   18   2198  48760  64776  3341/3055/169    2492/162    14   73   54.08)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 0&48
shl: (shl[61] (bv2int %1) (+ 61 (* 2305843009213693951 #118))) 47 := 1152921504606847000 << 1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 0&48
shl: (shl[61] (bv2int %1) (+ 61 (* 2305843009213693951 #118))) 47 := 1152921504606847000 << 1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 0&32
shl: (shl[61] (bv2int %1) (+ 61 (* 2305843009213693951 #118))) 31 := 1152921504606846992 << 1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 0&32
shl: (shl[61] (bv2int %1) (+ 61 (* 2305843009213693951 #118))) 31 := 1152921504606846992 << 1
(smt.stats   19   2345  51297  71713  3378/3065/169    2651/166    14   73   54.27)
(smt.stats   20   2506  53499  78115  3384/3099/175    2823/180    15   76   54.27)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236729 := 43540236729&43540236734
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236728 := 43540236729&43540236734
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843052753930686 := 2305843052753930688 << 36
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236729 := 43540236729&43540236734
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236728 := 43540236729&43540236734
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843052753930686 := 2305843052753930688 << 36
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236729 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236728 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236720 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236704 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 16 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 32 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 8 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 16 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 32 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 64 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 190 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 512 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236814
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236798
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236930
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43754978818
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236930
(smt.stats   21   2607  55294  82059  3500/3152/213    2944/194    16   76   54.65)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 4096 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 4096 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 4096 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 6144 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 10240 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 18432 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 132608 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 8192 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 10240 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 18432 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 34816 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 34816 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 34816 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 51200 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 51200 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 83968 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 83968 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 83968 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 151102 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 151040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3229696 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3229696 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3229696 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3622912 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3622912 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 4147200 := 43540236729&43540236802
(smt.stats   22   2718  58329  93817  3722/3375/348    3127/225    18  115   55.05)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3885056 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3886592 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3886592 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3885056 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3885056 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5458944 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3361792 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 2312192 := 43540236729&2621442
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 2312192 := 43540236729&6293506
(smt.stats   23   2840  61088 104168  3976/3508/389    3436/273    19  126   55.29)
ramon: poll                 wall=5.000s usage=4.924s mem=57652KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   16.1323    370001      1813          8            1       38)
(smt.stats   24   2974  64974 116625  4025/3732/408    3921/324    20  128   55.45)
(smt.stats   25   3121  70361 132000  4064/3737/408    4159/583    21  157   55.93)
(smt.stats   26   3282  77573 153410  4074/3776/408    4364/583    21  157   55.93)
(smt.stats   27   3459  82934 168428  4095/3803/409    4791/709    22  161   56.12)
(smt.stats   28   3560  85218 174385  4179/3867/409    4978/709    22  161   56.22)
(smt.stats   29   3671  90828 189297  4185/3873/411    5195/879    24  174   56.31)
(smt.stats   30   3793  96955 201702  4203/3879/417    5440/880    24  174   56.50)
ramon: poll                 wall=6.000s usage=6.198s mem=58636KiB load=1.27 rootload=1.27
(sat.ddfw       1      1   14.6341    460001      2254          9            1       47)
(smt.stats   31   3927 100573 208796  4280/3968/420    5554/887    25  208   56.60)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 104976 227157  4289/3977/421    5745/887    25  208   56.70)
(smt.stats   33   4235 109885 242353  4421/3986/421    6032/900    26  218   56.79)
ramon: poll                 wall=7.000s usage=7.404s mem=59216KiB load=1.21 rootload=1.21
(sat.ddfw       1      1   13.3761    560001      2745         10            1       57)
ramon: poll                 wall=8.000s usage=8.445s mem=59240KiB load=1.04 rootload=1.04
ramon: poll                 wall=9.000s usage=9.445s mem=59284KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.3222    670001      3284         11            1       68)
(smt.stats   34   4412 114112 252702  4763/4171/424    6336/976    27  220   57.10)
ramon: poll                 wall=10.000s usage=10.443s mem=59388KiB load=1.00 rootload=1.00
(smt.stats   35   4606 119876 268959  4979/4487/424    6706/980    27  220   57.20)
(sat.ddfw       1      1   11.3766    790001      3872         12            1       80)
(smt.stats   36   4707 124208 285982  4995/4668/424    6835/1088    28  226   57.59)
ramon: poll                 wall=11.006s usage=11.454s mem=60124KiB load=1.00 rootload=1.00
(smt.stats   37   4818 127880 299703  5079/4725/424    6964/1088    28  226   57.59)
(smt.stats   38   4940 131162 311476  5198/4779/424    7192/1088    28  226   57.69)
ramon: poll                 wall=12.000s usage=12.442s mem=60008KiB load=0.99 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 86)
(sat.ddfw       1      1   10.5803    920001      4509         13            1       93)
(smt.stats   39   5074 135096 327116  5250/4914/424    7323/1090    28  226   57.69)
ramon: poll                 wall=13.000s usage=13.480s mem=60292KiB load=1.04 rootload=1.04
(smt.stats   40   5221 139386 338315  5539/4937/424    7569/1095    28  226   58.02)
ramon: poll                 wall=14.000s usage=14.493s mem=60436KiB load=1.01 rootload=1.01
(smt.stats   41   5382 143576 361686  5607/5259/424    7860/1096    28  226   58.11)
(sat.ddfw       1      1   9.97364   1060001      5196         14            1      108)
(smt.stats   42   5559 147665 380601  5801/5339/424    8191/1097    28  226   58.30)
ramon: poll                 wall=15.000s usage=15.491s mem=60640KiB load=1.00 rootload=1.00
(smt.stats   43   5753 152931 408922  6011/5514/424    8468/1100    28  226   58.30)
ramon: poll                 wall=16.000s usage=16.490s mem=60736KiB load=1.00 rootload=1.00
(smt.stats   44   5966 159011 427457  6106/5761/424    8763/1104    28  226   58.40)
(sat.ddfw       1      1   9.35279   1210001      5931         15            1      123)
(smt.stats   45   6067 161512 435799  6114/5795/424    9046/1104    28  226   58.40)
(smt.stats   46   6178 165163 446984  6210/5799/424    9241/1104    28  226   58.50)
(smt.stats   47   6300 170471 464855  6311/5911/424    9412/1107    28  226   58.50)
ramon: poll                 wall=17.000s usage=17.492s mem=60996KiB load=1.00 rootload=1.00
(smt.stats   48   6434 174710 481377  6335/6016/424    9583/1107    28  226   58.50)
(smt.stats   49   6581 180490 512823  6342/6023/424    9874/1107    28  226   58.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 185295 535141  6377/6035/424   10124/1109    28  226   58.59)
(smt.stats   51   6919 190080 556578  6386/6069/424   10433/1109    28  226   58.69)
ramon: poll                 wall=18.000s usage=18.489s mem=61348KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   8.80379   1370001      6715         16            1      139)
ramon: poll                 wall=19.000s usage=19.487s mem=61340KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=20.566s mem=61340KiB load=1.08 rootload=1.08
ramon: end                  Fri Nov  1 21:38:30 2024
ramon: root.execname        z3
ramon: root.utime           20.640s
ramon: root.stime           0.000s
ramon: group.total          20.656s
ramon: group.utime          20.648s
ramon: group.stime          0.008s
ramon: group.mempeak        61596KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.092s
ramon: loadavg              1.03
