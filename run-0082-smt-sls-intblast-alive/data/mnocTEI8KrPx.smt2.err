ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:04:24 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27472 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mnocTEI8KrPx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             919820
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   57.8035     10000        49          0            1        2)
(sat.ddfw       1      1   34.4862     20001        98          1            1        3)
(smt.stats    0    101   2958    381  1187/1078/113     103/17    11   17   52.06)
(sat.ddfw       1      1   39.4477     40001       196          2            1        5)
(smt.stats    1    202   4407   1033  1842/1580/115     205/23    12   18   52.16)
(sat.ddfw       1      1   35.9712     70001       343          3            1        8)
(smt.stats    2    313   5588   1834  1968/1713/115     347/24    13   19   52.25)
ramon: poll                 wall=1.000s usage=0.930s mem=54336KiB load=0.93 rootload=0.92
(smt.stats    3    414   8000   3795  2020/1827/116     469/34    14   23   52.35)
(smt.stats    4    525   8874   4762  2581/2318/121     583/109    17   29   52.55)
(sat.ddfw       1      1   31.5209    110001       539          4            1       12)
(smt.stats    5    647  12012   7663  2704/2407/122     722/111    18   30   52.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  14873   9667  2774/2534/122     850/111    18   30   52.75)
(smt.stats    7    859  17893  12195  2791/2568/123     977/164    19   32   52.75)
(sat.ddfw       1      1    27.639    160000       784          5            1       17)
(smt.stats    8    981  20342  18672  2813/2592/139    1080/177    21   50   52.85)
ramon: poll                 wall=2.000s usage=1.927s mem=55020KiB load=1.00 rootload=1.00
(smt.stats    9   1115  22902  23357  2843/2602/140    1220/187    22   50   52.94)
(smt.stats   10   1216  23474  24824  2861/2634/140    1323/187    22   50   52.94)
(smt.stats   11   1327  24439  26786  2885/2645/140    1441/191    22   50   52.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27947  31088  2890/2667/142    1557/197    23   55   53.05)
(sat.ddfw       1      1   24.4204    220001      1078          6            1       23)
(smt.stats   13   1583  30543  33355  2986/2757/145    1697/204    24   56   53.15)
(smt.stats   14   1730  31555  35299  3034/2768/145    1868/215    25   58   53.15)
ramon: poll                 wall=3.000s usage=2.924s mem=55252KiB load=1.00 rootload=1.00
(smt.stats   15   1831  33743  37947  3088/2818/145    1984/217    25   58   53.15)
(sat.ddfw       1      1   21.7662    290001      1421          7            1       30)
(smt.stats   16   1942  34428  39618  3104/2878/145    2111/217    25   58   53.24)
(smt.stats   17   2064  35515  42880  3153/2898/145    2258/220    25   58   53.24)
(smt.stats   18   2198  37176  46608  3199/2941/145    2412/220    25   58   53.24)
(smt.stats   19   2345  39857  49381  3205/2982/145    2559/220    25   58   53.40)
(smt.stats   20   2506  42063  51505  3216/2985/145    2725/220    25   58   53.62)
(smt.stats   21   2607  44052  53007  3219/2994/145    2825/220    25   58   53.62)
ramon: poll                 wall=4.000s usage=3.925s mem=55708KiB load=1.00 rootload=1.00
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 11280636117&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 11280636117&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 43 := 11280636160&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 42 := 11280636160&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 40 := 11280636160&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 32 := 11280636160&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 11280636160&168
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4409327147264 := 4398046511006 << 8
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 16 := 11280636160&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 11280636160&168
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4409327147264 := 4398046511006 << 8
(smt.stats   22   2718  47411  56241  3303/3010/145    2926/221    25   58   53.72)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4386765875097&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 11280636117&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 11280636160&168
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4409327147264 := 4398046511006 << 8
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 159 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 158 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 156 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 152 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 128 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 64 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4398046511005 := 4398046511006 << 8
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4398046510652 := 4398046511006 << 8
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 1 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 2 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 168 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 164 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 160 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 160 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 160 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 64 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 64 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 31 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 4 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 8 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 16 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 28 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 24 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 16 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 4 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 16 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 64 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 128 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 24 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 16 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 16 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 16 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 1 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 2 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 2 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 1 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 8 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 64 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 128 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 8 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 64 := 4398046486016&168
(sat.ddfw       1      1    19.603    370001      1813          8            1       38)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 64 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 128 := 4398046486016&168
(smt.stats   23   2840  49240  63680  3444/3127/260    3093/288    26   61   54.20)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 4 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 4398046486016&168
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 2 #704))) 4 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 4 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 4 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 32 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 32 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 32 := 4398046486016&168
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 32 := 4398046486016&168
(smt.stats   24   2974  51876  69531  3447/3214/327    3227/320    28  102   54.29)
(smt.stats   25   3121  55898  75053  3478/3239/332    3396/320    28  102   54.39)
(smt.stats   26   3282  61969  83262  3481/3242/333    3560/343    30  110   54.52)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 16 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 16 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 256 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 256 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 256 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 256 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1024 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1024 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1024 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1024 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1024 := 4398046511009&1344
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1280 := 4398046511009&1344
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4398046511009 := 4398046511009 << 11
(smt.stats   27   3459  66755  91084  3600/3353/375    3811/376    31  120   55.04)
(smt.stats   28   3560  70583  96776  3620/3367/377    3948/378    31  120   55.13)
(smt.stats   29   3671  73984 102462  3808/3538/379    4179/394    32  129   55.32)
(sat.ddfw       1      1   18.3001    460001      2254          9            1       47)
ramon: poll                 wall=5.003s usage=4.995s mem=57708KiB load=1.07 rootload=1.07
(smt.stats   30   3793  75828 105800  4064/3770/380    4425/395    32  129   55.56)
(smt.stats   31   3927  79132 117305  4296/4019/381    5089/441    33  132   55.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  85136 129111  4351/4038/381    5495/525    34  133   55.94)
ramon: poll                 wall=6.000s usage=5.957s mem=58204KiB load=0.97 rootload=0.96
(sat.ddfw       1      1    16.488    560001      2745         10            1       57)
(smt.stats   33   4235  90911 142004  4394/4108/381    5880/528    34  133   56.04)
(smt.stats   34   4412  98175 162706  4542/4232/382    6414/736    35  133   56.50)
ramon: poll                 wall=7.007s usage=7.007s mem=58640KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   15.2039    670001      3284         11            1       68)
(smt.stats   35   4606 103485 180338  4604/4287/382    6815/740    35  133   56.50)
(smt.stats   36   4707 106590 188400  4670/4348/383    6981/839    36  140   56.60)
ramon: poll                 wall=8.000s usage=7.997s mem=58716KiB load=1.00 rootload=1.00
(smt.stats   37   4818 109641 199214  4728/4416/383    7174/840    36  140   56.60)
(sat.ddfw       1      1   14.0845    790001      3872         12            1       80)
(smt.stats   38   4940 113212 217304  4737/4470/386    7404/921    37  149   56.60)
(smt.delete-inactive-clauses  :num-deleted-clauses 75)
(smt.stats   39   5074 115515 229637  4746/4476/390    7678/921    37  149   56.69)
ramon: poll                 wall=9.000s usage=8.997s mem=58996KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   40   5221 120393 254334  4872/4553/390    8017/1046    38  176   56.79)
(sat.ddfw       1      1   13.1181    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.997s mem=59208KiB load=1.00 rootload=1.00
(smt.stats   41   5382 124612 272647  4896/4595/390    8288/1046    38  176   56.98)
(smt.stats   42   5559 128400 288804  4911/4619/392    8841/1221    39  188   57.08)
ramon: poll                 wall=11.000s usage=10.997s mem=59452KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.2753   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.995s mem=59572KiB load=1.00 rootload=1.00
(smt.stats   43   5753 132791 306680  5183/4627/392    9463/1223    39  188   57.36)
ramon: poll                 wall=13.000s usage=12.996s mem=59740KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    11.534   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.995s mem=59956KiB load=1.00 rootload=1.00
(smt.stats   44   5966 137148 335309  5404/4939/392   10127/1233    39  188   57.55)
(sat.ddfw       1      1   10.8651   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=14.995s mem=60276KiB load=1.00 rootload=1.00
(smt.stats   45   6067 140167 347623  5478/5125/392   10574/1235    39  188   57.91)
(smt.stats   46   6178 143789 370632  5535/5196/392   10890/1240    39  188   57.91)
ramon: poll                 wall=16.000s usage=15.994s mem=60308KiB load=1.00 rootload=1.00
(smt.stats   47   6300 147685 386221  5589/5255/392   11261/1241    39  188   57.91)
(sat.ddfw       1      1   10.2576   1540001      7549         17            1      156)
(smt.stats   48   6434 152142 402157  5664/5375/393   11723/1625    40  206   58.10)
ramon: poll                 wall=17.000s usage=16.994s mem=60344KiB load=1.00 rootload=0.99
(smt.stats   49   6581 156186 423775  5684/5385/393   12299/1627    40  206   58.10)
(smt.stats   50   6742 160843 450328  5750/5407/394   12593/1876    41  210   58.19)
ramon: poll                 wall=18.000s usage=18.088s mem=60484KiB load=1.09 rootload=1.10
(smt.stats   51   6919 164555 470857  5822/5533/395   13015/1876    41  210   58.19)
(sat.ddfw       1      1    9.7208   1720001      8431         18            1      174)
(smt.stats   52   7113 171009 496095  5917/5538/395   13485/1922    42  215   58.33)
ramon: poll                 wall=19.003s usage=19.246s mem=60796KiB load=1.15 rootload=1.16
(smt.stats   53   7326 180699 530361  5970/5681/396   13875/1922    42  215   58.42)
(smt.stats   54   7560 188822 560765  5975/5686/397   14149/2032    44  227   58.52)
(smt.stats   55   7661 195630 584224  5980/5691/397   14312/2032    44  227   58.52)
(smt.stats   56   7772 199132 600601  5984/5695/398   14527/2080    45  235   58.52)
ramon: poll                 wall=20.000s usage=20.242s mem=60840KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 23:04:44 2024
ramon: root.execname        z3
ramon: root.utime           20.240s
ramon: root.stime           0.000s
ramon: group.total          20.255s
ramon: group.utime          20.251s
ramon: group.stime          0.004s
ramon: group.mempeak        61100KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              1.01
