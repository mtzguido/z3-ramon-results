ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:01:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27486 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/khbGxvu787ei.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             909366
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   84.0336     10000        49          0            1        2)
(sat.ddfw       1      1   41.3264     20001        98          1            1        3)
(smt.stats    0    101   4723    449  1301/1160/110      94/19     8   18   52.15)
(smt.stats    1    202   6373   1656  1993/1778/110     204/57     8   18   52.35)
(sat.ddfw       1      1   42.1053     40001       196          2            1        5)
(smt.stats    2    313   8352   2881  2462/2190/113     309/68     9   21   52.44)
(smt.stats    3    414   9973   4323  2671/2423/114     418/75    11   23   52.54)
(sat.ddfw       1      1   36.3196     70001       343          3            1        8)
(smt.stats    4    525  12802   5824  2761/2513/121     530/88    14   34   52.65)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927933 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927932 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927932 := 72057594037927935&72057594037927933
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927932 := 72057594037927935&72057594037927933
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927928
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927927
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927765
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927764 := 72057594037927935&72057594037927765
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927768
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927776
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927765
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 12 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 7 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 52 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 84 := 72057594037927935&72057594037927764
(smt.stats    5    648  14275   7222  2867/2615/199     670/98    16   52   53.04)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 32 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 36 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 52 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 52 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 55 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 54 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 54 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 87 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 84 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 86 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 86 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 212 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 150 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 150 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 150 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 150 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 534 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 215 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 214 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 214 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 598 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 598 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1879 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
ramon: poll                 wall=1.000s usage=0.997s mem=55352KiB load=1.00 rootload=0.99
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927763
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  15638  13040  3042/2788/265     834/139    17   66   53.24)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927762
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 562949953421311&72057594037927766
(smt.stats    7    860  18012  19193  3074/2820/278    1007/172    18   73   53.43)
(smt.stats    8    982  21589  24715  3109/2854/291    1146/212    22  136   53.53)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66592
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66592
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66592
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66592
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 152 := 72057594037927935&4256
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 152 := 72057594037927935&4264
(smt.stats    9   1116  22559  27030  3315/2902/313    1385/281    23  143   53.92)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 136 := 72057594037927935&32936
(sat.ddfw       1      1    30.888    110001       539          4            1       12)
(smt.stats   10   1217  23817  29716  3465/3168/313    1522/327    24  147   53.92)
(smt.stats   11   1328  25849  34602  3551/3227/313    1722/328    24  147   54.01)
(sat.ddfw       1      1   30.0294    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  29648  46544  3617/3362/321    2073/402    25  149   54.20)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 326 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 327 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 335 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 335 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 207 := 72057594037927935&28879
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 207 := 72057594037927935&28879
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 207 := 72057594037927935&28879
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&28879
(smt.stats   13   1586  32197  56847  3773/3476/342    2554/683    27  169   54.30)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 719 := 72057594037927935&28879
ramon: poll                 wall=2.000s usage=2.158s mem=56428KiB load=1.16 rootload=1.16
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 719 := 72057594037927935&17039
(smt.stats   14   1733  34069  64399  3987/3537/357    2928/696    27  169   54.39)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
(smt.stats   15   1834  35909  70344  4085/3778/373    3238/798    29  175   54.59)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 12435 := 18014398509481983&73874
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 12435 := 18014398509481983&73874
(sat.ddfw       1      1   27.7397    220001      1078          6            1       23)
(smt.stats   16   1945  37430  75421  4232/3837/373    3589/806    29  175   54.75)
(smt.stats   17   2067  41144  83530  4328/4049/385    4141/946    30  176   54.90)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 9732 := 549755813887&13828
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 9732 := 549755813887&13828
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9367487224930645508 := 143833713099145698 << 38
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9367487224930645508 := 143833713099145698 << 38
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9367487224930645508 := 143833713099145698 << 38
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9295429630892717572 := 143833713099145698 << 38
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9295429630892717572 := 143833713099145698 << 38
(smt.stats   18   2201  44619  96885  4438/4075/386    4715/1195    31  210   54.99)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 24576 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 65536 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 131072 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 262144 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 524288 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1048576 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2097152 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4194304 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 8388608 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16777216 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 33554432 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 67108864 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 134217728 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 268435456 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 536870912 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 536870912 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1073741824 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2147483648 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4294967296 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 8589934592 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 17179869184 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 34359738368 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 68719476736 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 137438953472 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 274877906944 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16384 := 549755813887&132491151147008
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   19   2348  47045 107453  4648/4390/504    5107/1633    33  241   55.68)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16384 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16384 := 549755813887&132491151147008
ramon: poll                 wall=3.000s usage=3.187s mem=58020KiB load=1.03 rootload=1.02
(sat.ddfw       1      1   23.4035    290001      1421          7            1       30)
(smt.stats   20   2509  50962 114284  4764/4408/509    5630/1635    33  241   55.87)
(smt.stats   21   2610  55503 131727  4781/4520/514    5951/1840    34  243   55.97)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4099 := 72057594037927935&131075
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 32771 := 72057594037927935&131075
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16387 := 72057594037927935&131075
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 65539 := 72057594037927935&131075
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 65539 := 72057594037927935&131075
(smt.stats   22   2721  57794 136300  5025/4570/514    6223/1958    35  243   55.97)
(smt.stats   23   2843  59904 146016  5137/4883/520    6497/2046    36  245   56.06)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 65539 := 36028797018963967&65539
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9439544818968625155 := 450 << 54
ramon: poll                 wall=4.000s usage=4.146s mem=58532KiB load=0.96 rootload=0.96
(smt.stats   24   2977  64292 163580  5224/4893/520    6897/2058    36  245   56.27)
(sat.ddfw       1      1     19.97    370001      1813          8            1       38)
(smt.stats   25   3124  70093 182417  5345/5033/526    7186/2132    37  246   56.37)
(smt.stats   26   3285  76355 208649  5417/5162/527    7567/2364    39  253   56.46)
ramon: poll                 wall=5.000s usage=5.141s mem=58788KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   17.8253    460001      2254          9            1       47)
(smt.stats   27   3462  81192 232796  5515/5260/531    7983/2439    40  255   56.56)
ramon: poll                 wall=6.000s usage=6.138s mem=59044KiB load=1.00 rootload=1.00
(smt.stats   28   3563  85658 247088  5570/5298/540    8500/2663    41  261   56.65)
(sat.ddfw       1      1   16.1057    560001      2745         10            1       57)
(smt.stats   29   3674  90154 269741  5622/5322/540    8624/2766    42  282   56.75)
(smt.stats   30   3796  94587 282542  5670/5375/541    8777/2775    43  284   56.94)
ramon: poll                 wall=7.000s usage=7.138s mem=59300KiB load=1.00 rootload=1.00
(smt.stats   31   3930  97847 305358  5761/5506/542    9007/2829    44  285   57.04)
(sat.ddfw       1      1   14.7157    670001      3284         11            1       68)
(smt.stats   32   4077 102643 318245  5804/5516/543    9449/2839    44  285   57.23)
ramon: poll                 wall=8.000s usage=8.264s mem=59400KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   14.1543    790001      3872         12            1       80)
(smt.stats   33   4238 110932 348885  6001/5746/544    9837/3159    46  297   57.23)
ramon: poll                 wall=9.000s usage=9.406s mem=59492KiB load=1.14 rootload=1.14
(smt.stats   34   4415 117667 383386  6178/5762/546   10222/3167    46  297   57.32)
ramon: poll                 wall=10.000s usage=10.401s mem=59632KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   13.0065    920001      4509         13            1       93)
(smt.stats   35   4609 122423 399693  6406/6008/546   10608/3287    47  308   57.42)
ramon: poll                 wall=11.002s usage=11.404s mem=59688KiB load=1.00 rootload=1.01
(smt.stats   36   4710 126329 429151  6443/6176/548   10816/3319    48  313   57.42)
(smt.stats   37   4821 130695 455206  6451/6196/553   11092/3525    49  321   57.52)
(smt.stats   38   4943 134117 481543  6509/6217/556   11243/3530    49  321   57.52)
(sat.ddfw       1      1   12.0265   1060001      5196         14            1      108)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=12.000s usage=12.398s mem=59904KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   39   5077 138776 503468  6591/6315/558   11501/3538    50  366   57.88)
(smt.stats   40   5224 143772 536702  6765/6367/558   12049/3622    51  366   57.98)
ramon: poll                 wall=13.000s usage=13.507s mem=60244KiB load=1.11 rootload=1.11
(smt.stats   41   5385 150033 587606  6794/6528/558   12479/3623    51  366   58.07)
(sat.ddfw       1      1   11.2082   1210001      5931         15            1      123)
(smt.stats   42   5562 155603 623900  6851/6568/559   12956/4176    52  369   58.17)
ramon: poll                 wall=14.000s usage=14.575s mem=60316KiB load=1.07 rootload=1.07
(smt.stats   43   5756 160546 652911  7025/6606/559   13171/4178    52  369   58.17)
ramon: poll                 wall=15.000s usage=15.570s mem=60468KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   10.5077   1370001      6715         16            1      139)
(smt.stats   44   5969 165526 675670  7234/6782/559   13419/4184    52  369   58.28)
(smt.stats   45   6070 168840 697151  7267/7011/561   13866/4262    53  373   58.38)
ramon: poll                 wall=16.000s usage=16.772s mem=60616KiB load=1.20 rootload=1.21
(sat.ddfw       1      1   10.1626   1540001      7549         17            1      156)
(smt.stats   46   6181 171906 706774  7381/7013/561   14051/4595    54  374   58.47)
ramon: poll                 wall=17.002s usage=17.844s mem=60704KiB load=1.07 rootload=1.07
(smt.stats   47   6303 176452 731739  7488/7172/561   14284/4598    54  374   58.47)
ramon: poll                 wall=18.000s usage=18.841s mem=60788KiB load=1.00 rootload=0.99
(smt.stats   48   6437 180201 751599  7652/7270/561   14491/4600    54  374   58.57)
(sat.ddfw       1      1    9.6082   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=19.926s mem=60828KiB load=1.08 rootload=1.09
(smt.stats   49   6584 184042 782664  7699/7431/563   14747/4732    55  393   58.57)
(smt.stats   50   6745 188651 797499  7918/7662/568   14945/4787    56  393   58.57)
ramon: poll                 wall=20.000s usage=20.928s mem=60896KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:01:34 2024
ramon: root.execname        z3
ramon: root.utime           20.980s
ramon: root.stime           0.010s
ramon: group.total          21.002s
ramon: group.utime          20.990s
ramon: group.stime          0.012s
ramon: group.mempeak        61164KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.083s
ramon: loadavg              1.05
