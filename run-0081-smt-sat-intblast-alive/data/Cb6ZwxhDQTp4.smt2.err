ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:54:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29453 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Cb6ZwxhDQTp4.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             310905
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   250/250     0/0  63       0    18.52   0.00)
(sat.stats    115    840    0   250/250   115/41  63       0    18.88   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 322 :time 0.00)
(sat.stats    115    840    0   250/250   115/41  63       0    18.88   0.01)
(sat.stats    115    840    0   250/250   115/41  63       0    18.88   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 409618.88 :time 0.00)
(sat.stats    115    840    0   252/252    51/40  63       0    18.88   0.01)
(sat.stats    165    934    1   252/252   101/62  63       0    18.97   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    168    947    2   252/252   104/62  63       0    18.97   0.01)
(sat.stats    300   2302    3   252/252   236/153  63       0    19.19   0.01)
(sat.stats    303   2336    4   252/252   239/154  63       0    19.19   0.01)
(sat.stats    306   2386    5   252/252   242/154  63       0    19.19   0.01)
(sat.stats    309   2430    6   252/252   245/155  63       0    19.19   0.01)
(sat.stats    312   2479    7   252/252   248/156  63       0    19.19   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    315   2513    8   252/252   251/157  63       0    19.19   0.01)
(sat.stats    318   2529    9   252/252   254/159  63       0    19.19   0.01)
(sat.stats    321   2565   10   252/252   257/162  63       0    19.19   0.01)
(sat.stats    324   2581   11   252/252   260/165  63       0    19.19   0.01)
(sat.stats    328   2589   12   252/252   264/168  63       0    19.19   0.01)
(sat.stats    331   2595   13   252/252   267/171  63       0    19.19   0.01)
(sat.stats    335   2608   14   252/252   271/174  63       0    19.19   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2983 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3354 :time 0.00)
(sat.stats    500   8513   21   253/253   369/184  76       0    19.59   0.05)
 (sat-cleaner :elim-literals 59 :elim-clauses 1 :cost 4525 :time 0.00)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %1) 59)) 1 := 1 >>l 2
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 0 := 0&432345564227567616
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 5 #63 #323) 64)) 16717361816799302156 := 0 >>l 7
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 5373 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 1 := 1&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 2 := 2&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 4 := 4&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 8 := 8&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 16 := 16&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 32 := 32&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 64 := 64&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 128 := 128&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 256 := 256&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 512 := 512&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 1024 := 1024&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 2048 := 2048&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 4096 := 4096&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 8192 := 8192&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 16384 := 16384&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 32768 := 32768&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 65536 := 65536&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 131072 := 131072&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 262144 := 262144&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 524288 := 524288&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 1048576 := 1048576&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 2097152 := 2097152&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 4194304 := 4194304&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 8388608 := 8388608&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 16777216 := 16777216&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 33554432 := 33554432&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 67108864 := 67108864&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 134217728 := 134217728&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 268435456 := 268435456&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 536870912 := 536870912&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 1073741824 := 1073741824&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 2147483648 := 2147483648&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 4294967296 := 4294967296&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 8589934592 := 8589934592&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 17179869184 := 17179869184&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 34359738368 := 34359738368&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 68719476736 := 68719476736&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 137438953472 := 137438953472&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 274877906944 := 274877906944&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 549755813888 := 549755813888&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 1099511627776 := 1099511627776&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 2199023255552 := 2199023255552&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 4398046511104 := 4398046511104&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 8796093022208 := 8796093022208&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 17592186044416 := 17592186044416&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 35184372088832 := 35184372088832&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 70368744177664 := 70368744177664&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 140737488355328 := 140737488355328&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 281474976710656 := 281474976710656&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 562949953421312 := 562949953421312&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 1125899906842624 := 1125899906842624&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 2251799813685248 := 2251799813685248&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 4503599627370496 := 4503599627370496&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 9007199254740992 := 9007199254740992&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 18014398509481984 := 18014398509481984&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 36028797018963968 := 36028797018963968&432345564227567616
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 83076749736557241768257565115809792 (if #490 41538374868278620884128782557904896 #604))) 72057594037927936 := 72057594037927936&432345564227567616
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 6506 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units         :memory       )
(sat.stats    950  20156   42 21352/21350  1625/1025 464       0    27.94   0.75)
(sat.stats   1065  20401   68 21352/21350  1740/1039 464       0    27.94   0.77)
ramon: poll                 wall=1.002s usage=0.927s mem=29308KiB load=0.93 rootload=0.92
ramon: poll                 wall=2.000s usage=1.925s mem=29896KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.924s mem=30120KiB load=1.00 rootload=1.00
(sat.stats   1634  37174  144 26268/26266  2365/1297 464       0    29.30   3.02)
 (sat-cleaner :elim-literals 30 :elim-clauses 0 :cost 18505 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20078 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20078 :time 0.00)
ramon: poll                 wall=4.000s usage=3.924s mem=37956KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.924s mem=41364KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 20425 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20422 :time 0.00)
ramon: poll                 wall=6.000s usage=5.924s mem=42300KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.923s mem=44280KiB load=1.00 rootload=1.00
(sat.stats   2396 103112  261 160687/160685  4614/3068 529       0    43.32   7.42)
ramon: poll                 wall=8.002s usage=7.924s mem=44572KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 31338 :time 0.00)
ramon: poll                 wall=9.000s usage=8.922s mem=45352KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.922s mem=46380KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.921s mem=46684KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.921s mem=47388KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.921s mem=48680KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.921s mem=51272KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.002s usage=14.920s mem=51752KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.916s mem=64036KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.916s mem=64844KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.916s mem=65952KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.916s mem=67224KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.915s mem=70552KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:54:26 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.001s
ramon: group.utime          19.973s
ramon: group.stime          0.028s
ramon: group.mempeak        71064KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.083s
ramon: loadavg              1.00
