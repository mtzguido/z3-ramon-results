ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:06:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41760 MiB
ramon: sys.mem.avail        61385 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7gPQZXUIzy9b.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3698263
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   139/137     0/0  58       0    18.44   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 167 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 168 :time 0.00)
(sat.stats    400   5914    0   150/148   395/383  69       0    18.83   0.03)
(sat.stats    400   5914    0   150/148   395/383  69       0    18.83   0.03)
(sat.stats    400   5914    0   150/148   395/383  69       0    18.83   0.03)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 398618.83 :time 0.00)
(sat.stats    400   5914    0   144/142   414/400  69       0    18.83   0.03)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 217 :time 0.00)
(sat.stats    617  11938    1   144/142   629/593  70       0    19.06   0.07)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats      :decisions     :clauses/bin      :units        :memory       )
(sat.stats    620  12068    2   144/142   632/596  70       0    19.06   0.07)
(sat.stats    631  12451    3   148/146   643/605  70       0    19.06   0.07)
(sat.stats    635  12482    4   153/151   647/605  70       0    19.15   0.08)
(sat.stats    638  12545    5   156/154   650/605  70       0    19.15   0.08)
(sat.stats    641  12642    6   160/158   653/605  70       0    19.15   0.08)
(sat.stats    644  12691    7   167/165   656/605  70       0    19.15   0.08)
(sat.stats    647  12750    8   169/167   659/605  70       0    19.15   0.08)
(sat.stats    651  12833    9   171/169   663/605  70       0    19.15   0.08)
(sat.stats    654  12841   10   175/173   666/605  70       0    19.15   0.08)
(sat.stats    658  12924   11   177/175   670/605  70       0    19.15   0.08)
 (sat-cleaner :elim-literals 9 :elim-clauses 2 :cost 457 :time 0.00)
(sat.stats    661  13014   12   177/175   670/607  71       0    19.15   0.09)
(sat.stats    665  13165   13   177/175   674/607  71       0    19.15   0.09)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 462 :time 0.00)
(sat.stats    668  13256   14   183/180   676/608  73       0    19.15   0.09)
(sat.stats    671  13408   15   193/188   679/610  73       0    19.15   0.09)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 477 :time 0.00)
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 27803 := 111 << 11
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&227328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 0 := 222 << 10
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 511 :time 0.00)
(sat.stats    711  14945   28   284/275   719/616  79       0    19.25   0.11)
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 192512 := 36028797018964062 << 7
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 866 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2344 :time 0.00)
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1065  24767  118  4541/4531  1082/634  84       0    20.02   0.54)
ramon: poll                 wall=1.000s usage=0.999s mem=21688KiB load=1.00 rootload=0.99
(sat.stats   1599  38451  258  9653/9643  1624/805  84       0    20.57   1.00)
(sat.stats   2602  71009  336  9653/9643  2629/1005  84       0    21.58   1.34)
(sat.stats   3595 106828  447  9653/9643  3626/1221  84       0    22.63   1.71)
ramon: poll                 wall=2.000s usage=1.998s mem=24152KiB load=1.00 rootload=1.00
(sat.stats   5676 184653  806  9719/9709  4936/1398  84       0    23.15   2.41)
 (sat-cleaner :elim-literals 111 :elim-clauses 0 :cost 21479 :time 0.00)
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 90071992547409920 << 39
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 4193234357019956396 := 180143985094819840 << 38
ramon: poll                 wall=3.000s usage=2.998s mem=24836KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 24438 :time 0.00)
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 144115188075855872 << 38
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 1887391347806293915 := 288230376151711744 << 37
(sat.stats   8142 254100 1078 13899/13885  6261/1624 104       0    23.96   3.65)
 (sat-cleaner :elim-literals 27 :elim-clauses 7 :cost 27674 :time 0.00)
ramon: poll                 wall=4.000s usage=3.998s mem=25576KiB load=1.00 rootload=1.00
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 1351079888211148800 << 36
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 2702159776422297600 := 2702159776422297600 << 35
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 33552 :time 0.00)
ramon: poll                 wall=5.000s usage=4.997s mem=27500KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 36147 :time 0.00)
(sat.stats :conflicts :restarts         :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats  12140 344314 1642 16102/16088  8344/2204 111       0    26.31   5.26)
ramon: poll                 wall=6.000s usage=5.997s mem=28172KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=29992KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.996s mem=30380KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=30652KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 48425 :time 0.00)
ramon: poll                 wall=10.000s usage=9.996s mem=31016KiB load=1.00 rootload=1.00
(sat.stats  19285 499193 1861 30087/30073 12084/2741 116       0    29.55  10.18)
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 9223372036854775810 := 4395513236313604096 << 60
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 53188 :time 0.00)
ramon: poll                 wall=11.000s usage=10.995s mem=31180KiB load=1.00 rootload=1.00
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 828662331436171264 << 5
ramon: poll                 wall=12.000s usage=11.995s mem=31300KiB load=1.00 rootload=1.00
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 2035627031571464192 << 3
ramon: poll                 wall=13.000s usage=12.995s mem=31812KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 33162 :time 0.00)
ramon: poll                 wall=14.000s usage=13.995s mem=31860KiB load=1.00 rootload=1.00
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 2251799813685248000 << 60
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 4503599627370496000 := 4503599627370496000 << 59
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34036 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 37131 :time 0.00)
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 18014398509481984 << 20
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 4193234357019981021 := 36028797018963968 << 19
ramon: poll                 wall=15.000s usage=14.994s mem=32048KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 37878 :time 0.00)
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 108086391056891904 << 59
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 13835058055282161522 := 216172782113783808 << 58
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 40528 :time 0.00)
ramon: poll                 wall=16.000s usage=15.994s mem=32240KiB load=1.00 rootload=0.99
(sat.stats  27310 817502 3130 31718/31689 11591/3521 159    4848    30.91  16.21)
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 0 := 36028797018963968 << 40
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 2305843009213687984 := 72057594037927936 << 39
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 42309 :time 0.00)
ramon: poll                 wall=17.000s usage=16.994s mem=33084KiB load=1.00 rootload=1.00
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2305843009213692800 := 36028797018963959 << 49
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 45294 :time 0.00)
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 3456 := 36028797018963995 << 13
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 4352 := 36028797018964002 << 6
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 4608 := 36028797018964004 << 4
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&576460752303424064
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 4611686018427387904 := 72057594037928008 << 3
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 14533 := 36028797018963951 << 57
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2161727821137838080
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423216 := 72057594037927902 << 56
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 1441151880758558720 := 36028797018963994 << 14
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 432345564227567616 := 36028797018963971 << 37
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&412316860416
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423536 := 72057594037927942 << 36
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&4224
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303424016 := 72057594037928002 << 6
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 4096 := 36028797018964000 << 8
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&8192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303424000 := 72057594037928000 << 7
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 6400 := 36028797018963993 << 15
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&819200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423888 := 72057594037927986 << 14
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 688128 := 36028797018963989 << 19
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&11010048
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423824 := 72057594037927978 << 18
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2816 := 36028797018963979 << 29
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&5905580032
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423664 := 72057594037927958 << 28
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2305843009213692928 := 36028797018963964 << 44
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2305772640469516288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423424 := 72057594037927928 << 43
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 15032385536 := 36028797018963996 << 12
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&114688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423936 := 72057594037927992 << 11
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&1152921504606848096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303424048 := 72057594037928006 << 4
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 94208 := 36028797018963991 << 17
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&3014656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423856 := 72057594037927982 << 16
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 77824 := 36028797018963987 << 21
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&39845888
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423792 := 72057594037927974 << 20
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 98304 := 36028797018963992 << 16
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&1572864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423872 := 72057594037927984 << 15
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 126976 := 36028797018963999 << 9
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&15872
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423984 := 72057594037927998 << 8
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 7168 := 36028797018963982 << 26
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&939524096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423712 := 72057594037927964 << 25
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2176
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303424032 := 72057594037928004 << 5
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 62914560 := 36028797018963998 << 10
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&30720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423968 := 72057594037927996 << 9
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 8192 := 36028797018963976 << 32
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&34359738368
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423616 := 72057594037927952 << 31
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 77309411328 := 36028797018963986 << 22
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&75497472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423776 := 72057594037927972 << 21
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 92274688 := 36028797018963990 << 18
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&5767168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423840 := 72057594037927980 << 17
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 3145728 := 36028797018963980 << 28
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&3221225472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423680 := 72057594037927960 << 27
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 1310720 := 36028797018963973 << 35
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&171798691840
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423568 := 72057594037927946 << 34
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&221184
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423920 := 72057594037927990 << 12
ramon: poll                 wall=18.000s usage=17.994s mem=34348KiB load=1.00 rootload=0.99
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 584115552256 := 36028797018963985 << 23
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&142606336
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423760 := 72057594037927970 << 22
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 446676598784 := 36028797018963981 << 27
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&1744830464
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423696 := 72057594037927962 << 26
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 1342177280 := 36028797018963978 << 30
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&10737418240
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423648 := 72057594037927956 << 29
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 939524096 := 36028797018963975 << 33
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&60129542144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423600 := 72057594037927950 << 32
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 805306368 := 36028797018963974 << 34
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&103079215104
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423584 := 72057594037927948 << 33
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2147483648 := 36028797018963984 << 24
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&268435456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423744 := 72057594037927968 << 23
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2013265920 := 36028797018963983 << 25
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&503316480
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423728 := 72057594037927966 << 24
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 1207959552 := 36028797018963977 << 31
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&19327352832
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423632 := 72057594037927954 << 30
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&425984
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423904 := 72057594037927988 << 13
ramon: poll                 wall=19.000s usage=18.994s mem=35660KiB load=1.00 rootload=1.00
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2300776459632902144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423344 := 72057594037927918 << 48
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2300213509679480832 := 36028797018963958 << 50
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2294584010145267712
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423328 := 72057594037927916 << 49
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2293458110238425088 := 36028797018963957 << 51
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2281073211263156224
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423312 := 72057594037927914 << 50
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2274317811822100480 := 36028797018963954 << 54
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2053641430080946176
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423264 := 72057594037927908 << 53
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2035627031571464192 := 36028797018963953 << 55
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&1765411053929234432
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423248 := 72057594037927906 << 54
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 1837468647967162368 := 36028797018963955 << 53
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2188749418902061056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423280 := 72057594037927910 << 52
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2017612633061982208 := 36028797018963960 << 48
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2303591209400008704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423360 := 72057594037927920 << 47
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2301339409586323456 := 36028797018963952 << 56
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&1152921504606846976
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423232 := 72057594037927904 << 55
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 1441151880758558720 := 36028797018963956 << 52
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2251799813685248000
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423296 := 72057594037927912 << 51
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2224778215921025024 := 36028797018963950 << 58
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&1729382256910270464
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423200 := 72057594037927900 << 57
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2303872684376719360 := 36028797018963961 << 47
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2304857846795206656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423376 := 72057594037927922 << 46
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2304998584283561984 := 36028797018963965 << 43
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2305816620934627328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423440 := 72057594037927930 << 42
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2304435634330140672 := 36028797018963963 << 45
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2305667087353249792
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423408 := 72057594037927926 << 44
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2305280059260272640 := 36028797018963966 << 42
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2305834213120671744
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423456 := 72057594037927932 << 41
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2305561534236983296 := 36028797018963967 << 41
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2305840810190438400
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423472 := 72057594037927934 << 40
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #50))) 2305829815074160640 := 36028797018963962 << 46
band: (band[61] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #602 1 #604)) (shl[61] (bv2int %0) (+ 61 #836))) 0 := 0&2305420796748627968
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #847 #849) 64)) 576460752303423392 := 72057594037927924 << 45
ramon: poll                 wall=20.000s usage=19.993s mem=37280KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:06:21 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.030s
ramon: group.total          20.003s
ramon: group.utime          19.971s
ramon: group.stime          0.032s
ramon: group.mempeak        37792KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
