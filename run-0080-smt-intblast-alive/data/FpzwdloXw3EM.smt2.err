ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:58:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28322 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FpzwdloXw3EM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4144163
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5950    601  1279/1154/113      91/13     9   18   19.37)
(smt.stats    1    202   8007   2142  2520/2280/114     191/13    10   19   19.56)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 72057594037927935 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 2 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 2 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 0 := 36028797018963969 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 72057594037927935 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 2 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 36028797018963969 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963967&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 2&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963964&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963964&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 4 := 36028797018963965 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 36028797018963963 := 36028797018963969 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 36028797018963962 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 36028797018963961 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 4 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 8 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 16 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 32 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 64 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 128 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 128 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 256 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 512 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 1024 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 2048 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 4096 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 8192 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 16384 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 32768 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 65536 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 131072 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 16384 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 32768 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 65536 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 131072 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 262144 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 262144 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 524288 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 1048576 := 36028797018963968&36028797018963962
(smt.stats    2    313   9918   3149  2733/2315/115     335/17    11   19   20.36)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 6291455 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 6291454 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 6291456 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 6291456 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 6291456 := 36028797018963968&36028797018963962
(smt.stats    3    414  10781   4086  2843/2491/237     555/38    12   45   20.65)
(smt.stats    4    525  13588   7860  2928/2673/268     833/116    15   66   20.85)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 4&1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 4&1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 72057594037927933&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927933 := 72057594037927933 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 72057594037927933&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927933 := 72057594037927933 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 72057594037927933&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927933 := 72057594037927933 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 72057594037927933&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927933 := 72057594037927933 << 1
(smt.stats    5    647  18414  10778  3077/2798/275     972/157    17   68   20.95)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&1
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 4194304 := 0 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  22546  15189  3146/2851/282    1137/158    18   69   21.04)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&1
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 4194304 := 0 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 9248&1
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 1 := 9248&1
(smt.stats    7    859  25977  19322  3218/2941/293    1383/286    21   79   21.16)
(smt.stats    8    981  28476  23712  3316/3023/308    1573/346    23  143   21.26)
(smt.stats    9   1115  33685  31716  3415/3116/313    1893/418    24  154   21.48)
(smt.stats   10   1216  35132  37574  3420/3123/314    2028/449    25  156   21.48)
ramon: poll                 wall=1.000s usage=0.911s mem=22928KiB load=0.91 rootload=0.90
(smt.stats   11   1327  37180  42819  3478/3126/314    2198/451    25  156   21.57)
(smt.stats   12   1449  40724  52104  3614/3214/314    2524/457    25  156   21.67)
(smt.stats   13   1583  44305  57716  3720/3412/324    2732/574    27  182   21.79)
(smt.stats   14   1730  48709  64369  3802/3455/324    2924/577    27  182   21.89)
ramon: poll                 wall=2.000s usage=1.911s mem=23184KiB load=1.00 rootload=1.00
(smt.stats   15   1831  52565  67455  3879/3555/324    3057/577    27  182   21.89)
(smt.stats   16   1942  55610  74537  3907/3600/325    3247/615    28  184   21.89)
(smt.stats   17   2064  58975  81327  3941/3629/329    3503/779    29  186   21.89)
(smt.stats   18   2198  63213  92677  3976/3677/330    3662/796    31  207   21.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2345  66343 101317  4066/3731/331    3845/813    32  207   22.10)
(smt.stats   20   2506  69869 114693  4089/3792/332    4195/835    33  213   22.10)
(smt.stats   21   2607  70287 118734  4096/3798/332    4306/835    33  213   22.20)
ramon: poll                 wall=3.000s usage=2.910s mem=23472KiB load=1.00 rootload=1.00
(smt.stats   22   2718  74987 129621  4147/3803/332    4530/839    33  213   22.20)
(smt.stats   23   2840  78103 137734  4263/3923/332    4838/841    33  213   22.30)
(smt.stats   24   2974  79130 144026  4270/3972/333    5012/1081    34  216   22.33)
(smt.stats   25   3121  83085 151982  4415/4112/334    5247/1131    35  219   22.43)
(smt.stats   26   3282  85423 164690  4431/4124/335    5459/1131    35  219   22.43)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 0 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 36028797018963956 := 0 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 0 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 36028797018963956 := 0 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 24019198013341694 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 36028797021068282 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 36028797021068282 << 2
ramon: poll                 wall=4.000s usage=3.910s mem=24172KiB load=1.00 rootload=1.00
(smt.stats   27   3459  88974 175207  4502/4184/347    5773/1172    36  219   22.62)
(smt.stats   28   3560  91053 180246  4585/4245/347    5995/1268    37  227   22.71)
(smt.stats   29   3671  94074 188664  4785/4287/347    6439/1280    37  227   22.71)
(smt.stats   30   3793  97948 198954  4940/4495/347    6758/1280    37  227   22.81)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3927 100058 204313  5248/4940/348    7022/1591    38  228   22.93)
(smt.stats   32   4074 105092 217047  5505/5177/349    7634/1599    38  228   23.02)
ramon: poll                 wall=5.000s usage=4.909s mem=24388KiB load=1.00 rootload=1.00
(smt.stats   33   4235 110195 233228  5688/5208/349    7929/1800    39  233   23.12)
(smt.stats   34   4412 113226 241495  5829/5515/349    8282/1800    39  233   23.23)
(smt.stats   35   4606 116525 250703  5885/5542/351    8694/1910    40  243   23.33)
(smt.stats   36   4707 118204 258157  5922/5593/351    8883/1910    40  243   23.42)
(smt.stats   37   4818 121657 270001  6037/5619/351    9051/1912    40  243   23.52)
(smt.stats   38   4940 123113 280498  6050/5730/351    9239/1912    40  243   23.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 1140)
ramon: poll                 wall=6.000s usage=5.909s mem=24912KiB load=1.00 rootload=1.00
(smt.stats   39   5074 125178 289860  6074/5736/351    8323/1913    40  243   23.62)
(smt.stats   40   5221 127864 297623  6083/5763/351    8478/1913    40  243   23.62)
(smt.stats   41   5382 130936 316429  6124/5767/351    8678/1913    40  243   23.62)
(smt.stats   42   5559 135142 340018  6148/5819/354    8927/2118    41  245   23.62)
ramon: poll                 wall=7.000s usage=6.909s mem=24984KiB load=1.00 rootload=1.00
(smt.stats   43   5753 144215 359894  6272/5841/354    9274/2132    42  251   23.71)
ramon: poll                 wall=8.000s usage=7.909s mem=25072KiB load=1.00 rootload=1.00
(smt.stats   44   5966 152547 385020  6283/5963/354    9791/2132    42  251   23.71)
(smt.stats   45   6067 155576 392753  6303/5977/354   10033/2132    42  251   23.71)
(smt.stats   46   6178 159750 406109  6359/6011/354   10188/2136    42  251   23.81)
(smt.stats   47   6300 162534 420912  6389/6054/355   10455/2344    43  256   23.81)
(smt.stats   48   6434 166660 450283  6424/6078/355   10667/2345    43  256   23.88)
(smt.stats   49   6581 169579 468520  6434/6108/355   10911/2345    43  256   23.97)
(smt.stats   50   6742 178034 510633  6442/6122/355   11233/2345    43  256   23.97)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6919 182642 537519  6457/6129/355   11568/2347    43  256   23.97)
ramon: poll                 wall=9.000s usage=8.909s mem=25356KiB load=1.00 rootload=1.00
(smt.stats   52   7113 187020 559059  6464/6142/355   11823/2348    43  256   23.97)
(smt.stats   53   7326 190338 570783  6552/6154/355   12152/2352    43  256   24.07)
(smt.stats   54   7560 193231 590546  6570/6247/357   12443/2736    44  274   24.17)
(smt.stats   55   7661 197469 616523  6570/6250/358   12635/2829    45  275   24.17)
(smt.stats   56   7772 200186 624794  6570/6250/358   12796/2829    45  275   24.26)
(smt.stats   57   7894 202408 645286  6580/6254/358   12970/2829    45  275   24.17)
(smt.stats   58   8028 203818 657589  6590/6270/359   13162/2886    46  278   24.17)
ramon: poll                 wall=10.000s usage=9.908s mem=25576KiB load=1.00 rootload=1.00
(smt.stats   59   8175 207540 670276  6656/6276/359   13383/2887    46  278   24.17)
(smt.stats   60   8336 209420 676646  6686/6340/360   13562/2931    47  283   24.27)
(smt.stats   61   8513 212268 699622  6742/6384/360   13860/2931    47  283   24.27)
(smt.stats   62   8707 216200 717309  6789/6430/360   14071/2933    47  283   24.27)
(smt.stats   63   8920 220675 748136  6906/6484/360   14342/2934    47  283   24.27)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206608&255
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206608&255
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206608&255
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 4206608&255
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206592&255
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 18374686479675830272 := 18014398508828156 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206592&255
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 18374686479675830272 := 18014398508828174 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206592&255
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 18374686479675830272 := 18014398508828158 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206592&255
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 18374686479675830272 := 18014398508828158 << 8
ramon: poll                 wall=11.000s usage=10.908s mem=25796KiB load=1.00 rootload=1.00
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4203520&255
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 18014398508825086 := 15199648742391844 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4203520&255
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 18014398508825088 := 15199648742391844 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4203520&255
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 18014398508825088 := 15199648742391844 << 8
(smt.stats   64   9154 224807 770708  6984/6597/360   14715/2941    47  283   24.46)
(smt.stats   65   9411 228028 786010  7192/6677/385   15040/3176    48  288   24.46)
(smt.stats   66   9512 230719 803511  7218/6893/386   15263/3176    48  288   24.46)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2 := 72057594037927926&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2 := 72057594037927926&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 72057594037927926&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 72057594037927926&65535
(smt.stats   67   9623 234459 821779  7241/6893/387   15412/3269    49  293   24.56)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 72057594037927925&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 72057594037927032&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 72057594037927000&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 72057594037926972&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 4 := 72057594037926972&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 16 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 20 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 28 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 12 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 12 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 12 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 28 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 12 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 28 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 12 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 28 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 12 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 28 := 72057594037927100&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 28 := 72057594037927132&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 28 := 72057594037927132&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 30 := 72057594037927134&65535
(smt.stats   68   9745 238294 844217  7350/6986/435   15672/3276    49  293   24.66)
(smt.stats   69   9879 244153 870981  7357/7028/450   15865/3306    50  308   24.75)
(smt.delete-inactive-clauses  :num-deleted-clauses 165)
(smt.stats   70  10026 247282 886694  7374/7045/456   16000/3352    51  309   24.85)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10187 253340 913618  7435/7091/457   16244/3411    52  320   24.94)
ramon: poll                 wall=12.004s usage=11.912s mem=26464KiB load=1.00 rootload=0.99
(smt.stats   72  10364 256682 936689  7444/7108/457   16446/3411    52  320   25.17)
(smt.stats   73  10558 262729 967973  7467/7122/458   16932/3500    53  327   25.27)
(smt.stats   74  10771 273013 1016215  7540/7163/459   17280/3501    53  327   25.36)
(smt.stats   75  11005 278042 1051642  7588/7255/460   17679/3542    54  332   25.36)
ramon: poll                 wall=13.000s usage=12.908s mem=26924KiB load=1.00 rootload=1.00
(smt.stats   76  11262 282144 1083980  7589/7256/460   18074/3574    55  345   25.46)
ramon: poll                 wall=14.000s usage=13.908s mem=26988KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.907s mem=26988KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.907s mem=26992KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11544 287731 1120235  7769/7274/461   18466/3639    56  348   25.65)
(smt.stats   78  11645 288871 1126962  7796/7453/461   18584/3640    56  348   25.65)
ramon: poll                 wall=17.000s usage=16.907s mem=27136KiB load=1.00 rootload=1.00
(smt.stats   79  11756 290752 1139082  7879/7472/461   18778/3640    56  348   25.65)
(smt.stats   80  11878 293544 1151338  7904/7554/461   18951/3641    56  348   25.65)
(smt.stats   81  12012 296933 1173331  7932/7579/461   19251/3641    56  348   25.75)
ramon: poll                 wall=18.000s usage=17.907s mem=27172KiB load=1.00 rootload=1.00
(smt.stats   82  12159 300989 1190018  8185/7626/462   19549/3802    57  348   25.75)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 175 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 173 := 1469&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 173 := 1469&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 189 := 1469&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 189 := 1469&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 189 := 1469&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 189 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 317 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 189 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 189 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 1597&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 2109&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 2109&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 2109&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 2109&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 61 := 2109&65535
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2109 := 2109&65535
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 11961560610296039485 := 4945 << 16
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2109 := 2109&65535
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 11961560610296039485 := 4945 << 16
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 2109 := 2109&65535
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 11961560610296039485 := 4945 << 16
(smt.stats   83  12320 304294 1214461  8481/8012/484   19855/3810    57  348   26.04)
ramon: poll                 wall=19.000s usage=18.907s mem=27900KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.906s mem=27948KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:59:14 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.992s
ramon: group.utime          19.976s
ramon: group.stime          0.016s
ramon: group.mempeak        28204KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.086s
ramon: loadavg              1.00
