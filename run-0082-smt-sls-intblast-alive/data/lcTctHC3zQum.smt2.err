ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:02:40 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27437 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/lcTctHC3zQum.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             913999
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   81.9672     10000        49          0            1        2)
(sat.ddfw       1      1   43.1078     20001        98          1            1        3)
(smt.stats    0    101   3914    373  1133/1003/97     101/13     4   18   52.05)
(smt.stats    1    202   5806   1739  1869/1693/101     187/29     7   25   52.15)
(sat.ddfw       1      1   43.7637     40001       196          2            1        5)
(smt.stats    2    313   7257   3536  2039/1808/102     298/37     8   26   52.25)
(sat.ddfw       1      1   39.3701     70001       343          3            1        8)
(smt.stats    3    414   7979   5240  2348/1999/102     411/51     8   26   52.35)
ramon: poll                 wall=1.000s usage=0.854s mem=54552KiB load=0.85 rootload=0.84
(smt.stats    4    525  10307   6839  2406/2200/125     538/61    12   52   52.44)
(smt.stats    5    647  14321   9748  2435/2224/125     654/56    13   61   52.55)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16265  12426  2449/2233/128     762/60    14   63   52.67)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 37&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 37&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 37&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 37&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 37&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 37 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 37&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 37 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 35&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 35&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 35 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 34&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 34&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 34 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 36&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 36 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 74&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 74&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 74&1
band: (band[36] (shl[36] (bv2int %0) (mod #100 36)) (if (= #559 35) 1 (if #561 3 #658))) 1 := 74&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 74&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 74&1
(smt.stats    7    859  17302  15316  2508/2293/178     867/73    16   91   52.90)
(sat.ddfw       1      1    34.188    110001       539          4            1       12)
(smt.stats    8    981  19199  18077  2561/2316/179     994/86    17   92   53.00)
(sat.ddfw       1      1   29.5677    160000       784          5            1       17)
(smt.stats    9   1115  21297  21169  2635/2363/179    1139/87    17   92   53.00)
(smt.stats   10   1216  22906  24016  2683/2451/179    1233/87    17   92   53.00)
ramon: poll                 wall=2.000s usage=1.838s mem=55100KiB load=0.98 rootload=0.99
(smt.stats   11   1327  26027  26836  2716/2476/179    1347/88    17   92   53.09)
(sat.ddfw       1      1   26.6908    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28483  30072  2763/2541/181    1469/115    19   98   53.19)
(smt.stats   13   1583  32970  37706  2774/2551/181    1600/115    19   98   53.29)
(smt.stats   14   1730  37227  45651  2841/2607/182    1752/124    20   98   53.38)
ramon: poll                 wall=3.000s usage=2.836s mem=55500KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   23.8095    290001      1421          7            1       30)
(smt.stats   15   1831  39029  48702  2916/2650/182    1865/125    20   98   53.38)
(smt.stats   16   1942  40379  52171  2949/2697/182    1982/126    20   98   53.38)
(smt.stats   17   2064  42723  56021  2973/2739/182    2109/126    20   98   53.49)
(smt.stats   18   2198  47582  60372  3007/2775/183    2245/135    21  102   53.59)
(sat.ddfw       1      1   21.3904    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.835s mem=55668KiB load=1.00 rootload=1.00
(smt.stats   19   2345  51048  65303  3051/2786/183    2401/138    21  102   53.59)
(smt.stats   20   2506  54056  71516  3113/2869/183    2580/138    21  102   53.59)
(sat.ddfw       1      1   19.8369    460001      2254          9            1       47)
(smt.stats   21   2607  55689  75711  3175/2896/183    2700/140    21  102   53.69)
(smt.stats   22   2718  57270  80073  3208/2974/183    2824/140    21  102   53.80)
(smt.stats   23   2840  59106  86660  3226/2985/183    2953/144    21  102   53.80)
ramon: poll                 wall=5.000s usage=4.947s mem=55996KiB load=1.11 rootload=1.11
(smt.stats   24   2974  61518  92584  3271/3033/184    3097/179    22  106   53.95)
(smt.stats   25   3121  63713  99223  3300/3074/187    3244/179    22  106   53.95)
(smt.stats   26   3282  66291 105864  3301/3075/187    3403/192    23  110   53.95)
(sat.ddfw       1      1   18.4434    560001      2745         10            1       57)
(smt.stats   27   3459  68489 112609  3358/3075/187    3584/192    23  110   54.08)
ramon: poll                 wall=6.000s usage=5.995s mem=56136KiB load=1.05 rootload=1.05
(smt.stats   28   3560  68909 116063  3368/3140/187    3686/192    23  110   54.08)
(sat.ddfw       1      1   17.2171    670001      3284         11            1       68)
(smt.stats   29   3671  70711 122243  3438/3151/187    3805/193    23  110   54.08)
(smt.stats   30   3793  72253 126527  3489/3226/187    3930/193    23  110   54.17)
(smt.stats   31   3927  74034 133189  3510/3277/187    4065/193    23  110   54.17)
ramon: poll                 wall=7.000s usage=7.019s mem=56272KiB load=1.02 rootload=1.03
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  75950 141574  3549/3292/187    4217/193    23  110   54.17)
(smt.stats   33   4235  79470 151579  3569/3337/187    4377/193    23  110   54.28)
(smt.stats   34   4412  82004 158171  3588/3343/187    4559/193    23  110   54.46)
(sat.ddfw       1      1   15.7708    790001      3872         12            1       80)
(smt.stats   35   4606  84868 168609  3609/3369/187    4752/193    23  110   54.46)
ramon: poll                 wall=8.000s usage=7.985s mem=56628KiB load=0.97 rootload=0.96
(smt.stats   36   4707  86909 174700  3614/3386/187    4853/193    23  110   54.46)
(smt.stats   37   4818  88068 181313  3632/3396/187    4965/193    23  110   54.55)
(smt.stats   38   4940  90081 188124  3660/3422/187    5093/193    23  110   54.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  91340 196144  3683/3436/187    5229/198    23  110   54.55)
(smt.stats   40   5221  95114 205981  3709/3464/187    5374/201    23  110   54.79)
(smt.stats   41   5382  97588 214125  3710/3484/187    5546/201    23  110   54.79)
ramon: poll                 wall=9.000s usage=9.047s mem=56824KiB load=1.06 rootload=1.06
(smt.stats   42   5559 100272 222173  3740/3496/187    5723/201    23  110   54.79)
(sat.ddfw       1      1   14.2983    920001      4509         13            1       93)
(smt.stats   43   5753 103992 233531  3758/3528/187    5967/201    23  110   54.90)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 10 := 13&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 10 := 12&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 4 := 8&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 4 := 8&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 20&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 20 := 24&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 20 := 28&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 332&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 328&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 324&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 320&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 320&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 304&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 136&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 132&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 136&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 144&127
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 9223372105574252688 := 68585522083 << 7
(smt.stats   44   5966 107789 245266  3838/3603/235    6252/279    24  116   55.10)
(smt.stats   45   6067 110230 249898  3841/3614/235    6366/320    25  128   55.10)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738370&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738370&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738390&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738386&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 9223372139933990930 := 68585522111 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738402&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738418&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738450&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738434&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738450&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738514&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 20 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 22 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 22 := 34359738646&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 278 := 34359738646&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 13844098205525999894 := 68585522111 << 35
(smt.stats   46   6178 111673 253438  3966/3616/235    6544/334    25  128   55.30)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 224 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 64 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 128 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 32 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 768 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 512 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1024 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 2048 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 4096 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 8192 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16384 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 32768 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 65536 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 131072 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 262144 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 524288 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1048576 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 2097152 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 4194304 := 34359738368&34359738367
(smt.stats   47   6300 112363 255118  4160/3775/322    6729/336    25  128   55.94)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 50601984 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 50601984 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 50593792 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 46137344 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 46137344 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 46137344 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 51380224 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 50855936 := 34359738368&34359738367
(smt.stats   48   6434 113566 258614  4450/4004/377    7442/346    25  128   55.94)
(smt.stats   49   6581 117442 269489  4439/4210/402    7746/651    26  163   56.04)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934656 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934656 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934680 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
ramon: poll                 wall=10.000s usage=10.045s mem=58932KiB load=1.00 rootload=1.00
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 77594640 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 77594640 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 77594640 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 83886096 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 83886096 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 83886096 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497488 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497496 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497488 := 34359738384&268435455
(smt.stats   50   6742 120770 280838  4763/4211/402    8192/677    26  163   56.57)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738448&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738392&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108888 := 34359738392&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108888 := 34359738392&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108888 := 34359738392&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127536&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368651280&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368659472&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368652304&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368652304&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368651280&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368659984&268435455
(smt.stats   51   6919 124242 301455  4954/4566/432    8629/910    27  169   56.86)
(sat.ddfw       1      1   13.3295   1060001      5196         14            1      108)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 130660 322626  5153/4873/465    9812/960    28  175   57.15)
ramon: poll                 wall=11.000s usage=11.044s mem=59460KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.002s usage=12.045s mem=59604KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.4802   1210001      5931         15            1      123)
(smt.stats   53   7326 134490 337144  5631/4954/465   10183/1617    29  185   57.44)
ramon: poll                 wall=13.000s usage=13.043s mem=59924KiB load=1.00 rootload=0.99
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497472 := 75497474&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497472 := 75497474&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497472 := 75497472&134217727
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 13844098171241758720 := 63 << 27
(smt.stats   54   7561 139061 354906  6037/5794/471   11668/2005    30  220   57.88)
(smt.stats   55   7662 142100 369956  6356/6032/476   12237/2005    30  220   58.18)
(sat.ddfw       1      1   11.7293   1370001      6715         16            1      139)
(smt.stats   56   7773 147324 398823  6570/6168/476   12930/2008    30  220   58.30)
ramon: poll                 wall=14.000s usage=14.041s mem=60636KiB load=1.00 rootload=1.00
(smt.stats   57   7895 150120 418563  6833/6465/477   13617/2230    31  221   58.51)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8029 154463 432634  6864/6563/480   14597/2231    31  221   58.80)
ramon: poll                 wall=15.000s usage=15.041s mem=61076KiB load=1.00 rootload=1.00
(smt.stats   59   8176 161772 452148  6933/6593/480   15205/2465    32  239   58.90)
(sat.ddfw       1      1   11.0684   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=16.040s mem=61244KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=17.040s mem=61752KiB load=1.00 rootload=1.00
(smt.stats   60   8337 169383 467538  7095/6660/480   15730/2468    32  239   59.18)
(sat.ddfw       1      1   10.4803   1720001      8431         18            1      174)
(smt.stats   61   8514 174980 490214  7197/6875/480   16631/2473    32  239   59.27)
ramon: poll                 wall=18.000s usage=18.040s mem=61788KiB load=1.00 rootload=1.00
(smt.stats   62   8708 183829 511452  7284/6991/487   17245/2771    33  253   59.37)
ramon: poll                 wall=19.000s usage=19.040s mem=61900KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.95181   1910001      9362         19            1      193)
(smt.stats   63   8921 191242 528864  7363/7077/488   17663/2831    34  330   59.56)
(smt.stats   64   9155 197858 556748  7426/7126/491   19012/2834    34  330   59.75)
ramon: poll                 wall=20.000s usage=20.002s mem=62280KiB load=0.96 rootload=0.96
ramon: end                  Fri Nov  1 23:03:00 2024
ramon: root.execname        z3
ramon: root.utime           20.050s
ramon: root.stime           0.010s
ramon: group.total          20.073s
ramon: group.utime          20.057s
ramon: group.stime          0.016s
ramon: group.mempeak        64784KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.00
