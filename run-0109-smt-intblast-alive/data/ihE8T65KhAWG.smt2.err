ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:46:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40853 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ihE8T65KhAWG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3054014
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4420    502  1339/1199/111      90/36     7   17   19.26)
(smt.stats    1    202   4984    772  2330/2065/111     193/36     7   17   19.45)
(smt.stats    2    313   5890   1314  2585/2206/111     311/36     7   17   19.66)
(smt.stats    3    414   6214   1651  2704/2391/111     413/37     7   17   19.76)
ramon: poll                 wall=1.000s usage=0.924s mem=21060KiB load=0.92 rootload=0.92
(smt.stats    4    525   9017   2609  2926/2694/120     528/45     9   25   19.76)
(smt.stats    5    647  12612   4388  3026/2731/120     665/58    10   27   19.86)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  15029   6018  3205/2829/123     766/76    11   29   19.95)
(smt.stats    7    859  17522   9329  3238/2990/123     886/81    12   30   20.05)
(smt.stats    8    981  20561  12656  3301/3064/127    1021/100    14   34   20.05)
(smt.stats    9   1115  24970  17412  3322/3075/128    1148/129    16   35   20.22)
(smt.stats   10   1216  28252  20479  3465/3103/128    1249/130    16   35   20.22)
(smt.stats   11   1327  31739  22750  3531/3263/128    1362/133    16   35   20.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  36493  26384  3561/3314/128    1479/133    16   35   20.33)
(smt.stats   13   1583  39505  30610  3588/3337/132    1683/140    17   39   20.33)
(smt.stats   14   1730  44607  40998  3612/3376/132    1826/140    17   39   20.33)
(smt.stats   15   1831  49843  43099  3613/3381/132    1934/140    17   39   20.59)
ramon: poll                 wall=2.000s usage=1.924s mem=21944KiB load=1.00 rootload=1.00
(smt.stats   16   1942  54306  46541  3660/3383/132    2047/141    17   39   20.68)
(smt.stats   17   2064  56823  48744  3826/3439/132    2180/141    17   39   20.88)
(smt.stats   18   2198  58298  52522  3963/3687/132    2334/141    17   39   20.88)
(smt.stats   19   2345  62551  59429  3987/3739/132    2480/141    17   39   21.13)
(smt.stats   20   2506  64494  64174  4035/3761/132    2653/141    17   39   21.13)
(smt.stats   21   2607  68199  71536  4046/3808/132    2751/141    17   39   21.24)
(smt.stats   22   2718  70330  78829  4050/3815/132    2877/141    17   39   21.24)
(smt.stats   23   2840  73446  83799  4054/3822/132    2996/141    17   39   21.24)
(smt.stats   24   2974  76802  88161  4066/3822/132    3140/141    17   39   21.35)
(smt.stats   25   3121  78805  93435  4073/3841/132    3287/141    17   39   21.35)
ramon: poll                 wall=3.000s usage=2.923s mem=22668KiB load=1.00 rootload=0.99
(smt.stats   26   3282  83242 103482  4112/3843/132    3455/141    17   39   21.45)
(smt.stats   27   3459  87032 112090  4158/3897/132    3632/142    17   39   21.55)
(smt.stats   28   3560  89988 116500  4158/3926/133    3736/277    18   43   21.55)
(smt.stats   29   3671  92471 123880  4159/3926/133    3847/277    18   43   21.97)
(smt.stats   30   3793  94754 136430  4168/3930/133    3969/277    18   43   22.06)
(smt.stats   31   3927  96270 141664  4272/3954/133    4111/277    18   43   22.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074 100302 148579  4285/4053/133    4283/277    18   43   22.16)
(smt.stats   33   4235 104412 156360  4334/4057/133    4446/277    18   43   22.25)
(smt.stats   34   4412 109209 166818  4338/4106/133    4633/277    18   43   22.25)
(smt.stats   35   4606 113303 176338  4339/4107/133    4861/277    18   43   22.35)
(smt.stats   36   4707 116176 183803  4341/4109/133    4962/277    18   43   22.35)
(smt.stats   37   4818 120280 190638  4341/4109/133    5073/277    18   43   22.35)
(smt.stats   38   4940 123679 195391  4341/4109/133    5195/277    18   43   22.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 117)
(smt.stats   39   5074 127152 198970  4343/4111/133    5210/277    18   43   22.45)
(smt.stats   40   5221 133396 204126  4343/4111/133    5357/277    18   43   22.45)
(smt.stats   41   5382 136471 208520  4432/4113/133    5516/278    18   43   22.55)
ramon: poll                 wall=4.000s usage=3.923s mem=23928KiB load=1.00 rootload=1.00
(smt.stats   42   5559 138393 217835  4488/4214/133    5696/278    18   43   22.55)
(smt.stats   43   5753 142212 223294  4499/4261/133    5891/278    18   43   22.64)
(smt.stats   44   5966 147182 244487  4500/4268/133    6104/278    18   43   22.64)
(smt.stats   45   6067 148795 248853  4500/4268/133    6205/278    18   43   22.64)
(smt.stats   46   6178 150560 266700  4500/4268/133    6316/278    18   43   23.50)
(smt.stats   47   6300 151689 272011  4639/4268/133    6442/279    18   43   23.59)
(smt.stats   48   6434 153717 278970  4715/4437/133    6604/279    18   43   23.59)
(smt.stats   49   6581 155472 287398  4726/4494/133    6751/279    18   43   23.69)
(smt.stats   50   6742 157864 298804  4775/4494/133    6915/280    18   43   23.69)
(smt.stats   51   6919 160220 311082  4900/4547/133    7114/281    18   43   23.79)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 162758 323721  4941/4674/133    7321/281    18   43   23.92)
ramon: poll                 wall=5.003s usage=4.926s mem=25348KiB load=1.00 rootload=1.01
(smt.stats   53   7326 166161 340881  4952/4716/133    7534/281    18   43   23.92)
(smt.stats   54   7560 169110 355795  4953/4721/133    7791/281    18   43   23.92)
(smt.stats   55   7661 170722 364981  4959/4723/133    7893/281    18   43   23.92)
(smt.stats   56   7772 171831 370874  4960/4728/133    8032/281    18   43   23.92)
(smt.stats   57   7894 173069 377380  4980/4728/133    8159/281    18   43   24.03)
(smt.stats   58   8028 175298 387480  4996/4752/133    8299/281    18   43   24.03)
(smt.stats   59   8175 179912 396721  5001/4768/133    8448/282    18   43   24.13)
(smt.stats   60   8336 182911 414100  5029/4773/133    8617/282    18   43   24.13)
(smt.stats   61   8513 185445 425650  5031/4799/133    8796/282    18   43   24.13)
(smt.stats   62   8707 187418 434550  5145/4803/133    9039/282    18   43   24.24)
(smt.stats   63   8920 191252 446871  5231/4939/133    9257/282    18   43   24.24)
ramon: poll                 wall=6.000s usage=5.922s mem=25844KiB load=1.00 rootload=0.99
(smt.stats   64   9154 192182 448920  5460/5001/133    9510/284    18   43   24.44)
(smt.stats   65   9411 192942 452150  5788/5385/133    9786/284    18   43   24.53)
(smt.stats   66   9512 193740 454208  5823/5587/133    9893/285    18   43   24.53)
(smt.stats   67   9623 195725 458984  5829/5591/133   10008/286    18   43   24.53)
(smt.stats   68   9745 197746 463761  5898/5628/133   10142/286    18   43   24.63)
(smt.stats   69   9879 198906 469072  5992/5675/134   10290/545    19   44   24.63)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 200508 477483  6036/5777/134   10443/545    19   44   24.72)
(smt.stats   71  10187 202270 481855  6096/5823/134   10626/545    19   44   24.72)
ramon: poll                 wall=7.000s usage=6.922s mem=26316KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   72  10364 203897 498155  6137/5876/134   10809/546    19   44   24.72)
(smt.stats   73  10558 205553 515481  6148/5914/134   11004/546    19   44   24.85)
(smt.stats   74  10771 207657 543412  6163/5915/134   11218/546    19   44   24.85)
(smt.stats   75  11005 211883 581486  6221/5947/134   11480/546    19   44   24.95)
(smt.stats   76  11262 216209 628795  6252/5991/134   11753/546    19   44   25.06)
(smt.stats   77  11544 218988 649474  6466/6018/134   12065/546    19   44   25.16)
(smt.stats   78  11645 221147 658978  6530/6289/134   12184/546    19   44   25.28)
ramon: poll                 wall=8.000s usage=7.922s mem=27008KiB load=1.00 rootload=1.00
(smt.stats   79  11756 223208 673799  6540/6306/134   12300/546    19   44   25.28)
(smt.stats   80  11878 224893 683270  6545/6311/134   12418/546    19   44   25.28)
(smt.stats   81  12012 227185 692755  6550/6313/134   12550/546    19   44   25.40)
(smt.stats   82  12159 232762 701187  6553/6319/134   12697/546    19   44   25.40)
(smt.stats   83  12320 237161 709523  6553/6319/134   12858/546    19   44   25.40)
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488355294&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1829587348619265 := 1829587348750336 >>l 63
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488355294&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1829587348619265 := 1829587348750336 >>l 63
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488355294&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1829587348619265 := 1829587348815872 >>l 63
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488355294&140709571067901
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 27917287397 := 140737488355294&27917287426
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 27917287398 := 140737488355294&27917287427
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 27917287426 := 140737488355294&27917287427
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1548140289196035 := 1829587348881408 >>l 63
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488355294&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 140737488355329 := 9223372036854710272 >>l 63
(smt.stats   84  12497 241015 716955  6577/6322/134   13033/548    19   44   25.49)
(smt.stats   85  12691 244472 730268  6609/6352/144   13221/667    20   46   25.59)
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 17 := 140737483898880&18
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 18 := 140737483898880&19
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 20 := 140737483898880&21
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 24 := 140737483898880&25
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 32 := 140737483898880&33
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 64 := 140737483898880&65
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 128 := 140737483898880&129
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 256 := 140737483898880&257
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 512 := 140737483898880&513
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 1024 := 140737483898880&1025
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 2048 := 140737483898880&2049
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 4096 := 140737483898880&4097
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8192 := 140737483898880&8193
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16384 := 140737483898880&16385
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16384 := 140737483898880&16385
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 32768 := 140737483898880&32769
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 65536 := 140737483898880&65537
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 131072 := 140737483898880&131073
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 262144 := 140737483898880&262145
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539838619649 := 1829587348750336 >>l 46
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 131072 := 140737483898880&131073
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 262144 := 140737483898880&262145
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539838619649 := 17180000256 >>l 46
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 262144 := 140737483898880&27917287425
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 524288 := 140737483898880&27917287425
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 1048576 := 140737483898880&27917287425
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 2097152 := 140737483898880&27917287425
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 4194304 := 140737483898880&27917287425
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8388608 := 140737483898880&27917287425
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16777216 := 140737483898880&27917287425
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 33554432 := 140737483898880&27917287425
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 4194304 := 140737483898880&4194305
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8388608 := 140737483898880&16777216
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8388608 := 140737483898880&25165824
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8388608 := 140737483898880&8388609
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539846746113 := 1829587348750336 >>l 46
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8388608 := 140737483898880&8388609
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539846746113 := 1829587348750336 >>l 46
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 25 := 140737483898880&26
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 24 := 140737483898880&25
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 18 := 140737483898880&19
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16 := 140737483898880&18
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16 := 140737483898880&18
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16 := 140737483898880&18
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8 := 140737483898880&18
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737483898880&26
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 0 := 27917287424 >>l 30
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737483898880&26
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 0 := 27917287424 >>l 30
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737483898880&18
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 0 := 19327352832 >>l 30
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737483898880&18
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 0 := 19327352832 >>l 30
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737483898880&18
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 0 := 19327352832 >>l 30
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 2 := 140737483898880&18
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 2 := 140737483898880&18
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 1 := 140737483898880&18
(smt.stats   86  12904 248248 743821  6802/6549/276   13475/710    21   67   26.07)
(smt.stats   87  13138 255570 763343  6829/6573/286   13744/711    21   67   26.07)
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 262144 := 140737488350976&262144
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539838619648 := 1899956092796928 >>l 56
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 262144 := 140737488350976&262144
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539838619648 := 1899956092796928 >>l 56
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 262144 := 140737488350976&262144
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539838619648 := 1970324836909056 >>l 56
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 262144 := 140737488350976&262144
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539838619648 := 1970324836909056 >>l 56
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 262144 := 140737488350976&262144
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 576038539838619648 := 1899956092796928 >>l 56
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 64 := 140737488350976&64
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 64 := 140737488350976&64
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 64 := 140737488350976&64
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 64 := 140737488350976&64
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 64 := 140737488350976&64
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 64 := 140737488350976&64
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 32 := 140737488350976&32
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 32 := 140737488350976&32
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 32 := 140737488350976&32
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16 := 140737488350976&16
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16 := 140737488350976&16
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16 := 140737488350976&16
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 16 := 140737488350976&16
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 8 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 9 := 8796093022208 >>l 40
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 9 := 8796093022208 >>l 40
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 9 := 8796093022208 >>l 40
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 1 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 1 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 1 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 8 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 6 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 4 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 6 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 4 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 4 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 4 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 2 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 2 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&16
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 16 := 140737488350976&16
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&32
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 32 := 140737488350976&32
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&64
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 64 := 140737488350976&64
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&16
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 16 := 140737488350976&16
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 8 := 140737488350976&8
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 140737488350976&8
band: (band[47] (if (= #126 46) 9903520314280649661890953216 (if #514 4951760157140324830945476608 #604)) (lshr[47] (bv2int %0) (+ 47 #607))) 8 := 140737488350976&8
(smt.stats   88  13395 260687 788493  6952/6660/347   14072/765    22   81   26.37)
ramon: poll                 wall=9.000s usage=8.922s mem=29008KiB load=1.00 rootload=0.99
(smt.stats   89  13677 264363 807961  7195/6817/379   14427/812    23   99   26.97)
(smt.stats   90  13987 271098 836098  7297/7028/384   14868/897    24  109   27.16)
(smt.stats   91  14088 275005 842800  7366/7080/384   15013/897    24  109   27.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   92  14199 279335 863814  7367/7081/384   15124/897    24  109   27.26)
(smt.stats   93  14321 283489 876272  7367/7081/384   15235/937    25  122   27.35)
(smt.stats   94  14455 288482 899549  7380/7090/385   15381/943    26  124   27.45)
(smt.stats   95  14602 294466 918975  7395/7107/387   15577/943    26  124   27.45)
(smt.stats   96  14763 301137 938246  7429/7129/388   15799/984    27  129   27.57)
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 0&25165823
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1829587373785087 := 3307330976284672 >>l 17
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 0&25165823
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1829587373785087 := 1899956092796928 >>l 17
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 0&25165823
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1829587373785087 := 1899956092796928 >>l 17
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 0&25165823
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1829587373785087 := 1899956092796928 >>l 17
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 0&25165823
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #752 #756) 64)) 1829587373785087 := 3307330976284672 >>l 17
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 0&70368735789055
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 70368735789056 := 140737471578111 >>l 1
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 0&70368735789055
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 140737471578110 := 140737471578111 >>l 1
band: (band[47] (if (= #620 63) 1298074214633393312483371019927552 (if #622 649037107316696656241685509963776 #746)) (lshr[64] (* 65536 #313) (mod #759 64))) 0 := 0&70368735789055
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #122))) 70368735789054 := 140737471578111 >>l 1
(smt.stats   97  14940 307036 956220  7502/7186/391   16339/1151    28  141   27.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 310973 986360  7617/7297/406   16863/1155    28  141   27.85)
ramon: poll                 wall=10.000s usage=9.922s mem=29776KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   99  15347 315880 1025062  7762/7324/406   17168/1215    29  155   27.95)
(smt.stats  100  15581 321860 1048591  7886/7578/408   17626/1236    30  155   29.59)
(smt.stats  101  15838 328710 1091014  7922/7594/410   17938/1236    30  155   29.59)
(smt.stats  102  16120 335818 1124447  7938/7632/410   18329/1282    31  155   29.81)
ramon: poll                 wall=11.007s usage=10.929s mem=31820KiB load=1.00 rootload=1.00
(smt.stats  103  16430 345123 1182342  7949/7638/410   18685/1282    31  155   29.91)
(smt.stats  104  16770 353405 1226320  7956/7654/410   19155/1282    31  155   30.00)
(smt.stats  105  16871 357632 1246560  7962/7660/410   19332/1282    31  155   30.11)
(smt.stats  106  16982 362413 1263543  7972/7668/410   19495/1282    31  155   30.21)
(smt.stats  107  17104 368806 1283537  7973/7669/410   19616/1282    31  155   30.32)
(smt.stats  108  17238 374507 1317603  7973/7669/410   19751/1282    31  155   30.32)
(smt.stats  109  17385 380726 1337247  7985/7670/410   19903/1282    31  155   30.43)
(smt.stats  110  17546 385987 1357624  8010/7696/410   20131/1282    31  155   30.43)
ramon: poll                 wall=12.000s usage=11.921s mem=32844KiB load=1.00 rootload=1.00
(smt.stats  111  17723 391338 1383669  8125/7708/410   20488/1295    31  155   30.65)
(smt.stats  112  17917 395577 1401431  8133/7829/410   20686/1295    31  155   30.75)
(smt.stats  113  18130 404144 1433393  8148/7844/410   21213/1295    31  155   30.75)
(smt.stats  114  18364 414438 1486693  8200/7884/410   21536/1295    31  155   30.86)
ramon: poll                 wall=13.000s usage=12.921s mem=33100KiB load=1.00 rootload=1.00
(smt.stats  115  18621 422509 1530672  8205/7889/412   22058/1540    32  157   30.96)
(smt.stats  116  18903 437234 1623805  8208/7892/412   22344/1540    32  157   31.06)
(smt.stats  117  19213 444229 1662051  8293/7896/412   22751/1584    33  164   31.15)
(smt.stats  118  19553 458109 1732339  8331/7997/412   23180/1584    33  164   31.25)
ramon: poll                 wall=14.000s usage=13.921s mem=33356KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  119  19926 472344 1822373  8357/8018/412   23638/1587    33  164   31.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats  120  20027 474429 1838859  8359/8043/412   23757/1587    33  164   31.34)
(smt.stats  121  20138 477713 1859130  8362/8046/412   23876/1587    33  164   31.45)
(smt.stats  122  20260 480093 1874336  8362/8046/412   23999/1587    33  164   31.45)
(smt.stats  123  20394 483744 1900846  8362/8046/412   24138/1587    33  164   31.45)
(smt.stats  124  20541 488088 1920046  8390/8066/413   24451/1718    34  165   31.55)
(smt.stats  125  20702 495115 1941476  8399/8083/413   24740/1718    34  165   31.55)
(smt.stats  126  20879 505144 1975769  8403/8086/413   24978/1718    34  165   31.65)
(smt.stats  127  21073 513190 2005469  8441/8124/414   25263/1782    35  171   31.75)
ramon: poll                 wall=15.000s usage=14.920s mem=34076KiB load=1.00 rootload=1.00
(smt.stats  128  21286 527408 2047986  8442/8125/416   25526/1782    35  171   31.75)
(smt.stats  129  21520 542723 2097331  8442/8125/416   25815/1782    35  171   31.75)
(smt.stats  130  21777 555071 2150913  8445/8128/417   26238/1802    36  176   31.85)
ramon: poll                 wall=16.000s usage=15.913s mem=34100KiB load=0.99 rootload=0.99
(smt.stats  131  22059 566515 2199536  8449/8132/417   26898/1802    36  176   31.94)
(smt.stats  132  22369 584740 2284262  8449/8132/417   27228/1924    37  186   31.94)
(smt.stats  133  22709 601187 2351759  8452/8135/417   27767/1924    37  186   32.09)
ramon: poll                 wall=17.000s usage=16.910s mem=34340KiB load=1.00 rootload=1.00
(smt.stats  134  23082 625368 2431388  8455/8138/417   28391/1924    37  186   32.18)
(smt.stats  135  23492 636384 2475907  8620/8221/418   29069/1983    38  186   32.37)
(smt.stats  136  23593 639592 2489986  8621/8304/418   29305/1983    38  186   32.47)
(smt.stats  137  23704 641730 2507474  8623/8306/418   29458/1983    38  186   32.47)
(smt.stats  138  23826 645513 2533478  8653/8306/418   29633/1985    38  186   32.47)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  139  23960 650153 2561847  8656/8339/418   29839/1985    38  186   32.57)
ramon: poll                 wall=18.000s usage=17.903s mem=34684KiB load=0.99 rootload=0.99
(smt.stats  140  24107 654540 2582545  8707/8345/418   30131/1987    38  186   32.69)
(smt.stats  141  24268 661089 2608163  8758/8399/419   30473/2125    39  191   32.88)
(smt.stats  142  24445 665154 2623818  8848/8464/419   30774/2127    39  191   32.88)
(smt.stats  143  24639 668909 2640873  8872/8550/419   31249/2128    39  191   33.00)
(smt.stats  144  24852 675666 2683001  8874/8557/419   31463/2128    39  191   33.00)
(smt.delete-inactive-clauses  :num-deleted-clauses 592)
(smt.stats  145  25086 681649 2723437  8886/8557/419   31133/2128    39  191   33.09)
ramon: poll                 wall=19.000s usage=18.899s mem=35452KiB load=1.00 rootload=1.00
(smt.stats  146  25343 691534 2799935  8886/8569/419   31391/2128    39  191   33.09)
(smt.stats  147  25625 705032 2891263  8886/8569/419   31684/2128    39  191   33.19)
(smt.stats  148  25935 722656 3028009  8886/8569/419   31995/2128    39  191   33.19)
(smt.stats  149  26275 737859 3123230  8942/8569/419   32389/2129    39  191   33.28)
ramon: poll                 wall=20.000s usage=19.895s mem=35708KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:47:02 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.020s
ramon: group.total          19.938s
ramon: group.utime          19.914s
ramon: group.stime          0.024s
ramon: group.mempeak        35968KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.042s
ramon: loadavg              0.99
