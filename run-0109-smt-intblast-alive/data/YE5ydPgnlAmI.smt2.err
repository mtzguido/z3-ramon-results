ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:30:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41314 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YE5ydPgnlAmI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3000806
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   3573    292  1284/1109/106     101/26     4   16   19.25)
(smt.stats    1    202   4968    432  1756/1586/106     205/28     4   16   19.44)
(smt.stats    2    313   5672    978  1942/1741/106     346/28     4   16   19.44)
(smt.stats    3    414   6975   1554  2085/1926/113     459/50     5   20   19.53)
(smt.stats    4    525   7829   2997  2636/1966/114     581/100     6   30   19.73)
ramon: poll                 wall=1.000s usage=0.914s mem=20880KiB load=0.91 rootload=0.91
(smt.stats    5    647  11155   5633  2664/2448/118     763/184     7   39   19.82)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  15416   8637  2666/2453/123     860/184     9   45   19.93)
(smt.stats    7    859  17040  10521  2726/2456/123     978/189     9   45   19.93)
(smt.stats    8    981  18153  12769  2997/2663/123    1111/189     9   45   20.03)
(smt.stats    9   1115  20508  17962  3333/3080/124    1279/270    10   45   20.12)
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 9007199254740989&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 9007199254740989&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 9007199254740989&512
(smt.stats   10   1216  23620  21581  3371/3095/124    1385/273    10   45   20.12)
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 9007199254740989&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 9007199254740989&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 511 := 511&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 510 := 511&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 4 := 11&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 11&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 16 := 16&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 32 := 32&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 64 := 64&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 128 := 128&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 256 := 256&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 16 := 16&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 160 := 160&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 128 := 128&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 64 := 64&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 64 := 64&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 11&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 11&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 512 := 512&512
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 9007199254741504 := 8589934889 << 10
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 256 := 264&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 16 := 16&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 16 := 16&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 16 := 16&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 6 := 11&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 4 := 11&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 4 := 12&512
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 8&512
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 9007199254741000 := 8589934889 << 10
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 0&512
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 9007199254740992 := 8589934889 << 10
(smt.stats   11   1327  25958  27900  3495/3249/241    1523/309    13   86   20.61)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30018  32742  3509/3263/244    1668/308    14   91   20.71)
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 18014398509481986 := 8589934882 << 3
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 18014398509481986 := 8589934882 << 3
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 2 := 8589934882 << 3
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 2 := 8589934882 << 3
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 2 := 8589934882 << 3
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 4 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 3 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 2 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 3 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 2 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 2 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 1 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 2 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 2 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 1 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 68719479056&4
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 4 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 1 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 2 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 2 := 68719479056&4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 2 := 68719479056&4
(smt.stats   13   1583  34513  38596  3570/3306/289    1785/353    17  116   20.91)
(smt.stats   14   1730  39549  45225  3599/3344/299    1976/352    18  119   21.01)
(smt.stats   15   1831  46218  51727  3616/3357/299    2076/384    19  119   21.01)
(smt.stats   16   1942  51657  60515  3616/3357/299    2197/384    19  119   21.01)
(smt.stats   17   2064  55637  69304  3616/3357/299    2325/384    19  119   21.01)
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 480&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 488&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 18014398509482472 := 8589934883 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 504&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 18437736874454811128 := 8589934883 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 480&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 480&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 488&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 27021597764223464 := 8589934883 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 8589934888&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #742) 64)) 8589934888 := 8589934883 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 137438958128&8
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 3 := 8589934883 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 137438958128&8
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 3 := 8589934883 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 137438958128&8
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 8 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 137438958128&8
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 8 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 137438958128&8
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 2 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 137438958128&8
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 2 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 137438958128&8
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 1 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 0 := 137438958128&8
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (= #628 52) 1 (if #630 2 #732))) 1 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 8 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 1 := 137438958128&8
band: (band[53] (shl[64] (bv2int %0) (mod #743 64)) (if (= #757 63) 0 (if #759 1 #883))) 1 := 137438958128&8
(smt.stats   18   2198  58876  74578  3666/3377/305    2501/405    20  120   21.20)
(smt.stats   19   2345  64665  84850  3682/3418/327    2653/423    21  127   21.20)
ramon: poll                 wall=2.000s usage=1.914s mem=22412KiB load=1.00 rootload=1.00
(smt.stats   20   2506  70745  94972  3700/3432/327    2867/423    22  130   21.30)
(smt.stats   21   2607  77050 104300  3704/3435/328    2971/445    23  132   21.39)
(smt.stats   22   2718  83681 114566  3704/3435/328    3082/445    23  132   21.62)
(smt.stats   23   2840  90800 125522  3704/3435/328    3204/445    23  132   21.62)
(smt.stats   24   2974  96594 135188  3705/3436/328    3337/445    23  132   21.62)
(smt.stats   25   3121 103756 144780  3705/3436/328    3487/445    23  132   21.62)
(smt.stats   26   3282 111343 157512  3705/3436/328    3650/445    23  132   21.62)
(smt.stats   27   3459 119055 171040  3706/3437/328    3828/445    23  132   21.92)
(smt.stats   28   3560 122787 178176  3706/3437/328    3929/445    23  132   21.92)
(smt.stats   29   3671 127737 189143  3706/3437/328    4040/445    23  132   21.92)
(smt.stats   30   3793 133076 201212  3706/3437/328    4162/445    23  132   21.92)
(smt.stats   31   3927 139041 212456  3707/3438/328    4296/445    23  132   22.02)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 146161 223551  3707/3438/328    4444/445    23  132   22.02)
(smt.stats   33   4235 154763 238546  3707/3438/328    4605/445    23  132   22.02)
(smt.stats   34   4412 163178 256203  3707/3438/328    4783/445    23  132   22.11)
(smt.stats   35   4606 172474 269634  3707/3438/328    4979/445    23  132   22.11)
(smt.stats   36   4707 177366 277545  3707/3438/328    5083/445    23  132   22.11)
ramon: poll                 wall=3.000s usage=2.914s mem=23424KiB load=1.00 rootload=0.99
(smt.stats   37   4818 183046 287718  3707/3438/328    5195/445    23  132   22.21)
(smt.stats   38   4940 188733 296956  3707/3438/328    5319/445    23  132   22.21)
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   39   5074 193415 305713  3707/3438/328    5439/445    23  132   22.62)
(smt.stats   40   5221 199849 317317  3709/3438/328    5588/445    23  132   22.62)
(smt.stats   41   5382 206728 329169  3714/3441/328    5749/445    23  132   22.71)
(smt.stats   42   5559 214185 346659  3724/3453/328    5929/445    23  132   22.71)
(smt.stats   43   5753 221218 360265  3802/3473/332    6123/473    24  134   22.81)
(smt.stats   44   5966 227996 374264  3851/3569/343    6354/473    24  134   22.81)
(smt.stats   45   6067 230941 382559  3886/3608/348    6382/504    25  212   22.90)
ramon: poll                 wall=4.000s usage=3.913s mem=24228KiB load=1.00 rootload=1.00
(smt.stats   46   6178 234552 390585  3903/3622/348    6501/504    25  212   22.90)
(smt.stats   47   6300 236146 394631  4008/3699/351    6626/541    26  228   23.10)
ramon: poll                 wall=5.000s usage=4.913s mem=24532KiB load=1.00 rootload=1.00
(smt.stats   48   6434 236604 395651  4219/3841/351    6766/544    26  228   23.20)
(smt.stats   49   6581 240078 405959  4440/4110/354    7002/547    26  228   23.39)
ramon: poll                 wall=6.000s usage=5.913s mem=24800KiB load=1.00 rootload=1.00
(smt.stats   50   6742 243301 413468  4652/4238/355    7262/549    26  228   23.49)
ramon: poll                 wall=7.000s usage=6.913s mem=24956KiB load=1.00 rootload=1.00
(smt.stats   51   6919 246261 421482  4993/4707/356    7517/592    27  278   23.59)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 250946 431221  5064/4714/356    7878/592    27  278   23.78)
ramon: poll                 wall=8.000s usage=7.913s mem=25260KiB load=1.00 rootload=1.00
(smt.stats   53   7326 255576 443509  5176/4800/356    8245/600    27  278   24.06)
ramon: poll                 wall=9.000s usage=8.912s mem=25572KiB load=1.00 rootload=1.00
(smt.stats   54   7560 260478 458346  5331/5041/359    8779/684    28  280   24.06)
(smt.stats   55   7661 263723 466319  5379/5047/359    8944/686    28  280   24.16)
ramon: poll                 wall=10.000s usage=9.912s mem=26148KiB load=1.00 rootload=1.00
(smt.stats   56   7772 265668 472157  5517/5131/359    9123/744    29  287   24.45)
(smt.stats   57   7894 269060 486595  5671/5264/359    9485/745    29  287   24.45)
(smt.stats   58   8028 271531 494078  5755/5419/359    9807/745    29  287   24.54)
ramon: poll                 wall=11.000s usage=10.912s mem=26164KiB load=1.00 rootload=1.00
(smt.stats   59   8175 274850 505282  5963/5492/359   10205/746    29  287   24.64)
ramon: poll                 wall=12.000s usage=11.912s mem=26176KiB load=1.00 rootload=1.00
(smt.stats   60   8336 278886 518229  6259/5693/359   10488/748    29  287   24.73)
(smt.stats   61   8513 281416 525618  6529/6022/359   10835/748    29  287   24.83)
ramon: poll                 wall=13.000s usage=12.901s mem=26332KiB load=0.99 rootload=0.98
(smt.stats   62   8707 285917 542288  6587/6249/360   11099/826    30  295   24.93)
ramon: poll                 wall=14.000s usage=13.900s mem=26596KiB load=1.00 rootload=1.00
(smt.stats   63   8920 289583 551325  6757/6303/360   11558/831    30  295   25.21)
ramon: poll                 wall=15.000s usage=14.900s mem=26848KiB load=1.00 rootload=1.00
(smt.stats   64   9154 293955 574086  7162/6639/361   12374/838    30  295   25.31)
ramon: poll                 wall=16.000s usage=15.900s mem=27012KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.900s mem=27428KiB load=1.00 rootload=1.00
(smt.stats   65   9411 296012 584182  7653/6897/362   12817/950    31  301   25.69)
(smt.stats   66   9512 297709 598805  8019/7695/363   13572/950    31  301   25.78)
ramon: poll                 wall=18.000s usage=17.899s mem=27516KiB load=1.00 rootload=1.00
(smt.stats   67   9623 301285 610010  8088/7735/364   13952/950    31  301   25.88)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   68   9745 306396 635801  8212/7831/364   14657/1137    32  305   25.97)
(smt.stats   69   9879 313207 655503  8219/7929/364   14940/1137    32  305   25.97)
ramon: poll                 wall=19.000s usage=18.899s mem=27640KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 822)
(smt.stats   70  10026 316907 677103  8232/7945/365   14419/1239    33  307   25.97)
(smt.stats   71  10187 322168 691802  8283/7954/365   15028/1240    33  307   26.07)
ramon: poll                 wall=20.000s usage=19.899s mem=27760KiB load=1.00 rootload=1.00
(smt.stats   72  10364 326061 715951  8300/8012/366   15709/1402    34  326   26.07)
ramon: end                  Tue Dec 24 15:30:30 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.950s
ramon: group.utime          19.938s
ramon: group.stime          0.012s
ramon: group.mempeak        28016KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              0.99
