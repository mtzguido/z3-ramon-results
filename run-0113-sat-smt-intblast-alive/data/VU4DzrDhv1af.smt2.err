ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:03:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40421 MiB
ramon: sys.mem.avail        61379 MiB
ramon: sys.nprocs           1317
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/VU4DzrDhv1af.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3870588
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   238/238     0/0  67       0    18.53   0.00)
(sat.stats    222   2468    0   238/238   222/128  67       0    19.12   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 455 :time 0.00)
(sat.stats    222   2468    0   238/238   222/128  67       0    19.12   0.02)
(sat.stats    222   2468    0   238/238   222/128  67       0    19.12   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 832619.12 :time 0.00)
(sat.stats    222   2468    0   238/238   222/130  67       0    19.12   0.02)
(sat.stats    225   2537    1   238/238   225/133  67       0    19.12   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    228   2552    2   238/238   228/136  67       0    19.21   0.02)
(sat.stats    373   3767    3   238/238   373/250  67       0    19.21   0.03)
(sat.stats    377   3783    4   238/238   377/251  67       0    19.21   0.03)
(sat.stats    380   3808    5   238/238   380/252  67       0    19.21   0.03)
(sat.stats    384   3811    6   238/238   384/254  67       0    19.21   0.03)
(sat.stats    387   3815    7   238/238   387/255  67       0    19.21   0.03)
(sat.stats    399   3819    8   238/238   399/255  67       0    19.21   0.03)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1852 :time 0.00)
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 36 := 36 << 36
(sat.stats    490   5296    9   259/258   489/292  74       0    19.79   0.18)
(sat.stats    493   5313   10   273/271   492/293  74       0    19.89   0.18)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1992 :time 0.00)
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 6410 := 57993466945&2473901162496
(sat.stats    496   5713   11   286/284   495/294  81       0    19.99   0.19)
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
shl: (shl[64] (bv2int %0) (mod (+ #69 #362) 64)) 0 := 36 << 36
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 57993466944 := 57993466945&2473901162496
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2053 :time 0.00)
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 1688628 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 11953 := 2473901162496&57993466945
(sat.stats    505   6577   12   335/332   503/294  98       0    19.99   0.20)
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 38478 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 63212 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 4680 := 2473901162496&57993466945
(sat.stats    508   6687   13   369/366   506/294  98       0    20.09   0.20)
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 3888 := 2473901162496&57993466945
(sat.stats    511   6722   14   394/391   509/294  98       0    20.19   0.20)
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 416 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 2176 := 2473901162496&57993466945
(sat.stats    514   6751   15   419/416   512/294  98       0    20.19   0.20)
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 64 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 256 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 2560 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 3072 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 4096 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 49152 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 10240 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 32768 := 2473901162496&57993466945
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    762   8046   17  2351/2348   761/297  98       0    20.82   0.27)
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 17 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 3851672 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 16 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 32 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 57993466880 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 57993465856 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 17803264 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 8192 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 341639168 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 16384 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 8192 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 65536 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 3366060032 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 3930849280 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 7552368640 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 18529386496 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 43874516992 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 1379926016 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 34468790272 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 31641829376 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 16777216 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 52210696192 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 67108864 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 1342177280 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 2684354560 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 13958643712 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 27917287424 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 47244640256 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 51539607552 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 8589934592 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 0 := 57993466945&2473901162496
band: (band[53] (shl[64] (bv2int %0) (mod #363 64)) (if (= #767 63) 0 (if #769 1 #902))) 34359738368 := 2473901162496&57993466945
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 640 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 768 := 57993466945&2473901162496
band: (band[53] (if (= #597 52) 1 (if #599 3 #747)) (shl[53] (bv2int %0) (mod #69 53))) 512 := 57993466945&2473901162496
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 4635 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4886 :time 0.00)
ramon: poll                 wall=1.000s usage=0.951s mem=29692KiB load=0.95 rootload=0.93
ramon: poll                 wall=2.000s usage=1.951s mem=35424KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.951s mem=40728KiB load=1.00 rootload=0.99
(sat.stats   1200  23011   39 83096/83093  3993/3136 401       0    41.00   3.31)
ramon: poll                 wall=4.000s usage=3.950s mem=54016KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.950s mem=58476KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.949s mem=60724KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.949s mem=61216KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.949s mem=61684KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.948s mem=62696KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.948s mem=64028KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.948s mem=64472KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.947s mem=64896KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.003s usage=12.949s mem=65328KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.945s mem=65816KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.945s mem=66268KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.945s mem=66696KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.944s mem=67156KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.944s mem=67652KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.943s mem=68108KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.943s mem=70480KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:03:56 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.040s
ramon: group.total          20.004s
ramon: group.utime          19.960s
ramon: group.stime          0.044s
ramon: group.mempeak        70736KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
