ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:21:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41507 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/TISqAsyWHHXd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2972686
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3700   1381   708/606/112     138/7     7   18   18.76)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 268435454&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 268435454&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1&256
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 1 := 268435455 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1&256
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 1 := 268435455 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1&256
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 1 := 2 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1&256
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 1 := 2 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 255 := 512&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 8404992&256
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 8405024 := 8405024 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1&256
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 1 := 8388609 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 512&256
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 8388609 := 8388609 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 223 := 8404992&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 8404992&256
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 8405024 := 8405024 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 30 := 193315328&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 30 := 193315328&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 134480384&256
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 134480385 := 134480385 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 256 := 268434944&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 256 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 255 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 254 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 252 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 248 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 240 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 64 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 128 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 128 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 256 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 256 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 128 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2 := 260555776&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4 := 260555776&256
(smt.stats    1    202   4639   2300  1404/1167/121     269/15     9   27   19.34)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 80 := 261081088&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 80 := 261606400&256
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 80 := 261606400&256
(smt.stats    2    313   5283   3493  1494/1291/190     452/38    11   45   19.43)
(smt.stats    3    414   5948   5782  1610/1482/207     624/54    13   49   19.53)
(smt.stats    4    525   7086   8315  1658/1528/213     917/116    16  105   19.53)
(smt.stats    5    647   8641  12576  1736/1536/213    1098/123    16  105   19.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  10434  17026  1755/1619/216    1247/147    17  135   19.63)
(smt.stats    7    859  13137  22832  1809/1639/216    1512/156    18  136   19.72)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 265283311&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 265283296&8
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 265283296 := 265283296 << 4
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 265289216&8
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 265289216 := 265289216 << 4
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 265283584&8
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 265283584 := 265283584 << 4
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 0&8
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 263182318 := 0 << 4
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 0&8
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 263182318 := 0 << 4
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 0&8
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 263182318 := 0 << 4
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 0&8
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 263182318 := 0 << 4
(smt.stats    8    981  14829  27501  1866/1731/243    2134/213    20  158   19.91)
(smt.stats    9   1115  17030  31986  1926/1779/243    2363/213    20  158   20.03)
(smt.stats   10   1216  19113  39531  1946/1794/245    2560/234    21  160   20.03)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16 := 8389136&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16 := 8389136&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16 := 8389136&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1 := 8389664&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 8389664&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 5 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 512 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 512 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 512 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 512 := 16777248&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 512 := 16777280&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 512 := 16777280&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 512 := 16777280&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 512 := 16777280&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1024 := 16777280&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2048 := 16777280&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4096 := 16777280&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8192 := 16777280&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4096 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8192 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16384 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32768 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 65536 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 131072 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 131072 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 262144 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 524288 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1048576 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2097152 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 524288 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1048576 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2097152 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4194304 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4194304 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4194304 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4194304 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 524288 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1048576 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 131072 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2097152 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2097152 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2097152 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2097152 := 8389216&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1048576 := 8389216&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1048576 := 8389152&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 524288 := 8389152&8388608
(smt.stats   11   1327  21232  45014  2142/1949/373    2868/257    22  162   20.61)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4194304 := 21233696&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4194304 := 21233696&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4194304 := 21233696&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4194304 := 21233696&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 131072 := 21364768&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 131072 := 21364768&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 131072 := 21364768&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 131072 := 21365792&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32768 := 21365792&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32768 := 21365792&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32768 := 21365792&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32768 := 21397536&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32768 := 21397536&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 65536 := 21431328&8388608
(smt.stats   12   1449  23025  50499  2270/2064/414    3177/311    23  191   20.82)
(smt.stats   13   1583  25657  58233  2375/2161/419    3769/349    24  209   21.02)
(smt.stats   14   1730  27494  63093  2544/2245/420    4067/605    25  216   21.21)
(smt.stats   15   1831  29541  68422  2738/2500/420    4226/605    25  216   21.21)
ramon: poll                 wall=1.000s usage=0.998s mem=22420KiB load=1.00 rootload=0.98
(smt.stats   16   1945  31501  78731  2807/2655/425    4821/852    27  233   21.30)
(smt.stats   17   2067  34121  88135  2869/2668/426    5342/852    27  233   21.40)
(smt.stats   18   2201  38376 105678  2920/2718/426    5466/954    28  403   21.40)
(smt.stats   19   2348  41552 119615  3022/2777/426    5724/955    28  403   21.51)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2509  45511 137523  3080/2877/427    6266/1063    29  406   21.60)
(smt.stats   21   2610  48304 147590  3129/2960/427    6512/1064    29  406   21.60)
(smt.stats   22   2721  50587 157343  3246/3016/428    6666/1160    30  410   21.70)
(smt.stats   23   2843  52946 169928  3363/3104/428    7015/1160    30  410   21.80)
(smt.stats   24   2977  55317 185737  3419/3268/435    7615/1350    31  416   21.89)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 524288 := 861184&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 524288 := 795648&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 524288 := 795648&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2097152 := 2630656&8388608
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8388608 := 8389120&8388608
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 276824576 := 1 << 24
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8388608 := 8389120&8388608
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 276824576 := 1 << 24
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8388608 := 8389120&8388608
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 276824576 := 2 << 24
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8388608 := 8389120&8388608
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 276824576 := 2 << 24
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8388608 := 8389120&8388608
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 276824576 := 2 << 24
(smt.stats   25   3125  58247 195133  3613/3449/455    8197/1488    32  458   22.14)
ramon: poll                 wall=2.000s usage=1.993s mem=23388KiB load=0.99 rootload=0.99
(smt.stats   26   3286  61762 212852  3633/3466/463    8568/1545    33  508   22.23)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2 := 5505024&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1 := 5505024&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 5505024&8
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 273940480 := 218431248 << 4
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 1 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 2 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 4 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 8 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 8 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 7 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 6 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 4 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 2 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 8 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 4 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 1 := 1048576&8
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 1048576&8
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #385 27) 1 (if #387 2 #439))) 2 := 1048576&8
(smt.stats   27   3463  64128 224569  3807/3497/463    9359/1557    33  508   22.63)
(smt.stats   28   3564  65702 236210  3863/3671/508   10243/1557    33  508   22.82)
(smt.stats   29   3675  66801 244217  3947/3766/509   10563/1883    34  537   22.82)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 0&4
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 268435456 := 8405264 << 3
(smt.stats   30   3797  67971 251977  3953/3766/509   10742/1884    34  537   24.10)
(smt.stats   31   3931  69786 274299  4349/4167/515   11239/2006    35  550   23.62)
(smt.stats   32   4078  73924 291839  4483/4174/517   12336/2013    35  550   23.85)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8192 := 3424257&16384
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8192 := 3489793&16384
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8192 := 3432449&16384
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16384 := 3489793&16384
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 271925249 := 142688373 << 15
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16384 := 3497985&16384
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 271933441 := 142614635 << 15
ramon: poll                 wall=3.000s usage=2.993s mem=25492KiB load=1.00 rootload=1.00
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16384 := 3432449&16384
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 271867905 := 109322345 << 15
(smt.stats   33   4239  78417 309572  4765/4382/517   12990/2281    36  557   24.04)
(smt.stats   34   4416  83170 345084  5031/4600/532   13749/2282    36  557   24.32)
(smt.stats   35   4610  89066 377952  5042/4858/532   15358/2366    37  560   24.64)
(smt.stats   36   4711  91711 389641  5092/4880/533   15672/2656    38  564   24.64)
(smt.stats   37   4822  93985 400220  5188/4948/533   16065/2658    38  564   24.74)
(smt.stats   38   4944  97050 418081  5268/5034/533   16571/2659    38  564   24.83)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=4.000s usage=3.993s mem=26244KiB load=1.00 rootload=1.00
(smt.stats   39   5078 101451 457052  5301/5110/533   17879/2659    38  564   24.93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5225 105560 478065  5502/5306/536   18370/2876    39  565   25.12)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1 := 152387584&2
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 152387584&2
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 3105177600 := 6517504 << 2
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 152387584&2
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 3105177600 := 6648576 << 2
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 152387584&1
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 3105177600 := 66679552 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 0 := 152387584&1
shl: (shl[32] (bv2int %0) (mod (+ #107 #260) 32)) 3105177600 := 81919744 << 1
(smt.stats   41   5386 109229 511210  5792/5552/542   19068/3048    40  568   25.26)
(smt.stats   42   5563 112608 542188  5850/5622/548   19625/3052    40  568   25.37)
(smt.stats   43   5757 117661 574328  5900/5669/549   20526/3367    41  573   25.47)
ramon: poll                 wall=5.000s usage=4.993s mem=26884KiB load=1.00 rootload=1.00
(smt.stats   44   5970 121194 600234  6030/5833/551   21717/3525    42  578   25.56)
(smt.stats   45   6071 123040 616111  6043/5841/551   22178/3526    42  578   25.76)
(smt.stats   46   6182 125873 640510  6111/5914/555   22592/3526    42  578   25.76)
(smt.stats   47   6304 128156 659190  6114/5917/555   22807/3526    42  578   25.87)
(smt.stats   48   6438 130424 686799  6138/5925/555   22944/3831    43  615   25.87)
(smt.stats   49   6585 135703 740944  6145/5948/556   23485/3831    43  615   25.87)
(smt.stats   50   6746 138719 752480  6260/5952/556   24059/3939    44  619   26.09)
ramon: poll                 wall=6.007s usage=5.998s mem=27476KiB load=1.00 rootload=0.99
(smt.stats   51   6923 146403 827703  6261/6064/556   24685/3939    44  619   26.09)
(smt.stats   52   7117 152987 875279  6263/6066/561   26163/4005    45  629   26.18)
(smt.stats   53   7330 159832 914502  6430/6199/562   27072/4245    46  640   26.59)
ramon: poll                 wall=7.000s usage=6.991s mem=28212KiB load=1.00 rootload=1.00
(smt.stats   54   7564 167043 945885  6599/6320/563   28306/4247    46  640   26.82)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 64 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 64 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 64 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 128 := 153088160&65536
(smt.stats   55   7665 170952 970120  6675/6410/563   28587/4251    46  640   26.92)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8 := 153088160&65536
(smt.stats   56   7776 172622 983837  6757/6509/578   28834/4482    47  643   26.92)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1024 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1024 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1024 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 1024 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2048 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2048 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 2048 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 4096 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32768 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 32768 := 153088160&65536
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 16384 := 153088160&65536
(smt.stats   57   7898 174089 997863  6974/6592/578   29152/4488    47  643   27.11)
band: (band[28] (shl[32] (bv2int %0) (mod #261 32)) (if (= #458 31) 0 (if #460 1 #520))) 8192 := 153088160&65536
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8032 177072 1019929  7033/6809/593   29659/4490    47  643   27.21)
(smt.stats   59   8179 181520 1036239  7188/6852/593   30053/4491    47  643   27.30)
ramon: poll                 wall=8.000s usage=7.990s mem=28800KiB load=1.00 rootload=1.00
(smt.stats   60   8340 186807 1086506  7336/7030/593   30660/4492    47  643   27.40)
(smt.stats   61   8517 192419 1121155  7469/7234/593   31600/4819    48  646   27.59)
(smt.stats   62   8711 198105 1215211  7510/7256/594   33582/4819    48  646   27.96)
(smt.stats   63   8924 204197 1319186  7655/7391/595   34976/5202    50  656   28.15)
(smt.stats   64   9158 211845 1348287  7699/7415/597   35565/5202    50  656   28.25)
ramon: poll                 wall=9.003s usage=8.993s mem=29688KiB load=1.00 rootload=1.00
(smt.stats   65   9415 222673 1424958  7772/7502/599   37120/5361    51  678   28.44)
(smt.stats   66   9516 226447 1458296  7780/7507/599   37882/5361    51  678   28.56)
(smt.stats   67   9627 232785 1526585  7781/7511/600   38131/5361    51  678   28.56)
(smt.stats   68   9749 236644 1552503  7844/7552/601   38295/5465    52  704   28.67)
ramon: poll                 wall=10.000s usage=9.990s mem=30332KiB load=1.00 rootload=1.00
(smt.stats   69   9883 240351 1587100  7917/7606/601   38487/5465    52  704   28.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 769)
(smt.stats   70  10030 244879 1640282  7929/7652/602   38910/5465    52  704   28.96)
(smt.stats   71  10191 248972 1653259  8075/7657/602   39261/5625    53  708   29.06)
(smt.stats   72  10368 252837 1705905  8528/7870/602   39938/5628    53  708   29.43)
ramon: poll                 wall=11.000s usage=10.990s mem=31304KiB load=1.00 rootload=1.00
(smt.stats   73  10562 258456 1741995  8650/8296/602   40548/5631    53  708   29.52)
(smt.stats   74  10775 268113 1821780  8927/8388/602   41740/5633    53  708   29.95)
ramon: poll                 wall=12.000s usage=11.990s mem=31384KiB load=1.00 rootload=1.00
(smt.stats   75  11009 276999 1893105  9169/8892/603   43155/5899    54  727   30.05)
(smt.stats   76  11266 289816 2028335  9265/8918/603   44111/5899    54  727   30.14)
ramon: poll                 wall=13.000s usage=12.989s mem=31676KiB load=1.00 rootload=1.00
(smt.stats   77  11548 301287 2124286  9319/9030/604   46975/6316    55  739   30.54)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11649 306936 2162603  9408/9036/604   47387/6317    55  739   30.63)
ramon: poll                 wall=14.000s usage=13.989s mem=32248KiB load=1.00 rootload=1.00
(smt.stats   79  11760 311700 2196639  9483/9132/604   47774/6317    55  739   30.81)
(smt.stats   80  11882 317937 2246260  9592/9220/604   48384/6318    55  739   30.81)
(smt.stats   81  12016 320186 2272798  9654/9332/604   49499/6318    55  739   30.91)
(smt.stats   82  12163 320766 2286617  9655/9370/604   49754/6318    55  739   31.02)
ramon: poll                 wall=15.000s usage=14.989s mem=32608KiB load=1.00 rootload=1.00
(smt.stats   83  12324 327954 2312439  9844/9370/604   50410/6319    55  739   31.12)
(smt.stats   84  12501 334634 2337295  9927/9589/604   51156/6321    55  739   31.25)
ramon: poll                 wall=16.000s usage=15.989s mem=32776KiB load=1.00 rootload=1.00
(smt.stats   85  12695 343458 2422268 10105/9658/604   52073/6326    55  739   31.34)
(smt.stats   86  12908 349248 2501507 10298/9840/604   52830/6338    55  739   31.45)
ramon: poll                 wall=17.000s usage=16.989s mem=33108KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   87  13142 358202 2566442 10441/10098/605   54395/7435    56  743   31.65)
(smt.stats   88  13400 370405 2670804 10567/10180/605   55787/7442    56  743   31.84)
ramon: poll                 wall=18.000s usage=17.989s mem=33548KiB load=1.00 rootload=1.00
(smt.stats   89  13682 381129 2792268 10631/10292/605   57783/7442    56  743   32.04)
(smt.stats   90  13992 388783 2864654 10904/10379/605   59221/7449    56  743   32.23)
(smt.stats   91  14093 392856 2914224 10920/10625/605   59642/7450    56  743   32.32)
ramon: poll                 wall=19.003s usage=18.990s mem=33980KiB load=1.00 rootload=1.00
(smt.stats   92  14204 396504 2932979 11052/10641/606   59956/7944    57  747   32.42)
(smt.stats   93  14326 398596 2965684 11208/10815/606   60282/7945    57  747   32.42)
(smt.stats   94  14460 400801 2993222 11410/10945/606   61521/7948    57  747   33.24)
(smt.stats   95  14607 403795 3024444 11510/11131/606   62057/7952    57  747   33.43)
ramon: poll                 wall=20.000s usage=19.987s mem=34888KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:22:06 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.997s
ramon: group.utime          19.969s
ramon: group.stime          0.028s
ramon: group.mempeak        35144KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
