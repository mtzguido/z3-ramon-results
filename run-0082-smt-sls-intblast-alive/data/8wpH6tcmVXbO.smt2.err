ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:48:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29156 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/8wpH6tcmVXbO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             661869
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    112.36     10000        49          0            1        2)
(sat.ddfw       1      1    65.366     20001        98          1            1        3)
(sat.ddfw       1      1   49.2611     40001       196          2            1        5)
(sat.ddfw       1      1   42.6136     70001       343          3            1        8)
(smt.stats    0    101   2497    346  1292/1110/107     103/22     5   18   52.03)
(smt.stats    1    202   3882   1028  1790/1626/109     205/28     6   19   52.13)
ramon: poll                 wall=1.000s usage=1.060s mem=54208KiB load=1.06 rootload=1.05
(sat.ddfw       1      1   34.8432    110001       539          4            1       12)
(smt.stats    2    313   4677   1730  1954/1702/109     313/29     7   23   52.42)
(sat.ddfw       1      1    27.639    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=2.061s mem=54520KiB load=1.00 rootload=1.00
(smt.stats    3    414   6041   3287  2237/2065/115     411/31     8   27   52.51)
(smt.stats    4    525   7683   4238  2273/2098/119     520/76    10   33   52.73)
(smt.stats    5    647  10758   7155  2845/2497/124     645/92    11   36   52.82)
(sat.ddfw       1      1   23.0862    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  12271   9332  2967/2721/125     752/100    13   37   52.92)
ramon: poll                 wall=3.000s usage=3.061s mem=55076KiB load=1.00 rootload=1.00
(smt.stats    7    859  14915  12166  3059/2759/125     863/101    13   37   53.02)
(smt.stats    8    981  16475  15514  3172/2929/133     990/114    14   39   53.02)
(smt.stats    9   1115  22854  18223  3190/2939/133    1113/119    15   51   53.18)
(sat.ddfw       1      1   19.8751    290001      1421          7            1       30)
(smt.stats   10   1216  25340  21156  3227/2966/134    1219/124    16   52   53.18)
ramon: poll                 wall=4.000s usage=4.058s mem=55484KiB load=1.00 rootload=1.00
(smt.stats   11   1327  27729  26307  3315/3026/134    1337/124    16   52   53.28)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32088  30720  3369/3122/134    1458/124    16   52   53.37)
(smt.stats   13   1583  35704  34702  3395/3151/135    1578/137    17   53   53.37)
(smt.stats   14   1730  41359  48990  3396/3159/135    1729/137    17   53   53.62)
(smt.stats   15   1831  43073  52700  3402/3159/135    1833/137    17   53   53.62)
(sat.ddfw       1      1   17.5016    370001      1813          8            1       38)
(smt.stats   16   1942  45559  57090  3452/3175/135    1945/138    17   53   53.62)
ramon: poll                 wall=5.000s usage=5.062s mem=55764KiB load=1.00 rootload=1.00
(smt.stats   17   2064  49756  61765  3641/3249/135    2069/139    17   53   53.72)
(smt.stats   18   2198  55602  73228  3661/3420/135    2194/139    17   53   53.82)
(smt.stats   19   2345  63799  82199  3682/3425/136    2338/145    18   58   53.98)
(smt.stats   20   2506  67788  87661  3685/3446/136    2502/145    18   58   54.20)
(smt.stats   21   2607  71062  94964  3696/3452/136    2606/145    18   58   54.20)
(smt.stats   22   2718  75160  98453  3707/3466/136    2712/145    18   58   54.20)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 226 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 224 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 64 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 128 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 64 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 64 := 35184372089024&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 128 := 35184372088967&35184372088832
(sat.ddfw       1      1   15.6658    460001      2254          9            1       47)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1280 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1536 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2048 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2048 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4096 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8192 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 32768 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 65536 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 131072 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 262144 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 524288 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 524288 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1048576 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2097152 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4194304 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 33554432 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 67108864 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 134217728 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 268435456 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 536870912 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2147483648 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4294967296 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8589934592 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 17179869184 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 34359738368 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 68719476736 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 137438953472 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 274877906944 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8589934592 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 17179869184 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 34359738368 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 68719476736 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 137438953472 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 137438953472 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 274877906944 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 549755813888 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 196608 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 131072 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 131072 := 35253628567552&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 17179869184 := 35184374185984&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4096 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4096 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8192 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091565568&35184372088832
ramon: poll                 wall=6.000s usage=6.056s mem=57796KiB load=0.99 rootload=0.99
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9535 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9534 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9532 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9528 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9527 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565823&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565824&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565824&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9216 := 35253091565568&35184372088832
(smt.stats   23   2840  76678 100698  3958/3484/152    2961/181    19   62   55.39)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2147483648 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2147483648 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2147483648 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35190277800448&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1048576 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 262144 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 262144 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 524288 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2097152 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2097152 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2097152 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4194304 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 20971520 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4194304 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4194304 := 35253091697152&35184372088832
(smt.stats   24   2974  80404 107393  4037/3785/414    3290/397    20  116   55.58)
(smt.stats   25   3121  85596 122681  4049/3810/414    3460/397    20  116   55.67)
(smt.stats   26   3282  93838 146082  4067/3814/414    3682/397    20  116   55.93)
ramon: poll                 wall=7.000s usage=7.055s mem=58064KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.1703    560001      2745         10            1       57)
ramon: poll                 wall=8.000s usage=8.056s mem=58232KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.9457    670001      3284         11            1       68)
(smt.stats   27   3459  97325 154051  4251/3837/414    3868/401    20  116   56.21)
ramon: poll                 wall=9.000s usage=9.059s mem=58500KiB load=1.00 rootload=1.01
(smt.stats   28   3560 101587 160944  4509/4272/424    4111/486    21  119   56.42)
(smt.stats   29   3671 108483 176758  4510/4273/424    4248/486    21  119   56.51)
ramon: poll                 wall=10.000s usage=10.057s mem=58712KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.9249    790001      3872         12            1       80)
(smt.stats   30   3793 112869 184790  4631/4275/424    4440/594    22  146   56.51)
(smt.stats   31   3927 117551 198567  4843/4606/426    4578/696    23  151   56.61)
ramon: poll                 wall=11.000s usage=11.057s mem=58884KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 121853 216737  4865/4628/434    4727/696    23  151   56.71)
(smt.stats   33   4235 130632 237507  4871/4635/435    4868/715    24  191   56.71)
(smt.stats   34   4412 138317 264496  4891/4655/438    5075/753    26  203   57.45)
(sat.ddfw       1      1   11.0525    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=12.056s mem=59692KiB load=1.00 rootload=1.00
(smt.stats   35   4606 144642 291920  4910/4673/441    5352/794    27  212   57.55)
ramon: poll                 wall=13.000s usage=13.054s mem=59844KiB load=1.00 rootload=1.00
(smt.stats   36   4707 146962 299094  5036/4702/441    5479/795    27  212   57.74)
(sat.ddfw       1      1   10.3009   1060001      5196         14            1      108)
(smt.stats   37   4818 150492 309660  5157/4908/442    5652/796    28  213   57.84)
ramon: poll                 wall=14.000s usage=14.057s mem=60112KiB load=1.00 rootload=1.00
(smt.stats   38   4940 152932 320836  5248/4932/442    5826/796    28  213   57.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 957)
(smt.stats   39   5074 157895 326482  5313/5040/442    5133/800    28  213   57.84)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 6&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355334 := 841 << 42
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 6&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355334 := 841 << 42
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 6&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355334 := 841 << 42
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 6&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355334 := 841 << 42
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 5&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355333 := 841 << 42
ramon: poll                 wall=15.000s usage=15.036s mem=60252KiB load=0.98 rootload=0.98
(smt.stats   40   5221 163789 339097  5382/5135/455    5328/953    30  306   57.94)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 48378511622144&8796093022208
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 48378511622144&8796093022208
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 48378511622144&8796093022208
(smt.stats   41   5382 172763 350429  5545/5237/456    5532/958    30  306   58.03)
(smt.stats   42   5559 182709 371720  5572/5284/475    6001/1008    32  318   58.41)
(sat.ddfw       1      1   9.63639   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=16.035s mem=61192KiB load=1.00 rootload=1.00
(smt.stats   43   5753 191085 390524  5740/5418/477    6368/1066    33  326   58.60)
ramon: poll                 wall=17.000s usage=17.015s mem=61236KiB load=0.98 rootload=0.98
(smt.stats   44   5966 197637 407438  6121/5843/479    6979/1170    34  330   58.69)
(smt.stats   45   6067 202057 422414  6131/5853/482    7430/1248    35  337   58.79)
(smt.stats   46   6178 204254 426671  6315/5862/484    7662/1251    35  337   58.89)
(sat.ddfw       1      1   9.00242   1370001      6715         16            1      139)
ramon: poll                 wall=18.000s usage=17.984s mem=61700KiB load=0.97 rootload=0.97
(smt.stats   47   6300 204911 428110  6338/6044/484    7887/1251    35  337   58.98)
(smt.stats   48   6434 206673 433263  6725/6375/485    8190/1259    36  354   59.09)
(smt.stats   49   6581 213300 459227  6899/6621/486    8630/1259    36  354   59.58)
(smt.stats   50   6742 224044 505318  6899/6621/486    8785/1488    37  364   59.58)
ramon: poll                 wall=19.000s usage=18.982s mem=61896KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.977s mem=62148KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 21:48:53 2024
ramon: root.execname        z3
ramon: root.utime           20.030s
ramon: root.stime           0.000s
ramon: group.total          20.043s
ramon: group.utime          20.035s
ramon: group.stime          0.008s
ramon: group.mempeak        62404KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.00
