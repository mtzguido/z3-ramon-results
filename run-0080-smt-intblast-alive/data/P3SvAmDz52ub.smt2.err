ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:18:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25845 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1399
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/P3SvAmDz52ub.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             17281
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5983    844  2335/2081/80      95/2     2   11   19.59)
(smt.stats    1    202  11776   4609  3282/2955/86     181/6     7   13   19.93)
(smt.stats    2    313  13416   6457  3986/3426/86     289/30     7   13   20.12)
(smt.stats    3    414  17146  11795  4034/3634/90     380/35     9   16   20.22)
(smt.stats    4    525  18464  14579  4585/4137/93     464/45    10   19   20.22)
(smt.stats    5    647  21079  17464  4735/4270/94     577/53    11   21   20.34)
(smt.stats :restarts :decisions    :clauses/bin/units        :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas        :deletions    )
(smt.stats    6    748  26644  19667  4778/4296/94     681/58    12   27   20.44)
(smt.stats    7    859  32640  22850  4797/4324/95     792/68    13   28   20.44)
(smt.stats    8    981  36094  26598  4830/4364/99     892/77    14   30   20.53)
(smt.stats    9   1115  41416  32717  4871/4394/99     987/80    15   45   20.53)
(smt.stats   10   1216  45983  41414  4881/4410/100    1094/83    16   47   20.53)
(smt.stats   11   1327  51839  46504  4901/4421/100    1202/84    16   47   20.53)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1449  56105  52875  4914/4438/100    1324/85    16   47   20.65)
(smt.stats   13   1583  58497  57048  4932/4464/100    1449/85    16   47   20.65)
(smt.stats   14   1730  63270  60642  4971/4474/100    1593/86    16   47   20.65)
(smt.stats   15   1831  66871  64119  5005/4539/101    1692/102    17   48   20.76)
(smt.stats   16   1942  70215  72190  5005/4539/101    1803/102    17   48   20.76)
(smt.stats   17   2064  72287  77770  5008/4542/101    1924/102    17   48   20.87)
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 64 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 63 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 64 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 63 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 62 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 60 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 56 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 48 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 1 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 1 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 2 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 64 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 60 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 56 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 16 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 32 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 32 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 8 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 16 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 64 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 64 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 1 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 2 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 4 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 8 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 16 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 32 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 64 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 64 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 16 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 16 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 8 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 8 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 4 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 2 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 2 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 2 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 1 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 2 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 2 := 2251799813685120&64
(smt.stats   18   2198  74788  86244  5144/4642/221    2076/116    18   59   21.26)
(smt.stats   19   2345  80056  92497  5160/4682/231    2253/132    19   79   21.36)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   20   2506  86225 105480  5189/4713/233    2425/143    21   84   21.36)
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 4 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 4 := 2251799813685120&64
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685120&64
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 1 := 2251799813685120&64
(smt.stats   21   2607  89597 111149  5196/4720/239    2542/147    22   89   21.36)
ramon: poll                 wall=1.000s usage=0.927s mem=22592KiB load=0.93 rootload=0.91
(smt.stats   22   2718  92173 116964  5236/4726/240    2664/166    23   90   21.46)
(smt.stats   23   2840  96581 126625  5244/4765/240    2821/167    23   90   21.46)
(smt.stats   24   2974  99350 131262  5279/4801/241    2976/195    24   96   21.46)
(smt.stats   25   3121 101718 137123  5290/4807/242    3140/195    24   96   21.58)
(smt.stats   26   3282 108226 153041  5292/4814/242    3299/199    25  101   21.58)
(smt.stats   27   3459 114390 170042  5294/4816/243    3497/200    26  103   21.68)
(smt.stats   28   3560 115355 174774  5299/4821/243    3614/200    26  103   21.68)
(smt.stats   29   3671 117194 181782  5324/4841/243    3745/200    26  103   21.78)
(smt.stats   30   3793 119124 186854  5328/4845/244    3884/215    27  104   21.78)
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 4 := 2251799813685216&16
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 4 := 2251799813685216&16
(smt.stats   31   3927 122124 194227  5345/4849/244    4047/219    27  104   22.07)
(smt.stats   32   4074 125007 203704  5353/4870/245    4230/252    28  108   22.07)
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 128 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 128 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 128 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 32 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 128 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 128 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 128 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 128 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 128 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 8 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 8 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 16 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 16 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 32 := 2251799813684992&128
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684992&128
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 32 := 2251799813684992&128
(smt.stats   33   4235 127326 215040  5382/4899/277    4402/266    29  123   22.07)
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685184&32
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 32 := 2251799813685184&32
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685184&32
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 32 := 2251799813685184&32
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813685184&32
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 32 := 2251799813685184&32
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 32 := 2251799813685184&32
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 32 := 2251799813685184&32
(smt.stats   34   4412 130525 224906  5399/4916/280    4627/281    30  129   22.17)
(smt.stats   35   4606 137370 239003  5416/4929/281    4873/281    30  129   22.17)
(smt.stats   36   4707 139472 248615  5427/4938/281    4991/299    31  133   22.39)
(smt.stats   37   4818 142074 256348  5427/4938/282    5106/302    32  134   22.39)
(smt.stats   38   4940 143041 258569  5591/4939/282    5305/302    32  134   22.68)
ramon: poll                 wall=2.000s usage=1.925s mem=24176KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 165)
(smt.stats   39   5074 145404 266695  5643/5154/282    5428/302    32  134   22.68)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5221 147297 275860  5651/5157/282    5676/302    32  134   22.68)
(smt.stats   41   5382 149785 290082  5659/5166/282    5935/303    32  134   22.68)
(smt.stats   42   5559 152866 302923  5703/5170/284    6218/338    33  141   22.68)
(smt.stats   43   5753 157979 318665  5814/5218/284    6591/342    33  141   22.87)
ramon: poll                 wall=3.000s usage=2.924s mem=24496KiB load=1.00 rootload=1.00
(smt.stats   44   5966 164480 337818  6013/5346/287    7251/466    34  144   23.03)
(smt.stats   45   6067 167405 347888  6023/5531/287    7486/466    34  144   23.03)
(smt.stats   46   6178 170212 359745  6024/5535/287    7688/638    35  144   23.03)
(smt.stats   47   6300 172157 371251  6030/5541/287    7874/638    35  144   23.03)
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 32 := 2251799813685184&32
(smt.stats   48   6434 175052 389121  6038/5543/287    8399/640    35  144   23.14)
(smt.stats   49   6581 177967 401516  6051/5559/290    8634/700    36  145   23.14)
ramon: poll                 wall=4.000s usage=3.924s mem=24712KiB load=1.00 rootload=1.00
(smt.stats   50   6742 181359 415270  6130/5564/290    8868/702    36  145   23.35)
(smt.stats   51   6919 185088 432674  6178/5659/290    9105/765    37  147   23.55)
(smt.stats   52   7113 190429 457240  6205/5705/290    9473/766    37  147   23.54)
ramon: poll                 wall=5.000s usage=4.924s mem=25296KiB load=1.00 rootload=1.00
(smt.stats   53   7326 195744 478161  6418/5913/293    9908/853    38  147   23.72)
(smt.stats   54   7560 201772 505191  6466/5957/295   10519/918    39  151   23.82)
(smt.stats   55   7661 205182 515870  6528/5962/295   10696/920    39  151   23.88)
(smt.stats   56   7772 207517 521879  6604/6043/295   10814/998    40  154   23.87)
ramon: poll                 wall=6.000s usage=5.923s mem=25528KiB load=1.00 rootload=1.00
(smt.stats   57   7894 209868 533076  6682/6140/295   10935/998    40  154   23.87)
(smt.stats   58   8028 213245 549491  6688/6183/295   11145/998    40  154   23.87)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8175 217494 568757  6734/6183/295   11489/1000    40  154   23.93)
ramon: poll                 wall=7.000s usage=6.923s mem=25672KiB load=1.00 rootload=1.00
(smt.stats   60   8336 222894 594111  6783/6263/296   11923/1112    41  156   24.09)
(smt.stats   61   8513 227878 618368  6822/6290/296   12447/1116    41  156   24.18)
(smt.stats   62   8707 230263 632373  6993/6318/296   12744/1119    41  156   24.35)
(smt.stats   63   8920 233790 660699  7158/6536/296   13119/1123    41  156   24.34)
ramon: poll                 wall=8.000s usage=7.923s mem=25996KiB load=1.00 rootload=1.00
(smt.stats   64   9154 237801 687461  7204/6661/296   13634/1124    41  156   24.44)
(smt.stats   65   9411 243728 716768  7260/6709/296   14124/1125    41  156   24.44)
(smt.stats   66   9512 245144 724352  7278/6759/296   14451/1125    41  156   24.54)
(smt.stats   67   9623 248542 736587  7374/6781/296   14667/1125    41  156   24.64)
(smt.stats   68   9745 252784 750528  7411/6892/296   14863/1125    41  156   24.64)
(smt.stats   69   9879 258025 775292  7421/6909/296   15040/1125    41  156   24.64)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 261599 791607  7433/6928/297   15422/1297    42  156   24.64)
ramon: poll                 wall=9.004s usage=8.926s mem=26276KiB load=1.00 rootload=1.00
(smt.stats   71  10187 265543 815819  7438/6933/297   15728/1297    42  156   24.64)
(smt.stats   72  10364 270794 843675  7461/6944/298   15974/1325    43  157   24.76)
(smt.stats   73  10558 275579 869023  7494/6982/298   16461/1325    43  157   24.85)
(smt.stats   74  10771 278529 892080  7510/6996/298   16949/1325    43  157   24.95)
(smt.stats   75  11005 283629 923874  7538/7022/298   17379/1325    43  157   25.05)
(smt.stats   76  11262 289181 955130  7593/7064/298   17829/1325    43  157   25.14)
(smt.stats   77  11544 295001 987305  7622/7089/298   18268/1325    43  157   25.27)
(smt.stats   78  11645 296757 998076  7643/7108/298   18425/1325    43  157   25.27)
ramon: poll                 wall=10.000s usage=9.921s mem=26736KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11756 299006 1019627  7691/7125/298   18639/1327    43  157   25.37)
(smt.stats   80  11878 303696 1050445  7696/7160/298   18948/1327    43  157   25.37)
(smt.stats   81  12012 306942 1065817  7725/7171/298   19242/1327    43  157   25.46)
(smt.stats   82  12159 314772 1113958  7732/7200/298   19555/1327    43  157   25.46)
(smt.stats   83  12320 327934 1173719  7739/7207/298   19809/1327    43  157   25.46)
ramon: poll                 wall=11.000s usage=10.921s mem=26932KiB load=1.00 rootload=1.00
(smt.stats   84  12497 332118 1192684  7762/7211/298   20131/1328    43  157   25.57)
(smt.stats   85  12691 338728 1225348  7770/7238/298   20429/1328    43  157   25.66)
(smt.stats   86  12904 345616 1296108  7836/7239/298   20691/1331    43  157   25.66)
(smt.stats   87  13138 348966 1320263  7916/7334/298   21303/1332    43  157   25.77)
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 192 := 2251799813684736&256
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 128 := 2251799813684736&256
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 128 := 2251799813684736&256
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684736&256
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 256 := 2251799813684736&256
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 0 := 2251799813684736&256
band: (band[51] (if (= #109 50) 2535301200456457677093499568128 (if #895 1267650600228228838546749784064 #993)) (if (= #1000 50) 1 (if #1002 2 #1100))) 256 := 2251799813684736&256
ramon: poll                 wall=12.000s usage=11.921s mem=27700KiB load=1.00 rootload=1.00
(smt.stats   88  13395 352676 1354532  7972/7386/298   21897/1334    43  157   26.21)
(smt.stats   89  13677 357711 1416563  7984/7452/308   22570/1581    44  159   26.31)
(smt.stats   90  13987 361823 1450275  7990/7458/308   22972/1581    44  159   26.31)
(smt.stats   91  14088 363328 1463997  8000/7466/308   23306/1627    45  159   26.43)
(smt.stats   92  14199 365266 1481635  8001/7467/309   23530/1627    45  159   26.53)
(smt.stats   93  14321 367072 1500871  8003/7469/309   23897/1627    45  159   26.53)
(smt.stats   94  14455 369294 1527781  8005/7471/309   24270/1627    45  159   26.53)
(smt.stats   95  14602 372492 1561580  8009/7475/309   24809/1677    46  160   26.63)
ramon: poll                 wall=13.000s usage=12.921s mem=28104KiB load=1.00 rootload=1.00
(smt.stats   96  14763 376403 1599466  8014/7480/309   25428/1677    46  160   26.63)
(smt.stats   97  14940 379267 1612252  8086/7485/309   25865/1679    46  160   26.75)
(smt.delete-inactive-clauses  :num-deleted-clauses 1645)
(smt.stats   98  15134 382791 1627321  8104/7569/309   24491/1679    46  160   26.75)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   99  15347 393349 1650292  8174/7573/309   24793/1679    46  160   26.75)
(smt.stats  100  15581 406827 1685969  8198/7663/310   25465/1836    47  178   26.75)
ramon: poll                 wall=14.000s usage=13.920s mem=28320KiB load=1.00 rootload=1.00
(smt.stats  101  15838 418903 1739262  8262/7665/310   25964/1838    47  178   26.75)
(smt.stats  102  16120 433981 1788182  8265/7729/310   26596/1838    47  178   26.86)
ramon: poll                 wall=15.000s usage=14.920s mem=28432KiB load=1.00 rootload=0.99
(smt.stats  103  16430 452647 1847040  8284/7733/310   27098/1839    47  178   26.86)
(smt.stats  104  16770 471269 1923418  8313/7762/311   27560/1917    48  187   27.05)
(smt.stats  105  16871 475506 1937295  8362/7784/311   27805/1920    48  187   27.14)
(smt.stats  106  16982 478100 1955364  8383/7831/311   28024/1920    48  187   27.14)
(smt.stats  107  17104 479541 1969919  8384/7849/311   28263/1920    48  187   27.26)
(smt.stats  108  17238 482263 1996060  8387/7852/311   28624/1920    48  187   27.26)
ramon: poll                 wall=16.000s usage=15.919s mem=28700KiB load=1.00 rootload=1.00
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 256 := 2251799813684736&256
band: (band[51] (if (= #524 63) 20769187434139301290749948462104576 (if #672 10384593717069650645374974231052288 #669)) (if (= #1119 63) 0 (if #1121 1 #1245))) 256 := 2251799813684736&256
(smt.stats  109  17385 485094 2014017  8401/7862/317   28914/1984    49  189   27.26)
(smt.stats  110  17546 487887 2035294  8427/7868/322   29243/1984    49  189   27.38)
(smt.stats  111  17723 494712 2059118  8429/7893/322   29439/1984    49  189   27.38)
(smt.stats  112  17917 502333 2118930  8430/7895/323   29841/2010    50  190   27.38)
(smt.stats  113  18130 506094 2146747  8438/7896/324   30221/2010    50  190   27.48)
(smt.stats  114  18364 514766 2208626  8454/7915/324   30606/2045    51  199   27.48)
ramon: poll                 wall=17.000s usage=16.919s mem=28880KiB load=1.00 rootload=1.00
(smt.stats  115  18621 521961 2250675  8479/7940/325   31420/2076    52  199   27.57)
(smt.stats  116  18903 530433 2305830  8518/7970/326   32036/2078    52  199   27.67)
(smt.stats  117  19213 535039 2356996  8543/7998/327   32572/2115    53  220   27.77)
ramon: poll                 wall=18.000s usage=17.918s mem=29352KiB load=1.00 rootload=1.00
(smt.stats  118  19553 538787 2382634  8639/8008/327   32938/2117    53  220   27.77)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  119  19926 542581 2453978  8786/8243/328   33429/2148    54  226   27.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 1489)
(smt.stats  120  20027 544425 2474984  8793/8253/328   32313/2148    54  226   27.98)
(smt.stats  121  20138 546794 2490518  8832/8253/328   32461/2183    55  229   27.98)
(smt.stats  122  20260 547569 2494908  8879/8309/328   32581/2184    55  229   27.98)
(smt.stats  123  20394 549358 2515456  8945/8341/328   32723/2184    55  229   27.98)
(smt.stats  124  20541 553722 2544927  8953/8410/328   32939/2185    55  229   27.98)
ramon: poll                 wall=19.001s usage=18.917s mem=29788KiB load=1.00 rootload=1.00
(smt.stats  125  20702 561574 2578862  8966/8414/328   33187/2187    55  229   27.98)
(smt.stats  126  20879 567989 2614565  8997/8431/328   33468/2189    55  229   27.98)
(smt.stats  127  21073 571912 2638591  9024/8467/329   33727/2221    56  231   28.08)
(smt.stats  128  21286 577136 2677272  9032/8488/330   34066/2222    56  231   28.08)
(smt.stats  129  21520 582033 2726294  9040/8500/330   34431/2245    57  233   28.08)
ramon: poll                 wall=20.000s usage=19.917s mem=29944KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:18:46 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.995s
ramon: group.utime          19.971s
ramon: group.stime          0.024s
ramon: group.mempeak        30200KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.00
