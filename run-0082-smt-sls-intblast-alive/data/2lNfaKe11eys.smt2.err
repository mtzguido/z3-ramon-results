ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:33:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29491 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2lNfaKe11eys.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             607207
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   181.818     10000        49          0            1        2)
(smt.stats    0    102   2071   1108   780/585/105      99/20     6   17   51.46)
(sat.ddfw       1      1   87.7281     20001        98          1            1        3)
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 1&0
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 1 := 4294967232 >>l 6
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 1&0
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 1 := 4294967232 >>l 6
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 1&0
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 1 := 4294967232 >>l 6
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 67108863&0
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 67108863 := 67108864 >>l 6
(smt.stats    1    203   2678   2667  1190/1069/113     246/75     8   21   51.66)
(sat.ddfw       1      1   85.8369     40001       196          2            1        5)
(smt.stats    2    314   3835   5232  1275/1143/120     511/97    10   37   51.85)
(sat.ddfw       1      1   74.4417     70001       343          3            1        8)
(smt.stats    3    415   5272   6630  1316/1187/128     631/126    12   47   51.94)
(smt.stats    4    526   6237   9037  1354/1190/130     827/133    12   47   51.94)
(smt.stats    5    648   7506  10568  1410/1225/131     994/191    13   62   52.04)
(sat.ddfw       1      1   64.1026    110001       539          4            1       12)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    749   8665  12552  1423/1288/131    1136/192    13   62   52.04)
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 33554432 := 67108863&33554432
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 134217727 := 100663296 >>l 7
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 33554432 := 67108863&33554432
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 134217727 := 100663296 >>l 7
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 33554432 := 33554496&33554432
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 100663360 := 100663360 >>l 7
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 33554368 := 33554368&33554432
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 33554304 := 33554368&33554432
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 33554176 := 33554240&33554432
(smt.stats    7    860   9719  14629  1445/1301/131    1268/193    13   62   52.23)
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1790 := 33554368&33554432
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1791 := 1792&33554432
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1790 := 1792&33554432
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1790 := 1792&33554432
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1790 := 1792&33554432
(smt.stats    8    982  10837  18895  1597/1440/158    1477/216    14   65   52.23)
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1532 := 1532&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1384 := 1384&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1392 := 1392&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1408 := 1408&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1408 := 1408&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1380 := 1380&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1392 := 1392&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1384 := 1384&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1984 := 1985&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1984 := 1985&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1985 := 1988&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1984 := 1984&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1953 := 1980&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1952 := 1980&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1952 := 1952&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1952 := 1952&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1920 := 1920&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1792 := 1792&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1024 := 1024&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1024 := 1024&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 512 := 512&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 512 := 512&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 12&20938752
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 12 := 0 >>l 17
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 8&20938752
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 8 := 0 >>l 17
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 4&20938752
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 4 := 0 >>l 17
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 12&20938752
lshr: (lshr[26] (bv2int %0) (mod (bv2int %1) 26)) 20938753 := 24576 >>l 11
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 768&20938752
lshr: (lshr[26] (bv2int %0) (mod (bv2int %1) 26)) 20938753 := 1572866 >>l 11
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 768&20938752
lshr: (lshr[26] (bv2int %0) (mod (bv2int %1) 26)) 20938753 := 1574911 >>l 11
(smt.stats    9   1116  11859  24534  1807/1606/231    1934/264    15   67   52.62)
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1 := 772&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1 := 768&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 1 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 2048 := 2049&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 2048 := 2049&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 2048 := 2049&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 2048 := 2049&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 2048 := 2049&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 2049&20938752
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 2049 := 268697600 >>l 17
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 4096 := 4097&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 4096 := 4097&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 4096 := 4097&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 4096 := 4097&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 4096 := 4097&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 8192 := 8193&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 8192 := 8193&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 16384 := 16385&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 16384 := 16385&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 16384 := 16385&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 16384 := 16385&20938752
(smt.stats   10   1217  12617  27579  1890/1674/251    2196/340    16   90   52.92)
(sat.ddfw       1      1   55.8025    160000       784          5            1       17)
ramon: poll                 wall=1.000s usage=0.884s mem=55608KiB load=0.88 rootload=0.87
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 1 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 2 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 768 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 4 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 8 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 768 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 512 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 8 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 8 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 16 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 2 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 4 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 1 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 16 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 32 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 64 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 448 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 128 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 256 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 256 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 256 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 32 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 32 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 16 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 128 := 769&20938752
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 769&20938752
band: (band[26] (lshr[26] (bv2int %0) (mod #104 26)) (if (= #327 25) 129695093882880 (if #329 64847546941440 #377))) 128 := 769&20938752
(smt.stats   11   1328  13761  32972  2015/1840/357    2410/394    17  112   53.40)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  15595  38394  2133/1983/388    2986/519    18  127   53.59)
(smt.stats   13   1584  17629  45741  2149/1999/392    3385/727    19  138   53.59)
(sat.ddfw       1      1   49.2215    220001      1078          6            1       23)
(smt.stats   14   1731  18437  52442  2155/2005/392    3688/727    19  138   53.90)
(smt.stats   15   1832  18752  56501  2300/2114/392    3827/760    20  150   53.90)
(smt.stats   16   1943  20591  69192  2314/2126/400    4259/954    22  197   54.09)
(sat.ddfw       1      1   43.6137    290001      1421          7            1       30)
(smt.stats   17   2065  24420  83144  2370/2172/401    4993/963    23  206   54.29)
(smt.stats   18   2199  28590  94480  2458/2179/401    5663/969    23  206   54.68)
ramon: poll                 wall=2.000s usage=1.884s mem=56996KiB load=1.00 rootload=1.00
(smt.stats   19   2346  31252 106633  2487/2284/401    5906/969    23  206   54.68)
(sat.ddfw       1      1   39.2349    370001      1813          8            1       38)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2507  36170 122946  2529/2315/403    6660/1152    24  209   54.87)
(sat.ddfw       1      1    35.447    460001      2254          9            1       47)
(smt.stats   21   2608  39881 135459  2614/2414/404    7070/1299    25  213   54.96)
ramon: poll                 wall=3.000s usage=2.882s mem=57276KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   33.0142    560001      2745         10            1       57)
(smt.stats   22   2719  42776 146380  2734/2438/405    7380/1306    25  213   55.08)
(smt.stats   23   2841  44817 159294  2768/2552/405    7770/1306    25  213   55.24)
(smt.stats   24   2975  47117 165305  2915/2715/407    8337/1478    26  213   55.62)
(sat.ddfw       1      1   31.1703    670001      3284         11            1       68)
(smt.stats   25   3122  50847 177432  2993/2750/408    8882/1481    26  213   55.72)
ramon: poll                 wall=4.000s usage=4.028s mem=58280KiB load=1.15 rootload=1.14
(sat.ddfw       1      1   29.6296    790001      3872         12            1       80)
(smt.stats   26   3283  56399 197148  3167/2795/408    9423/1634    27  232   55.98)
(smt.stats   27   3460  61110 214128  3248/3008/410   10079/1677    28  234   55.98)
(sat.ddfw       1      1   27.3224    920001      4509         13            1       93)
(smt.stats   28   3561  64775 224692  3295/3065/410   10733/1680    28  234   56.11)
ramon: poll                 wall=5.000s usage=5.030s mem=58428KiB load=1.00 rootload=1.01
(smt.stats   29   3672  67806 241960  3413/3101/410   11117/1906    29  243   56.20)
(smt.stats   30   3794  69731 251910  3442/3236/410   11340/1907    29  243   56.20)
(smt.stats   31   3928  71840 267662  3487/3275/410   12368/1907    29  243   56.40)
(sat.ddfw       1      1   25.3485   1060001      5196         14            1      108)
(smt.stats   32   4075  75471 287658  3533/3325/412   13580/2273    30  245   56.49)
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 3 := 67108863&58720256
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 3 := 67108863&58720256
ramon: poll                 wall=6.000s usage=6.028s mem=59016KiB load=1.00 rootload=0.99
(smt.stats   33   4236  78796 306708  3804/3342/412   14094/2275    30  245   56.68)
(sat.ddfw       1      1   23.6518   1210001      5931         15            1      123)
(smt.stats   34   4413  80768 317603  4373/3683/412   14675/2277    30  245   56.88)
(smt.stats   35   4607  88588 366362  4382/4176/412   17672/2278    30  245   57.08)
ramon: poll                 wall=7.000s usage=7.035s mem=59684KiB load=1.01 rootload=1.01
(smt.stats   36   4708  91829 385496  4511/4185/412   18819/2278    30  245   57.27)
(sat.ddfw       1      1   22.1699   1370001      6715         16            1      139)
(smt.stats   37   4819  94186 402769  4718/4325/412   19555/2280    30  245   57.67)
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 62431232 := 62914561&62914560
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 62431232 := 62922753&62914560
(smt.stats   38   4941  95911 418828  4892/4545/412   20334/2280    30  245   57.76)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   39   5075  98628 440440  4983/4698/422   21295/2908    31  247   57.86)
ramon: poll                 wall=8.000s usage=8.064s mem=60420KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   20.8897   1540001      7549         17            1      156)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5222 102480 477822  5037/4783/422   22343/2908    31  247   58.06)
(smt.stats   41   5383 105346 507319  5051/4844/422   23644/3274    32  247   58.15)
(smt.stats   42   5560 108945 534928  5084/4858/427   24955/3277    32  247   58.46)
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 2 := 16386&56578016
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 16386&56578016
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 32770&56578016
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 32770 := 67108864 >>l 27
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 32768&56578016
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 32768 := 67108864 >>l ramon: poll                 27wall=9.000s usage=9.064s mem=60932KiB load=1.00 rootload=1.00

band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 32768&56578016
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 32768 := 67108864 >>l 27
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 0&56578016
lshr: (lshr[26] (bv2int %0) (mod (bv2int %1) 26)) 58720564 := 1048576 >>l 21
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 28&56578016
lshr: (lshr[26] (bv2int %0) (mod (bv2int %1) 26)) 58720532 := 58722304 >>l 21
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 28&56578016
lshr: (lshr[26] (bv2int %0) (mod (bv2int %1) 26)) 58720532 := 58722304 >>l 21
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 764&56578016
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 764&56578016
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 764&56578016
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 28&56578016
lshr: (lshr[32] (* 64 (bv2int %0)) (mod (+ 6 #104 #226) 32)) 134217756 := 4202692608 >>l 27
band: (band[26] (lshr[32] (* 64 #103) (mod #227 32)) (if (= #400 31) 16600972017008640 (if #402 8300486008504320 #462))) 0 := 28&56578016
lshr: (lshr[26] (bv2int %0) (mod (bv2int %1) 26)) 58720532 := 58722304 >>l 21
(smt.stats   43   5754 112389 553907  5211/4990/454   25295/3537    33  398   58.55)
(sat.ddfw       1      1   19.7433   1720001      8431         18            1      174)
(smt.stats   44   5967 114711 591433  5257/5028/456   26327/3537    33  398   58.65)
(smt.stats   45   6068 117754 606200  5261/5047/456   26612/3537    33  398   58.75)
(smt.stats   46   6179 121578 625307  5359/5057/456   27690/3876    34  441   58.96)
ramon: poll                 wall=10.000s usage=10.064s mem=61188KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.7247   1910001      9362         19            1      193)
(smt.stats   47   6301 124694 640813  5512/5209/456   28265/3883    34  441   59.05)
(smt.stats   48   6436 128707 665738  5734/5523/460   29203/3885    34  441   59.15)
ramon: poll                 wall=11.000s usage=11.121s mem=61828KiB load=1.06 rootload=1.05
(smt.stats   49   6583 133058 683203  5865/5530/460   30564/3890    34  441   59.40)
(sat.ddfw       1      1   17.7999   2110001     10343         20            1      214)
(smt.stats   50   6744 135926 698799  6180/5715/460   31085/4253    35  458   59.59)
ramon: poll                 wall=12.000s usage=12.118s mem=62068KiB load=1.00 rootload=1.00
(smt.stats   51   6921 138057 714333  6702/6165/460   31685/4253    35  458   59.69)
(sat.ddfw       1      1   16.9711   2320001     11372         21            1      235)
(smt.stats   52   7115 144431 754610  6893/6624/463   34341/4258    35  458   60.20)
ramon: poll                 wall=13.000s usage=13.119s mem=62324KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.2134   2540001     12451         22            1      257)
ramon: poll                 wall=14.000s usage=14.115s mem=62792KiB load=1.00 rootload=1.00
(smt.stats   53   7328 149870 797198  7286/6718/463   35238/4781    36  466   60.49)
(smt.stats   54   7562 153923 815930  7452/7109/463   36262/4781    36  466   60.58)
(sat.ddfw       1      1   15.5217   2770001     13578         23            1      280)
ramon: poll                 wall=15.000s usage=15.115s mem=63060KiB load=1.00 rootload=1.00
(smt.stats   55   7663 156934 839857  7592/7247/463   37721/4782    36  466   60.78)
(smt.stats   56   7774 160946 860252  7731/7397/463   38443/4784    36  466   60.88)
ramon: poll                 wall=16.000s usage=16.113s mem=63384KiB load=1.00 rootload=1.00
(smt.stats   57   7896 165382 885521  7856/7536/463   38770/4785    36  466   60.98)
(sat.ddfw       1      1    14.881   3010001     14754         24            1      305)
(smt.stats   58   8030 168377 912092  7901/7685/464   39811/5625    37  472   61.08)
ramon: poll                 wall=17.000s usage=17.214s mem=63664KiB load=1.10 rootload=1.10
(smt.stats   59   8177 172612 953732  8078/7693/464   41397/5629    37  472   61.48)
(sat.ddfw       1      1   14.4835   3260001     15980         25            1      330)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8338 176730 983927  8198/7936/464   43750/5632    37  472   61.67)
(smt.stats   61   8515 178318 1015015  8204/7983/465   45695/6081    38  491   61.96)
ramon: poll                 wall=18.000s usage=18.218s mem=64444KiB load=1.00 rootload=1.00
(smt.stats   62   8709 181422 1076047  8227/8002/465   47222/6081    38  491   62.16)
(smt.stats   63   8922 184464 1145548  8257/8019/466   48367/6584    39  493   62.36)
(sat.ddfw       1      1   13.9313   3520001     17254         26            1      356)
(smt.stats   64   9156 191311 1179582  8462/8186/466   49138/6585    39  493   62.56)
ramon: poll                 wall=19.000s usage=19.217s mem=65124KiB load=1.00 rootload=1.00
(smt.stats   65   9413 198171 1258516  8575/8302/467   51108/6588    39  493   62.85)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9514 200648 1286742  8591/8316/468   52120/6713    40  512   63.04)
ramon: poll                 wall=20.000s usage=20.213s mem=65624KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:33:28 2024
ramon: root.execname        z3
ramon: root.utime           20.250s
ramon: root.stime           0.010s
ramon: group.total          20.263s
ramon: group.utime          20.251s
ramon: group.stime          0.012s
ramon: group.mempeak        65880KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              1.01
