ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:26:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30339 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1408
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2vn5Pz0NnTJG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             229828
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   234/234     0/0  64       0    18.51   0.00)
(sat.stats    101    543    0   234/234   101/29  64       0    18.85   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 281 :time 0.00)
(sat.stats    101    543    0   234/234   101/29  64       0    18.85   0.00)
(sat.stats    101    543    0   234/234   101/29  64       0    18.85   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 371618.85 :time 0.00)
(sat.stats    101    543    0   236/236    42/28  64       0    18.85   0.01)
(sat.stats    111    598    1   236/236    52/35  64       0    18.85   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    114    614    2   236/236    55/35  64       0    18.85   0.01)
(sat.stats    117    658    3   236/236    58/36  64       0    18.85   0.01)
(sat.stats    146   1618    4   236/236    87/59  64       0    18.94   0.01)
(sat.stats    149   1721    5   236/236    90/59  64       0    18.94   0.01)
(sat.stats    152   1833    6   236/236    93/59  64       0    18.94   0.01)
(sat.stats    156   1900    7   236/236    97/61  64       0    18.94   0.01)
(sat.stats    159   1983    8   236/236   100/62  64       0    18.94   0.01)
(sat.stats    162   2071    9   236/236   103/62  64       0    18.94   0.01)
(sat.stats    165   2133   10   236/236   106/62  64       0    18.94   0.01)
(sat.stats    168   2214   11   236/236   109/62  64       0    18.94   0.01)
(sat.stats    171   2303   12   236/236   112/62  64       0    18.94   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1669 :time 0.00)
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 0&1
lshr: (lshr[64] (mod (div #69 2) 1125899906842624) (mod (+ 50 #705 #707) 64)) 13051431720119697409 := 0 >>l 50
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2199 :time 0.00)
(sat.stats    211   3700   25   261/260   149/80  80       0    19.61   0.30)
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 3021 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats      :decisions     :clauses/bin      :units        :memory       )
(sat.stats    400  12911   52   266/265   336/181  81       0    19.71   0.36)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4602 :time 0.00)
(sat.stats    494  14699   53   265/264   430/239  84       0    19.71   0.37)
lshr: (lshr[51] (bv2int %0) (+ 51 (* 2251799813685247 #70))) 2251799813161030 := 2251799813161030 >>l 32
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7267 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 7569 :time 0.00)
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 1 := 1&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 1&524288
lshr: (lshr[64] (mod (div #69 2) 1125899906842624) (mod (+ 50 #705 #707) 64)) 522642 := 4294489128 >>l 31
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 2 := 2&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 4 := 4&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 8 := 8&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 16 := 16&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 32 := 32&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 311680 := 341260&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 128 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 330048 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 227072 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 253440 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 123904 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 73728 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 4096 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 2048 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 196608 := 341246&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 9887 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 28396 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 257058 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 8 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 110544 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 234464 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 11840 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 266880 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 26880 := 524288&341246
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 341246&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 512 := 524288&341246
 (sat-cleaner :elim-literals 11 :elim-clauses 3 :cost 9524 :time 0.00)
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 256 := 344422&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 512 := 344881&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 16384 := 344932&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 32768 := 344832&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 262144 := 344832&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 163840 := 324889&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 131072 := 324889&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 131072 := 259405&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 2048 := 523289&524288
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523279&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 58368 := 524288&523279
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523277&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 264192 := 524288&523277
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523277&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 241664 := 524288&523277
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523277&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 212992 := 524288&523277
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523277&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 8192 := 524288&523277
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523277&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 294912 := 524288&523277
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523277&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 327680 := 524288&523277
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523277&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 262144 := 524288&523277
band: (band[51] (lshr[51] (bv2int %0) (+ 51 #461)) (if (= #63 50) 1125899906842624 (if #465 562949953421312 #563))) 0 := 523277&524288
band: (band[51] (if (= #574 63) 9223372036854775808 (if #576 4611686018427387904 #700)) (lshr[64] (mod #444 1125899906842624) (mod #708 64))) 131072 := 524288&523277
 (sat-cleaner :elim-literals 55 :elim-clauses 29 :cost 10727 :time 0.00)
(sat.stats    877  27406   90  3873/3869   765/330 346       0    22.47   0.67)
(sat.stats   1065  37480  110 10068/10064   991/412 350       0    23.87   0.83)
ramon: poll                 wall=1.000s usage=0.998s mem=27136KiB load=1.00 rootload=0.99
ramon: poll                 wall=2.000s usage=1.998s mem=33848KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.997s mem=37780KiB load=1.00 rootload=1.00
(sat.stats   2000  77518  233 61386/61382  2514/1368 350       0    39.15   3.01)
 (sat-cleaner :elim-literals 133 :elim-clauses 204 :cost 24778 :time 0.00)
ramon: poll                 wall=4.003s usage=4.000s mem=42840KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.997s mem=46972KiB load=1.00 rootload=0.98
ramon: poll                 wall=6.000s usage=5.997s mem=47540KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=47540KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.996s mem=47540KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=47540KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.996s mem=47568KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.996s mem=48048KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.996s mem=48060KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.996s mem=48068KiB load=1.00 rootload=1.00
(sat.stats   4530 113409  278 131975/131972  5245/2116 370       0    47.10  13.70)
(sat.stats :conflicts  :restarts          :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin            :units         :memory       )
(sat.stats   4533 113422  279 131975/131972  5246/2117 370       0    47.10  13.70)
ramon: poll                 wall=14.000s usage=13.995s mem=48792KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.995s mem=56432KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.995s mem=65836KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.995s mem=73708KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.995s mem=83288KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.994s mem=90928KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.994s mem=99036KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:27:19 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.040s
ramon: group.total          20.004s
ramon: group.utime          19.964s
ramon: group.stime          0.040s
ramon: group.mempeak        99292KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
