ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:08:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41829 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MbArewWua7qA.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2927743
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4903    342  1281/1147/112     111/15     3   18   19.18)
(smt.stats    1    202   8279   1115  1806/1634/113     235/25     4   19   19.27)
(smt.stats    2    313  11352   1687  1873/1668/113     364/26     4   19   19.37)
(smt.stats    3    414  12973   2723  2248/2052/120     485/40     5   20   19.46)
ramon: poll                 wall=1.002s usage=0.942s mem=20756KiB load=0.94 rootload=0.94
(smt.stats    4    525  15135   4023  2337/2056/120     609/52     5   20   19.56)
(smt.stats    5    647  19508   5148  2651/2417/120     728/56     6   28   19.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  21531   6561  2657/2419/120     886/56     6   28   19.87)
(smt.stats    7    859  23581   7949  2678/2431/121    1019/57     7   28   19.87)
(smt.stats    8    981  25058   9420  2786/2532/127    1105/63     9   55   19.97)
(smt.stats    9   1115  26730  11279  2818/2559/128    1243/66     9   55   20.06)
(smt.stats   10   1216  28515  12679  2873/2613/128    1315/72    10   60   20.06)
(smt.stats   11   1327  33028  14712  2942/2702/132    1348/77    11  134   20.06)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1449  37222  16946  3017/2704/132    1492/75    12  138   20.16)
(smt.stats   13   1583  40033  19072  3027/2787/132    1650/75    12  138   20.16)
(smt.stats   14   1730  46767  22298  3036/2790/132    1837/75    12  138   20.16)
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&32
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740992 := 18446744073709549568 >>l 59
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&32
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740992 := 18446744073709549568 >>l 59
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&32
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740992 := 18446744073709549568 >>l 59
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&32
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740992 := 18446744073709549568 >>l 59
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&32
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740992 := 18446744073709549568 >>l 59
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 31 := 31&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 31&32
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 9007199254740990 := 9007199254740991 >>l 48
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 2 := 2&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 4 := 4&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 8 := 8&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 16 := 16&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 16 := 24&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 16 := 16&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 4 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 4 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 8 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 8 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 8 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 8 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 30&32
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 31 := 8725724278030335 >>l 48
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 1 := 1&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 1 := 1&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 2&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 2 := 2&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 30&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 28 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 8&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 8 := 8&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 16&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 16 := 16&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 16&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 16 := 16&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 12&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 12 := 12&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 8&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 8 := 8&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 30&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 15 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 30&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 16 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 30&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 14 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 30&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 12 := 30&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 8&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 8 := 8&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 16&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 12 := 16&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 16&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 8 := 16&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 8&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 8 := 8&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 16&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 16 := 16&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 16&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 15 := 16&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 14&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 14 := 14&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 12&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 12 := 12&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 12&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 12 := 12&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 8&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 8 := 8&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 4&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 4 := 4&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 8&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 4 := 8&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 4&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 4 := 4&32
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 4&32
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 4 := 4&32
(smt.stats   15   1831  49159  25679  3143/2871/226    1935/97    13  139   20.55)
(smt.stats   16   1942  51393  28302  3166/2918/235    2054/107    14  177   20.69)
(smt.stats   17   2064  54745  30278  3210/2928/235    2189/110    14  177   20.69)
ramon: poll                 wall=2.000s usage=1.938s mem=22036KiB load=1.00 rootload=0.99
(smt.stats   18   2198  58257  34018  3273/2983/235    2340/110    14  177   20.69)
(smt.stats   19   2345  62912  39058  3295/3026/236    2493/131    15  179   20.79)
(smt.stats   20   2506  68287  45500  3323/3069/238    2667/133    16  183   20.79)
(smt.stats   21   2607  74365  52148  3324/3074/238    2767/133    16  183   20.79)
(smt.stats   22   2718  78430  56262  3339/3074/238    2876/133    17  187   21.03)
(smt.stats   23   2840  81675  62074  3344/3091/238    2999/133    17  187   21.03)
(smt.stats   24   2974  85079  67798  3356/3097/238    3151/133    17  187   21.03)
(smt.stats   25   3121  88698  74439  3380/3122/239    3302/140    18  187   21.03)
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&8192
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740992 := 0 >>l 51
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&8192
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740992 := 576460752303423488 >>l 51
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&8192
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740992 := 1150669704793161728 >>l 51
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1&8192
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 9007199254740990 := 1099511627776 >>l 40
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&8192
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 132 := 1 >>l 40
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 0&8192
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 1099511627776 := 1099511627775 >>l 40
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 160 := 7934&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 192 := 7934&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 256 := 256&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 512 := 512&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 1024 := 1024&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 2048 := 2048&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 4096 := 4096&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 4096 := 4096&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 1024 := 1024&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 512 := 512&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 192 := 256&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 192 := 254&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 32 := 32&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 34&8192
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 34 := 34&8192
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 34&8192
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 34 := 34&8192
(smt.stats   26   3282  90937  79789  3583/3257/306    3549/142    18  187   21.35)
(smt.stats   27   3459  93580  86921  3612/3355/314    3833/170    19  207   21.35)
(smt.stats   28   3560  95626  92812  3621/3366/315    4009/222    20  210   21.35)
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 9007199254740991&2
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 9007199254740991&2
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 9007199254740991&2
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 9007199254740991&2
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 9007199254740989&2
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 18014398509481981 := 17870283321406128128 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 3&2
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 5&2
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740997 := 18446744073709549568 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 3&2
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 5&2
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 9007199254740997 := 18446744073709549568 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1&2
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2 := 8725724278030336 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1&2
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2 := 9007199254740991 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1&2
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2 := 9007199254740991 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 1 := 1&2
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1&2
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 1 := 1&2
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   29   3671  97870 100049  3662/3402/343    4137/299    21  213   21.45)
(smt.stats   30   3793  99725 101811  3712/3432/344    4261/301    21  213   21.55)
(smt.stats   31   3927 102241 107621  3760/3491/345    4397/301    21  213   21.83)
(smt.stats   32   4074 104746 112521  3765/3496/346    4549/299    22  223   21.83)
ramon: poll                 wall=3.000s usage=2.938s mem=23316KiB load=1.00 rootload=0.99
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 4 := 562949953421440&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 2 := 562949953421440&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 2 := 562949953421441&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 2 := 562949953421456&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 2 := 562949953421575&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 562949953421560&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 562949953421560&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 562949953421456&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 562949953421448&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 562949953421448&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906842632&562949953421312
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 19140298416324616 := 9007199254740992 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906842631&562949953421312
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 19140298416324615 := 9007199254740992 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906842625&562949953421312
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 1125899906842625 := 1125899906844672 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906842625&562949953421312
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 1125899906842625 := 9007199254740992 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 274877906943&562949953421312
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 4398046511104 := 4398046511103 >>l 4
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 274877906943&562949953421312
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 4398046511088 := 4398046511088 >>l 4
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 7906&562949953421312
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 126496 := 126496 >>l 4
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 1 := 274877906942&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 274877906942&562949953421312
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 2 := 274877906942&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 274877906942&562949953421312
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 2 := 274877906942&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 274877906942&562949953421312
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 1 := 274877906942&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 274877906942&562949953421312
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 32 := 274877906942&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 7938&562949953421312
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 32 := 7938&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 137438953506&562949953421312
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 32 := 137438953506&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 137438953474&562949953421312
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 32 := 137438953474&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 137438953506&562949953421312
band: (band[53] (lshr[53] (bv2int %1) (mod #113 53)) (if (= #514 52) 4503599627370496 (if #516 2251799813685248 #618))) 32 := 137438953506&562949953421312
(smt.stats   33   4235 108108 121063  3865/3550/373    4792/331    23  231   22.03)
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 16 := 7966&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 32 := 7966&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 32 := 7966&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 32 := 7974&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 32 := 7974&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 128 := 7974&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 128 := 7970&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 128 := 8446&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 128 := 8766&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 128 := 8894&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 128 := 8190&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 128 := 8126&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 128 := 8126&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 2048 := 8098&562949953421312
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 1024 := 8098&562949953421312
(smt.stats   34   4412 112090 137559  4032/3764/438    5053/380    24  244   22.37)
(smt.stats   35   4606 118850 158180  4131/3845/443    5414/440    25  263   22.57)
(smt.stats   36   4707 121730 169900  4162/3870/445    5590/440    25  263   22.57)
(smt.stats   37   4818 126261 181783  4164/3872/448    5734/459    26  269   22.70)
(smt.stats   38   4940 130639 193356  4211/3909/449    5946/476    27  280   22.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 136410 208467  4237/3933/451    6147/525    29  299   22.80)
(smt.stats   40   5221 143607 225688  4259/3940/451    6446/527    29  299   22.80)
ramon: poll                 wall=4.000s usage=3.938s mem=24084KiB load=1.00 rootload=0.99
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906842626&134217728
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 10133099161583618 := 576460752303460352 >>l 37
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906846978&134217728
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 10133099161587970 := 586593851465011200 >>l 37
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906846978&134217728
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 10133099161587970 := 586593851465011200 >>l 37
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906846978&134217728
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 10133099161587970 := 586593851465011200 >>l 37
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906846978&134217728
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 10133099161587970 := 586593851465011200 >>l 37
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906846978&134217728
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 10133099161587970 := 586593851465011200 >>l 37
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 7810&134217728
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 8531 := 524120227842 >>l 26
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 7810&134217728
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 8403 := 524187336703 >>l 26
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 7810&134217728
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 8223 := 524120227842 >>l 26
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 7810&134217728
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 8195 := 524187336703 >>l 26
(smt.stats   41   5382 148563 235710  4378/3972/451    6708/531    29  299   22.89)
(smt.stats   42   5559 155193 250583  4435/4120/462    7124/573    30  301   22.99)
(smt.stats   43   5753 160234 265242  4453/4141/463    7422/623    31  315   23.44)
(smt.stats   44   5966 167371 298209  4555/4227/464    7865/666    32  317   23.54)
(smt.stats   45   6067 173525 316655  4573/4241/469    8037/666    32  317   23.54)
(smt.stats   46   6178 179248 340344  4577/4246/469    8206/715    33  324   23.65)
ramon: poll                 wall=5.000s usage=4.938s mem=25168KiB load=1.00 rootload=1.00
(smt.stats   47   6300 183715 349122  4706/4256/469    8393/721    33  324   23.84)
(smt.stats   48   6434 187658 358170  4829/4390/469    8710/721    33  324   23.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   49   6581 189955 367233  4937/4566/471    9009/762    34  326   23.84)
ramon: poll                 wall=6.000s usage=5.938s mem=25348KiB load=1.00 rootload=1.00
(smt.stats   50   6742 194952 390463  4964/4614/471    9296/762    34  326   23.93)
(smt.stats   51   6919 198808 416332  5063/4707/471    9650/789    35  328   24.03)
(smt.stats   52   7113 202233 425977  5080/4730/471    9919/789    35  328   24.12)
(smt.stats   53   7326 205555 450230  5087/4739/473   10306/832    36  346   24.12)
(smt.stats   54   7560 210842 470492  5111/4747/473   10800/832    36  346   24.32)
(smt.stats   55   7661 214061 481122  5111/4763/473   11022/832    36  346   24.32)
(smt.stats   56   7772 215826 489824  5111/4763/473   11176/832    36  346   24.42)
(smt.stats   57   7894 220286 507963  5113/4765/475   11373/937    37  357   24.42)
(smt.stats   58   8028 225345 524253  5118/4770/478   11559/937    37  357   24.42)
(smt.stats   59   8175 232439 546318  5119/4771/478   11723/937    37  357   24.51)
(smt.stats   60   8336 238147 563396  5143/4783/478   11989/998    38  392   24.61)
ramon: poll                 wall=7.000s usage=6.937s mem=25972KiB load=1.00 rootload=1.00
(smt.stats   61   8513 244994 584253  5173/4804/478   12301/998    38  392   24.61)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 252380 613777  5206/4831/479   12578/1038    39  393   24.70)
(smt.stats   63   8920 257582 638736  5250/4892/479   12963/1038    39  393   24.89)
(smt.stats   64   9154 259754 647015  5261/4899/480   13248/1076    40  400   24.89)
(smt.stats   65   9411 263541 665699  5301/4905/480   13550/1077    40  400   24.89)
(smt.stats   66   9512 265736 674633  5314/4955/480   13792/1078    40  400   24.99)
(smt.stats   67   9623 267888 689418  5374/4992/481   14050/1078    40  400   24.99)
ramon: poll                 wall=8.000s usage=7.937s mem=26484KiB load=1.00 rootload=1.00
(smt.stats   68   9745 272163 712447  5391/5009/482   14314/1133    41  412   25.08)
(smt.stats   69   9879 277503 736991  5419/5042/483   14621/1139    42  439   25.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 624)
(smt.stats   70  10026 279536 747312  5422/5045/485   14354/1139    42  439   25.18)
(smt.stats   71  10187 280363 752806  5426/5049/485   14540/1139    42  439   25.18)
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 64 := 5629499534217216&4503599627370496
(smt.stats   72  10364 283620 772214  5450/5054/485   14845/1141    42  439   25.28)
(smt.stats   73  10558 289888 787674  5515/5089/485   15202/1186    43  448   25.28)
(smt.stats   74  10771 300089 827331  5543/5138/485   15538/1187    43  448   25.70)
ramon: poll                 wall=9.000s usage=8.937s mem=27376KiB load=1.00 rootload=1.00
(smt.stats   75  11005 313684 871555  5562/5183/488   16286/1224    44  467   25.80)
(smt.stats   76  11262 322644 893357  5571/5187/488   16627/1224    44  467   25.89)
ramon: poll                 wall=10.000s usage=9.937s mem=27632KiB load=1.00 rootload=1.00
(smt.stats   77  11544 328655 921388  5609/5198/488   17052/1224    44  467   25.99)
(smt.stats   78  11645 330876 936578  5631/5244/488   17171/1240    45  477   25.99)
(smt.stats   79  11756 335085 954508  5646/5259/488   17331/1240    45  477   26.08)
(smt.stats   80  11878 340006 981281  5651/5270/488   17475/1240    45  477   26.08)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   81  12012 342737 1000161  5675/5286/488   17677/1240    45  477   26.08)
ramon: poll                 wall=11.000s usage=10.937s mem=27888KiB load=1.00 rootload=1.00
(smt.stats   82  12159 346409 1024268  5696/5297/488   17850/1240    45  477   26.08)
(smt.stats   83  12320 354267 1053923  5744/5352/488   18050/1240    45  477   26.28)
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906872127&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 10133099161613119 := 0 >>l 11
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 1125899906872127&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 10133099161613119 := 0 >>l 11
(smt.stats   84  12497 359451 1083037  5798/5404/494   18456/1261    46  491   26.37)
(smt.stats   85  12691 370176 1113866  5806/5411/494   18798/1261    46  491   26.47)
(smt.stats   86  12904 380301 1148145  5817/5422/494   19151/1261    46  491   26.47)
ramon: poll                 wall=12.000s usage=11.937s mem=28144KiB load=1.00 rootload=1.00
(smt.stats   87  13138 386262 1175477  5835/5440/496   19789/1286    47  492   26.66)
(smt.stats   88  13395 394038 1211996  5844/5447/496   20328/1286    47  492   26.75)
(smt.stats   89  13677 405195 1250332  5849/5454/496   20660/1315    48  504   26.85)
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 0 := 116&2
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #344) 64)) 116 := 6755399441090560 >>l 63
(smt.stats   90  13987 414243 1303711  5867/5464/497   21246/1315    48  504   26.85)
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 5 := 128&8
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 5 := 128&8
band: (band[53] (lshr[64] (* 2048 #112) (mod #345 64)) (if (= #641 63) 18446744073709551616 (if #643 9223372036854775808 #767))) 4 := 128&8
(smt.stats   91  14088 417070 1320048  5917/5486/497   21444/1338    49  506   27.04)
(smt.stats   92  14199 419100 1331894  5925/5524/497   21710/1338    49  506   27.04)
ramon: poll                 wall=13.000s usage=12.937s mem=28912KiB load=1.00 rootload=1.00
(smt.stats   93  14321 423090 1359632  5931/5531/497   21982/1338    49  506   27.04)
(smt.stats   94  14455 427769 1390307  5933/5533/497   22254/1338    49  506   27.04)
(smt.stats   95  14602 432246 1417195  5942/5542/500   22472/1367    50  528   27.04)
(smt.stats   96  14763 435914 1457707  5951/5550/500   22716/1367    50  528   27.04)
(smt.stats   97  14940 440147 1484687  5972/5567/500   23064/1367    50  528   27.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 504)
(smt.stats   98  15134 450606 1526062  5979/5574/501   22962/1394    51  554   27.14)
ramon: poll                 wall=14.000s usage=13.937s mem=28912KiB load=1.00 rootload=1.00
(smt.stats   99  15347 457710 1571465  5993/5576/501   23408/1395    51  554   27.23)
(smt.stats  100  15581 466876 1619006  6018/5610/502   23869/1436    52  564   27.33)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  101  15838 478442 1672986  6041/5612/502   24184/1436    52  564   27.42)
(smt.stats  102  16120 487178 1722418  6056/5645/502   24632/1452    53  588   27.42)
ramon: poll                 wall=15.000s usage=14.936s mem=29168KiB load=1.00 rootload=1.00
(smt.stats  103  16430 495838 1776817  6074/5664/502   25165/1452    53  588   27.52)
(smt.stats  104  16770 509049 1840967  6086/5675/502   25669/1452    53  588   27.62)
(smt.stats  105  16871 512683 1860112  6086/5675/502   25804/1452    53  588   27.62)
(smt.stats  106  16982 515315 1871224  6088/5677/502   26089/1452    53  588   27.62)
(smt.stats  107  17104 518364 1886287  6089/5678/502   26263/1452    53  588   27.62)
(smt.stats  108  17238 524426 1911813  6090/5679/502   26430/1452    53  588   27.71)
(smt.stats  109  17385 529028 1936936  6094/5682/502   26723/1452    53  588   27.71)
(smt.stats  110  17546 533513 1961966  6099/5688/502   27061/1452    53  588   27.71)
ramon: poll                 wall=16.000s usage=15.936s mem=29424KiB load=1.00 rootload=1.00
(smt.stats  111  17723 538593 1987814  6105/5691/502   27411/1452    53  588   27.90)
(smt.stats  112  17917 544579 2049783  6114/5701/502   27847/1452    53  588   27.90)
(smt.stats  113  18130 549805 2073566  6124/5710/502   28193/1452    53  588   28.00)
(smt.stats  114  18364 556912 2123474  6139/5718/502   28519/1452    53  588   28.00)
ramon: poll                 wall=17.000s usage=16.936s mem=29680KiB load=1.00 rootload=0.99
(smt.stats  115  18623 565271 2165928  6179/5754/506   28880/1543    54  604   28.09)
ramon: poll                 wall=18.000s usage=17.936s mem=30704KiB load=1.00 rootload=1.00
(smt.stats  116  18905 569730 2180684  6525/5766/506   29233/1551    54  604   28.47)
ramon: poll                 wall=19.000s usage=18.936s mem=30704KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.936s mem=30704KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:08:42 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.002s
ramon: group.utime          19.974s
ramon: group.stime          0.028s
ramon: group.mempeak        30704KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.00
