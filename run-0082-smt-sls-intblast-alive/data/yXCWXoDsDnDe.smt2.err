ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:19:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27073 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/yXCWXoDsDnDe.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             967080
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3091   1843  1183/1060/100      92/4     5   15   51.97)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 6&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 8&68719476735
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   108.696     10000        49          0            1        2)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 8&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 8&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 8&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 32&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 32&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 64&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 19&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 18&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 16 := 16&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 16 := 17 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 16 := 16&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 16 := 17 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 5&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 4&68719476735
(sat.ddfw       1      1   55.5611     20001        98          1            1        3)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 4&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 4 := 268435456 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 5&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 6&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 5&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 5 := 7&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 5 := 7&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 5 := 7&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 5 := 7&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 7 := 7&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976710663 := 68987912192 << 36
(smt.stats    1    202   4723   3288  1718/1544/195     193/23    10   38   52.45)
(smt.stats    2    313   6462   4946  1910/1669/195     307/53    10   38   52.56)
(sat.ddfw       1      1   56.0224     40001       196          2            1        5)
(smt.stats    3    414   8514   6533  2185/1988/199     387/72    12   39   52.66)
(smt.stats    4    525  11324   8577  2203/2004/205     438/71    14   99   52.66)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 16 := 16&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 18446462598732840976 := 281474976706560 << 8
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 16 := 16&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976710672 := 68987912192 << 8
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 8 := 256&255
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 8 := 256&255
(smt.stats    5    647  12851  10149  2353/2064/219     577/98    15  101   52.95)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  15042  14094  2756/2521/221     699/132    17  103   53.05)
(sat.ddfw       1      1   47.6948     70001       343          3            1        8)
(smt.stats    7    859  19405  19565  2771/2536/225     813/147    20  110   53.15)
(smt.stats    8    981  23788  24280  2787/2551/226     935/159    21  116   53.15)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 1829587348619264 := 7146825607169 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 1829587348619264 := 7146825607169 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 1829587348619264 := 7146825607169 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 1829587348619264 := 7146825607169 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 7146825711629 << 47
(smt.stats    9   1115  27960  28991  2882/2557/227    1102/165    22  119   53.48)
ramon: poll                 wall=1.000s usage=0.925s mem=55588KiB load=0.93 rootload=0.91
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 256 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 256 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 256 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 98560 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 164096 := 141289400074496&140737488355327
(sat.ddfw       1      1   38.6473    110001       539          4            1       12)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295264 := 141289400074496&140737488355327
(smt.stats   10   1216  28608  30050  3246/2992/283    1457/170    23  121   53.67)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295264 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295264 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295264 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295296 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295296 := 141289400074496&140737488355327
(smt.stats   11   1327  30586  33766  3351/3065/299    1688/175    23  121   53.77)
(sat.ddfw       1      1   33.6467    160000       784          5            1       17)
(smt.stats   12   1449  34873  50829  3370/3130/302    1902/423    25  136   53.86)
ramon: poll                 wall=2.000s usage=1.925s mem=56044KiB load=1.00 rootload=1.00
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 112 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658448&511
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 72057663295586384 := 69257396289 << 9
(sat.ddfw       1      1    29.792    220001      1078          6            1       23)
(smt.stats   13   1583  36355  54189  3505/3132/302    2128/433    25  136   54.05)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 48 := 69257659024&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 48 := 69257659024&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257659024&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 272 := 69257659024&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 272 := 69257659024&511
(smt.stats   14   1730  41089  71296  3752/3474/318    2516/498    26  145   54.17)
(smt.stats   15   1831  44279  85415  3781/3540/319    2698/648    28  151   54.17)
(smt.stats   16   1942  46681  93200  3806/3552/319    3009/653    28  151   54.38)
(sat.ddfw       1      1   26.4951    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   17   2064  50093 105785  3947/3665/331    3220/820    29  167   54.38)
(smt.stats   18   2198  52869 115533  4049/3709/331    3501/859    30  168   54.48)
ramon: poll                 wall=3.000s usage=2.923s mem=56692KiB load=1.00 rootload=1.00
(smt.stats   19   2345  56523 132087  4071/3806/331    3856/859    30  168   54.58)
(smt.stats   20   2506  61269 146134  4113/3836/335    4216/1100    32  185   54.58)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 6 := 3300&127
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 3300&127
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 3268&127
(smt.stats   21   2607  64157 156964  4264/3868/335    4489/1103    32  185   54.76)
(sat.ddfw       1      1   23.7459    370001      1813          8            1       38)
(smt.stats   22   2718  66689 170525  4598/4027/335    4734/1104    32  185   54.92)
(smt.stats   23   2840  70030 180976  4671/4356/335    5039/1104    32  185   54.92)
(smt.stats   24   2974  74366 196757  4811/4420/336    5427/1202    33  188   55.02)
ramon: poll                 wall=4.000s usage=3.923s mem=57260KiB load=1.00 rootload=1.00
(smt.stats   25   3121  78810 212213  4920/4560/337    5872/1323    34  193   55.12)
(sat.ddfw       1      1   21.5311    460001      2254          9            1       47)
(smt.stats   26   3282  84644 239071  5165/4742/340    6207/1431    35  201   55.41)
(smt.stats   27   3459  88310 257078  5442/5181/345    6625/1545    37  219   55.51)
(smt.stats   28   3560  93730 296766  5445/5186/346    7064/1545    37  219   55.80)
(smt.stats   29   3671  97559 318553  5449/5190/346    7340/1633    38  226   56.01)
ramon: poll                 wall=5.000s usage=4.920s mem=58072KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   19.7589    560001      2745         10            1       57)
(smt.stats   30   3793  99864 327193  5562/5190/346    7727/1639    38  226   56.01)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3927 102207 336541  5658/5342/347    8032/1874    39  228   56.01)
(smt.stats   32   4074 108988 352873  5697/5408/347    8585/1878    39  228   56.10)
ramon: poll                 wall=6.000s usage=5.922s mem=58312KiB load=1.00 rootload=1.00
(smt.stats   33   4235 113648 374534  5805/5481/348    8938/2177    40  238   56.20)
(sat.ddfw       1      1   18.2089    670001      3284         11            1       68)
(smt.stats   34   4412 120227 419545  5849/5587/348    9193/2177    40  238   56.20)
(smt.stats   35   4606 126416 468648  5939/5628/350    9611/2408    41  238   56.28)
(smt.stats   36   4707 132174 517913  5954/5681/350    9721/2409    41  238   56.28)
ramon: poll                 wall=7.000s usage=6.920s mem=59052KiB load=1.00 rootload=1.00
(smt.stats   37   4818 140322 572483  5955/5696/350    9897/2425    42  238   56.58)
(sat.ddfw       1      1   16.8729    790001      3872         12            1       80)
(smt.stats   38   4940 146276 612951  5966/5707/354   10362/2558    43  239   56.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   39   5074 149961 630375  6111/5709/354   10630/2560    43  239   56.68)
(smt.stats   40   5221 152126 649302  6520/5884/354   10915/2759    44  255   56.79)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 129279 := 163055&137438953471
ramon: poll                 wall=8.000s usage=7.926s mem=58944KiB load=1.01 rootload=1.00
(smt.stats   41   5382 153918 668697  6896/6309/354   11261/2759    44  255   56.89)
(sat.ddfw       1      1   15.9041    920001      4509         13            1       93)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 268291&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 268291&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 267779&4095
(smt.stats   42   5559 157136 686298  7167/6874/355   12532/2783    45  259   57.08)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 267779&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 267779&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391783937 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391783937 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391783937 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391652865 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391652865 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391652865 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391652865 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 0&4095
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 0 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 0&4095
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 0 << 12
(smt.stats   43   5753 160789 702639  7302/7019/411   13526/3318    46  279   57.56)
ramon: poll                 wall=9.002s usage=9.027s mem=60260KiB load=1.10 rootload=1.10
(smt.stats   44   5966 165376 723446  7591/7281/412   14302/3325    46  279   57.94)
(smt.stats   45   6067 169455 738887  7598/7309/413   14842/3613    47  284   57.94)
(sat.ddfw       1      1   14.8447   1060001      5196         14            1      108)
(smt.stats   46   6178 178092 811216  7599/7310/413   15272/3613    47  284   57.94)
(smt.stats   47   6300 183555 840918  7627/7314/414   15607/3812    48  297   58.04)
ramon: poll                 wall=10.000s usage=10.080s mem=60308KiB load=1.05 rootload=1.06
(smt.stats   48   6434 187238 857049  7794/7499/417   15974/3814    48  297   58.14)
(smt.stats   49   6581 191767 881473  7839/7523/420   16746/3873    49  304   58.33)
(sat.ddfw       1      1   14.0634   1210001      5931         15            1      123)
ramon: poll                 wall=11.002s usage=11.290s mem=61036KiB load=1.21 rootload=1.21
(smt.stats   50   6742 200157 953937  7874/7563/420   17071/3875    49  304   58.51)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   51   6919 212105 1047856  7906/7609/421   18363/4024    51  318   59.13)
(smt.stats   52   7113 223425 1091951  7912/7615/421   19830/4024    51  318   59.23)
ramon: poll                 wall=12.000s usage=12.535s mem=61256KiB load=1.25 rootload=1.24
(sat.ddfw       1      1   13.3556   1370001      6715         16            1      139)
(smt.stats   53   7326 232450 1157924  8011/7621/421   20292/4027    51  318   59.42)
ramon: poll                 wall=13.002s usage=13.672s mem=61700KiB load=1.13 rootload=1.14
(smt.stats   54   7560 239219 1207820  8145/7848/423   20938/4447    52  320   59.42)
(smt.stats   55   7661 242611 1233436  8152/7855/423   21247/4521    53  320   59.51)
(sat.ddfw       1      1   12.8544   1540001      7549         17            1      156)
(smt.stats   56   7772 246704 1252510  8249/7857/423   21716/4525    53  320   59.61)
ramon: poll                 wall=14.000s usage=14.667s mem=61940KiB load=1.00 rootload=0.99
(smt.stats   57   7894 249958 1291083  8443/8032/423   22211/4526    53  320   59.61)
(smt.stats   58   8028 253167 1314964  8470/8152/423   22750/4526    53  320   59.70)
(sat.ddfw       1      1   12.1335   1720001      8431         18            1      174)
ramon: poll                 wall=15.000s usage=15.665s mem=62144KiB load=1.00 rootload=1.00
(smt.stats   59   8175 256363 1332571  8682/8179/423   23003/4530    53  320   59.89)
(smt.stats   60   8336 260341 1357615  8872/8496/423   23509/4532    53  320   59.89)
ramon: poll                 wall=16.000s usage=16.666s mem=62272KiB load=1.00 rootload=1.00
(smt.stats   61   8513 264839 1390538  8929/8598/424   24079/4927    54  330   59.99)
(sat.ddfw       1      1   11.4943   1910001      9362         19            1      193)
ramon: poll                 wall=17.000s usage=17.666s mem=62624KiB load=1.00 rootload=1.00
(smt.stats   62   8707 272948 1431444  9009/8635/424   24474/4936    54  330   60.09)
ramon: poll                 wall=18.000s usage=18.664s mem=62816KiB load=1.00 rootload=1.00
(smt.stats   63   8920 279650 1470540  9264/8753/424   25064/4939    54  330   60.39)
(sat.ddfw       1      1    10.929   2110001     10343         20            1      214)
(smt.stats   64   9154 290725 1551324  9280/8982/424   26572/4940    54  330   60.48)
ramon: poll                 wall=19.000s usage=19.665s mem=63056KiB load=1.00 rootload=1.00
(smt.stats   65   9411 305365 1680074  9349/8985/424   27278/4942    54  330   60.58)
(smt.stats   66   9512 307662 1688474  9366/9069/424   27539/4942    54  330   60.79)
(sat.ddfw       1      1   10.5469   2320001     11372         21            1      235)
ramon: poll                 wall=20.000s usage=20.853s mem=63044KiB load=1.19 rootload=1.19
ramon: end                  Fri Nov  1 23:19:50 2024
ramon: root.execname        z3
ramon: root.utime           20.890s
ramon: root.stime           0.020s
ramon: group.total          20.916s
ramon: group.utime          20.896s
ramon: group.stime          0.020s
ramon: group.mempeak        63348KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.04
