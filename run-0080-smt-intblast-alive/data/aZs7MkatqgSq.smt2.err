ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:38:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25291 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aZs7MkatqgSq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             85881
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1965    419  1200/1085/111      91/4     6   17   19.10)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 1 := 2 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 1 := 2 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&0
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 562949953421311 := 562949953421312 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&1125899906842622
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&1125899906842622
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&1125899906842622
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 2 := 562949953421313 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&4
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 2 := 562949953421314 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&2
(smt.stats    1    202   3396   1553  1422/1283/140     175/3     9   26   19.38)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&6
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&6
(smt.stats    2    313   5898   5778  2174/1959/141     278/44    11   30   19.48)
(smt.stats    3    414   6569   8409  2447/2200/146     382/66    12   31   19.67)
(smt.stats    4    525   7644  10552  2481/2214/151     481/99    14   43   19.77)
(smt.stats    5    647   9580  13436  2514/2263/155     589/103    15   45   19.96)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   9826  13711  2577/2316/155     690/110    16   46   20.24)
(smt.stats    7    859  10528  15158  2892/2603/155     839/112    16   46   20.15)
(smt.stats    8    981  12254  19043  2977/2686/157     996/150    17   51   20.15)
(smt.stats    9   1115  15883  25892  2997/2743/157    1135/150    17   51   20.24)
(smt.stats   10   1216  24074  39027  3019/2771/157    1224/150    17   51   20.24)
(smt.stats   11   1327  34969  58714  3021/2773/157    1333/150    17   51   20.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  42404  73351  3030/2782/158    1463/204    18   52   20.24)
(smt.stats   13   1583  44481  79509  3041/2789/158    1610/204    18   52   20.34)
ramon: poll                 wall=1.000s usage=0.997s mem=21740KiB load=1.00 rootload=0.99
(smt.stats   14   1730  48094  84939  3091/2797/159    1786/229    19   55   20.34)
(smt.stats   15   1831  49339  87949  3143/2855/159    1890/230    19   55   20.34)
(smt.stats   16   1942  50714  90429  3209/2898/159    2014/230    19   55   20.34)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842618
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842560
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842368
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842112
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842112
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906841600
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906840576
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906840576
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&32766
(smt.stats   17   2064  53791  99210  3279/2999/159    2144/230    19   55   20.43)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 2 := 1125899906842630 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 2 := 1125899906842630 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 2 := 1125899906842630 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 2 := 1125899906842630 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 65538 := 844424930131969 << 16
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 65536 := 1125899906908164 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 65538 := 844424930131969 << 16
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 65538 := 844424930131969 << 16
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 98306 := 844424930131969 << 16
(smt.stats   18   2198  56802 106779  3328/3069/205    2284/292    20   62   20.53)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 596487955435770 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 16 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 32 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 16 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 32 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 64 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 128 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 256 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 512 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1024 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2048 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4096 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8192 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 16384 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 32768 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 65536 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 131072 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 262144 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 524288 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1048576 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2097152 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4194304 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8388608 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 16777216 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 33554432 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 67108864 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 134217728 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 268435456 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 536870912 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1073741824 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 536870912 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1073741824 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2147483648 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4294967296 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4294967296 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8589934592 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 17179869184 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 17179869184 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 34359738368 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 68719476736 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 137438953472 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 274877906944 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 549755813888 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 549755813888 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1099511627776 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 274877906944 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2199023255552 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2199023255552 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4398046511104 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 17592186044416 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 35184372088832 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 70368744177664 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 140737488355328 := 596487955435771&879609302220800
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 281474976710656 := 596487955435771&879609302220800
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 562949953421312 := 596487955435771&879609302220800
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 879609302220800 := 1688876703809536 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&290271069732864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 1416170976575488 := 562993171529728 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&290271069732864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 1416170976575488 := 562993171529728 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&325455441821696
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 1451355348664320 := 562994245271552 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&290271069732864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 575625123466313728 := 580516638097408 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&509623572299776
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517272723456
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517339766784
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517272723456
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517272723456
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517205549056
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517138505728
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&290275633135616
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 576751027936559104 := 580550997975040 << 49
(smt.stats   19   2345  59665 111981  3566/3242/415    2454/335    22  113   22.06)
(smt.stats   20   2506  63921 122569  3731/3474/460    2698/405    24  128   22.15)
(smt.stats   21   2607  68781 128336  3763/3486/460    2799/405    24  128   22.29)
ramon: poll                 wall=2.000s usage=1.997s mem=23516KiB load=1.00 rootload=0.99
(smt.stats   22   2718  72941 143035  3925/3582/464    3038/424    25  153   22.29)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 0 := 1717990240583680 << 13
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 0 := 1717990240649216 << 13
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 0 := 1717990240649216 << 13
(smt.stats   23   2840  77353 158810  4011/3738/465    3195/528    27  158   22.38)
(smt.stats   24   2974  80635 169425  4084/3812/480    3416/540    28  162   22.38)
(smt.stats   25   3121  86784 182256  4135/3820/480    3592/542    28  162   22.38)
(smt.stats   26   3282  94887 199902  4189/3882/481    3736/589    29  191   22.48)
(smt.stats   27   3459 101276 213978  4249/3974/485    3943/623    30  203   22.48)
(smt.stats   28   3560 105403 222331  4259/3988/486    4037/623    30  203   22.48)
(smt.stats   29   3671 109791 233102  4288/3995/486    4174/626    31  203   22.58)
ramon: poll                 wall=3.000s usage=2.996s mem=23816KiB load=1.00 rootload=1.00
(smt.stats   30   3793 114150 245600  4361/4017/486    4309/627    31  203   22.58)
(smt.stats   31   3927 118878 259870  4505/4106/487    4498/638    32  210   22.77)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2 := 8680&70918231556096
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 10 := 8680&70369281048576
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 10 := 8680&70369281048576
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 123247 270585  4613/4253/488    4723/710    33  212   22.87)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 12 := 8680&71468255805440
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&71468255805440
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71469367296000
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744236295194880 << 14
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71469363167232
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744236295194628 << 14
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71469363167232
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744305014671364 << 14
(smt.stats   33   4235 126850 284223  4887/4357/509    5040/721    33  212   23.06)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71468561989632
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744167575668992 << 14
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71468557860864
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744167575668740 << 14
(smt.stats   34   4412 134328 306272  4958/4685/520    5314/841    35  224   23.06)
(smt.stats   35   4606 142895 325783  4990/4714/526    5574/906    36  239   23.15)
ramon: poll                 wall=4.000s usage=3.996s mem=24444KiB load=1.00 rootload=1.00
(smt.stats   36   4707 147968 340421  5018/4720/526    5670/907    36  239   23.25)
ramon: poll                 wall=5.000s usage=4.995s mem=24792KiB load=1.00 rootload=1.00
(smt.stats   37   4818 148884 343086  5414/4784/526    5800/908    36  239   23.35)
(smt.stats   38   4940 151321 352335  5593/5198/526    5942/911    36  239   23.35)
(smt.delete-inactive-clauses  :num-deleted-clauses 440)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&69021532160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 13837309924117381120 := 1688987307642890 << 5
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&68753096704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 13837309923848945664 := 1688987307610122 << 5
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&68757225472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 13837309923853074432 := 1688987307610626 << 5
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415800999936
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 4415800999934 := 844493927022592 << 6
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415532564480
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 4415532564478 := 844493922828288 << 6
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415529418752
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 4415529418750 := 844493922779136 << 6
(smt.stats   39   5074 154481 361946  5706/5333/529    5689/964    37  247   23.82)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415697125376
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 844493925399552 << 6
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415696207872
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 844493925385216 << 6
(smt.stats   40   5221 159151 373724  5800/5468/539    5894/967    37  247   23.93)
(smt.stats   41   5382 164716 385690  5880/5530/539    6122/1024    38  251   24.03)
(smt.stats   42   5559 168312 401627  5930/5633/541    6341/1041    39  253   24.03)
(smt.stats   43   5753 171539 412384  5992/5661/541    6550/1083    40  255   24.12)
ramon: poll                 wall=6.000s usage=5.995s mem=25532KiB load=1.00 rootload=1.00
(smt.stats   44   5966 175046 428228  6386/5720/541    6936/1091    40  255   24.12)
(smt.stats   45   6067 177721 433077  6414/6135/549    7128/1167    41  268   24.22)
(smt.stats   46   6178 182152 447980  6438/6140/549    7275/1168    41  268   24.22)
(smt.stats   47   6300 187136 463892  6472/6175/549    7443/1204    42  268   24.31)
(smt.stats   48   6434 191475 472941  6668/6194/549    7801/1212    42  268   24.32)
(smt.stats   49   6581 199106 483358  6822/6523/549    8041/1212    42  268   24.41)
ramon: poll                 wall=7.000s usage=6.995s mem=26132KiB load=1.00 rootload=1.00
(smt.stats   50   6742 205347 502350  6932/6523/549    8373/1214    42  268   24.51)
(smt.stats   51   6919 211555 534731  7009/6673/549    8839/1215    42  268   24.60)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7113 219336 564115  7040/6733/557    9171/1499    43  288   24.70)
(smt.stats   53   7326 226368 584154  7381/6745/557    9705/1582    44  319   24.99)
ramon: poll                 wall=8.000s usage=7.995s mem=26428KiB load=1.00 rootload=1.00
(smt.stats   54   7560 235153 624381  7638/7336/560   10521/1795    45  322   25.08)
(smt.stats   55   7661 239533 643854  7653/7349/560   10887/1830    46  328   25.18)
(smt.stats   56   7772 243444 659166  7682/7359/560   11061/1831    46  328   25.18)
(smt.stats   57   7894 247424 675565  7707/7386/560   11231/1832    46  328   25.28)
(smt.stats   58   8028 249523 690101  7718/7415/560   11399/1834    46  328   25.28)
(smt.stats   59   8175 252330 715544  7733/7420/560   11570/1835    46  328   25.28)
(smt.stats   60   8336 255971 746563  7755/7443/562   11885/1979    47  336   25.28)
(smt.stats   61   8513 260395 778515  7776/7478/563   12535/2161    48  349   25.47)
ramon: poll                 wall=9.000s usage=8.994s mem=26888KiB load=1.00 rootload=1.00
(smt.stats   62   8707 269810 823428  7792/7489/563   13422/2161    48  349   25.56)
(smt.stats   63   8920 278335 862224  7884/7545/564   14137/2693    49  357   25.66)
(smt.stats   64   9154 290973 889920  7927/7599/564   14929/2694    49  357   25.90)
ramon: poll                 wall=10.000s usage=9.994s mem=27396KiB load=1.00 rootload=1.00
(smt.stats   65   9411 303911 929788  8429/7635/564   16299/2709    49  357   26.19)
(smt.stats   66   9512 306265 941500  8467/8164/565   16906/3139    50  363   26.28)
(smt.stats   67   9623 310786 963424  8551/8233/566   17640/3144    50  363   26.46)
(smt.stats   68   9745 318247 998002  8575/8269/567   18132/3501    51  363   26.46)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   69   9879 324246 1039103  8577/8279/567   18346/3638    52  364   26.66)
ramon: poll                 wall=11.000s usage=10.993s mem=28032KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 5)
(smt.stats   70  10026 329354 1063791  8592/8294/567   19263/3638    52  364   26.75)
(smt.stats   71  10187 338741 1126611  8595/8297/567   19725/3638    52  364   26.75)
(smt.stats   72  10364 347052 1186323  8602/8304/567   20293/3638    52  364   26.85)
(smt.stats   73  10558 352977 1228880  8627/8329/568   21158/4499    53  367   26.94)
ramon: poll                 wall=12.000s usage=11.993s mem=28336KiB load=1.00 rootload=0.99
(smt.stats   74  10771 366140 1271675  8634/8336/568   21411/4499    53  367   26.94)
(smt.stats   75  11005 372207 1325296  8648/8346/568   21843/4499    53  367   26.94)
(smt.stats   76  11262 384208 1396112  8653/8355/568   22457/4499    53  367   27.04)
(smt.stats   77  11544 392825 1466548  8667/8365/568   23112/4499    53  367   27.04)
(smt.stats   78  11645 396107 1494394  8668/8370/568   23254/4499    53  367   27.04)
(smt.stats   79  11756 399380 1518179  8671/8373/568   23633/4499    53  367   27.13)
ramon: poll                 wall=13.002s usage=12.997s mem=28536KiB load=1.00 rootload=1.01
(smt.stats   80  11878 403348 1534352  8674/8376/569   24173/4902    54  372   27.13)
(smt.stats   81  12012 412663 1581810  8674/8376/569   24600/4902    54  372   27.23)
(smt.stats   82  12159 418033 1628057  8676/8378/569   24795/4902    54  372   27.23)
(smt.stats   83  12320 429431 1693558  8687/8389/569   25359/4902    54  372   27.23)
(smt.stats   84  12497 438239 1747927  8694/8396/570   25786/5035    55  380   27.32)
ramon: poll                 wall=14.000s usage=13.992s mem=29104KiB load=1.00 rootload=0.99
(smt.stats   85  12691 446322 1781815  8774/8419/572   26029/5182    56  381   27.23)
(smt.stats   86  12904 452656 1841251  8830/8500/572   26241/5184    56  381   27.23)
(smt.stats   87  13138 458175 1876277  8869/8536/572   26954/5208    57  381   27.23)
(smt.stats   88  13395 467848 1933874  8969/8580/572   27508/5210    57  381   27.53)
ramon: poll                 wall=15.000s usage=14.992s mem=29128KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.992s mem=29136KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   89  13677 479985 1980678  9296/8684/572   28040/5220    57  381   27.63)
ramon: poll                 wall=17.000s usage=16.991s mem=29196KiB load=1.00 rootload=1.00
(smt.stats   90  13987 489672 2018979  9648/9088/572   28526/5223    57  381   27.72)
(smt.stats   91  14088 493879 2036354  9674/9376/572   28968/5223    57  381   27.72)
(smt.stats   92  14199 501029 2073143  9678/9380/572   29397/5223    57  381   27.82)
(smt.stats   93  14321 508390 2098444  9757/9380/572   29578/5225    57  381   27.82)
(smt.stats   94  14455 511952 2117566  9784/9482/572   29890/5225    57  381   27.82)
(smt.stats   95  14602 515739 2134624  9788/9490/572   30056/5225    57  381   27.82)
(smt.stats   96  14763 518585 2152552  9803/9505/573   30196/5504    58  391   27.82)
ramon: poll                 wall=18.000s usage=17.991s mem=29332KiB load=1.00 rootload=1.00
(smt.stats   97  14940 524345 2176556  9949/9511/573   30454/5507    58  391   27.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 28)
(smt.stats   98  15134 528492 2196634  9997/9677/573   30646/5507    58  391   28.01)
(smt.stats   99  15347 534484 2246577 10018/9708/573   30867/5507    58  391   28.01)
(smt.stats  100  15581 541406 2276425 10145/9731/573   31191/5507    58  391   28.10)
ramon: poll                 wall=19.000s usage=18.990s mem=29536KiB load=1.00 rootload=1.00
(smt.stats  101  15838 545759 2294920 10266/9926/573   31486/5507    58  391   28.10)
(smt.stats  102  16120 551579 2344133 10288/9990/573   32190/5507    58  391   28.10)
ramon: poll                 wall=20.000s usage=19.990s mem=29712KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:39:09 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.980s
ramon: group.stime          0.020s
ramon: group.mempeak        29968KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
