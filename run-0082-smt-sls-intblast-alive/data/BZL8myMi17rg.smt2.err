ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:55:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29034 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BZL8myMi17rg.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             684374
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   74.6269     10000        49          0            1        2)
(smt.stats    0    101   6250    616  1297/1148/112      93/6     8   17   52.06)
(sat.ddfw       1      1   34.3677     20001        98          1            1        3)
(smt.stats    1    202   9959   1750  1944/1743/114     196/15    10   20   52.25)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&4
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #871 #875) 64)) 72057594037927936 := 72057594037927936 << 6
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #871 #875) 64)) 72057594037927936 := 72057594037927936 << 6
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #871 #875) 64)) 72057594037927936 := 72057594037927936 << 6
(sat.ddfw       1      1     36.63     40001       196          2            1        5)
(smt.stats    2    313  12759   3581  2150/1924/131     301/17    12   25   52.44)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 72057594037927935 := 0 << 7
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 72057594037927935 := 0 << 7
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 1 := 0 << 7
(smt.stats    3    414  14635   5035  2223/2024/148     412/27    13   34   52.54)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1 := 1&567382630219904
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&567382630219904
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 567382630219905 := 36312488334073920 << 1
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1 := 1&567382630219904
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&567382630219904
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 567382630219905 := 36312488334073920 << 1
(smt.stats    4    525  15523   6155  2779/2526/155     564/97    15   41   52.73)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&567382630219904
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 567382630219905 := 36312488334073920 << 1
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1 := 1&567382630219904
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1 := 1&567382630219904
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&567382630219904
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 567382630219905 := 36312488334073920 << 1
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1 := 1&8
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&2251799813685242
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 2251799813685242 := 37154696925806589 << 1
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&2251799813685242
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 1 := 1&2251799813685242
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&2251799813685242
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 2251799813685242 := 37154696925806589 << 1
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&2251799813685242
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 1 := 1&2251799813685242
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&567382630219906
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #110))) 567382630219905 := 36312488334073921 << 1
(smt.stats    5    647  20187  10308  2833/2558/156     680/99    15   41   52.93)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 1&2251799813685242
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 1 := 1&2251799813685242
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1 := 1&1143771333935368
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1 := 1&1143771333935368
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  21801  12181  2854/2588/177     788/105    16   51   52.93)
(smt.stats    7    859  26128  17698  2869/2607/182     903/107    17   52   53.05)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 2 := 8388607&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #871 #875) 64)) 72057594037927938 := 142989288169013248 << 22
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 2 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 2 := 8388607&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #871 #875) 64)) 72057594037927938 := 142989305348882434 << 22
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 2 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 8 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 16 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 32 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 2 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 16 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 16 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 32 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 64 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 128 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 256 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 512 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1024 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 2048 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4096 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 8192 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 16384 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 32768 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 65536 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 131072 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 262144 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 524288 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 524288 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 1048576 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 2097152 := 8388607&8388608
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4194304 := 8388607&8388608
(sat.ddfw       1      1   33.8983     70001       343          3            1        8)
(smt.stats    8    981  27312  19687  2992/2729/296    1159/113    19   88   53.88)
ramon: poll                 wall=1.000s usage=0.816s mem=56256KiB load=0.82 rootload=0.80
(smt.stats    9   1115  32763  26551  3010/2746/296    1351/113    19   88   53.88)
(smt.stats   10   1216  35864  30194  3014/2749/296    1443/291    20   97   53.88)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813685248
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813685248
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813685248
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813685248
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813685248
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813718016
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813685248
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813718016
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813980160
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813685248
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813718016
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&2251799813980160
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&4503599627403264
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&9007199255035904
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798882144256
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&18014398509776896
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&15762598695796730
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&15762598695796728
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&15762598695796728
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798882406400
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798882930688
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798882930688
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798883454976
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798883454976
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798884503552
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798884503552
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798886600704
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798886600704
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798890795008
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798886600704
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798890795008
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798890795008
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798899183616
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798899183616
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798915960832
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798915960832
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798916190200
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798915960832
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&13510798949515264
(smt.stats   11   1327  38441  33622  3213/2762/307    1596/321    21   99   54.11)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&18014398509776896
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&36028797019258880
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&36028797019258880
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&36028797019258880
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&36028797019258880
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&1143771333394424
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&1143771333361664
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 294912 := 72057594037927935&134512640
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 67108864 := 72057594037927935&67108872
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 67108864 := 72057594037927935&67108880
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  40315  38210  3435/3128/485    1889/362    23  139   54.69)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599702867968 := 72057594037927935&18014398585110544
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599702867968 := 72057594037927935&18014398585110560
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599686090752 := 72057594037927935&18014398584979520
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599686090752 := 72057594037927935&18014398584979488
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599686090752 := 72057594037927935&18014398584979520
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599686090752 := 72057594037927935&18014398584979520
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599686090752 := 72057594037927935&18014398584979584
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599686090752 := 72057594037927935&18014398584979584
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 4503599686090752 := 72057594037927935&18014398584979712
(sat.ddfw       1      1   30.0978    110001       539          4            1       12)
(smt.stats   13   1583  45230  48836  3585/3265/532    2154/369    23  139   54.94)
(smt.stats   14   1730  53788  62451  3661/3318/536    2395/550    24  161   55.04)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 64 := 255&18014398585110784
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 64 := 255&18014398585110784
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 64 := 255&18014398585110592
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #871 #875) 64)) 9529616811591598144 := 72057594037927936 << 7
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 64 := 255&18014398585110592
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #871 #875) 64)) 9529616811591598144 := 72057594037927936 << 7
(smt.stats   15   1831  58803  73312  3746/3468/544    2645/756    26  188   55.15)
(sat.ddfw       1      1   26.4685    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.815s mem=57416KiB load=1.00 rootload=0.99
(smt.stats   16   1942  61043  76650  3819/3481/544    2759/758    26  188   55.35)
(smt.stats   17   2064  65004  83945  4023/3738/565    2846/765    28  261   55.60)
(sat.ddfw       1      1   23.4379    220001      1078          6            1       23)
(smt.stats   18   2198  69994  96039  4069/3763/566    3075/783    29  270   55.60)
(smt.stats   19   2345  74986 112025  4100/3821/567    3277/856    30  274   55.71)
ramon: poll                 wall=3.000s usage=2.810s mem=57876KiB load=0.99 rootload=1.00
(smt.stats   20   2506  78110 123210  4140/3861/576    3564/949    31  286   55.81)
(smt.stats   21   2607  80343 128771  4156/3869/576    3692/950    31  286   55.90)
(sat.ddfw       1      1   20.9205    290001      1421          7            1       30)
(smt.stats   22   2718  84945 139785  4169/3886/577    3818/945    32  314   55.90)
(smt.stats   23   2840  92695 160868  4191/3910/579    4071/983    33  315   56.28)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   24   2974  96175 174629  4202/3917/584    4262/1121    35  322   56.28)
ramon: poll                 wall=4.000s usage=3.717s mem=58464KiB load=0.91 rootload=0.91
(smt.stats   25   3121  98744 184476  4257/3963/587    4470/1168    36  342   56.40)
(smt.stats   26   3282 105147 198644  4308/3996/588    4689/1236    38  352   56.40)
(sat.ddfw       1      1    18.412    370001      1813          8            1       38)
(smt.stats   27   3459 109858 214327  4351/4053/599    4887/1259    39  356   56.50)
(smt.stats   28   3560 114173 224341  4353/4055/600    5013/1269    40  377   56.50)
(smt.stats   29   3671 118492 242351  4368/4056/600    5126/1315    41  380   56.60)
ramon: poll                 wall=5.000s usage=4.700s mem=59008KiB load=0.98 rootload=0.98
(smt.stats   30   3793 124464 259873  4396/4095/601    5261/1326    42  380   56.60)
(sat.ddfw       1      1   16.8099    460001      2254          9            1       47)
(smt.stats   31   3927 129468 277361  4406/4108/605    5477/1333    43  386   56.60)
(smt.stats   32   4074 135937 298609  4417/4117/606    5733/1333    43  386   56.91)
ramon: poll                 wall=6.002s usage=5.647s mem=59628KiB load=0.95 rootload=0.95
(smt.stats   33   4235 144723 322936  4431/4132/607    5872/1477    45  423   57.34)
(smt.stats   34   4412 156311 351839  4432/4136/613    6092/1484    46  428   57.34)
(sat.ddfw       1      1   15.4107    560001      2745         10            1       57)
(smt.stats   35   4606 162664 377498  4456/4152/616    6356/1593    47  434   57.34)
(smt.stats   36   4707 167319 396493  4467/4165/616    6460/1593    47  434   57.45)
(smt.stats   37   4818 172668 411467  4476/4178/616    6566/1597    48  441   57.45)
ramon: poll                 wall=7.000s usage=6.642s mem=59780KiB load=1.00 rootload=0.99
(smt.stats   38   4940 177960 431929  4481/4183/616    6705/1597    48  441   57.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 218)
(smt.stats   39   5074 183429 451414  4483/4185/618    6614/1608    49  447   57.57)
(smt.stats   40   5221 192128 477158  4488/4190/618    6770/1608    49  447   57.66)
(sat.ddfw       1      1   14.2931    670001      3284         11            1       68)
(smt.stats   41   5382 205606 516703  4492/4194/618    6950/1615    50  452   58.00)
ramon: poll                 wall=8.000s usage=7.642s mem=60704KiB load=1.00 rootload=1.00
(smt.stats   42   5559 211993 547877  4496/4198/619    7121/1630    51  460   58.51)
(smt.stats   43   5753 219913 576372  4518/4199/619    7346/1636    51  460   58.71)
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2251800082120960
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 2 := 127&2251800082120960
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2251800082120960
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 4 := 127&2251800082120960
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2251800082120960
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 8 := 127&2251800082120960
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2251800082120960
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 16 := 127&2251800082120960
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2251800082120960
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 32 := 127&2251800082120960
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2251800082120960
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 64 := 127&2251800082120960
band: (band[56] (if (= #405 63) 1 (if #605 3 #864)) (shl[64] (* 2 #388) (mod #879 64))) 0 := 127&2251800082120960
band: (band[56] (if (= #114 55) 1 (if #628 3 #785)) (shl[56] (bv2int %1) (+ 56 #788))) 16 := 127&2251800082120960
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   44   5966 225796 589790  4816/4480/665    7741/1652    52  470   58.80)
ramon: poll                 wall=9.000s usage=8.643s mem=61228KiB load=1.00 rootload=1.00
(smt.stats   45   6067 229472 602128  4851/4545/665    7900/1652    52  470   58.92)
(sat.ddfw       1      1   13.3023    790001      3872         12            1       80)
(smt.stats   46   6178 234671 620392  4856/4546/665    8026/1652    52  470   59.02)
(smt.stats   47   6300 240619 636706  4856/4550/665    8148/1652    52  470   59.02)
(smt.stats   48   6434 248516 661819  4862/4556/665    8404/1652    52  470   59.02)
ramon: poll                 wall=10.000s usage=9.642s mem=61556KiB load=1.00 rootload=1.00
(smt.stats   49   6581 256801 682277  4866/4560/665    8561/1652    52  470   59.11)
(smt.stats   50   6742 269278 719760  4868/4561/665    8805/1652    52  470   59.11)
(sat.ddfw       1      1    12.439    920001      4509         13            1       93)
(smt.stats   51   6919 277821 743247  5068/4568/665    9131/1655    52  470   59.32)
ramon: poll                 wall=11.000s usage=10.642s mem=61812KiB load=1.00 rootload=1.00
(smt.stats   52   7113 286529 769610  5168/4771/666    9738/2029    53  473   59.32)
(smt.stats   53   7326 290908 796119  5742/5345/667   10199/2272    54  473   59.51)
ramon: poll                 wall=12.000s usage=11.641s mem=62324KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.6744   1060001      5196         14            1      108)
(smt.stats   54   7560 299308 820277  6003/5489/667   10790/2281    54  473   59.71)
(smt.stats   55   7661 305061 842136  6086/5709/667   11323/2283    54  473   59.80)
(smt.stats   56   7772 309394 862537  6272/5845/667   11669/2285    54  473   59.80)
(smt.stats   57   7894 312907 878710  6463/6082/669   12042/2605    55  487   60.52)
ramon: poll                 wall=13.000s usage=12.641s mem=62728KiB load=1.00 rootload=1.00
(smt.stats   58   8028 316185 899162  6487/6181/669   12406/2605    55  487   60.61)
(smt.stats   59   8175 320680 921095  6492/6186/669   12558/2721    56  498   60.72)
(smt.stats   60   8336 330090 965866  6499/6193/669   13031/2721    56  498   60.72)
(sat.ddfw       1      1   11.0003   1210001      5931         15            1      123)
(smt.stats   61   8513 336132 999846  6508/6202/672   13750/3061    57  499   60.93)
ramon: poll                 wall=14.002s usage=13.642s mem=63300KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8707 341648 1020977  6726/6202/672   14113/3068    57  499   61.13)
ramon: poll                 wall=15.000s usage=14.736s mem=63532KiB load=1.10 rootload=1.10
(sat.ddfw       1      1   10.5312   1370001      6715         16            1      139)
(smt.stats   63   8920 348745 1054505  7350/6501/672   14846/3360    58  505   61.31)
ramon: poll                 wall=16.000s usage=15.735s mem=64096KiB load=1.00 rootload=1.00
(smt.stats   64   9154 357233 1104682  7478/7056/675   15758/3443    59  513   61.43)
(smt.stats   65   9411 362327 1145755  8308/7333/675   16708/3793    60  530   61.89)
(smt.stats   66   9512 365243 1160456  8486/8180/676   18239/3953    61  533   62.10)
ramon: poll                 wall=17.000s usage=16.734s mem=64608KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   9.96191   1540001      7549         17            1      156)
(smt.stats   67   9623 370299 1190847  8492/8186/676   18883/3953    61  533   62.19)
(smt.stats   68   9745 374191 1215408  8651/8188/676   19169/3953    61  533   62.19)
ramon: poll                 wall=18.000s usage=17.734s mem=64608KiB load=1.00 rootload=1.01
(smt.stats   69   9879 377090 1248274  9258/8505/676   19704/3959    61  533   62.29)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(smt.stats   70  10026 379292 1268817  9436/9030/676   20520/3959    61  533   62.49)
(sat.ddfw       1      1   9.56429   1720001      8431         18            1      174)
(smt.stats   71  10187 387538 1350610  9447/9141/677   21095/4550    62  540   62.58)
ramon: poll                 wall=19.000s usage=18.878s mem=65120KiB load=1.14 rootload=1.14
(smt.stats   72  10364 392982 1382680  9468/9154/677   21710/4552    62  540   62.58)
(smt.stats   73  10558 398924 1423372  9509/9195/677   23080/4552    62  540   62.78)
(smt.stats   74  10771 405401 1472527  9541/9213/677   23585/4553    62  540   62.87)
ramon: poll                 wall=20.000s usage=19.986s mem=65372KiB load=1.11 rootload=1.11
ramon: end                  Fri Nov  1 21:55:23 2024
ramon: root.execname        z3
ramon: root.utime           20.020s
ramon: root.stime           0.020s
ramon: group.total          20.044s
ramon: group.utime          20.020s
ramon: group.stime          0.024s
ramon: group.mempeak        65884KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.00
