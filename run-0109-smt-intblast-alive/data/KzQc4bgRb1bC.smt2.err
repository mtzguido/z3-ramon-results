ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:05:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41877 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KzQc4bgRb1bC.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2916545
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4270   1053  1113/1004/91      96/10     3   18   18.96)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 127 := 127&241
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1 := 127&241
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&1
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&1
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&1
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&4
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&4
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&8
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&4
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&8
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&32
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&4
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 4 := 127&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 4 := 242 << 7
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&4
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 4 := 127&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 4 := 242 << 7
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 4 := 127&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 4 := 242 << 7
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&224
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&192
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&8
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&32
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&64
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&128
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 128 := 242 << 7
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 127&8
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 8 := 127&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 8 := 242 << 7
(smt.stats    1    202   6224   3211  1615/1447/166     192/14     6   36   19.38)
(smt.stats    2    313   9063   5313  1717/1555/180     291/21    10   46   19.57)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 0&512
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 8796093022207 := 4398046511360 << 1
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 0&512
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 8796093022207 := 4398046511360 << 1
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 0&512
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 8796093022207 := 4398046511360 << 1
(smt.stats    3    414  11318   6836  1741/1569/186     400/22    11   47   19.57)
(smt.stats    4    525  12790   9249  1948/1754/193     534/48    13   53   19.76)
(smt.stats    5    647  17409  15076  1955/1761/194     682/63    15   53   19.76)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1 := 1&704
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1 := 1&640
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 1&640
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 640 := 8796093022890 << 1
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 1&448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 448 := 8796093022632 << 1
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 1&448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 448 := 8796093022632 << 1
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 1&1024
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 1025 := 256 << 2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 1&1024
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 1025 := 256 << 2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 1&1024
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 1025 := 256 << 2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1 := 1&1024
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 1&1024
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 1 := 1&1024
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 1&1024
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 1 := 1&1024
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18933  18040  2022/1805/212     794/66    16   56   19.95)
(smt.stats    7    859  20784  21271  2142/1869/222     957/76    17   60   20.25)
(smt.stats    8    981  23025  24761  2148/1940/223    1111/89    18   60   20.25)
(smt.stats    9   1115  27615  30272  2378/2143/223    1254/92    19   61   20.36)
(smt.stats   10   1216  31255  34723  2393/2159/223    1369/92    19   61   20.47)
(smt.stats   11   1327  34359  41238  2404/2170/227    1504/110    21   70   20.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  37182  46172  2426/2192/241    1653/125    22   81   20.47)
(smt.stats   13   1583  41653  51495  2449/2210/241    1807/125    22   81   20.47)
(smt.stats   14   1730  47557  61944  2459/2221/243    1950/194    24  126   20.58)
(smt.stats   15   1831  51628  68350  2468/2229/243    2066/195    25  127   20.58)
(smt.stats   16   1942  56152  75983  2479/2239/243    2224/195    25  127   20.58)
(smt.stats   17   2064  59856  83537  2485/2241/244    2361/202    26  134   20.71)
(smt.stats   18   2198  63111  91439  2513/2259/244    2520/203    26  134   20.71)
(smt.stats   19   2345  66689  99622  2554/2284/244    2737/203    26  134   20.71)
(smt.stats   20   2506  69064 104160  2649/2316/244    2940/204    26  134   20.81)
(smt.stats   21   2607  70657 109027  2670/2421/244    3070/204    26  134   20.90)
(smt.stats   22   2718  71784 111485  2740/2437/244    3221/205    26  134   20.90)
ramon: poll                 wall=1.000s usage=0.986s mem=22200KiB load=0.99 rootload=0.98
(smt.stats   23   2840  73168 114202  2804/2517/245    3378/267    27  135   21.00)
(smt.stats   24   2974  74623 118556  2873/2572/245    3554/268    27  135   21.00)
(smt.stats   25   3121  77378 129223  2891/2637/245    3761/268    27  135   21.00)
(smt.stats   26   3282  81836 146085  2918/2653/245    3937/268    27  135   21.09)
(smt.stats   27   3459  85121 155895  2929/2671/246    4161/324    28  138   21.09)
(smt.stats   28   3560  87391 160219  2935/2681/246    4297/324    28  138   21.09)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 3&1928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 1928 := 682 << 2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 3&1928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 1928 := 682 << 2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 3&1864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 1864 := 682 << 2
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 3&1864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 1864 := 682 << 2
(smt.stats   29   3671  88986 164085  3057/2701/246    4482/328    28  138   21.19)
(smt.stats   30   3793  91941 176594  3130/2870/252    4697/362    29  139   21.29)
(smt.stats   31   3927  94629 185668  3144/2888/252    4911/362    29  139   21.29)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  98137 192855  3146/2894/253    5088/420    30  142   21.29)
(smt.stats   33   4235 102392 207658  3186/2898/253    5343/421    30  142   21.39)
(smt.stats   34   4412 106418 223951  3219/2939/253    5542/437    31  151   21.48)
(smt.stats   35   4606 109804 236131  3224/2972/253    5813/437    31  151   21.48)
(smt.stats   36   4707 111433 243339  3225/2973/253    5962/437    31  151   21.48)
(smt.stats   37   4818 114964 256634  3227/2975/254    6118/474    32  155   21.48)
(smt.stats   38   4940 118259 264698  3249/2978/254    6328/475    32  155   21.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 449)
(smt.stats   39   5074 121482 273512  3264/3012/254    6039/475    32  155   21.58)
ramon: poll                 wall=2.000s usage=1.956s mem=23160KiB load=0.97 rootload=0.97
(smt.stats   40   5221 127232 289294  3268/3016/254    6211/475    32  155   21.70)
(smt.stats   41   5382 131427 301032  3308/3035/254    6429/475    32  155   21.70)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 23 := 2097151&2113
(smt.stats   42   5559 134835 311972  3347/3059/254    6747/477    32  155   21.79)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 100 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 100 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 132 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 148 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 100 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 132 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 92 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 92 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 100 := 2097151&2097156
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 132 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 132 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 132 := 2097151&2097284
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 2097284 := 386 << 21
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 132 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 260 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 324 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 324 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 580 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1092 := 2097151&2097220
(smt.stats   43   5753 138735 326141  3537/3192/265    7106/575    33  158   21.89)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 2628 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 2132 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 2116 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 2116 := 2097151&2097220
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 68 := 2097151&2097220
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 2097220 := 386 << 21
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 68 := 2097151&2097220
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 17592188141636 := 386 << 21
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 68 := 2097151&2097220
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 17592188141636 := 386 << 21
(smt.stats   44   5966 143316 335740  3637/3362/306    7403/578    33  158   22.08)
(smt.stats   45   6067 145796 346541  3637/3383/319    7674/592    34  168   22.08)
(smt.stats   46   6178 148028 354673  3639/3384/319    7946/592    34  168   22.08)
(smt.stats   47   6300 151494 363763  3667/3407/321    8112/687    35  203   22.19)
(smt.stats   48   6434 156262 380301  3673/3413/321    8300/687    35  203   22.19)
(smt.stats   49   6581 160096 392150  3680/3420/321    8478/687    35  203   22.28)
(smt.stats   50   6742 166673 410532  3683/3423/321    8648/687    35  203   22.48)
(smt.stats   51   6919 172420 422529  3726/3432/322    9008/760    36  207   22.57)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 4398046511103&4398046511104
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 13194139533312 := 4398046512178 << 42
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 4398046511103&4398046511104
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 21990232555520 := 4398046512178 << 42
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 4398046511103&4398046511104
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 21990232555520 := 4398046512178 << 42
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 175637 437871  3759/3488/324    9450/851    37  214   22.67)
ramon: poll                 wall=3.000s usage=2.861s mem=24272KiB load=0.90 rootload=0.90
(smt.stats   53   7326 180381 446429  3907/3553/329    9827/855    37  214   22.77)
(smt.stats   54   7560 185909 465886  4046/3771/334   10370/855    37  214   22.99)
(smt.stats   55   7661 190182 480587  4116/3826/334   10528/962    38  221   22.99)
(smt.stats   56   7772 196283 496858  4119/3829/338   10715/962    38  221   22.99)
(smt.stats   57   7894 200255 511077  4125/3835/338   10924/1028    39  225   23.09)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8028 202997 518667  4130/3840/338   11091/1028    39  225   23.09)
(smt.stats   59   8175 207847 539007  4236/3861/339   11433/1070    40  225   23.30)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 14 := 15&4398046518079
(smt.stats   60   8336 209825 543393  4416/3956/339   11729/1073    40  225   23.40)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 15 := 15&4398046523455
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 30786325590079 := 8796093022282 << 4
ramon: poll                 wall=4.000s usage=3.852s mem=25296KiB load=0.99 rootload=0.99
(smt.stats   61   8513 214093 557224  4582/4291/347   12469/1073    40  225   23.69)
(smt.stats   62   8707 219974 582114  4599/4307/347   12874/1073    40  225   23.69)
(smt.stats   63   8920 227821 647474  4602/4311/347   13103/1253    41  230   24.18)
(smt.stats   64   9154 235212 699836  4608/4317/347   13413/1253    41  230   24.27)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 511&6545929728896
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 511&6545929708416
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 511&6545929708416
(smt.stats   65   9411 238341 717696  5143/4317/347   14130/1253    41  230   24.67)
(smt.stats   66   9512 239895 722986  5300/4862/357   14515/1278    42  232   24.77)
(smt.stats   67   9623 242413 738609  5450/5042/357   15530/1280    42  232   24.96)
ramon: poll                 wall=5.000s usage=4.850s mem=26632KiB load=1.00 rootload=1.00
(smt.stats   68   9745 244770 759019  5779/5161/357   16213/1282    42  232   24.96)
(smt.stats   69   9880 247150 777291  5981/5690/360   16969/1351    43  232   25.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 250145 800899  5983/5692/361   17736/1351    43  232   25.24)
(smt.stats   71  10188 254163 828351  5988/5697/361   18374/1351    43  232   25.38)
(smt.stats   72  10365 258688 881938  5998/5706/362   18734/1556    44  250   26.19)
(smt.stats   73  10559 262134 893350  6004/5712/364   19067/1558    45  272   26.29)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1 := 8191&3
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 3 := 8191&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 8796093022211 := 8796093022264 << 13
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 3 := 8191&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 17592186044419 := 8796093022264 << 13
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 3 := 8191&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #871 #873) 64)) 17592186044419 := 8796093022264 << 13
(smt.stats   74  10772 267320 908629  6034/5720/364   19358/1561    45  272   26.40)
(smt.stats   75  11006 272834 950489  6109/5810/370   20601/1678    46  274   26.52)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 4398046511432 := 4398046511132 << 14
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 4398046511432 := 4398046511132 << 14
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 4398046511432 := 4398046511132 << 14
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 4398046511134 := 4398046511132 << 14
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 4398046511134 := 4398046511132 << 14
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 8188 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 240 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 256 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 512 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 1024 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 2048 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 2048 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 4096 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 4096 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 2048 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 2016 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 1024 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 992 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 256 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 512 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 480 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 448 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 256 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 236 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 240 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 160 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 136 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 128 := 8191&458752
band: (band[43] (if (or #680 #681ramon: poll                  #682wall=6.000s usage=5.846s mem=28560KiB load=1.00 rootload=0.99 
#683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 2 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 2 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 5140 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 6160 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 6160 := 8191&458752
(smt.stats   76  11263 277613 970398  6430/5882/432   21064/1692    46  274   27.02)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 6280 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 6272 := 8191&458752
(smt.stats   77  11545 283940 992652  6577/6200/499   22668/1694    46  274   27.50)
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 6144 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 5632 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 4096 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 4096 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 4096 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1280 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1280 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1280 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1280 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1024 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 1024 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 72 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 96 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 8191&458752
band: (band[43] (if (= #120 42) 0 (if #548 1 #665)) (shl[43] (bv2int %0) (+ 43 #668))) 64 := 8191&458752
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 64 := 8191&458752
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   78  11646 285725 998432  6777/6367/500   22850/1704    46  274   27.69)
(smt.stats   79  11757 290774 1011806  6780/6431/521   23111/1984    47  318   27.79)
(smt.stats   80  11879 294139 1018598  6928/6457/521   23406/1989    47  318   27.88)
(smt.stats   81  12013 298282 1033030  6976/6616/521   24182/1989    47  318   28.07)
(smt.stats   82  12160 304115 1059604  7073/6644/523   24732/2002    47  318   28.17)
ramon: poll                 wall=7.000s usage=6.838s mem=30036KiB load=0.99 rootload=0.99
(smt.stats   83  12321 309550 1074251  7133/6751/523   25090/2102    48  335   28.27)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12498 317291 1130630  7168/6820/528   26018/2102    48  335   28.55)
(smt.stats   85  12692 324903 1160639  7241/6877/528   27299/2282    49  361   28.84)
(smt.stats   86  12905 336412 1227145  7245/6881/529   27894/2282    49  361   29.03)
ramon: poll                 wall=8.000s usage=7.809s mem=31088KiB load=0.97 rootload=0.97
(smt.stats   87  13139 344234 1252283  7274/6886/530   29218/2559    50  366   29.22)
(smt.stats   88  13396 352138 1290163  7484/6959/530   30389/2567    50  366   29.51)
(smt.stats   89  13678 356990 1308304  7592/7155/530   31569/2886    51  376   29.70)
ramon: poll                 wall=9.000s usage=8.792s mem=31652KiB load=0.98 rootload=0.99
(smt.stats   90  13988 364882 1344178  7704/7265/530   33068/2892    51  376   30.08)
(smt.stats   91  14089 368571 1350675  7772/7404/530   33447/2892    51  376   29.99)
(smt.stats   92  14200 375005 1379440  7793/7413/530   34113/2892    51  376   30.09)
(smt.stats   93  14322 381268 1399335  7846/7430/530   34494/2895    51  376   30.18)
ramon: poll                 wall=10.000s usage=9.762s mem=32336KiB load=0.97 rootload=0.96
(smt.stats   94  14456 387200 1435782  7917/7507/530   35473/2898    51  376   30.39)
(smt.stats   95  14603 392919 1458286  7977/7573/530   36137/2902    51  376   30.59)
(smt.stats   96  14764 401221 1499554  8072/7700/531   37356/3406    52  376   30.69)
ramon: poll                 wall=11.000s usage=10.756s mem=32884KiB load=0.99 rootload=1.00
(smt.stats   97  14941 407793 1543655  8223/7720/531   39075/3408    52  376   31.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 1382)
(smt.stats   98  15135 413770 1581963  8254/7882/533   38791/3408    52  376   31.17)
ramon: poll                 wall=12.000s usage=11.751s mem=33276KiB load=0.99 rootload=0.99
(smt.stats   99  15348 427357 1647044  8289/7915/533   40122/3408    52  376   31.27)
(smt.stats  100  15582 437553 1696920  8344/7970/536   41821/3972    53  384   31.58)
(smt.stats  101  15840 449035 1759720  8349/7975/537   42800/4340    54  439   31.78)
ramon: poll                 wall=13.000s usage=12.700s mem=33624KiB load=0.95 rootload=0.95
(smt.stats  102  16122 459935 1862214  8367/7993/538   44058/4340    54  439   31.87)
(smt.stats  103  16432 472909 1969969  8379/8005/543   45890/4608    55  453   32.06)
ramon: poll                 wall=14.000s usage=13.680s mem=34000KiB load=0.98 rootload=0.97
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  104  16772 492985 2050125  8401/8026/544   47101/4888    56  482   32.25)
(smt.stats  105  16873 498343 2098253  8414/8037/546   47327/4888    56  482   32.25)
(smt.stats  106  16984 501398 2112864  8436/8047/546   47970/4888    56  482   32.35)
(smt.stats  107  17106 507803 2135451  8447/8066/546   48790/4888    56  482   32.35)
ramon: poll                 wall=15.000s usage=14.675s mem=34340KiB load=1.00 rootload=1.00
(smt.stats  108  17240 514168 2195301  8455/8080/546   49164/4888    56  482   32.35)
(smt.stats  109  17387 521959 2257927  8536/8080/546   49963/4951    57  506   32.54)
(smt.stats  110  17548 525985 2284718  8555/8168/546   50557/4951    57  506   32.54)
ramon: poll                 wall=16.000s usage=15.674s mem=34596KiB load=1.00 rootload=1.00
(smt.stats  111  17725 534281 2317674  8646/8181/546   51094/4951    57  506   32.74)
(smt.stats  112  17919 545493 2372532  8673/8298/546   51543/4951    57  506   32.83)
(smt.stats  113  18132 554877 2422662  8677/8302/546   52360/4951    57  506   32.83)
ramon: poll                 wall=17.000s usage=16.639s mem=35140KiB load=0.96 rootload=0.96
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 3&8796093021488
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 0 := 4398046511014 << 3
band: (band[43] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 ...) 0 (if #702 1 #784)) (shl[64] (* 2 #114) (mod #874 64))) 0 := 3&8796093021488
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 0 := 4398046511014 << 3
(smt.stats  114  18366 561802 2468090  8760/8348/547   52833/5070    58  514   33.32)
(smt.stats  115  18623 569173 2563000  8835/8411/553   53671/5070    58  514   33.32)
(smt.stats  116  18905 575859 2620405  8872/8470/553   54548/5070    58  514   33.51)
ramon: poll                 wall=18.000s usage=17.635s mem=35408KiB load=1.00 rootload=1.00
(smt.stats  117  19215 591556 2662074  9068/8475/556   56614/5405    59  521   33.80)
ramon: poll                 wall=19.000s usage=18.593s mem=36068KiB load=0.96 rootload=0.95
(smt.stats  118  19555 605834 2707952  9269/8705/556   58146/5411    59  521   34.09)
ramon: poll                 wall=20.000s usage=19.589s mem=36108KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:05:20 2024
ramon: root.execname        z3
ramon: root.utime           19.570s
ramon: root.stime           0.020s
ramon: group.total          19.599s
ramon: group.utime          19.575s
ramon: group.stime          0.024s
ramon: group.mempeak        36368KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              0.98
