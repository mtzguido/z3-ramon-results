ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:52:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27650 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ejP2QWHMCAKk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             879350
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 95 := 94 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 95 := 94 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 185 := 92 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 562949953421314 := 90 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 562949953421312 := 4 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 562949953421312 := 92 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 7 := 6 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 9 := 8 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 11 := 10 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 70368744177665 := 8 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 105553116266497 := 6 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 70368744177671 := 10 << 43
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 1 := 5 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 562949953421312 := 4 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 562949953421312 := 4 << 46
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 1 := 2 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 281474976710656 := 4 << 46
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 1 := 2 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 5 := 4 << 46
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 1 := 2 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 7 := 6 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 9 := 8 << 44
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 1 := 4 << 45
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 47 := 48 << 1
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 47 := 48 << 1
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 0 := 48 << 1
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 0 := 48 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 66 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 66 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 44 := 92 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 43 := 90 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 88 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 31 := 66 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 31 := 66 << 15
(smt.stats    0    101    532    685   152/143/109      88/13     6   23   51.16)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 32 := 68 << 14
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   64.5161     10000        49          0            1        2)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 33 := 70 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 33 := 70 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 33 := 70 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 72 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 74 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 76 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 42 := 88 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 37 := 78 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 86 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 78 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 80 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 41 := 86 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 40 := 84 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 39 := 82 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 78 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 38 := 80 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 37 := 78 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 37 := 78 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 82 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 0 := 82 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 84 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 86 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 40 := 84 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 40 := 84 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 42 := 88 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 42 := 88 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 43 := 90 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 44 := 92 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 45 := 94 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 34 := 72 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 35 := 74 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 36 := 76 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 35 := 74 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 34 := 72 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 32 := 68 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 32 := 68 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 32 := 68 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 64 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 64 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 12 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 14 << 41
(smt.stats    1    202   1575   1870   352/314/175     169/18    11   44   51.63)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 16 << 40
(sat.ddfw       1      1   32.1576     20001        98          1            1        3)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 34 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 38 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 38 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 38 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 38 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 40 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 42 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 44 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 46 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 62 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 60 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 58 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 56 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 54 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 40 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 42 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 26 := 56 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 60 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 62 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 28 := 60 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 28 := 60 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 28 := 60 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 56 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 56 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 58 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 26 := 56 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 26 := 56 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 6 := 16 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 6 := 16 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 16 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 18 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 20 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 9 := 22 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 8 := 20 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 7 := 18 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 1 := 20 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 8 := 20 << 38
(sat.ddfw       1      1   35.0877     40001       196          2            1        5)
(smt.stats    2    313   3097   3585   551/522/249     273/19    14   64   52.13)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 549755813889 := 2 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 549755813889 := 2 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 2199023255551 := 2 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #122 #124) 64)) 2199023255551 := 2 << 47
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #91))) 281474976710657 := 1 << 48
(smt.stats    3    414   4558   4774   634/546/263     357/32    16   78   52.61)
ramon: poll                 wall=1.004s usage=0.869s mem=55172KiB load=0.87 rootload=0.85
(sat.ddfw       1      1    31.679     70001       343          3            1        8)
(sat.ddfw       1      1   27.5103    110001       539          4            1       12)
(smt.stats    4    525   6940   6351   892/790/272     490/67    18   92   52.99)
ramon: poll                 wall=2.000s usage=1.870s mem=55160KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   24.7397    160000       784          5            1       17)
(sat.ddfw       1      1   21.5289    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.857s mem=55928KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   18.5676    290001      1421          7            1       30)
ramon: poll                 wall=4.004s usage=3.813s mem=55928KiB load=0.95 rootload=0.96
(sat.ddfw       1      1   16.6701    370001      1813          8            1       38)
(smt.stats    5    647   9749   9130  1072/941/273     638/112    19   92   53.59)
ramon: poll                 wall=5.000s usage=4.808s mem=55932KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.807s mem=55932KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.1311    460001      2254          9            1       47)
ramon: poll                 wall=7.004s usage=6.730s mem=55948KiB load=0.92 rootload=0.92
(sat.ddfw       1      1   13.8504    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  13115  12074  1164/1020/274     750/120    20   93   53.69)
ramon: poll                 wall=8.000s usage=7.690s mem=56224KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   12.7182    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=8.672s mem=56280KiB load=0.98 rootload=0.99
ramon: poll                 wall=10.004s usage=9.758s mem=56388KiB load=1.08 rootload=1.08
(smt.stats    7    859  14754  13365  1425/1148/274     867/123    20   93   53.88)
(sat.ddfw       1      1   11.7832    790001      3872         12            1       80)
ramon: poll                 wall=11.004s usage=10.937s mem=56648KiB load=1.18 rootload=1.18
(sat.ddfw       1      1   11.3825    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=12.074s mem=56648KiB load=1.14 rootload=1.14
(smt.stats    8    981  16954  16240  1633/1460/274    1002/123    20   93   54.07)
ramon: poll                 wall=13.004s usage=12.978s mem=56472KiB load=0.90 rootload=0.90
(sat.ddfw       1      1   10.6529   1060001      5196         14            1      108)
ramon: poll                 wall=14.000s usage=13.895s mem=56476KiB load=0.92 rootload=0.92
(smt.stats    9   1115  21846  22260  1838/1627/274    1161/125    20   93   54.26)
ramon: poll                 wall=15.004s usage=14.891s mem=56756KiB load=0.99 rootload=0.99
(sat.ddfw       1      1    9.8464   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=15.851s mem=56768KiB load=0.96 rootload=0.96
(smt.stats   10   1216  25956  26327  1936/1788/274    1249/126    20   93   54.26)
(smt.stats   11   1327  31057  29924  2020/1878/274    1412/135    20   93   54.35)
ramon: poll                 wall=17.004s usage=16.795s mem=56784KiB load=0.94 rootload=0.94
(smt.stats   12   1449  34553  34180  2078/1975/274    1544/139    20   93   54.45)
(sat.ddfw       1      1   9.21765   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1583  39222  40326  2138/2024/289    1656/263    21  113   54.54)
ramon: poll                 wall=18.000s usage=17.739s mem=57044KiB load=0.95 rootload=0.95
(smt.stats   14   1730  45592  46580  2171/2066/290    1816/274    22  114   54.64)
ramon: poll                 wall=19.000s usage=18.683s mem=57248KiB load=0.94 rootload=0.94
(smt.stats   15   1831  50927  52183  2251/2107/290    1935/286    22  114   54.74)
(sat.ddfw       1      1   8.69432   1540001      7549         17            1      156)
ramon: poll                 wall=20.000s usage=19.681s mem=57128KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:52:26 2024
ramon: root.execname        z3
ramon: root.utime           19.720s
ramon: root.stime           0.010s
ramon: group.total          19.746s
ramon: group.utime          19.726s
ramon: group.stime          0.020s
ramon: group.mempeak        57384KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              0.98
