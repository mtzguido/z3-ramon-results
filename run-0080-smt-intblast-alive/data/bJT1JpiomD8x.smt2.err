ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:39:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25248 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/bJT1JpiomD8x.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             89527
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1251    320   736/602/108     111/13     4   17   18.87)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 268435456 := 4294967280 >>l 19
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268435455&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268435455&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268427263&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268427263&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 1&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 268435457 := 4294967280 >>l 19
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 268435456 := 4294967280 >>l 19
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 268435456 := 4294967280 >>l 19
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268435455&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268427263&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268394495&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32768 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 131071 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 98304 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32768 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 98304 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 1146880 := 268402688&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 536838144 := 4294967280 >>l 19
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32766 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32764 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32768 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 98304 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 1146880 := 268402688&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 536838144 := 4294967280 >>l 19
(smt.stats    1    202   2691   1525  1315/1199/179     237/30     7   35   19.16)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 1015808 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 1015808 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 98304 := 268402688&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 1015808 := 267378687&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 884736 := 267378687&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 884736 := 267378687&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 131066 := 267378687&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 131064 := 267378687&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 131056 := 267378687&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 131064 := 267378687&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 131056 := 267378687&1155072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 98304 := 267378687&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 267378687 := 4294967280 >>l 19
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32768 := 267288576&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 267288576 := 267288576 >>l 19
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32768 := 267173888&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 267173888 := 267173888 >>l 19
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32768 := 2129920&1155072
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 270565376 := 270565376 >>l 19
(smt.stats    2    313   4635   4023  1427/1312/205     480/61    10   50   19.26)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 267255808&36962304
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 16384 := 267272192&36962304
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 267255808&36962304
(smt.stats    3    414   6444   6324  1540/1413/228     681/104    11   53   19.35)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 786432 := 267386880&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 786432 := 267386880&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 786432 := 267649024&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 524288 := 267517952&167790208
(smt.stats    4    525   8088   9081  1577/1448/244     949/179    13   73   19.64)
(smt.stats    5    647  11640  14496  1596/1463/244    1169/188    14   74   19.64)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  14629  18905  1598/1465/244    1304/188    14   74   19.74)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&88082640
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 4026531840 := 4026531840 >>l 28
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&88082640
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 4026531840 := 4026531840 >>l 28
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&88082640
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 4026531840 := 4026531840 >>l 28
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&88082640
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 4026531840 := 4026531840 >>l 28
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&88082640
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 268435456 := 268435456 >>l 28
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 2&88082640
lshr: (lshr[28] (bv2int %1) (mod (bv2int %0) 28)) 88082641 := 33554432 >>l 24
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 1&88082640
lshr: (lshr[28] (bv2int %1) (mod (bv2int %0) 28)) 16777217 := 16777216 >>l 24
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 1&88082640
lshr: (lshr[28] (bv2int %1) (mod (bv2int %0) 28)) 16777217 := 16777216 >>l 24
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 1&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 1 := 1&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 1&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 1 := 1&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 15 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 14 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 12 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 8 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 15 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 14 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 4&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 4 := 4&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 8 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 8 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 8 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 2 := 3&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 2 := 3&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 2 := 3&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 1&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 1 := 1&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 4 := 15&88082640
(smt.stats    7    859  17851  23649  1677/1532/285    1451/227    15   82   19.97)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 7 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 6 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 4 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 2 := 15&88082640
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 15&88082640
band: (band[28] (lshr[28] (bv2int %1) (mod #107 28)) (if (= #335 27) 30012288316473344 (if #337 15006144158236672 #389))) 2 := 15&88082640
(smt.stats    8    981  19850  27559  1739/1603/314    1710/257    16  101   20.19)
(smt.stats    9   1115  23242  33700  1785/1623/314    1989/264    16  101   20.19)
(smt.stats   10   1216  24144  36592  1788/1646/314    2123/309    17  109   20.19)
(smt.stats   11   1327  24614  39454  1790/1648/314    2267/309    17  109   20.19)
(smt.stats   12   1449  24988  41610  1790/1648/314    2415/309    17  109   20.29)
(smt.stats   13   1583  27351  47519  1794/1652/317    2783/352    19  115   20.38)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&67144960
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 0 := 1342177296 >>l 24
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&67144960
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 0 := 1342177280 >>l 24
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 0&67144960
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 0 := 1342177280 >>l 24
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 80 := 80&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 80 := 80&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 136 := 137&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 128 := 129&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 128 := 129&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 128 := 129&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 111 := 112&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 111 := 112&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 5&67144960
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 5 := 3221749760 >>l 24
(smt.stats   14   1730  29399  54003  1902/1750/351    3132/426    20  124   20.67)
(smt.stats   15   1831  31080  59074  1958/1771/351    3323/429    20  124   20.67)
ramon: poll                 wall=1.000s usage=0.955s mem=21976KiB load=0.95 rootload=0.93
(smt.stats   16   1942  33829  67117  1997/1841/354    3630/468    22  128   20.77)
(smt.stats   17   2064  36947  73638  2094/1916/355    3927/468    22  128   20.96)
(smt.stats   18   2198  39578  80514  2108/1920/355    4317/502    23  140   21.15)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 75&9240576
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 75 := 32 >>l 16
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 75&9240576
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 75 := 524288 >>l 16
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 61&9240576
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 61 := 2621440 >>l 16
(smt.stats   19   2345  41149  83884  2283/1936/355    4615/506    23  140   21.56)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 287&577536
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 287 := 18350352 >>l 20
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 281&577536
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 281 := 18350080 >>l 20
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 281&577536
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 281 := 18350080 >>l 20
(smt.stats   20   2506  45295  93263  2500/2316/372    5078/601    25  179   21.56)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 260046849&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 260046849&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 260046849&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 260046851&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 260046849&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 260046849&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 201326593&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 201326593&167790208
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 67108865&167790208
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 335544321 := 81264640 >>l 25
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 25165825&167790208
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 293601281 := 39321600 >>l 25
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 25165825&167790208
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 293601281 := 39321600 >>l 25
(smt.stats   21   2607  46921  97313  2631/2406/389    5283/607    25  179   21.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   22   2718  48732 105762  2664/2462/404    5593/607    25  179   21.75)
(smt.stats   23   2840  52803 120790  2759/2505/404    5950/666    26  185   21.84)
ramon: poll                 wall=2.000s usage=1.953s mem=23236KiB load=1.00 rootload=1.00
(smt.stats   24   2974  55875 136193  2832/2637/411    6851/743    27  192   22.27)
(smt.stats   25   3121  61460 161333  2864/2663/411    7286/743    27  192   22.27)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 12 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 12 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 12 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 12 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 12 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 10 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 10 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 10 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 10 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 9 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 9 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 8 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 8 := 16&67144960
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 16 := 16&178259048
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 16 := 16&178259048
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 32 := 32&178259048
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 32 := 536870912 >>l 29
(smt.stats   26   3282  64520 173742  2946/2726/435    7840/858    28  218   22.46)
(smt.stats   27   3459  68250 187130  3027/2782/440    8366/862    28  218   22.65)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 2&178782490
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 2&178782490
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 8&178782490
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 8&178782490
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 8&178782490
(smt.stats   28   3560  70166 193742  3120/2888/446    8722/983    29  224   22.81)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 16&178782490
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 16&178782490
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 32&178782490
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 268435488 := 4029218784 >>l 31
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 32&178782490
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 268435488 := 4029218784 >>l 31
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 32&178782490
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 268435488 := 4029218800 >>l 31
(smt.stats   29   3671  71768 199495  3181/2922/451    8926/989    29  224   22.90)
(smt.stats   30   3793  74107 217886  3312/3042/461    9145/989    29  224   22.90)
ramon: poll                 wall=3.000s usage=2.952s mem=24192KiB load=1.00 rootload=1.00
(smt.stats   31   3927  79305 242883  3323/3107/466    9642/1129    31  240   23.00)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4074  85577 265879  3342/3121/470   10810/1130    31  240   23.19)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 72040 := 268402688&134289920
(smt.stats   33   4235  92723 294526  3485/3253/472   11584/1214    32  274   23.57)
(smt.stats   34   4412  95652 311162  3573/3278/472   12068/1308    33  274   23.57)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 136314880&0
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 404750336 := 271581728 >>l 4
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 136314880&0
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 404750336 := 271581728 >>l 4
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 0 := 136314880&0
lshr: (lshr[32] (* 16 (bv2int %1)) (mod (+ 4 #107 #239) 32)) 404750336 := 271581728 >>l 4
(smt.stats   35   4606  98018 327257  3659/3347/477   12652/1311    33  274   23.86)
(smt.stats   36   4707 100022 338357  3681/3445/484   13732/1407    34  303   23.96)
ramon: poll                 wall=4.000s usage=3.952s mem=25272KiB load=1.00 rootload=1.00
(smt.stats   37   4818 103048 355905  3716/3467/485   14028/1407    34  303   23.96)
(smt.stats   38   4940 106382 373104  3828/3485/485   14575/1411    34  303   24.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 109660 392136  3848/3597/486   15330/1654    35  310   24.25)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 960393226127147008 (if #414 480196613063573504 #474))) 8 := 13&88082640
(smt.stats   40   5221 112179 403167  3956/3623/486   15573/1656    35  310   24.25)
(smt.stats   41   5382 114832 419465  4068/3731/486   16026/1659    35  310   24.44)
ramon: poll                 wall=5.000s usage=4.952s mem=25788KiB load=1.00 rootload=1.00
(smt.stats   42   5559 117807 443249  4186/3928/488   16606/1794    36  315   24.44)
(smt.stats   43   5753 122454 480414  4269/3997/489   17555/1886    37  326   24.62)
(smt.stats   44   5966 128060 522000  4362/4106/497   19100/1886    37  326   24.91)
(smt.stats   45   6067 130599 534045  4424/4147/497   19559/2070    38  363   25.01)
ramon: poll                 wall=6.000s usage=5.952s mem=26488KiB load=1.00 rootload=1.00
(smt.stats   46   6178 133775 542969  4601/4166/497   20234/2073    38  363   25.40)
(smt.stats   47   6300 136549 563508  4809/4380/497   20758/2073    38  363   25.49)
(smt.stats   48   6434 138674 576541  4877/4609/498   21318/2150    39  365   25.49)
ramon: poll                 wall=7.000s usage=6.951s mem=27188KiB load=1.00 rootload=1.00
(smt.stats   49   6581 141784 594020  4923/4616/499   22464/2151    39  365   25.68)
(smt.stats   50   6742 143891 605796  5117/4688/499   22779/2152    39  365   25.78)
(smt.stats   51   6919 145823 628677  5217/4898/499   23474/2152    39  365   25.88)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 150107 646387  5338/4960/503   24666/2359    40  383   26.03)
ramon: poll                 wall=8.000s usage=7.951s mem=27472KiB load=1.00 rootload=1.00
(smt.stats   53   7326 157148 688373  5566/5097/503   25504/2365    40  383   26.13)
(smt.stats   54   7560 165390 716309  5648/5380/505   26934/2586    41  431   26.22)
ramon: poll                 wall=9.000s usage=8.951s mem=27872KiB load=1.00 rootload=1.00
(smt.stats   55   7661 169086 740694  5670/5383/505   28107/2586    41  431   26.51)
(smt.stats   56   7772 172721 755065  5747/5422/505   28633/2588    41  431   26.60)
(smt.stats   57   7894 178021 780740  5925/5558/505   29451/2860    42  473   26.70)
ramon: poll                 wall=10.000s usage=9.951s mem=28196KiB load=1.00 rootload=1.00
(smt.stats   58   8028 180783 795384  6016/5663/505   30763/2861    42  473   26.79)
(smt.stats   59   8175 186463 840778  6034/5753/508   31435/2861    42  473   27.09)
(smt.stats   60   8336 191211 871391  6191/5780/508   32231/3109    43  493   27.29)
(smt.stats   61   8513 194817 901975  6237/5938/508   33425/3112    43  493   27.38)
ramon: poll                 wall=11.003s usage=10.953s mem=28872KiB load=1.00 rootload=1.00
(smt.stats   62   8707 200688 946259  6307/5980/508   33929/3114    43  493   27.48)
(smt.stats   63   8920 206212 994120  6494/6226/512   34835/3308    44  539   27.57)
ramon: poll                 wall=12.000s usage=11.950s mem=29172KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9154 213759 1044908  6650/6232/512   36443/3312    44  539   27.76)
(smt.stats   65   9411 218502 1084527  6849/6401/512   37638/3312    44  539   27.95)
(smt.stats   66   9512 219932 1093428  6901/6625/513   38413/3457    45  557   28.05)
(smt.stats   67   9623 222661 1127737  6909/6641/514   38870/3457    45  557   28.05)
ramon: poll                 wall=13.000s usage=12.949s mem=29752KiB load=1.00 rootload=1.00
(smt.stats   68   9745 224382 1153203  6913/6645/514   39361/3457    45  557   28.15)
(smt.stats   69   9879 228336 1198107  6914/6646/516   40280/3742    46  602   28.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 373)
(smt.stats   70  10026 231982 1220764  6954/6686/517   41156/3742    46  602   28.59)
(smt.stats   71  10187 236882 1278425  6959/6691/517   42800/3742    46  602   28.69)
ramon: poll                 wall=14.000s usage=13.949s mem=30148KiB load=1.00 rootload=1.00
(smt.stats   72  10364 243159 1334059  6990/6695/517   44445/3746    46  602   28.78)
(smt.stats   73  10558 247701 1366174  7040/6738/517   45083/4413    47  627   28.88)
ramon: poll                 wall=15.000s usage=14.949s mem=30504KiB load=1.00 rootload=1.00
(smt.stats   74  10771 252779 1403431  7177/6773/517   46485/4417    47  627   29.07)
(smt.stats   75  11005 257022 1450205  7275/6943/517   47933/4418    47  627   29.26)
ramon: poll                 wall=16.000s usage=15.948s mem=30804KiB load=1.00 rootload=1.00
(smt.stats   76  11262 264485 1536049  7281/7012/517   49646/4418    47  627   29.36)
(smt.stats   77  11544 272285 1603310  7398/7019/517   51536/4419    47  627   29.65)
ramon: poll                 wall=17.000s usage=16.948s mem=31216KiB load=1.00 rootload=1.00
(smt.stats   78  11645 275175 1624398  7508/7139/517   52053/4419    47  627   29.65)
(smt.stats   79  11756 278537 1664625  7539/7258/517   52885/4419    47  627   29.74)
(smt.stats   80  11878 281847 1707090  7546/7271/517   53187/4419    47  627   29.74)
(smt.stats   81  12012 284886 1758275  7559/7290/517   54057/4419    47  627   29.84)
ramon: poll                 wall=18.000s usage=17.943s mem=31828KiB load=0.99 rootload=0.99
(smt.stats   82  12159 289408 1824346  7559/7290/517   54516/4419    47  627   30.30)
(smt.stats   83  12320 293730 1883188  7565/7296/517   55428/4419    47  627   30.39)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12497 295341 1899302  7565/7296/517   55719/4419    47  627   30.49)
(smt.stats   85  12691 298338 1943334  7571/7296/517   56599/4419    47  627   30.49)
ramon: poll                 wall=19.000s usage=18.943s mem=32160KiB load=1.00 rootload=1.00
(smt.stats   86  12904 302767 1991886  7581/7304/517   57955/4419    47  627   30.68)
(smt.stats   87  13138 311569 2065028  7585/7316/517   59433/4420    47  627   30.78)
ramon: poll                 wall=20.000s usage=19.943s mem=32564KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:40:17 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.992s
ramon: group.utime          19.972s
ramon: group.stime          0.020s
ramon: group.mempeak        32820KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.049s
ramon: loadavg              1.00
