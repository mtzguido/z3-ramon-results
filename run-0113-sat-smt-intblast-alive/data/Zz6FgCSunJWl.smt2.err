ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:12:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40408 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1324
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Zz6FgCSunJWl.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3895707
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   201/200     0/0  51       0    18.34   0.00)
(sat.stats    132   1230    0   201/200   132/65  51       0    18.64   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 438 :time 0.00)
(sat.stats    132   1230    0   201/200   132/65  51       0    18.64   0.01)
(sat.stats    132   1230    0   201/200   132/65  51       0    18.64   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 6 :time 0.00)
 (sat-probing :cost 484018.64 :time 0.00)
(sat.stats    132   1230    0   207/206   126/62  51       0    18.64   0.01)
(sat.stats    250   2397    1   207/206   244/127  51       0    18.83   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    253   2448    2   207/206   247/127  51       0    18.83   0.02)
(sat.stats    256   2503    3   207/206   250/127  51       0    18.83   0.02)
(sat.stats    259   2586    4   207/206   253/127  51       0    18.83   0.02)
(sat.stats    262   2678    5   207/206   256/127  51       0    18.83   0.02)
(sat.stats    265   2732    6   209/208   259/129  51       0    18.83   0.02)
(sat.stats    268   2752    7   209/208   262/132  51       0    18.83   0.02)
(sat.stats    271   2766    8   209/208   265/134  51       0    18.83   0.02)
(sat.stats    280   2863    9   209/208   274/140  51       0    18.83   0.02)
(sat.stats    283   2913   10   209/208   277/140  51       0    18.83   0.02)
(sat.stats    286   2972   11   209/208   280/141  51       0    18.83   0.02)
(sat.stats    289   3057   12   209/208   283/141  51       0    18.83   0.02)
(sat.stats    292   3112   13   209/208   286/143  51       0    18.83   0.02)
(sat.stats    316   3349   21   209/208   310/153  51       0    18.93   0.02)
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 1 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 8190 := 196608&8191
(sat.stats    474   6146   37   291/289   468/203  51       0    19.41   0.16)
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 6271 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 3066 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 636 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 88 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 2676 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 128 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 32 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 80 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 1472 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 128 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 256 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 512 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 7168 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 4096 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 2048 := 8191&196608
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 120 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 80 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 96 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 64 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 256 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 7168 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 6656 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 6144 := 196608&8191
band: (band[18] (if (= #449 17) 0 (if #451 1 #494)) (if (= #163 17) 34359214080 (if #498 17179607040 #530))) 0 := 8191&196608
band: (band[18] (if (= #229 31) 562941363486720 (if #315 281470681743360 #312)) (if (or #550 #551) 0 (if #552 1 #622))) 4096 := 196608&8191
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    709  13241   51  2304/2302   734/306  51       0    21.05   0.28)
(sat.stats   1204  25005   70  5737/5734  1246/331  51       0    21.96   0.81)
ramon: poll                 wall=1.000s usage=0.999s mem=23656KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 9087 :time 0.00)
(sat.stats   1823  45404  117 12248/12245  1924/541 231       0    23.62   1.32)
ramon: poll                 wall=2.000s usage=1.998s mem=25668KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14086 :time 0.00)
(sat.stats   2527  73083  126 19454/19449  2735/737 268       0    25.15   2.04)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 15239 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 15434 :time 0.00)
ramon: poll                 wall=3.000s usage=2.997s mem=26908KiB load=1.00 rootload=0.99
(sat.stats   3598  96840  196 28495/28490  3898/902 273       0    25.95   3.25)
ramon: poll                 wall=4.000s usage=3.996s mem=27224KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.995s mem=27696KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.994s mem=28396KiB load=1.00 rootload=1.00
(sat.stats   6707 139691  276 37412/37407  5749/1028 273       0    27.39   6.02)
ramon: poll                 wall=7.000s usage=6.993s mem=28828KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   8092 159613  389 45772/45767  6568/1066 274       0    28.13   7.72)
ramon: poll                 wall=8.000s usage=7.992s mem=29472KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34872 :time 0.00)
ramon: poll                 wall=9.000s usage=8.991s mem=29520KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 408 :elim-clauses 1 :cost 38409 :time 0.00)
ramon: poll                 wall=10.000s usage=9.991s mem=29584KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 18 :elim-clauses 2 :cost 40839 :time 0.00)
ramon: poll                 wall=11.000s usage=10.990s mem=30044KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.985s mem=30232KiB load=0.99 rootload=0.99
(sat.stats  13208 229221  494 53782/53777  9585/1555 280       0    29.31  12.10)
ramon: poll                 wall=13.000s usage=12.983s mem=45636KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 50170 :time 0.00)
ramon: poll                 wall=14.000s usage=13.981s mem=49292KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.980s mem=49436KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.980s mem=49648KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.979s mem=49984KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.978s mem=49988KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.977s mem=50004KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.977s mem=50004KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:12:27 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.987s
ramon: group.utime          19.971s
ramon: group.stime          0.016s
ramon: group.mempeak        50260KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
