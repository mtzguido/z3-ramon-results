ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:30:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29535 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1fmzS9qlmd0Z.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             596893
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037927859
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 144115188075855795 := 144115188075855794 << 6
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037927859
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 144115188075855795 := 144115188075855794 << 6
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037927859
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 144115188075855795 := 144115188075855794 << 6
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037927859
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 144115188075855795 := 144115188075855794 << 6
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037927859
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 144115188075855795 := 144115188075855794 << 6
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037927859
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 144115188075855795 := 144115188075855794 << 6
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 1 := 72057594037927897 << 7
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922945
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9223372036854770817 := 144115188075855794 << 6
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037922945 := 72057594037927897 << 7
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 1 := 72057594037927897 << 7
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037927896 := 72057594037927897 << 7
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037927896 := 72057594037927897 << 7
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   64.1026     10000        49          0            1        2)
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037922945 := 72057594037927897 << 7
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 1 := 72057594037927897 << 7
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 1 := 72057594037927897 << 7
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037922945 := 72057594037927897 << 7
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 0&72057594037922944
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 1 := 72057594037927897 << 7
(smt.stats    0    101    988   1587  1282/1131/126      79/9    11   25   51.86)
(smt.stats    1    202   1851   2304  1461/1311/130     172/13    12   26   51.95)
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9295429630892703744 := 144115188075855816 << 51
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9295429630892703744 := 144115188075855816 << 51
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9295429630892703744 := 144115188075855816 << 51
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 18374686479671623680 := 144115188075855816 << 51
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 18374686479671623680 := 144115188075855816 << 51
(sat.ddfw       1      1   35.0912     20001        98          1            1        3)
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 8 := 11&10
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 8 := 11&10
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 4 := 11&9
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 4 := 11&9
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 8 := 11&10
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 11&2
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 11&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9295429630892703744 := 144115188075855810 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 11&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9295429630892703744 := 144115188075855810 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 11&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9295429630892703744 := 144115188075855810 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 1 := 11&10
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 1 := 11&9
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 1 := 11&9
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 1 := 11&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 17437937757178560513 := 144115188075855810 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9295429630892703744 := 144115188075855812 << 53
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 9295429630892703744 := 144115188075855812 << 53
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&3
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 1 := 5&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #1114 #1118) 64)) 17870283321406128131 := 144115188075855812 << 53
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037924095 := 72057594037927906 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037924095 := 72057594037927906 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037924095 := 72057594037927906 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037924095 := 72057594037927906 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 36028797018963974 := 72057594037927906 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 5 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 5 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 4 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 2 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 4 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #110))) 72057594037924095 := 72057594037927906 << 54
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 2 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 4 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 2 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 4 := 5&36028797018963968
(smt.stats    2    313   3529   3636  1571/1409/203     265/13    17   52   52.24)
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 1 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 2 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 1 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 2 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 3 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 3 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 2 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 1 := 5&36028797018963968
band: (band[56] (if (or #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 ...) 0 (if #442 1 #908)) (shl[64] (* 2 #108) (mod #1122 64))) 0 := 5&36028797018963968
band: (band[56] (if (or #624 #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 ...) 0 (if #675 1 #683)) (shl[56] (bv2int %0) (+ 56 #883))) 4 := 5&36028797018963968
(sat.ddfw       1      1   36.2976     40001       196          2            1        5)
(smt.stats    3    414   4906   5142  1652/1490/235     352/17    20   64   52.53)
(sat.ddfw       1      1   32.8587     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.777s mem=54672KiB load=0.78 rootload=0.76
(smt.stats    4    525   6000   5943  1729/1499/236     441/24    21   93   52.72)
(sat.ddfw       1      1   29.2398    110001       539          4            1       12)
ramon: poll                 wall=2.000s usage=1.779s mem=55068KiB load=1.00 rootload=1.01
(sat.ddfw       1      1    25.866    160000       784          5            1       17)
(smt.stats    5    647   6547   6437  1954/1711/236     589/28    21   93   53.10)
(sat.ddfw       1      1   22.9537    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.778s mem=55368KiB load=1.00 rootload=1.00
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   7612   8288  2508/2070/237     710/56    22   94   53.19)
(sat.ddfw       1      1   20.5158    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.851s mem=55400KiB load=1.07 rootload=1.07
(smt.stats    7    859   8250   8934  2627/2344/237     826/58    22   94   53.29)
(sat.ddfw       1      1   18.4715    370001      1813          8            1       38)
(smt.stats    8    981   9787  11837  2908/2684/242     975/95    24  104   53.29)
(smt.stats    9   1115  13809  15741  2981/2746/242    1134/104    24  104   53.48)
ramon: poll                 wall=5.000s usage=4.942s mem=55644KiB load=1.09 rootload=1.09
(sat.ddfw       1      1   16.8571    460001      2254          9            1       47)
(smt.stats   10   1216  16079  18229  3092/2862/243    1282/132    25  105   53.58)
ramon: poll                 wall=6.000s usage=5.941s mem=55752KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.4967    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=6.941s mem=55896KiB load=1.00 rootload=1.00
(smt.stats   11   1327  18699  21182  3273/2993/244    1404/153    26  105   53.67)
(sat.ddfw       1      1   14.3173    670001      3284         11            1       68)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  20833  26394  3422/3239/258    1565/166    27  106   53.77)
ramon: poll                 wall=8.000s usage=7.941s mem=56132KiB load=1.00 rootload=0.99
(smt.stats   13   1583  23397  31921  3467/3269/261    1699/201    28  151   53.77)
(smt.stats   14   1730  25713  39957  3548/3311/261    1882/202    28  151   53.77)
(smt.stats   15   1831  28084  44900  3582/3373/261    2029/203    28  151   53.97)
(smt.stats   16   1942  30049  49508  3591/3403/261    2176/203    28  151   53.97)
(smt.stats   17   2064  32410  52850  3612/3413/261    2307/204    28  151   54.06)
(sat.ddfw       1      1   13.5074    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=9.170s mem=56392KiB load=1.23 rootload=1.23
(smt.stats   18   2198  35813  60024  3710/3449/262    2483/293    29  151   54.16)
(smt.stats   19   2345  38761  67554  3799/3568/263    2735/347    30  151   54.16)
ramon: poll                 wall=10.006s usage=10.278s mem=56620KiB load=1.10 rootload=1.10
(sat.ddfw       1      1   12.7115    920001      4509         13            1       93)
(smt.stats   20   2506  41948  73363  3876/3688/268    2944/500    32  159   54.35)
ramon: poll                 wall=11.000s usage=11.271s mem=56720KiB load=1.00 rootload=1.00
(smt.stats   21   2607  43987  77342  3993/3698/268    3069/502    32  159   54.45)
(sat.ddfw       1      1   11.8524   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=12.271s mem=56976KiB load=1.00 rootload=1.00
(smt.stats   22   2718  45690  80694  4081/3811/268    3211/503    32  159   54.54)
ramon: poll                 wall=13.000s usage=13.274s mem=56976KiB load=1.00 rootload=1.01
(smt.stats   23   2840  48282  86372  4201/3910/269    3344/519    33  166   54.64)
(sat.ddfw       1      1   11.1119   1210001      5931         15            1      123)
(smt.stats   24   2974  49972  90320  4310/4035/269    3515/521    33  166   54.64)
ramon: poll                 wall=14.002s usage=14.276s mem=56976KiB load=1.00 rootload=1.00
(smt.stats   25   3121  51972  95310  4415/4131/269    3723/526    33  166   54.64)
ramon: poll                 wall=15.000s usage=15.273s mem=57220KiB load=1.00 rootload=1.00
(smt.stats   26   3282  55154 102352  4547/4253/269    3916/529    33  166   54.76)
(sat.ddfw       1      1   10.4637   1370001      6715         16            1      139)
(smt.stats   27   3459  57916 106164  4688/4392/269    4125/533    33  166   54.86)
ramon: poll                 wall=16.000s usage=16.273s mem=57220KiB load=1.00 rootload=1.00
(smt.stats   28   3560  59852 114590  4896/4684/269    4285/536    33  166   54.86)
(smt.stats   29   3671  62024 122878  4959/4725/269    4449/537    33  166   55.08)
ramon: poll                 wall=17.000s usage=17.273s mem=57476KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.88659   1540001      7549         17            1      156)
(smt.stats   30   3793  63672 126589  5114/4818/269    4600/548    33  166   55.08)
ramon: poll                 wall=18.000s usage=18.272s mem=57476KiB load=1.00 rootload=0.99
(smt.stats   31   3927  64781 131047  5428/5026/270    4753/739    34  170   55.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  66542 138500  5638/5306/270    4907/741    34  170   55.27)
ramon: poll                 wall=19.000s usage=19.273s mem=57476KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    9.4157   1720001      8431         18            1      174)
(smt.stats   33   4235  68981 146124  5860/5473/270    5076/746    34  170   55.27)
ramon: poll                 wall=20.000s usage=20.401s mem=57820KiB load=1.13 rootload=1.13
ramon: end                  Fri Nov  1 21:30:28 2024
ramon: root.execname        z3
ramon: root.utime           20.450s
ramon: root.stime           0.010s
ramon: group.total          20.472s
ramon: group.utime          20.456s
ramon: group.stime          0.016s
ramon: group.mempeak        57980KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.02
