ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:25:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         13169 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1174
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1228478.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1359179
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
tabu (if (and (bvsle bv[4294967295:32] #15296) (not #19834)) (bvadd bv[1:32] (if #15292 bv[0:32] v573296868)) (if (and #9006 #9089) bv[0:32] v573296868))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      45     22   142.857     10000         0          0            6      819)
(sat.ddfw      18     41   77.8682     20045         0          1          144      980)
(sat.ddfw      18    174   106.532     40073         0          2           97     1470)
(sat.ddfw      14     45   96.5548     70005         0          3           45     1603)
(sat.ddfw       8     40   83.5616    110031         0          4           63     2241)
(sat.ddfw       8    485   75.2015    160040         0          5           82     3042)
ramon: poll                 wall=1.000s usage=0.877s mem=22856KiB load=0.88 rootload=0.87
(sat.ddfw       6    624   63.0494    220000         1          6            4     4006)
(sat.ddfw       6   1025   56.4416    290044         1          7           62     5348)
(sat.ddfw       3    491   42.9704    370012         2          8           18     5906)
ramon: poll                 wall=2.000s usage=1.871s mem=22856KiB load=0.99 rootload=0.99
(sat.ddfw       3   1025    36.884    460009         3          9           10     6819)
ramon: poll                 wall=3.003s usage=2.859s mem=22856KiB load=0.99 rootload=0.99
(sat.ddfw       3   1025   25.9696    560018         3         10            9     6850)
ramon: poll                 wall=4.007s usage=3.808s mem=22856KiB load=0.95 rootload=0.95
ramon: poll                 wall=5.000s usage=4.800s mem=22856KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   20.4814    670003         4         11            8     6864)
ramon: poll                 wall=6.003s usage=5.801s mem=22856KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.794s mem=22856KiB load=0.99 rootload=0.99
(sat.ddfw       3   1025   17.0339    790007         6         12            8     6880)
ramon: poll                 wall=8.003s usage=7.797s mem=22856KiB load=1.00 rootload=1.01
ramon: poll                 wall=9.000s usage=8.793s mem=22856KiB load=1.00 rootload=0.99
(sat.ddfw       3   1025   14.6528    920007         7         13            6     6894)
ramon: poll                 wall=10.003s usage=9.797s mem=22856KiB load=1.00 rootload=1.01
(sat.ddfw       3   1025   12.8904   1060010         7         14            8     6908)
ramon: poll                 wall=11.000s usage=10.793s mem=22856KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.793s mem=22856KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.792s mem=22856KiB load=1.00 rootload=1.00
(sat.ddfw       2    252    11.433   1210000        13         15            4     6925)
ramon: poll                 wall=14.000s usage=13.792s mem=22856KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.792s mem=22856KiB load=1.00 rootload=1.00
(sat.ddfw       2    411   10.3923   1370000        67         16           31     7031)
ramon: poll                 wall=16.000s usage=15.792s mem=22856KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.791s mem=22856KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.791s mem=22856KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   9.22325   1540003       100         17            4     7205)
ramon: poll                 wall=19.000s usage=18.791s mem=22856KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.790s mem=22856KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:25:50 2024
ramon: root.execname        z3
ramon: root.utime           19.860s
ramon: root.stime           0.000s
ramon: group.total          19.865s
ramon: group.utime          19.861s
ramon: group.stime          0.004s
ramon: group.mempeak        23116KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              0.99
