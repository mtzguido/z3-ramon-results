ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:00:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40609 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/s3tlylUXHRWd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3095960
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   2226    303  1199/1058/114     103/19     6   19   19.16)
(smt.stats    1    202   5008   3044  1391/1256/115     201/28     7   21   19.26)
(smt.stats    2    313   8820   3979  1570/1326/117     323/37     8   22   19.45)
ramon: poll                 wall=1.000s usage=0.992s mem=20540KiB load=0.99 rootload=0.98
(smt.stats    3    414  11828   4820  1643/1501/120     437/48    10   31   19.45)
(smt.stats    4    525  12998   8213  2293/1724/120     547/85    10   31   19.66)
(smt.stats    5    647  15748  11831  2434/2138/120     675/87    10   31   19.85)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  18746  15652  2555/2350/123     819/125    13   35   19.95)
(smt.stats    7    859  20356  18006  2875/2568/123     954/132    13   35   19.95)
ramon: poll                 wall=2.000s usage=1.951s mem=21188KiB load=0.96 rootload=0.96
(smt.stats    8    981  21852  19618  2984/2684/123    1084/134    13   35   20.14)
(smt.stats    9   1115  23534  22462  3049/2814/128    1266/160    14   36   20.14)
(smt.stats   10   1216  25111  27599  3076/2824/128    1410/204    15   41   20.14)
(smt.stats   11   1327  27576  34272  3092/2849/128    1524/204    15   41   20.14)
(smt.stats   12   1449  29168  37512  3098/2861/128    1672/204    15   41   20.23)
(smt.stats   13   1583  34017  41054  3109/2874/128    1824/204    15   41   20.33)
(smt.stats   14   1730  38729  50470  3114/2879/128    1968/204    15   41   20.33)
(smt.stats   15   1831  41423  58777  3121/2886/128    2066/204    15   41   20.33)
(smt.stats   16   1942  44621  63714  3128/2889/128    2189/204    15   41   20.33)
(smt.stats   17   2064  47400  71306  3186/2898/128    2330/207    15   41   20.42)
(smt.stats   18   2198  50275  77966  3270/2967/128    2494/207    15   41   20.65)
ramon: poll                 wall=3.000s usage=2.951s mem=21760KiB load=1.00 rootload=1.00
(smt.stats   19   2345  52371  79032  3394/3056/128    2661/208    15   41   20.65)
(smt.stats   20   2506  54704  81479  3525/3211/129    2875/300    16   43   20.65)
(smt.stats   21   2607  56205  83331  3632/3334/129    2976/300    16   43   20.65)
(smt.stats   22   2718  58181  86996  3726/3405/129    3120/301    16   43   20.65)
(smt.stats   23   2840  62170  94016  3732/3497/129    3259/301    16   43   20.65)
ramon: poll                 wall=4.004s usage=3.954s mem=21896KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   24   2974  64826 100491  3746/3511/131    3440/339    17   52   20.75)
(smt.stats   25   3121  66433 104147  3846/3520/131    3626/341    17   52   20.85)
(smt.stats   26   3282  69817 112690  3885/3644/131    3797/341    17   52   20.94)
(smt.stats   27   3459  73744 123877  3886/3649/132    4011/389    18   53   20.94)
(smt.stats   28   3560  75952 132039  3891/3654/132    4124/389    18   53   20.94)
(smt.stats   29   3671  78063 141952  3910/3660/135    4235/433    19   56   20.94)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 90441 := 140737488355317&140737488355327
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 90441 := 140737488355317&140737488355327
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355318
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355327
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355326
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355322
(smt.stats   30   3794  80813 149862  3964/3722/189    4354/443    20   64   21.31)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 127 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 126 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 124 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 112 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 189 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 189 := 140737488355317&140737488355321
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 176 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 432 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 56 := 140737488355317&140737488355248
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355248
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355131
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 56 := 140737488355317&140737488355131
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 56 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488354352
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488266297
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488266298
(smt.stats   31   3928  82165 154538  4118/3798/246    4554/459    20   64   21.61)
(smt.stats   32   4075  85209 160678  4285/4019/271    4833/506    21   93   21.71)
(smt.stats   33   4236  90371 170694  4306/4062/272    5063/506    21   93   21.80)
(smt.stats   34   4413  96618 185212  4323/4079/272    5380/577    22   94   21.80)
ramon: poll                 wall=5.000s usage=4.950s mem=23084KiB load=1.00 rootload=0.98
(smt.stats   35   4607 101138 202847  4329/4085/279    5597/636    23  101   21.90)
(smt.stats   36   4708 104935 212863  4338/4094/279    5659/651    24  142   21.90)
(smt.stats   37   4819 109563 225655  4343/4099/280    5808/666    25  146   21.90)
(smt.stats   38   4941 112348 232224  4377/4105/281    5986/666    25  146   21.90)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 115678 239552  4390/4134/281    6158/666    25  146   22.00)
(smt.stats   40   5222 119254 251424  4403/4159/282    6348/713    26  155   22.00)
ramon: poll                 wall=6.000s usage=5.950s mem=23300KiB load=1.00 rootload=1.00
(smt.stats   41   5383 124245 266119  4405/4161/282    6529/713    26  155   22.09)
(smt.stats   42   5560 129460 283023  4405/4161/282    6717/727    27  167   22.19)
(smt.stats   43   5754 132420 292186  4622/4162/282    6999/731    27  167   22.38)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 11 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 7 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 15 := 127&140737488266255
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2310768821306041359 := 832 << 6
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 15 := 127&140737488266255
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2310768821306041359 := 832 << 6
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 15 := 127&140737488266255
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2310768821306041359 := 832 << 6
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 15 := 127&140737488266253
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   44   5967 134014 297727  5068/4424/282    7430/735    27  167   22.57)
(smt.stats   45   6068 136289 303822  5069/4824/303    7601/795    28  174   22.57)
(smt.stats   46   6179 141047 320142  5107/4824/306    7799/797    28  174   22.86)
(smt.stats   47   6301 144434 335079  5181/4876/306    8082/880    29  195   22.86)
ramon: poll                 wall=7.000s usage=6.950s mem=24376KiB load=1.00 rootload=1.00
(smt.stats   48   6435 148789 349367  5238/4947/306    8471/885    29  195   22.96)
(smt.stats   49   6582 150960 355781  5246/4995/306    8652/888    29  195   23.05)
(smt.stats   50   6743 155074 374024  5259/5012/306    8942/888    29  195   23.05)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1 := 17592186044414&2
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 17592186044414&2
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 17592186044414&2
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2 := 17592186044414&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2 := 6 << 43
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 4 := 17592186044414&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 4 := 6 << 43
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 4 := 17592186044414&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 4 := 6 << 43
(smt.stats   51   6920 158795 385155  5357/5051/306    9177/896    29  195   23.15)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 35184372088829&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2 := 4 << 44
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 35184372088829&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 0 := 4 << 44
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 35184372088829&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 0 := 4 << 44
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 70368744177658&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 1 := 2 << 45
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 70368744177658&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 0 := 2 << 45
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 70368744177658&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 0 := 2 << 45
(smt.stats   52   7114 161331 393654  5430/5115/318    9453/1212    30  196   23.24)
(smt.stats   53   7327 169883 424838  5464/5198/332    9948/1423    31  248   23.76)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   54   7561 176495 451376  5482/5214/336   10313/1424    31  248   23.86)
(smt.stats   55   7662 180758 467817  5505/5222/336   10459/1453    32  312   23.86)
(smt.stats   56   7773 185160 483323  5513/5247/336   10633/1453    32  312   23.86)
ramon: poll                 wall=8.000s usage=7.949s mem=25392KiB load=1.00 rootload=1.00
(smt.stats   57   7895 189090 499555  5514/5248/336   11060/1453    32  312   23.95)
(smt.stats   58   8029 191906 510371  5515/5249/336   11627/1453    32  312   24.05)
(smt.stats   59   8176 196310 523273  5516/5250/336   11831/1453    32  312   24.05)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2149 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2156 := 4095&2156
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2312176196189685868 := 70 << 11
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2668 := 4095&2668
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 140737488357996 := 70 << 11
(smt.stats   60   8337 200754 533530  5605/5263/337   12032/1630    33  313   24.05)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2156 := 4095&2156
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 140737488357484 := 70 << 11
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2156 := 4095&2156
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 140737488357484 := 70 << 11
(smt.stats   61   8514 203879 547442  5741/5470/353   12429/1640    33  313   24.14)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 93 := 46 << 1
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 93 := 46 << 1
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 93 := 46 << 1
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 93 := 46 << 1
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 1 := 1&92
(smt.stats   62   8708 207596 559935  5787/5507/369   12679/1644    33  313   24.33)
ramon: poll                 wall=9.000s usage=8.949s mem=25740KiB load=1.00 rootload=1.00
(smt.stats   63   8921 211390 570623  5828/5533/369   12924/1742    34  322   24.33)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 8 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 8 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 53248 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 53248 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 61440 := 65535&126976
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 126976 := 62 << 15
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 32 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 128 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 128 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 512 := 65535&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 512 := 62 << 15
(smt.stats   64   9155 216882 596316  5937/5630/422   13390/1752    34  322   24.63)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 512 := 65535&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 512 := 62 << 15
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 32768 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 32768 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 8192 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 4096 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 3584 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 3584 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 3328 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 3072 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16384 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1024 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1024 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 140736951578826 := 31 << 16
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 140736951578826 := 31 << 16
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 766 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 764 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 4 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 8 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 16 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 32 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 64 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 128 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 256 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 512 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 2 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 2 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 8 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 4 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 1 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 64 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 32 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 64 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 128 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 544 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 576 := 65535&2031616
(smt.stats   65   9412 221077 616815  6258/5833/530   13944/1872    35  350   25.15)
(smt.stats   66   9513 224229 630594  6428/6111/546   14328/1872    35  350   25.34)
(smt.stats   67   9624 231125 663899  6489/6169/548   14520/2089    36  377   25.44)
ramon: poll                 wall=10.000s usage=9.949s mem=26924KiB load=1.00 rootload=0.99
(smt.stats   68   9746 236925 676706  6590/6193/548   15053/2101    37  389   25.63)
ramon: poll                 wall=11.000s usage=10.949s mem=27308KiB load=1.00 rootload=1.00
(smt.stats   69   9880 245772 702518  6743/6370/548   15425/2106    37  389   25.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 251785 726466  6811/6480/549   16191/2460    38  394   25.92)
ramon: poll                 wall=12.000s usage=11.949s mem=27500KiB load=1.00 rootload=1.00
(smt.stats   71  10188 257532 742016  6967/6519/549   16630/2461    38  394   26.11)
ramon: poll                 wall=13.000s usage=12.948s mem=27688KiB load=1.00 rootload=1.00
(smt.stats   72  10365 263115 756754  7149/6776/550   17162/2466    38  394   26.30)
ramon: poll                 wall=14.000s usage=13.948s mem=27804KiB load=1.00 rootload=1.00
(smt.stats   73  10559 269670 792338  7275/6896/553   18112/2627    39  404   26.39)
ramon: poll                 wall=15.000s usage=14.947s mem=28184KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   74  10772 275891 824925  7556/7015/553   18868/2631    39  404   26.68)
ramon: poll                 wall=16.000s usage=15.947s mem=28400KiB load=1.00 rootload=1.00
(smt.stats   75  11006 282256 861886  7580/7265/554   19498/2833    40  419   26.87)
(smt.stats   76  11263 290349 909142  7783/7328/555   20410/2835    40  419   27.16)
ramon: poll                 wall=17.000s usage=16.947s mem=28996KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.004s usage=17.950s mem=29412KiB load=1.00 rootload=1.00
(smt.stats   77  11545 297403 933882  8109/7747/556   21875/2977    41  425   27.80)
(smt.stats   78  11646 304117 962545  8134/7786/558   22233/2977    41  425   27.90)
ramon: poll                 wall=19.000s usage=18.946s mem=29784KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.946s mem=30092KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:00:24 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.020s
ramon: group.total          19.957s
ramon: group.utime          19.933s
ramon: group.stime          0.024s
ramon: group.mempeak        30348KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
