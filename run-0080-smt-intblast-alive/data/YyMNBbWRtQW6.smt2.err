ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:36:11 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25333 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YyMNBbWRtQW6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             77135
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2735    262  1104/965/100      98/12     7   18   19.16)
(smt.stats    1    202   3089    614  2199/1927/100     219/14     7   18   19.45)
(smt.stats    2    313   3496   1524  2361/2081/100     354/15     7   18   19.45)
(smt.stats    3    414   4102   4186  2395/2176/103     494/47     8   22   19.45)
(smt.stats    4    526   5947   5497  2420/2224/111     589/90    12   36   19.45)
(smt.stats    5    648   8615   7091  2495/2237/111     738/94    12   36   19.55)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    749  13517   8647  2522/2304/111     836/95    12   36   19.65)
(smt.stats    7    860  15792  11082  2543/2319/111     954/95    12   36   19.65)
(smt.stats    8    982  16929  12055  2576/2345/111    1091/98    12   36   19.75)
(smt.stats    9   1116  18317  15731  2642/2434/119    1220/143    13   39   19.75)
(smt.stats   10   1217  20781  17203  2666/2447/119    1315/142    14   46   19.85)
(smt.stats   11   1328  22994  19391  2668/2460/119    1426/142    14   46   19.85)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  25317  23282  2685/2475/120    1554/151    15   46   20.05)
ramon: poll                 wall=1.000s usage=0.944s mem=21188KiB load=0.94 rootload=0.93
(smt.stats   13   1584  26652  26020  2697/2481/120    1707/151    15   46   20.05)
(smt.stats   14   1731  28300  29377  2733/2489/120    1869/151    15   46   20.05)
(smt.stats   15   1832  29711  33617  2756/2534/120    1986/151    15   46   20.05)
(smt.stats   16   1943  30586  38105  2759/2549/121    2098/204    16   47   20.05)
(smt.stats   17   2065  31912  40237  2772/2553/123    2230/204    16   47   20.05)
(smt.stats   18   2199  32885  42953  2783/2571/123    2374/204    16   47   20.16)
(smt.stats   19   2346  34425  46365  2788/2576/123    2509/228    17   64   20.38)
(smt.stats   20   2507  35583  52489  2796/2580/131    2672/238    18   65   20.38)
(smt.stats   21   2608  37688  56623  2799/2587/132    2778/238    18   65   20.38)
(smt.stats   22   2719  40199  59755  2799/2588/132    2872/253    19   82   20.38)
(smt.stats   23   2841  43271  63426  2799/2588/132    2994/253    19   82   20.38)
(smt.stats   24   2975  46121  68106  2800/2589/132    3127/253    19   82   20.38)
(smt.stats   25   3122  46916  71146  2800/2589/132    3277/253    19   82   20.65)
(smt.stats   26   3283  47514  75223  2800/2589/132    3445/253    19   82   20.65)
(smt.stats   27   3460  48386  81494  2800/2589/132    3625/253    19   82   20.65)
(smt.stats   28   3561  48991  85280  2801/2590/132    3729/253    19   82   20.74)
(smt.stats   29   3672  49540  87475  2802/2591/132    3848/253    19   82   20.74)
(smt.stats   30   3794  50562  90732  2802/2591/132    3970/253    19   82   20.74)
(smt.stats   31   3928  51610  93515  2875/2591/132    4107/256    19   82   20.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4075  52960  96824  2944/2686/132    4266/257    19   82   20.84)
(smt.stats   33   4236  54692 102602  2965/2744/132    4428/257    19   82   20.84)
ramon: poll                 wall=2.000s usage=1.943s mem=22132KiB load=1.00 rootload=1.00
(smt.stats   34   4413  56861 108582  3006/2788/133    4600/281    20   82   20.94)
(smt.stats   35   4607  58053 115109  3013/2798/133    4795/281    20   82   20.94)
(smt.stats   36   4708  59271 118554  3021/2808/133    4905/281    20   82   20.94)
(smt.stats   37   4819  60378 124154  3040/2817/133    5015/281    20   82   20.94)
(smt.stats   38   4941  61470 128722  3069/2831/133    5135/282    20   82   21.39)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075  62983 133578  3096/2877/133    5288/283    20   82   21.39)
(smt.stats   40   5222  64271 137432  3129/2902/133    5429/283    20   82   21.48)
(smt.stats   41   5383  65863 143061  3140/2929/133    5585/283    20   82   21.48)
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1 := 1&214
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 1&214
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #103))) 143 := 107 << 1
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1 := 1&214
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 1&214
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #103))) 215 := 107 << 1
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1 := 1&214
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1 := 1&214
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1 := 1&70
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1 := 1&70
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 1&70
band: (band[36] (if (= #107 35) 1 (if #557 3 #654)) (shl[36] (bv2int %0) (+ 36 #657))) 1 := 1&70
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 7&50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #760 #764) 64)) 68719476786 := 642 << 2
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 6 := 7&644
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&640
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #760 #764) 64)) 68719477376 := 642 << 2
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&640
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #760 #764) 64)) 68719477376 := 642 << 2
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&640
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #760 #764) 64)) 68719477376 := 642 << 2
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 4 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #103))) 2569 := 321 << 3
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 4 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #103))) 2569 := 321 << 3
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #103))) 2569 := 321 << 3
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #103))) 2569 := 321 << 3
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 4 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 4 := 7&2568
(smt.stats   42   5560  66985 146018  3242/2986/169    5755/329    21   90   21.58)
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
band: (band[36] (if (= #107 35) 1 (if #557 3 #654)) (shl[36] (bv2int %0) (+ 36 #657))) 6 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
band: (band[36] (if (= #107 35) 1 (if #557 3 #654)) (shl[36] (bv2int %0) (+ 36 #657))) 4 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
band: (band[36] (if (= #107 35) 1 (if #557 3 #654)) (shl[36] (bv2int %0) (+ 36 #657))) 4 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
band: (band[36] (if (= #107 35) 1 (if #557 3 #654)) (shl[36] (bv2int %0) (+ 36 #657))) 4 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
band: (band[36] (if (= #107 35) 1 (if #557 3 #654)) (shl[36] (bv2int %0) (+ 36 #657))) 2 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 7&2568
band: (band[36] (if (= #107 35) 1 (if #557 3 #654)) (shl[36] (bv2int %0) (+ 36 #657))) 1 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 7&2568
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 7&2568
(smt.stats   43   5754  69972 150662  3288/3054/206    5973/333    21   90   21.78)
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 68719476735&569
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 68719476735&562
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 68719476735&562
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 68719476735&570
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 68719476735&570
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 68719476735&570
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 68719476735&570
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2 := 68719476735&570
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&66
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&64
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&64
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&128
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&128
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&256
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&512
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&160
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&160
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&256
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&256
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&160
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&160
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&160
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&128
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&128
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&64
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 0 := 68719476735&64
(smt.stats   44   5967  72641 159265  3477/3229/309    6254/351    22  114   22.30)
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1024 := 68719476735&3076
(smt.stats   45   6068  73769 161142  3603/3270/320    6420/357    22  114   22.68)
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 516 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 516 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1028 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1028 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1028 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1028 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1028 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 1028 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 4100 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2180 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2180 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 2052 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&5124
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&7172
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&11268
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&19460
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&19460
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&19460
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&19460
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3076 := 68719476735&19460
(smt.stats   46   6179  75069 169296  3797/3471/372    6772/404    23  125   22.96)
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3108 := 68719476735&68612
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3108 := 68719476735&68612
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3108 := 68719476735&68644
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3108 := 68719476735&68644
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3108 := 68719476735&68644
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 3108 := 68719476735&68644
(smt.stats   47   6301  77377 177074  3930/3657/409    7189/511    24  147   23.24)
(smt.stats   48   6435  80886 188177  4005/3733/412    7748/512    24  147   23.24)
ramon: poll                 wall=3.000s usage=2.943s mem=24868KiB load=1.00 rootload=1.00
(smt.stats   49   6582  84898 201664  4095/3830/417    8503/1159    25  177   23.53)
(smt.stats   50   6743  90626 217767  4171/3866/417    8804/1164    25  177   23.72)
ramon: poll                 wall=4.000s usage=3.943s mem=25652KiB load=1.00 rootload=1.00
(smt.stats   51   6920  94602 229568  4436/4015/418    9234/1243    26  180   23.81)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7114 100579 243497  4546/4287/421    9730/1340    27  193   23.91)
(smt.stats   53   7327 104677 252766  4743/4311/421   10104/1345    27  193   24.10)
ramon: poll                 wall=5.000s usage=4.943s mem=25760KiB load=1.00 rootload=1.00
(smt.stats   54   7561 109656 270253  5054/4749/425   10696/1476    28  224   24.39)
(smt.stats   55   7662 111631 289683  5264/4933/427   10925/1476    28  224   24.49)
(smt.stats   56   7773 114254 306320  5323/5013/429   11350/1604    29  241   24.58)
ramon: poll                 wall=6.000s usage=5.942s mem=26312KiB load=1.00 rootload=1.00
(smt.stats   57   7895 118615 323082  5470/5061/429   11799/1610    29  241   24.77)
(smt.stats   58   8029 120796 334443  5543/5235/429   12367/1728    30  241   24.96)
(smt.stats   59   8176 125391 358803  5659/5300/430   12707/1731    30  241   25.06)
ramon: poll                 wall=7.000s usage=6.942s mem=26568KiB load=1.00 rootload=0.99
(smt.stats   60   8337 128111 377901  5922/5463/430   13078/1787    31  243   25.06)
(smt.stats   61   8514 131455 398523  5971/5692/436   13942/1918    32  266   25.34)
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 8 := 8191&2056
band: (band[36] (if (= #296 63) 1 (if #536 3 #753)) (shl[64] (* 2 #101) (mod #768 64))) 8 := 8191&24576
(smt.stats   62   8708 136969 415028  6103/5700/436   14488/1923    32  266   25.34)
(smt.stats   63   8921 142437 443604  6255/5976/445   15181/2277    33  295   25.44)
(smt.stats   64   9155 147571 479195  6270/5988/446   15760/2278    33  295   25.54)
ramon: poll                 wall=8.000s usage=7.941s mem=27080KiB load=1.00 rootload=1.00
(smt.stats   65   9412 154485 505696  6430/6004/446   16394/2469    34  316   25.63)
(smt.stats   66   9513 156264 509269  6454/6175/446   17015/2469    34  316   25.82)
(smt.stats   67   9624 161007 527404  6506/6183/446   17273/2471    34  316   25.92)
(smt.stats   68   9746 166199 544407  6552/6233/447   17789/2589    35  328   26.02)
(smt.stats   69   9880 169851 557197  6646/6284/447   18534/2590    35  328   26.22)
ramon: poll                 wall=9.000s usage=8.941s mem=27848KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 214)
(smt.stats   70  10027 173458 568619  6837/6545/449   19362/2592    35  328   26.41)
(smt.stats   71  10188 181698 604454  6943/6607/451   20000/2754    36  336   26.51)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10365 187834 639204  6966/6671/451   20654/2754    36  336   26.61)
ramon: poll                 wall=10.000s usage=9.940s mem=28360KiB load=1.00 rootload=1.00
(smt.stats   73  10559 192755 673985  6985/6704/453   21451/3224    37  352   26.70)
(smt.stats   74  10772 200507 723999  7022/6741/455   22280/3529    38  384   26.80)
(smt.stats   75  11006 206844 770376  7040/6755/462   23389/3597    39  420   26.89)
(smt.stats   76  11263 217425 835362  7071/6769/462   23880/3601    39  420   26.99)
ramon: poll                 wall=11.000s usage=10.940s mem=28616KiB load=1.00 rootload=1.00
(smt.stats   77  11545 227966 880675  7106/6823/463   24538/3729    40  496   26.99)
(smt.stats   78  11646 229864 903605  7121/6840/463   24654/3729    40  496   26.99)
(smt.stats   79  11757 232297 932641  7128/6847/463   24783/3779    41  511   27.08)
(smt.stats   80  11879 237385 961064  7135/6854/463   25087/3779    41  511   27.08)
(smt.stats   81  12013 241613 986760  7150/6869/464   25625/3954    42  514   27.08)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   82  12160 244999 1028065  7153/6872/465   26156/3954    42  514   27.89)
ramon: poll                 wall=12.000s usage=11.939s mem=29892KiB load=1.00 rootload=1.00
(smt.stats   83  12321 252156 1072254  7163/6882/465   26635/3954    42  514   28.18)
(smt.stats   84  12498 260077 1116993  7213/6932/466   27257/4092    43  535   28.28)
(smt.stats   85  12692 267019 1183316  7224/6943/466   27610/4092    43  535   28.37)
(smt.stats   86  12905 271503 1228030  7235/6954/466   28018/4291    44  551   28.47)
ramon: poll                 wall=13.000s usage=12.939s mem=30148KiB load=1.00 rootload=0.99
(smt.stats   87  13139 274649 1252609  7402/6957/466   28660/4298    44  551   28.47)
(smt.stats   88  13396 282198 1309232  7815/7163/467   29625/4432    45  554   28.66)
ramon: poll                 wall=14.000s usage=13.938s mem=30660KiB load=1.00 rootload=1.00
(smt.stats   89  13678 287536 1349938  8065/7545/467   30483/4444    45  554   28.85)
(smt.stats   90  13988 299639 1410136  8281/7854/467   31807/4453    45  554   29.13)
ramon: poll                 wall=15.000s usage=14.938s mem=30952KiB load=1.00 rootload=1.00
(smt.stats   91  14089 304432 1423895  8385/8072/468   32174/4769    46  556   29.23)
(smt.stats   92  14200 311707 1449725  8412/8111/468   32502/4770    46  556   29.23)
(smt.stats   93  14322 318160 1491728  8418/8137/468   32791/4770    46  556   29.23)
(smt.stats   94  14456 320461 1518032  8450/8140/468   33478/4770    46  556   29.23)
ramon: poll                 wall=16.000s usage=15.937s mem=31208KiB load=1.00 rootload=1.00
(smt.stats   95  14603 322918 1532958  8658/8172/468   34006/4772    46  556   29.38)
(smt.stats   96  14764 327704 1578799  8948/8387/468   34755/4772    46  556   29.67)
(smt.stats   97  14941 330189 1595141  9184/8697/468   35419/4774    46  556   29.86)
ramon: poll                 wall=17.000s usage=16.937s mem=31976KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15135 336629 1618578  9314/8942/468   36407/4780    46  556   30.05)
ramon: poll                 wall=18.000s usage=17.936s mem=32048KiB load=1.00 rootload=1.00
(smt.stats   99  15349 343420 1675394  9568/9287/469   37321/5306    47  556   30.15)
ramon: poll                 wall=19.000s usage=18.936s mem=32048KiB load=1.00 rootload=1.00
(smt.stats  100  15583 350036 1724608  9714/9294/469   38537/5309    47  556   30.34)
(smt.stats  101  15840 358823 1800359 10052/9486/469   39831/5318    47  556   30.43)
ramon: poll                 wall=20.000s usage=19.935s mem=32304KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:36:31 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.993s
ramon: group.utime          19.969s
ramon: group.stime          0.024s
ramon: group.mempeak        32560KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              1.00
