ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:17:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27872 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1359
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tNdA0WgLbZ4Q.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             557730
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   234/234     0/0  63       0    18.52   0.00)
(sat.stats    106    648    0   234/234   106/28  63       0    18.74   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 443 :time 0.00)
(sat.stats    106    648    0   234/234   106/28  63       0    18.74   0.00)
(sat.stats    106    648    0   234/234   106/28  63       0    18.74   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 405418.84 :time 0.00)
(sat.stats    106    648    0   236/236    67/27  63       0    18.84   0.00)
(sat.stats    118    874    1   236/236    79/37  63       0    18.84   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    121    936    2   236/236    82/37  63       0    18.84   0.01)
(sat.stats    124   1007    3   236/236    85/39  63       0    18.84   0.01)
(sat.stats    127   1091    4   236/236    88/42  63       0    18.84   0.01)
(sat.stats    134   1280    5   236/236    95/47  63       0    18.84   0.01)
(sat.stats    137   1350    6   236/236    98/47  63       0    18.84   0.01)
(sat.stats    140   1424    7   236/236   101/47  63       0    18.84   0.01)
(sat.stats    143   1483    8   236/236   104/47  63       0    18.84   0.01)
(sat.stats    146   1541    9   236/236   107/48  63       0    18.84   0.01)
(sat.stats    149   1581   10   236/236   110/48  63       0    18.84   0.01)
(sat.stats    152   1619   11   236/236   113/48  63       0    18.84   0.01)
(sat.stats    155   1678   12   236/236   116/50  63       0    18.84   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   5674   19   335/335   363/193  63       0    19.71   0.09)
(sat.stats    494   6861   20   335/335   457/234  63       0    19.71   0.10)
(sat.stats    499   6864   21   335/335   462/234  63       0    19.71   0.10)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4801 :time 0.00)
lshr: (lshr[51] (bv2int %1) (+ 51 (* 2251799813685247 #58))) 1 := 0 >>l 31
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 819712 := 819712&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 511 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 510 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 180 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 256 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 32 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 8 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 16 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 64 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 128 := 511&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 1024 := 1025&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 2048 := 2049&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 4096 := 4097&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 8192 := 8280&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 16384 := 16472&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 884736 := 884824&778476010340352
(sat.stats   1078  21362   47  3712/3710  1089/358  78       0    21.26   0.64)
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 327680 := 327768&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 262144 := 262232&778476010340352
(sat.stats   1081  21473   48  3748/3746  1093/359  78       0    21.26   0.64)
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 655360 := 655448&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 524288 := 524376&778476010340352
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 524376&778476010340352
lshr: (lshr[64] (* 4096 (bv2int %1)) (mod (+ 63 #585 #589) 64)) 4612460074723885056 := 4612460074723885056 >>l 43
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 1 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 62478 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 63844 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 128880 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 8 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 959456 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 889088 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 64 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 128 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 819200 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 1536 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 9216 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 16384 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 8192 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 6144 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 4096 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 65536 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 786432 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 131072 := 778476010340352&1048574
band: (band[51] (lshr[51] (bv2int %1) (+ 51 #472)) (if (= #84 50) 806738795975846394698993238016 (if #476 403369397987923197349496619008 #574))) 0 := 1048574&778476010340352
band: (band[51] (if (= #300 63) 6608804216634133665374152605827072 (if #448 3304402108317066832687076302913536 #445)) (lshr[64] (* 4096 #63) (mod #592 64))) 524288 := 778476010340352&1048574
 (sat-cleaner :elim-literals 1 :elim-clauses 2 :cost 10527 :time 0.00)
ramon: poll                 wall=1.000s usage=0.931s mem=23840KiB load=0.93 rootload=0.92
(sat.stats   1836  37853  102  6524/6521  1891/554 327       0    22.60   1.05)
ramon: poll                 wall=2.000s usage=1.930s mem=32152KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.929s mem=33504KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.928s mem=34708KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.927s mem=36580KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.927s mem=37844KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   2502  61798  182 60940/60937  2655/690 327       0    36.63   6.15)
ramon: poll                 wall=7.000s usage=6.926s mem=39244KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.925s mem=61460KiB load=1.00 rootload=0.96
ramon: poll                 wall=9.000s usage=8.924s mem=68988KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.923s mem=74348KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.922s mem=78448KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.922s mem=98580KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.003s usage=12.924s mem=100MiB load=1.00 rootload=1.01
ramon: poll                 wall=14.000s usage=13.920s mem=104MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.919s mem=106MiB load=1.00 rootload=1.00
(sat.stats   3597  69231  505 196721/196718  7656/4599 327       0   107.30  15.64)
ramon: poll                 wall=16.000s usage=15.918s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.917s mem=111MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.916s mem=113MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.915s mem=115MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.914s mem=117MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:17:22 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.100s
ramon: group.total          19.992s
ramon: group.utime          19.889s
ramon: group.stime          0.104s
ramon: group.mempeak        117MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              1.00
