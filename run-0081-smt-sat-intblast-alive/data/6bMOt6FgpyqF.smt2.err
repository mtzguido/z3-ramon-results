ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:37:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30090 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1402
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6bMOt6FgpyqF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             260923
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   220/219     0/0  58       0    18.53   0.00)
(sat.stats    303   2427    0   224/223   303/157  58       0    19.33   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1165 :time 0.00)
(sat.stats    303   2427    0   224/223   303/157  61       0    19.33   0.02)
(sat.stats    303   2427    0   224/223   303/157  61       0    19.33   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 822819.33 :time 0.00)
(sat.stats    303   2427    0   223/222   303/159  61       0    19.33   0.02)
(sat.stats    306   2469    1   223/222   306/162  61       0    19.33   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    309   2541    2   223/222   309/165  61       0    19.33   0.02)
(sat.stats    312   2619    3   223/222   312/168  61       0    19.33   0.02)
(sat.stats    322   2852    4   223/222   322/177  61       0    19.33   0.02)
(sat.stats    326   2890    5   223/222   326/178  61       0    19.33   0.02)
(sat.stats    329   2948    6   223/222   329/181  61       0    19.33   0.02)
(sat.stats    332   2991    7   223/222   332/184  61       0    19.33   0.02)
(sat.stats    336   3083    8   223/222   336/187  61       0    19.33   0.02)
(sat.stats    373   4093    9   223/222   373/217  61       0    19.43   0.03)
(sat.stats    376   4153   10   223/222   376/218  61       0    19.43   0.03)
(sat.stats    387   4498   11   223/222   387/221  61       0    19.43   0.03)
(sat.stats    390   4623   12   223/222   390/223  61       0    19.43   0.03)
(sat.stats    393   4716   13   223/222   393/224  61       0    19.43   0.03)
(sat.stats    396   4788   14   223/222   396/225  61       0    19.43   0.03)
(sat.stats    489   5454   16   223/222   489/262  61       0    19.43   0.04)
shl: (shl[50] (bv2int %0) (mod (bv2int %0) 50)) 41 := 41 << 41
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 6916 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 257387 := 2199023255551&90159953477632
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 2892 :time 0.00)
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 31976 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 14208 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 20736 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 16 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 32 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 64 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 29184 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 31744 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 57264128 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 31440896 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 92209152 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 32768 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 601489408 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 418119680 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 6013059072 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 12079595520 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 2097152 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 1048576 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 62914560 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 159383552 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 67108864 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 33554432 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 16777216 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 134217728 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 814970044416 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 536870912 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 566935683072 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 2147483648 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 12884901888 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 8589934592 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 721554505728 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 1580547964928 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 1786706395136 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 274877906944 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 1649267441664 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 1099511627776 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
shl: (shl[64] (bv2int %0) (mod (+ #47 #717) 64)) 2199023255551 := 41 << 41
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 20346 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 1 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 106532 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 8 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 73520 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 638176 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 1289216 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 896 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 64 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 256 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 512 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 42641408 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 63598592 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 172785664 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 8192 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 16384 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 1317928960 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 65536 := 90159953477632&2199023255551
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    710  15296   44  1874/1871   709/305  80       0    22.49   0.23)
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 262144 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 12496928768 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 524288 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 1048576 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 4194304 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 120066146304 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 529958699008 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 16777216 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 33554432 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 134217728 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 86973087744 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 268435456 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 536870912 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 1982127407104 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 206158430208 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 60129542144 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 4294967296 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 34359738368 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 17179869184 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 2061584302080 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 1374389534720 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 549755813888 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 0 := 2199023255551&90159953477632
band: (band[50] (shl[64] (bv2int %0) (mod #718 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #840))) 1099511627776 := 90159953477632&2199023255551
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 2 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 4096 := 2199023255551&90159953477632
band: (band[50] (if (= #568 49) 1 (if #570 3 #708)) (shl[50] (bv2int %0) (mod #47 50))) 8192 := 2199023255551&90159953477632
ramon: poll                 wall=1.000s usage=0.995s mem=34956KiB load=1.00 rootload=0.95
ramon: poll                 wall=2.000s usage=1.991s mem=42928KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.988s mem=56304KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.985s mem=61840KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.982s mem=63708KiB load=1.00 rootload=1.00
(sat.stats   1236  27441   70 115807/115804  4936/4056  80       0    62.94   5.22)
ramon: poll                 wall=6.000s usage=5.979s mem=68456KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.975s mem=68896KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.971s mem=70844KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.966s mem=92244KiB load=0.99 rootload=1.00
ramon: poll                 wall=10.000s usage=9.963s mem=92616KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.960s mem=93024KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.956s mem=94780KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.002s usage=12.956s mem=99260KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.950s mem=99328KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.948s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.944s mem=99MiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.942s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.940s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.937s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.935s mem=108MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:37:42 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.040s
ramon: group.total          19.949s
ramon: group.utime          19.901s
ramon: group.stime          0.048s
ramon: group.mempeak        108MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              1.00
