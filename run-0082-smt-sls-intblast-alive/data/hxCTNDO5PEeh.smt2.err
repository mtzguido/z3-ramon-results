ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:56:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27596 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/hxCTNDO5PEeh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             895376
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   95.2381     10000        49          0            1        2)
(sat.ddfw       1      1   49.5099     20001        98          1            1        3)
(smt.stats    0    101    454    453  1256/1127/112     112/29     5   23   51.86)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387904 := 4611686018427387903 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387904 := 4611686018427387903 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387904 := 4611686018427387903 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 2 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387904 := 4611686018427387903 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282163712 := 2 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 2 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 2 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 2 << 61
(sat.ddfw       1      1   49.7512     40001       196          2            1        5)
(smt.stats    1    202    976    932  1455/1176/118     212/33     7   26   52.24)
(smt.stats    2    313   2150   2830  1582/1424/130     340/42    12   35   52.24)
(smt.stats    3    414   3467   4616  1622/1469/132     437/52    13   41   52.35)
(sat.ddfw       1      1   42.9799     70001       343          3            1        8)
(smt.stats    4    525   4420   6016  1662/1493/141     545/55    14   47   52.35)
(smt.stats    5    647   6253   8845  1691/1533/141     667/67    15   53   52.35)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   8562  11646  1694/1537/143     767/72    16   55   52.45)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 4611686018427387897&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387897 := 4611686018427387897 << 1
ramon: poll                 wall=1.002s usage=0.925s mem=54728KiB load=0.92 rootload=0.92
(smt.stats    7    859  10934  13704  1768/1548/143     876/84    16   55   52.45)
(sat.ddfw       1      1   36.6636    110001       539          4            1       12)
(smt.stats    8    981  11197  13858  1786/1628/148     998/125    17   56   52.85)
(smt.stats    9   1115  12023  15142  2325/2141/149    1144/125    17   56   52.85)
(smt.stats   10   1216  14457  16787  2345/2182/149    1240/130    18   58   52.96)
(smt.stats   11   1327  15652  20232  2393/2229/151    1363/133    19   58   52.96)
(sat.ddfw       1      1   31.5451    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  17517  25471  2480/2322/160    1484/172    21   62   52.96)
(smt.stats   13   1585  19817  27250  2483/2324/160    1621/173    21   62   53.09)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 729&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164441 := 783 << 2
(smt.stats   14   1732  21633  31920  2585/2425/166    1750/186    23   99   53.09)
ramon: poll                 wall=2.002s usage=1.927s mem=55228KiB load=1.00 rootload=1.00
(smt.stats   15   1833  22815  33803  2672/2511/168    1829/194    24  100   53.18)
(smt.stats   16   1944  24127  37314  2754/2543/168    1913/205    24  100   53.18)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 519 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 519 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 519 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 655 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 671 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 469762048&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 755914244103 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 1006632960&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 481036337167 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 1006632960&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 481036337167 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 1006632960&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 481036337167 << 26
(sat.ddfw       1      1   27.5487    220001      1078          6            1       23)
(smt.stats   17   2066  24886  39119  2832/2599/168    2037/212    24  100   53.28)
(sat.ddfw       1      1   24.4927    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.920s mem=55392KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   21.9479    370001      1813          8            1       38)
(smt.stats   18   2200  25612  40895  3170/2822/178    2173/215    25  102   53.37)
ramon: poll                 wall=4.000s usage=3.922s mem=55816KiB load=1.00 rootload=1.00
(smt.stats   19   2347  27467  42961  3363/3147/178    2322/215    25  102   53.47)
(sat.ddfw       1      1   19.8413    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.921s mem=55828KiB load=1.00 rootload=1.00
(smt.stats   20   2508  28765  46009  3762/3601/188    2457/240    27  125   53.56)
(smt.stats   21   2609  31837  50281  3769/3608/189    2552/240    27  125   53.56)
(smt.stats   22   2720  33910  56166  3798/3613/189    2657/240    28  128   53.68)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 9006855858409482&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9006855858409482 := 9006855858409482 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 9006924577886218&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9006924577886218 := 9006924577886218 << 60
(smt.stats   23   2842  35136  58300  3975/3641/189    2779/243    28  128   53.77)
(sat.ddfw       1      1   18.1324    560001      2745         10            1       57)
(smt.stats   24   2976  36000  61057  4282/3920/194    2918/247    29  129   53.77)
ramon: poll                 wall=6.002s usage=5.927s mem=56160KiB load=1.00 rootload=1.00
(smt.stats   25   3123  39115  67659  4303/4134/196    3058/249    30  129   53.77)
(smt.stats   26   3284  41892  69185  4315/4143/196    3212/249    31  135   54.06)
(smt.stats   27   3461  43887  76973  4628/4397/196    3384/250    31  135   54.06)
(smt.stats   28   3562  46026  79484  4631/4468/196    3482/250    31  135   54.06)
(smt.stats   29   3673  48826  86654  4659/4470/196    3598/252    31  135   54.06)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195887817457664 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607195887817457664 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196162695364608 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607196162695364608 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196162695364608 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607196162695364608 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4611685743549480960 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4611685743549480960 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4611685743549480960 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4611685743549480960 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4611685743549480960 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4611685743549480960 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4611685743549480960 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 52
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607195612939550720 << 52
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 50
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607195612939550720 << 50
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 50
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607195612939550720 << 50
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607195612939550720 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 46
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607195612939550720 << 46
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607195612939550720 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 42
(smt.stats   30   3795  50020  90041  4781/4513/196    3722/255    31  135   54.22)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607196712451178496 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 38
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 38
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607196712451178496 << 38
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4611685743549480960 << 36
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4611685743549480960 << 36
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 34
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607196712451178496 << 34
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607196712451178496 << 32
(sat.ddfw       1      1   16.5862    670001      3284         11            1       68)
(smt.stats   31   3929  51123  95131  5022/4837/283    3845/264    33  155   54.60)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   32   4076  52485  98069  5158/4953/283    3972/266    33  155   54.60)
ramon: poll                 wall=7.000s usage=6.903s mem=56744KiB load=0.98 rootload=0.97
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491228174 << 2
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491227918 << 24
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491227678 << 24
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655491227902 << 24
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491227662 << 28
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491227662 << 28
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655491227662 << 28
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655491227662 << 28
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655483559934 << 30
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655483559934 << 30
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655487819774 << 30
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486776062 << 32
(smt.stats   33   4237  54866 105082  5354/4971/283    4124/335    34  158   54.88)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775822 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486776334 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775822 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775822 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775806 << 34
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775566 << 34
(sat.ddfw       1      1   15.7027    790001      3872         12            1       80)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 36
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775806 << 36
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775790 << 38
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
ramon: poll                 wall=8.002s usage=7.990s mem=57484KiB load=1.09 rootload=1.09
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775742 << 20
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775742 << 20
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775710 << 20
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775694 << 20
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 18
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775726 << 18
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 18
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 18
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 16
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 14
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 14
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 14
(smt.stats   34   4414  57763 113833  5787/5273/298    4295/397    35  161   55.08)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 13492382532378290&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13848550437814542002 := 11258655486775823 << 28
ramon: poll                 wall=9.000s usage=8.984s mem=57996KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   14.5707    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.986s mem=58292KiB load=1.00 rootload=1.00
(smt.stats   35   4608  61665 119689  5957/5637/352    4466/411    36  171   55.74)
(sat.ddfw       1      1   13.5949   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.983s mem=58092KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7432   1210001      5931         15            1      123)
(smt.stats   36   4709  63669 123805  6201/5861/352    4546/433    37  172   55.99)
ramon: poll                 wall=12.000s usage=11.986s mem=58320KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.989s mem=58376KiB load=1.00 rootload=1.00
(smt.stats   37   4820  66242 128673  6386/6178/358    4636/439    38  181   56.08)
(smt.stats   38   4942  70309 133237  6406/6198/358    4748/439    38  181   56.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076  74818 136313  6429/6221/358    4861/439    38  181   56.08)
(sat.ddfw       1      1   11.9922   1370001      6715         16            1      139)
(smt.stats   40   5223  82980 154785  6437/6223/358    5006/439    38  181   56.08)
ramon: poll                 wall=14.002s usage=13.991s mem=58752KiB load=1.00 rootload=1.00
(smt.stats   41   5384  84885 158140  6659/6236/358    5165/461    38  181   56.18)
ramon: poll                 wall=15.000s usage=14.987s mem=58620KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3167   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=15.988s mem=58824KiB load=1.00 rootload=1.00
(smt.stats   42   5561  86736 164349  6841/6582/359    5351/484    39  184   56.37)
(sat.ddfw       1      1   10.7194   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=16.987s mem=58928KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=18.091s mem=58936KiB load=1.10 rootload=1.10
(sat.ddfw       1      1   10.2987   1910001      9362         19            1      193)
(smt.stats   43   5755  89646 167803  7317/6793/359    5548/504    39  184   56.46)
ramon: poll                 wall=19.000s usage=19.111s mem=58960KiB load=1.02 rootload=1.02
ramon: poll                 wall=20.000s usage=20.110s mem=59036KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:57:18 2024
ramon: root.execname        z3
ramon: root.utime           20.160s
ramon: root.stime           0.020s
ramon: group.total          20.191s
ramon: group.utime          20.163s
ramon: group.stime          0.028s
ramon: group.mempeak        59292KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              1.01
