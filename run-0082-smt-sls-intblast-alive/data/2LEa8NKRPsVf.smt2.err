ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:31:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29598 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2LEa8NKRPsVf.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             603010
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    112.36     10000        49          0            1        2)
(sat.ddfw       1      1   58.4854     20001        98          1            1        3)
(smt.stats    0    101   3073    419  1122/948/99     107/13     5   14   51.86)
(smt.stats    1    202   4162   1233  1724/1564/101     206/46     7   17   52.05)
(sat.ddfw       1      1   58.4795     40001       196          2            1        5)
(smt.stats    2    313   6068   3017  2071/1871/102     334/62     8   18   52.05)
(smt.stats    3    414   8303   5288  2103/1903/102     441/62     8   18   52.15)
(smt.stats    4    525   9743   7547  2222/1957/106     560/90    11   20   52.34)
(sat.ddfw       1      1   50.8475     70001       343          3            1        8)
(smt.stats    5    647  11948  12430  2251/2048/107     680/90    13   22   52.44)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 1&128
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869185 := 2 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 1&128
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869185 := 2 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 1&128
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869185 := 2 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 256&128
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 0 := 67108865 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 256&128
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 0 := 134217729 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 128 := 202116110&128
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 202116110&128
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 51741723662 := 202116109 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 17179868928&128
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 0 := 134217727 << 8
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  13886  15101  2329/2080/107     791/92    13   22   52.63)
(smt.stats    7    859  15531  19122  2350/2133/117     909/94    14   24   52.63)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1 := 256&1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 256&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 85899346176 := 335544321 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 256&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869440 := 67108865 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1 := 67372038&1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 67372038&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17247241222 := 67372037 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 135274560&1
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 0 := 67637280 << 1
(smt.stats    8    981  17289  23088  2373/2146/123    1037/96    16   26   52.82)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 67372288&2147483648
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17247241472 := 67372037 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 2 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 8 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 8 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 16 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 32 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 32 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 64 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 128 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 256 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 512 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1024 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 2048 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4096 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 8192 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 16384 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 32768 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 65536 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 131072 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 262144 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 524288 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1048576 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 2097152 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 8388608 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 16777216 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 33554432 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 67108864 := 202116352&2147483648
(smt.stats    9   1115  18790  25801  2634/2174/130    1171/97    18   31   53.67)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 5242880 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 205520896&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 205520896&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 202116352&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 205520896&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4194304 := 205520896&2147483648
(sat.ddfw       1      1   43.1034    110001       539          4            1       12)
ramon: poll                 wall=1.000s usage=0.846s mem=55960KiB load=0.85 rootload=0.83
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1048576 := 4311744512&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1048576 := 4312793088&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 131072 := 4294967552&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 131072 := 4294967552&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 131072 := 4295098368&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 524288 := 4295067392&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 524288 := 4297064448&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 524288 := 4311744768&4294967296
(smt.stats   10   1216  20290  30009  2569/2337/273    1385/199    19   62   53.67)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 524288 := 4311815680&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 67108864 := 671188736&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 134217728 := 671188736&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 67108864 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 67108864 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 67108864 := 671188736&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 134217728 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 268435456 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 536870912 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 536870912 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 67108864 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 67108864 := 687941120&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 67108864 := 654386688&4294967296
(smt.stats   11   1327  21393  34246  2963/2720/299    1615/207    20   69   54.06)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 536870912 := 671188736&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 536870912 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 536870912 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 536870912 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 536870912 := 671163904&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 402653184 := 671188736&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 402653184 := 671188736&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 402653184 := 671188736&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 268435456 := 671188736&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 268435456 := 687941120&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 268435456 := 453060096&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 65536 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 65536 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 65536 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 65536 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 32640 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 32512 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 512 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1024 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 2048 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4096 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 8192 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 16384 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 256 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 512 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 16384 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 16384 := 570500608&4294967296
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 16384 := 570507264&4294967296
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  23540  41142  3092/2859/385    2211/290    21   84   54.35)
(sat.ddfw       1      1   36.8452    160000       784          5            1       17)
(smt.stats   13   1583  26240  47663  3137/2883/391    2614/560    22  103   54.55)
(smt.stats   14   1730  30661  59947  3232/2973/393    2856/609    23  114   54.83)
(sat.ddfw       1      1   32.3805    220001      1078          6            1       23)
(smt.stats   15   1831  32894  65764  3271/3015/393    3037/625    24  118   54.93)
ramon: poll                 wall=2.000s usage=1.818s mem=57516KiB load=0.97 rootload=0.97
(smt.stats   16   1942  36675  77560  3312/3077/412    3213/635    25  124   55.02)
(smt.stats   17   2064  38827  85067  3320/3085/415    3398/635    25  124   55.02)
(smt.stats   18   2198  41877  92669  3325/3094/421    3531/868    27  261   55.15)
(smt.stats   19   2345  45945 103090  3339/3106/421    3703/868    27  261   55.28)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1 := 1&262144
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 1&262144
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 12918720531 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&262144
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 12918720531 << 19
(sat.ddfw       1      1   28.7356    290001      1421          7            1       30)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 4315938816&262144
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 12918726696 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 4315938816&262144
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 12918726695 := 12918726696 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 4313841664&262144
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8659149825 := 12918726692 << 19
(smt.stats   20   2506  47694 112627  3423/3184/440    3947/884    28  261   55.37)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 8 := 4311744512&512
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 8 := 4311744512&512
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 16 := 4311744512&512
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 4 := 4311744512&512
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 2 := 4311744512&512
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 1 := 4311744512&512
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 4311744512&512
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 4311744512 := 16842752 << 10
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 4312793088&512
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 4312793088 := 16846848 << 10
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 4312793088&512
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 4312793088 := 16846848 << 10
(smt.stats   21   2607  49112 119460  3471/3200/441    4098/932    29  269   55.47)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&512
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 0 << 10
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&512
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 10
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2048
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 12
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2048
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 12
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2048
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 12
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2048
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 12
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4096
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4096
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4096
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4096
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1024
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 11
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1024
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 11
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1024
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 11
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1024
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 11
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1048576
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1048576
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1048576
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1048576
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2097152
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2097152
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2097152
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2097152
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&33554432
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&33554432
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&33554432
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&33554432
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4194304
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4194304
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4194304
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4194304
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16777216
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16777216
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16777216
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16777216
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8388608
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8388608
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8388608
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 24
(smt.stats   22   2718  51229 125311  3774/3294/472    4241/947    29  269   55.68)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1073741824
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1073741824
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1073741824
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1073741824
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4294967296
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4294967297 := 0 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4294967296
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4294967297 := 0 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2147483648
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2147483648
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&1
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&2
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8192
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8192
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8192
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8192
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&32768
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&32768
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&32768
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&32768
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&131072
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&131072
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&131072
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&131072
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&524288
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&524288
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&524288
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&524288
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16384
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 15
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16384
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 15
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16384
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 15
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&16384
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 15
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&65536
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&65536
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&65536
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&67108864
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&67108864
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&67108864
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&67108864
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&67108864
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&67108864
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&268435456
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&268435456
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&268435456
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&268435456
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&134217728
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&134217728
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&134217728
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&134217728
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&256
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 9
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&256
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 9
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&256
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 9
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&256
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 9
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&32
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&32
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&32
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&32
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&64
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 7
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&64
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 7
(smt.stats   23   2840  53634 133547  4246/3597/522    4403/1035    30  287   56.59)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&64
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 7
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&64
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 7
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&536870912
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&536870912
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&536870912
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&536870912
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 0 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (= #643 63) 0 (if #645 1 #769))) 0 := 0&4
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 4261148653 := 0 << 3
ramon: poll                 wall=3.004s usage=2.793s mem=59052KiB load=0.97 rootload=0.96
(smt.stats   24   2974  55514 138647  4598/4125/608    4539/1041    31  304   56.68)
(sat.ddfw       1      1   25.6328    370001      1813          8            1       38)
(smt.stats   25   3121  64119 150719  4746/4331/625    4892/1105    33  314   57.69)
(sat.ddfw       1      1   23.0003    460001      2254          9            1       47)
(smt.stats   26   3282  67585 159776  4838/4334/626    5082/1106    33  314   60.32)
ramon: poll                 wall=4.000s usage=3.737s mem=62832KiB load=0.95 rootload=0.94
(smt.stats   27   3459  75421 185279  5069/4588/635    5433/1119    35  328   60.99)
(smt.stats   28   3560  84805 196445  5078/4592/637    5587/1120    35  328   61.08)
(sat.ddfw       1      1   20.8899    560001      2745         10            1       57)
(smt.stats   29   3671  93346 207500  5087/4604/637    5856/1151    36  336   61.35)
ramon: poll                 wall=5.000s usage=4.699s mem=64000KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   19.0443    670001      3284         11            1       68)
ramon: poll                 wall=6.008s usage=5.669s mem=64072KiB load=0.96 rootload=0.96
(sat.ddfw       1      1    17.762    790001      3872         12            1       80)
ramon: poll                 wall=7.004s usage=6.665s mem=64192KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    16.624    920001      4509         13            1       93)
ramon: poll                 wall=8.000s usage=7.661s mem=64308KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   15.6198   1060001      5196         14            1      108)
ramon: poll                 wall=9.004s usage=8.668s mem=64324KiB load=1.00 rootload=1.01
ramon: poll                 wall=10.004s usage=9.663s mem=64524KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   14.7275   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793 105073 223313  5377/4666/637    6086/1154    36  336   61.92)
ramon: poll                 wall=11.000s usage=10.655s mem=64784KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   13.9227   1370001      6715         16            1      139)
ramon: poll                 wall=12.000s usage=11.658s mem=64828KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.004s usage=12.622s mem=64732KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   13.1112   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=13.565s mem=64820KiB load=0.95 rootload=0.95
(smt.stats   31   3927 111581 238136  5509/5006/639    6400/1180    37  345   62.12)
(sat.ddfw       1      1   12.3626   1720001      8431         18            1      174)
(smt.stats   32   4074 122633 252151  5527/5024/646    6623/1266    38  374   62.31)
ramon: poll                 wall=15.004s usage=14.569s mem=65240KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.564s mem=65176KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.7735   1910001      9362         19            1      193)
(smt.stats   33   4235 136741 272070  5559/5056/651    6913/1309    39  374   62.40)
ramon: poll                 wall=17.000s usage=16.564s mem=65600KiB load=1.00 rootload=1.00
(smt.stats   34   4412 156889 300731  5569/5064/651    7357/1310    39  374   62.88)
(sat.ddfw       1      1   11.2353   2110001     10343         20            1      214)
(smt.stats   35   4606 170619 323350  5585/5080/651    7687/1310    39  374   62.97)
ramon: poll                 wall=18.000s usage=17.683s mem=65860KiB load=1.12 rootload=1.12
(smt.stats   36   4707 181984 344517  5591/5088/651    7848/1310    39  374   63.07)
(smt.stats   37   4818 193914 366956  5608/5101/651    8214/1311    39  374   63.16)
ramon: poll                 wall=19.004s usage=18.639s mem=66232KiB load=0.95 rootload=0.95
(smt.stats   38   4940 207760 386340  5654/5151/656    8438/1485    40  383   63.68)
(sat.ddfw       1      1   10.7521   2320001     11372         21            1      235)
(smt.delete-inactive-clauses  :num-deleted-clauses 960)
ramon: poll                 wall=20.001s usage=19.631s mem=66296KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:32:11 2024
ramon: root.execname        z3
ramon: root.utime           19.610s
ramon: root.stime           0.030s
ramon: group.total          19.649s
ramon: group.utime          19.613s
ramon: group.stime          0.036s
ramon: group.mempeak        66552KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.018s
ramon: loadavg              0.98
