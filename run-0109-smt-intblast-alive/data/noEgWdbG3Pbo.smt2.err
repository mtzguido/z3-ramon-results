ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:54:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40633 MiB
ramon: sys.mem.avail        61708 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/noEgWdbG3Pbo.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3077955
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4248    652  1207/1035/101      93/24     6   17   19.23)
(smt.stats    1    202   5788   1579  2293/2067/103     191/28     8   20   19.33)
(smt.stats    2    313   6986   2467  2338/2089/103     298/31     8   20   19.33)
(smt.stats    3    414   7767   3745  2468/2234/105     399/50    10   21   19.42)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 1&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 1&7312963151764
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 35184372088833 := 0 << 44
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 1048580&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 1048580&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 1048580&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 1048587&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 35184371040267&7312963151764
(smt.stats    4    525   8883   5835  2514/2287/137     496/56    14   27   19.73)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 35184372088827&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 35184372088827&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 35184371040267&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 3145728 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 5242880 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 9437184 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097152 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 3145728 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184371040264&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097151 := 35184372088827&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097150 := 35184372088827&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097148 := 35184372088827&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097144 := 35184372088827&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097136 := 35184372088827&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184372088827&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184371040264&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097151 := 35184371040264&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184371040264&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184372088808&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184371040264&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184372088808&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184372088808&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184372088672&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184372088672&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097150 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 2097148 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1048576 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 26214400 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 42991616 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 31457272 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 30408704 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 27262960 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 27262944 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 26214400 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 26214400 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 42991616 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 42991616 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 42991616 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 76546048 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 210763776 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 344981504 := 35184371556235&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 344981504 := 35184371556096&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 344981504 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 344981504 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 378535936 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 378535936 := 35184371040299&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 378535936 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 378535936 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 512753664 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 378535936 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 35184371040291&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 35184371040288&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 35184371040320&7312963151764
(smt.stats    5    647  11628  11781  2749/2517/295     671/99    20   69   20.22)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313498832864&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313491492864&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313507221483&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313507221344&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313507221251&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313507220995&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313507220587&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 245366776 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 245366768 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 245366752 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 245366720 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 245366656 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 245366528 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7313499881472&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 244318208 := 7314774949888&7312963151764
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 177209344 := 7315580256256&7312963151764
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14599  17298  2902/2670/345     919/152    23   80   20.51)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 143654912 := 7318667264000&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318691380992&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318691380992&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318667264000&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 278921208 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318684041216&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318667264000&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 7318667264000&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 928829669376&914120393970
(smt.stats    7    859  20392  23844  2976/2676/345    1172/177    24   82   20.89)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 933124636672&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 932319330304&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 932319330305&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 933393072128&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 278921208 := 932321427456&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 932319330305&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 932319330305&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 278921208 := 932319330305&914120393970
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 277872640 := 932319330305&914120393970
(smt.stats    8    981  23001  29395  3171/2941/397    1488/333    27  107   21.09)
(smt.stats    9   1115  27461  37441  3220/2990/399    1772/444    30  111   21.19)
(smt.stats   10   1216  31090  43177  3224/2994/399    1940/444    30  111   21.31)
(smt.stats   11   1327  36990  52913  3226/2996/399    2194/444    30  111   21.31)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  39789  58447  3232/2999/399    2532/444    30  111   21.53)
(smt.stats   13   1583  42312  64508  3367/3102/399    3053/445    30  111   21.74)
ramon: poll                 wall=1.002s usage=1.002s mem=23044KiB load=1.00 rootload=0.99
(smt.stats   14   1730  49696  79540  3375/3115/399    3277/445    30  111   21.86)
(smt.stats   15   1831  54940  90746  3378/3118/400    3529/485    31  115   21.86)
(smt.stats   16   1942  58296  96728  3458/3198/408    3818/550    32  117   21.96)
(smt.stats   17   2064  62636 108719  3462/3202/412    4059/550    32  117   21.96)
(smt.stats   18   2198  67050 117672  3513/3211/412    4164/787    33  168   22.08)
(smt.stats   19   2345  72696 129241  3538/3262/412    4320/787    33  168   22.08)
(smt.stats   20   2506  77876 140851  3564/3304/415    4708/826    34  178   22.08)
(smt.stats   21   2607  81042 150058  3622/3307/415    4863/827    34  178   22.37)
(smt.stats   22   2718  85273 159942  3687/3368/415    5497/870    35  182   22.47)
ramon: poll                 wall=2.000s usage=1.999s mem=24012KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   23   2840  88186 171079  3764/3504/416    5846/1109    36  182   22.57)
(smt.stats   24   2974  94730 188627  3776/3516/416    6270/1109    36  182   22.57)
(smt.stats   25   3121 101160 207618  3811/3551/420    6733/1414    38  201   22.66)
(smt.stats   26   3282 103794 220363  3826/3560/420    7009/1416    38  201   22.66)
(smt.stats   27   3459 108917 241089  3856/3584/420    7488/1418    38  201   22.83)
(smt.stats   28   3560 112401 249859  3902/3602/420    7654/1425    38  201   22.83)
(smt.stats   29   3671 117236 262167  4025/3653/420    7835/1430    38  201   22.83)
ramon: poll                 wall=3.000s usage=2.975s mem=24300KiB load=0.98 rootload=0.97
(smt.stats   30   3793 122138 284289  4106/3820/420    7995/1432    38  201   23.09)
(smt.stats   31   3927 125986 302515  4128/3868/420    8401/1432    38  201   23.09)
(smt.stats   32   4074 131209 317018  4184/3875/420    8624/1437    38  201   23.09)
(smt.stats   33   4235 134896 327886  4283/3952/420    8848/1448    38  201   23.09)
(smt.stats   34   4412 138423 342743  4350/4040/420    9280/1449    38  201   23.20)
(smt.stats   35   4606 146553 359333  4406/4103/420    9634/1454    38  201   23.20)
(smt.stats   36   4707 150516 375101  4432/4172/420    9968/1454    38  201   23.30)
ramon: poll                 wall=4.000s usage=3.974s mem=24592KiB load=1.00 rootload=1.00
(smt.stats   37   4818 155193 390190  4496/4177/420   10303/1461    38  201   23.39)
(smt.stats   38   4940 157131 399249  4787/4288/420   10646/1463    38  201   23.49)
(smt.delete-inactive-clauses  :num-deleted-clauses 113)
(smt.stats   39   5074 164010 424410  4800/4540/420   10820/1463    38  201   23.49)
(smt.stats   40   5221 169400 451790  4806/4546/424   11149/2213    39  210   23.49)
(smt.stats   41   5382 172577 467129  4822/4553/424   11801/2216    39  210   23.62)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 274877906944&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 105827994173440 := 7313289119401 << 2
(smt.stats   42   5559 176116 482279  4957/4642/431   12252/2477    40  248   23.81)
ramon: poll                 wall=5.000s usage=4.974s mem=25072KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5753 184743 514134  5136/4714/431   12728/2485    40  248   23.90)
(smt.stats   44   5966 192662 551679  5222/4878/431   13160/2577    41  252   24.00)
(smt.stats   45   6067 195239 564946  5230/4969/431   13737/2577    41  252   24.00)
(smt.stats   46   6178 197174 575393  5231/4970/431   14317/2577    41  252   24.11)
(smt.stats   47   6300 201073 596030  5307/4976/431   14540/2578    41  252   24.11)
ramon: poll                 wall=6.000s usage=5.974s mem=25548KiB load=1.00 rootload=1.00
(smt.stats   48   6435 207022 633860  5325/5057/431   14835/2580    41  252   24.21)
(smt.stats   49   6582 210909 648750  5445/5077/432   15179/2924    42  254   24.21)
(smt.stats   50   6743 215073 669987  5719/5272/432   15454/2932    42  254   24.31)
(smt.stats   51   6920 218174 695957  5974/5524/432   15953/2936    42  254   24.31)
ramon: poll                 wall=7.000s usage=6.974s mem=25768KiB load=1.00 rootload=1.00
(smt.stats   52   7114 222403 715641  6254/5731/432   16633/2939    42  254   24.54)
(smt.stats   53   7327 226296 754145  6385/6052/432   16882/2941    42  254   24.54)
(smt.stats   54   7561 230264 777587  6587/6129/432   17239/2945    42  254   24.63)
(smt.stats   55   7662 231391 788514  6624/6355/432   17377/2946    42  254   24.74)
(smt.stats   56   7773 235606 816420  6629/6363/432   17592/2946    42  254   24.74)
(smt.stats   57   7895 238115 831615  6637/6376/432   17914/2946    42  254   24.74)
(smt.stats   58   8029 243554 862177  6654/6382/432   18410/2947    42  254   24.84)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777290818&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 134161893557314 := 28608777290819 << 2
ramon: poll                 wall=8.000s usage=7.973s mem=26220KiB load=1.00 rootload=1.00
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777291336&1
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 33540473389459 := 33540473389458 << 2
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777291336&1
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 33540472489601 := 33540473389458 << 2
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777291368&1
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 33540472489609 := 33540473389466 << 2
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777290824&1
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 28608777290824&1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777290824&1
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 28608777290824&1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777290856&1
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 28608777290856&1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777290856&1
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 28608777290856&1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777290824&1
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 28608777290824&1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777290828&1
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 28608777290828&1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777290820&1
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 28608777290820&1
(smt.stats   59   8176 245374 869317  6781/6506/443   18684/3584    43  257   24.93)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777291344&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 978586823689808 := 35184371040255 << 1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777291352&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 1013771195778648 := 35184371820405 << 1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777291344&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 978586823689808 := 35184372088831 << 1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 28608777291344&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 978586823689808 := 35184372088831 << 1
(smt.stats   60   8337 250475 898523  6824/6551/455   19258/3589    43  257   25.03)
(smt.stats   61   8514 257152 925790  6907/6629/458   20060/3741    44  268   25.22)
(smt.stats   62   8708 264505 966683  6942/6635/458   20348/3743    44  268   25.41)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8921 279910 1034160  6952/6673/459   20588/4027    46  272   25.41)
ramon: poll                 wall=9.000s usage=8.973s mem=27056KiB load=1.00 rootload=0.99
(smt.stats   64   9155 287234 1084805  6990/6710/460   21403/4174    47  278   25.71)
(smt.stats   65   9413 295727 1135403  7022/6742/461   22601/4403    48  286   25.80)
(smt.stats   66   9514 298100 1145826  7042/6762/463   22867/4404    48  286   25.80)
(smt.stats   67   9625 299863 1169361  7044/6764/463   23073/4404    48  286   25.92)
(smt.stats   68   9747 302910 1187807  7084/6766/463   23403/4404    48  286   25.92)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 721554505728&0
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 17952963297280 := 17952963297280 << 1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 708669603840&0
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 17946520846336 := 17946520846336 << 1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 708669603840&0
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 17946520846336 := 17946520846336 << 1
(smt.stats   69   9881 305429 1217488  7299/7012/469   23841/4597    49  317   26.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
ramon: poll                 wall=10.002s usage=9.975s mem=27548KiB load=1.00 rootload=1.00
(smt.stats   70  10028 308338 1232495  7374/7024/469   24395/4601    49  317   26.12)
(smt.stats   71  10189 311544 1260493  7684/7136/470   24767/4606    49  317   26.21)
(smt.stats   72  10366 315998 1287928  8047/7407/470   25172/4717    50  321   26.42)
(smt.stats   73  10560 318763 1302596  8188/7815/470   25570/4718    50  321   26.42)
ramon: poll                 wall=11.002s usage=10.973s mem=27964KiB load=1.00 rootload=0.99
(smt.stats   74  10773 325626 1351722  8226/7932/472   26463/4840    51  354   26.71)
(smt.stats   75  11007 331469 1405257  8369/8013/475   27268/4880    52  393   26.91)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 315680096259&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 315680096259&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 315680096259&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 315680096259&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 3 := 3575560273923&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 38759932362755 := 23456248059222 << 3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 3 := 3575560273923&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 38759932362755 := 23456248059222 << 3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 3 := 328564998147&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 70697309175811 := 8878234271743 << 3
(smt.stats   76  11264 342261 1463092  8607/8073/476   28013/4884    52  393   27.22)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 3 := 328564998147&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 70697309175811 := 8796093022213 << 3
ramon: poll                 wall=12.000s usage=11.971s mem=29004KiB load=1.00 rootload=1.00
(smt.stats   77  11546 348023 1484053  8973/8464/497   28554/5074    53  399   27.53)
(smt.stats   78  11647 350265 1507697  8997/8669/497   28990/5074    53  399   27.63)
(smt.stats   79  11758 353548 1537811  9056/8726/502   29181/5340    54  404   27.63)
(smt.stats   80  11880 357555 1567302  9067/8735/502   29351/5340    54  404   27.74)
(smt.stats   81  12014 364452 1591414  9074/8740/504   30401/5585    55  422   27.83)
ramon: poll                 wall=13.000s usage=12.971s mem=29392KiB load=1.00 rootload=1.00
(smt.stats   82  12161 370409 1643077  9138/8757/509   30933/5588    55  422   27.93)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12322 373303 1663066  9196/8830/510   31232/5671    56  519   28.03)
(smt.stats   84  12499 375758 1690156  9214/8862/510   31612/5671    56  519   28.03)
(smt.stats   85  12693 379746 1712711  9220/8882/510   32628/5671    56  519   28.12)
(smt.stats   86  12906 388476 1764439  9231/8885/512   33221/5903    57  533   28.22)
ramon: poll                 wall=14.000s usage=13.968s mem=29980KiB load=1.00 rootload=1.00
(smt.stats   87  13140 405884 1870157  9238/8900/513   34516/5903    57  533   28.31)
(smt.stats   88  13397 422568 1988348  9243/8905/513   35344/6176    58  546   28.41)
(smt.stats   89  13679 438515 2058654  9258/8918/513   35902/6176    58  546   28.50)
ramon: poll                 wall=15.000s usage=14.968s mem=30236KiB load=1.00 rootload=0.99
(smt.stats   90  13989 464203 2276790  9266/8924/513   36389/6176    58  546   28.50)
(smt.stats   91  14090 465886 2291711  9277/8928/513   36995/6176    58  546   28.62)
(smt.stats   92  14201 469028 2316202  9296/8941/513   37580/6176    58  546   28.72)
(smt.stats   93  14323 475710 2358067  9322/8962/513   37905/6179    58  546   28.72)
ramon: poll                 wall=16.000s usage=15.968s mem=30492KiB load=1.00 rootload=1.00
(smt.stats   94  14457 480778 2379730  9470/9130/518   38225/6541    59  557   28.72)
(smt.stats   95  14605 482045 2409554  9475/9135/518   38400/6541    59  557   28.72)
(smt.stats   96  14766 484592 2451355  9489/9138/518   38602/6543    59  557   28.85)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 403726925824&26
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 403726925824&26
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 403726925824 := 403726925824 << 6
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 403726925824&26
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 403726925824 := 17780090863617 << 6
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 403726925824&26
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 403726925824 := 17693117775873 << 6
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 403726925824&26
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 403726925826 := 6308233216 << 6
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 4 := 403726925824&26
(smt.stats   97  14943 488119 2486443  9539/9152/518   38808/6548    59  557   28.95)
(smt.delete-inactive-clauses  :num-deleted-clauses 109)
(smt.stats   98  15137 495776 2517802  9594/9229/534   39128/6591    60  560   28.95)
ramon: poll                 wall=17.000s usage=16.968s mem=31128KiB load=1.00 rootload=1.00
(smt.stats   99  15350 506493 2622370  9604/9260/534   39929/6591    60  560   29.37)
(smt.stats  100  15584 515885 2679991  9705/9272/536   40825/6789    61  565   29.47)
(smt.stats  101  15841 524232 2712838  9956/9432/537   41208/6791    61  565   29.68)
ramon: poll                 wall=18.000s usage=17.968s mem=31384KiB load=1.00 rootload=1.00
(smt.stats  102  16123 536686 2819146  9997/9641/537   42332/6958    62  589   29.91)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  103  16433 548359 2932384 10033/9670/541   43633/7087    63  602   30.10)
ramon: poll                 wall=19.000s usage=18.968s mem=31896KiB load=1.00 rootload=1.00
(smt.stats  104  16773 559334 2971931 10114/9739/541   44128/7221    64  655   30.32)
(smt.stats  105  16874 563561 2987604 10133/9767/542   44281/7221    64  655   30.32)
(smt.stats  106  16985 567974 3013865 10136/9770/542   45369/7221    64  655   30.41)
(smt.stats  107  17107 572206 3035408 10154/9773/543   45822/7222    64  655   30.61)
ramon: poll                 wall=20.000s usage=19.968s mem=32664KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:54:32 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.978s
ramon: group.utime          19.946s
ramon: group.stime          0.032s
ramon: group.mempeak        32664KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
