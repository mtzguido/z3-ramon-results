ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:42:38 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29318 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6bMOt6FgpyqF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             640866
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3873    750  1177/1058/88     102/4     1   13   51.85)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 66 := 32767&66
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 66 := 65 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 16 := 32767&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 16 := 15 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 16 := 32767&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 16 := 15 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 16 := 32767&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 16 := 15 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 66 := 32767&66
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 66 := 65 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 32767 := 32767&32767
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 32767 := 115 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 32767&562967134306304
shl: (shl[50] (bv2int %0) (mod (bv2int %0) 50)) 1125899906842623 := 562967133814815 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 32767&562967134306304
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 562967134306304 := 562967133814815 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 32767&562967134306304
shl: (shl[50] (bv2int %0) (mod (bv2int %0) 50)) 1125899906842622 := 562967133814815 << 15
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 1 := 32767&116
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&116
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 4 := 32767&116
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 1 := 32767&116
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 32767&116
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 32767&116
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 32767&120
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&66
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&128
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&127
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&127
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&126
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&128
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&66
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&66
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&128
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&130
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&128
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&258
(smt.stats    1    202   5879   2563  1828/1629/129     194/10     4   19   52.26)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&512
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&514
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&514
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&1026
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&2562
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&3074
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&3074
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&3074
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&4098
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&3263
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&3074
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&3074
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&3074
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&3074
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&2178
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&2050
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&2050
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&2050
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&2050
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&2050
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&2050
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&2051
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&12291
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&16387
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&16447
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&16443
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&16447
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   60.9756     10000        49          0            1        2)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 2 := 32767&41091
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 3 := 32767&73747
(smt.stats    2    313   6947   4414  2096/1806/241     408/33     6   44   52.87)
(smt.stats    3    414   8528   6746  2176/1990/255     581/62     7   47   52.96)
(sat.ddfw       1      1   34.7257     20001        98          1            1        3)
(smt.stats    4    525  13512  15419  2340/2139/259     726/109     9   60   53.06)
(smt.stats    5    647  17627  24364  2436/2157/261     859/118    11   60   53.15)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  22189  28197  2470/2251/261     988/118    11   60   53.15)
(smt.stats    7    859  26933  36410  2561/2330/261    1106/118    11   60   53.26)
(smt.stats    8    981  30069  41592  2580/2357/267    1264/164    12   62   53.26)
(sat.ddfw       1      1   37.8788     40001       196          2            1        5)
(smt.stats    9   1115  34919  51697  2589/2366/273    1367/182    14   91   53.37)
(smt.stats   10   1216  37327  57336  2612/2384/273    1484/184    14   91   53.37)
(smt.stats   11   1327  40506  64309  2620/2392/274    1620/217    15   91   53.47)
(smt.stats   12   1449  43884  73567  2620/2392/274    1770/217    15   91   53.56)
(smt.stats   13   1583  47899  80840  2627/2396/275    2022/248    16   93   53.56)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   14   1730  52570  93218  2640/2413/278    2153/331    17  109   53.68)
(sat.ddfw       1      1   33.2226     70001       343          3            1        8)
(smt.stats   15   1831  55783  99418  2650/2419/278    2270/332    17  109   53.68)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 65535&8
ramon: poll                 wall=1.000s usage=0.851s mem=56252KiB load=0.85 rootload=0.84
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 65535&8196
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 65535&8196
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 65535&4098
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 1 := 65535&4105
(smt.stats   16   1942  57462 103682  2750/2492/289    2495/367    18  111   53.77)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 18432 := 65535&18432
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 1125899906861056 := 66 << 16
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 18432 := 65535&18432
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 1125899906861056 := 66 << 16
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 59392 := 65535&124928
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 1125899906967552 := 66 << 16
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 59392 := 65535&124928
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 1125899906967552 := 66 << 16
(smt.stats   17   2064  59076 108393  2886/2548/290    2734/370    18  111   53.87)
(sat.ddfw       1      1    30.888    110001       539          4            1       12)
(smt.stats   18   2198  60946 115230  2972/2672/296    3124/492    19  116   53.96)
(smt.stats   19   2345  63721 121899  3122/2753/296    3577/503    19  116   54.23)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 32 := 65535&131072
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 64 := 65535&3276800
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 128 := 65535&131072
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 256 := 65535&1179648
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 512 := 65535&1179648
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 960 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 896 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 256 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 512 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 256 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 64 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 128 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 64 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 128 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 32 := 65535&5636096
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 57344 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 57344 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 49152 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 32768 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 32768 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 18944 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 18448 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 16 := 65535&2359296
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 16 := 65535&2359296
(smt.stats   20   2506  65672 126621  3353/2954/319    3885/726    20  121   54.54)
(sat.ddfw       1      1   28.0893    160000       784          5            1       17)
(smt.stats   21   2607  66731 130895  3525/3139/355    4107/734    20  121   54.54)
ramon: poll                 wall=2.000s usage=1.836s mem=57084KiB load=0.99 rootload=0.97
(smt.stats   22   2718  68292 136418  3709/3313/355    4378/737    20  121   54.64)
(smt.stats   23   2840  73681 156495  3744/3510/355    4758/866    21  133   54.83)
(sat.ddfw       1      1    25.489    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   24   2974  77269 168362  3910/3660/378    5179/1299    23  251   54.97)
(smt.stats   25   3121  83337 188388  3925/3675/380    5364/1299    23  251   54.97)
(smt.stats   26   3282  86834 193173  3922/3675/380    5512/1427    24  278   55.08)
(smt.stats   27   3459  90068 211674  3939/3692/384    5875/1478    25  281   55.19)
ramon: poll                 wall=3.000s usage=2.798s mem=57636KiB load=0.96 rootload=0.96
(smt.stats   28   3560  94601 232123  3943/3696/384    6006/1478    25  281   55.36)
(sat.ddfw       1      1   23.1558    290001      1421          7            1       30)
(smt.stats   29   3671  99001 242700  3959/3698/384    6308/1522    26  286   55.46)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 1036 := 65535&7471104
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 1032 := 65535&7471104
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 1024 := 65535&7471104
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 65535&46792704
shl: (shl[50] (bv2int %0) (mod (bv2int %0) 50)) 65534 := 844442110001866 << 16
(smt.stats   30   3793 101856 257607  4052/3723/384    6644/1526    26  286   55.56)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 65535&14024704
shl: (shl[50] (bv2int %0) (mod (bv2int %0) 50)) 1 := 844442110001366 << 16
(smt.stats   31   3927 103799 268005  4092/3843/399    6907/1661    27  287   55.85)
(smt.stats   32   4074 108073 284999  4346/4036/399    7250/1661    27  287   56.04)
(smt.stats   33   4235 116929 315817  4368/4050/403    7601/1728    28  348   56.27)
(sat.ddfw       1      1   21.0859    370001      1813          8            1       38)
ramon: poll                 wall=4.011s usage=3.826s mem=58516KiB load=1.02 rootload=1.02
(smt.stats   34   4412 125915 348461  4449/4076/403    8151/1737    28  348   56.46)
(sat.ddfw       1      1   19.3175    460001      2254          9            1       47)
(smt.stats   35   4606 133814 379036  4551/4152/408    8978/1792    29  351   56.75)
ramon: poll                 wall=5.000s usage=4.790s mem=59024KiB load=0.98 rootload=0.97
(smt.stats   36   4707 138083 393086  4681/4237/408    9421/1830    30  358   56.85)
(smt.stats   37   4818 141341 404643  4843/4524/409    9843/1841    31  369   57.26)
(sat.ddfw       1      1   17.7999    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.790s mem=59620KiB load=1.00 rootload=1.00
(smt.stats   38   4940 144696 415805  4992/4588/410   10620/1841    31  369   57.44)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 148554 431470  5009/4694/410   11476/1841    31  369   57.44)
(smt.stats   40   5221 154702 453348  5067/4700/410   12001/1965    32  372   57.77)
(sat.ddfw       1      1   16.5066    670001      3284         11            1       68)
(smt.stats   41   5382 160220 474416  5188/4776/410   12626/1971    32  372   57.86)
ramon: poll                 wall=7.000s usage=6.787s mem=60264KiB load=1.00 rootload=1.00
(smt.stats   42   5559 166778 498594  5242/4886/410   13243/1972    32  372   57.86)
(smt.stats   43   5753 177383 531114  5354/4940/410   13776/1976    32  372   57.96)
(sat.ddfw       1      1   15.3453    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.786s mem=60160KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5966 184035 553572  5515/5071/410   14584/1981    32  372   58.11)
(smt.stats   45   6067 185600 564861  5567/5240/412   15315/2300    33  387   58.30)
(smt.stats   46   6178 187568 577048  5814/5262/412   15647/2300    33  387   58.39)
ramon: poll                 wall=9.007s usage=8.793s mem=60880KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.3662    920001      4509         13            1       93)
(smt.stats   47   6300 189575 589235  6038/5517/412   16020/2301    33  387   58.49)
ramon: poll                 wall=10.000s usage=9.784s mem=61056KiB load=1.00 rootload=1.00
(smt.stats   48   6434 191405 603779  6278/5739/412   16771/2301    33  387   58.59)
(smt.stats   49   6581 194754 614598  6325/5985/412   17632/2397    34  404   58.68)
(sat.ddfw       1      1   13.4914   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.784s mem=61376KiB load=1.00 rootload=1.00
(smt.stats   50   6742 199954 642674  6522/6085/413   18265/2400    34  404   58.87)
(smt.stats   51   6919 205401 681816  6730/6240/413   19178/2514    35  404   58.97)
(sat.ddfw       1      1   12.7043   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.846s mem=61620KiB load=1.06 rootload=1.06
(smt.stats   52   7113 212739 700236  6774/6426/415   20035/2516    35  404   59.47)
(smt.stats   53   7326 219088 721834  6959/6485/415   21022/2754    36  448   59.66)
ramon: poll                 wall=13.000s usage=12.900s mem=61952KiB load=1.05 rootload=1.06
(smt.stats   54   7560 224667 759881  7060/6700/415   23552/2756    36  448   59.85)
(sat.ddfw       1      1   11.9994   1370001      6715         16            1      139)
(smt.stats   55   7661 228925 776015  7136/6746/415   24074/2758    36  448   59.95)
(smt.stats   56   7772 233810 794904  7318/6855/415   25217/2758    36  448   60.05)
ramon: poll                 wall=14.000s usage=13.902s mem=62208KiB load=1.00 rootload=0.99
(smt.stats   57   7894 239174 827144  7491/7007/415   25965/2761    36  448   60.25)
(smt.stats   58   8028 242624 844708  7555/7240/416   27293/3388    37  478   60.35)
(smt.stats   59   8175 250083 879628  7619/7241/416   27764/3390    37  478   60.52)
(sat.ddfw       1      1   11.3659   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=14.902s mem=62720KiB load=1.00 rootload=1.00
(smt.stats   60   8336 255742 899676  7719/7313/417   29070/3506    38  485   60.71)
(smt.stats   61   8513 261081 918168  7778/7427/417   30049/3509    38  485   60.81)
(smt.stats   62   8707 269713 968523  7925/7481/417   31018/3514    38  485   60.90)
ramon: poll                 wall=16.003s usage=16.030s mem=63348KiB load=1.12 rootload=1.13
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 277441 1016462  8071/7635/417   32147/3517    38  485   61.09)
(sat.ddfw       1      1   10.9064   1720001      8431         18            1      174)
(smt.stats   64   9154 284651 1045650  8191/7763/419   33657/4014    39  502   61.19)
ramon: poll                 wall=17.000s usage=17.025s mem=63632KiB load=1.00 rootload=1.00
(smt.stats   65   9411 289602 1075883  8492/7916/419   34634/4019    39  502   61.62)
(smt.stats   66   9512 291695 1087804  8621/8296/420   35161/4021    39  502   61.62)
(smt.stats   67   9623 295538 1116665  8738/8316/420   35556/4025    39  502   61.71)
ramon: poll                 wall=18.003s usage=18.016s mem=64132KiB load=0.99 rootload=0.99
(smt.stats   68   9745 300336 1150925  8873/8433/420   36135/4203    40  509   61.81)
(sat.ddfw       1      1   10.3746   1910001      9362         19            1      193)
(smt.stats   69   9879 304167 1171180  8922/8588/421   36554/4203    40  509   61.90)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 308267 1208205  8930/8612/421   37608/4203    40  509   61.90)
ramon: poll                 wall=19.000s usage=19.004s mem=64772KiB load=0.99 rootload=0.99
(smt.stats   71  10187 313582 1272322  8956/8636/422   38428/4578    41  516   62.68)
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 1&4480
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 10133099161588096 := 844485060591701 << 1
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 1&4480
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 10133099161588096 := 844485060591701 << 1
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 1&4480
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 2251799813689728 := 844450699935701 << 1
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 1&4480
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 3377699720532352 := 844450699935701 << 1
band: (band[50] (if (or #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 #777 #778 #779 #780) 0 (if #781 1 #877)) (shl[64] (bv2int %0) (mod #934 64))) 0 := 1&4480
shl: (shl[64] (bv2int %0) (mod (+ #109 #933) 64)) 3377699720532352 := 844442110001751 << 1
(smt.stats   72  10364 316325 1286877  9157/8788/429   38863/4586    41  516   62.78)
(smt.stats   73  10558 320556 1314724  9194/8874/430   39971/4586    41  516   62.97)
ramon: poll                 wall=20.000s usage=20.003s mem=65076KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:42:58 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.030s
ramon: group.total          20.013s
ramon: group.utime          19.977s
ramon: group.stime          0.036s
ramon: group.mempeak        65332KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.00
