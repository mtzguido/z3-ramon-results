ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:23:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30676 MiB
ramon: sys.mem.avail        62093 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1lnYgPKbhdLv.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             219318
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   232/232     0/0  69       0    18.53   0.00)
(sat.stats    101    482    0   232/232   101/28  69       0    18.85   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 289 :time 0.00)
(sat.stats    101    482    0   232/232   101/28  69       0    18.85   0.00)
(sat.stats    101    482    0   232/232   101/28  69       0    18.85   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 362018.85 :time 0.00)
(sat.stats    101    482    0   234/234    37/27  69       0    18.85   0.00)
(sat.stats    104    504    1   234/234    40/30  69       0    18.85   0.00)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    163   1772    2   234/234    99/76  69       0    18.94   0.01)
(sat.stats    166   1832    3   234/234   102/76  69       0    18.94   0.01)
(sat.stats    169   1900    4   234/234   105/76  69       0    18.94   0.01)
(sat.stats    172   1954    5   234/234   108/78  69       0    18.94   0.01)
(sat.stats    175   2006    6   234/234   111/78  69       0    18.94   0.01)
(sat.stats    178   2086    7   234/234   114/78  69       0    18.94   0.01)
(sat.stats    181   2156    8   234/234   117/78  69       0    18.94   0.01)
(sat.stats    184   2218    9   234/234   120/78  69       0    18.94   0.01)
(sat.stats    187   2277   10   234/234   123/78  69       0    18.94   0.01)
(sat.stats    190   2354   11   234/234   126/78  69       0    18.94   0.01)
(sat.stats    193   2402   12   234/234   129/81  69       0    18.94   0.01)
(sat.stats    211   2832   18   234/234   147/99  69       0    18.94   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1496 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    371   6844   20   245/245   305/179  74       0    19.63   0.06)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2770 :time 0.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 4339 :time 0.00)
(sat.stats    490   9899   28   282/282   422/223  84       0    19.72   0.53)
lshr: (lshr[50] (bv2int %0) (mod (bv2int %1) 50)) 0 := 1 >>l 12
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 0 := 0&10170482556928
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #54 #293) 64)) 16384 := 16384 >>l 26
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 4856 :time 0.00)
ramon: poll                 wall=1.004s usage=1.003s mem=21788KiB load=1.00 rootload=0.99
(sat.stats   1209  19592   48  4090/4088  1187/274  94       0    20.97   1.78)
(sat.stats   1213  19631   49  4484/4482  1191/274  94       0    20.97   1.78)
ramon: poll                 wall=2.000s usage=1.995s mem=22556KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11961 :time 0.00)
(sat.stats   1597  26761  161 11411/11409  1644/322  96       0    22.08   2.19)
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 1 := 1&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 2 := 2&10170482556928
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 15245 :time 0.00)
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 4 := 4&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 8 := 8&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 16 := 16&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 32 := 32&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 64 := 64&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 128 := 128&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 256 := 256&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 512 := 512&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 1024 := 1024&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 2048 := 2048&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 4096 := 4096&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 8192 := 8192&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 16384 := 16384&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 32768 := 32768&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 65536 := 65536&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 131072 := 131072&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 262144 := 262144&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 524288 := 524288&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 1048576 := 1048576&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 2097152 := 2097152&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 4194304 := 4194304&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 8388608 := 8388608&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 16777216 := 16777216&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 33554432 := 33554432&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 67108864 := 67108864&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 134217728 := 134217728&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 268435456 := 268435456&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 536870912 := 536870912&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 1073741824 := 1073741824&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 2147483648 := 2147483648&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 4294967296 := 4294967296&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 8589934592 := 8589934592&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 17179869184 := 17179869184&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 34359738368 := 34359738368&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 68719476736 := 68719476736&10170482556928
band: (band[50] (lshr[50] (bv2int %0) (mod #54 50)) (if (= #476 49) 20829148276588544 (if #478 10414574138294272 #574))) 137438953472 := 137438953472&10170482556928
 (sat-cleaner :elim-literals 9 :elim-clauses 8 :cost 17345 :time 0.00)
ramon: poll                 wall=3.000s usage=2.994s mem=27932KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.994s mem=28188KiB load=1.00 rootload=1.00
(sat.stats   3032  92321  227 37402/37400  3584/971 334       0    27.44   4.90)
ramon: poll                 wall=5.000s usage=4.994s mem=28700KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 21968 :time 0.00)
ramon: poll                 wall=6.000s usage=5.994s mem=28700KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 25207 :time 0.00)
ramon: poll                 wall=7.000s usage=6.993s mem=28956KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 28057 :time 0.00)
ramon: poll                 wall=8.000s usage=7.993s mem=29212KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.004s usage=9.001s mem=29724KiB load=1.00 rootload=1.01
ramon: poll                 wall=10.000s usage=9.992s mem=29724KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.992s mem=30236KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.992s mem=31004KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.992s mem=31772KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.991s mem=33052KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.991s mem=34328KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.991s mem=35096KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.991s mem=36376KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.990s mem=37656KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.990s mem=38932KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.990s mem=39956KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:23:57 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.002s
ramon: group.utime          19.982s
ramon: group.stime          0.020s
ramon: group.mempeak        40216KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
