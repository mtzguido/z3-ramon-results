ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:39:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30131 MiB
ramon: sys.mem.avail        61765 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7XHVjc67gsTC.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4077320
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4430    386  1224/1104/96      95/45     4   17   19.17)
(smt.stats    1    202   5378    778  1938/1751/97     192/67     5   18   19.37)
(smt.stats    2    313   7568   2366  2474/2045/102     292/94     7   26   19.58)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 87 := 88&17179869184
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 86 := 88&17179869184
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 84 := 88&17179869184
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 80 := 88&17179869184
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 72 := 88&17179869184
(smt.stats    3    414   9480   4079  2539/2303/141     402/106     9   35   19.77)
(smt.stats    4    525  11430   5355  2574/2331/152     501/116    10   50   19.77)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370481&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1 := 4503599627370481&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 4503599627370481 := 4503599627370481 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1 := 4503599627370481&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 4503599627370481 := 4503599627370481 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1 := 4503599627370480&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370480&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 4503599627370480 := 4503599627370481 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370480&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 4503599627370480 := 4503599627370481 << 1
(smt.stats    5    647  15178   7049  2611/2370/164     601/130    12   65   19.88)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370466&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 4503599627370479 := 4503599627370481 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370466&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 438 := 4503599627370481 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370466&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 438 := 4503599627370481 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370466&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 1 := 4503599627370466&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370466&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 1 := 4503599627370466&1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  17498   8748  2651/2384/164     726/132    13   66   19.98)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2 := 4503599627370480&2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2 := 4503599627370490&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 18014398509481978 := 4503599627370482 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2 := 4503599627370490&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 18014398509481978 := 4503599627370482 << 2
(smt.stats    7    859  19445  11397  2686/2427/176     834/149    15   72   20.08)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2 := 4503599627370490&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254740986 := 4503599627370482 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370440&2
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 341 := 4503599627370482 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370440&2
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 438 := 4503599627370482 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370440&2
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 2 := 4503599627370440&2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370440&2
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 2 := 4503599627370440&2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599627370440&2
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 1 := 4503599627370440&2
(smt.stats    8    981  21398  14248  2748/2490/208     946/154    16   74   20.17)
(smt.stats    9   1115  24194  16792  2837/2573/212    1090/165    18   88   20.36)
(smt.stats   10   1216  27480  19427  2941/2645/215    1262/165    18   88   20.46)
(smt.stats   11   1327  30697  22071  3063/2688/215    1419/188    19   92   20.66)
ramon: poll                 wall=1.000s usage=0.947s mem=22100KiB load=0.95 rootload=0.94
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  33886  26304  3222/2960/225    1610/214    20   94   20.76)
(smt.stats   13   1583  36829  32557  3249/2989/226    1738/233    21  119   20.76)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 4503599627370482&281474976710656
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 22517998136852466 := 2251799811588129 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 4503599627370482&281474976710656
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 22517998136852466 := 2251799811588129 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 4503599627370482&281474976710656
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 22517998136852466 := 2251799811588129 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 4503599627370482&281474976710656
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 22517998136852466 := 2251799811588129 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 4503599627370482&281474976710656
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254740978 := 2251799811588129 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 4503599627370482&281474976710656
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 13510798882111474 := 2251799811588129 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 4503599627370482&281474976710656
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 13510798882111474 := 2251799811588129 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 562949953421312&281474976710656
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 562949953421312&281474976710656
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 562949953421312&281474976710656
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 562949953421312&281474976710656
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 562949953421312&281474976710656
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 281474976710656 := 562949953421312&281474976710656
(smt.stats   14   1730  41100  39209  3319/3043/243    1942/245    22  120   20.86)
(smt.stats   15   1831  44199  44582  3357/3074/243    2118/272    23  123   20.86)
(smt.stats   16   1942  47555  49632  3368/3103/243    2243/272    23  123   21.05)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599623176162&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 1 := 4503599623176162&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 4503599623176162&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 1 := 4503599623176162&1
(smt.stats   17   2064  51672  54417  3370/3105/243    2389/273    23  123   21.05)
(smt.stats   18   2198  56137  61895  3374/3109/243    2524/273    23  123   21.15)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 49 := 4503599618981985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 49 := 4503599618981985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599623176233&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618981985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618981985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618981993&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618981985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618981985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618982001&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618982001&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618981985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618982001&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 48 := 4503599618982001&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 160 := 4503599618982113&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 160 := 4503599618982097&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 160 := 4503599618982097&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 160 := 4503599618982113&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 128 := 4503599618982113&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 128 := 4503599618982065&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 128 := 4503599618982081&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 128 := 4503599618982081&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 256 := 4503599618982193&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 512 := 4503599618982449&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1024 := 4503599618982961&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2048 := 4503599618983985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 4096 := 4503599618986033&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 8192 := 4503599618990129&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 16384 := 4503599618998321&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 32768 := 4503599619014705&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 65536 := 4503599619047473&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 131072 := 4503599619113009&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 262144 := 4503599619244081&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 524288 := 4503599619506225&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1048576 := 4503599620030513&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2097152 := 4503599621079089&274877906944
(smt.stats   19   2345  60068  70244  3548/3121/250    2703/299    24  127   21.43)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1024 := 4503599618981985&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1024 := 4503599618982881&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2048 := 4503599618982881&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 4096 := 4503599618982009&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 8192 := 4503599618982009&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2048 := 4503599618982905&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 4096 := 4503599618982905&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 8192 := 4503599618982905&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1280 := 4503599618982945&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1024 := 4503599618982945&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 256 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 256 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 256 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 256 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 256 := 4503599618983169&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2097152 := 4503599618983929&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2097152 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 4194304 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 8388608 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 16777216 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 33554432 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 67108864 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 8388608 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 16777216 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 33554432 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 67108864 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 134217728 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 268435456 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 536870912 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 1073741824 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2147483648 := 4503599618982913&274877906944
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 4294967296 := 4503599618982913&274877906944
(smt.stats   20   2506  62665  77548  3570/3305/412    2996/383    25  171   21.83)
(smt.stats   21   2607  65279  81397  3717/3305/412    3175/395    25  171   21.93)
ramon: poll                 wall=2.000s usage=1.947s mem=23380KiB load=1.00 rootload=1.00
(smt.stats   22   2718  66409  83289  3949/3525/412    3302/406    25  171   22.31)
(smt.stats   23   2840  67018  84729  4269/3853/412    3452/418    25  171   22.41)
(smt.stats   24   2974  69704  92084  4451/4114/412    3620/488    26  179   22.50)
ramon: poll                 wall=3.000s usage=2.947s mem=24312KiB load=1.00 rootload=1.00
(smt.stats   25   3121  73274 103123  4500/4233/418    3888/564    27  194   22.62)
(smt.stats   26   3282  75773 109668  4686/4285/419    4077/566    27  194   22.71)
(smt.stats   27   3459  79229 121976  4859/4442/419    4310/571    27  194   22.71)
(smt.stats   28   3560  81629 129585  4907/4597/422    4525/626    28  197   22.81)
ramon: poll                 wall=4.000s usage=3.947s mem=24348KiB load=1.00 rootload=1.00
(smt.stats   29   3671  84009 134303  4978/4653/422    4661/626    28  197   22.81)
(smt.stats   30   3793  87207 143738  5136/4750/423    4895/689    29  204   23.00)
(smt.stats   31   3927  90424 151564  5236/4895/424    5111/696    29  204   23.09)
ramon: poll                 wall=5.000s usage=4.947s mem=24604KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  94865 163374  5327/5042/435    5364/750    30  209   23.28)
(smt.stats   33   4235 100434 180051  5334/5058/435    5524/824    31  229   23.28)
(smt.stats   34   4412 107723 198806  5345/5065/435    5767/824    31  229   23.38)
(smt.stats   35   4606 114159 214088  5439/5139/438    6185/869    32  242   23.58)
(smt.stats   36   4707 118265 225136  5508/5147/438    6325/896    33  247   23.58)
ramon: poll                 wall=6.000s usage=5.946s mem=25116KiB load=1.00 rootload=1.00
(smt.stats   37   4818 120368 229304  5695/5224/438    6470/903    33  247   23.67)
(smt.stats   38   4940 122560 234360  5811/5417/438    6648/903    33  247   23.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 285)
(smt.stats   39   5074 128721 249015  5828/5526/439    6547/912    34  266   23.78)
(smt.stats   40   5221 133620 260006  5948/5536/440    6733/937    35  266   23.78)
ramon: poll                 wall=7.000s usage=6.946s mem=25372KiB load=1.00 rootload=1.00
(smt.stats   41   5382 138252 267640  6148/5669/441    6952/941    35  266   23.88)
(smt.stats   42   5559 143719 284362  6216/5899/441    7241/952    36  268   23.97)
ramon: poll                 wall=8.000s usage=7.946s mem=25884KiB load=1.00 rootload=1.00
(smt.stats   43   5753 151079 290636  6368/5920/441    7528/954    36  268   24.06)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   44   5966 157175 303493  6541/6204/442    7953/1021    37  269   24.16)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 2049&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254743041 := 1125899906842573 << 5
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 2049&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254743041 := 1125899906842573 << 5
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 2049&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254743041 := 1125899906842573 << 5
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 2049&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254743041 := 1125899906842573 << 5
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 2049&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254743041 := 1125899906842573 << 5
(smt.stats   45   6067 160867 313802  6615/6300/442    8192/1022    37  269   24.39)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 4 := 2057&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 8 := 2057&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 8 := 2057&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 8 := 2057&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2 := 2063&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 2 := 2063&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 4 := 2063&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 2063&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 18014398509484047 := 1125899906842573 << 5
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 2063&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 18014398509484047 := 1125899906842573 << 5
(smt.stats   46   6178 163568 324583  6682/6328/447    8428/1090    38  270   24.49)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 822048&16
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 101988 := 1125899906868313 << 5
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 822048&16
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 101988 := 1125899906868313 << 5
(smt.stats   47   6300 167747 336315  6720/6382/463    8754/1091    38  270   24.49)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 822048&16
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 14 := 822048&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 822048&16
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 16 := 822048&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 822048&16
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 12 := 822048&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 822048&16
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 8 := 822048&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 822048&16
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 8 := 822048&16
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 0 := 822048&16
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #607 51) 1 (if #609 2 #709))) 4 := 822048&16
ramon: poll                 wall=9.000s usage=8.946s mem=26200KiB load=1.00 rootload=0.99
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (= #728 63) 0 (if #730 1 #854))) 16 := 822048&16
(smt.stats   48   6434 172239 349307  6759/6452/501    9038/1163    39  276   24.58)
(smt.stats   49   6581 179071 364819  6878/6499/503    9321/1169    39  276   24.68)
(smt.stats   50   6742 185880 388315  7127/6632/504    9545/1258    40  292   24.68)
ramon: poll                 wall=10.000s usage=9.946s mem=26456KiB load=1.00 rootload=1.00
(smt.stats   51   6919 193650 415951  7487/6865/504   10313/1287    41  292   24.98)
(smt.stats   52   7113 201226 431776  7673/7178/504   10860/1293    41  292   25.07)
ramon: poll                 wall=11.000s usage=10.946s mem=26872KiB load=1.00 rootload=1.00
(smt.stats   53   7326 207826 444656  7884/7387/504   11200/1295    41  292   25.26)
(smt.stats   54   7560 215057 459643  8116/7604/506   11687/1562    42  297   25.36)
ramon: poll                 wall=12.000s usage=11.946s mem=26872KiB load=1.00 rootload=1.00
(smt.stats   55   7661 219852 465001  8159/7808/507   11918/1565    42  297   25.36)
(smt.stats   56   7772 224199 479309  8326/7886/508   12103/1645    43  301   25.36)
(smt.stats   57   7894 228445 492452  8558/8061/508   12342/1654    43  301   25.46)
(smt.stats   58   8028 233440 506299  8678/8284/508   12851/1656    43  301   25.65)
ramon: poll                 wall=13.000s usage=12.945s mem=27264KiB load=1.00 rootload=1.00
(smt.stats   59   8175 239056 527721  8856/8405/514   13288/1832    44  304   25.86)
ramon: poll                 wall=14.000s usage=13.945s mem=27776KiB load=1.00 rootload=1.00
(smt.stats   60   8336 245807 537650  9203/8604/514   13609/1929    45  315   26.05)
(smt.stats   61   8513 250755 553682  9396/8951/514   14211/1931    45  315   26.14)
ramon: poll                 wall=15.000s usage=14.945s mem=27776KiB load=1.00 rootload=1.00
(smt.stats   62   8707 258452 582889  9577/9089/514   14727/1932    45  315   26.24)
ramon: poll                 wall=16.000s usage=15.945s mem=28032KiB load=1.00 rootload=1.00
(smt.stats   63   8920 265090 616272  9893/9288/514   15611/1934    45  315   26.33)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   64   9154 272585 641801 10016/9601/514   16771/1938    45  315   26.43)
ramon: poll                 wall=17.000s usage=16.945s mem=28544KiB load=1.00 rootload=1.00
(smt.stats   65   9411 283206 696020 10366/9744/514   17956/1940    45  315   26.82)
(smt.stats   66   9512 285056 705436 10389/10076/514   18682/1940    45  315   26.91)
(smt.stats   67   9623 289909 719527 10464/10078/516   18970/2597    46  326   27.01)
ramon: poll                 wall=18.000s usage=17.945s mem=28800KiB load=1.00 rootload=1.00
(smt.stats   68   9745 292796 733296 10752/10232/516   19382/2601    46  326   27.10)
(smt.stats   69   9879 298109 762809 11067/10463/516   19680/2602    46  326   27.20)
ramon: poll                 wall=19.000s usage=18.945s mem=29056KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 1350)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   70  10026 301950 786818 11151/10829/517   18936/2724    47  328   27.29)
(smt.stats   71  10187 307956 832801 11174/10855/518   19258/2724    47  328   27.29)
(smt.stats   72  10364 310816 843346 11706/10877/518   19821/2804    48  333   27.48)
(smt.stats   73  10558 316021 866411 11828/11452/518   20277/2804    48  333   27.48)
(smt.stats   74  10771 322136 899530 12014/11531/518   21676/2811    48  333   27.58)
ramon: poll                 wall=20.000s usage=19.945s mem=29312KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:39:45 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.003s
ramon: group.utime          19.995s
ramon: group.stime          0.008s
ramon: group.mempeak        29312KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.055s
ramon: loadavg              1.00
