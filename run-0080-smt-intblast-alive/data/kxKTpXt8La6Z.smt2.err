ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:54:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24838 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/kxKTpXt8La6Z.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             137214
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   6123    756  1240/1108/89     100/5     2   13   18.99)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 93 := 127&93
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 93 := 94 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 127&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1 := 94 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 48 := 127&93
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 127&1
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 127&1
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 127&1
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 127&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1 := 94 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 127&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1 := 204 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 127 := 127&313
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 127&1
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 2 := 127&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 2 := 94 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 2 := 127&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 2 := 94 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 127&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1 := 204 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 93 := 127&93
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 93 := 94 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 93 := 127&93
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 93 := 94 << 7
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 127 := 127&12032
(smt.stats    1    202   8570   1983  1779/1602/105     193/12     5   16   19.29)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 127 := 127&12032
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 126 := 127&12032
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 124 := 127&12032
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 120 := 127&12032
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 112 := 127&12032
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 127&12032
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 46 := 47 << 8
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 127&12032
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 46 := 47 << 8
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 127&256
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 127&7424
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 2 := 127&7424
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 4 := 127&7424
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 8 := 127&7424
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 8 := 127&7424
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 32 := 127&7424
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 64 := 127&7424
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 127&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 3377699720527871 := 3377699720527872 << 8
(smt.stats    2    313  10910   3802  1918/1728/151     300/14     8   31   19.58)
(smt.stats    3    414  13364   6595  2133/1924/156     396/21     9   31   19.70)
(smt.stats    4    525  13865   8408  2233/2016/157     497/21     9   31   19.70)
(smt.stats    5    647  14062  11700  2466/2225/158     599/42    11   48   19.80)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14607  14405  2529/2285/159     669/42    11   48   19.80)
(smt.stats    7    859  17130  16989  2531/2287/159     782/46    12   51   19.95)
(smt.stats    8    981  19040  20427  2546/2302/160     905/48    13   52   19.95)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 128 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 256 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 512 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1024 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 2048 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 4096 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 8192 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 4096 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 8192 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 16384 := 18014398509481983&18014398509481984
(smt.stats    9   1115  20162  22124  2743/2324/162    1058/58    14   53   20.35)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509482048
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68641 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509481984
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509482016
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509483040
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509484064
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509483008
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509485088
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509485088
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509485088
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509548576
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68640 := 18014398509481983&18014398509550624
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 18014398509550624 := 844424930131860 << 54
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509483008
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509483072
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509485120
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550592
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 18014398509550656 := 562949953421350 << 54
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 18014398509550656 := 562949953421350 << 54
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550592
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 18014398509550656 := 562949953421460 << 54
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550592
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509681728
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509681728
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550592
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550592
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550592
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 68672 := 18014398509481983&18014398509550656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 18014398509550656 := 844424930131860 << 54
(smt.stats   10   1216  21035  24616  2878/2606/249    1386/70    14   53   20.54)
(smt.stats   11   1327  22894  29416  2979/2733/257    1778/359    16   97   20.64)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 35184372088831&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1044835113549955072 := 1407374883553338 << 45
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 35184372088831&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 3026418949592973312 := 1407374883553448 << 45
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 35184372088831&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1044835113549955072 := 1407374883553338 << 45
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 35184372088831&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 324259173170675712 := 1407374883594258 << 45
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 35184372088831&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 684547143360315392 := 1407374884136998 << 45
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 35184372088831&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 703687443349504 << 46
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 35184372088831&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 703687443349504 << 46
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 35184372088831&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 3422682781 := 18436610987917824 << 46
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  24520  32519  3068/2820/276    1877/411    17  146   20.83)
(smt.stats   13   1583  27631  41303  3140/2879/279    2119/471    18  157   20.93)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 9007199254740991&1
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 9007199254740991&1
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 9007199254740991&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1 := 2097152 << 53
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 9007199254740991&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1 := 2097152 << 53
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 9007199254740991&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1 := 2097152 << 53
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 9007199254740991&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 0 := 13312 << 53
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 9007199254740991&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 8912895 := 34816 << 54
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 9007199254740991&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 0 := 69632 << 53
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 9007199254740991&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 8912895 := 34816 << 54
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 9007199254740991&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 0 := 1139712 << 53
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 9007199254740991&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 35184373149697 := 35184373149696 << 54
(smt.stats   14   1730  29479  45932  3329/3022/292    2276/484    19  157   21.12)
(smt.stats   15   1831  30923  49121  3498/3177/292    2392/485    19  157   21.12)
(smt.stats   16   1942  32401  54321  3586/3320/293    2498/499    20  161   21.23)
ramon: poll                 wall=1.000s usage=0.905s mem=22584KiB load=0.91 rootload=0.89
(smt.stats   17   2064  35691  59832  3599/3333/295    2613/503    21  165   21.23)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 216172782113783808 := 2329895322523706 << 36
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 216172782113783808 := 2329895322523706 << 36
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 216172782113783808 := 2329895321999446 << 36
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 216172782113783808 := 2330689773510706 << 36
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 216172782113783808 := 2330689773511806 << 36
(smt.stats   18   2198  37066  63727  3808/3337/295    2752/512    22  173   21.33)
(smt.stats   19   2345  38165  66799  4034/3566/300    2906/512    22  173   21.79)
(smt.stats   20   2506  39595  69674  4581/4057/300    3071/526    23  174   21.79)
ramon: poll                 wall=2.000s usage=1.905s mem=23260KiB load=1.00 rootload=0.99
(smt.stats   21   2607  40012  70578  4804/4401/300    3173/527    23  174   21.88)
(smt.stats   22   2718  40956  72124  5134/4725/300    3289/532    23  174   21.98)
(smt.stats   23   2840  42832  78308  5297/4965/300    3411/532    23  174   22.18)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 68719476735 := 18053465936232448 << 37
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 68719476735 := 18053465936232448 << 37
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 68719476735 := 18053465936232448 << 37
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 68719476735&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 4430757888 := 4430757888 << 37
(smt.stats   24   2974  44103  80861  5454/5043/301    3539/546    24  179   22.27)
(smt.stats   25   3121  48237  90392  5463/5194/309    3682/543    25  189   22.27)
(smt.stats   26   3282  50077  93786  5694/5317/310    3897/561    26  189   22.46)
ramon: poll                 wall=3.000s usage=2.904s mem=23960KiB load=1.00 rootload=1.00
(smt.stats   27   3459  51475  97228  6037/5478/310    4090/562    26  189   22.56)
(smt.stats   28   3560  54809 102357  6044/5775/310    4205/562    26  189   22.56)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 2017612633061982208 := 48976645947654254 << 2
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 2017612633061982208 := 48976645947654254 << 2
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 2017612633061982208 := 48976645947654254 << 2
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 2017612633061982208 := 48976645947654254 << 2
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 1 := 3&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 1981583836043018241 := 48976645947654254 << 2
(smt.stats   29   3671  57558 110919  6087/5780/310    4432/564    26  189   22.56)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 2 := 3&15762598695797176
(smt.stats   30   3793  60740 116818  6112/5834/316    4587/693    27  190   22.68)
(smt.stats   31   3927  62761 118808  6252/5842/321    4766/707    28  192   22.89)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  67158 129739  6395/6112/322    5115/707    28  192   22.89)
ramon: poll                 wall=4.000s usage=3.903s mem=24356KiB load=1.00 rootload=1.00
(smt.stats   33   4235  73465 151131  6434/6158/325    5332/811    30  202   23.00)
(smt.stats   34   4412  77824 160282  6842/6201/326    5690/812    30  202   23.19)
(smt.stats   35   4606  86165 180373  6895/6623/328    6641/1234    31  207   23.19)
(smt.stats   36   4707  87337 190697  7013/6632/329    6776/1239    31  207   23.40)
ramon: poll                 wall=5.000s usage=4.903s mem=24868KiB load=1.00 rootload=1.00
(smt.stats   37   4818  87629 191504  7096/6798/329    6884/1253    32  210   23.59)
(smt.stats   38   4940  88293 196380  8012/7294/329    7098/1259    32  210   23.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 6)
(smt.stats   39   5074  92203 206723  8086/7779/329    7433/1260    32  210   23.68)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   40   5221 102090 217390  8091/7817/329    7638/1260    32  210   23.68)
(smt.stats   41   5382 110341 234307  8120/7846/330    7833/1355    33  211   23.78)
ramon: poll                 wall=6.000s usage=5.902s mem=25380KiB load=1.00 rootload=1.00
(smt.stats   42   5559 115513 248569  8156/7882/331    8277/1355    33  211   23.78)
(smt.stats   43   5753 122714 267625  8232/7904/332    8577/1479    34  213   23.98)
(smt.stats   44   5966 126132 274744  8478/8066/332    8917/1556    35  219   23.98)
(smt.stats   45   6067 127930 278940  8546/8209/332    9120/1557    35  219   23.98)
(smt.stats   46   6178 131137 291828  8648/8292/332    9298/1560    35  219   23.98)
ramon: poll                 wall=7.000s usage=6.902s mem=25636KiB load=1.00 rootload=1.00
(smt.stats   47   6300 133323 295995  8819/8386/332    9455/1567    35  219   24.10)
(smt.stats   48   6434 135320 303665  9110/8642/332    9610/1576    35  219   24.10)
(smt.stats   49   6581 139278 318394  9177/8891/332   10006/1577    35  219   24.10)
(smt.stats   50   6742 142023 336293  9276/8960/334   10189/1853    36  224   24.20)
ramon: poll                 wall=8.000s usage=7.902s mem=25836KiB load=1.00 rootload=1.00
(smt.stats   51   6919 143382 337985  9584/9004/334   10391/1857    36  224   24.54)
ramon: poll                 wall=9.000s usage=8.902s mem=26348KiB load=1.00 rootload=1.00
(smt.stats   52   7113 149264 352413 10032/9754/335   10767/1879    37  225   24.74)
(smt.stats   53   7326 154417 366012 10256/9769/335   11303/1881    37  225   24.74)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   54   7560 159039 380624 10345/10026/335   11805/1881    37  225   24.83)
(smt.stats   55   7661 161293 392643 10394/10068/335   12056/1881    37  225   24.93)
ramon: poll                 wall=10.000s usage=9.901s mem=26860KiB load=1.00 rootload=1.00
(smt.stats   56   7772 163438 407162 10644/10168/335   12278/1882    37  225   25.02)
(smt.stats   57   7894 165965 422773 10674/10377/335   12445/1883    37  225   25.02)
(smt.stats   58   8028 169287 436986 10721/10412/335   13104/1883    37  225   25.12)
(smt.stats   59   8175 172678 445293 10933/10451/336   13497/2123    38  227   25.12)
ramon: poll                 wall=11.000s usage=10.898s mem=26968KiB load=1.00 rootload=1.00
(smt.stats   60   8336 176610 454972 11117/10686/336   13984/2128    38  227   25.32)
(smt.stats   61   8513 181028 462473 11283/10938/336   14347/2129    38  227   25.42)
(smt.stats   62   8707 189124 493775 11381/11046/338   14957/2426    39  233   25.42)
(smt.stats   63   8920 199967 563238 11415/11126/338   15350/2427    39  233   25.52)
ramon: poll                 wall=12.000s usage=11.898s mem=27316KiB load=1.00 rootload=1.00
(smt.stats   64   9155 208662 603706 11439/11158/338   16198/2427    39  233   25.52)
(smt.stats   65   9412 220027 659509 11473/11179/338   17083/2429    39  233   25.64)
(smt.stats   66   9513 222587 675158 11479/11201/341   17345/2787    40  248   25.74)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 72 := 2147483647&184
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 72 := 2147483647&184
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 88 := 2147483647&184
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 112 := 2147483647&184
(smt.stats   67   9624 224995 687487 11519/11209/341   17496/2788    40  248   25.83)
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 112 := 2147483647&184
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 56 := 2147483647&184
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 56 := 2147483647&184
band: (band[55] (if (or #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #856)) (shl[64] (* 2 #114) (mod #898 64))) 184 := 2147483647&184
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #895 #897) 64)) 184 := 46 << 31
(smt.stats   68   9746 227777 699189 11661/11250/361   17731/2790    40  248   25.93)
(smt.stats   69   9880 230490 717900 11761/11459/381   18217/2835    41  295   26.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 859)
(smt.stats   70  10027 234537 730424 11842/11513/381   17730/2836    41  295   26.16)
ramon: poll                 wall=13.000s usage=12.897s mem=27928KiB load=1.00 rootload=1.00
(smt.stats   71  10188 239729 757458 11965/11565/381   18238/2923    42  295   26.35)
(smt.stats   72  10365 245352 786094 12159/11706/381   18486/2925    42  295   26.45)
(smt.stats   73  10559 250742 800005 12376/11931/381   18824/2926    42  295   26.54)
ramon: poll                 wall=14.003s usage=13.901s mem=28160KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10772 263190 844657 12493/12125/381   19127/2926    42  295   26.64)
(smt.stats   75  11006 272572 877127 12586/12293/387   19997/3144    43  312   26.73)
(smt.stats   76  11263 284582 935743 12603/12310/387   20582/3144    43  312   26.83)
ramon: poll                 wall=15.000s usage=14.897s mem=28732KiB load=1.00 rootload=1.00
(smt.stats   77  11545 297378 973380 12631/12320/387   21521/3148    43  312   27.07)
(smt.stats   78  11646 302992 996045 12634/12341/387   21684/3148    43  312   27.07)
(smt.stats   79  11757 308047 1019583 12639/12346/387   21865/3148    43  312   27.07)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   80  11879 312551 1042853 12686/12347/387   22134/3153    43  312   27.28)
(smt.stats   81  12013 315745 1057624 12765/12457/387   22539/3153    43  312   27.38)
ramon: poll                 wall=16.000s usage=15.897s mem=29244KiB load=1.00 rootload=1.00
(smt.stats   82  12160 322819 1079532 12908/12477/387   23006/3154    43  312   27.38)
(smt.stats   83  12321 330456 1092006 12930/12637/387   23283/3154    43  312   27.38)
(smt.stats   84  12498 340598 1122813 12930/12637/387   23518/3154    43  312   27.51)
(smt.stats   85  12692 352164 1166468 12971/12642/387   23803/3156    43  312   27.51)
ramon: poll                 wall=17.000s usage=16.897s mem=29244KiB load=1.00 rootload=1.00
(smt.stats   86  12905 360121 1202430 13213/12747/387   24360/3161    43  312   27.60)
(smt.stats   87  13139 366210 1215067 13271/12960/388   25091/3690    44  325   27.70)
(smt.stats   88  13396 377187 1253040 13290/12997/389   25730/3690    44  325   27.79)
(smt.stats   89  13678 391211 1281732 13297/13004/389   26117/3747    45  329   27.79)
ramon: poll                 wall=18.000s usage=17.896s mem=29584KiB load=1.00 rootload=1.00
(smt.stats   90  13988 407088 1328616 13308/13015/390   26829/3747    45  329   27.79)
(smt.stats   91  14089 411191 1337802 13374/13016/390   26983/3864    46  332   27.92)
(smt.stats   92  14200 415411 1356295 13502/13107/390   27332/3864    46  332   28.01)
ramon: poll                 wall=19.000s usage=18.896s mem=29840KiB load=1.00 rootload=1.00
(smt.stats   93  14322 418969 1367656 13686/13217/390   27690/3866    46  332   28.13)
(smt.stats   94  14456 422653 1379551 13740/13426/390   28017/3866    46  332   28.13)
(smt.stats   95  14603 429430 1387449 13755/13462/390   28229/3866    46  332   28.23)
(smt.stats   96  14764 441140 1503868 13759/13466/391   28383/3938    47  336   28.23)
(smt.stats   97  14941 447362 1528499 13795/13494/391   29248/3938    47  336   28.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 2279)
ramon: poll                 wall=20.000s usage=19.896s mem=30096KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:55:13 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.970s
ramon: group.utime          19.954s
ramon: group.stime          0.016s
ramon: group.mempeak        30352KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              0.99
