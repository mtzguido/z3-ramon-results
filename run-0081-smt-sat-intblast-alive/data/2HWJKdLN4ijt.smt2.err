ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:24:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30280 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1411
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2HWJKdLN4ijt.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             223738
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   218/218     0/0  61       0    18.52   0.00)
(sat.stats    156    581    0   218/218   156/63  61       0    18.82   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 399 :time 0.00)
(sat.stats    156    581    0   218/218   156/63  61       0    18.82   0.00)
(sat.stats    156    581    0   218/218   156/63  61       0    18.82   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 512418.82 :time 0.00)
(sat.stats    156    581    0   218/218   156/65  61       0    18.82   0.01)
(sat.stats    159    603    1   218/218   159/66  61       0    18.82   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    162    618    2   218/218   162/69  61       0    18.82   0.01)
(sat.stats    165    642    3   218/218   165/72  61       0    18.82   0.01)
(sat.stats    168    674    4   218/218   168/75  61       0    18.82   0.01)
(sat.stats    171    705    5   218/218   171/78  61       0    18.82   0.01)
(sat.stats    189    812    6   218/218   189/89  61       0    18.82   0.01)
(sat.stats    206    968    7   218/218   206/100  61       0    18.92   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    261   1938    8   218/218   261/128  61       0    18.92   0.01)
(sat.stats    264   1969    9   218/218   264/128  61       0    18.92   0.01)
(sat.stats    267   2001   10   218/218   267/129  61       0    18.92   0.01)
(sat.stats    270   2082   11   218/218   270/132  61       0    18.92   0.01)
(sat.stats    273   2176   12   218/218   273/135  61       0    18.92   0.01)
(sat.stats    276   2339   13   218/218   276/138  61       0    18.92   0.01)
 (sat-cleaner :elim-literals 65 :elim-clauses 0 :cost 990 :time 0.00)
(sat.stats    350   3713   21   267/267   352/224  62       0    19.56   0.41)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1116 :time 0.00)
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 1476 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    545   5507   35  1289/1289   551/240  71       0    19.76   0.75)
 (sat-cleaner :elim-literals 26 :elim-clauses 0 :cost 2145 :time 0.00)
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 29542 := 25 << 25
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2397 :time 0.00)
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 185 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 8800 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 1009344 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 1964160 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 7804416 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 16750592 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 2617344 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 5160960 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 6291456 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 4194304 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 8388608 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 16777216 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 1277952 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 1114112 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 1966080 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 262144 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 1572864 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 1048576 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 8192 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 1024 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 256 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 2 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 4 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 8 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 16 := 16777216&838860800
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
shl: (shl[64] (bv2int %0) (mod (+ #59 #292) 64)) 838915767 := 25 << 25
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 937 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 9254 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 23068 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 67784 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 53040 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 493568 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 1581056 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 10977280 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 524288 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 7340032 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 4194304 := 838860800&16777216
(sat.stats    756  15065   38  2048/2048   764/323  78       0    21.38   0.86)
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 8388608 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 16777216 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 2097152 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 393216 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 4096 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 16384 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 65536 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 262144 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 896 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 96 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 64 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 768 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 1536 := 838860800&16777216
band: (band[43] (if (= #547 42) 1 (if #549 2 #631)) (shl[43] (bv2int %0) (mod #59 43))) 0 := 16777216&838860800
band: (band[43] (shl[64] (bv2int %0) (mod #293 64)) (if (= #651 63) 0 (if #653 1 #777))) 1024 := 838860800&16777216
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4033 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 4302 :time 0.00)
ramon: poll                 wall=1.000s usage=0.998s mem=23860KiB load=1.00 rootload=0.98
ramon: poll                 wall=2.005s usage=2.001s mem=33672KiB load=1.00 rootload=1.00
(sat.stats   1200  19884   77 47078/47078  1302/449 404       0    33.73   2.42)
ramon: poll                 wall=3.000s usage=2.995s mem=37808KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6969 :time 0.00)
ramon: poll                 wall=4.000s usage=3.993s mem=39692KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7874 :time 0.00)
ramon: poll                 wall=5.000s usage=4.992s mem=39772KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 8077 :time 0.00)
ramon: poll                 wall=6.000s usage=5.991s mem=39924KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 22 :elim-clauses 0 :cost 8630 :time 0.00)
ramon: poll                 wall=7.000s usage=6.990s mem=40136KiB load=1.00 rootload=1.00
(sat.stats   1601  35477  146 106990/106990  1883/692 413       0    40.07   7.04)
ramon: poll                 wall=8.000s usage=7.988s mem=41980KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.987s mem=42220KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.986s mem=42240KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.984s mem=43456KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.983s mem=45412KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.982s mem=45520KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.981s mem=45664KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.980s mem=46592KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.978s mem=47252KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.977s mem=48892KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.976s mem=50332KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14751 :time 0.00)
ramon: poll                 wall=19.000s usage=18.975s mem=53280KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.971s mem=53696KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:25:17 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.984s
ramon: group.utime          19.948s
ramon: group.stime          0.036s
ramon: group.mempeak        53956KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
