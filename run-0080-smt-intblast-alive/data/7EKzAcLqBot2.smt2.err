ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:38:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30277 MiB
ramon: sys.mem.avail        61766 MiB
ramon: sys.nprocs           1275
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7EKzAcLqBot2.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4074842
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4755    483  1198/1013/97     100/14     5   14   19.17)
(smt.stats    1    202   5084    775  1984/1774/98     207/15     6   16   19.56)
(smt.stats    2    313   6742   1696  2235/2051/104     340/29     8   26   19.56)
(smt.stats    3    414   8227   2362  2406/2128/104     450/30     8   26   19.65)
(smt.stats    4    525   8583   4587  2717/2265/109     574/69     9   29   19.75)
(smt.stats    5    647   9887   6902  2882/2628/112     710/115    11   35   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  10320   7751  3009/2706/112     827/116    11   35   19.84)
ramon: poll                 wall=1.000s usage=0.985s mem=21020KiB load=0.98 rootload=0.98
(smt.stats    7    859  11138   8826  3137/2836/112     969/119    11   35   19.94)
(smt.stats    8    981  11995  10706  3239/2963/112    1100/122    11   35   19.94)
(smt.stats    9   1115  13825  14048  3318/3044/112    1240/122    11   35   19.94)
(smt.stats   10   1216  15826  17051  3390/3166/113    1366/192    12   38   20.04)
(smt.stats   11   1327  17676  18175  3415/3189/113    1476/192    12   38   20.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  20526  20579  3420/3196/114    1603/203    13   39   20.15)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1087&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1087&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1092&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1092&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1089 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1936&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1092&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1096&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1104&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1120&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1104&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1104&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1120&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1120&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1152&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1152 := 1154&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1152 := 1920&1099511627775
(smt.stats   13   1583  22110  23348  3494/3203/122    1763/248    14   45   20.44)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1087&1099511627775
(smt.stats   14   1730  22586  23743  3491/3264/192    1913/253    15   59   20.64)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 64 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 64 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 64 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 960 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 892 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 64 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 32&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 128&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 128&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 256&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 512&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1028&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1048 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1040 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1056 := 1060&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 260 := 512&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 4 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 260 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 260 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 260 := 516&1099511627775
(smt.stats   15   1831  25053  31697  4103/3849/267    2076/315    17   83   20.83)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 516 := 580&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 60 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 36 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 516 := 518&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 542 := 646&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 534 := 646&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 518 := 646&1099511627775
(smt.stats   16   1942  27223  39257  4199/3972/285    2368/363    19   92   21.00)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16384&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 32768&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16384&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
(smt.stats   17   2064  30779  45596  4257/3982/286    2594/513    20   94   21.09)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 6144&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 10240&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16384&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 65536&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 131072&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 262144&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 524288&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 524288&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 1048576&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 524288&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 1048576&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 2097152&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 1048576&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4194304&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4194304&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8388608&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8388608&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4194304&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16777216&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4194304&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16777216&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 33554432&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16777216&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 33554432&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 67108864&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16777216&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 67108864&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 134217728&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 134217728&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 268435456&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 67108864&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 134217728&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 268435456&2199023255551
(smt.stats   18   2198  32450  53024  4419/4021/326    2858/517    20   94   22.17)
(smt.stats   19   2345  33075  53970  4695/4328/471    3220/562    21  131   22.28)
(smt.stats   20   2506  37454  71016  5100/4867/476    4167/778    22  133   22.69)
ramon: poll                 wall=2.000s usage=1.967s mem=24116KiB load=0.98 rootload=0.97
(smt.stats   21   2607  43338  95159  5336/4952/476    5033/1241    23  140   22.78)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 9 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 17 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 17 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 9 := 4026662913&4398046511103
(smt.stats   22   2718  48249 113679  5475/5217/500    5417/1686    25  153   23.01)
(smt.stats   23   2840  52146 126639  5632/5275/500    5655/1690    25  153   23.11)
(smt.stats   24   2974  55917 136831  5854/5607/502    6646/1732    26  154   23.20)
(smt.stats   25   3121  69299 174833  5858/5609/504    6880/2149    27  159   23.31)
(smt.stats   26   3282  80574 212074  5966/5643/506    7406/2473    29  174   23.41)
(smt.stats   27   3459  86739 237862  6385/6138/510    8674/2689    30  175   23.69)
ramon: poll                 wall=3.000s usage=2.946s mem=25124KiB load=0.98 rootload=0.97
(smt.stats   28   3560  92897 258120  6457/6154/512    8866/2696    30  175   23.79)
(smt.stats   29   3671  95769 266681  6589/6342/514    9113/2846    31  191   23.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   30   3793 101701 295694  6732/6407/527   10195/2942    33  199   23.98)
(smt.stats   31   3927 105013 313841  6827/6581/531   10659/3439    34  239   23.98)
ramon: poll                 wall=4.000s usage=3.926s mem=25924KiB load=0.98 rootload=0.98
(smt.stats   32   4075 110140 326102  7001/6745/532   11136/3713    35  244   24.06)
(smt.stats   33   4236 113951 358719  7140/6892/533   11388/3936    36  246   24.16)
(smt.stats   34   4413 121437 430135  7142/6896/533   11750/3936    36  246   24.30)
(smt.stats   35   4607 126809 456372  7419/6916/534   12280/4138    37  252   24.40)
ramon: poll                 wall=5.000s usage=4.908s mem=25940KiB load=0.98 rootload=0.98
(smt.stats   36   4708 129446 476439  7719/7269/534   12571/4147    37  252   24.50)
(smt.stats   37   4819 132954 496695  8050/7524/535   12884/4326    38  266   24.50)
(smt.stats   38   4941 135760 511258  8280/8022/539   13484/4369    39  271   24.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 82)
(smt.stats   39   5075 141290 535394  8349/8093/546   13837/4431    40  281   24.83)
ramon: poll                 wall=6.000s usage=5.889s mem=26480KiB load=0.98 rootload=0.98
(smt.stats   40   5222 145148 553022  8433/8128/546   14350/4564    41  319   25.12)
(smt.stats   41   5383 148290 573438  8826/8315/546   14928/4570    41  319   25.22)
(smt.stats   42   5560 156046 616115  9034/8753/550   15740/4967    42  328   25.32)
ramon: poll                 wall=7.000s usage=6.872s mem=26808KiB load=0.98 rootload=0.98
(smt.stats   43   5754 163005 653890  9322/8802/550   16442/5346    43  354   25.51)
(smt.stats   44   5967 170998 686584  9736/9482/551   16921/5614    44  358   25.60)
(smt.stats   45   6068 175142 711228  9774/9487/553   17679/5617    44  358   25.60)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 2048&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #325) 64)) 2048 := 603 << 1
(smt.stats   46   6179 180051 715638  9798/9532/553   17787/5855    45  368   25.72)
(smt.stats   47   6301 183506 739377  9839/9558/558   17970/5855    45  368   25.82)
ramon: poll                 wall=8.000s usage=7.859s mem=27372KiB load=0.99 rootload=0.98
(smt.stats   48   6435 185448 748452  9977/9664/561   18265/5865    46  369   26.03)
(smt.stats   49   6582 187440 770720 10139/9853/563   18504/5865    46  369   26.13)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   50   6743 194969 830268 10342/10022/567   19214/5909    47  410   26.33)
(smt.stats   51   6920 203174 877513 10351/10031/570   19775/6175    49  436   26.42)
(smt.stats   52   7114 209865 894642 10409/10055/572   20259/6179    49  436   26.52)
ramon: poll                 wall=9.002s usage=8.863s mem=28140KiB load=1.00 rootload=1.00
(smt.stats   53   7327 218782 924669 10558/10127/572   20606/6292    50  467   26.61)
(smt.stats   54   7561 232651 987132 10597/10277/580   21609/6383    51  472   27.03)
(smt.stats   55   7662 237639 1000355 10636/10310/581   21823/6581    52  513   27.03)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   56   7773 243869 1025863 10803/10428/582   22015/6588    52  513   27.03)
(smt.stats   57   7895 250854 1055432 10955/10632/584   22305/6618    54  536   27.14)
ramon: poll                 wall=10.000s usage=9.859s mem=28908KiB load=1.00 rootload=1.00
(smt.stats   58   8029 259762 1076876 10975/10650/584   22677/6618    54  536   27.14)
(smt.stats   59   8176 269906 1136051 11078/10699/585   23308/6829    55  554   27.26)
(smt.stats   60   8337 277682 1176176 11256/10770/585   23978/6836    55  554   27.45)
(smt.stats   61   8514 284890 1205765 11400/10957/585   24691/6838    55  554   27.64)
ramon: poll                 wall=11.000s usage=10.859s mem=29420KiB load=1.00 rootload=1.00
(smt.stats   62   8708 294806 1294215 11442/11121/586   27307/7200    56  559   27.93)
(smt.stats   63   8921 301491 1325130 11572/11147/586   27682/7203    56  559   28.14)
ramon: poll                 wall=12.000s usage=11.859s mem=29864KiB load=1.00 rootload=1.00
(smt.stats   64   9155 310762 1399229 11695/11289/586   28714/7207    56  559   28.23)
ramon: poll                 wall=13.000s usage=12.859s mem=30572KiB load=1.00 rootload=1.00
(smt.stats   65   9412 319091 1448232 11874/11405/586   29449/7214    56  559   28.42)
(smt.stats   66   9513 320537 1478727 11881/11563/586   30245/7214    56  559   28.42)
(smt.stats   67   9624 326119 1542084 11882/11564/586   30432/7214    56  559   28.54)
(smt.stats   68   9746 330709 1579268 11886/11568/586   30950/7214    56  559   28.54)
(smt.stats   69   9880 339028 1632221 11958/11568/586   31352/7218    56  559   28.64)
ramon: poll                 wall=14.000s usage=13.858s mem=30572KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 347093 1678670 12013/11645/586   32002/7223    56  559   28.73)
(smt.stats   71  10188 358504 1719970 12158/11699/586   32379/7226    56  559   28.73)
ramon: poll                 wall=15.000s usage=14.858s mem=30600KiB load=1.00 rootload=1.00
(smt.stats   72  10365 365613 1760119 12294/11850/586   32854/7228    56  559   28.84)
(smt.stats   73  10559 373599 1816603 12391/11985/586   33570/7229    56  559   28.94)
ramon: poll                 wall=16.002s usage=15.862s mem=30600KiB load=1.00 rootload=1.00
(smt.stats   74  10772 382736 1866442 12580/12111/587   33903/8534    57  559   29.04)
(smt.stats   75  11006 391963 1934769 12737/12415/588   34872/8614    58  569   29.04)
ramon: poll                 wall=17.000s usage=16.857s mem=30816KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   76  11263 405862 1990004 13029/12498/589   35440/8621    58  569   29.23)
(smt.stats   77  11545 413891 2036089 13168/12763/589   36326/8801    59  569   29.33)
ramon: poll                 wall=18.000s usage=17.857s mem=31072KiB load=1.00 rootload=0.99
(smt.stats   78  11646 417913 2056385 13348/12905/589   36512/8802    59  569   29.33)
(smt.stats   79  11757 421805 2078792 13521/13034/589   36750/8802    59  569   29.42)
(smt.stats   80  11879 426131 2106596 13632/13216/589   37008/8804    59  569   29.42)
(smt.stats   81  12013 430697 2125423 13664/13330/589   37325/8805    59  569   29.52)
ramon: poll                 wall=19.000s usage=18.857s mem=31328KiB load=1.00 rootload=1.00
(smt.stats   82  12160 437470 2161161 13671/13353/590   37971/9197    60  570   29.52)
(smt.stats   83  12321 445971 2217077 13744/13363/590   38660/9198    60  570   29.98)
(smt.stats   84  12498 454989 2275404 13776/13458/591   41719/9559    61  593   30.36)
ramon: poll                 wall=20.000s usage=19.856s mem=32276KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:39:04 2024
ramon: root.execname        z3
ramon: root.utime           19.820s
ramon: root.stime           0.030s
ramon: group.total          19.866s
ramon: group.utime          19.827s
ramon: group.stime          0.040s
ramon: group.mempeak        32280KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              0.99
