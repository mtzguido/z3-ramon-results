ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:25:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         12565 MiB
ramon: sys.mem.avail        62132 MiB
ramon: sys.nprocs           1174
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/innd_innd_vc32659.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1361330
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2910 #2905 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2936 #3265 bv[0:8]) (extract[7:0] v67057336)) (if (and #1742 #2902) (if #1768 v52145336 bv[0:8]) (extract[7:0] v59259004)))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       2     58       125     10000        20          0            2       36)
(sat.ddfw       2     94   63.3101     20003        43          1            2       44)
(sat.ddfw       2    159   64.0929     40000        88          2            2       48)
(sat.ddfw       2    253   55.8659     70000       153          3           17       52)
(sat.ddfw       2    258   69.6864    110000       162          4            5    26053)
(sat.ddfw       0      1    46.109    143844       204          5            0    35966)
ramon: end                  Mon Dec 30 12:25:45 2024
ramon: root.execname        z3
ramon: root.utime           0.720s
ramon: root.stime           0.010s
ramon: group.total          0.735s
ramon: group.utime          0.727s
ramon: group.stime          0.008s
ramon: group.mempeak        19176KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             0.766s
ramon: loadavg              0.96
