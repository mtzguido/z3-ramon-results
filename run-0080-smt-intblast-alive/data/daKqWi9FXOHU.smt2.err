ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:43:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25164 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1400
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/daKqWi9FXOHU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             101249
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2529    218   702/635/106     108/12     4   17   18.96)
(smt.stats    1    202   4502   1507  1105/973/107     289/14     5   19   18.96)
(smt.stats    2    313   6249   3582  1477/1294/110     472/85     6   25   19.06)
(smt.stats    3    414   7751   5965  1501/1375/120     613/102     7   26   19.15)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 3586&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 3586&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 3586&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 3586&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3072 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2048 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 29007872&3585
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 268435455 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 1 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 29007872&3585
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 29007873 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975106&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975106&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975107&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8 := 28975105&224
(smt.stats    4    525   8802   7751  1585/1440/164     836/122     8   57   19.45)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 224 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 192 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 28975232&224
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 297410688 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975231&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975168&224
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 297410624 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975168&224
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 297410624 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 192 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 1 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 3536 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 0 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 0 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 224 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 223 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 30 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 11 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 11 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 10 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32 := 1810944&224
(smt.stats    5    647  10337  12455  1718/1581/320    1026/168    11   94   19.93)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8192 := 8353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16384 := 16545&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8192 := 8353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8192 := 8353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16384 := 16545&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32768 := 32929&229456
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 536903841 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32768 := 32929&229456
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 536903841 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32768 := 32959&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 6273&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 3585&229456
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 536874497 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 6335&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 6319&229456
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 1879054511 := 3547 << 19
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  12124  15516  1831/1680/352    1355/215    12  103   20.22)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 1816064 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 1816064 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 256 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 512 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1024 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2048 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16384 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32768 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32768 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16384 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2048 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2048 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2048 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1024 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1024 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1024 := 249036800&229456
(smt.stats    7    859  14017  19568  2001/1701/352    1607/227    12  103   21.01)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 49152 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 40960 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 40960 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 40960 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 40960 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 33152 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 33152 := 249036800&229456
(smt.stats    8    981  16487  24009  2179/1916/469    1845/264    13  121   21.19)
(smt.stats    9   1115  22090  34289  2255/2069/480    2403/327    14  129   21.58)
(smt.stats   10   1216  25708  45401  2297/2092/480    2647/424    15  147   21.67)
ramon: poll                 wall=1.000s usage=0.930s mem=23240KiB load=0.93 rootload=0.91
(smt.stats   11   1327  29867  53759  2313/2138/482    2948/518    16  151   21.87)
(smt.stats   12   1449  35697  65438  2351/2168/482    3153/518    16  151   21.96)
(smt.stats   13   1584  38453  73940  2374/2183/502    3383/736    18  258   22.16)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&0
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 1 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&57364
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 17 << 17
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&917827
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 21 << 21
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&14685247
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 25 << 25
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&14
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 5 << 5
(smt.stats   14   1731  41905  83553  2518/2239/504    3706/740    18  258   22.36)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&28
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 6 << 6
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&896
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 11 << 11
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&56
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 7 << 7
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&112
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 8 << 8
(smt.stats   15   1832  44573  90940  2715/2389/529    3991/764    19  269   22.45)
(smt.stats   16   1943  47623  98282  2774/2566/555    4468/793    20  273   22.90)
ramon: poll                 wall=2.000s usage=1.930s mem=25032KiB load=1.00 rootload=1.00
(smt.stats   17   2065  52448 106229  2854/2577/556    4861/880    21  302   23.09)
(smt.stats   18   2199  56571 122203  3009/2766/560    5195/987    23  312   23.34)
ramon: poll                 wall=3.000s usage=2.930s mem=25288KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   19   2346  60502 140830  3144/2927/562    5718/1057    24  315   23.52)
ramon: poll                 wall=4.000s usage=3.930s mem=25544KiB load=1.00 rootload=1.00
(smt.stats   20   2507  63094 149088  3344/2943/562    6011/1063    24  315   23.71)
(smt.stats   21   2608  66246 157397  3554/3261/562    6278/1071    24  315   23.71)
(smt.stats   22   2719  69598 164281  3729/3378/563    6458/1136    25  317   23.81)
ramon: poll                 wall=5.003s usage=4.934s mem=25544KiB load=1.00 rootload=1.01
(smt.stats   23   2841  72737 175201  3966/3549/563    6762/1140    25  317   23.90)
(smt.stats   24   2975  76939 191885  3987/3776/564    7571/1315    26  320   24.00)
(smt.stats   25   3122  80851 214550  3997/3786/568    8206/1315    26  320   24.09)
(smt.stats   26   3283  85600 230216  4013/3789/568    8767/1501    27  357   24.25)
ramon: poll                 wall=6.000s usage=5.930s mem=26056KiB load=1.00 rootload=0.99
(smt.stats   27   3460  90428 256122  4036/3825/570    9222/1614    28  360   24.35)
(smt.stats   28   3561  92857 269705  4090/3855/571    9650/1619    28  360   24.35)
(smt.stats   29   3672  95699 283255  4292/3883/571    9999/1683    29  371   24.44)
(smt.stats   30   3794  99065 302293  4378/4123/571   10490/1684    29  371   24.54)
(smt.stats   31   3928 103139 321161  4398/4175/571   10957/1684    29  371   24.63)
ramon: poll                 wall=7.000s usage=6.930s mem=26056KiB load=1.00 rootload=1.00
(smt.stats   32   4075 106043 329878  4494/4195/572   11483/1754    30  375   24.54)
(smt.stats   33   4236 109512 343221  4956/4322/572   11872/1754    30  375   24.73)
(smt.stats   34   4413 111540 354580  5278/4820/572   12462/1754    30  375   24.82)
ramon: poll                 wall=8.000s usage=7.930s mem=26568KiB load=1.00 rootload=1.00
(smt.stats   35   4607 118676 383754  5489/5097/579   13858/1946    31  381   25.12)
(smt.stats   36   4708 120704 389127  5664/5312/580   13941/2339    32  475   25.22)
(smt.stats   37   4819 123407 405228  5952/5585/580   14704/2346    32  475   25.32)
(smt.stats   38   4941 127438 430386  6099/5767/580   15513/2352    32  475   25.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 183)
ramon: poll                 wall=9.000s usage=8.930s mem=27080KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   39   5075 131810 444330  6170/5899/581   16268/2618    33  477   25.51)
(smt.stats   40   5222 137472 462606  6383/5991/581   17011/2620    33  477   25.60)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&14
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 3226468353 := 5 << 5
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&14
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 3226468353 := 5 << 5
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&0
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 3226468353 := 1 << 1
(smt.stats   41   5383 141810 487586  6513/6294/584   18107/3014    34  485   25.70)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&7
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&7
ramon: poll                 wall=10.000s usage=9.930s mem=27592KiB load=1.00 rootload=1.00
(smt.stats   42   5561 147337 506917  6688/6303/586   19223/3016    34  485   25.98)
(smt.stats   43   5755 153871 529007  6941/6520/592   19702/3026    34  485   26.18)
ramon: poll                 wall=11.000s usage=10.930s mem=27848KiB load=1.00 rootload=1.00
(smt.stats   44   5968 161697 575537  7267/6824/592   21154/3058    35  509   26.28)
(smt.stats   45   6069 163965 589609  7300/7073/592   21516/3059    35  509   26.37)
(smt.stats   46   6180 166720 606931  7474/7091/593   21940/3193    36  518   26.56)
ramon: poll                 wall=12.000s usage=11.930s mem=28360KiB load=1.00 rootload=1.00
(smt.stats   47   6303 167828 614077  7849/7631/594   22514/3195    36  518   26.66)
(smt.stats   48   6437 169955 634359  7862/7634/594   23341/3195    36  518   26.95)
(smt.stats   49   6584 174445 652275  7898/7655/594   24388/3198    36  518   27.13)
(smt.stats   50   6745 181660 691197  7948/7703/594   25227/3567    37  524   27.23)
ramon: poll                 wall=13.000s usage=12.930s mem=28932KiB load=1.00 rootload=1.00
(smt.stats   51   6922 187370 723849  8013/7785/595   26384/3660    38  526   27.42)
ramon: poll                 wall=14.000s usage=13.930s mem=29320KiB load=1.00 rootload=1.00
(smt.stats   52   7116 195319 751653  8120/7810/595   28626/3669    38  526   27.71)
(smt.stats   53   7329 205363 817116  8370/8125/604   30211/4255    39  639   27.81)
ramon: poll                 wall=15.000s usage=14.930s mem=29576KiB load=1.00 rootload=1.00
(smt.stats   54   7563 213715 858408  8574/8166/604   31274/4271    39  639   28.09)
(smt.stats   55   7664 218153 881190  8673/8396/604   31806/4664    40  642   28.09)
(smt.stats   56   7775 221773 899611  8770/8502/604   32305/4665    40  642   28.19)
ramon: poll                 wall=16.000s usage=15.930s mem=29832KiB load=1.00 rootload=0.99
(smt.stats   57   7897 225862 931247  8849/8558/604   32837/4665    40  642   28.19)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1048602&0
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 0 := 524301 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1048602&0
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 0 := 524301 << 1
(smt.stats   58   8031 228925 954678  8886/8666/611   33942/4966    41  667   28.49)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 193&3
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 193&3
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8178 233571 986170  9079/8717/611   34444/4968    41  667   28.78)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 608&3
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 608&3
(smt.stats   60   8339 237516 1019130  9314/8849/611   35354/4976    41  667   28.98)
(smt.stats   61   8516 240076 1040426  9515/9117/616   36290/4979    41  667   29.08)
ramon: poll                 wall=17.000s usage=16.930s mem=30856KiB load=1.00 rootload=1.00
(smt.stats   62   8710 244789 1096087  9791/9287/616   37325/5318    42  668   29.37)
(smt.stats   63   8923 251333 1137190 10007/9618/616   38879/5320    42  668   29.59)
ramon: poll                 wall=18.000s usage=17.930s mem=31368KiB load=1.00 rootload=1.00
(smt.stats   64   9157 262750 1187228 10333/9869/617   40530/5625    43  676   29.88)
ramon: poll                 wall=19.000s usage=18.929s mem=31624KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   65   9414 279545 1272756 10465/10118/617   41657/5625    43  676   30.24)
(smt.stats   66   9515 281611 1283512 10555/10305/617   43738/5626    43  676   30.34)
(smt.stats   67   9626 286753 1305382 10681/10323/617   44331/5635    43  676   30.43)
ramon: poll                 wall=20.000s usage=19.929s mem=32136KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:43:59 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.004s
ramon: group.utime          19.984s
ramon: group.stime          0.020s
ramon: group.mempeak        32396KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
