ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:06:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28466 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1355
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/leSnBX1uPQ18.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             525431
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   226/226     0/0  58       0    18.54   0.00)
(sat.stats    103    589    0   226/226   103/31  58       0    18.88   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 283 :time 0.00)
(sat.stats    103    589    0   226/226   103/31  58       0    18.88   0.01)
(sat.stats    103    589    0   226/226   103/31  58       0    18.88   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 357418.88 :time 0.00)
(sat.stats    103    589    0   228/228    39/30  58       0    18.88   0.01)
(sat.stats    106    596    1   228/228    42/33  58       0    18.88   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    170   1671    2   228/228   106/83  58       0    18.97   0.01)
(sat.stats    173   1730    3   228/228   109/83  58       0    18.97   0.01)
(sat.stats    176   1795    4   228/228   112/83  58       0    18.97   0.01)
(sat.stats    179   1842    5   228/228   115/84  58       0    18.97   0.01)
(sat.stats    182   1903    6   228/228   118/84  58       0    18.97   0.01)
(sat.stats    185   1982    7   228/228   121/84  58       0    18.97   0.01)
(sat.stats    188   2036    8   228/228   124/85  58       0    18.97   0.01)
(sat.stats    191   2113    9   228/228   127/86  58       0    18.97   0.01)
(sat.stats    194   2215   10   228/228   130/88  58       0    18.97   0.01)
(sat.stats    197   2340   11   228/228   133/91  58       0    18.97   0.01)
(sat.stats    200   2439   12   228/228   136/94  58       0    19.07   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    209   2721   15   228/228   145/102  58       0    19.07   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2093 :time 0.00)
(sat.stats    316   4970   28   228/228   252/140  61       0    19.27   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2621 :time 0.00)
(sat.stats    497  10163   51   231/231   432/255  63       0    19.76   0.07)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5199 :time 0.00)
lshr: (lshr[47] (bv2int %0) (mod (bv2int %0) 47)) 1 := 13 >>l 13
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 0&140582869532672
lshr: (lshr[64] (bv2int %0) (mod (+ #65 #740) 64)) 13 := 13 >>l 13
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 5750 :time 0.00)
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 17160994815 := 17160994815&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 20190 := 17160994815&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 9164 := 17160994815&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 7992 := 17160994815&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 4784 := 17160994815&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 15552 := 17160994815&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 32 := 17160994815&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 15744 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 19968 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 19712 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 1024 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 18432 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 4096 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 16384 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 8192 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 238354432 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 32768 := 17179869183&140582869532672
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 6199 :time 0.00)
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 2142765056 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 131072 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 262144 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 13971226624 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 1048576 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 2097152 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 15233712128 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 25165824 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 33554432 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 16777216 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 6845104128 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 3221225472 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 268435456 := 17179869183&140582869532672
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6423 :time 0.00)
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 536870912 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 10737418240 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 8589934592 := 17179869183&140582869532672
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 4294967296 := 17179869183&140582869532672
(sat.stats    709  20891   95   947/946   638/335 285       0    21.35   0.22)
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 17994 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 46605 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 4 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 180472 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 130784 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 16 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 666368 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 64 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 128 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 512 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 29769728 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 3072 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 14336 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 4096 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 8192 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 942440448 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 1375469568 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 131072 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 65536 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 8433172480 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 12816744448 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 13948157952 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 5968494592 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 4404019200 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 15602810880 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 16777216 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 67108864 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 2550136832 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 15300820992 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 5905580032 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 4294967296 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 1073741824 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 2147483648 := 140582869532672&17179869181
band: (band[47] (lshr[47] (bv2int %0) (mod #65 47)) (if (= #504 46) 9903520314282408880495394816 (if #506 4951760157141204440247697408 #596))) 0 := 17179869181&140582869532672
band: (band[47] (if (= #611 63) 1298074214633540886435960696340480 (if #613 649037107316770443217980348170240 #737)) (lshr[64] (bv2int %0) (mod #741 64))) 8589934592 := 140582869532672&17179869181
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 8000 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 8954 :time 0.00)
 (sat-cleaner :elim-literals 60 :elim-clauses 158 :cost 9035 :time 0.00)
(sat.stats   1065  37466  143  7984/7982   936/567 495       0    24.90   0.48)
ramon: poll                 wall=1.000s usage=0.995s mem=34704KiB load=1.00 rootload=0.97
ramon: poll                 wall=2.000s usage=1.992s mem=52452KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.989s mem=59044KiB load=1.00 rootload=0.99
(sat.stats   1598  46843  251 126404/126402  1478/661 495       0    59.71   3.34)
ramon: poll                 wall=4.000s usage=3.988s mem=64168KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.987s mem=68328KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.987s mem=71440KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.986s mem=91268KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.985s mem=93084KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.984s mem=96456KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.983s mem=99036KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.983s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.982s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.981s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.980s mem=106MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.980s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.979s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.004s usage=16.982s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.977s mem=111MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.977s mem=113MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.004s usage=19.979s mem=115MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:06:24 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.050s
ramon: group.total          19.986s
ramon: group.utime          19.930s
ramon: group.stime          0.056s
ramon: group.mempeak        116MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
