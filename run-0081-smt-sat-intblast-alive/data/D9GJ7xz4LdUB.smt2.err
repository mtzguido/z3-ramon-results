ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:55:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29545 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/D9GJ7xz4LdUB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             315190
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   139/137     0/0  63       0    18.54   0.00)
(sat.stats    119    949    0   139/137   119/90  63       0    18.64   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 241 :time 0.00)
(sat.stats    119    949    0   139/137   119/90  63       0    18.64   0.01)
(sat.stats    119    949    0   139/137   119/90  63       0    18.64   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 327618.64 :time 0.00)
(sat.stats    119    949    0   141/139   128/98  63       0    18.64   0.01)
(sat.stats    145   1452    1   141/139   154/112  63       0    18.73   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    148   1701    2   141/139   157/114  63       0    18.73   0.01)
(sat.stats    159   1898    3   146/144   168/117  63       0    19.02   0.02)
(sat.stats    162   1934    4   161/159   171/117  63       0    19.02   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 438 :time 0.00)
 (sat-cleaner :elim-literals 4 :elim-clauses 15 :cost 577 :time 0.00)
(sat.stats    359   5146    5   176/174   281/200  72       0    19.02   0.05)
(sat.stats    362   5161    6   176/174   284/200  72       0    19.02   0.05)
(sat.stats    365   5217    7   176/174   287/201  72       0    19.02   0.05)
(sat.stats    368   5286    8   180/178   290/202  72       0    19.02   0.06)
(sat.stats    371   5359    9   180/178   293/205  72       0    19.02   0.06)
(sat.stats    375   5427   10   183/181   297/206  72       0    19.02   0.06)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 728 :time 0.00)
(sat.stats    378   5529   11   199/196   300/207  76       0    19.02   0.06)
(sat.stats    381   5580   12   204/201   303/208  76       0    19.02   0.06)
(sat.stats    384   5624   13   209/206   306/211  76       0    19.02   0.06)
(sat.stats    387   5663   14   209/206   309/214  76       0    19.02   0.06)
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 8796093022207 := 8796093022207 << 11
band: (band[43] (if (or #554 #555 #556 #557 #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 ...) 0 1) (shl[43] (bv2int %0) (+ 43 #764))) 0 := 0&62615552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #962 #966) 64)) 0 := 2989297299164 << 10
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 839 :time 0.00)
(sat.stats    621  10942   19   813/808   544/302  83       0    19.40   0.20)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    766  16038   24  1329/1324   695/309  83       0    19.50   0.35)
(sat.stats   1064  23966  114  3688/3683  1027/317  83       0    19.91   0.59)
 (sat-cleaner :elim-literals 7 :elim-clauses 1 :cost 6023 :time 0.00)
(sat.stats   1597  32188  244  6767/6762  1613/426  87       0    20.65   0.89)
ramon: poll                 wall=1.000s usage=0.927s mem=21732KiB load=0.93 rootload=0.92
(sat.stats   2573  48004  322  9358/9353  2608/536  87       0    21.24   1.41)
 (sat-cleaner :elim-literals 7 :elim-clauses 4 :cost 13965 :time 0.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 15195 :time 0.00)
(sat.stats   3821  66536  323 11807/11802  3874/870  89       0    21.52   1.92)
ramon: poll                 wall=2.000s usage=1.927s mem=22672KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 17210 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 18794 :time 0.00)
(sat.stats   5544  84583  551 13952/13947  5039/1022  93       0    22.00   2.72)
ramon: poll                 wall=3.000s usage=2.926s mem=23184KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 7 :elim-clauses 3 :cost 24069 :time 0.00)
 (sat-cleaner :elim-literals 16 :elim-clauses 2 :cost 26634 :time 0.00)
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin           :units        :memory       )
(sat.stats   8092 134110  832 14919/14914  6684/1326  97       0    22.70   3.80)
ramon: poll                 wall=4.000s usage=3.926s mem=24012KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 28865 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 29224 :time 0.00)
ramon: poll                 wall=5.000s usage=4.926s mem=24268KiB load=1.00 rootload=1.00
(sat.stats  12404 160294 1254 17362/17357  9101/1572  99       0    23.09   5.48)
ramon: poll                 wall=6.000s usage=5.926s mem=24804KiB load=1.00 rootload=1.00
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 23644 := 0 << 5
band: (band[43] (if (or #554 #555 #556 #557 #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 ...) 0 1) (shl[43] (bv2int %0) (+ 43 #764))) 0 := 0&386944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #962 #966) 64)) 0 := 24184 << 4
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 46549 :time 0.00)
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 22871 := 0 << 6
band: (band[43] (if (or #554 #555 #556 #557 #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 ...) 0 1) (shl[43] (bv2int %0) (+ 43 #764))) 0 := 0&274877555456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #962 #966) 64)) 0 := 8589923608 << 5
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 1656704 := 25886 << 7
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 6597069776197 := 103079215104 << 3
band: (band[43] (if (or #554 #555 #556 #557 #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 ...) 0 1) (shl[43] (bv2int %0) (+ 43 #764))) 0 := 0&1099511627776
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #962 #966) 64)) 8796093022208 := 274877906944 << 2
ramon: poll                 wall=7.000s usage=6.926s mem=25316KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 6 :elim-clauses 5 :cost 48910 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 49638 :time 0.00)
(sat.stats  18248 211151 1663 22076/22068 12471/1951 127       0    24.87   7.88)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 51825 :time 0.00)
ramon: poll                 wall=8.000s usage=7.926s mem=25952KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 14 :elim-clauses 6 :cost 56771 :time 0.00)
ramon: poll                 wall=9.000s usage=8.925s mem=26464KiB load=1.00 rootload=1.00
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 38012928 := 4294985857 << 12
band: (band[43] (if (or #554 #555 #556 #557 #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 ...) 0 1) (shl[43] (bv2int %0) (+ 43 #764))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #962 #966) 64)) 8589934592 := 8589934592 << 11
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 24764 :time 0.00)
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 2048 := 1 << 2
band: (band[43] (if (or #554 #555 #556 #557 #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 ...) 0 1) (shl[43] (bv2int %0) (+ 43 #764))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #962 #966) 64)) 30408093577758584 := 13194139533312 << 1
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 0 := 6597069766656 << 4
band: (band[43] (if (or #554 #555 #556 #557 #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 ...) 0 1) (shl[43] (bv2int %0) (+ 43 #764))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #962 #966) 64)) 30415288816301269 := 13194139533312 << 3
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 26642 :time 0.00)
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 824633720832 := 206158430208 << 8
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 274877906944 := 68719476736 << 9
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 206158430212 := 51539607553 << 10
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 231928233988 := 57982058497 << 41
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364900 := 53687091225 << 42
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 39
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 38
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 37
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 36
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 35
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 18
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 17
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 19
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 20
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 21
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 22
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364908 := 53687091227 << 23
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364936 := 53687091234 << 24
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364936 := 53687091234 << 26
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364936 := 53687091234 << 25
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364936 := 53687091234 << 14
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364940 := 53687091235 << 15
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364936 := 53687091234 << 16
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #56))) 214748364936 := 53687091234 << 40
ramon: poll                 wall=10.000s usage=9.924s mem=28344KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.004s usage=10.932s mem=29332KiB load=1.00 rootload=1.01
ramon: poll                 wall=12.000s usage=11.924s mem=29844KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.924s mem=30612KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.924s mem=30868KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.923s mem=31620KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.923s mem=32132KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.922s mem=33568KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.922s mem=34336KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.922s mem=35360KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.922s mem=36384KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:55:51 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.984s
ramon: group.stime          0.016s
ramon: group.mempeak        36740KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.00
