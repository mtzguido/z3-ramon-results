ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:17:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28612 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1378
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LWzUiJTaQhJI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             761267
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   62.8931     10000        49          0            1        2)
(sat.ddfw       1      1   31.6487     20001        98          1            1        3)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252672&72057594037927935
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 2&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775807&72057594037927935
(smt.stats    0    101   4329    473  1397/1259/120      89/15     6   24   52.24)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775807&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775806&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775804&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252676&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775805&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252676&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252676&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252688&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252684&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 24 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 40 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 72 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 136 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 264 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 520 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 1032 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 2056 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 8200 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 16392 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32776 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32776 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4098 := 3746994889972252673&72057594037927935
(smt.stats    1    202   5409   1928  2478/2242/262     295/98     9   57   52.92)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
(sat.ddfw       1      1   35.2734     40001       196          2            1        5)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 3 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 3 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 1 := 3746994889972252673&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 3746994889972252673 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 1 := 3746994889972252672&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 2 := 3746994889972252672&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 2 := 3746994889972252672&72057594037927935
(smt.stats    2    313   6964   4788  2961/2649/280     484/117    11   62   53.31)
(smt.stats    3    415   7448   5564  3226/2969/281     783/135    13   63   53.41)
(smt.stats    4    526   9922  10405  3317/3049/295    1196/417    17   97   53.51)
(smt.stats    5    648  13989  16790  3366/3094/300    1485/463    20   99   53.80)
ramon: poll                 wall=1.000s usage=0.864s mem=56344KiB load=0.86 rootload=0.85
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    749  16750  23553  3567/3249/303    1681/471    21  112   54.11)
(sat.ddfw       1      1   31.2175     70001       343          3            1        8)
(smt.stats    7    860  19701  32856  3595/3266/307    1824/483    23  126   54.32)
(sat.ddfw       1      1   27.2665    110001       539          4            1       12)
ramon: poll                 wall=2.000s usage=1.863s mem=57064KiB load=1.00 rootload=1.00
(smt.stats    8    982  21833  39087  3670/3353/323    2037/553    25  158   54.60)
(sat.ddfw       1      1   23.6626    160000       784          5            1       17)
(smt.stats    9   1116  26214  50373  3691/3370/323    2308/554    25  158   54.60)
(smt.stats   10   1217  30087  56856  3697/3380/329    2449/580    26  161   54.72)
(smt.stats   11   1328  33469  67771  3699/3382/331    2647/603    28  175   54.82)
(smt.stats   12   1450  37513  81737  3716/3398/335    2956/699    30  182   54.82)
(smt.stats   13   1584  42316  94676  3756/3429/336    3127/720    31  182   55.02)
(smt.stats   14   1731  50619 105541  3782/3464/338    3282/728    32  191   55.19)
(sat.ddfw       1      1    20.776    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.863s mem=57424KiB load=1.00 rootload=1.00
(smt.stats   15   1832  55657 112381  3863/3495/341    3426/732    34  211   55.19)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 128 := 266288107786&511
(smt.stats   16   1943  61744 117676  3902/3574/341    3580/733    34  211   55.35)
(smt.stats   17   2065  65067 127227  3956/3597/342    3931/747    35  212   55.48)
(smt.stats   18   2199  70845 137297  4110/3658/342    4262/754    35  212   55.58)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 65536 := 3746994889972285440&281474976710655
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 12970366926827061248 := 266287972593 << 48
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 12970366926827061248 := 266287972593 << 48
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 12970366926827061248 := 266287972593 << 48
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 3746994889972285440 := 266287972593 << 48
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 3746994889972285440 := 266287972593 << 48
(sat.ddfw       1      1   18.5087    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.874s mem=57988KiB load=1.01 rootload=1.01
(smt.stats   19   2346  73945 148305  4269/3824/343    4592/887    36  214   55.67)
(sat.ddfw       1      1   16.6493    370001      1813          8            1       38)
(smt.stats   20   2507  77581 158220  4322/3957/353    5085/888    36  214   55.77)
ramon: poll                 wall=5.000s usage=4.950s mem=57988KiB load=1.08 rootload=1.07
ramon: poll                 wall=6.000s usage=5.950s mem=58244KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.0905    460001      2254          9            1       47)
ramon: poll                 wall=7.000s usage=6.950s mem=58500KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2608  80818 167600  4392/4033/354    5300/1010    38  216   55.96)
(sat.ddfw       1      1   13.8026    560001      2745         10            1       57)
ramon: poll                 wall=8.000s usage=7.950s mem=58500KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7079    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=8.950s mem=58500KiB load=1.00 rootload=1.00
(smt.stats   22   2719  82379 172274  4551/4144/354    5511/1010    38  216   56.05)
ramon: poll                 wall=10.000s usage=9.949s mem=58756KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    11.782    790001      3872         12            1       80)
(smt.stats   23   2841  86029 179291  4647/4254/354    5740/1015    38  216   56.05)
ramon: poll                 wall=11.000s usage=10.949s mem=58756KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.9769    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=11.949s mem=58756KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.949s mem=58756KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    10.276   1060001      5196         14            1      108)
ramon: poll                 wall=14.000s usage=13.949s mem=58756KiB load=1.00 rootload=1.00
(smt.stats   24   2975  88454 183401  4780/4340/354    6046/1017    38  216   56.35)
ramon: poll                 wall=15.000s usage=14.949s mem=59012KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.65562   1210001      5931         15            1      123)
(smt.stats   25   3122  92864 195629  4976/4516/358    6860/1156    39  231   56.59)
ramon: poll                 wall=16.000s usage=15.949s mem=59012KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.949s mem=59012KiB load=1.00 rootload=1.00
(smt.stats   26   3283  97618 208749  5240/4678/358    7465/1168    39  231   56.69)
(sat.ddfw       1      1   9.09298   1370001      6715         16            1      139)
ramon: poll                 wall=18.000s usage=17.949s mem=59012KiB load=1.00 rootload=1.00
(smt.stats   27   3460 103579 224949  5370/5048/362    7946/1358    41  259   56.88)
(smt.stats   28   3561 107030 232477  5386/5058/362    8185/1358    41  259   56.97)
(smt.stats   29   3672 111900 245560  5400/5077/362    8489/1453    42  260   56.97)
ramon: poll                 wall=19.000s usage=18.949s mem=59268KiB load=1.00 rootload=1.00
(smt.stats   30   3794 117660 260469  5423/5083/362    8730/1454    42  260   56.97)
(sat.ddfw       1      1   8.59324   1540001      7549         17            1      156)
ramon: poll                 wall=20.000s usage=19.949s mem=59268KiB load=1.00 rootload=1.00
(smt.stats   31   3928 121962 268632  5465/5125/362    8940/1454    42  260   57.07)
ramon: end                  Fri Nov  1 22:17:22 2024
ramon: root.execname        z3
ramon: root.utime           20.000s
ramon: root.stime           0.010s
ramon: group.total          20.015s
ramon: group.utime          20.003s
ramon: group.stime          0.012s
ramon: group.mempeak        59780KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
