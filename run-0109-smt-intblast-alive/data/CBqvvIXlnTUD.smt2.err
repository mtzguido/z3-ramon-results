ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:46:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42360 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CBqvvIXlnTUD.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2851117
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4 := 4&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 18014398509481988 := 4 << 2
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4 := 4&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 18014398509481988 := 4 << 2
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4 := 4&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 18014398509481988 := 4 << 2
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4 := 4&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 18014398509481988 := 4 << 2
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #105))) 1 := 18014398509481983 << 3
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 144115188075855872 := 36028797018963966 << 2
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #105))) 1 := 18014398509481983 << 3
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #105))) 1 := 18014398509481983 << 3
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #105))) 1 := 2251799813685247 << 3
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 1 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #105))) 18014398509481977 := 18014398509481983 << 3
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 1 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 4 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 3 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 3 := 4&18014398509481976
(smt.stats    0    101   4361   1024  1313/1160/140      85/16    11   26   19.24)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 2 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 2 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&18014398509481976
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 4 := 4&18014398509481976
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&12867427506772840
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 4 := 4&12867427506772840
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&12867427506772840
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 4 := 4&12867427506772840
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&12867427506772840
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 4 := 4&12867427506772840
(smt.stats    1    203   6054   1697  2021/1827/178     190/19    14   34   19.54)
(smt.stats    2    314  10170   3694  2295/2066/181     323/47    15   38   19.73)
(smt.stats    3    415  13523   5499  2658/2396/186     446/58    16   44   20.06)
(smt.stats    4    526  16265   7282  2687/2422/192     539/57    17   67   20.06)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 12 := 9007199254740992&19
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 12 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 12 := 9007199254740992&17
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 34 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 28 := 9007199254740992&35
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 28 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 28 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 32 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 64 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 64 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 56 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 48 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 128 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 256 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 512 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1024 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2048 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4096 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8192 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 16384 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 32768 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 65536 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 131072 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 262144 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 524288 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1048576 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2097152 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4194304 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8388608 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 512 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 512 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 512 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1024 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2048 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4096 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8192 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 16384 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 32768 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 65536 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 131072 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 262144 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 262144 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 524288 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1048576 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 524288 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 32768 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 32768 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 16384 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 16384 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 16384 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8192 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8192 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8192 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8192 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8192 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1024 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1024 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4096 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2048 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 262144 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 262144 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 131072 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2097152 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 16777216 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 33554432 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 67108864 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 134217728 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 268435456 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 536870912 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 134217728 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 268435456 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1073741824 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2147483648 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4294967296 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8589934592 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 17179869184 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 17179869184 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 34359738368 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 68719476736 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 137438953472 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 274877906944 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 549755813888 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1099511627776 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2199023255552 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4398046511104 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8796093022208 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 17592186044416 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 35184372088832 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 70368744177664 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 140737488355328 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 281474976710656 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 562949953421312 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1125899906842624 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2251799813685248 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2199023255552 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8796093022208 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 17592186044416 := 9007199254740992&9007199254740979
(smt.stats    5    648  18567  12121  2917/2622/408     755/113    20  121   21.15)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8796093022208 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 8796093022208 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 17592186044416 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 35184372088832 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 70368744177664 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 140737488355328 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 281474976710656 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 562949953421312 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1125899906842624 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2251799813685248 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 562949953421312 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1125899906842624 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2251799813685248 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2251799813685248 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2251799813685248 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2251799813685248 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2251799813685248 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1125899906842624 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1125899906842624 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 1125899906842624 := 9007199254740992&9007199254740979
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 9007199254740992 := 9007199254740992&9007199254740993
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 45035996273704961 := 33776997205278722 << 53
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 9007199254740992 := 9007199254740992&9007199254741000
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 45035996273704968 := 33776997205278724 << 53
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 9007199254740992 := 9007199254740992&9007199254773744
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 45035996273737712 := 33776997205286912 << 53
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    749  21890  16827  3022/2720/491     917/160    21  140   21.34)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 256 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 128 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 256 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 128 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 128 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 128 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 128 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 128 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 256 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 256 := 256&18014398509438720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 54043195528402688 := 36028797018953156 << 8
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 256 := 256&18014398509439016
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 256 := 256&18014398509438968
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 54043195528402936 := 36028797018953218 << 8
(smt.stats    7    860  28012  21393  3111/2797/497    1019/168    23  149   21.83)
(smt.stats    8    982  29942  22788  3182/2848/517    1143/181    24  157   22.12)
(smt.stats    9   1116  37658  29184  3296/3013/523    1347/216    27  163   22.22)
(smt.stats   10   1217  43160  32792  3382/3045/523    1465/227    27  163   22.22)
(smt.stats   11   1328  48384  37663  3485/3138/524    1666/245    28  166   22.44)
ramon: poll                 wall=1.000s usage=0.919s mem=23844KiB load=0.92 rootload=0.90
(smt.stats   12   1450  53731  47695  3712/3381/527    1886/297    30  172   22.64)
(smt.stats   13   1584  59060  56904  3765/3397/539    2082/312    31  194   22.73)
(smt.stats   14   1731  65807  66411  3863/3456/540    2266/347    32  200   22.83)
(smt.stats   15   1832  70919  73423  3909/3544/545    2405/373    33  202   22.83)
(smt.stats   16   1943  73689  81215  3974/3645/549    2575/431    35  214   22.92)
(smt.stats   17   2065  78148  86402  4007/3661/549    2694/432    35  214   23.02)
(smt.stats   18   2199  86336  95413  4063/3685/549    2864/432    35  214   23.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2346  90893 105997  4113/3744/550    3056/470    36  219   23.12)
ramon: poll                 wall=2.000s usage=1.919s mem=24700KiB load=1.00 rootload=1.00
(smt.stats   20   2507  95804 116921  4151/3819/556    3247/469    38  247   23.22)
(smt.stats   21   2608  99565 124737  4181/3834/556    3420/469    38  247   23.31)
(smt.stats   22   2719 102723 130870  4195/3856/556    3615/494    39  250   23.41)
(smt.stats   23   2841 107739 138535  4214/3872/556    3742/494    39  250   23.41)
(smt.stats   24   2975 113994 150268  4226/3889/558    3949/521    40  253   23.52)
(smt.stats   25   3122 118237 157874  4266/3896/559    4146/522    40  253   23.61)
ramon: poll                 wall=3.000s usage=2.919s mem=25212KiB load=1.00 rootload=1.00
(smt.stats   26   3283 121542 164931  4467/3944/559    4332/566    41  265   23.80)
(smt.stats   27   3460 124989 172672  4625/4169/559    4536/567    41  265   23.89)
(smt.stats   28   3561 127901 179794  4654/4311/559    4751/567    41  265   23.89)
(smt.stats   29   3672 131140 188487  4666/4330/559    4878/567    41  265   23.89)
ramon: poll                 wall=4.000s usage=3.919s mem=25724KiB load=1.00 rootload=1.00
(smt.stats   30   3794 137224 196044  4812/4332/559    5051/572    41  265   23.99)
(smt.stats   31   3928 141984 207104  4989/4483/559    5435/578    41  265   24.08)
(smt.stats   32   4075 146563 220541  5027/4682/560    5701/804    42  266   24.18)
(smt.stats   33   4236 152494 234392  5039/4703/560    6113/804    42  266   24.18)
ramon: poll                 wall=5.000s usage=4.919s mem=25724KiB load=1.00 rootload=1.00
(smt.stats   34   4413 158225 254938  5069/4712/560    6425/806    42  266   24.34)
(smt.stats   35   4607 164598 267663  5164/4745/563    6918/865    43  279   24.44)
(smt.stats   36   4708 167792 274749  5201/4853/563    7078/948    44  282   24.53)
(smt.stats   37   4819 172501 287387  5233/4896/563    7286/948    44  282   24.53)
(smt.stats   38   4941 176167 296101  5257/4901/563    7473/948    44  282   24.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 415)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   39   5075 178549 305088  5269/4932/564    7313/1004    45  289   24.53)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 4&33296
band: (band[54] (if (= #109 53) 1 (if #615 2 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 1 := 4&33296
(smt.stats   40   5222 185163 318584  5299/4953/565    7545/1004    45  289   24.53)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 16384&33528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 33528 := 8380 << 14
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 16384&33288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 33288 := 8264 << 14
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 16384&33288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 33288 := 8264 << 14
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 16384&33288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 33288 := 8260 << 14
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 16384&33288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 33288 := 8262 << 14
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 0 := 16384&32768
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #105))) 0 := 1 << 15
(smt.stats   41   5383 189983 329389  5409/5046/576    7772/1037    46  289   24.73)
(smt.stats   42   5560 193360 344791  5450/5104/580    8094/1101    47  302   24.73)
ramon: poll                 wall=6.000s usage=5.919s mem=26236KiB load=1.00 rootload=1.00
(smt.stats   43   5754 200640 367438  5572/5112/580    8376/1112    47  302   24.73)
(smt.stats   44   5967 205844 387447  5611/5267/580    8617/1146    48  331   24.83)
(smt.stats   45   6068 208520 396797  5663/5312/581    8827/1180    49  332   24.92)
(smt.stats   46   6179 212124 406389  5688/5316/581    9011/1182    49  332   24.92)
(smt.stats   47   6301 220162 433526  5704/5353/581    9157/1182    49  332   24.92)
(smt.stats   48   6435 225611 452178  5731/5371/581    9384/1182    49  332   25.02)
ramon: poll                 wall=7.000s usage=6.918s mem=26748KiB load=1.00 rootload=1.00
(smt.stats   49   6582 230653 464901  5761/5403/584    9746/1243    50  334   25.21)
(smt.stats   50   6743 237211 482940  5803/5423/584    9937/1245    50  334   25.30)
ramon: poll                 wall=8.000s usage=7.918s mem=27004KiB load=1.00 rootload=1.00
(smt.stats   51   6920 242778 495238  5938/5585/585   10152/1345    51  345   25.30)
(smt.stats   52   7114 250325 515353  5954/5599/585   10420/1345    51  345   25.30)
(smt.stats   53   7327 259828 559859  5980/5613/588   10708/1389    52  349   25.30)
(smt.stats   54   7561 267397 574032  6111/5633/588   10947/1418    53  373   25.30)
(smt.stats   55   7662 271152 590739  6120/5763/588   11077/1418    53  373   25.41)
(smt.stats   56   7773 273425 608173  6125/5770/588   11193/1418    53  373   25.41)
(smt.stats   57   7895 276513 626364  6127/5774/588   11315/1418    53  373   25.41)
ramon: poll                 wall=9.003s usage=8.922s mem=27004KiB load=1.00 rootload=1.00
(smt.stats   58   8029 279820 637887  6156/5778/588   11492/1419    53  373   25.41)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8176 284512 652009  6182/5829/588   11638/1419    53  373   25.41)
(smt.stats   60   8337 292459 677480  6189/5836/588   11847/1419    53  373   25.66)
(smt.stats   61   8514 295636 698461  6204/5851/589   12025/1451    54  398   25.66)
(smt.stats   62   8708 298821 712454  6275/5866/589   12244/1452    54  398   25.76)
(smt.stats   63   8921 303150 737353  6329/5958/591   12475/1452    54  398   25.76)
(smt.stats   64   9155 310487 764174  6353/5980/591   12726/1489    55  403   25.85)
ramon: poll                 wall=10.000s usage=9.918s mem=27576KiB load=1.00 rootload=1.00
(smt.stats   65   9412 318549 789135  6389/6035/594   13069/1493    56  407   25.85)
(smt.stats   66   9513 321486 801992  6391/6037/594   13205/1493    56  407   25.85)
(smt.stats   67   9624 323638 808287  6433/6043/594   13342/1496    56  407   25.95)
(smt.stats   68   9746 327037 821324  6455/6097/594   13469/1496    56  407   25.95)
(smt.stats   69   9880 332280 838111  6488/6118/595   13676/1504    57  425   26.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 37)
(smt.stats   70  10027 334456 855055  6509/6151/595   13850/1504    57  425   26.04)
(smt.stats   71  10188 339554 876995  6519/6161/595   14047/1504    57  425   26.04)
(smt.stats   72  10365 346034 899460  6563/6168/595   14268/1504    57  425   26.14)
ramon: poll                 wall=11.003s usage=10.922s mem=27832KiB load=1.00 rootload=1.00
(smt.stats   73  10559 350040 911862  6678/6242/595   14501/1506    57  425   26.23)
(smt.stats   74  10772 354179 929592  6923/6348/595   14763/1511    57  425   26.33)
ramon: poll                 wall=12.000s usage=11.918s mem=28088KiB load=1.00 rootload=1.00
(smt.stats   75  11006 359051 958005  7188/6705/596   15079/1601    58  427   26.42)
(smt.stats   76  11263 367143 992737  7330/6860/596   15449/1602    58  427   26.52)
ramon: poll                 wall=13.000s usage=12.918s mem=28344KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11545 373841 1040361  7358/7000/596   15910/1602    58  427   26.52)
(smt.stats   78  11646 379619 1076332  7361/7007/596   16049/1602    58  427   26.52)
(smt.stats   79  11757 382366 1092623  7396/7034/597   16113/1723    59  495   26.61)
(smt.stats   80  11879 384490 1109724  7403/7049/597   16271/1723    59  495   26.61)
(smt.stats   81  12013 386924 1125523  7409/7055/600   16624/1723    59  495   26.61)
(smt.stats   82  12160 392883 1147529  7427/7056/600   16823/1789    60  505   26.61)
(smt.stats   83  12321 398293 1175248  7430/7076/600   17024/1789    60  505   26.61)
(smt.stats   84  12498 403596 1203793  7445/7091/600   17337/1789    60  505   26.71)
(smt.stats   85  12692 409716 1227276  7514/7100/600   17744/1796    60  505   26.90)
ramon: poll                 wall=14.000s usage=13.917s mem=28600KiB load=1.00 rootload=1.00
(smt.stats   86  12905 418691 1267499  7606/7163/601   18139/1867    61  512   27.25)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 4503599627370496&10133099161581569
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 4503599627370496&10133099161581569
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 4503599627370496&10133099161581569
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 4503599627370496&13510798882145281
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 8642407684924015617 := 33702084099926974 << 52
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 4503599627370496&13510798882144769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 8642407684924015105 := 33702084099926974 << 52
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 4503599627370496 := 4503599627370496&13510798882112001
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 8642407684923982337 := 33702084099926974 << 52
(smt.stats   87  13139 425814 1296510  7687/7266/601   18719/1874    61  512   27.44)
ramon: poll                 wall=15.000s usage=14.917s mem=29236KiB load=1.00 rootload=1.00
(smt.stats   88  13396 436423 1346984  7722/7366/611   19024/1968    62  514   27.54)
(smt.stats   89  13678 449048 1399909  7905/7383/613   19620/1985    63  514   27.63)
ramon: poll                 wall=16.000s usage=15.917s mem=29236KiB load=1.00 rootload=1.00
(smt.stats   90  13988 459833 1454101  7973/7580/613   20245/2164    64  528   27.63)
(smt.stats   91  14089 465826 1468237  7977/7621/613   20366/2164    64  528   27.63)
(smt.stats   92  14200 472851 1490858  8141/7621/613   20514/2165    64  528   27.73)
(smt.stats   93  14322 475621 1517076  8167/7811/613   20655/2165    64  528   27.73)
(smt.stats   94  14456 478230 1532366  8179/7823/614   20841/2269    65  530   27.84)
(smt.stats   95  14603 482270 1544571  8209/7825/614   21032/2269    65  530   27.93)
ramon: poll                 wall=17.001s usage=16.917s mem=29748KiB load=1.00 rootload=1.00
(smt.stats   96  14764 494751 1571631  8288/7864/614   21294/2270    65  530   27.99)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   97  14941 500433 1607543  8323/7967/616   21673/2350    66  531   27.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 631)
(smt.stats   98  15135 506373 1631078  8327/7971/616   21401/2350    66  531   28.08)
(smt.stats   99  15348 512968 1684502  8337/7979/616   21751/2408    67  532   28.08)
ramon: poll                 wall=18.000s usage=17.917s mem=29748KiB load=1.00 rootload=1.00
(smt.stats  100  15582 520161 1698588  8589/7992/616   22216/2411    67  532   28.18)
(smt.stats  101  15839 527534 1733156  8845/8423/617   22529/2488    68  533   28.18)
(smt.stats  102  16121 531540 1781946  8879/8501/617   22967/2490    68  533   28.27)
ramon: poll                 wall=19.000s usage=18.917s mem=30184KiB load=1.00 rootload=1.00
(smt.stats  103  16431 541038 1841348  8904/8548/617   23306/2490    68  533   28.27)
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2199023255552 := 2199023255552&18014398509481971
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 18446744073709551603 := 18014398509462016 << 41
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2199023255552 := 2199023255552&18014398509481971
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 18446744073709551603 := 18014398509462016 << 41
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2199023255552 := 2199023255552&18014398509481971
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 18446744073709551603 := 18014398509481920 << 41
band: (band[54] (if (= #389 63) 1 (if #593 2 #791)) (shl[64] (* 2 #372) (mod #806 64))) 2199023255552 := 2199023255552&18014398509481971
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #798 #802) 64)) 18446744073709551603 := 18014398509481920 << 41
(smt.stats  104  16771 553684 1899667  8966/8560/618   23690/2553    69  535   28.37)
(smt.stats  105  16872 556173 1924239  8987/8627/623   23819/2563    70  536   28.37)
(smt.stats  106  16983 558461 1943108  9022/8652/623   23990/2563    70  536   28.37)
(smt.stats  107  17105 562086 1978768  9025/8667/626   24211/2563    70  536   28.46)
ramon: poll                 wall=20.000s usage=19.914s mem=30396KiB load=1.00 rootload=0.99
(smt.stats  108  17239 566378 2012938  9076/8668/626   24330/2643    71  552   28.46)
ramon: end                  Tue Dec 24 14:46:23 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.975s
ramon: group.utime          19.959s
ramon: group.stime          0.016s
ramon: group.mempeak        32288KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
