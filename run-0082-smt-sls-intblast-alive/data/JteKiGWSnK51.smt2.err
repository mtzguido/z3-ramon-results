ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:13:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28574 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JteKiGWSnK51.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             748977
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   121.951     10000        49          0            1        2)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 1 := 4503599627370495 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 1 := 4503599627370495 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1 := 3&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 3 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 4 := 4&4
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 4 := 4&4
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 4 := 4&4
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4 := 108544 >>l 62
(sat.ddfw       1      1   57.8092     20001        98          1            1        3)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 52 := 53 >>l 51
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 2 << 1
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1 := 53 >>l 51
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1 := 53 >>l 51
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1 := 53 >>l 51
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 108544 >>l 62
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1 := 53 >>l 51
(smt.stats    0    101    612    546   182/170/137     114/32     6   32   51.27)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 11
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 11
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 11
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 10
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 10
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 10
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370494&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4503599627370494 := 2251799813685247 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 8
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 3
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 6
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 4
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4&0
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 4 := 2 << 2
(smt.stats    1    202   2417   3175   375/347/197     227/39    11   44   51.65)
(sat.ddfw       1      1   55.8659     40001       196          2            1        5)
(sat.ddfw       1      1   46.5839     70001       343          3            1        8)
(smt.stats    2    313   2977   3823   448/397/198     345/50    12   45   52.03)
(smt.stats    3    414   3312   4831   653/568/198     475/53    13   46   52.13)
ramon: poll                 wall=1.000s usage=0.938s mem=54284KiB load=0.94 rootload=0.92
(sat.ddfw       1      1   39.4089    110001       539          4            1       12)
(smt.stats    4    525   4923   6706   730/673/208     564/88    15   58   52.32)
(smt.stats    5    647   6532   9201   807/757/209     712/98    16   59   52.32)
(sat.ddfw       1      1   33.6241    160000       784          5            1       17)
(smt.stats :restarts  :decisions    :clauses/bin/units        :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions    )
(smt.stats    6    748   7684  11075   912/789/210     826/124    17   63   52.32)
(smt.stats    7    859   9477  13610  1025/981/214     957/159    19   68   52.51)
(smt.stats    8    981  10720  16696  1070/1023/216    1139/161    20   70   52.51)
ramon: poll                 wall=2.002s usage=1.938s mem=54564KiB load=1.00 rootload=1.00
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 2251799813684981 := 4503599627370492&2251799813684981
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 2251799813684982 := 4503599627370492&2251799813684982
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 2251799813684984 := 4503599627370492&2251799813684984
shl: (shl[64] (bv2int %1) (mod (+ #106 #124) 64)) 9007199254740988 := 4503599627370494 << 2
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1501199875790164 := 1501199875790164&2251799813684984
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 1501199875790163 := 1501199875790164&2251799813684984
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&2251799813684984
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&2251799813684984
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&2251799813684984
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 6755399441055480 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&2251799813684984
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 6755399441055480 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&2251799813684984
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 6755399441055480 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 0&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 4503599627370495 := 1125899906842624 << 2
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 3002399751580331 := 1501199875790165 << 2
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 0 := 3518464 >>l 61
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1501199875790164&0
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 3002399751580331 := 1501199875790165 << 2
(sat.ddfw       1      1    29.226    220001      1078          6            1       23)
(smt.stats    9   1115  12758  19641  1144/1091/241    1312/236    22   77   52.70)
(smt.stats   10   1216  14298  22108  1221/1130/241    1436/253    23   81   52.70)
(smt.stats   11   1327  16081  25414  1322/1263/242    1556/260    24   83   52.70)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  17911  28415  1430/1282/242    1689/261    24   83   52.80)
(sat.ddfw       1      1   25.9259    290001      1421          7            1       30)
(smt.stats   13   1583  19411  32707  1518/1433/244    1817/272    25   85   52.91)
(smt.stats   14   1730  20718  37556  1592/1500/244    1990/275    25   85   52.91)
ramon: poll                 wall=3.000s usage=2.936s mem=55012KiB load=1.00 rootload=0.99
(smt.stats   15   1831  21699  40716  1607/1550/246    2095/293    26   87   52.91)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 4503599627370495&4366328
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 3002399751580327&4366320
(smt.stats   16   1942  22618  45997  1658/1584/253    2189/323    28  108   53.01)
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1125899906842625&147450
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4503599627517946 := 4503599627517952 >>l 63
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1125899906842625&40954
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4503599627411450 := 4503599627411456 >>l 63
band: (band[52] (shl[64] (bv2int %1) (mod #125 64)) (lshr[64] (* 2048 #106) (mod #166 64))) 0 := 1125899906842625&40954
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #158 #162) 64)) 4503599627411450 := 4503599627411456 >>l 63
(smt.stats   17   2064  25298  51363  1759/1642/273    2334/337    28  108   53.10)
(sat.ddfw       1      1   23.3236    370001      1813          8            1       38)
(smt.stats   18   2198  27092  53840  1967/1716/279    2509/366    29  119   53.20)
ramon: poll                 wall=4.000s usage=3.935s mem=55492KiB load=1.00 rootload=1.00
(smt.stats   19   2345  28996  57731  2150/1973/279    2675/371    29  119   53.29)
(sat.ddfw       1      1   21.1367    460001      2254          9            1       47)
(smt.stats   20   2506  30976  64758  2287/2218/280    2841/395    31  120   53.39)
(smt.stats   21   2607  32457  67405  2351/2237/280    2948/397    31  120   53.39)
(smt.stats   22   2718  33890  70131  2453/2304/280    3060/399    31  120   53.39)
ramon: poll                 wall=5.000s usage=4.935s mem=55552KiB load=1.00 rootload=1.00
(smt.stats   23   2840  34974  73203  2681/2465/280    3186/402    31  120   53.58)
(sat.ddfw       1      1   19.3087    560001      2745         10            1       57)
(smt.stats   24   2974  36726  79322  2813/2687/280    3324/402    31  120   53.58)
(smt.stats   25   3121  37904  82852  2842/2764/280    3477/402    31  120   53.58)
(smt.stats   26   3282  39816  89854  2929/2789/280    3665/402    31  120   53.58)
ramon: poll                 wall=6.000s usage=5.937s mem=55876KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.7735    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.937s mem=56472KiB load=1.00 rootload=1.00
(smt.stats   27   3459  41235  92811  3006/2888/280    3881/406    31  120   54.35)
(sat.ddfw       1      1   16.4903    790001      3872         12            1       80)
(smt.stats   28   3560  43547  97072  3265/3187/297    4152/464    32  161   54.25)
(smt.stats   29   3671  46096 100167  3302/3218/298    4333/464    32  161   54.35)
ramon: poll                 wall=8.000s usage=8.158s mem=56776KiB load=1.22 rootload=1.22
(sat.ddfw       1      1   15.9372    920001      4509         13            1       93)
(smt.stats   30   3793  48954 105162  3414/3291/301    4487/631    33  170   54.35)
ramon: poll                 wall=9.000s usage=9.156s mem=56844KiB load=1.00 rootload=1.00
(smt.stats   31   3927  51433 109412  3702/3650/302    4641/675    34  177   54.44)
(sat.ddfw       1      1   14.8368   1060001      5196         14            1      108)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  53843 116312  3862/3810/304    4860/679    34  177   54.54)
ramon: poll                 wall=10.000s usage=10.315s mem=56904KiB load=1.16 rootload=1.16
(smt.stats   33   4235  57025 125383  3921/3820/304    5109/703    35  177   54.54)
(sat.ddfw       1      1   14.0528   1210001      5931         15            1      123)
ramon: poll                 wall=11.000s usage=11.381s mem=57092KiB load=1.07 rootload=1.06
ramon: poll                 wall=12.002s usage=12.384s mem=57200KiB load=1.00 rootload=1.01
(smt.stats   34   4412  60915 134213  4079/3909/305    5365/749    36  183   54.73)
(sat.ddfw       1      1   13.1482   1370001      6715         16            1      139)
(smt.stats   35   4606  64067 141569  4320/4067/308    5646/783    37  186   54.92)
ramon: poll                 wall=13.000s usage=13.526s mem=57040KiB load=1.14 rootload=1.14
(smt.stats   36   4707  66900 146734  4453/4277/308    5794/814    38  188   54.92)
(sat.ddfw       1      1    12.489   1540001      7549         17            1      156)
(smt.stats   37   4818  69110 154507  4587/4432/308    5961/814    38  188   55.02)
ramon: poll                 wall=14.006s usage=14.624s mem=57152KiB load=1.09 rootload=1.09
(smt.stats   38   4940  71257 158396  4686/4565/308    6110/814    38  188   55.11)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=15.000s usage=15.735s mem=57288KiB load=1.12 rootload=1.12
(smt.stats   39   5074  74124 163465  4817/4757/309    6419/901    39  188   55.11)
(sat.ddfw       1      1   11.7894   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.735s mem=57504KiB load=1.00 rootload=1.00
(smt.stats   40   5221  78108 170319  5005/4840/310    6611/904    39  188   55.20)
ramon: poll                 wall=17.000s usage=17.735s mem=57628KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.1574   1910001      9362         19            1      193)
(smt.stats   41   5382  82408 177228  5170/5010/310    6832/906    39  188   55.39)
ramon: poll                 wall=18.000s usage=18.733s mem=57704KiB load=1.00 rootload=0.99
(smt.stats   42   5559  86807 188993  5352/5218/311    7097/957    40  188   55.39)
(sat.ddfw       1      1   10.5966   2110001     10343         20            1      214)
ramon: poll                 wall=19.006s usage=19.738s mem=57748KiB load=1.00 rootload=1.00
(smt.stats   43   5753  91314 196544  5497/5310/311    7348/992    41  192   55.49)
ramon: poll                 wall=20.000s usage=20.731s mem=57788KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:13:45 2024
ramon: root.execname        z3
ramon: root.utime           20.780s
ramon: root.stime           0.020s
ramon: group.total          20.810s
ramon: group.utime          20.786s
ramon: group.stime          0.024s
ramon: group.mempeak        58300KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              1.04
