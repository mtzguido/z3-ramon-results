ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:30:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25472 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/VIGR9gHn1jvv.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             56415
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4557    347  1363/1206/99      97/17     5   15   19.08)
(smt.stats    1    202   6644   1053  1734/1514/99     193/27     5   15   19.27)
(smt.stats    2    313   8618   2504  2049/1716/99     310/45     5   15   19.37)
(smt.stats    3    414  11958   3588  2182/1980/107     408/56     7   20   19.46)
(smt.stats    4    525  14744   4751  2472/2218/109     533/56     7   20   19.58)
(smt.stats    5    647  17359   6435  2570/2340/110     648/86     9   30   19.58)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  19862   7950  2612/2369/112     742/86    10   33   19.67)
(smt.stats    7    859  24158  11044  2685/2454/114     858/96    11   35   19.77)
(smt.stats    8    981  27148  13868  2699/2457/115     979/97    12   37   19.77)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 198158383604301824 := 396316767208603648&198158383604301825
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 198158383604301823 := 396316767208603648&198158383604301825
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 396316767208603648&58
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423546 := 912 >>l 8
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 396316767208603648&58
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423546 := 912 >>l 8
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 396316767208603648&58
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423546 := 912 >>l 8
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 396316767208603648&56
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423544 := 880 >>l 8
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 396316767208603648&56
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423544 := 912 >>l 8
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 396316767208603648&56
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423544 := 1024 >>l 8
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 56 := 396316767208603648&56
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 64 := 396316767208603648&64
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 48 := 396316767208603648&56
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 32 := 396316767208603648&56
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 32 := 396316767208603648&56
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 128 := 396316767208603648&128
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 256 := 396316767208603648&256
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 512 := 396316767208603648&512
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 512 := 396316767208603648&512
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1024 := 396316767208603648&1024
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2048 := 396316767208603648&2048
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 4096 := 396316767208603648&4096
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 8192 := 396316767208603648&8192
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 16384 := 396316767208603648&16384
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 32768 := 396316767208603648&32768
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 65536 := 396316767208603648&65536
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 131072 := 396316767208603648&131072
(smt.stats    9   1115  28774  15129  3155/2746/116    1104/127    13   41   20.28)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1597504 := 396316767208603648&1597504
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1597440 := 396316767208603648&1597440
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1622016 := 396316767208603648&1622016
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1605632 := 396316767208603648&1605632
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1900544 := 396316767208603648&1900544
(smt.stats   10   1216  29769  15934  3225/2866/196    1309/131    14   57   20.57)
(smt.stats   11   1327  30857  17769  3491/3088/221    1592/132    14   57   20.57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  31478  18679  3859/3317/221    1842/198    15   62   20.67)
(smt.stats   13   1583  34774  24128  3909/3633/221    2504/199    15   62   20.76)
(smt.stats   14   1730  43206  35509  3913/3651/221    3269/199    15   62   20.90)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1 := 43&2
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&4
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1 := 43&576460752303423484
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&576460752303423484
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1 := 43&576460752303423487
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1 := 43&576460752303423485
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1 := 43&16
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&4
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&576460752303423486
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&576460752303423478
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&4
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&6
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423494 := 0 >>l 63
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&6
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423494 := 0 >>l 63
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&6
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423494 := 16 >>l 63
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&4
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2 := 43&6
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 576460752303423494 := 16 >>l 63
(smt.stats   15   1831  45374  42469  3987/3723/263    3618/1157    17   83   20.99)
(smt.stats   16   1942  47482  45950  4047/3758/264    3746/1159    17   83   21.09)
(smt.stats   17   2064  49572  57150  4078/3800/266    4518/1163    18   84   21.19)
(smt.stats   18   2198  52110  71786  4098/3829/268    4924/1541    19   87   21.19)
(smt.stats   19   2345  55421  85008  4125/3858/269    5249/1941    21   98   21.35)
ramon: poll                 wall=1.000s usage=0.927s mem=22632KiB load=0.93 rootload=0.92
(smt.stats   20   2506  60386  96066  4226/3934/274    5523/2080    22  108   21.44)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 16385 := 360710144&16387
(smt.stats   21   2607  62442 104323  4334/3953/274    5689/2086    22  108   21.69)
(smt.stats   22   2718  65020 113299  4619/4074/279    6010/2105    23  112   21.78)
(smt.stats   23   2840  67180 124156  4800/4343/279    6524/2138    24  112   21.88)
(smt.stats   24   2974  70850 135124  4964/4678/282    7094/2201    25  116   21.88)
(smt.stats   25   3121  75249 152782  4996/4703/285    7594/2526    26  122   22.08)
(smt.stats   26   3282  80854 174955  5065/4760/289    7833/2562    27  139   22.08)
(smt.stats   27   3460  83907 181789  5149/4863/291    8048/2563    28  158   22.08)
(smt.stats   28   3561  85246 187513  5165/4870/292    8236/2564    28  158   22.18)
(smt.stats   29   3672  87674 192939  5173/4879/293    8362/2636    29  179   22.18)
(smt.stats   30   3794  91314 204774  5184/4896/293    8510/2636    29  179   22.46)
(smt.stats   31   3928  95686 216245  5194/4902/293    8679/2636    29  179   22.46)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4075  97234 222310  5216/4918/294    8833/2683    30  187   22.46)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 316 := 344&348
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 316 := 344&348
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 316 := 344&348
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&348
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&348
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&348
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&352
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&348
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&348
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&352
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&360
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 2305843009213694312 := 5536 >>l 60
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246240
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246240
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246248
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246280
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246240
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246248
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246280
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246464
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246464
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246472
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246536
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 2305843009326940488 := 1811939664 >>l 60
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246464
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246472
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 328 := 344&113246536
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 2305843009326940488 := 1811939664 >>l 60
(smt.stats   33   4236  99365 231283  5343/5003/315    9077/2693    30  187   22.55)
ramon: poll                 wall=2.000s usage=1.925s mem=23904KiB load=1.00 rootload=0.99
(smt.stats   34   4413 101667 241853  5447/5063/335    9321/2702    31  195   22.65)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2885681141 := 2885681152&153722867280914294
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2885681141 := 2885681152&153722867280913270
(smt.stats   35   4607 106963 263550  5603/5190/337   10058/2711    31  195   22.84)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 2885681150 := 2885681152&153722867280912767
(smt.stats   36   4708 109219 274522  5753/5317/337   10577/3113    32  204   22.93)
(smt.stats   37   4819 112573 291218  6062/5521/337   10936/3118    32  204   23.04)
(smt.stats   38   4941 115041 297785  6079/5774/337   11293/3118    32  204   23.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 17)
(smt.stats   39   5075 120260 327522  6090/5792/337   11622/3118    32  204   23.14)
(smt.stats   40   5222 128609 358914  6322/5804/337   12405/3119    32  204   23.43)
(smt.stats   41   5383 133753 377921  6498/6031/337   12643/3119    32  204   23.62)
ramon: poll                 wall=3.005s usage=2.928s mem=24992KiB load=1.00 rootload=1.01
(smt.stats   42   5560 138571 403579  6797/6312/337   13733/3120    32  204   23.62)
(smt.stats   43   5754 142770 420138  7037/6513/337   14301/3123    32  204   23.92)
(smt.stats   44   5967 147617 448992  7407/6819/337   15072/3127    32  204   24.02)
(smt.stats   45   6068 149401 468275  7444/7123/337   15915/3127    32  204   24.02)
(smt.stats   46   6179 152670 478695  7463/7144/337   16103/3130    32  204   24.12)
(smt.stats   47   6301 156112 510162  7533/7184/337   16363/3133    32  204   24.12)
(smt.stats   48   6435 158099 544572  7559/7241/338   16745/4034    33  207   24.22)
ramon: poll                 wall=4.000s usage=3.922s mem=25668KiB load=1.00 rootload=0.99
(smt.stats   49   6582 163054 577197  7604/7265/338   16989/4034    33  207   24.32)
(smt.stats   50   6743 167401 607403  7720/7311/338   17340/4034    33  207   24.41)
(smt.stats   51   6920 173442 647471  7798/7435/338   17908/4034    33  207   24.41)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7114 178472 685160  7871/7515/339   18715/4500    34  210   24.52)
(smt.stats   53   7327 186770 707706  7899/7581/339   19081/4501    34  210   24.62)
(smt.stats   54   7561 191498 762723  7911/7607/339   19511/4501    34  210   24.62)
(smt.stats   55   7662 193062 789814  7917/7614/339   19617/4501    34  210   24.62)
ramon: poll                 wall=5.000s usage=4.922s mem=25988KiB load=1.00 rootload=1.00
(smt.stats   56   7773 195047 817054  7945/7618/339   19737/4501    34  210   24.62)
(smt.stats   57   7895 197770 841516  7970/7660/340   20051/4870    35  218   24.72)
(smt.stats   58   8029 199614 854141  8013/7670/341   20744/4871    35  218   24.72)
(smt.stats   59   8176 202000 870634  8077/7749/342   21002/4874    35  218   24.82)
(smt.stats   60   8337 206125 903240  8088/7786/342   21372/5180    36  238   24.82)
(smt.stats   61   8514 213652 924092  8100/7798/342   21820/5180    36  238   25.13)
(smt.stats   62   8708 218657 946292  8114/7810/342   22019/5180    36  238   25.13)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8921 229894 1019808  8128/7824/344   22444/5363    37  248   25.23)
(smt.stats   64   9155 239863 1081252  8239/7829/344   23423/5371    37  248   25.23)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1888256 := 721420288&153722867639607970
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1867776 := 721420288&153722867639607970
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1867776 := 721420288&153722867639607970
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1835008 := 721420288&153722867639607970
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 1835008 := 721420288&153722867639607970
ramon: poll                 wall=6.000s usage=5.922s mem=26696KiB load=1.00 rootload=0.99
(smt.stats   65   9412 250366 1151186  8493/7950/344   24498/5377    37  248   25.42)
(smt.stats   66   9513 251746 1161801  8511/8207/359   24973/6073    38  251   25.52)
(smt.stats   67   9624 254249 1195343  8511/8207/359   25100/6073    38  251   25.52)
(smt.stats   68   9746 256670 1226194  8523/8215/359   25281/6073    38  251   25.52)
(smt.stats   69   9880 260932 1247958  8550/8232/359   25542/6152    39  251   25.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 350)
(smt.stats   70  10027 264264 1279006  8559/8245/359   25502/6153    39  251   25.61)
(smt.stats   71  10188 269870 1321145  8567/8259/361   25792/6284    40  253   25.61)
(smt.stats   72  10365 275496 1362932  8571/8263/361   26005/6284    40  253   25.71)
(smt.stats   73  10559 281263 1384300  8578/8268/361   26368/6294    41  256   25.71)
(smt.stats   74  10772 288350 1414380  8594/8273/361   26591/6294    41  256   25.71)
(smt.stats   75  11006 291794 1436108  8696/8311/361   26928/6297    41  256   25.80)
ramon: poll                 wall=7.000s usage=6.921s mem=27240KiB load=1.00 rootload=1.00
(smt.stats   76  11263 294578 1459302  8708/8400/362   27178/6352    42  262   25.80)
(smt.stats   77  11545 303217 1506596  8768/8411/365   27994/6353    42  262   26.07)
(smt.stats   78  11646 305196 1516247  8861/8553/366   28173/6527    43  290   26.17)
(smt.stats   79  11757 310336 1564393  8861/8553/366   28540/6527    43  290   26.17)
(smt.stats   80  11879 314336 1575045  8918/8553/366   28706/6528    43  290   26.34)
(smt.stats   81  12013 316412 1606280  8973/8665/366   28948/6695    44  290   26.34)
(smt.stats   82  12160 321934 1658465  8987/8679/366   29429/6695    44  290   26.34)
ramon: poll                 wall=8.000s usage=7.921s mem=27724KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12321 330943 1721319  8991/8683/366   29933/6695    44  290   26.44)
(smt.stats   84  12498 336794 1760409  9024/8687/366   30249/6697    44  290   26.44)
(smt.stats   85  12692 342707 1788780  9120/8728/366   30577/6701    44  290   26.54)
(smt.stats   86  12905 346702 1815608  9149/8836/367   30834/7039    45  292   26.54)
(smt.stats   87  13139 351096 1870562  9206/8853/370   31281/7040    45  292   26.63)
(smt.stats   88  13396 358423 1915158  9232/8899/370   31687/7079    46  314   26.63)
ramon: poll                 wall=9.000s usage=8.921s mem=28248KiB load=1.00 rootload=1.00
(smt.stats   89  13678 368742 2040093  9246/8938/370   32735/7079    46  314   26.72)
(smt.stats   90  13988 377558 2135059  9268/8960/371   33844/7283    47  327   26.82)
(smt.stats   91  14089 379539 2154892  9273/8961/371   33969/7283    47  327   26.82)
(smt.stats   92  14200 382382 2188089  9284/8966/371   34087/7284    47  327   26.82)
(smt.stats   93  14322 387199 2217808  9427/8982/371   34269/7285    47  327   26.82)
(smt.stats   94  14456 390751 2277151  9440/9128/371   34533/7285    47  327   26.82)
ramon: poll                 wall=10.000s usage=9.921s mem=28288KiB load=1.00 rootload=1.00
(smt.stats   95  14603 395327 2332014  9481/9141/371   34950/7286    47  327   26.91)
(smt.stats   96  14764 399302 2377886  9512/9184/372   35135/7847    48  327   26.91)
(smt.stats   97  14941 403931 2474741  9534/9212/372   35384/7847    48  327   26.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 1912)
(smt.stats   98  15135 410618 2553274  9545/9235/372   34099/7847    48  327   27.01)
(smt.stats   99  15348 419927 2642913  9558/9250/372   34586/7847    48  327   27.01)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 168 := 172&461168601842738798
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 168 := 172&461168601842738798
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 168 := 172&461168601842738797
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 168 := 172&461168601842738810
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 168 := 172&461168601842738810
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 168 := 172&461168601842738810
(smt.stats  100  15582 424966 2676415  9708/9263/372   35204/7852    48  327   27.43)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 66 := 86&67
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 67 := 17152 >>l 62
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 66 := 86&67
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 67 := 17408 >>l 62
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 66 := 86&67
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 67 := 31784704 >>l 62
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 86&0
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 87 := 0 >>l 58
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 86&0
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 87 := 0 >>l 58
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 86&0
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 2 := 0 >>l 58
(smt.stats  101  15839 431829 2717333  9746/9418/383   35635/8129    49  329   27.53)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 86&0
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 2 := 0 >>l 58
ramon: poll                 wall=11.000s usage=10.917s mem=29032KiB load=1.00 rootload=0.99
(smt.stats  102  16121 438688 2768844  9793/9470/393   36195/8131    49  329   27.63)
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&1
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 1 := 8570049850910895616 >>l 49
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&3
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 3 := 8570049850910895616 >>l 49
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&3
lshr: (lshr[64] (* 16 (bv2int %1)) (mod (+ 63 #645 #649) 64)) 3 := 8570049850910895616 >>l 49
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 0 := 525830440867594240 >>l 45
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 0 := 525830440867594240 >>l 45
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 0 := 525830440867594240 >>l 45
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 0 := 525830440867594240 >>l 45
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
lshr: (lshr[59] (bv2int %1) (+ 59 (* 576460752303423487 #108))) 0 := 525830440867594240 >>l 45
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 14945 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 14944 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 14912 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 14848 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 14336 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 30 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 4 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 8 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 16 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 128 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 256 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 321 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 322 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 320 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 384 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 768 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 768 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 768 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 768 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 512 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 512 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 512 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 1040 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 1032 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 1024 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 1024 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 1024 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 1024 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 1024 := 704512&14945
band: (band[59] (if (= #363 63) 396604997584755359744 (if #495 198302498792377679872 #492)) (lshr[64] (* 16 #346) (mod #652 64))) 0 := 704512&14945
band: (band[59] (if (= #112 58) 12393906174523604992 (if #517 6196953087261802496 #631)) (lshr[59] (bv2int %1) (+ 59 #634))) 1024 := 704512&14945
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  103  16431 445991 2810615 10038/9630/490   36945/8250    50  334   28.05)
(smt.stats  104  16771 453931 2859930 10244/9764/519   37485/8252    50  334   28.24)
(smt.stats  105  16872 455985 2873825 10237/9891/519   37592/8358    51  369   28.24)
(smt.stats  106  16983 458540 2890701 10272/9911/520   37908/8358    51  369   28.24)
(smt.stats  107  17105 462234 2916035 10299/9940/520   38073/8360    51  369   28.24)
(smt.stats  108  17239 465204 2951234 10312/9976/520   38292/8360    51  369   28.34)
ramon: poll                 wall=12.005s usage=11.920s mem=29884KiB load=1.00 rootload=1.01
(smt.stats  109  17386 473426 3021571 10317/9981/520   38606/8437    52  373   28.34)
(smt.stats  110  17547 477187 3078795 10325/9989/523   38933/8504    53  380   28.34)
(smt.stats  111  17724 481583 3116494 10341/9993/523   39143/8505    53  380   28.44)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  112  17918 487500 3169739 10358/10015/523   39362/8506    53  380   28.44)
(smt.stats  113  18131 495739 3227691 10427/10035/524   39933/8534    54  385   28.53)
ramon: poll                 wall=13.000s usage=12.915s mem=30124KiB load=1.00 rootload=0.99
(smt.stats  114  18365 507359 3316470 10508/10094/525   40369/8701    55  389   28.53)
(smt.stats  115  18622 517752 3432914 10587/10202/525   40873/8707    55  389   28.63)
(smt.stats  116  18904 529403 3659842 10597/10261/525   41287/8707    55  389   28.83)
(smt.stats  117  19214 532924 3735110 10636/10277/526   41719/8777    56  391   28.93)
ramon: poll                 wall=14.000s usage=13.915s mem=30488KiB load=1.00 rootload=1.00
(smt.stats  118  19554 543030 3816214 10670/10332/526   42658/8777    56  391   29.02)
(smt.stats  119  19927 557789 4018467 10679/10341/526   43410/8777    56  391   29.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats  120  20028 562601 4030689 10717/10371/526   43539/8777    56  391   29.21)
(smt.stats  121  20139 566941 4083376 10719/10371/526   43652/8777    56  391   29.21)
(smt.stats  122  20261 571274 4133473 10724/10378/526   43772/8777    56  391   29.21)
(smt.stats  123  20395 578024 4214031 10746/10383/526   43939/8777    56  391   29.21)
ramon: poll                 wall=15.000s usage=14.915s mem=30756KiB load=1.00 rootload=1.00
(smt.stats  124  20542 581432 4257370 10759/10406/527   44466/9029    57  396   29.31)
(smt.stats  125  20703 585898 4313416 10770/10421/527   45201/9029    57  396   29.41)
(smt.stats  126  20880 590305 4354058 10782/10434/527   45600/9029    57  396   29.50)
(smt.stats  127  21074 592317 4378062 10793/10447/528   45821/9366    58  397   29.50)
(smt.stats  128  21287 598712 4421836 10834/10481/528   46038/9367    58  397   29.50)
(smt.stats  129  21521 600401 4435176 10847/10493/528   46281/9368    58  397   29.50)
(smt.stats  130  21778 603681 4494086 10875/10529/529   46551/9401    59  428   29.50)
(smt.stats  131  22060 610690 4577419 10903/10557/531   47155/9402    59  428   29.60)
ramon: poll                 wall=16.000s usage=15.914s mem=31128KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  132  22370 615077 4610670 11139/10769/532   47463/9452    60  468   29.70)
(smt.stats  133  22710 620295 4650377 11160/10778/532   47817/9452    60  468   29.70)
(smt.stats  134  23083 624784 4692432 11162/10794/533   48339/9452    60  468   29.79)
(smt.stats  135  23493 637831 4742243 11192/10801/533   48919/9493    61  469   29.89)
ramon: poll                 wall=17.000s usage=16.912s mem=31408KiB load=1.00 rootload=1.00
(smt.stats  136  23594 640642 4778734 11195/10827/533   49117/9493    61  469   29.89)
(smt.stats  137  23705 645020 4827595 11200/10829/533   49458/9493    61  469   29.89)
(smt.stats  138  23827 648189 4871557 11202/10834/534   49709/9579    62  472   29.89)
(smt.stats  139  23961 650788 4911974 11205/10837/534   50018/9579    62  472   29.98)
(smt.stats  140  24108 653809 4940773 11214/10846/535   50272/9579    62  472   29.98)
(smt.stats  141  24269 659738 5019985 11216/10848/535   50557/9579    62  472   30.08)
(smt.stats  142  24446 665622 5082523 11275/10893/535   51212/9705    63  481   30.17)
(smt.stats  143  24640 673196 5123848 11278/10896/535   51508/9705    63  481   30.17)
ramon: poll                 wall=18.000s usage=17.907s mem=32040KiB load=0.99 rootload=0.99
(smt.stats  144  24853 677187 5192781 11279/10897/535   51749/9705    63  481   30.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 392)
(smt.stats  145  25087 682158 5294775 11283/10901/535   52045/9705    63  481   30.27)
(smt.stats  146  25344 692993 5398285 11286/10904/535   52531/9705    63  481   30.27)
(smt.stats  147  25626 701561 5490765 11288/10906/535   52989/9705    63  481   30.37)
ramon: poll                 wall=19.000s usage=18.907s mem=32040KiB load=1.00 rootload=1.00
(smt.stats  148  25936 710829 5534004 11299/10917/536   53311/9972    64  481   30.37)
(smt.stats  149  26276 722807 5645101 11584/11161/537   54531/10054    65  482   30.76)
ramon: poll                 wall=20.000s usage=19.907s mem=32808KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:30:25 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.987s
ramon: group.utime          19.959s
ramon: group.stime          0.028s
ramon: group.mempeak        33064KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.00
