ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:14:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28183 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1359
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rXRP5MO1Z24S.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             550437
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   228/228     0/0  61       0    18.53   0.00)
(sat.stats    101    765    0   228/228   101/28  61       0    18.87   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 310 :time 0.00)
(sat.stats    101    765    0   228/228   101/28  61       0    18.87   0.01)
(sat.stats    101    765    0   228/228   101/28  61       0    18.87   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 358218.87 :time 0.00)
(sat.stats    101    765    0   230/230    37/27  61       0    18.87   0.01)
(sat.stats    297   3899    1   230/230   233/169  61       0    19.07   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    301   4014    2   230/230   237/170  61       0    19.07   0.02)
(sat.stats    304   4048    3   230/230   240/173  61       0    19.07   0.02)
(sat.stats    307   4072    4   230/230   243/176  61       0    19.07   0.02)
(sat.stats    311   4088    5   230/230   247/180  61       0    19.07   0.02)
(sat.stats    331   4519    6   230/230   267/182  61       0    19.07   0.02)
(sat.stats    334   4672    7   231/231   270/183  61       0    19.07   0.02)
(sat.stats    338   4756    8   231/231   274/183  61       0    19.07   0.02)
(sat.stats    341   4830    9   231/231   277/183  61       0    19.07   0.03)
(sat.stats    344   4928   10   231/231   280/183  61       0    19.07   0.03)
(sat.stats    347   5043   11   231/231   283/183  61       0    19.07   0.03)
(sat.stats    350   5135   12   231/231   286/184  61       0    19.07   0.03)
(sat.stats    353   5219   13   231/231   289/184  61       0    19.07   0.03)
(sat.stats    356   5287   14   231/231   292/184  61       0    19.07   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1276 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1405 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    720  10814   27  2236/2236   665/254  69       0    20.50   0.68)
(sat.stats    723  10911   28  2253/2253   668/254  69       0    20.50   0.68)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5259 :time 0.00)
ramon: poll                 wall=1.000s usage=0.949s mem=22164KiB load=0.95 rootload=0.94
(sat.stats   1221  36972   40  5449/5449  1319/369  73       0    21.18   1.09)
 (sat-cleaner :elim-literals 12 :elim-clauses 2 :cost 7491 :time 0.00)
(sat.stats   1773  45921   83  6480/6480  1884/660  74       0    21.27   1.24)
(sat.stats   2419  61611  107  7715/7715  2582/769  74       0    21.69   1.60)
ramon: poll                 wall=2.000s usage=1.948s mem=23520KiB load=1.00 rootload=1.00
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 0 := 3038 << 34
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 26751 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 26750 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #795 #799) 64)) 896617372705432 := 6076 << 33
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 9444 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 3 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 2 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 74112 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 112 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 8 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 64 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 32 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 53760 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 256 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 1061888 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 2048 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 52150272 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 4096 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 8192 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 538738688 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 65536 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 4171366400 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 6975389696 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 10770448384 := 15178377406&52192442580992
band: (band[48] (if (= #58 47) 1 (if #568 3 #701)) (shl[48] (bv2int %0) (+ 48 #704))) 0 := 15178377406&52192442580992
band: (band[48] (if (= #329 63) 1 (if #545 3 #788)) (shl[64] (* 2 #57) (mod #803 64))) 2053111808 := 15178377406&52192442580992
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 17003 :time 0.00)
 (sat-cleaner :elim-literals 12 :elim-clauses 3 :cost 18000 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 18272 :time 0.00)
 (sat-cleaner :elim-literals 4 :elim-clauses 2 :cost 19669 :time 0.00)
(sat.stats   3696 105011  206 15068/15066  3918/982 229       0    24.71   2.70)
ramon: poll                 wall=3.000s usage=2.948s mem=25956KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 24618 :time 0.00)
ramon: poll                 wall=4.000s usage=3.948s mem=26724KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   5394 133302  560 29325/29323  5247/1282 230       0    27.04   4.52)
ramon: poll                 wall=5.000s usage=4.947s mem=29200KiB load=1.00 rootload=0.99
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 276613073731584 := 16101 << 27
ramon: poll                 wall=6.000s usage=5.947s mem=31528KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.947s mem=32632KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.946s mem=33676KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.946s mem=34796KiB load=1.00 rootload=1.00
(sat.stats   8090 168197  859 65768/65765  6913/1545 230       0    34.65   9.65)
ramon: poll                 wall=10.000s usage=9.944s mem=35940KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.944s mem=36864KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 40654 :time 0.00)
ramon: poll                 wall=12.000s usage=11.944s mem=38592KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.943s mem=38660KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.943s mem=38664KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 43253 :time 0.00)
ramon: poll                 wall=15.000s usage=14.943s mem=39080KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.943s mem=46180KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.942s mem=50044KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.942s mem=61284KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.001s usage=18.942s mem=64120KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.940s mem=65732KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:14:55 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.998s
ramon: group.utime          19.970s
ramon: group.stime          0.028s
ramon: group.mempeak        67452KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              1.00
