ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:49:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40834 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/OhgGvZdgQJ2T.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3827460
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   250/250     0/0  58       0    18.52   0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.75   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 815 :time 0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.75   0.01)
(sat.stats    102    745    0   250/250   102/28  58       0    18.75   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 470218.84 :time 0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.84   0.01)
(sat.stats    106    768    1   250/250   106/32  58       0    18.84   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    109    837    2   250/250   109/35  58       0    18.84   0.01)
(sat.stats    112    928    3   250/250   112/38  58       0    18.84   0.01)
(sat.stats    115   1041    4   250/250   115/41  58       0    18.84   0.01)
(sat.stats    118   1164    5   250/250   118/44  58       0    18.84   0.01)
(sat.stats    121   1311    6   250/250   121/47  58       0    18.84   0.01)
(sat.stats    129   1653    7   250/250   129/53  58       0    18.84   0.01)
(sat.stats    132   1671    8   250/250   132/53  58       0    18.84   0.01)
(sat.stats    135   1712    9   250/250   135/53  58       0    18.84   0.01)
(sat.stats    138   1783   10   250/250   138/53  58       0    18.84   0.01)
(sat.stats    141   1855   11   250/250   141/55  58       0    18.84   0.01)
(sat.stats    144   1949   12   250/250   144/57  58       0    18.84   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    336   8219   19   252/252   336/170  58       0    19.55   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2585 :time 0.00)
(sat.stats    340   8429   20   250/250   340/171  64       0    19.55   0.05)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2821 :time 0.00)
(sat.stats    485  12424   27   254/254   484/237  66       0    19.64   0.07)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4670 :time 0.00)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 1373379 >>l 36
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 0&16777216
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #734) 64)) 13835058055282177500 := 1892992 >>l 36
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 5158 :time 0.00)
(sat.stats    728  18750   41   450/446   720/365  85       0    20.03   0.14)
 (sat-cleaner :elim-literals 19 :elim-clauses 0 :cost 6076 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 1 := 1&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 2 := 7592376&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 2 := 918295&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 4 := 4&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 8 := 8&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 16 := 18&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 32 := 34&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 64 := 66&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 128 := 130&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 256 := 258&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 512 := 514&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 1024 := 1026&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 2048 := 2050&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 4096 := 4098&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 8192 := 8194&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 16384 := 16386&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 32768 := 32770&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 65536 := 65538&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 131072 := 131074&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 262144 := 262146&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 524288 := 524290&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 1048576 := 1048578&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 2097152 := 2097154&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 4194304 := 4194306&16777216
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 32257 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 52846 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 104936 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 4 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 136784 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 17792 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 96 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 64 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 4316416 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 7771648 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 3141632 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 1024 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 2048 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 3047424 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 16384 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 8192 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 1966080 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 65536 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 3145728 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 262144 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 524288 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 2097152 := 16777216&8388607
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #474 58) 576460752303423488 (if #476 288230376151711744 #590))) 0 := 8388607&16777216
band: (band[59] (if (= #605 63) 36893488147419103232 (if #607 18446744073709551616 #731)) (lshr[64] (bv2int %0) (mod #735 64))) 4194304 := 16777216&8388607
 (sat-cleaner :elim-literals 114 :elim-clauses 1 :cost 9702 :time 0.00)
ramon: poll                 wall=1.000s usage=0.916s mem=37908KiB load=0.92 rootload=0.89
(sat.stats   1229  26402   72 63003/63000  2529/1743 379       0    40.32   1.25)
ramon: poll                 wall=2.000s usage=1.914s mem=55616KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.912s mem=61396KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.910s mem=66324KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.908s mem=70236KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.907s mem=90200KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.906s mem=94200KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.902s mem=96736KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.901s mem=97MiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.901s mem=100MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.005s usage=10.905s mem=102MiB load=1.00 rootload=1.01
ramon: poll                 wall=12.000s usage=11.896s mem=105MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.896s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.896s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.896s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.896s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.896s mem=113MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.896s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.896s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.005s usage=19.904s mem=117MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:49:33 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.060s
ramon: group.total          19.986s
ramon: group.utime          19.922s
ramon: group.stime          0.064s
ramon: group.mempeak        117MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.087s
ramon: loadavg              0.99
