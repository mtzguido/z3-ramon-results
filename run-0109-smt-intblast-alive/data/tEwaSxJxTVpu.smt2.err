ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:01:24 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40565 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tEwaSxJxTVpu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3100240
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4034   1650  1283/1138/110      95/9     8   16   19.23)
(smt.stats    1    202   4588   2114  1893/1649/110     200/12     8   16   19.52)
(smt.stats    2    313   5870   3364  2010/1805/110     321/14     8   16   19.62)
(smt.stats    3    416   6954   4774  2083/1906/114     430/31     9   20   19.62)
(smt.stats    4    527   7398   5390  2097/1916/117     540/71    10   23   19.71)
(smt.stats    5    649   8982   7128  2489/2254/118     682/72    11   28   19.81)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    750  10468   8841  2536/2292/118     783/90    12   30   19.81)
(smt.stats    7    861  11951  11080  2713/2392/118     904/106    12   30   19.91)
(smt.stats    8    986  12584  13055  2957/2707/127    1022/158    13   31   20.01)
(smt.stats    9   1120  15241  14899  3002/2727/128    1156/167    14   69   20.01)
ramon: poll                 wall=1.000s usage=0.989s mem=21168KiB load=0.99 rootload=0.98
(smt.stats   10   1221  18641  17460  3023/2753/129    1261/168    14   69   20.01)
(smt.stats   11   1332  21109  19780  3063/2808/129    1380/175    15   69   20.01)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1454  23832  26772  3070/2818/129    1498/175    15   69   20.12)
(smt.stats   13   1588  24643  29028  3102/2820/130    1650/192    16   70   20.12)
(smt.stats   14   1735  25633  33405  3148/2863/130    1812/193    16   70   20.21)
(smt.stats   15   1836  26632  36783  3152/2901/134    1918/219    17   77   20.21)
(smt.stats   16   1947  27334  39241  3153/2902/134    2028/219    17   77   20.21)
(smt.stats   17   2069  28551  41992  3162/2905/134    2152/219    17   77   20.35)
(smt.stats   18   2203  29976  48102  3218/2963/135    2289/227    18   80   20.35)
(smt.stats   19   2350  32825  54069  3243/2973/135    2443/227    18   80   20.35)
(smt.stats   20   2511  34981  58290  3256/2995/135    2613/227    18   80   20.35)
(smt.stats   21   2612  35745  60243  3260/3009/135    2712/227    18   80   20.35)
(smt.stats   22   2723  37326  63776  3260/3009/135    2823/227    18   80   20.53)
(smt.stats   23   2845  38640  67037  3264/3013/135    2955/227    18   80   20.53)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 132&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 66 := 130&67
(smt.stats   24   2979  39701  71959  3277/3024/146    3089/249    19   83   20.53)
(smt.stats   25   3126  40393  75051  3279/3028/146    3236/249    19   83   20.53)
ramon: poll                 wall=2.000s usage=1.989s mem=21744KiB load=1.00 rootload=1.00
(smt.stats   26   3287  43164  82060  3280/3029/146    3396/249    19   83   20.53)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 62 := 72057594037927742&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 56 := 72057594037927742&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 56 := 72057594037927742&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 56 := 72057594037927744&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 48 := 72057594037927744&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 4 := 72057594037927744&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 72057594037927744&67
(smt.stats   27   3464  45708  87728  3295/3044/168    3588/251    20   88   20.73)
(smt.stats   28   3565  46763  90847  3303/3049/168    3686/253    20   88   20.73)
(smt.stats   29   3676  49206  94287  3312/3059/171    3797/253    20   88   20.73)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 504403158265495552 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 504403158265495552 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 504403158265495552 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 504403158265495552 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 144115188075855872 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 144115188075855872 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 48 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 32 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 248 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 246 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 1 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455666 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455665 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455664 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455648 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455616 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 128 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 2071986176&4455666
(smt.stats   30   3798  50808  98045  3428/3097/187    3913/263    21   92   21.03)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4096 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8192 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 16384 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32768 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 65536 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 131072 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 262144 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 524288 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1048576 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2097152 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4194304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 16384 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32768 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 65536 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 131072 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 65536 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 131072 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 262144 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 524288 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1048576 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2097152 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4194304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4194304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2621440 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2228224 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2129920 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8192 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 256 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 256 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 2 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 2 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 4 := 2071986176&4455666
(smt.stats   31   3932  52396 101637  3579/3297/372    4184/335    22  131   21.33)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4160 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4160 := 2071986176&4455666
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4079  56443 110695  3647/3381/381    4382/336    22  131   21.53)
(smt.stats   33   4240  60566 119442  3666/3404/384    4539/422    23  165   21.73)
(smt.stats   34   4417  61012 119820  3829/3566/384    4722/422    23  165   22.12)
(smt.stats   35   4611  63499 127584  4406/4104/385    5116/448    24  167   22.31)
(smt.stats   36   4712  65037 134110  4445/4182/387    5285/633    25  173   22.31)
(smt.stats   37   4823  65846 140289  4453/4187/387    5404/633    25  173   22.41)
(smt.stats   38   4945  67899 149318  4469/4196/387    5705/718    26  177   22.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
ramon: poll                 wall=3.000s usage=2.985s mem=23740KiB load=1.00 rootload=0.98
(smt.stats   39   5079  70834 154319  4609/4218/387    5940/721    26  177   22.50)
(smt.stats   40   5226  73449 163754  4639/4365/388    6140/960    27  178   22.50)
(smt.stats   41   5387  77048 180522  4654/4385/391    6360/989    28  178   22.50)
(smt.stats   42   5564  80041 195883  4669/4399/393    6645/1021    29  183   22.60)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 71908086677960728&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 15564290804832466968 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 71908086677960728&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 15564290804832466968 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 71908086677960848&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 216023274753816720 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 71908086677960848&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 216023274753816720 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037925891 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057593752813820 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057593752813819 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 1 := 2&1
(smt.stats   43   5758  82348 206818  4828/4550/405    6940/1078    30  192   22.80)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2&1
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1 := 2&1
(smt.stats   44   5971  85639 221373  4865/4584/417    7258/1117    31  204   23.25)
(smt.stats   45   6072  89520 230568  4887/4599/417    7480/1117    31  204   23.25)
ramon: poll                 wall=4.000s usage=3.984s mem=24552KiB load=1.00 rootload=1.00
(smt.stats   46   6183  93119 242348  4913/4611/417    7666/1120    31  204   23.34)
(smt.stats   47   6305  96076 249236  4979/4643/417    7840/1122    31  204   23.34)
(smt.stats   48   6439  99477 262028  5049/4725/417    8062/1123    31  204   23.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   49   6586 103046 277824  5082/4791/420    8320/1346    32  207   23.53)
(smt.stats   50   6747 107412 291551  5130/4829/420    8533/1450    33  208   23.53)
ramon: poll                 wall=5.000s usage=4.984s mem=24820KiB load=1.00 rootload=1.00
(smt.stats   51   6924 109307 305261  5143/4865/420    8712/1450    33  208   23.63)
(smt.stats   52   7118 112875 320030  5147/4869/420    8943/1450    33  208   23.63)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 64 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 64 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 64 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 65 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 65 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 579&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 579 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 579&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 579 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 579&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 579 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 635&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 13979173243358020219 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 635&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 13979173243358020219 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 579&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 13979173243358020163 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 35 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 34 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 38273891105243136 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 38273891105243136 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 4 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 4 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 64 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 64 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 16 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 16 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8 := 584013230976&67
(smt.stats   53   7331 119032 341622  5271/4871/420    9258/1467    33  208   23.85)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 32 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 32 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013223808&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013223808&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8 := 584013223808&67
(smt.stats   54   7565 125717 368857  5355/5046/477    9754/1604    34  218   23.94)
(smt.stats   55   7666 128750 382703  5402/5108/477    9885/1758    35  239   24.04)
ramon: poll                 wall=6.000s usage=5.984s mem=25368KiB load=1.00 rootload=0.99
(smt.stats   56   7777 133473 400346  5462/5111/477   10075/1763    35  239   24.04)
(smt.stats   57   7899 139478 420747  5557/5256/478   10343/1880    36  244   24.13)
(smt.stats   58   8033 142160 434601  5596/5273/478   10574/1883    36  244   24.23)
ramon: poll                 wall=7.000s usage=6.983s mem=25588KiB load=1.00 rootload=1.00
(smt.stats   59   8180 147982 453874  5648/5319/478   10769/1886    36  244   24.23)
(smt.stats   60   8341 153325 475358  5841/5376/479   11229/1922    37  250   24.61)
ramon: poll                 wall=8.000s usage=7.983s mem=26240KiB load=1.00 rootload=1.00
(smt.stats   61   8518 158350 499148  5998/5614/479   11707/1925    37  250   24.80)
(smt.stats   62   8712 165684 535027  6154/5786/483   12221/2135    38  252   24.90)
ramon: poll                 wall=9.000s usage=8.983s mem=26368KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.005s usage=9.987s mem=26372KiB load=1.00 rootload=1.01
(smt.stats   63   8925 172527 563678  6412/5875/483   12782/2274    39  264   24.99)
ramon: poll                 wall=11.000s usage=10.982s mem=26564KiB load=1.00 rootload=0.99
(smt.stats   64   9159 180488 593923  6732/6140/485   13531/2525    40  268   25.19)
ramon: poll                 wall=12.000s usage=11.982s mem=26764KiB load=1.00 rootload=1.00
(smt.stats   65   9416 189777 620490  7187/6514/485   14447/2536    40  268   25.47)
(smt.stats   66   9517 192624 630550  7272/6957/485   14697/2536    40  268   25.47)
ramon: poll                 wall=13.000s usage=12.982s mem=27104KiB load=1.00 rootload=1.00
(smt.stats   67   9628 197317 651403  7373/6987/485   15118/2547    40  268   25.57)
(smt.stats   68   9750 199576 655415  7550/7114/485   15407/2553    40  268   25.66)
ramon: poll                 wall=14.000s usage=13.981s mem=27140KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   69   9884 203874 679579  7772/7346/485   15797/2554    40  268   25.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 31)
(smt.stats   70  10031 208110 705535  7896/7493/486   16250/2952    41  270   25.76)
ramon: poll                 wall=15.000s usage=14.981s mem=27280KiB load=1.00 rootload=1.00
(smt.stats   71  10192 214199 729960  8098/7633/486   16670/2956    41  270   25.95)
(smt.stats   72  10369 219726 751723  8358/7847/486   16904/2969    41  270   26.05)
ramon: poll                 wall=16.000s usage=15.981s mem=27508KiB load=1.00 rootload=1.00
(smt.stats   73  10563 223948 772377  8647/8090/486   17527/2973    41  270   26.19)
ramon: poll                 wall=17.000s usage=16.980s mem=27732KiB load=1.00 rootload=1.00
(smt.stats   74  10776 230493 825465  8940/8453/487   18231/3275    42  270   26.39)
ramon: poll                 wall=18.000s usage=17.980s mem=27956KiB load=1.00 rootload=1.00
(smt.stats   75  11010 235928 867145  9069/8662/487   19090/3285    42  270   26.58)
(smt.stats   76  11267 243880 892465  9284/8787/487   19601/3291    42  270   26.58)
ramon: poll                 wall=19.000s usage=18.980s mem=28192KiB load=1.00 rootload=1.00
(smt.stats   77  11549 251402 933694  9525/9231/491   20229/3494    43  275   26.77)
(smt.stats   78  11650 254105 958210  9586/9238/492   20554/3614    44  288   26.77)
ramon: poll                 wall=20.000s usage=19.979s mem=28324KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:01:44 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.994s
ramon: group.utime          19.970s
ramon: group.stime          0.024s
ramon: group.mempeak        28584KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
