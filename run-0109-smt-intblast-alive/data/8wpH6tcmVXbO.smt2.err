ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:38:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42660 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/8wpH6tcmVXbO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2824325
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2497    346  1292/1110/107     103/22     5   18   19.15)
(smt.stats    1    202   3882   1028  1790/1626/109     205/28     6   19   19.25)
(smt.stats    2    313   4677   1730  1954/1702/109     313/29     7   23   19.54)
ramon: poll                 wall=1.000s usage=0.921s mem=20708KiB load=0.92 rootload=0.91
(smt.stats    3    414   6041   3287  2237/2065/115     411/31     8   27   19.64)
(smt.stats    4    525   7683   4238  2273/2098/119     520/76    10   33   19.76)
(smt.stats    5    647  10758   7155  2845/2497/124     645/92    11   36   19.98)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  12271   9332  2967/2721/125     752/100    13   37   19.98)
(smt.stats    7    859  14915  12166  3059/2759/125     863/101    13   37   20.07)
(smt.stats    8    981  16475  15514  3172/2929/133     990/114    14   39   20.07)
(smt.stats    9   1115  22854  18223  3190/2939/133    1113/119    15   51   20.17)
(smt.stats   10   1216  25340  21156  3227/2966/134    1219/124    16   52   20.26)
ramon: poll                 wall=2.000s usage=1.919s mem=21492KiB load=1.00 rootload=1.00
(smt.stats   11   1327  27729  26307  3315/3026/134    1337/124    16   52   20.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32088  30720  3369/3122/134    1458/124    16   52   20.36)
(smt.stats   13   1583  35704  34702  3395/3151/135    1578/137    17   53   20.36)
(smt.stats   14   1730  41359  48990  3396/3159/135    1729/137    17   53   20.50)
(smt.stats   15   1831  43073  52700  3402/3159/135    1833/137    17   53   20.50)
(smt.stats   16   1942  45559  57090  3452/3175/135    1945/138    17   53   20.60)
(smt.stats   17   2064  49756  61765  3641/3249/135    2069/139    17   53   20.69)
(smt.stats   18   2198  55602  73228  3661/3420/135    2194/139    17   53   20.69)
(smt.stats   19   2345  63799  82199  3682/3425/136    2338/145    18   58   20.79)
(smt.stats   20   2506  67788  87661  3685/3446/136    2502/145    18   58   20.99)
(smt.stats   21   2607  71062  94964  3696/3452/136    2606/145    18   58   20.99)
ramon: poll                 wall=3.000s usage=2.918s mem=22308KiB load=1.00 rootload=1.00
(smt.stats   22   2718  75160  98453  3707/3466/136    2712/145    18   58   20.99)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 226 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 224 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 64 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 128 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 64 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 64 := 35184372089024&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 128 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1280 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1536 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2048 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2048 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4096 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8192 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 32768 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 65536 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 131072 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 262144 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 524288 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 524288 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1048576 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2097152 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4194304 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 33554432 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 67108864 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 134217728 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 268435456 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 536870912 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2147483648 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4294967296 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8589934592 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 17179869184 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 34359738368 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 68719476736 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 137438953472 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 274877906944 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8589934592 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 17179869184 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 34359738368 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 68719476736 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 137438953472 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 137438953472 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 274877906944 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 549755813888 := 35184372088967&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 196608 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 131072 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 131072 := 35253628567552&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 17179869184 := 35184374185984&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4096 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4096 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8192 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091566079&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16384 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9535 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9534 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9532 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9528 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9527 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565568&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565823&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565824&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9472 := 35253091565824&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 9216 := 35253091565568&35184372088832
(smt.stats   23   2840  76678 100698  3958/3484/152    2961/181    19   62   22.18)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2147483648 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2147483648 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2147483648 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35253091696640&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1073741824 := 35190277800448&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 1048576 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 262144 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 262144 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 524288 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2097152 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2097152 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 2097152 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4194304 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 20971520 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 16777216 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 8388608 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4194304 := 35253091697152&35184372088832
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 4194304 := 35253091697152&35184372088832
(smt.stats   24   2974  80404 107393  4037/3785/414    3290/397    20  116   22.37)
(smt.stats   25   3121  85596 122681  4049/3810/414    3460/397    20  116   22.46)
(smt.stats   26   3282  93838 146082  4067/3814/414    3682/397    20  116   22.56)
ramon: poll                 wall=4.000s usage=3.914s mem=24144KiB load=1.00 rootload=0.99
(smt.stats   27   3459  97325 154051  4251/3837/414    3868/401    20  116   22.84)
(smt.stats   28   3560 101587 160944  4509/4272/424    4111/486    21  119   23.04)
(smt.stats   29   3671 108483 176758  4510/4273/424    4248/486    21  119   23.13)
ramon: poll                 wall=5.000s usage=4.914s mem=24628KiB load=1.00 rootload=1.00
(smt.stats   30   3793 112869 184790  4631/4275/424    4440/594    22  146   23.13)
(smt.stats   31   3927 117551 198567  4843/4606/426    4578/696    23  151   23.23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 121853 216737  4865/4628/434    4727/696    23  151   23.23)
(smt.stats   33   4235 130632 237507  4871/4635/435    4868/715    24  191   23.33)
ramon: poll                 wall=6.000s usage=5.914s mem=25264KiB load=1.00 rootload=0.99
(smt.stats   34   4412 138317 264496  4891/4655/438    5075/753    26  203   23.76)
(smt.stats   35   4606 144642 291920  4910/4673/441    5352/794    27  212   23.86)
(smt.stats   36   4707 146962 299094  5036/4702/441    5479/795    27  212   24.05)
ramon: poll                 wall=7.000s usage=6.914s mem=25776KiB load=1.00 rootload=1.00
(smt.stats   37   4818 150492 309660  5157/4908/442    5652/796    28  213   24.24)
(smt.stats   38   4940 152932 320836  5248/4932/442    5826/796    28  213   24.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 957)
(smt.stats   39   5074 157895 326482  5313/5040/442    5133/800    28  213   24.24)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 6&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355334 := 841 << 42
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 6&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355334 := 841 << 42
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 6&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355334 := 841 << 42
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 6&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355334 := 841 << 42
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 5&2199023255552
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355333 := 841 << 42
(smt.stats   40   5221 163789 339097  5382/5135/455    5328/953    30  306   24.33)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 48378511622144&8796093022208
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 48378511622144&8796093022208
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 48378511622144&8796093022208
(smt.stats   41   5382 172763 350429  5545/5237/456    5532/958    30  306   24.43)
(smt.stats   42   5559 182709 371720  5572/5284/475    6001/1008    32  318   24.81)
ramon: poll                 wall=8.000s usage=7.913s mem=26748KiB load=1.00 rootload=1.00
(smt.stats   43   5753 191085 390524  5740/5418/477    6368/1066    33  326   24.92)
(smt.stats   44   5966 197637 407438  6121/5843/479    6979/1170    34  330   25.11)
(smt.stats   45   6067 202057 422414  6131/5853/482    7430/1248    35  337   25.11)
ramon: poll                 wall=9.000s usage=8.913s mem=26748KiB load=1.00 rootload=1.00
(smt.stats   46   6178 204254 426671  6315/5862/484    7662/1251    35  337   25.21)
(smt.stats   47   6300 204911 428110  6338/6044/484    7887/1251    35  337   25.30)
(smt.stats   48   6434 206673 433263  6725/6375/485    8190/1259    36  354   25.49)
(smt.stats   49   6581 213300 459227  6899/6621/486    8630/1259    36  354   25.49)
(smt.stats   50   6742 224044 505318  6899/6621/486    8785/1488    37  364   25.59)
ramon: poll                 wall=10.000s usage=9.905s mem=27508KiB load=0.99 rootload=0.99
(smt.stats   51   6919 231535 526850  7081/6690/487    9190/1509    38  364   25.88)
ramon: poll                 wall=11.000s usage=10.904s mem=27508KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7113 239071 537928  7270/6850/489    9665/1517    38  364   26.07)
ramon: poll                 wall=12.000s usage=11.904s mem=28088KiB load=1.00 rootload=1.00
(smt.stats   53   7326 251974 560388  7452/7066/489   10091/1626    39  367   26.36)
ramon: poll                 wall=13.000s usage=12.903s mem=28264KiB load=1.00 rootload=0.99
(smt.stats   54   7560 261185 597158  7670/7380/490   10963/1761    40  371   26.46)
(smt.stats   55   7661 264626 607094  7725/7406/491   11276/1763    40  371   26.56)
ramon: poll                 wall=14.000s usage=13.903s mem=28264KiB load=1.00 rootload=1.00
(smt.stats   56   7772 268557 616263  7800/7469/491   11516/2065    41  374   26.56)
ramon: poll                 wall=15.000s usage=14.867s mem=28516KiB load=0.96 rootload=0.97
(smt.stats   57   7894 274416 631963  7924/7547/491   11863/2075    41  374   26.75)
(smt.stats   58   8028 279468 647874  7968/7679/492   12435/2186    42  376   26.75)
(smt.stats   59   8175 286130 652493  7973/7695/492   12681/2186    42  376   26.75)
(smt.stats   60   8336 305505 724601  7988/7710/492   12842/2186    42  376   26.84)
ramon: poll                 wall=16.000s usage=15.866s mem=28772KiB load=1.00 rootload=1.00
(smt.stats   61   8513 313090 747125  8134/7717/492   13440/2189    42  376   27.03)
ramon: poll                 wall=17.000s usage=16.866s mem=28772KiB load=1.00 rootload=1.00
(smt.stats   62   8707 321066 768031  8330/7884/492   14126/2194    42  376   27.19)
ramon: poll                 wall=18.000s usage=17.845s mem=29204KiB load=0.98 rootload=0.98
(smt.stats   63   8920 328986 798170  8776/8137/492   14717/2215    42  376   27.38)
ramon: poll                 wall=19.000s usage=18.845s mem=29228KiB load=1.00 rootload=1.00
(smt.stats   64   9154 341844 835245  8803/8513/494   15261/2593    44  380   27.38)
(smt.stats   65   9411 359678 881650  8867/8532/494   16063/2596    44  380   27.48)
(smt.stats   66   9512 361755 887901  8900/8614/495   16494/2937    45  403   27.58)
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355328 := 140737488355327 << 1
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355328 := 140737488355327 << 1
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355328 := 140737488355327 << 1
band: (band[47] (shl[64] (bv2int %0) (mod #713 64)) (if (= #727 63) 0 (if #729 1 #853))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #712) 64)) 140737488355328 := 140737488355327 << 1
(smt.stats   67   9623 363249 898934  8933/8634/496   16705/2940    45  403   27.67)
ramon: poll                 wall=20.000s usage=19.828s mem=29292KiB load=0.98 rootload=0.98
ramon: end                  Tue Dec 24 14:38:29 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.020s
ramon: group.total          19.914s
ramon: group.utime          19.886s
ramon: group.stime          0.028s
ramon: group.mempeak        29804KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              0.99
