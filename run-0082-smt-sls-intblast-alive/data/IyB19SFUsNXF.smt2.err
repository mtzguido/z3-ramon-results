ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:11:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28650 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/IyB19SFUsNXF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             742320
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   84.7458     10000        49          0            1        2)
(smt.stats    0    101   4800    573  1241/1066/98     103/24     6   15   52.05)
(sat.ddfw       1      1   44.0573     20001        98          1            1        3)
(sat.ddfw       1      1   44.2478     40001       196          2            1        5)
(smt.stats    1    202   5184   1110  2493/2188/101     202/54     9   18   52.43)
(smt.stats    2    313   5821   2294  2827/2514/104     351/81    10   24   52.43)
(sat.ddfw       1      1   38.0228     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.950s mem=54656KiB load=0.95 rootload=0.94
(smt.stats    3    414   6226   3547  3189/2810/105     469/110    11   25   52.64)
(smt.stats    4    525   8218   6024  3262/3023/112     609/164    14   38   52.64)
(sat.ddfw       1      1   32.4939    110001       539          4            1       12)
(smt.stats    5    647  11051   7958  3327/3068/112     741/169    14   38   52.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  12096  12422  3354/3102/113     851/196    15   39   52.74)
(smt.stats    7    859  13150  14798  3373/3124/113    1003/196    15   39   52.85)
(smt.stats    8    981  15120  17255  3393/3160/115    1122/246    16   42   52.85)
(smt.stats    9   1115  18190  24827  3420/3167/118    1255/251    17   43   52.96)
(sat.ddfw       1      1   27.9793    160000       784          5            1       17)
(smt.stats   10   1216  20140  29392  3477/3235/119    1381/256    19   45   52.96)
ramon: poll                 wall=2.000s usage=1.948s mem=55084KiB load=1.00 rootload=1.00
(smt.stats   11   1327  21346  34669  3499/3245/119    1502/256    19   45   53.09)
(smt.stats   12   1449  23659  38231  3519/3270/119    1626/256    19   45   53.09)
(smt.stats   13   1583  25515  47273  3557/3301/121    1755/259    20   49   53.09)
(smt.stats   14   1731  27284  57664  3593/3326/121    1910/260    20   49   53.09)
(sat.ddfw       1      1   24.4304    220001      1078          6            1       23)
(smt.stats   15   1832  28934  62218  3613/3362/121    2021/260    20   49   53.21)
(smt.stats   16   1943  32207  65602  3669/3436/123    2140/283    21   52   53.21)
(smt.stats   17   2065  35209  72579  3725/3441/123    2271/284    21   52   53.21)
(smt.stats   18   2199  37754  84709  3738/3494/123    2408/284    21   52   53.31)
ramon: poll                 wall=3.000s usage=2.946s mem=55464KiB load=1.00 rootload=1.00
(smt.stats   19   2346  41961  88946  3738/3505/123    2557/284    21   52   53.44)
(sat.ddfw       1      1   21.7189    290001      1421          7            1       30)
(smt.stats   20   2507  44581  92515  3792/3508/123    2721/284    21   52   53.53)
(smt.stats   21   2608  46551  96202  3869/3571/123    2837/286    21   52   53.53)
(smt.stats   22   2719  49327  99081  3913/3641/123    2952/288    21   52   53.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   23   2841  51394 107996  3944/3703/123    3077/288    21   52   53.63)
ramon: poll                 wall=4.000s usage=3.943s mem=55676KiB load=1.00 rootload=0.99
(smt.stats   24   2975  53631 114783  4016/3719/123    3225/290    21   52   53.63)
(smt.stats   25   3122  55795 122885  4029/3796/123    3376/290    21   52   53.63)
(sat.ddfw       1      1   19.4316    370001      1813          8            1       38)
(smt.stats   26   3283  60000 128618  4031/3798/123    3535/290    21   52   53.80)
(smt.stats   27   3460  62490 137798  4065/3803/123    3715/290    21   52   53.95)
(smt.stats   28   3561  63982 142107  4072/3838/123    3821/290    21   52   53.95)
(smt.stats   29   3672  67841 149772  4077/3844/123    3930/290    21   52   54.09)
(smt.stats   30   3794  70435 155823  4114/3865/123    4067/292    21   52   54.09)
(smt.stats   31   3928  72638 161774  4157/3915/123    4210/292    21   52   54.30)
(smt.stats   32   4075  75880 165632  4198/3933/123    4379/292    21   52   54.30)
ramon: poll                 wall=5.000s usage=4.942s mem=56412KiB load=1.00 rootload=0.99
(smt.stats   33   4236  77949 171750  4315/4000/123    4557/296    21   52   54.30)
(sat.ddfw       1      1    17.654    460001      2254          9            1       47)
(smt.stats   34   4413  80336 177632  4537/4108/123    4767/298    21   52   54.42)
(smt.stats   35   4607  82642 183946  4545/4309/123    4964/298    21   52   54.42)
(smt.stats   36   4708  83756 189784  4545/4312/123    5066/298    21   52   54.52)
(smt.stats   37   4819  85026 194537  4546/4313/123    5178/298    21   52   54.52)
(smt.stats   38   4941  86298 199881  4546/4313/123    5301/298    21   52   54.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075  86810 208281  4547/4314/123    5434/298    21   52   54.52)
(smt.stats   40   5222  88253 217123  4562/4315/123    5582/299    21   52   54.64)
ramon: poll                 wall=6.000s usage=5.935s mem=57016KiB load=0.99 rootload=1.00
(smt.stats   41   5383  90724 223551  4600/4351/123    5767/300    21   52   54.64)
(smt.stats   42   5560  92875 229560  4613/4373/123    5959/301    21   52   54.86)
(sat.ddfw       1      1   16.1316    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   43   5754  97389 238625  4671/4383/123    6177/305    21   52   54.86)
(smt.stats   44   5967  99718 248442  4910/4445/123    6396/306    21   52   54.96)
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 23567 := 1099511627776&23567
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 23568 := 1099511627776&23568
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 23566 := 1099511627776&23567
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 23584 := 1099511627776&23584
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 23584 := 1099511627776&23584
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 23616 := 1099511627776&23616
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 23680 := 1099511627776&23680
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 23808 := 1099511627776&23808
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 24064 := 1099511627776&24064
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 24576 := 1099511627776&24576
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 32768 := 1099511627776&32768
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 65536 := 1099511627776&65536
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 131072 := 1099511627776&131072
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 262144 := 1099511627776&262144
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 524288 := 1099511627776&524288
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1048576 := 1099511627776&1048576
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 2097152 := 1099511627776&2097152
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 4194304 := 1099511627776&4194304
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8388608 := 1099511627776&8388608
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 16777216 := 1099511627776&16777216
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 33554432 := 1099511627776&33554432
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 67108864 := 1099511627776&67108864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 134217728 := 1099511627776&134217728
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 268435456 := 1099511627776&268435456
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 536870912 := 1099511627776&536870912
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1073741824 := 1099511627776&1073741824
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 2147483648 := 1099511627776&2147483648
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 4294967296 := 1099511627776&4294967296
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8589934592 := 1099511627776&8589934592
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 17179869184 := 1099511627776&17179869184
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 34359738368 := 1099511627776&34359738368
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 68719476736 := 1099511627776&68719476736
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 68719476736 := 1099511627776&68719476736
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 137438953472 := 1099511627776&137438953472
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 274877906944 := 1099511627776&274877906944
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 549755813888 := 1099511627776&549755813888
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1099511627776 := 1099511627776&1099511627776
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #764 #768) 64)) 282574488338432 := 281474976734222 << 40
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 33554432 := 1099511627776&33554432
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 67108864 := 1099511627776&67108864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 67108864 := 1099511627776&67108864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1073741824 := 1099511627776&1073741824
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 2147483648 := 1099511627776&2147483648
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 4294967296 := 1099511627776&4294967296
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8589934592 := 1099511627776&8589934592
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 17179869184 := 1099511627776&17179869184
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8589934592 := 1099511627776&8589934592
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 17179869184 := 1099511627776&17179869184
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1342177280 := 1099511627776&1342177280
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1342177280 := 1099511627776&1342177280
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1342177280 := 1099511627776&1342177280
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1342177280 := 1099511627776&1342177280
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1342177280 := 1099511627776&1342177280
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 3221225472 := 1099511627776&3221225472
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 2147483648 := 1099511627776&2147483648
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 4294967296 := 1099511627776&4294967296
(smt.stats   45   6074 100733 252260  5039/4783/250    6594/468    22   72   55.71)
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8589934592 := 1099511627776&8589934592
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 68719476736 := 1099511627776&68719476736
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 274877906944 := 1099511627776&274877906944
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 549755813888 := 1099511627776&549755813888
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 824633720832 := 1099511627776&824633720832
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 68719476736 := 1099511627776&68719476736
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 137438953472 := 1099511627776&137438953472
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1099511627776 := 1099511627776&1099511627776
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #764 #768) 64)) 1099511627776 := 281474976734222 << 40
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1099511627776 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1099511627776 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1099511627776 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1099511627776 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 34359738368 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 34359738368 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 34359738368 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 34359738368 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 167706112 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 167705600 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 167706112 := 1099511627776&15393162788864
(smt.stats   46   6185 101733 257220  5149/4854/317    6784/472    22   72   55.83)
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 134217728 := 1099511627776&15393162788864
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 536870912 := 1099511627776&15393162788864
(smt.stats   47   6307 104134 267377  5188/4953/341    6967/553    23  105   55.95)
ramon: poll                 wall=7.000s usage=6.933s mem=58084KiB load=1.00 rootload=0.99
(smt.stats   48   6441 107746 274716  5201/4961/341    7193/553    23  105   55.95)
(smt.stats   49   6588 111196 280612  5228/4987/342    7391/615    24  109   56.05)
(sat.ddfw       1      1   14.8388    670001      3284         11            1       68)
(smt.stats   50   6749 114231 289872  5430/5017/343    7568/621    24  109   56.15)
ramon: poll                 wall=8.000s usage=7.933s mem=58868KiB load=1.00 rootload=1.00
(smt.stats   51   6926 115180 293897  6018/5273/343    7763/693    25  110   56.65)
(smt.stats   52   7120 119665 305951  6157/5856/348    8066/779    26  118   56.75)
(sat.ddfw       1      1    13.752    790001      3872         12            1       80)
(smt.stats   53   7333 122656 312837  6280/5951/349    8300/780    26  118   56.75)
ramon: poll                 wall=9.000s usage=8.933s mem=59016KiB load=1.00 rootload=1.00
(smt.stats   54   7567 125841 319721  6523/6058/349    8563/782    26  118   56.84)
(smt.stats   55   7668 126987 324494  6861/6400/349    8665/834    27  121   56.94)
ramon: poll                 wall=10.000s usage=9.934s mem=59200KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    12.789    920001      4509         13            1       93)
(smt.stats   56   7779 128067 327737  6939/6630/349    8785/834    27  121   57.15)
(smt.stats   57   7901 129940 335539  7386/7007/349    8945/836    27  121   57.15)
(smt.stats   58   8035 131449 341629  7493/7219/351    9100/845    28  128   57.15)
ramon: poll                 wall=11.000s usage=10.932s mem=59496KiB load=1.00 rootload=1.00
(smt.stats   59   8182 134483 350422  7652/7273/351    9280/848    28  128   57.25)
(sat.ddfw       1      1   12.0669   1060001      5196         14            1      108)
(smt.stats   60   8343 138887 363436  7758/7485/351    9469/849    28  128   57.53)
ramon: poll                 wall=12.000s usage=11.989s mem=59900KiB load=1.06 rootload=1.06
(smt.stats   61   8520 142400 385263  7770/7535/352    9745/884    29  131   57.63)
(smt.stats   62   8714 149089 400250  7928/7542/352    9981/889    29  131   57.63)
ramon: poll                 wall=13.000s usage=12.991s mem=60024KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3131   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   63   8927 154332 419175  8142/7741/352   10248/891    29  131   57.73)
ramon: poll                 wall=14.000s usage=13.972s mem=59972KiB load=0.98 rootload=0.98
(smt.stats   64   9161 158752 435181  8307/7937/353   10568/1027    30  132   57.83)
(smt.stats   65   9418 164337 452063  8566/8126/353   10874/1030    30  132   58.02)
(smt.stats   66   9519 165167 455858  8586/8351/353   10978/1030    30  132   58.02)
ramon: poll                 wall=15.000s usage=14.971s mem=60188KiB load=1.00 rootload=1.00
(smt.stats   67   9630 166796 464797  8615/8356/353   11114/1030    30  132   58.02)
(sat.ddfw       1      1   10.6397   1370001      6715         16            1      139)
(smt.stats   68   9752 169675 477238  8724/8477/355   11237/1109    31  139   58.02)
(smt.stats   69   9886 171645 486519  8832/8492/355   11396/1111    31  139   58.12)
ramon: poll                 wall=16.000s usage=16.004s mem=60332KiB load=1.03 rootload=1.03
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10033 175019 496666  8898/8653/356   11595/1114    31  139   58.12)
(smt.stats   71  10194 177706 503367  9054/8668/356   11789/1185    32  146   58.12)
(sat.ddfw       1      1   10.1022   1540001      7549         17            1      156)
(smt.stats   72  10371 180282 507790  9259/8860/356   11988/1191    32  146   58.32)
ramon: poll                 wall=17.000s usage=17.053s mem=60560KiB load=1.05 rootload=1.05
(smt.stats   73  10565 183799 524244  9413/9081/356   12211/1194    32  146   58.32)
(smt.stats   74  10778 188306 551177  9655/9418/357   12497/1307    33  147   58.41)
ramon: poll                 wall=18.000s usage=18.101s mem=60708KiB load=1.05 rootload=1.05
(smt.stats   75  11012 194172 575074  9709/9474/359   12822/1412    34  154   58.79)
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 196608 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 131072 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 262144 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 524288 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1048576 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 2097152 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 4194304 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8388608 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 16777216 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8388608 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8388608 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 2097152 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 4194304 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 524288 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1048576 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 524288 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 131072 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 131072 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 10240 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 10240 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 8192 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 4096 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 4096 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 512 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 512 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 512 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 512 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1280 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 1024 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&280375465082879
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&246290604621823
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #764 #768) 64)) 9205040978996494335 := 33554500 << 45
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&246290604621823
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #764 #768) 64)) 9205040978996494335 := 33554500 << 45
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&246290604621823
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #764 #768) 64)) 9205040978996494335 := 33554500 << 45
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&214404767416320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #764 #768) 64)) 25828627648086016 := 33554500 << 45
band: (band[48] (if (= #357 63) 1 (if #573 2 #757)) (shl[64] (* 2 #102) (mod #772 64))) 0 := 35184372088832&214404767416320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #764 #768) 64)) 25828627648086016 := 33554500 << 45
(smt.stats   76  11269 202643 600538  9870/9601/483   13242/1573    35  180   59.29)
(sat.ddfw       1      1   9.58109   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=19.099s mem=61868KiB load=1.00 rootload=0.99
(smt.stats   77  11551 209050 630446 10163/9640/488   13619/1577    35  180   59.75)
(smt.stats   78  11652 212164 652261 10222/9929/488   13718/1650    36  184   59.75)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11763 214516 662197 10360/10051/488   13847/1650    36  184   59.85)
ramon: poll                 wall=20.000s usage=20.097s mem=62024KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:11:53 2024
ramon: root.execname        z3
ramon: root.utime           20.100s
ramon: root.stime           0.010s
ramon: group.total          20.131s
ramon: group.utime          20.111s
ramon: group.stime          0.020s
ramon: group.mempeak        62156KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.035s
ramon: loadavg              1.00
