ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:00:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27492 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/kGOCTwIa2Z65.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             907114
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   117.647     10000        49          0            1        2)
(smt.stats    0    101   1017    671  1332/1192/107      85/43     8   21   51.94)
(sat.ddfw       1      1    60.247     20001        98          1            1        3)
(sat.ddfw       1      1    60.241     40001       196          2            1        5)
(smt.stats    1    202   2252   1182  1471/1271/110     205/51     8   21   52.13)
(sat.ddfw       1      1   51.7241     70001       343          3            1        8)
(smt.stats    2    313   3175   1771  1628/1436/110     341/68     9   23   52.32)
(smt.stats    3    414   4162   3371  1944/1692/110     500/71     9   23   52.32)
(smt.stats    4    525   4991   5816  2020/1865/122     684/125    12   40   52.32)
(sat.ddfw       1      1   44.0044    110001       539          4            1       12)
ramon: poll                 wall=1.002s usage=0.951s mem=54664KiB load=0.95 rootload=0.94
(smt.stats    5    647   6452   8930  2069/1901/125     882/204    14   47   52.32)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   8364  13572  2095/1926/125     992/204    14   47   52.42)
(smt.stats    7    859  10581  17151  2105/1943/126    1130/247    15   49   52.42)
(smt.stats    8    981  12561  20747  2140/1966/141    1296/266    16   67   52.52)
(smt.stats    9   1115  15948  25007  2172/2020/142    1478/333    17   68   52.61)
(sat.ddfw       1      1   37.6215    160000       784          5            1       17)
(smt.stats   10   1216  17442  26825  2217/2021/142    1598/333    17   68   52.87)
(smt.stats   11   1327  19325  29961  2221/2065/142    1736/333    17   68   52.87)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  20450  33524  2229/2073/142    1876/333    17   68   53.13)
(smt.stats   13   1583  23599  37890  2236/2079/142    2012/333    17   68   53.13)
(smt.stats   14   1730  25965  42815  2291/2114/142    2200/334    17   68   53.13)
(smt.stats   15   1831  27341  45060  2323/2155/142    2319/334    17   68   53.13)
(sat.ddfw       1      1   32.8413    220001      1078          6            1       23)
(smt.stats   16   1942  28882  48213  2347/2185/142    2437/334    17   68   53.13)
(smt.stats   17   2064  30281  53513  2386/2217/145    2572/394    18   73   53.23)
ramon: poll                 wall=2.000s usage=1.946s mem=55540KiB load=1.00 rootload=0.99
(smt.stats   18   2198  31685  57360  2408/2238/145    2717/394    18   73   53.23)
(smt.stats   19   2345  33364  62906  2424/2272/147    2863/408    19   79   53.49)
(smt.stats   20   2506  35232  68056  2434/2282/148    3027/410    20   80   53.49)
(smt.stats   21   2607  36578  70477  2445/2292/149    3129/412    21   80   53.49)
(smt.stats   22   2718  38357  73087  2453/2298/149    3244/412    21   80   53.49)
(smt.stats   23   2840  40090  75897  2454/2299/149    3366/412    21   80   53.59)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 11 := 11&14
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 10 := 10&14
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 25769803786 := 12 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 0&14
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 13 := 6 << 32
(smt.stats   24   2974  41231  78813  2480/2322/165    3518/421    22   84   53.70)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 34359738369 := 4294967296 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 34359738369 := 4294967296 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 8589934593 := 4294967297 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 2&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 8589934591 := 4294967297 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 12&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 11 := 6 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 8589934590&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 4294967297 := 4294967295 << 1
(sat.ddfw       1      1   29.0456    290001      1421          7            1       30)
(smt.stats   25   3121  42660  84115  2571/2392/186    3694/448    23   89   53.80)
(smt.stats   26   3282  44040  86335  2657/2442/186    3862/449    23   89   53.89)
(smt.stats   27   3459  45868  93801  2787/2625/187    4034/477    24   92   53.89)
(smt.stats   28   3560  47058  95817  2837/2629/187    4149/477    24   92   53.89)
(smt.stats   29   3671  47954  99668  2994/2684/187    4297/477    24   92   53.99)
ramon: poll                 wall=3.000s usage=2.942s mem=56308KiB load=1.00 rootload=0.99
(smt.stats   30   3793  48738 102244  3053/2846/187    4448/478    24   92   53.99)
(sat.ddfw       1      1   26.0332    370001      1813          8            1       38)
(smt.stats   31   3927  49795 110677  3129/2951/189    4603/498    25   97   53.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  51760 121096  3189/3021/190    4733/508    26  100   54.08)
(smt.stats   33   4235  52709 129896  3265/3050/190    4871/511    26  100   54.08)
(smt.stats   34   4412  53977 136836  3316/3112/190    5040/513    26  100   54.08)
(smt.stats   35   4606  55513 144338  3420/3155/190    5236/513    26  100   54.18)
(smt.stats   36   4707  56204 148118  3482/3260/190    5341/513    26  100   54.18)
(sat.ddfw       1      1   23.5726    460001      2254          9            1       47)
(smt.stats   37   4818  56947 156305  3530/3321/190    5461/513    26  100   54.18)
ramon: poll                 wall=4.000s usage=3.940s mem=56636KiB load=1.00 rootload=1.00
(smt.stats   38   4940  57816 161964  3612/3444/193    5612/539    27  105   54.27)
(smt.delete-inactive-clauses  :num-deleted-clauses 57)
(smt.stats   39   5074  59665 167408  3675/3452/195    5726/542    27  105   54.27)
(smt.stats   40   5221  61175 175559  3776/3545/195    5910/554    28  110   54.37)
(smt.stats   41   5382  62400 183105  3824/3623/195    6103/554    28  110   54.48)
(smt.stats   42   5559  63735 192257  3869/3667/195    6303/554    28  110   54.48)
(sat.ddfw       1      1   21.4869    560001      2745         10            1       57)
(smt.stats   43   5753  65950 203090  4005/3708/195    6535/556    28  110   54.58)
ramon: poll                 wall=5.000s usage=4.938s mem=56920KiB load=1.00 rootload=1.00
(smt.stats   44   5966  67515 210975  4098/3871/195    6773/556    28  110   54.58)
(smt.stats   45   6067  68333 214974  4135/3959/195    6886/556    28  110   54.67)
(smt.stats   46   6178  70406 220601  4137/3963/196    7004/659    29  113   54.67)
(smt.stats   47   6300  71426 226627  4158/3971/196    7145/659    29  113   54.77)
(smt.stats   48   6434  73607 232239  4165/3991/196    7283/659    29  113   55.16)
(smt.stats   49   6581  75546 241439  4172/3998/197    7442/678    30  115   55.16)
(smt.stats   50   6742  77152 249127  4191/4002/197    7621/678    30  115   55.16)
(sat.ddfw       1      1   19.7522    670001      3284         11            1       68)
(smt.stats   51   6919  80055 260920  4202/4030/197    7807/678    30  115   55.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113  82768 270805  4202/4030/197    8029/678    30  115   55.26)
(smt.stats   53   7326  86374 282055  4205/4033/197    8259/678    30  115   55.35)
ramon: poll                 wall=6.000s usage=5.935s mem=57536KiB load=1.00 rootload=1.00
(smt.stats   54   7560  88239 288042  4225/4044/197    8515/678    30  115   55.35)
(smt.stats   55   7661  89382 298734  4263/4080/197    8631/679    30  115   55.35)
(smt.stats   56   7772  90227 304885  4299/4095/197    8747/679    30  115   55.35)
(smt.stats   57   7894  91783 311876  4309/4125/197    8877/679    30  115   55.35)
(smt.stats   58   8028  93010 322335  4323/4139/197    9020/679    30  115   55.60)
(smt.stats   59   8175  95583 332976  4326/4150/197    9164/679    30  115   55.60)
(sat.ddfw       1      1   18.2205    790001      3872         12            1       80)
(smt.stats   60   8336  97244 353960  4331/4155/197    9330/679    30  115   55.60)
(smt.stats   61   8513  99337 370797  4332/4156/197    9509/679    30  115   55.70)
ramon: poll                 wall=7.000s usage=6.920s mem=57976KiB load=0.98 rootload=0.98
(smt.stats   62   8707 100831 392249  4357/4159/197    9721/681    30  115   55.70)
(smt.stats   63   8920 102188 405791  4377/4189/197    9960/681    30  115   55.70)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 11
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 11
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 11
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 10
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 10
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 9
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 9
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 8
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 8
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51539607559 := 4294967299 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 27&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 60129542171 := 13 << 11
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 27&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 60129542171 := 13 << 11
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 27&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 60129542171 := 13 << 10
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 23&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 60129542167 := 11 << 9
(smt.stats   64   9154 104865 421901  4467/4267/219   10213/775    31  119   55.79)
(sat.ddfw       1      1   16.9536    920001      4509         13            1       93)
(smt.stats   65   9411 107708 439061  4913/4320/219   10500/780    31  119   56.00)
(smt.stats   66   9512 108136 445799  4924/4739/219   10613/791    32  122   56.00)
ramon: poll                 wall=8.000s usage=7.916s mem=58384KiB load=1.00 rootload=0.99
(smt.stats   67   9623 108987 452758  4949/4746/219   10720/791    32  122   56.00)
(smt.stats   68   9745 110191 460574  5003/4774/219   10875/792    32  122   56.00)
(smt.stats   69   9879 111261 472426  5031/4823/219   11019/792    32  122   56.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 75)
(smt.stats   70  10026 112258 483803  5058/4854/219   11098/792    32  122   56.10)
(smt.stats   71  10187 114068 502179  5098/4899/222   11249/837    33  125   56.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 116151 511525  5133/4937/222   11418/838    33  125   56.10)
(smt.stats   73  10558 116786 533028  5144/4952/222   11613/838    33  125   56.10)
(sat.ddfw       1      1    15.855   1060001      5196         14            1      108)
(smt.stats   74  10771 118078 545965  5179/4964/222   11832/851    34  128   56.10)
ramon: poll                 wall=9.000s usage=8.916s mem=58308KiB load=1.00 rootload=1.00
(smt.stats   75  11005 119948 564823  5196/5004/222   12087/852    34  128   56.19)
(smt.stats   76  11262 121783 589986  5232/5042/222   12335/852    34  128   56.29)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 8589934593 := 6 << 5
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 8589934592 := 6 << 5
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 8589934592 := 6 << 5
(smt.stats   77  11544 124755 595128  5340/5107/228   12629/891    35  133   56.38)
(smt.stats   78  11645 125723 603577  5396/5169/233   12756/892    35  133   56.38)
(smt.stats   79  11756 126942 615627  5402/5200/233   12873/892    35  133   56.38)
ramon: poll                 wall=10.000s usage=9.914s mem=58908KiB load=1.00 rootload=1.00
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 64 := 2 << 19
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 64 := 2 << 19
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 3 := 2 << 19
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 3 := 2 << 19
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1048576&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 0 := 2 << 19
(smt.stats   80  11878 128987 619863  5427/5204/233   13004/893    35  133   56.58)
(sat.ddfw       1      1   14.8869   1210001      5931         15            1      123)
(smt.stats   81  12012 130620 632827  5488/5284/251   13162/920    36  136   56.67)
(smt.stats   82  12159 132651 646256  5493/5285/251   13310/920    36  136   56.67)
(smt.stats   83  12320 135277 660195  5493/5291/251   13456/924    37  155   56.67)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 17179869186 := 4227617899 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 17179869186 := 4227617899 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 17179869185 := 4227617899 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 17179869185 := 4227617899 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 4&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 3 := 4294967297 << 2
(smt.stats   84  12497 137838 668840  5526/5301/251   13631/927    37  155   56.77)
(smt.stats   85  12691 139338 695231  5573/5347/262   13829/927    37  155   57.12)
ramon: poll                 wall=11.000s usage=10.911s mem=59152KiB load=1.00 rootload=0.99
(smt.stats   86  12904 142651 723066  5598/5382/265   14045/936    38  160   57.12)
(sat.ddfw       1      1   14.0326   1370001      6715         16            1      139)
(smt.stats   87  13138 147484 759642  5662/5408/265   14283/936    38  160   57.12)
(smt.stats   88  13395 149616 787960  5696/5482/265   14540/954    39  171   57.12)
(smt.stats   89  13677 153268 809766  5812/5514/265   14841/957    39  171   57.21)
ramon: poll                 wall=12.000s usage=11.958s mem=59348KiB load=1.05 rootload=1.05
(smt.stats   90  13987 156369 839477  5948/5665/265   15152/960    39  171   57.21)
(smt.stats   91  14088 157136 849092  5964/5755/265   15251/960    39  171   57.31)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   92  14199 158801 852694  5967/5762/265   15368/960    39  171   57.31)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 15&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 15 := 7 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 16&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 16 := 7 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 27&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 27 := 7 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 16&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 0 := 1 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 16&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 0 := 1 << 4
(smt.stats   93  14321 161227 856675  6011/5796/276   15489/1052    40  184   57.41)
(smt.stats   94  14455 162971 866871  6150/5821/276   15642/1053    40  184   57.41)
(sat.ddfw       1      1   13.3658   1540001      7549         17            1      156)
(smt.stats   95  14602 163807 877792  6166/5951/277   15783/1053    40  184   57.50)
ramon: poll                 wall=13.000s usage=12.959s mem=59624KiB load=1.00 rootload=1.00
(smt.stats   96  14763 164558 883334  6168/5953/278   15945/1074    41  188   57.50)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 8455235799&1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 8455235799&1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 1 := 8455235799&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51404908759 := 4227617899 << 29
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 1 := 8455235799&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51404908759 := 4227617899 << 29
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 1 := 8455235799&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51404908759 := 4227617899 << 29
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 8455235801&1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 8455235801&1
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 1 := 8455235801&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51404908761 := 4227617900 << 29
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 1 := 8455235801&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 51404908761 := 4227617900 << 29
(smt.stats   97  14940 167647 889764  6266/5954/278   16142/1085    41  188   57.60)
ramon: poll                 wall=14.000s usage=13.958s mem=59928KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 47)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2269814229374599169 := 4294967296 << 26
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2269814229374599169 := 4294967296 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2269814229374599169 := 4294967296 << 28
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2269814229374599169 := 4294967296 << 25
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2269814229374599169 := 4294967296 << 6
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2269814229374599169 := 4294967296 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 24
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 23
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 22
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 21
(smt.stats   98  15134 170038 898131  6349/6081/307   16338/1085    41  188   57.79)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 20
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 17
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 15
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 14
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 13
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 68719476737 := 4294967296 << 12
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 12
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 12
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 14
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 14
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 20
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 20
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 22
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 22
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 24
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 24
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 23
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 137438953473 := 4294967296 << 23
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 137438953473 := 4294967296 << 21
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 21
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 18
(sat.ddfw       1      1   12.6422   1720001      8431         18            1      174)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 17
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 17
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 17
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 15
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 15
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 13
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #726 #722) 64)) 2190433320961 := 4294967296 << 13
(smt.stats   99  15347 174622 923584  6666/6239/362   16586/1097    41  188   58.80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats  100  15581 177578 946368  6658/6407/402   16819/1129    42  236   59.26)
ramon: poll                 wall=15.000s usage=14.957s mem=62172KiB load=1.00 rootload=0.99
(smt.stats  101  15838 185312 981186  6886/6585/406   17067/1130    42  236   59.74)
(smt.stats  102  16120 190701 1009737  6921/6623/453   17439/1188    44  293   59.93)
(sat.ddfw       1      1   12.0109   1910001      9362         19            1      193)
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 131072&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 2 := 4 << 15
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 131072&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 1 := 4 << 15
band: (band[33] (shl[64] (bv2int %0) (mod #727 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #777 1 #873))) 0 := 131072&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 1 := 4 << 15
ramon: poll                 wall=16.000s usage=15.953s mem=62760KiB load=1.00 rootload=0.99
(smt.stats  103  16430 200250 1043798  6947/6636/453   17757/1190    44  293   59.93)
ramon: poll                 wall=17.000s usage=16.949s mem=62644KiB load=1.00 rootload=0.99
(smt.stats  104  16770 208452 1073209  7025/6735/459   18132/1214    45  294   60.53)
(sat.ddfw       1      1   11.4397   2110001     10343         20            1      214)
(smt.stats  105  16871 210666 1079844  7052/6741/459   18243/1215    45  294   60.63)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  106  16982 213284 1089427  7065/6775/461   18367/1230    46  294   60.63)
(smt.stats  107  17104 214491 1105161  7070/6776/461   18494/1230    46  294   60.63)
ramon: poll                 wall=18.000s usage=17.947s mem=62932KiB load=1.00 rootload=1.00
(smt.stats  108  17238 215899 1111747  7077/6787/463   18630/1230    46  294   60.72)
(smt.stats  109  17385 217566 1120438  7091/6793/463   18779/1230    46  294   60.72)
ramon: poll                 wall=19.002s usage=18.948s mem=63060KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.9165   2320001     11372         21            1      235)
ramon: poll                 wall=20.000s usage=19.935s mem=63196KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 23:00:53 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.040s
ramon: group.total          19.995s
ramon: group.utime          19.951s
ramon: group.stime          0.044s
ramon: group.mempeak        63452KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
