ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:29:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31085 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1276
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3KFpyyT5sHwG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4041757
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1539    487   618/559/112     118/18     7   22   18.67)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 131070&0
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 131070 := 131071 << 2
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 131070&0
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 131070 := 131071 << 2
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 131070&0
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 131070 := 131071 << 2
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 3&0
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 3 := 2 << 2
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 8&0
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 1 := 2 << 2
(smt.stats    1    202   2224   2263   828/719/126     256/23     9   26   18.87)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&0
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 524288 := 131070 << 2
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 131064&0
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 131071 := 131070 << 2
(smt.stats    2    313   4206   5038  1037/906/132     417/30    11   32   18.96)
(smt.stats    3    414   4831   7674  1179/1057/133     589/32    12   42   18.96)
(smt.stats    4    525   5433   9364  1224/1095/151     776/62    14  118   19.06)
(smt.stats    5    647   5764  10935  1235/1120/151     934/62    14  118   19.06)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas        :deletions     )
(smt.stats    6    748   5968  11963  1235/1120/151    1039/62    14  118   19.06)
(smt.stats    7    859   6217  13948  1238/1123/151    1180/62    14  118   19.16)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 1&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 1&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 1&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 2&12545
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 2 := 3 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1 := 1&12545
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 1 := 12543 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1 := 1&12545
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 1 := 2 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 12545 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 12544 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 254 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 252 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 248 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 240 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 224 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 192 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 128 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 512 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1024 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 2048 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 4096 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8192 := 65536&12545
(smt.stats    8    981   6812  16168  1312/1186/207    1350/94    15  129   19.56)
(smt.stats    9   1115   8236  19313  1383/1218/212    1617/118    16  135   19.56)
(smt.stats   10   1216   9110  22449  1415/1274/212    1709/141    17  166   19.75)
(smt.stats   11   1327   9788  25339  1430/1304/212    1842/142    17  166   19.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  11017  28279  1495/1324/212    2021/145    17  166   19.75)
(smt.stats   13   1583  11440  30704  1543/1417/212    2247/145    17  166   19.75)
(smt.stats   14   1730  11977  34010  1544/1418/213    2480/225    18  167   19.75)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 102150&0
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 102150 := 25537 << 1
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 102146&0
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 102146 := 2 << 1
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 102146&0
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 102146 := 25536 << 1
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 102146&0
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 102145 := 51073 << 1
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&0
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 0 := 32768 << 1
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&0
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 0 := 32768 << 1
(smt.stats   15   1831  13004  37108  1582/1450/225    2649/278    19  169   19.93)
(smt.stats   16   1942  13467  38131  1618/1466/225    2809/278    19  169   20.12)
(smt.stats   17   2064  14484  42413  1734/1597/225    3006/278    19  169   20.12)
(smt.stats   18   2198  15579  45290  1823/1606/225    3261/312    20  172   20.12)
(smt.stats   19   2345  16839  49348  1963/1729/225    3478/314    20  172   20.22)
(smt.stats   20   2506  17907  55442  1992/1844/226    3788/342    21  174   20.31)
ramon: poll                 wall=1.000s usage=0.928s mem=21432KiB load=0.93 rootload=0.92
(smt.stats   21   2607  19333  60344  2012/1857/226    3935/343    21  174   20.31)
(smt.stats   22   2718  19759  64364  2036/1893/226    4065/344    21  174   20.31)
(smt.stats   23   2840  20442  69583  2049/1909/226    4270/344    21  174   20.31)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 98310&1568
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 98310 := 98309 << 13
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65538&1568
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 2147811330 := 98308 << 13
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 114688&1568
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 1 := 14 << 13
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 114688&1568
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 15 := 14 << 13
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 114688&1568
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 27 := 14 << 13
(smt.stats   24   2974  21378  73647  2082/1923/228    4465/376    22  183   20.41)
(smt.stats   25   3121  22384  77651  2154/1966/238    4704/376    22  183   20.41)
(smt.stats   26   3282  25360  84546  2254/2023/238    4974/376    22  183   20.50)
(smt.stats   27   3459  27310  89881  2308/2135/238    5227/433    23  185   20.60)
(smt.stats   28   3560  27812  94536  2310/2167/238    5374/433    23  185   20.70)
(smt.stats   29   3671  28346  98024  2316/2168/238    5519/433    23  185   20.70)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 10 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 12 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 11 := 32770&12
(smt.stats   30   3793  28845 102114  2336/2175/238    5699/433    23  185   20.70)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 12 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 12 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 12 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 12 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 11 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 10 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 32770&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32770&12
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 205422594 := 32770 << 6
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 10 := 32771&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1 := 32771&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 32771&12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&12
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 203194371 := 32770 << 6
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&49
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1 := 32771&49
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 2129923 := 32770 << 8
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1 := 32771&24
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&24
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 205422595 := 32770 << 7
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&196
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 4096003 := 32770 << 10
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&196
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 4227075 := 32770 << 10
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&784
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 2129923 := 32770 << 12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&784
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 1998851 := 32770 << 12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&784
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 1998851 := 32770 << 12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&3136
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 1998851 := 32770 << 14
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&6272
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 1998851 := 32770 << 15
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 32771&1568
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 1998851 := 32770 << 13
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 12546 := 65535 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 16 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 32 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 128 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 512 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1024 := 65536&12545
(smt.stats   31   3927  30187 107239  2451/2288/325    5985/473    24  186   20.98)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 32 := 98328&49
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 512 := 65538&6272
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 512 := 65538&6272
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 512 := 65538&6272
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 512 := 66050&6272
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1024 := 66050&6272
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1024 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 1024 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 2048 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 2048 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 2048 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 2048 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 4096 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8192 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8192 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8192 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 256 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 128 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 41 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 40 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 32 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 16 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 12546 := 65537 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 12545 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 12544 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 12288 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 9 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 1 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 2 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 8192 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 8192 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 4095 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 4094 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 4 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 16 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 32 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 128 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 256 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 512 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 1024 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 2048 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 32 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 32 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 32 := 65536&12545
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  31744 112902  2652/2481/451    6307/578    25  218   21.58)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&1
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 0 := 65536 << 3
(smt.stats   33   4235  34147 122262  2697/2499/456    6786/578    25  218   21.85)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&6
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 0 := 65536 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&6
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 0 := 65538 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&6
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 0 := 65538 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&6
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 2 := 0 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&6
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 3 := 0 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&6272
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 2 := 0 << 15
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&6272
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 2 := 0 << 15
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&98
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 0 := 0 << 9
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&98
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 513 := 0 << 9
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&98
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 0 := 0 << 9
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&98
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 513 := 0 << 9
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&196
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 513 := 0 << 10
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&3136
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 3585 := 0 << 14
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&3136
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 3585 := 0 << 14
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&784
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 1025 := 0 << 12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&784
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 1025 := 0 << 12
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&392
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 0 := 0 << 11
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&392
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 513 := 0 << 11
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&392
shl: (shl[32] (bv2int %1) (mod (+ #115 #417 #413) 32)) 0 := 0 << 11
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 0&392
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 513 := 0 << 11
(smt.stats   34   4412  37854 135450  2883/2590/478    7261/679    26  235   22.20)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 512 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 512 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 64 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 64 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 9 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 1025 := 65536&12545
(smt.stats   35   4606  43133 144306  3175/2942/517    7666/741    27  253   22.39)
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 8 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 3 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 3 := 65536&12545
band: (band[17] (shl[32] (bv2int %1) (mod #418 32)) (if (or #439 #440 #441) 0 (if #442 1 #511))) 0 := 65536&12545
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (or #365 #366) 0 (if #367 1 #404))) 2 := 65536&12545
(smt.stats   36   4707  45850 152885  3207/2966/521    8030/836    28  263   22.49)
ramon: poll                 wall=2.000s usage=1.926s mem=23884KiB load=1.00 rootload=0.99
(smt.stats   37   4818  47051 156075  3462/3010/531    8201/836    28  263   22.60)
(smt.stats   38   4940  48750 172014  3758/3287/531    8919/836    28  263   22.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 592)
(smt.stats   39   5074  49042 180279  3780/3549/533    8604/1072    29  266   22.79)
(smt.stats   40   5221  50285 191053  3786/3551/533    8942/1072    29  266   22.89)
(smt.stats   41   5382  57227 206276  3902/3600/534    9271/1182    30  268   23.37)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5559  61662 222226  3953/3702/550   10179/1202    31  275   23.56)
ramon: poll                 wall=3.000s usage=2.926s mem=25336KiB load=1.00 rootload=1.00
(smt.stats   43   5753  69803 254546  4125/3819/551   11242/1425    32  302   23.94)
(smt.stats   44   5966  75703 278920  4253/4022/557   12365/1512    33  308   24.03)
(smt.stats   45   6067  79210 291533  4275/4037/558   12787/1512    33  308   24.03)
(smt.stats   46   6178  82022 303215  4361/4069/559   13050/1690    34  327   24.22)
(smt.stats   47   6300  83741 323651  4380/4130/564   13636/1690    34  327   24.32)
(smt.stats   48   6437  86167 354326  4496/4231/574   14455/1760    35  329   24.62)
ramon: poll                 wall=4.000s usage=3.926s mem=26196KiB load=1.00 rootload=0.99
(smt.stats   49   6584  91257 370425  4673/4355/582   15221/1834    36  345   25.29)
(smt.stats   50   6745  97023 387559  4801/4390/582   15972/1843    36  345   25.48)
(smt.stats   51   6922 101385 415824  4834/4511/584   16619/2043    37  367   25.58)
ramon: poll                 wall=5.000s usage=4.925s mem=27188KiB load=1.00 rootload=1.00
(smt.stats   52   7116 108542 448730  4896/4586/585   17659/2136    38  378   25.96)
(smt.stats   53   7329 113166 477431  4926/4615/591   18745/2136    38  378   26.17)
ramon: poll                 wall=6.000s usage=5.924s mem=27800KiB load=1.00 rootload=1.00
(smt.stats   54   7563 116903 506844  4977/4671/595   19950/2252    39  451   26.17)
(smt.stats   55   7664 118603 521385  4995/4679/596   20273/2252    39  451   26.26)
(smt.stats   56   7775 120294 539181  5006/4694/596   20678/2252    39  451   26.26)
(smt.stats   57   7897 125590 579513  5008/4704/596   21127/2252    39  451   26.36)
(smt.stats   58   8031 130517 602463  5011/4707/596   21571/2375    40  457   26.36)
(smt.stats   59   8178 134167 629129  5016/4712/596   22184/2375    40  457   26.46)
ramon: poll                 wall=7.000s usage=6.923s mem=28476KiB load=1.00 rootload=1.00
(smt.stats   60   8339 138106 665735  5056/4737/596   22826/2375    40  457   26.91)
(smt.stats   61   8516 140598 679861  5065/4745/597   23508/2501    41  459   27.00)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8710 145387 715477  5078/4762/601   24326/2501    41  459   27.10)
(smt.stats   63   8923 149412 737995  5115/4772/601   25591/2504    41  459   27.29)
(smt.stats   64   9157 151679 769557  5118/4806/602   25994/2671    42  522   27.29)
ramon: poll                 wall=8.000s usage=7.923s mem=29008KiB load=1.00 rootload=1.00
(smt.stats   65   9414 156196 818814  5135/4817/602   26565/2671    42  522   27.39)
(smt.stats   66   9515 157388 834479  5168/4848/602   26770/2671    42  522   27.48)
(smt.stats   67   9626 158869 846729  5173/4849/602   26975/2671    42  522   27.58)
(smt.stats   68   9748 160079 862443  5178/4853/602   27340/2671    42  522   27.67)
(smt.stats   69   9882 160317 872986  5183/4863/602   27492/2671    42  522   27.67)
(smt.delete-inactive-clauses  :num-deleted-clauses 2785)
(smt.stats   70  10029 161510 885403  5208/4864/602   24950/2671    42  522   27.86)
ramon: poll                 wall=9.000s usage=8.923s mem=29344KiB load=1.00 rootload=1.00
(smt.stats   71  10190 165787 914541  5325/4934/602   25325/2673    42  522   27.77)
(smt.stats   72  10367 169985 940315  5541/5032/602   25894/2677    42  522   28.07)
ramon: poll                 wall=10.000s usage=9.923s mem=29640KiB load=1.00 rootload=1.00
(smt.stats   73  10561 174178 963282  5662/5263/602   26537/2679    42  522   28.07)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10774 178278 1000624  5717/5371/602   27232/2680    42  522   28.07)
(smt.stats   75  11008 181537 1024994  5722/5399/602   27884/2680    42  522   28.16)
(smt.stats   76  11265 186086 1056711  5763/5404/602   28409/2680    42  522   28.16)
(smt.stats   77  11547 189565 1100205  5793/5473/603   29628/2986    43  522   28.26)
ramon: poll                 wall=11.000s usage=10.923s mem=29780KiB load=1.00 rootload=1.00
(smt.stats   78  11648 191328 1126249  5799/5476/603   29881/2987    43  522   28.26)
(smt.stats   79  11759 191536 1136893  5799/5479/603   30031/2987    43  522   28.26)
(smt.stats   80  11881 192355 1153191  5841/5489/603   30244/2988    43  522   28.26)
(smt.stats   81  12015 194337 1172888  5884/5547/604   31065/2988    43  522   28.35)
(smt.stats   82  12162 197849 1196212  5918/5573/604   31576/3123    44  534   28.55)
ramon: poll                 wall=12.000s usage=11.922s mem=30096KiB load=1.00 rootload=1.00
(smt.stats   83  12323 201414 1224913  6016/5613/604   32049/3127    44  534   28.64)
(smt.stats   84  12500 204566 1247094  6177/5824/604   32775/3134    44  534   28.74)
ramon: poll                 wall=13.001s usage=12.923s mem=30408KiB load=1.00 rootload=1.00
(smt.stats   85  12694 208139 1266645  6192/5872/605   33388/3260    45  564   28.74)
(smt.stats   86  12907 211379 1290064  6262/5942/606   34162/3260    45  564   28.93)
(smt.stats   87  13141 214871 1322686  6410/5951/606   35107/3261    45  564   29.02)
(smt.stats   88  13398 218189 1378774  6508/6160/609   35770/3423    46  575   29.12)
ramon: poll                 wall=14.000s usage=13.921s mem=30716KiB load=1.00 rootload=1.00
(smt.stats   89  13680 223303 1416765  6624/6263/610   36707/3427    46  575   29.31)
ramon: poll                 wall=15.000s usage=14.921s mem=31108KiB load=1.00 rootload=1.00
(smt.stats   90  13990 229857 1462893  6752/6332/611   37706/3432    46  575   29.50)
(smt.stats   91  14091 233127 1480215  6853/6443/611   38059/3571    47  591   29.60)
(smt.stats   92  14202 235362 1496442  6949/6543/611   38344/3572    47  591   29.69)
(smt.stats   93  14324 237926 1519044  7077/6643/611   38653/3572    47  591   29.69)
ramon: poll                 wall=16.000s usage=15.921s mem=31384KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   94  14458 239954 1539247  7200/6787/612   39029/3572    47  591   29.69)
(smt.stats   95  14605 241217 1556540  7232/6906/612   39611/3572    47  591   29.79)
ramon: poll                 wall=17.000s usage=16.921s mem=31728KiB load=1.00 rootload=1.00
(smt.stats   96  14766 243150 1564612  7417/6907/612   40047/3669    48  594   29.99)
(smt.stats   97  14943 245357 1580723  7640/7196/612   40532/3669    48  594   30.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 1512)
(smt.stats   98  15137 250650 1626624  7709/7383/613   40673/3669    48  594   30.37)
(smt.stats   99  15350 252684 1660709  7726/7390/613   41591/3669    48  594   30.81)
ramon: poll                 wall=18.001s usage=17.922s mem=32392KiB load=1.00 rootload=1.00
(smt.stats  100  15584 256017 1697968  7736/7407/613   42296/3962    49  596   30.91)
(smt.stats  101  15841 266985 1769845  7803/7418/613   43513/3966    49  596   31.00)
ramon: poll                 wall=19.000s usage=18.920s mem=32644KiB load=1.00 rootload=1.00
(smt.stats  102  16123 273360 1814145  7960/7535/613   44806/3972    49  596   31.10)
ramon: poll                 wall=20.000s usage=19.920s mem=33036KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:29:33 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.996s
ramon: group.utime          19.980s
ramon: group.stime          0.016s
ramon: group.mempeak        33548KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.00
