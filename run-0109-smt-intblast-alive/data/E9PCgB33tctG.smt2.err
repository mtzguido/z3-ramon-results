ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:50:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42273 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/E9PCgB33tctG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2865386
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 2 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 0 << 62
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 0 << 62
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 0 << 62
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 5 := 4 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 5 := 4 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 5 := 4 << 60
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 2 := 2 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 5 := 4 << 60
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 2 := 2 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 5 := 4 << 60
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 2 := 2 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 5 := 4 << 60
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 2 := 2 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 8 << 58
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 8 << 58
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 8 << 58
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 4 := 4 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 4611686018427387903 := 16 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 864691128455135231 := 48 << 38
(smt.stats    0    101    542    438   117/73/82      90/10     6   18   18.45)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 43 := 36 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 43 := 36 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 774056185954305 := 44 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 822434697576448 := 44 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854775825 := 36 << 44
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 18 := 18 << 45
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 18 := 18 << 45
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 18 := 18 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 774056185954303 := 44 << 40
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 22 := 22 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 774056185954303 := 44 << 40
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 22 := 22 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 774056185954303 := 44 << 40
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 22 := 22 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 774056185954303 := 44 << 40
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 22 := 22 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 703687441776639 := 40 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 703687441776639 := 40 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 703687441776639 := 40 << 42
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 20 := 20 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 175921860444160 := 40 << 42
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 20 := 20 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 562949953421311 := 32 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 562949953421311 := 32 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 562949953421313 := 32 << 46
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 16 := 16 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 2251799813685248 := 32 << 46
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 16 := 16 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 2251799813685248 := 32 << 46
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 16 := 16 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 844424930131969 := 48 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 844424930131969 := 48 << 38
(smt.stats    1    202   1400   1345   240/142/92     190/12     7   20   18.55)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 844424930131969 := 48 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854775831 := 48 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 844424930131967 := 48 << 38
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 24 := 24 << 39
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 24 := 24 << 39
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 24 := 24 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 281474976710657 := 16 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 281474976710657 := 16 << 54
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8 := 8 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 288230376151711744 := 16 << 54
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8 := 8 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 281474976710657 := 16 << 54
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8 := 8 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 288230376151711744 := 16 << 54
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8 := 8 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 211106232532993 := 12 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 211106232532993 := 12 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 211106232532993 := 12 << 56
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 6 := 6 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 211106232532993 := 12 << 56
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 6 := 6 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 864691128455135232 := 12 << 56
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 6 := 6 << 57
(smt.stats    2    313   2564   2424   339/273/133     303/15     8   26   18.84)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 13 := 12 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 4 := 12 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 12 := 12 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 12 := 12 << 56
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 5 := 6 << 57
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 5 := 6 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 16 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 20 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 20 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 20 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 28 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 28 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 28 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 10 := 24 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 10 := 24 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 10 := 24 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 120 << 2
(smt.stats    3    414   3270   3536   420/405/173     382/30    10   50   18.84)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 120 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 32985348833281 := 120 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 2111062325329919 := 120 << 2
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 59 := 60 << 3
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 59 := 60 << 3
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 59 := 60 << 3
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 0 := 60 << 3
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 0 := 60 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 8 << 58
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 116 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 116 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 116 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 20 := 44 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 20 := 44 << 40
(smt.stats    4    525   4230   5115   485/438/186     492/31    11   59   19.03)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 51 := 52 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 51 := 52 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 60 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 60 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 60 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 68 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 76 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 76 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 68 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 68 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 68 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 76 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 83 := 84 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 83 := 84 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 91 := 92 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 99 := 100 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 99 := 100 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 92 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 92 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 92 << 16
(smt.stats    5    647   5338   6498   660/633/229     611/39    13   67   19.32)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 91 := 92 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 108 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 1 := 108 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 107 := 108 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 116 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 116 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 108 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 108 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 76 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 76 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 76 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 76 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 60 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 60 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 64 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 64 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 64 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 64 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 100 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 100 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 112 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 112 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 112 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 112 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 104 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 104 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 104 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 104 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 96 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 96 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 96 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 96 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 68 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 68 << 28
(smt.stats :restarts  :decisions    :clauses/bin/units       :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas        :deletions    )
(smt.stats    6    748   6479   8857   797/693/242     722/52    14   72   19.51)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 84 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 84 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 88 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 88 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 88 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 88 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 80 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 72 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 72 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 72 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 72 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 110 << 7
ramon: poll                 wall=1.000s usage=0.998s mem=21020KiB load=1.00 rootload=0.98
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 122 << 1
(smt.stats    7    859   8210  11440   887/811/275     831/59    15   81   19.71)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 0 := 118 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 117 := 118 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 117 := 118 << 3
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8502796096475496448 := 59 << 4
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8502796096475496447 := 59 << 4
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8502796096475496447 := 59 << 4
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8502796096475496447 := 59 << 4
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 943 := 59 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 463 := 116 << 4
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8358680908399640575 := 58 << 5
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 1857 := 58 << 5
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8358680908399640577 := 58 << 5
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8358680908399640577 := 58 << 5
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8358680908399640577 := 58 << 5
(smt.stats    8    984  11184  15338   931/881/302     960/70    17   89   19.90)
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8935141660703064063 := 62 << 1
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 8935141660703064063 := 62 << 1
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 123 := 62 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 60 := 60 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 52 := 52 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 52 := 52 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 56 := 56 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 56 := 56 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 56 := 56 << 34
(smt.stats    9   1118  13858  18603   971/911/319    1086/76    19   99   20.11)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 28 := 28 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 28 := 28 << 48
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 0 := 14 << 49
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 0 := 14 << 49
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 0 := 14 << 49
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 0 := 14 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854776130 := 20 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854776130 := 20 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 20 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 24 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854776194 := 24 << 50
(smt.stats   10   1219  16607  21042  1035/941/324    1179/80    20  114   20.20)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854776322 := 32 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854776322 := 32 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 11529215046068469761 := 40 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854776450 := 40 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854776450 := 40 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854776450 := 40 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 12105675798371893249 := 42 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 12105675798371893249 := 42 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 12105675798371893249 := 42 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 12105675798371893249 := 42 << 41
(smt.stats   11   1330  18396  23496  1070/991/329    1294/82    21  115   20.30)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 22 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 22 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 22 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 9223372036854775821 := 22 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #131 #132) 64)) 18446744073709551615 := 22 << 51
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 21 := 11 << 52
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 49539595901075457 := 11 << 52
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #92))) 1585267068834414591 := 11 << 52
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1452  20549  26096  1135/1031/339    1419/86    22  117   20.40)
ramon: poll                 wall=2.000s usage=1.998s mem=22044KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.998s mem=22532KiB load=1.00 rootload=1.00
(smt.stats   13   1586  23611  27499  1231/1139/353    1549/106    23  119   21.26)
ramon: poll                 wall=4.000s usage=3.997s mem=22812KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.997s mem=22888KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.996s mem=23024KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.994s mem=23212KiB load=1.00 rootload=0.99
(smt.stats   14   1733  26143  29006  1454/1217/353    1687/132    24  140   21.55)
(smt.stats   15   1834  26922  29639  1553/1456/353    1788/137    24  140   21.65)
ramon: poll                 wall=8.000s usage=7.994s mem=23264KiB load=1.00 rootload=1.00
(smt.stats   16   1945  29706  31598  1698/1542/353    1907/160    24  140   21.84)
ramon: poll                 wall=9.000s usage=8.994s mem=23440KiB load=1.00 rootload=1.00
(smt.stats   17   2067  35132  35298  1791/1691/356    2044/165    25  145   21.84)
ramon: poll                 wall=10.000s usage=9.993s mem=23568KiB load=1.00 rootload=1.00
(smt.stats   18   2201  36936  36964  2006/1759/356    2179/177    25  145   22.11)
ramon: poll                 wall=11.000s usage=10.993s mem=23656KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.993s mem=23700KiB load=1.00 rootload=1.00
(smt.stats   19   2348  39381  38812  2426/2085/356    2332/187    25  145   22.42)
ramon: poll                 wall=13.000s usage=12.993s mem=23932KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.992s mem=24332KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.991s mem=24204KiB load=1.00 rootload=1.00
(smt.stats   20   2509  42290  42754  2777/2499/356    2493/195    25  145   22.61)
ramon: poll                 wall=16.000s usage=15.990s mem=24204KiB load=1.00 rootload=1.00
(smt.stats   21   2610  43091  43653  2992/2779/356    2597/195    25  145   22.70)
ramon: poll                 wall=17.000s usage=16.990s mem=24620KiB load=1.00 rootload=1.00
(smt.stats   22   2721  44479  45164  3165/3041/356    2717/196    25  145   22.94)
ramon: poll                 wall=18.000s usage=17.988s mem=24768KiB load=1.00 rootload=1.00
(smt.stats   23   2843  45943  46755  3619/3391/356    2852/203    25  145   23.04)
ramon: poll                 wall=19.000s usage=18.988s mem=24816KiB load=1.00 rootload=1.00
(smt.stats   24   2977  49400  50750  3901/3708/356    3024/211    25  145   23.13)
ramon: poll                 wall=20.000s usage=19.986s mem=24884KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:50:37 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.992s
ramon: group.utime          19.976s
ramon: group.stime          0.016s
ramon: group.mempeak        25140KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
