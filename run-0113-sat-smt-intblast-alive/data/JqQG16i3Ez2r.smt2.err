ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:37:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40892 MiB
ramon: sys.mem.avail        61382 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JqQG16i3Ez2r.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3793503
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   478/477     0/0  51       0    19.07   0.00)
(sat.stats    173    762    0   478/477   173/51  51       0    19.47   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 449 :time 0.00)
(sat.stats    173    762    0   478/477   173/51  51       0    19.47   0.01)
(sat.stats    173    762    0   478/477   173/51  51       0    19.47   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 892019.47 :time 0.00)
(sat.stats    173    762    0   480/479   171/50  51       0    19.47   0.01)
(sat.stats    308   2239    1   480/479   306/150  51       0    19.66   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    311   2301    2   480/479   309/152  51       0    19.66   0.02)
(sat.stats    314   2372    3   480/479   312/154  51       0    19.66   0.02)
(sat.stats    317   2399    4   480/479   315/156  51       0    19.66   0.02)
(sat.stats    320   2423    5   480/479   318/157  51       0    19.66   0.02)
(sat.stats    323   2469    6   480/479   321/159  51       0    19.66   0.02)
(sat.stats    326   2502    7   480/479   324/162  51       0    19.66   0.02)
(sat.stats    329   2561    8   480/479   327/165  51       0    19.66   0.02)
(sat.stats    400   3861    9   480/479   398/211  51       0    19.76   0.04)
(sat.stats    517   7675   10   480/479   515/245  51       0    19.89   0.07)
(sat.stats    521   7697   11   480/479   519/245  51       0    19.89   0.07)
(sat.stats    524   7714   12   480/479   522/245  51       0    19.89   0.07)
(sat.stats    527   7726   13   480/479   525/245  51       0    19.89   0.07)
(sat.stats    534   7729   14   480/479   532/245  51       0    19.89   0.07)
(sat.stats    537   7823   15   480/479   535/245  51       0    19.89   0.07)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3001 :time 0.00)
(sat.stats    711  14557   34   480/479   708/309  58       0    20.59   0.12)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 5556 :time 0.00)
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 539 := 1023&144115188075853824
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 704 := 1023&144115188075853824
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 958 := 1023&144115188075853824
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 924 := 1023&144115188075853824
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 896 := 1023&144115188075853824
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 760 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 727 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 518 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 944 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 388 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 512 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 32 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 64 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 384 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 0 := 1023&144115188075853824
band: (band[57] (if (= #546 63) 664613997892457927228531493285396480 (if #682 332306998946228963614265746642698240 #679)) (if (or #1195 #1196 #1197 #1198 #1199 #1200 #1201 #1202 #1203) 0 (if #1204 1 #1312))) 256 := 144115188075853824&1023
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 256 := 1023&144115188075853824
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 512 := 1023&144115188075853824
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1065  35635   84  1803/1801  1080/373  63       0    21.93   0.42)
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 32 := 1023&144115188075853824
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 8 := 1023&144115188075853824
band: (band[57] (if (= #907 56) 0 (if #909 1 #1067)) (if (= #363 56) 5192296858534827556472902291292160 (if #1071 2596148429267413778236451145646080 #1181))) 16 := 1023&144115188075853824
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11548 :time 0.00)
(sat.stats   1605  72091  189  2010/2008  1621/651 184       0    22.40   0.73)
ramon: poll                 wall=1.000s usage=0.908s mem=24452KiB load=0.91 rootload=0.90
(sat.stats   2396 101189  270 17721/17718  2447/906 184       0    29.19   1.26)
ramon: poll                 wall=2.000s usage=1.908s mem=40948KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.904s mem=57880KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.904s mem=64532KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.004s usage=4.911s mem=86028KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.903s mem=89868KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.903s mem=95244KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.887s mem=97920KiB load=0.98 rootload=0.99
ramon: poll                 wall=9.000s usage=8.886s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.886s mem=101MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.886s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.886s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.890s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.886s mem=110MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.886s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.890s mem=115MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.886s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.890s mem=150MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.889s mem=151MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.889s mem=152MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:38:06 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.040s
ramon: group.total          19.986s
ramon: group.utime          19.942s
ramon: group.stime          0.044s
ramon: group.mempeak        182MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.097s
ramon: loadavg              0.99
