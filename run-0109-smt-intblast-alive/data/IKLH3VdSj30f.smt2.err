ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:59:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41994 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/IKLH3VdSj30f.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2897325
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 288230376151711744 := 4 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 288230376151711744 := 4 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4096 := 4096&4503599627370497
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4095 := 4096&4503599627370497
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4503599627370497
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 4503599627370497 := 4503599627370496 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407507456
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 2252349703749641 << 13
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4096 := 4096&4503599627370497
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4094 := 4096&4503599627370497
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4503599627370497
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 4503599627370497 := 4503599627370496 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407507456
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 2252349703749641 << 13
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407507456
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 4504699407507456 := 4504699407499282 << 12
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407507456
shl: (shl[58] (bv2int %1) (+ 58 (* 288230376151711743 #110))) 1 := 2252349703749641 << 13
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 4096 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 4095 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 4094 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 4092 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 4088 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 4080 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 32 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 64 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 128 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 256 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 512 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 1024 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&8192
band: (band[58] (if (= #114 57) 1 (if #634 2 #746)) (shl[58] (bv2int %1) (+ 58 #749))) 2048 := 4096&8192
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&288230376151703551
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4096&4504699407503359
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 4504699407503359 := 4504699407499282 << 12
(smt.stats    0    101   4440    446  1357/1234/190      89/8    12   41   19.43)
(smt.stats    1    202   7847   5126  1660/1499/191     197/17    13   44   19.64)
(smt.stats    2    313  10016   7983  2195/1985/192     310/78    14   44   19.83)
(smt.stats    3    414  15203  16154  2578/2321/199     393/129    17   55   19.93)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 72057594037927936 := 72057594037927936&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 56
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 72057594037927936 := 72057594037927936&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 18446744073709543424 := 4573968371548416 << 56
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 36028797018963968 := 36028797018963968&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 55
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 1099511627776&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 40
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 1099511627776&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 40
(smt.stats    4    527  16631  20316  2647/2380/248     486/165    19   76   20.22)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1099511627776&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 1099511627776&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 40
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 1099511627776&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 40
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 128 := 128&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 128 := 128&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 124 := 128&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 128&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 7
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 32 := 32&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 28 := 32&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 24 := 32&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 32&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 32&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 5
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 16&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 4
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 8&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 3
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4 := 4&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 4&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 2
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 2&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 1
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
(smt.stats    5    649  18394  25538  2726/2442/269     605/175    20   83   20.41)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 65536 := 65536&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 4899916394579091456 := 4573968371548160 << 16
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 262144 := 262144&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 18446744073709543424 := 4573968371548160 << 18
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 131072 := 131072&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 17
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 131072 := 131072&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 17
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 131072 := 131072&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 4899916394579091456 := 4573968371548160 << 17
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 32768 := 32768&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 15
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 32 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 64 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 64 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 64 := 64&288230376151703616
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 2594073385365397568 := 4573968371548160 << 6
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 32 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16 := 64&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 64&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 6
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 64&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 6
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    750  20130  30754  2867/2578/340     714/187    22   99   20.60)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 32&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 576460752303415296 := 4573968371548160 << 5
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 32&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 576460752303415296 := 4573968371548160 << 5
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1024&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 864691128455127040 := 4573968371548160 << 10
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 1024&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 4899916394579091456 := 4573968371548160 << 10
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 274877906944&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 274877906944 := 274877906944&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 4899916394579091456 := 4573968371548160 << 38
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 274877906944 := 274877906944&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 9511602413006479360 := 4573968371548160 << 38
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 274877906944 := 274877906944&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 9511602413006479360 := 4573968371548160 << 38
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 274877906944 := 274877906944&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 9511602413006479360 := 4573968371548160 << 38
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 144115188075855872&288230376151707647
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 144115188075855872&288230376151703552
(smt.stats    7    861  22347  37266  2973/2693/388     831/210    24  108   20.70)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 144115188075855872&288230376151703552
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 144115188075855872 := 144115188075855872&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 2305843009213685760 := 4573968371548160 << 57
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 144115188075855872 := 144115188075855872&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 2594073385365397504 := 4573968371548160 << 57
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 144115188075855872 := 144115188075855872&288230376151703552
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 2594073385365397504 := 4573968371548160 << 57
(smt.stats    8    983  24914  43304  3045/2763/414     888/219    27  148   21.28)
(smt.stats    9   1117  27670  47217  3084/2770/414    1021/223    27  148   21.37)
(smt.stats   10   1218  31268  50242  3174/2812/416    1122/236    28  149   21.66)
ramon: poll                 wall=1.000s usage=0.899s mem=22920KiB load=0.90 rootload=0.89
(smt.stats   11   1329  35036  53069  3261/2920/419    1227/255    29  153   21.66)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  37722  55900  3479/3194/422    1345/272    31  159   21.75)
(smt.stats   13   1585  41340  62634  3490/3206/427    1464/272    32  169   21.85)
(smt.stats   14   1732  47586  72415  3527/3213/428    1614/285    33  171   21.94)
ramon: poll                 wall=2.000s usage=1.898s mem=23244KiB load=1.00 rootload=1.00
(smt.stats   15   1833  48524  73249  3627/3293/428    1722/300    33  171   22.04)
(smt.stats   16   1944  51444  78631  3935/3651/431    1853/307    34  175   22.14)
(smt.stats   17   2066  55315  82529  3950/3657/431    1992/323    35  178   22.14)
(smt.stats   18   2200  59614  88284  3990/3706/434    2135/342    36  179   22.14)
(smt.stats   19   2347  66950 101402  4018/3721/435    2264/360    38  188   22.23)
ramon: poll                 wall=3.000s usage=2.898s mem=23544KiB load=1.00 rootload=0.99
(smt.stats   20   2508  73563 113592  4041/3757/435    2436/360    38  188   22.36)
(smt.stats   21   2609  77862 119416  4053/3763/435    2543/360    38  188   22.36)
(smt.stats   22   2720  80519 125049  4141/3833/437    2691/407    39  188   22.49)
(smt.stats   23   2842  83238 131884  4294/3956/437    2820/441    40  189   22.58)
(smt.stats   24   2976  88148 143628  4339/3999/440    2957/449    41  192   22.58)
(smt.stats   25   3123  95402 151920  4385/4056/446    3122/478    43  201   22.68)
ramon: poll                 wall=4.000s usage=3.897s mem=24192KiB load=1.00 rootload=1.00
(smt.stats   26   3284 102554 167743  4490/4162/451    3378/512    44  217   22.77)
(smt.stats   27   3461 113482 196427  4513/4171/451    3573/543    45  224   22.87)
(smt.stats   28   3562 116881 204320  4531/4203/461    3682/585    47  238   22.87)
ramon: poll                 wall=5.000s usage=4.897s mem=24420KiB load=1.00 rootload=1.00
(smt.stats   29   3673 118962 207813  4652/4203/461    3810/598    47  238   23.18)
(smt.stats   30   3795 123269 215606  4793/4439/463    3912/609    48  248   23.09)
(smt.stats   31   3929 127249 225147  4825/4497/464    4093/632    49  250   23.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076 134231 245319  4832/4504/465    4287/632    49  250   23.25)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4 := 72057594037927936&58617163899998208
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 72057594037927936&58617163899998213
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 18217130861457838085 := 1125076749312510 << 56
ramon: poll                 wall=6.000s usage=5.897s mem=24668KiB load=1.00 rootload=1.00
(smt.stats   33   4237 138334 252141  5217/4508/465    4474/712    50  255   23.44)
ramon: poll                 wall=7.000s usage=6.896s mem=24844KiB load=1.00 rootload=1.00
(smt.stats   34   4414 142209 263237  5645/4960/470    4686/731    51  256   23.63)
ramon: poll                 wall=8.000s usage=7.896s mem=24996KiB load=1.00 rootload=1.00
(smt.stats   35   4608 150312 280580  5821/5451/474    4927/766    52  256   23.63)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1099511627776 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 2199023255552 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4398046511104 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 17592186044416 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 35184372088832 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 70368744177664 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 140737488355328 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 281474976710656 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 562949953421312 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1125899906842624 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 2251799813685248 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4503599627370496 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 9007199254740992 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 18014398509481984 := 36028797018963968&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 36028797018963968 := 36028797018963968&58561638562791424
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 18217075336120631296 := 280651819192318 << 55
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 35184372088832 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8796093022208 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 17592186044416 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 17592186044416 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 70368744177664 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4503599627370496 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 9007199254740992 := 18014398509481984&58561638562791424
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 18014398509481984 := 18014398509481984&58561638562791424
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 18217075336120631296 := 280651819190270 << 54
(smt.stats   36   4709 154354 293672  5982/5653/563    5033/843    54  283   23.82)
(smt.stats   37   4820 160858 311213  6011/5680/565    5126/844    55  285   23.82)
(smt.stats   38   4942 163804 320266  6021/5691/566    5249/844    56  286   23.92)
(smt.delete-inactive-clauses  :num-deleted-clauses 993)
(smt.stats   39   5076 170635 331089  6053/5712/566    4418/844    56  286   24.01)
(smt.stats   40   5223 181261 354133  6064/5733/566    4578/867    57  287   24.01)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115179485921802
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115188075848713
(smt.stats   41   5384 191286 370423  6102/5747/568    4741/883    58  289   24.01)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115188075848713
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115179485921802
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115179485921802
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 0 := 562949953421312&144115179485921802
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 562949953421312 := 562949953421312&144115179485921802
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 18302628877043761674 := 567728439075799294 << 49
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 562949953421312 := 562949953421312&144115179485921802
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 18302628877043761674 := 567728439075799294 << 49
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 562949953421312 := 562949953421312&144115179485921802
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 57 #825 #829) 64)) 18302628877043761674 := 567728439075799294 << 49
ramon: poll                 wall=9.003s usage=8.899s mem=26144KiB load=1.00 rootload=1.00
(smt.stats   42   5561 194518 378550  6213/5816/568    4922/897    59  290   24.20)
(smt.stats   43   5755 200865 394014  6431/5897/584    5143/921    60  293   24.48)
ramon: poll                 wall=10.000s usage=9.896s mem=26156KiB load=1.00 rootload=1.00
(smt.stats   44   5968 209522 408044  6636/6229/584    5386/959    61  295   24.58)
(smt.stats   45   6069 214349 415970  6679/6336/585    5497/976    62  298   24.67)
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 256 := 4194304&287104476244869120
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 512 := 4194304&287104476244869120
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 1024 := 4194304&287104476244869120
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 2048 := 4194304&287104476244869120
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 2048 := 4194304&287106675268124672
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 4096 := 4194304&287106675268124672
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 256 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8704 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8704 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 9216 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 9216 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8192 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8192 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 8192 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16384 := 4194304&285978576338026496
band: (band[58] (if (= #416 63) 1 (if #612 2 #818)) (shl[64] (* 2 #397) (mod #833 64))) 16384 := 4194304&285978576338026496
(smt.stats   46   6180 218915 422734  6845/6348/585    5733/989    62  298   24.67)
ramon: poll                 wall=11.000s usage=10.896s mem=26268KiB load=1.00 rootload=1.00
(smt.stats   47   6302 219376 423811  7031/6508/635    5939/1073    63  308   24.78)
(smt.stats   48   6436 222447 436111  7435/6796/635    6304/1073    63  308   24.87)
(smt.stats   49   6583 228260 443787  7466/7122/636    6500/1131    64  308   24.98)
(smt.stats   50   6744 235701 468272  7550/7217/638    7190/1270    66  317   25.27)
(smt.stats   51   6921 247682 489885  7720/7357/641    7421/1459    68  325   25.46)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7115 252378 503369  7737/7374/649    7755/1459    68  325   25.46)
ramon: poll                 wall=12.000s usage=11.895s mem=27168KiB load=1.00 rootload=0.99
(smt.stats   53   7328 263711 537866  7933/7383/649    8461/1619    69  338   26.00)
ramon: poll                 wall=13.000s usage=12.895s mem=27724KiB load=1.00 rootload=1.00
(smt.stats   54   7562 270225 566309  8024/7664/654    9216/2506    71  349   26.23)
(smt.stats   55   7663 274496 579389  8026/7665/654    9331/2506    71  349   26.23)
(smt.stats   56   7774 285172 610534  8037/7676/654    9435/2506    71  349   26.23)
(smt.stats   57   7896 295284 647474  8046/7685/656    9560/2509    72  352   26.23)
(smt.stats   58   8030 300018 664720  8066/7705/657    9743/2513    73  357   26.23)
(smt.stats   59   8177 309218 700050  8133/7714/657    9961/2561    74  358   26.42)
(smt.stats   60   8338 313550 729493  8171/7782/657   10191/2561    74  358   26.42)
ramon: poll                 wall=14.000s usage=13.894s mem=27968KiB load=1.00 rootload=1.00
(smt.stats   61   8515 317703 757284  8189/7828/661   10364/2644    75  369   26.52)
(smt.stats   62   8709 321139 775540  8199/7838/661   10572/2644    75  369   26.52)
(smt.stats   63   8922 331858 806565  8287/7846/661   10871/2659    76  376   26.62)
(smt.stats   64   9156 335138 823226  8311/7940/662   11129/2715    77  379   26.62)
ramon: poll                 wall=15.000s usage=14.894s mem=28260KiB load=1.00 rootload=1.00
(smt.stats   65   9413 339933 852734  8322/7961/664   11436/2757    78  385   26.62)
(smt.stats   66   9514 341508 863950  8326/7965/665   11551/2757    78  385   26.71)
(smt.stats   67   9625 345533 891894  8333/7972/665   11657/2757    78  385   26.71)
(smt.stats   68   9747 345998 900666  8333/7972/665   11780/2772    79  387   26.71)
(smt.stats   69   9881 350538 926076  8336/7975/665   11911/2772    79  387   26.71)
(smt.delete-inactive-clauses  :num-deleted-clauses 717)
(smt.stats   70  10028 354845 949811  8346/7985/665   11380/2772    79  387   26.71)
(smt.stats   71  10189 356907 969450  8353/7989/665   11552/2772    79  387   26.81)
ramon: poll                 wall=16.000s usage=15.894s mem=28392KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   72  10366 367216 1011832  8378/8006/665   11759/2772    79  387   26.81)
(smt.stats   73  10560 375327 1036395  8387/8026/665   11993/2772    79  387   26.90)
(smt.stats   74  10773 381280 1079502  8410/8031/665   12202/2773    79  387   26.90)
(smt.stats   75  11007 386772 1119019  8421/8056/665   12471/2773    79  387   27.00)
(smt.stats   76  11264 389925 1139760  8434/8073/665   12718/2773    79  387   27.00)
ramon: poll                 wall=17.000s usage=16.894s mem=28580KiB load=1.00 rootload=1.00
(smt.stats   77  11546 395014 1171316  8455/8094/666   13009/2871    80  391   27.00)
(smt.stats   78  11647 396222 1180447  8455/8094/666   13114/2871    80  391   27.00)
(smt.stats   79  11758 399432 1196491  8462/8101/666   13239/2871    80  391   27.00)
(smt.stats   80  11880 406712 1215921  8492/8131/669   13368/2879    82  397   27.19)
(smt.stats   81  12014 409664 1226625  8508/8147/670   13544/2879    82  397   27.19)
ramon: poll                 wall=18.000s usage=17.894s mem=28796KiB load=1.00 rootload=1.00
(smt.stats   82  12161 413725 1239663  8749/8152/670   13702/2882    82  397   27.29)
ramon: poll                 wall=19.000s usage=18.893s mem=28996KiB load=1.00 rootload=0.99
(smt.stats   83  12322 419809 1263985  9054/8439/670   13867/2954    83  417   27.38)
(smt.stats   84  12499 428797 1290716  9129/8715/670   14077/2956    83  417   27.48)
ramon: poll                 wall=20.000s usage=19.893s mem=29188KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:59:41 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.978s
ramon: group.utime          19.954s
ramon: group.stime          0.024s
ramon: group.mempeak        29444KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              0.99
