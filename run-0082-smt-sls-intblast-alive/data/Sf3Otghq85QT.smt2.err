ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:31:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28172 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Sf3Otghq85QT.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             811501
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   138.889     10000        49          0            1        2)
(sat.ddfw       1      1   75.1955     20001        98          1            1        3)
(smt.stats    0    101   3025    773   799/637/101     149/23     6   15   51.56)
(sat.ddfw       1      1   70.6714     40001       196          2            1        5)
(smt.stats    1    202   4804   2006  1225/1070/102     303/34     7   17   51.65)
(smt.stats    2    313   5902   2951  1311/1138/102     431/54     7   17   51.75)
(sat.ddfw       1      1   66.0793     70001       343          3            1        8)
(smt.stats    3    414   7019   4415  1635/1444/103     615/82     8   18   51.94)
(smt.stats    4    525   8873   6572  1816/1624/104     824/100     9   19   51.94)
(sat.ddfw       1      1   58.9971    110001       539          4            1       12)
(smt.stats    5    647  10933  11758  1908/1720/106     981/110    10   27   51.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  12585  15394  1976/1826/107    1299/126    11   27   52.04)
(smt.stats    7    859  13976  18490  2049/1913/108    1591/148    12   30   52.14)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 67108864 := 67108864&67108864
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 1140850688 := 2147483646 << 26
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 67108864 := 67108864&939524096
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 67108864 := 67108864&1073741791
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 2147483615 := 2147483616 << 26
ramon: poll                 wall=1.000s usage=0.847s mem=54364KiB load=0.85 rootload=0.84
(smt.stats    8    981  14813  21387  2173/2037/129    1797/275    13  128   52.23)
(sat.ddfw       1      1   52.0281    160000       784          5            1       17)
(smt.stats    9   1115  15456  24061  2225/2051/133    2013/275    13  128   52.23)
(smt.stats   10   1216  15956  28515  2256/2103/133    2190/275    13  128   52.23)
(smt.stats   11   1327  16758  31677  2302/2126/133    2294/246    14  198   52.33)
(smt.stats   12   1449  17536  35880  2335/2165/133    2488/246    14  198   52.33)
(smt.stats   13   1583  18948  39848  2381/2199/133    2700/247    14  198   52.42)
(smt.stats   14   1730  20527  46366  2411/2248/133    2880/247    14  198   52.53)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 134217727 := 134217728&1073741823
(sat.ddfw       1      1   46.1546    220001      1078          6            1       23)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 134217726 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 134217724 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 134217724 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 134217720 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 134217712 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 134217696 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 64 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 128 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 256 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 512 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 1024 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 2048 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 4096 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 8192 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 16384 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 32768 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65536 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 131072 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 262144 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 524288 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 1048576 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 2097152 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 4194304 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 8388608 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 16777216 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 33554432 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 67108864 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65568 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65568 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65568 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65568 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65544 := 134217728&65544
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65552 := 134217728&65552
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65552 := 134217728&65552
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65544 := 134217728&65544
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 65536 := 134217728&65536
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 49152 := 134217728&49152
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 32768 := 134217728&32768
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 16384 := 134217728&16384
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 16384 := 134217728&16384
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&1073741823
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&939524095
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 3087007743 := 1073741842 << 27
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&939524095
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 4160749567 := 1073741884 << 27
(smt.stats   15   1831  22039  49182  2541/2386/265    3095/266    15  217   53.11)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&2
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 3221225474 := 1073741858 << 27
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&268435456
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #108))) 1 := 536870925 << 28
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&268435456
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #108))) 1 := 536870925 << 28
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&268435456
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #108))) 1 := 536870925 << 28
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 134217728&805306368
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #108))) 1 := 536870923 << 28
(smt.stats   16   1944  22816  51737  2692/2541/280    3300/267    15  217   53.21)
(smt.stats   17   2066  23673  56500  2699/2545/280    3509/267    15  217   53.30)
(smt.stats   18   2200  25258  64807  2702/2561/281    3730/360    16  237   53.30)
(sat.ddfw       1      1   41.4446    290001      1421          7            1       30)
(smt.stats   19   2347  26859  71238  2731/2566/281    3975/380    17  239   53.30)
(smt.stats   20   2508  28768  78727  2748/2605/281    4244/380    17  239   53.42)
(smt.stats   21   2609  29416  82846  2761/2607/281    4364/380    17  239   53.42)
(smt.stats   22   2720  29919  88179  2765/2622/281    4482/380    17  239   53.42)
ramon: poll                 wall=2.000s usage=1.847s mem=55788KiB load=1.00 rootload=0.99
(smt.stats   23   2842  31397  94318  2788/2633/281    4643/380    17  239   53.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   24   2976  33507 100700  2792/2649/281    4879/380    17  239   53.67)
(smt.stats   25   3123  34117 105475  2805/2654/283    5142/426    18  244   53.67)
(sat.ddfw       1      1   37.2093    370001      1813          8            1       38)
(smt.stats   26   3284  35866 113244  2854/2662/283    5400/426    18  244   53.67)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 17 := 8388608&805306369
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 18 := 8388608&805306369
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 16 := 8388608&805306369
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 16 := 8388608&805306369
(smt.stats   27   3461  38839 124440  2922/2769/297    6035/502    20  264   53.76)
(smt.stats   28   3562  39911 129232  2948/2795/304    6239/502    20  264   53.86)
(smt.stats   29   3673  40924 136626  2998/2829/304    6441/503    20  264   53.96)
(smt.stats   30   3795  42115 146850  3062/2898/305    6547/735    21  313   54.06)
(smt.stats   31   3929  42773 151747  3073/2916/306    6743/773    22  320   54.15)
(sat.ddfw       1      1   32.5027    460001      2254          9            1       47)
(smt.stats   32   4076  44127 161638  3137/2961/308    6934/774    22  320   54.15)
ramon: poll                 wall=3.000s usage=2.738s mem=56472KiB load=0.89 rootload=0.90
(smt.stats   33   4238  45567 171256  3160/3003/309    7170/810    23  322   54.15)
(smt.stats   34   4415  46121 185529  3174/3017/309    7410/810    23  322   54.15)
(smt.stats   35   4609  48631 196202  3184/3027/309    7778/810    23  322   54.25)
(smt.stats   36   4710  49230 205157  3184/3027/310    7914/854    24  331   54.48)
(smt.stats   37   4821  51145 214321  3192/3035/311    8204/854    24  331   54.48)
(sat.ddfw       1      1   29.8864    560001      2745         10            1       57)
(smt.stats   38   4943  51921 221704  3192/3035/311    8371/889    25  334   54.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 206)
(smt.stats   39   5077  52310 227082  3193/3036/311    8312/889    25  334   54.58)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 1 := 536870912&939524095
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 1 := 536870912&939524095
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 536870912&939524095
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 536870912&939524095
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 536870912&134217727
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 134217727 := 1073742112 << 29
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 536870912&134217727
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 134217727 := 1073742120 << 29
(smt.stats   40   5224  54247 236525  3229/3051/330    8540/906    26  335   54.58)
(smt.stats   41   5385  56416 246734  3397/3105/338    8806/925    26  335   55.05)
ramon: poll                 wall=4.000s usage=3.726s mem=57720KiB load=0.99 rootload=0.98
(sat.ddfw       1      1   27.7778    670001      3284         11            1       68)
(smt.stats   42   5562  58011 258835  3488/3326/344    9171/992    27  349   55.15)
(smt.stats   43   5756  61335 277446  3501/3337/345    9483/992    27  349   55.15)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   44   5969  64647 292108  3533/3369/347    9971/1047    28  369   55.35)
(sat.ddfw       1      1   27.3224    790001      3872         12            1       80)
(smt.stats   45   6070  66044 301403  3581/3375/347   10225/1048    28  369   55.44)
(smt.stats   46   6181  67091 310565  3596/3424/347   10364/1120    29  381   55.44)
(smt.stats   47   6303  68488 320760  3641/3432/347   10511/1120    29  381   55.44)
ramon: poll                 wall=5.000s usage=4.898s mem=57652KiB load=1.17 rootload=1.18
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 2&536870912
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 1610612736 := 2147483546 << 1
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 2 := 2&536870912
(smt.stats   48   6437  69537 327893  3734/3482/347   10673/1124    29  381   55.54)
(sat.ddfw       1      1   25.9222    920001      4509         13            1       93)
(smt.stats   49   6584  72179 340479  3765/3578/353   11066/1138    30  382   55.54)
(smt.stats   50   6745  74746 354424  3797/3600/353   11304/1138    30  382   55.54)
(smt.stats   51   6922  80094 376111  3819/3631/353   11573/1223    31  387   55.64)
(smt.stats   52   7116  84112 393569  3925/3652/354   11878/1224    31  387   55.64)
(sat.ddfw       1      1    24.188   1060001      5196         14            1      108)
(smt.stats   53   7329  87407 415953  4018/3799/354   12211/1275    32  389   55.75)
ramon: poll                 wall=6.000s usage=5.903s mem=57964KiB load=1.01 rootload=1.00
(smt.stats   54   7563  90011 437940  4069/3894/355   12683/1361    33  391   55.75)
(smt.stats   55   7664  91442 446601  4069/3902/355   12797/1361    33  391   55.75)
(smt.stats   56   7775  92827 455270  4119/3902/355   12932/1361    33  391   56.07)
(smt.stats   57   7897  95053 473643  4162/3970/355   13116/1361    33  391   56.07)
(smt.stats   58   8031  95621 480861  4176/4009/356   13376/1407    34  392   56.07)
(smt.stats   59   8178  95926 486947  4176/4009/356   13615/1407    34  392   56.07)
(sat.ddfw       1      1   22.6552   1210001      5931         15            1      123)
(smt.stats   60   8339  97272 494144  4313/4013/356   13882/1411    34  392   56.28)
ramon: poll                 wall=7.003s usage=6.903s mem=58328KiB load=1.00 rootload=1.00
(smt.stats   61   8516  98673 500408  4534/4146/356   14167/1426    34  392   56.37)
(smt.stats   62   8710  99159 501055  4669/4482/356   14368/1482    34  392   56.57)
(sat.ddfw       1      1   21.3049   1370001      6715         16            1      139)
(smt.stats   63   8923 100185 507513  6019/5486/356   14599/1535    34  392   56.76)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   64   9157 102270 527618  6601/6397/356   15122/1536    34  392   57.20)
ramon: poll                 wall=8.000s usage=7.903s mem=59440KiB load=1.00 rootload=1.00
(smt.stats   65   9414 107988 570526  6645/6436/356   15543/1537    34  392   57.20)
(smt.stats   66   9515 109099 582108  6666/6488/357   15766/1667    35  395   57.20)
(smt.stats   67   9626 110405 589876  6703/6518/358   15933/1669    35  395   57.29)
(sat.ddfw       1      1   20.1255   1540001      7549         17            1      156)
(smt.stats   68   9748 112528 602924  6730/6555/358   16117/1716    36  399   57.29)
(smt.stats   69   9882 115586 626914  6766/6565/358   16594/1717    36  399   57.39)
(smt.delete-inactive-clauses  :num-deleted-clauses 220)
(smt.stats   70  10029 118708 662460  6800/6606/358   17415/1719    36  399   57.49)
ramon: poll                 wall=9.000s usage=8.900s mem=59716KiB load=1.00 rootload=1.00
(smt.stats   71  10190 122181 710263  6853/6643/358   17805/1721    36  399   57.49)
(smt.stats   72  10367 125358 762352  6900/6691/358   18041/1724    36  399   57.49)
(sat.ddfw       1      1   19.0557   1720001      8431         18            1      174)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 12 := 524288&13
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 8 := 524288&12
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 8 := 524288&12
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&4
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 4 := 12 << 19
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 1 := 22 << 19
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #490 #494) 32)) 1 := 12 << 19
(smt.stats   73  10561 127726 784048  6992/6751/358   18852/1726    36  399   57.61)
(smt.stats   74  10774 129378 799591  7060/6860/368   19461/2357    37  401   57.70)
(smt.stats   75  11008 132053 845244  7066/6895/369   19943/2498    38  404   57.70)
ramon: poll                 wall=10.000s usage=9.899s mem=60044KiB load=1.00 rootload=1.00
(smt.stats   76  11265 135053 905423  7147/6976/370   20493/2506    39  406   57.80)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #108))) 0 := 1073741808 << 20
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #108))) 0 := 1073741808 << 20
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #108))) 0 := 1073741808 << 20
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #108))) 0 := 1073741808 << 20
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 1 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 2 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 524288 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 524288 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 524287 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 524286 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 4 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 8 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 16 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 32 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 64 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 128 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 256 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 512 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 1024 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 2048 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 2048 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 4096 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 8192 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 16384 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 32768 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 65536 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 131072 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 262144 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 2048 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 4096 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 8192 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 16384 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 32768 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 65536 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 131072 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 131072 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 16384 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 32768 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 16384 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 32768 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 65536 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 23533 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 23532 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 23528 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 23520 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 16384 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 16384 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 2048 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 4096 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 2048 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 2048 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 1024 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 3 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 2 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 64 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 128 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 256 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 512 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 128 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 256 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 512 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 512 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 512 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 384 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 256 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1056964608
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 524288 := 524288&1056964608
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1058013184
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 524288 := 524288&1058013184
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 0 := 524288&1051721728
band: (band[30] (if (= #112 29) 1 (if #387 2 #443)) (shl[30] (bv2int %0) (+ 30 #446))) 262144 := 524288&1051721728
(sat.ddfw       1      1   18.0901   1910001      9362         19            1      193)
ramon: poll                 wall=11.000s usage=10.899s mem=60972KiB load=1.00 rootload=1.00
(smt.stats   77  11547 139134 939846  7395/7108/514   21633/2520    39  406   58.91)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 270144 := 524288&614465536
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 270144 := 524288&614465536
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 328704 := 524288&614465536
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 329728 := 524288&614465536
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 331776 := 524288&614465536
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 331776 := 524288&614465536
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 328704 := 524288&614465536
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 329728 := 524288&614465536
(smt.stats   78  11648 140995 956121  7695/7329/534   21931/2522    39  406   58.91)
(smt.stats   79  11759 145579 980179  7693/7500/565   22554/2728    40  449   59.10)
(sat.ddfw       1      1   17.2265   2110001     10343         20            1      214)
(smt.stats   80  11881 149653 997817  7987/7526/565   22860/2733    40  449   59.29)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   81  12015 152138 1021692  8083/7875/568   23412/2964    41  460   59.39)
ramon: poll                 wall=12.000s usage=11.902s mem=61596KiB load=1.00 rootload=1.00
(smt.stats   82  12162 155751 1049285  8238/7901/569   23784/2976    41  460   59.58)
(smt.stats   83  12323 159912 1100973  8248/8039/569   24003/2976    41  460   59.58)
(smt.stats   84  12500 162011 1126272  8269/8059/569   24368/3079    42  468   59.58)
(sat.ddfw       1      1   16.4474   2320001     11372         21            1      235)
(smt.stats   85  12694 169097 1184888  8307/8072/569   24676/3085    42  468   59.68)
ramon: poll                 wall=13.000s usage=12.907s mem=61920KiB load=1.01 rootload=1.00
(smt.stats   86  12907 173913 1253456  8328/8123/572   25204/3201    43  476   59.68)
(smt.stats   87  13141 179233 1305460  8336/8131/595   25675/3317    44  491   59.77)
ramon: poll                 wall=14.000s usage=13.908s mem=62244KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   15.7323   2540001     12451         22            1      257)
(smt.stats   88  13398 193039 1399231  8336/8136/596   24435/3765    45 2656   59.87)
(smt.stats   89  13680 199951 1466040  8479/8140/597   25325/3771    45 2656   60.06)
ramon: poll                 wall=15.000s usage=14.908s mem=62456KiB load=1.00 rootload=1.00
(smt.stats   90  13990 205961 1558867  8504/8293/597   25848/3950    46 2672   60.06)
(smt.stats   91  14091 207903 1580420  8526/8304/597   26077/3952    46 2672   60.46)
(sat.ddfw       1      1   15.0849   2770001     13578         23            1      280)
(smt.stats   92  14202 209665 1600473  8559/8336/597   26388/3952    46 2672   60.46)
(smt.stats   93  14324 210952 1623232  8575/8362/597   26852/3952    46 2672   60.56)
(smt.stats   94  14458 213439 1649727  8660/8380/597   27350/3958    46 2672   60.71)
ramon: poll                 wall=16.000s usage=15.907s mem=62860KiB load=1.00 rootload=0.99
(smt.stats   95  14605 215031 1662674  8758/8558/597   27970/3958    46 2672   60.71)
(smt.stats   96  14766 220631 1726514  8771/8561/597   28360/3959    46 2672   60.81)
(sat.ddfw       1      1   14.4866   3010001     14754         24            1      305)
(smt.stats   97  14943 223162 1743527  9037/8572/597   28697/3962    46 2672   61.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 41)
ramon: poll                 wall=17.003s usage=16.911s mem=63128KiB load=1.00 rootload=1.01
(smt.stats   98  15137 228994 1771985  9480/9187/597   29265/3966    46 2672   61.13)
(smt.stats   99  15350 234645 1818871  9696/9458/598   30125/4433    47 2672   61.22)
ramon: poll                 wall=18.000s usage=17.912s mem=63380KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.9315   3260001     15980         25            1      330)
(smt.stats  100  15584 241918 1893962  9897/9651/599   30992/4440    47 2672   61.41)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats  101  15841 248907 1967714 10055/9705/599   31503/4636    48 2679   61.51)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 536850944 := 536870912&1073741802
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 536850944 := 536870912&1073741802
ramon: poll                 wall=19.003s usage=18.914s mem=63780KiB load=1.00 rootload=1.00
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 536862976 := 536870912&1073741802
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 536865024 := 536870912&1073741802
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 536865024 := 536870912&1073741802
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 1098752 := 536870912&643405414
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 1098752 := 536870912&643405414
(sat.ddfw       1      1   13.4221   3520001     17254         26            1      356)
(smt.stats  102  16123 254356 2037828 10596/9876/599   32342/4650    48 2679   61.70)
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 934016 := 536870912&643405414
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 934016 := 536870912&643405414
band: (band[30] (if (= #273 31) 1 (if #365 2 #483)) (shl[32] (* 2 #256) (mod #498 32))) 936064 := 536870912&643405414
ramon: poll                 wall=20.000s usage=19.918s mem=64244KiB load=1.01 rootload=1.01
ramon: end                  Fri Nov  1 22:32:10 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.003s
ramon: group.utime          19.995s
ramon: group.stime          0.008s
ramon: group.mempeak        64760KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              1.00
