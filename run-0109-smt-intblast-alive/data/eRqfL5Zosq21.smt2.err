ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:40:24 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41029 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/eRqfL5Zosq21.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3033779
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3250    515   679/617/101     108/17     7   19   18.65)
(smt.stats    1    202   4874   1551  1148/1045/112     267/43    11   34   18.85)
(smt.stats    2    313   6680   3759  1225/1115/114     440/55    12   40   18.94)
(smt.stats    3    414   7417   5563  1443/1155/116     625/90    13   43   18.94)
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 1&1
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 1&1
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 1&1
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 1 := 54 << 2
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 1&1
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 67108865 := 54 << 2
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 53&1
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 52&1
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 4227858484 := 54 << 2
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 216&1
shl: (shl[26] (bv2int %0) (mod (bv2int %0) 26)) 212 := 54 << 2
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 216&1
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 1 := 216&1
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 216&1
shl: (shl[26] (bv2int %0) (mod (bv2int %0) 26)) 216 := 54 << 2
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 216&1
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 1 := 216&1
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 216&1
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 216&1
shl: (shl[26] (bv2int %0) (mod (bv2int %0) 26)) 217 := 54 << 2
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 216&1
shl: (shl[26] (bv2int %0) (mod (bv2int %0) 26)) 217 := 54 << 2
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 216&1
(smt.stats    4    525   8210   7023  1503/1374/146     816/121    15   69   19.15)
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 0&524287
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 67108864 := 72 << 20
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 213&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 212&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 74&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 73&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 74&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 76&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 80&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 76&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 76&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 76&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 74&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 73&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 72&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 72&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 72&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 72&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 96&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 96&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 128&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 128&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 128&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 128&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 96&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 256&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 256&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 256&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 256&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 256&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 256&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 80&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 64&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 64&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 64&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 64&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 512&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 512&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 1024&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 1024&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 2048&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 2048&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 1024&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 4096&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 1024&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 2048&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 4096&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 8192&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 4096&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 8192&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 16384&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 8192&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 16384&524287
(smt.stats    5    647   9582   9272  1690/1469/259    1039/130    16   82   19.83)
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 512&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 8192&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 16384&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 32768&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 8192&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 16384&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 32768&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 65536&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 65536&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 131072&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 262144&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 8192&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 16384&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 32768&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 65536&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 131072&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 262144&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 524288&524287
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 524288 := 72 << 20
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
shl: (shl[26] (bv2int %0) (mod (bv2int %0) 26)) 72 := 46 << 20
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
shl: (shl[26] (bv2int %0) (mod (bv2int %0) 26)) 183 := 46 << 20
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 72 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 64 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 72 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 70 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 16 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 32 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 64 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 4 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 8 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 16 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 2 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 128 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 256 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 512 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 1024 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 2048 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 4096 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 8192 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 16384 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 32768 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 65536 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 131072 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 262144 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 458624 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 393216 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 262144 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 256 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 512 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 1024 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 2048 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 4096 := 48234496&524287
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 48234496&524287
band: (band[26] (shl[26] (bv2int %0) (mod #101 26)) (if (= #372 25) 0 (if #374 1 #441))) 8192 := 48234496&524287
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  10652  12762  1891/1683/517    1229/156    18  130   20.91)
(smt.stats    7    859  11733  17325  2170/1847/547    1527/161    18  130   21.01)
(smt.stats    8    981  14386  24928  2353/2183/553    2100/389    21  169   21.30)
(smt.stats    9   1115  21193  39757  2486/2219/554    2673/466    22  172   21.97)
ramon: poll                 wall=1.000s usage=0.994s mem=23280KiB load=0.99 rootload=0.98
(smt.stats   10   1216  22106  41957  2694/2335/554    2897/468    22  172   22.06)
(smt.stats   11   1327  23611  44798  2888/2550/554    3149/470    22  172   22.22)
(smt.stats   12   1449  27230  52478  3132/2954/556    3916/852    23  175   22.32)
(smt.stats   13   1583  33837  70505  3209/2970/556    4342/861    23  175   22.41)
ramon: poll                 wall=2.000s usage=1.994s mem=24140KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   14   1730  38400  87254  3445/3059/556    4874/1061    24  178   22.60)
(smt.stats   15   1831  40582  98761  3722/3333/556    5299/1064    24  178   22.69)
(smt.stats   16   1942  44266 116112  3846/3673/569    6359/1344    26  201   22.88)
ramon: poll                 wall=3.000s usage=2.993s mem=24508KiB load=1.00 rootload=1.00
(smt.stats   17   2064  49987 127798  3896/3700/578    7202/1686    27  262   23.29)
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 65077249&3
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 467730433 := 263 << 3
(smt.stats   18   2198  57725 145659  4120/3836/578    7638/1692    27  262   23.29)
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 65077249&255
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 467730433 := 269 << 9
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 65077249&255
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 534839297 := 269 << 9
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 65077249&255
shl: (shl[32] (bv2int %0) (mod (+ #101 #243) 32)) 534839297 := 269 << 9
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 1 := 137728&255
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 137728&255
shl: (shl[26] (bv2int %0) (mod (bv2int %0) 26)) 512 := 269 << 9
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 0 := 137728&255
shl: (shl[26] (bv2int %0) (mod (bv2int %0) 26)) 512 := 269 << 9
(smt.stats   19   2346  64471 177489  4240/4039/596    8697/1888    29  268   23.59)
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 136 := 137728&255
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 128 := 137728&255
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 136 := 137728&255
band: (band[26] (shl[32] (bv2int %0) (mod #244 32)) (if (or #461 #462) 0 (if #463 1 #525))) 128 := 137728&255
(smt.stats   20   2507  69037 193097  4343/4143/607   10013/2099    30  305   23.97)
(smt.stats   21   2608  74948 217716  4551/4325/613   10328/2321    31  350   24.06)
ramon: poll                 wall=4.000s usage=3.993s mem=25608KiB load=1.00 rootload=1.00
(smt.stats   22   2719  79385 238698  4747/4333/613   11038/2328    31  350   24.25)
(smt.stats   23   2841  84363 250654  4872/4547/613   11598/2514    32  362   24.35)
(smt.stats   24   2975  88254 269708  5003/4780/620   13127/2698    33  369   24.64)
(smt.stats   25   3122  93802 289690  5052/4810/621   14163/2702    33  369   24.84)
(smt.stats   26   3283 101151 314803  5192/4970/623   15108/3134    35  412   25.03)
ramon: poll                 wall=5.000s usage=4.993s mem=26964KiB load=1.00 rootload=1.00
(smt.stats   27   3460 108181 346169  5326/4989/623   16510/3142    35  412   25.22)
(smt.stats   28   3561 111983 362198  5381/5159/626   17165/3311    36  424   25.31)
(smt.stats   29   3672 119441 395044  5402/5166/626   17667/3315    36  424   25.31)
(smt.stats   30   3794 121924 407467  5534/5202/626   18028/3569    37  448   25.42)
(smt.stats   31   3928 124905 421844  5832/5610/630   19080/3575    37  448   25.65)
(smt.stats   32   4075 130867 443640  6015/5698/630   20633/3581    37  448   25.94)
ramon: poll                 wall=6.000s usage=5.992s mem=27380KiB load=1.00 rootload=0.99
(smt.stats   33   4236 138477 479853  6082/5783/630   21304/4422    38  470   26.04)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   34   4413 145239 504535  6455/5904/631   22524/4429    38  470   26.34)
ramon: poll                 wall=7.000s usage=6.992s mem=28064KiB load=1.00 rootload=1.00
(smt.stats   35   4607 155333 553019  6703/6325/632   24666/4742    39  473   26.64)
(smt.stats   36   4708 160822 581074  6847/6575/634   25038/5132    40  481   26.74)
(smt.stats   37   4819 166390 612938  7001/6708/637   25513/5209    41  501   26.83)
ramon: poll                 wall=8.000s usage=7.992s mem=28340KiB load=1.00 rootload=1.00
(smt.stats   38   4941 171059 637798  7079/6772/637   26619/5210    41  501   27.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 80)
(smt.stats   39   5075 177956 664134  7172/6877/638   28235/5579    42  508   27.39)
ramon: poll                 wall=9.002s usage=8.993s mem=28980KiB load=1.00 rootload=1.00
(smt.stats   40   5222 188568 713710  7322/6950/639   29196/5584    42  508   27.58)
(smt.stats   41   5383 196160 756615  7500/7099/639   30553/5753    43  510   27.68)
(smt.stats   42   5560 203251 789598  7610/7298/640   32464/5757    43  510   27.98)
ramon: poll                 wall=10.000s usage=9.991s mem=29476KiB load=1.00 rootload=1.00
(smt.stats   43   5754 212525 852560  7826/7402/640   33906/6238    44  524   28.27)
(smt.stats   44   5967 222132 911843  8026/7775/642   35656/6769    45  527   28.46)
ramon: poll                 wall=11.000s usage=10.991s mem=30008KiB load=1.00 rootload=1.00
(smt.stats   45   6068 226447 934396  8132/7783/642   36225/6771    45  527   28.56)
(smt.stats   46   6179 231173 969076  8316/7924/642   36898/6775    45  527   28.65)
ramon: poll                 wall=12.000s usage=11.991s mem=30200KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   47   6301 236279 1003987  8569/8106/643   37675/6778    45  527   28.75)
(smt.stats   48   6435 239460 1026258  8829/8384/643   38394/7186    46  532   28.94)
ramon: poll                 wall=13.000s usage=12.990s mem=30628KiB load=1.00 rootload=1.00
(smt.stats   49   6582 247069 1066682  9037/8682/643   40320/7193    46  532   29.23)
ramon: poll                 wall=14.000s usage=13.990s mem=30928KiB load=1.00 rootload=1.00
(smt.stats   50   6743 257617 1133169  9252/8802/643   41420/7200    46  532   29.49)
ramon: poll                 wall=15.000s usage=14.990s mem=31204KiB load=1.00 rootload=1.00
(smt.stats   51   6920 267271 1211860  9594/9045/644   42869/7832    47  535   29.88)
(smt.stats   52   7114 274589 1235769  9711/9365/645   44466/7838    47  535   30.07)
ramon: poll                 wall=16.000s usage=15.990s mem=31948KiB load=1.00 rootload=0.99
(smt.stats   53   7327 283692 1295788 10132/9566/648   45408/8305    48  551   30.16)
ramon: poll                 wall=17.000s usage=16.989s mem=32080KiB load=1.00 rootload=1.00
(smt.stats   54   7561 292415 1381010 10413/9988/649   49562/8590    49  552   30.65)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   55   7662 298592 1436215 10524/10185/650   50269/8591    49  552   30.75)
(smt.stats   56   7773 304158 1475601 10739/10312/650   50964/9136    50  553   30.84)
ramon: poll                 wall=18.000s usage=17.989s mem=32520KiB load=1.00 rootload=1.00
(smt.stats   57   7895 308985 1512721 10969/10504/650   51748/9140    50  553   31.03)
(smt.stats   58   8029 312762 1543925 11052/10768/653   53121/9140    50  553   31.23)
ramon: poll                 wall=19.000s usage=18.989s mem=32844KiB load=1.00 rootload=1.00
(smt.stats   59   8176 319499 1590740 11341/10836/653   53849/9384    51  565   31.42)
(smt.stats   60   8337 326184 1630913 11456/11144/654   55370/9387    51  565   31.51)
ramon: poll                 wall=20.000s usage=19.988s mem=33136KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:40:44 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.981s
ramon: group.stime          0.020s
ramon: group.mempeak        33392KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.00
