ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:38:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25312 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aB2DIRcikIi6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             83817
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1886    358   728/599/108     127/12     4   16   18.88)
(smt.stats    1    202   2930   1027  1259/1102/108     265/13     4   16   18.97)
(smt.stats    2    313   4415   3606  1381/1249/111     444/67     5   17   19.07)
(smt.stats    3    414   6105   5433  1491/1359/111     641/73     6   20   19.07)
(smt.stats    4    525   7667   7536  1515/1389/124     900/134     8   34   19.17)
(smt.stats    5    647  10367  10827  1579/1448/125    1085/204     9   34   19.27)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  11191  12705  1616/1465/126    1216/209    10   35   19.38)
(smt.stats    7    859  12663  16098  1631/1497/126    1372/209    10   35   19.38)
(smt.stats    8    981  13714  19337  1662/1505/127    1613/223    11   37   19.38)
(smt.stats    9   1115  14553  22478  1681/1540/128    1847/234    12   40   19.54)
(smt.stats   10   1216  15719  24968  1692/1547/128    2063/234    12   40   19.54)
(smt.stats   11   1327  17256  28473  1699/1559/128    2204/234    12   40   19.54)
(smt.stats   12   1449  18543  33279  1700/1563/129    2410/270    13   46   19.78)
(smt.stats   13   1583  19412  37979  1703/1566/129    2560/270    13   46   19.78)
(smt.stats   14   1730  20300  43415  1711/1568/129    2791/271    13   46   19.78)
(smt.stats   15   1831  20694  47726  1723/1584/130    2951/284    14   48   19.78)
(smt.stats   16   1942  22523  53656  1723/1584/132    3085/288    16   50   19.78)
(smt.stats   17   2064  23954  57681  1723/1584/132    3249/288    16   50   19.88)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 15&0
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 15 := 16 >>l 4
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 15&0
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 15 := 16 >>l 4
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 15&0
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 15 := 16 >>l 4
(smt.stats   18   2198  25573  63171  1742/1601/138    3414/290    17   53   19.88)
(smt.stats   19   2345  26263  66766  1756/1614/138    3605/291    17   53   20.14)
ramon: poll                 wall=1.000s usage=0.941s mem=21264KiB load=0.94 rootload=0.93
(smt.stats   20   2506  27357  71951  1775/1635/143    3788/291    17   53   20.14)
(smt.stats   21   2607  28874  75566  1774/1635/143    3885/333    18   71   20.14)
(smt.stats   22   2718  30574  79933  1774/1636/145    4009/337    19   74   20.14)
(smt.stats   23   2840  32654  84281  1774/1636/145    4168/337    19   74   20.14)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3 := 67108865&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4 := 67108865&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 62914560 := 67108865&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 67108864 := 67108865&67108864
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 67108865 := 67108880 >>l 8
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 67108863 := 67108865&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 67108864 := 67108865&67108864
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 67108865 := 32 >>l 8
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 67108864 := 67108865&67108864
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 67108865 := 32 >>l 8
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&67108864
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 3 := 0 >>l 4
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 1&67108864
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 17 := 16 >>l 4
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 1&67108864
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 17 := 16 >>l 4
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 1 := 5&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2 := 5&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4 := 5&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 8 := 8&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 16 := 16&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 32 := 32&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 64 := 64&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 8 := 8&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 16 := 16&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 32 := 32&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 64 := 64&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 128 := 128&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 256 := 256&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 512 := 512&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 1024 := 1024&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2048 := 2048&67108864
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4096 := 4096&67108864
(smt.stats   24   2974  34514  88897  1874/1720/220    4439/340    20   74   20.63)
(smt.stats   25   3121  38432  96337  1891/1735/220    4640/340    20   74   20.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   26   3282  43431 105766  1877/1735/220    4799/402    21   93   20.63)
(smt.stats   27   3459  44791 110451  1878/1736/221    5025/408    22   95   20.72)
(smt.stats   28   3560  45902 113517  1878/1736/221    5156/408    22   95   20.72)
(smt.stats   29   3671  48532 117561  1879/1737/221    5279/408    22   95   20.72)
(smt.stats   30   3793  50413 122261  1879/1737/222    5435/412    23   98   20.82)
(smt.stats   31   3927  52358 127664  1885/1739/222    5658/412    23   98   20.82)
(smt.stats   32   4074  54044 135617  1907/1746/223    5841/413    23   98   20.82)
(smt.stats   33   4235  56024 144512  1952/1770/223    6047/460    24  102   20.91)
(smt.stats   34   4412  57918 152331  1982/1834/224    6254/460    24  102   20.91)
(smt.stats   35   4606  62782 161297  1984/1834/224    6458/495    25  114   21.01)
(smt.stats   36   4707  64642 166731  1995/1840/224    6595/495    25  114   21.01)
(smt.stats   37   4818  65828 170907  2031/1848/224    6738/497    25  114   21.01)
ramon: poll                 wall=2.000s usage=1.941s mem=22312KiB load=1.00 rootload=1.00
(smt.stats   38   4940  66767 174324  2189/1938/225    7022/527    26  114   21.11)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3200 := 268435233&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3200 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3200 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3200 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3072 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3072 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3072 := 268435233&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3072 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3072 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3072 := 268435264&268435232
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2304 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2304 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2304 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2816 := 268435264&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2816 := 268435359&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2816 := 268435359&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3840 := 268435359&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 3840 := 268435359&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 5888 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 5888 := 268435359&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 7936 := 268435359&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 16128 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 16128 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 32512 := 268435392&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 16128 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 16128 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 16128 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 32512 := 268435328&268435232
(smt.stats   39   5074  68757 186599  2370/2222/336    7386/680    27  144   21.49)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 24320 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 32512 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 32512 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 32512 := 268435328&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 114432&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 45023&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 44800&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 102367&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 102144&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 167680&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 36831&268435232
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 536907743 := 268438576 >>l 29
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 36831&268435232
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 536907743 := 268438576 >>l 29
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 36831&268435232
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 536907743 := 268438576 >>l 29
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 36816&268435232
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 536907728 := 536907728 >>l 29
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 36608 := 36816&268435232
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 536907728 := 536907728 >>l 29
(smt.stats   40   5221  70441 195343  2565/2367/368    7716/690    27  144   21.68)
(smt.stats   41   5382  73132 210217  2604/2428/373    8174/692    27  144   21.88)
(smt.stats   42   5559  76094 223877  2760/2566/390    9100/831    28  154   22.26)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 1&268435232
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 2097152 := 33554448 >>l 25
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&268435232
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 26 := 16777408 >>l 25
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&268435232
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 26 := 16777408 >>l 25
(smt.stats   43   5753  82989 251177  2861/2663/397    9769/1128    29  266   22.55)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 1&268435232
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 36028793260867584 (if #337 18014396630433792 #389))) 1 := 1&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 1&268435232
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 36028793260867584 (if #337 18014396630433792 #389))) 1 := 1&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 2&268435232
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 36028793260867584 (if #337 18014396630433792 #389))) 2 := 2&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 4&268435232
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 36028793260867584 (if #337 18014396630433792 #389))) 4 := 4&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 4&268435232
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 36028793260867584 (if #337 18014396630433792 #389))) 4 := 4&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 2&268435232
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 36028793260867584 (if #337 18014396630433792 #389))) 2 := 2&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 1 := 2&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2 := 4&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2 := 6&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2 := 3&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 2 := 3&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 1 := 2&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 1 := 2&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 1 := 3&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4 := 6&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4 := 5&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4 := 5&268435232
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4 := 5&268435232
(smt.stats   44   5966  87114 274772  2985/2790/451   10178/1219    30  300   22.85)
(smt.stats   45   6067  89660 292292  3004/2808/454   10444/1245    31  328   22.95)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4 := 5&268435232
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178  91710 299179  3081/2842/454   10958/1250    31  328   23.05)
ramon: poll                 wall=3.000s usage=2.940s mem=24916KiB load=1.00 rootload=1.00
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 4 := 6&268435232
(smt.stats   47   6300  93868 311344  3117/2885/455   11203/1251    31  328   23.34)
(smt.stats   48   6434  96100 328623  3201/2996/460   11892/1281    32  333   23.43)
(smt.stats   49   6581 100773 345019  3250/2998/462   12504/1288    32  333   23.63)
(smt.stats   50   6742 105354 364325  3387/3153/464   13087/1536    33  374   23.72)
(smt.stats   51   6919 110122 382957  3490/3191/464   13508/1549    33  374   23.82)
ramon: poll                 wall=4.000s usage=3.939s mem=25288KiB load=1.00 rootload=1.00
(smt.stats   52   7113 114796 405580  3669/3396/465   14307/1683    34  408   24.01)
(smt.stats   53   7326 118833 423133  4024/3473/466   14962/1694    34  408   24.49)
ramon: poll                 wall=5.004s usage=4.941s mem=26100KiB load=1.00 rootload=1.00
(smt.stats   54   7560 122669 446958  4133/3830/468   16058/1790    35  415   24.58)
(smt.stats   55   7661 125012 464607  4169/3926/470   16826/1792    35  415   24.78)
(smt.stats   56   7772 127712 482424  4210/3976/474   17659/1946    36  456   25.17)
(smt.stats   57   7894 130378 499389  4244/4016/475   18457/1947    36  456   25.26)
(smt.stats   58   8028 133355 516195  4262/4025/477   19127/1947    36  456   25.37)
(smt.stats   59   8175 136298 545207  4337/4080/478   19486/2196    37  533   25.37)
(smt.stats   60   8336 140046 585076  4359/4119/478   20243/2196    37  533   25.47)
ramon: poll                 wall=6.000s usage=5.936s mem=26888KiB load=1.00 rootload=0.99
(smt.stats   61   8513 142393 605029  4437/4200/482   20872/2366    38  535   25.56)
(smt.stats   62   8707 146964 643262  4464/4212/482   21612/2368    38  535   25.66)
(smt.stats   63   8920 149826 676080  4523/4243/482   22063/2509    39  581   25.66)
(smt.stats   64   9154 152479 722046  4550/4306/482   22480/2510    39  581   25.78)
(smt.stats   65   9411 156712 766280  4589/4337/482   23516/2510    39  581   25.87)
ramon: poll                 wall=7.000s usage=6.935s mem=27296KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   66   9512 157372 782942  4608/4379/482   23771/2510    39  581   25.87)
(smt.stats   67   9623 161721 815810  4610/4381/482   24350/2510    39  581   25.97)
(smt.stats   68   9745 164811 841120  4638/4382/483   24751/2786    40  592   25.97)
(smt.stats   69   9879 168910 854359  4820/4419/483   25236/2789    40  592   26.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 1434)
(smt.stats   70  10026 172877 877297  4973/4744/484   24817/2790    40  592   26.26)
(smt.stats   71  10187 175329 901024  5099/4747/484   25334/2799    40  592   26.26)
ramon: poll                 wall=8.000s usage=7.934s mem=27848KiB load=1.00 rootload=1.00
(smt.stats   72  10364 179038 925751  5357/4876/484   25819/3028    41  592   26.35)
(smt.stats   73  10558 182146 953236  5525/5144/484   26486/3031    41  592   26.45)
ramon: poll                 wall=9.000s usage=8.934s mem=28084KiB load=1.00 rootload=1.00
(smt.stats   74  10771 186944 992183  5875/5309/484   27179/3032    41  592   26.64)
ramon: poll                 wall=10.000s usage=9.933s mem=28428KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11005 190590 1024123  6245/5914/486   28298/3135    42  629   26.83)
(smt.stats   76  11262 195818 1094892  6342/6027/486   29305/3136    42  629   26.93)
(smt.stats   77  11544 201403 1150550  6509/6118/486   30815/3140    42  629   27.14)
(smt.stats   78  11645 204141 1159704  6541/6291/486   31066/3141    42  629   27.14)
(smt.stats   79  11756 207791 1200795  6605/6351/487   32034/3440    43  647   27.24)
ramon: poll                 wall=11.000s usage=10.932s mem=28752KiB load=1.00 rootload=1.00
(smt.stats   80  11878 210924 1229479  6614/6385/487   34552/3440    43  647   27.54)
(smt.stats   81  12012 212167 1256817  6621/6386/487   34781/3440    43  647   27.54)
(smt.stats   82  12159 214321 1278021  6649/6395/487   35228/3441    43  647   27.62)
(smt.stats   83  12320 219156 1312882  6725/6452/487   35774/3441    43  647   27.62)
(smt.stats   84  12497 222791 1333590  6815/6510/487   36300/3444    43  647   27.72)
(smt.stats   85  12691 225392 1362351  6823/6594/487   37176/3444    43  647   27.82)
ramon: poll                 wall=12.000s usage=11.931s mem=29428KiB load=1.00 rootload=1.00
(smt.stats   86  12904 231266 1425915  6842/6609/487   38497/3444    43  647   27.92)
(smt.stats   87  13138 235423 1470318  6848/6613/487   39059/3444    43  647   27.92)
(smt.stats   88  13395 244437 1586183  6857/6619/487   40267/3445    43  647   28.01)
(smt.stats   89  13677 249034 1630121  6883/6633/488   41555/4670    44  651   28.32)
ramon: poll                 wall=13.000s usage=12.930s mem=30020KiB load=1.00 rootload=1.00
(smt.stats   90  13987 254114 1685393  6931/6664/488   43439/4672    44  651   28.51)
(smt.stats   91  14088 257923 1718600  6943/6710/488   44551/4672    44  651   28.62)
(smt.stats   92  14199 262010 1762316  7002/6719/489   45080/5079    45  695   28.72)
(smt.stats   93  14321 265508 1783796  7044/6796/489   45290/5079    45  695   28.82)
(smt.stats   94  14455 268965 1816480  7051/6818/489   46053/5079    45  695   28.82)
ramon: poll                 wall=14.000s usage=13.929s mem=30400KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   95  14602 272822 1851148  7057/6824/489   46977/5079    45  695   28.91)
(smt.stats   96  14763 276096 1888955  7078/6829/489   47695/5079    45  695   29.01)
(smt.stats   97  14940 279506 1944009  7084/6851/489   48170/5079    45  695   29.01)
(smt.delete-inactive-clauses  :num-deleted-clauses 3447)
(smt.stats   98  15134 283311 1995573  7087/6854/489   45061/5079    45  695   29.12)
(smt.stats   99  15347 288710 2058352  7088/6855/489   45475/5079    45  695   29.21)
ramon: poll                 wall=15.000s usage=14.929s mem=30688KiB load=1.00 rootload=1.00
(smt.stats  100  15581 295530 2116736  7174/6866/489   46454/5085    45  695   29.21)
(smt.stats  101  15838 302724 2212948  7177/6944/489   47064/5085    45  695   29.21)
(smt.stats  102  16120 309143 2289639  7186/6953/489   48629/5085    45  695   29.31)
ramon: poll                 wall=16.000s usage=15.928s mem=30852KiB load=1.00 rootload=1.00
(smt.stats  103  16430 318120 2397177  7190/6957/489   49822/5085    45  695   29.50)
(smt.stats  104  16770 325273 2447221  7262/6958/490   50555/5868    46  701   29.50)
(smt.stats  105  16871 327315 2481564  7279/7046/490   50875/5868    46  701   29.50)
ramon: poll                 wall=17.000s usage=16.927s mem=31132KiB load=1.00 rootload=0.99
(smt.stats  106  16982 329364 2508387  7320/7049/490   51437/5868    46  701   29.60)
(smt.stats  107  17104 332068 2536092  7426/7090/490   51999/5869    46  701   29.60)
(smt.stats  108  17238 336969 2577042  7585/7233/490   52910/5875    46  701   29.69)
(smt.stats  109  17385 338396 2593335  7635/7396/490   53118/5875    46  701   29.69)
(smt.stats  110  17546 341166 2650418  7643/7408/490   53830/5875    46  701   29.79)
ramon: poll                 wall=18.000s usage=17.926s mem=31360KiB load=1.00 rootload=1.00
(smt.stats  111  17723 347290 2758583  7666/7413/490   54605/5876    46  701   29.88)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&0
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 0 := 33695984 >>l 6
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&0
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 0 := 33695984 >>l 6
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&0
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 33554630 := 3 >>l 2
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&0
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 33554630 := 3 >>l 2
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&0
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 33554629 := 3 >>l 2
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 1152921384347762688 (if #414 576460692173881344 #474))) 0 := 0&0
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 33554627 := 3 >>l 2
(smt.stats  112  17917 349486 2815004  7707/7440/490   55135/5881    46  701   30.08)
(smt.stats  113  18130 351268 2847825  7745/7502/500   55419/6236    47  703   30.08)
(smt.stats  114  18364 355751 2918663  7799/7509/500   57024/6238    47  703   30.36)
ramon: poll                 wall=19.000s usage=18.925s mem=31940KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  115  18621 360945 2977542  7826/7567/501   58432/6244    47  703   30.46)
(smt.stats  116  18903 364562 3028426  7882/7594/501   59121/6489    48  704   30.46)
ramon: poll                 wall=20.000s usage=19.925s mem=32268KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:38:34 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.000s
ramon: group.total          19.987s
ramon: group.utime          19.979s
ramon: group.stime          0.008s
ramon: group.mempeak        32784KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
