ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:58:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28968 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Cx344gC1I7GC.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             695163
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   78.7402     10000        49          0            1        2)
(smt.stats    0    101   5367    432  1344/1198/100      97/24     6   16   52.05)
(sat.ddfw       1      1   40.6545     20001        98          1            1        3)
(smt.stats    1    202   8086   1247  2030/1804/103     200/34     7   17   52.15)
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 41 := 1152921504606846974&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 40 := 1152921504606846974&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 1&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 2&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 4&43
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 4 := 5 << 6
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 4&43
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 4 := 5 << 6
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 2&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 5 := 8&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 4 := 1152921504606846940&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 8 := 1152921504606846944&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 4&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 4&43
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 4 := 46 << 6
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 4&43
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 4 := 5 << 6
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 8 := 288230376151711712&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 16 := 288230376151711728&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 32 := 288230376151711744&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 8 := 288230376151711744&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 16 := 288230376151711728&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 16 := 288230376151711728&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 16 := 288230376151711728&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 8 := 288230376151711716&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 288230376151711716&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 288230376151711712&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 288230376151711716&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 288230376151711712&43
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 288230376151711744&43
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 288230376151711744 := 288230376151711745 << 6
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 292805461487453184&43
shl: (shl[60] (bv2int %1) (mod (bv2int %0) 60)) 292805461487453200 := 292805461487453200 << 6
(smt.stats    2    313  12251   2902  2271/2062/185     308/49    12   40   52.63)
(sat.ddfw       1      1   42.0168     40001       196          2            1        5)
(smt.stats    3    414  13663   3951  2805/2532/187     406/52    13   43   52.73)
(smt.stats    4    525  15945   6277  2841/2574/191     507/60    15   50   52.73)
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 4 := 16&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 5 := 16&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 4 := 16&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 4 := 20&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 16&10
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 1152921504606846992 := 300167051778269675 << 4
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 16&10
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 1152921504606846992 := 300167051778269675 << 4
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 16&10
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 1152921504606846992 := 300167051778269675 << 4
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 16&10
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 1152921504606846992 := 300167051778269675 << 4
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 16&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 16&10
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 3458764513820540944 := 300167051778269674 << 4
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 16&10
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 3458764513820540944 := 288230376151711745 << 4
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 16&10
shl: (shl[60] (bv2int %1) (mod (bv2int %0) 60)) 1 := 72057594037927937 << 4
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 10 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 9 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 9 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
shl: (shl[60] (bv2int %1) (mod (bv2int %0) 60)) 1 := 72057594037927940 << 4
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 10 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 8 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 153722867280912896&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 4 := 153722867280912896&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 153722867280912896&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 1 := 153722867280912896&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 153722867280912896&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 1 := 153722867280912896&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 153722867280912896&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 1 := 153722867280912896&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 153722867280912896&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 1 := 153722867280912896&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 153722867280912896&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 153722867280912896&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 8 := 153722867280912896&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 8 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 2 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 76861433640456464&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 4 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 4 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 1 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 64&10
band: (band[60] (shl[60] (bv2int %1) (mod #104 60)) (if (= #638 59) 1 (if #640 2 #809))) 8 := 64&10
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 2 := 64&10
(smt.stats    5    647  19074   8259  2937/2673/256     636/77    18   67   53.31)
(sat.ddfw       1      1   38.4123     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  21482  10409  3035/2766/262     743/86    20   74   53.40)
(smt.stats    7    859  27148  15174  3096/2815/263     952/109    21   75   53.50)
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 768614336404564624&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 768614336404564624 := 48038396025285317 << 1
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 96076792050570576&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #415) 64)) 96076792050570576 := 48038396025285317 << 1
ramon: poll                 wall=1.002s usage=0.797s mem=55760KiB load=0.80 rootload=0.79
(smt.stats    8    981  29797  18544  3158/2875/278    1151/150    23   89   53.71)
(sat.ddfw       1      1   34.4828    110001       539          4            1       12)
(smt.stats    9   1115  35239  24820  3247/2959/280    1379/176    25   94   53.81)
(smt.stats   10   1216  38310  29772  3272/2975/280    1501/177    25   94   53.81)
(smt.stats   11   1327  43943  38290  3337/3035/280    1635/178    25   94   54.18)
band: (band[60] (shl[64] (bv2int %1) (mod #416 64)) (if (= #828 63) 0 (if #830 1 #956))) 0 := 288230376151711745&5
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  47260  43246  3418/3054/281    1816/220    26   95   54.33)
(smt.stats   13   1583  49311  47491  3457/3159/285    1981/252    27   95   54.33)
(sat.ddfw       1      1   30.5991    160000       784          5            1       17)
(smt.stats   14   1730  51366  56664  3483/3186/286    2238/256    28   97   54.43)
(smt.stats   15   1831  54430  66114  3608/3247/286    2409/259    28   97   54.52)
(smt.stats   16   1942  55864  70537  3650/3304/286    2646/263    28   97   54.52)
ramon: poll                 wall=2.000s usage=1.794s mem=56712KiB load=1.00 rootload=1.00
(smt.stats   17   2064  58769  75735  3730/3387/288    2872/310    29  101   54.72)
(sat.ddfw       1      1    27.199    220001      1078          6            1       23)
(smt.stats   18   2198  65387  85784  3838/3500/290    3355/360    30  108   54.89)
(smt.stats   19   2345  71058  98483  3890/3551/292    3658/390    32  111   54.98)
(smt.stats   20   2506  76430 111226  3955/3620/295    4008/405    33  126   55.17)
(smt.stats   21   2607  81724 126938  3956/3625/295    4113/405    33  126   55.17)
(sat.ddfw       1      1   24.3817    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.794s mem=57740KiB load=1.00 rootload=1.00
(smt.stats   22   2718  87510 143487  3958/3627/295    4396/425    34  144   55.44)
(smt.stats   23   2840  89732 155975  3969/3635/296    4670/465    35  160   55.44)
(smt.stats   24   2974  91772 161310  4109/3685/297    4963/487    36  171   55.71)
(sat.ddfw       1      1   22.0022    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.794s mem=58404KiB load=1.00 rootload=1.00
(smt.stats   25   3121  95187 169645  4278/3827/297    5303/492    36  171   56.11)
(smt.stats   26   3282 100063 182081  4542/3964/297    5633/495    36  171   56.20)
(sat.ddfw       1      1   20.0356    460001      2254          9            1       47)
(smt.stats   27   3459 103173 192596  4609/4263/300    6075/558    37  179   56.41)
(smt.stats   28   3560 106679 203019  4612/4266/300    6308/558    37  179   56.41)
(smt.stats   29   3671 108894 212195  4621/4275/302    7013/575    38  184   56.50)
ramon: poll                 wall=5.000s usage=4.794s mem=58720KiB load=1.00 rootload=1.00
(smt.stats   30   3793 112370 219308  4622/4276/302    7253/575    38  184   56.60)
(smt.stats   31   3927 115896 236503  4626/4280/302    7533/667    39  208   56.60)
(sat.ddfw       1      1   18.3857    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 119690 245870  4687/4289/305    8060/711    40  218   56.79)
ramon: poll                 wall=6.000s usage=5.792s mem=59056KiB load=1.00 rootload=0.99
(smt.stats   33   4235 124421 262959  4773/4359/305    8546/712    40  218   56.89)
(smt.stats   34   4412 129600 283947  4903/4441/305    8992/716    40  218   56.98)
(sat.ddfw       1      1   16.9492    670001      3284         11            1       68)
(smt.stats   35   4606 134426 299786  4937/4565/306    9678/796    41  220   56.98)
(smt.stats   36   4707 137113 310616  5026/4596/306    9895/798    41  220   57.08)
ramon: poll                 wall=7.000s usage=6.791s mem=59364KiB load=1.00 rootload=1.00
(smt.stats   37   4818 140407 320369  5162/4692/306   10122/803    41  220   57.42)
(smt.stats   38   4940 142575 333834  5217/4867/307   10472/886    42  243   57.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 285)
(smt.stats   39   5074 148473 345887  5249/4893/307   10561/886    42  243   57.75)
(sat.ddfw       1      1   15.7356    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.791s mem=59864KiB load=1.00 rootload=1.00
(smt.stats   40   5221 154043 357535  5381/4909/307   10964/895    42  243   57.85)
(sat.ddfw       1      1   14.6743    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.791s mem=60144KiB load=1.00 rootload=1.00
(smt.stats   41   5382 158493 373981  5522/5051/307   11384/900    42  243   57.94)
ramon: poll                 wall=10.000s usage=9.792s mem=60292KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.7403   1060001      5196         14            1      108)
(smt.stats   42   5559 160678 385783  5699/5235/307   11847/901    42  243   58.13)
ramon: poll                 wall=11.000s usage=10.831s mem=60356KiB load=1.04 rootload=1.04
(sat.ddfw       1      1    13.128   1210001      5931         15            1      123)
(smt.stats   43   5753 165167 402311  5918/5421/307   12521/906    42  243   58.32)
ramon: poll                 wall=12.002s usage=12.136s mem=60772KiB load=1.30 rootload=1.31
(smt.stats   44   5966 169456 425148  6044/5600/307   13468/907    42  243   58.32)
(sat.ddfw       1      1   12.4971   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6067 172703 431621  6066/5704/308   13988/1074    43  245   58.42)
ramon: poll                 wall=13.000s usage=13.133s mem=61172KiB load=1.00 rootload=0.99
(smt.stats   46   6178 178578 454718  6196/5808/309   14464/1126    44  245   58.51)
(smt.stats   47   6300 183374 474225  6445/5893/309   14701/1127    44  245   58.71)
ramon: poll                 wall=14.002s usage=14.177s mem=61012KiB load=1.04 rootload=1.04
(smt.stats   48   6434 186020 485391  6518/6172/311   15184/1182    45  258   58.81)
(sat.ddfw       1      1   11.8088   1540001      7549         17            1      156)
(smt.stats   49   6581 190322 502008  6526/6180/313   15828/1182    45  258   58.81)
ramon: poll                 wall=15.000s usage=15.185s mem=61268KiB load=1.01 rootload=1.01
(smt.stats   50   6742 197912 526795  6585/6216/315   16302/1183    45  258   58.81)
(smt.stats   51   6919 203931 552871  6641/6262/315   16916/1350    46  312   58.90)
(smt.stats   52   7113 210220 583629  6704/6307/315   17698/1354    46  312   59.37)
ramon: poll                 wall=16.002s usage=16.189s mem=61780KiB load=1.00 rootload=1.01
(sat.ddfw       1      1    11.194   1720001      8431         18            1      174)
(smt.stats   53   7326 217118 608652  6853/6363/315   18503/1358    46  312   59.65)
(smt.stats   54   7560 223619 643674  6952/6537/315   19898/1358    46  312   59.75)
(smt.stats   55   7661 227454 664146  6998/6623/315   20329/1359    46  312   59.86)
ramon: poll                 wall=17.000s usage=17.153s mem=62036KiB load=0.97 rootload=0.96
(smt.stats   56   7772 233596 686090  7035/6660/315   20875/1359    46  312   59.86)
(smt.stats   57   7894 239424 713574  7135/6702/315   21164/1362    46  312   59.95)
(smt.stats   58   8028 242766 732239  7149/6788/315   21581/1362    46  312   59.95)
(sat.ddfw       1      1    10.673   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.185s mem=62308KiB load=1.03 rootload=1.03
(smt.stats   59   8175 245364 742914  7280/6806/315   21770/1362    46  312   60.05)
(smt.stats   60   8336 249765 777909  7390/6953/315   22091/1362    46  312   60.05)
(smt.stats   61   8513 253241 800447  7425/7066/316   23020/1839    47  324   60.14)
ramon: poll                 wall=19.000s usage=19.268s mem=62596KiB load=1.08 rootload=1.09
(smt.stats   62   8707 257598 836650  7592/7084/316   23275/1840    47  324   60.24)
(sat.ddfw       1      1   10.2496   2110001     10343         20            1      214)
(smt.stats   63   8920 263719 896875  7772/7265/316   23885/1840    47  324   60.24)
ramon: poll                 wall=20.000s usage=20.294s mem=62736KiB load=1.03 rootload=1.02
ramon: end                  Fri Nov  1 21:58:35 2024
ramon: root.execname        z3
ramon: root.utime           20.360s
ramon: root.stime           0.000s
ramon: group.total          20.368s
ramon: group.utime          20.360s
ramon: group.stime          0.008s
ramon: group.mempeak        62992KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.01
