ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:33:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25457 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/XHH9uP5IbKLP.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             67631
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4877    521  1313/1142/111      99/10     7   17   19.28)
(smt.stats    1    202   6884   1797  2073/1883/113     211/18     8   20   19.47)
(smt.stats    2    313   9797   4331  2513/2281/119     311/27    11   31   19.57)
(smt.stats    3    414  12062   6480  2658/2410/126     412/31    12   34   19.67)
(smt.stats    4    525  14472   8489  2752/2495/131     480/40    13   50   19.67)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 72057594037927935&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 513&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 1024&512
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 18374686479671624704 := 0 >>l 56
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 1024&512
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 18374686479671624704 := 0 >>l 56
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 72057594037927935&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 1535&512
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 18374686479671625215 := 0 >>l 56
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 512 := 35887507627278209&512
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 18410573987298901889 := 18410573987298902016 >>l 56
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 512 := 35887507627278335&512
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 18410573987298902015 := 18410573987298902016 >>l 56
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 126 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 128 := 36028797010608254 >>l 48
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 126 := 36028797010608254 >>l 48
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 126 := 35747322042253312 >>l 48
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 127 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 126 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 124 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 120 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 112 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 32&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 32 := 32&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 64&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 64 := 64&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 4 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 127&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 32 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 64&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 64 := 64&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 32&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 32 := 32&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 32&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 32 := 32&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 16&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 16 := 16&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 16&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 16 := 16&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 16&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 16 := 16&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 16&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 16 := 16&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 8&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 8 := 8&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 8&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 8 := 8&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 8&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 8 := 8&512
(smt.stats    5    647  17465  12122  2852/2567/179     611/58    15   59   19.98)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 2&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 2 := 2&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 3&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 3 := 3&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1 := 1&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2 := 2&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4 := 4&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4 := 4&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 8 := 8&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 16 := 16&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 32 := 32&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 64 := 64&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 64 := 64&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 16 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 32 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 64 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 64 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 16 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 32 := 127&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 8 := 8&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1 := 1&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4 := 4&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4 := 4&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4 := 4&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 128 := 128&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 128 := 255&512
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  18491  14402  2945/2682/292     720/67    17   90   20.57)
(smt.stats    7    860  22260  18482  2993/2712/292     837/67    17   90   20.67)
(smt.stats    8    982  24987  22212  2999/2727/297     953/74    19  103   20.77)
(smt.stats    9   1117  30131  27184  3023/2732/297    1101/76    19  103   20.77)
(smt.stats   10   1218  33106  31648  3036/2760/297    1197/85    20  110   20.86)
(smt.stats   11   1329  39012  35887  3041/2765/297    1307/85    20  110   20.86)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 32 := 2199023255553&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 32 := 2199023255584&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 32 := 2199023255584&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 64 := 2199023255584&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 64 := 2199023255616&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 64 := 2199023255553&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 64 := 2199023255679&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 256 := 2199023255679&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 512 := 2199023255679&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1024 := 2199023255553&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2048 := 2199023257601&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4096 := 2199023257601&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 8192 := 2199023257601&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 16384 := 2199023271937&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 32768 := 2199023271937&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 65536 := 2199023271937&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 131072 := 2199023271937&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4096 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 16384 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 32768 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 65536 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 131072 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 262144 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 524288 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1048576 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 262144 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1048576 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2097152 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4194304 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 8388608 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 16777216 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 8388608 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 8388608 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 33554432 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 67108864 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 134217728 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 268435456 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 536870912 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1073741824 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2147483648 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 268435456 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 536870912 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2147483648 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4294967296 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 8589934592 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4294967296 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 8589934592 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 17179869184 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 34359738368 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 68719476736 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 137438953472 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 274877906944 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 549755813888 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1099511627776 := 2199023256064&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2199023255552 := 2199023256064&2199023255552
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 144117387099111936 := 216172782113783808 >>l 24
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  42317  39909  3207/2905/477    1465/106    21  120   21.68)
(smt.stats   13   1585  45552  44782  3217/2940/485    1604/144    23  169   21.87)
(smt.stats   14   1732  48900  50525  3255/2949/486    1769/146    23  169   21.87)
(smt.stats   15   1833  49965  53539  3268/2987/491    1875/155    24  169   21.98)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 2199023256064&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 216174981137039872 := 9295429630892703744 >>l 8
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 2199023256064&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 216174981137039872 := 9295429630892703744 >>l 8
ramon: poll                 wall=1.000s usage=0.997s mem=23484KiB load=1.00 rootload=0.97
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 268435968&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 216172782382219776 := 9295429630892703744 >>l 8
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 134218240&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 216172782248002048 := 9295429630892703744 >>l 8
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 134218240&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 216172782248002048 := 9295429631026921728 >>l 8
(smt.stats   16   1944  51886  59186  3310/3031/508    2003/175    26  187   21.98)
(smt.stats   17   2066  53818  63981  3322/3043/511    2131/187    27  196   22.07)
(smt.stats   18   2200  58903  69753  3339/3046/511    2290/193    28  208   22.07)
(smt.stats   19   2347  60679  74884  3369/3081/511    2449/195    28  208   22.07)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 2251799813685760&2251799813685248
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 128 := 2251804108652544&2251799813685248
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 128 := 2251800082186240&2251799813685248
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 549755813888 := 2251804108653568&2251799813685248
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1099511627776 := 2251804108653568&2251799813685248
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2199023255552 := 2251804108653568&2251799813685248
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 4398046511104 := 2251804108653568&2251799813685248
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 268436480&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 268436480 := 4503616824016896 >>l 9
(smt.stats   20   2508  62364  80129  3421/3137/545    2685/246    29  214   22.26)
(smt.stats   21   2609  67151  89248  3434/3150/546    2802/284    30  230   22.26)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 4503599627370496&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 148618787703226368 := 256 >>l 8
(smt.stats   22   2720  72750  96036  3446/3162/548    2942/321    32  235   22.26)
(smt.stats   23   2842  74266  99845  3476/3176/548    3084/321    32  235   22.36)
(smt.stats   24   2976  75902 106102  3503/3212/550    3255/349    33  247   22.36)
(smt.stats   25   3123  77497 111644  3518/3221/550    3415/349    33  247   22.46)
(smt.stats   26   3284  79023 117985  3526/3234/552    3593/393    34  248   22.46)
(smt.stats   27   3461  82506 126039  3556/3252/556    3816/401    35  257   22.66)
(smt.stats   28   3562  83520 129528  3589/3287/558    3930/420    36  261   22.75)
(smt.stats   29   3673  86262 136263  3594/3292/558    4070/420    36  261   22.75)
(smt.stats   30   3795  89273 141423  3597/3295/558    4194/449    37  263   22.94)
(smt.stats   31   3929  91541 148162  3609/3305/558    4340/450    37  263   22.94)
ramon: poll                 wall=2.000s usage=1.996s mem=24252KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  94457 156290  3617/3315/559    4515/454    38  266   22.94)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 2251804108718081&512
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 146366992184573953 := 0 >>l 56
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 254&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 128 := 254&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 254&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 128 := 254&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 254&512
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 128 := 254&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2 := 254&512
(smt.stats   33   4237  96947 161850  3640/3316/559    4681/458    38  266   23.04)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2 := 254&512
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 2 := 254&512
(smt.stats   34   4414 103444 173108  3666/3354/576    4879/466    39  268   23.13)
(smt.stats   35   4608 107698 181631  3705/3397/578    5113/482    40  279   23.23)
(smt.stats   36   4709 110668 186633  3714/3406/578    5227/482    40  279   23.23)
(smt.stats   37   4820 117157 192590  3718/3408/578    5341/507    41  294   23.32)
(smt.stats   38   4942 119700 198449  3800/3411/578    5483/512    41  294   23.32)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076 121490 204308  3810/3502/578    5636/512    41  294   23.42)
(smt.stats   40   5223 122928 211081  3825/3517/578    5825/512    41  294   23.42)
ramon: poll                 wall=3.000s usage=2.995s mem=24968KiB load=1.00 rootload=1.00
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 134217728 := 134217729&562949953421312
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 134217728 := 134217729&562949953421312
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 268435456 := 268435457&562949953421312
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 1&562949953421312
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 144115188075855873 := 18374403900871474944 >>l 16
(smt.stats   41   5384 128142 226713  3930/3616/592    6035/637    43  317   23.60)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 1&562949953421312
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 144115188075855873 := 18374403900871474944 >>l 16
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 1&562949953421312
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 144115188075855873 := 18374403900871474944 >>l 16
(smt.stats   42   5561 130265 235847  3958/3641/597    6270/641    43  317   23.79)
(smt.stats   43   5755 135537 247112  3967/3657/598    6487/675    44  321   23.79)
ramon: poll                 wall=4.000s usage=3.994s mem=25484KiB load=1.00 rootload=1.00
(smt.stats   44   5968 144455 265234  3981/3670/598    6813/675    44  321   23.79)
(smt.stats   45   6069 145616 268107  4153/3823/602    7004/716    45  325   23.89)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 36042002030133249&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 36042002030133249 := 18410445901710557184 >>l 9
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 36042002030133249&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 36042002030133249 := 18410445902884962304 >>l 9
(smt.stats   46   6180 148566 276271  4260/3856/602    7185/719    45  325   24.00)
(smt.stats   47   6302 153594 290909  4306/3973/603    7636/741    46  328   24.09)
(smt.stats   48   6436 155977 300293  4314/3999/603    7796/741    46  328   24.09)
(smt.stats   49   6583 161427 312257  4315/4000/603    7966/921    47  332   24.39)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 0&562949953421312
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 0 >>l 8
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 0&562949953421312
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 0 >>l 8
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 0&2199023255552
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 0 >>l 16
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 0&2199023255552
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 0 >>l 16
(smt.stats   50   6744 168165 333365  4354/4008/603    8159/923    47  332   24.39)
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 0&2199023255552
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #106 #343) 64)) 0 := 16843008 >>l 24
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 1&2199023255552
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 1 := 1&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 0 := 1&2199023255552
band: (band[56] (lshr[56] (bv2int %1) (mod #106 56)) (if (= #509 55) 72057594037927936 (if #511 36028797018963968 #619))) 1 := 1&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1 := 1&2199023255552
band: (band[56] (lshr[64] (* 256 #105) (mod #344 64)) (if (= #642 63) 36893488147419103232 (if #644 18446744073709551616 #768))) 1 := 1&2199023255552
(smt.stats   51   6921 173032 347630  4389/4067/616    8413/945    48  334   24.48)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7115 176265 362028  4428/4098/616    8951/945    48  334   24.58)
ramon: poll                 wall=5.000s usage=4.993s mem=26056KiB load=1.00 rootload=1.00
(smt.stats   53   7328 179968 367626  4756/4101/616    9301/1122    49  344   24.86)
(smt.stats   54   7562 188124 389521  4992/4609/618    9940/1192    50  347   25.15)
(smt.stats   55   7663 192760 400230  5239/4774/618   10237/1194    50  347   25.45)
(smt.stats   56   7774 196755 405607  5302/4865/618   10397/1199    50  347   25.45)
ramon: poll                 wall=6.000s usage=5.993s mem=26916KiB load=1.00 rootload=1.00
(smt.stats   57   7896 202713 428240  5363/4932/618   10926/1280    51  349   25.55)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8030 204601 439488  5435/4981/619   11182/1280    51  349   25.74)
(smt.stats   59   8177 205986 446483  5472/5058/619   11419/1483    52  352   25.74)
(smt.stats   60   8338 209949 475774  5519/5097/620   11798/1483    52  352   25.84)
(smt.stats   61   8515 214037 498094  5609/5184/622   12352/1522    53  357   26.05)
(smt.stats   62   8709 223034 520597  5624/5193/622   12743/1522    53  357   26.36)
ramon: poll                 wall=7.000s usage=6.992s mem=27920KiB load=1.00 rootload=1.00
(smt.stats   63   8922 231441 548469  5741/5311/625   13258/1612    54  358   26.64)
(smt.stats   64   9156 239691 574835  5762/5327/625   13818/1613    54  358   26.74)
ramon: poll                 wall=8.000s usage=7.991s mem=28364KiB load=1.00 rootload=1.00
(smt.stats   65   9413 252115 620811  5793/5362/626   14359/1681    56  369   26.84)
(smt.stats   66   9514 254656 630881  5800/5369/626   14550/1681    56  369   26.84)
(smt.stats   67   9625 261323 647683  5891/5376/626   14863/1686    56  369   26.93)
ramon: poll                 wall=9.000s usage=8.991s mem=28532KiB load=1.00 rootload=1.00
(smt.stats   68   9747 266346 662356  6026/5467/628   15122/1723    57  376   27.31)
ramon: poll                 wall=10.000s usage=9.991s mem=28816KiB load=1.00 rootload=1.00
(smt.stats   69   9881 272863 680256  6329/5668/628   15394/1725    57  376   27.22)
(smt.delete-inactive-clauses  :num-deleted-clauses 1044)
(smt.stats   70  10028 277570 698228  6389/5921/628   15056/1725    57  376   27.32)
(smt.stats   71  10189 282026 714721  6395/5964/628   15538/1725    57  376   27.41)
(smt.stats   72  10366 288069 742790  6401/5970/628   16059/1725    57  376   27.41)
ramon: poll                 wall=11.000s usage=10.989s mem=28992KiB load=1.00 rootload=0.99
(smt.stats   73  10560 294201 770431  6461/5980/628   16966/1730    57  376   27.51)
(smt.stats   74  10773 299450 791595  6583/6056/628   17300/1732    57  376   27.60)
(smt.stats   75  11007 305200 826696  6604/6173/629   17903/2180    58  383   27.70)
ramon: poll                 wall=12.000s usage=11.989s mem=29272KiB load=1.00 rootload=1.00
(smt.stats   76  11264 322954 900887  6626/6190/629   18265/2180    58  383   27.80)
(smt.stats   77  11546 332610 951047  6704/6214/629   19406/2184    58  383   27.90)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   78  11647 336264 963936  6716/6282/629   19560/2184    58  383   27.90)
(smt.stats   79  11758 342512 998650  6717/6283/629   19724/2184    58  383   28.00)
(smt.stats   80  11880 347381 1019622  6722/6285/629   20012/2184    58  383   28.00)
(smt.stats   81  12014 350958 1038790  6740/6297/629   20322/2184    58  383   28.10)
ramon: poll                 wall=13.000s usage=12.988s mem=29552KiB load=1.00 rootload=1.00
(smt.stats   82  12161 354741 1060215  6827/6309/629   20524/2185    58  383   28.10)
(smt.stats   83  12322 362465 1112667  6998/6417/629   20883/2190    58  383   28.19)
ramon: poll                 wall=14.000s usage=13.988s mem=29972KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12499 366544 1132709  7119/6569/629   21149/2191    58  383   28.30)
(smt.stats   85  12693 370889 1170771  7237/6697/629   21383/2191    58  383   28.39)
(smt.stats   86  12906 375769 1201895  7282/6805/629   21815/2191    58  383   28.49)
(smt.stats   87  13140 380288 1220402  7393/6921/631   22290/2446    59  393   28.58)
ramon: poll                 wall=15.000s usage=14.987s mem=30108KiB load=1.00 rootload=1.00
(smt.stats   88  13397 387666 1256753  7414/6979/632   22925/2446    59  393   28.58)
(smt.stats   89  13679 394974 1280299  7438/6988/632   23403/2536    60  403   28.75)
(smt.stats   90  13989 402382 1327058  7464/7011/632   23987/2536    60  403   28.84)
(smt.stats   91  14090 405904 1348061  7473/7036/632   24186/2536    60  403   28.84)
(smt.stats   92  14201 409160 1372480  7474/7037/633   24437/2593    61  410   28.84)
ramon: poll                 wall=16.000s usage=15.985s mem=30384KiB load=1.00 rootload=1.00
(smt.stats   93  14323 413201 1396525  7524/7040/633   24674/2594    61  410   29.14)
(smt.stats   94  14457 416290 1416693  7739/7302/634   25181/2595    61  410   29.23)
(smt.stats   95  14604 418258 1424881  7759/7307/635   25493/2595    61  410   29.23)
ramon: poll                 wall=17.000s usage=16.985s mem=31212KiB load=1.00 rootload=1.00
(smt.stats   96  14765 424548 1468348  7871/7328/635   25830/2596    61  410   29.33)
(smt.stats   97  14942 428023 1496343  8026/7451/635   26244/2815    62  427   29.33)
(smt.delete-inactive-clauses  :num-deleted-clauses 9)
ramon: poll                 wall=18.000s usage=17.983s mem=31252KiB load=1.00 rootload=1.00
(smt.stats   98  15136 435488 1519347  8045/7600/635   27088/2816    62  427   29.42)
(smt.stats   99  15349 445713 1576918  8059/7622/636   28212/2816    62  427   29.71)
(smt.stats  100  15583 455182 1634169  8068/7631/636   28847/3084    63  429   29.81)
ramon: poll                 wall=19.000s usage=18.982s mem=31316KiB load=1.00 rootload=1.00
(smt.stats  101  15840 464959 1670625  8092/7646/636   29393/3084    63  429   29.81)
(smt.stats  102  16122 472802 1731423  8124/7686/637   29954/3191    64  430   30.00)
(smt.stats  103  16432 487022 1791278  8166/7689/637   30598/3194    64  430   30.00)
ramon: poll                 wall=20.000s usage=19.974s mem=31692KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 18:33:38 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.982s
ramon: group.utime          19.962s
ramon: group.stime          0.020s
ramon: group.mempeak        31948KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
