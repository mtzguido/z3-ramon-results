ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:21:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30731 MiB
ramon: sys.mem.avail        62093 MiB
ramon: sys.nprocs           1402
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/120LjG41w74u.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             212501
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   212/211     0/0  58       0    18.58   0.00)
(sat.stats    101    722    0   212/211   101/34  58       0    18.78   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 580 :time 0.00)
(sat.stats    101    722    0   212/211   101/34  58       0    18.78   0.00)
(sat.stats    101    722    0   212/211   101/34  58       0    18.78   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 370418.88 :time 0.00)
(sat.stats    101    722    0   216/215    58/32  58       0    18.88   0.01)
(sat.stats    104    755    1   216/215    61/35  58       0    18.88   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    817    2   216/215    64/38  58       0    18.88   0.01)
(sat.stats    130   1244    3   216/215    87/56  58       0    18.88   0.01)
(sat.stats    133   1316    4   216/215    90/56  58       0    18.88   0.01)
(sat.stats    136   1386    5   216/215    93/57  58       0    18.88   0.01)
(sat.stats    139   1471    6   216/215    96/59  58       0    18.88   0.01)
(sat.stats    142   1535    7   216/215    99/61  58       0    18.88   0.01)
(sat.stats    145   1612    8   216/215   102/63  58       0    18.88   0.01)
(sat.stats    148   1674    9   216/215   105/64  58       0    18.88   0.01)
(sat.stats    151   1741   10   216/215   108/65  58       0    18.88   0.01)
(sat.stats    154   1820   11   216/215   111/68  58       0    18.88   0.01)
(sat.stats    157   1894   12   216/215   114/71  58       0    18.88   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    234   3415   20   216/215   191/109  58       0    19.07   0.01)
(sat.stats    317   4826   22   218/217   274/162  58       0    19.07   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3131 :time 0.00)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 1 := 50 << 44
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 10436 := 8796093022208&35184372088832
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 156307 := 8796093022208&35184372088832
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&35184372088832
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #620 #622) 64)) 0 := 100 << 43
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 2 := 8796093022208&123145302310912
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 1 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 44210 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 8796093022208 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 107364 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 39608 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 297344 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 80 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 96 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 64 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 6615808 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 14714368 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 408576 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 45584384 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 2048 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 170287104 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 385744896 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 16384 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 32768 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 65536 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 6395002880 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 14266925056 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 524288 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 1048576 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 8371830784 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 4194304 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 8388608 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 236088983552 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 33554432 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 67108864 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 6288368992256 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 268435456 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 5165771915264 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 4728758992896 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 2147483648 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 3006477107200 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 8589934592 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 3401614098432 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 7490422964224 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 6734508720128 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 549755813888 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 274877906944 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 6597069766656 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 1099511627776 := 123145302310912&8796093022208
band: (band[47] (if (= #77 46) 1 (if #516 2 #606)) (shl[47] (bv2int %0) (+ 47 #609))) 0 := 8796093022208&123145302310912
band: (band[47] (shl[64] (* 2 #62) (mod #623 64)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #647 1 #739))) 4398046511104 := 123145302310912&8796093022208
(sat.stats    595   9944   41 11897/11894   549/217  75       0    25.32   0.32)
ramon: poll                 wall=1.000s usage=0.997s mem=36252KiB load=1.00 rootload=0.97
(sat.stats    709  14119   71 50407/50404   663/217  75       0    34.73   0.99)
ramon: poll                 wall=2.000s usage=1.997s mem=43504KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.997s mem=46064KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.997s mem=46576KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.997s mem=48752KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.997s mem=50672KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=63724KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=63980KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=64492KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.997s mem=64748KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.997s mem=65260KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.997s mem=65772KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.997s mem=68628KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.997s mem=68712KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.997s mem=68712KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.997s mem=68712KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.996s mem=68968KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.996s mem=68968KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.996s mem=68968KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.996s mem=69732KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:21:36 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.040s
ramon: group.total          20.007s
ramon: group.utime          19.963s
ramon: group.stime          0.044s
ramon: group.mempeak        69988KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
