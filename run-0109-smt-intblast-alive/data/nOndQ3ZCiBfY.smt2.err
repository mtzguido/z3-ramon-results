ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:53:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40748 MiB
ramon: sys.mem.avail        61708 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/nOndQ3ZCiBfY.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3076249
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   6171    556  1302/1117/105      85/24    10   18   19.06)
(smt.stats    1    202   7400   1150  2466/2062/105     194/37    10   18   19.35)
(smt.stats    2    313  10087   2445  2527/2264/106     314/44    11   20   19.35)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 33554432&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370496 := 4503599627370496 << 25
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 33554432&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370496 := 4503599627370496 << 25
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 33554432&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370496 := 4503599627370496 << 25
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2 := 33554432&2
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 4 := 33554432&4
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 8 := 33554432&8
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 16 := 33554432&16
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 32 := 33554432&32
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 64 := 33554432&64
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 128 := 33554432&128
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 256 := 33554432&256
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 512 := 33554432&512
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 1024 := 33554432&1024
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2048 := 33554432&2048
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 33554432&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370498 := 4503599627370498 << 25
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 33554432&134217734
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599761588230 := 4503599761588230 << 25
(smt.stats    3    414  11887   3774  2598/2369/167     430/70    14   46   19.66)
(smt.stats    4    525  13736   5966  2666/2415/168     530/99    16   51   19.76)
(smt.stats    5    647  15513   9005  2716/2474/168     644/99    16   51   19.76)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16590  10048  2730/2490/168     744/99    16   51   19.86)
(smt.stats    7    859  17123  11123  2732/2492/169     854/106    17   53   19.86)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8589934592&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 9007199254740992 := 4503599627370496 << 33
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8589934592&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 9007199254740992 := 4503599627370496 << 33
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8589934592&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370497 := 4503599627370496 << 33
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8589934592&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370497 := 4503599627370496 << 33
(smt.stats    8    981  18076  12588  2750/2510/178     981/106    18   55   19.86)
(smt.stats    9   1115  20859  15062  2805/2528/180    1116/119    19   60   19.97)
(smt.stats   10   1216  22963  16781  2824/2576/180    1200/124    20   75   19.97)
(smt.stats   11   1327  25404  19593  2846/2588/180    1308/125    20   75   19.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27302  22425  2869/2622/180    1484/126    20   75   19.97)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 1 := 65536&1
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370496 := 4503050005774334 << 16
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370496 := 4503050005774334 << 16
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370496 := 4503050005774334 << 16
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 2111337203236864 << 17
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 36028797018963968 := 4222124650659840 << 16
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 2111337203236864 << 17
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 2111337203236864 << 17
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 2111337203236864 << 17
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&141563202240512
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 1 := 65536&141563202240512
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&141563202240512
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 2 := 65536&141563202240512
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 3 := 65536&274880135168
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 3 := 65536&274880135168
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2 := 65536&274880135168
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2 := 65536&274880135168
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2 := 65536&274880135168
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 65536&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 141012366393327 := 141012366262272 << 17
(smt.stats   13   1583  30195  26653  2934/2635/180    1621/132    20   75   20.17)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 1 := 65536&274880135168
(smt.stats   14   1730  31137  28887  2973/2715/206    1781/151    21   79   20.17)
(smt.stats   15   1831  32351  31482  3007/2729/209    1884/169    22   87   20.17)
(smt.stats   16   1942  34450  35045  3061/2809/210    1995/173    23   88   20.39)
(smt.stats   17   2064  35588  37948  3072/2823/210    2119/174    23   88   20.39)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1 := 282024732524544 << 29
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&1073741824
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 141012366262273 << 30
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&1073741824
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 141012366262273 << 30
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&132200100003840
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1 := 282024732524544 << 29
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&1073741824
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 141012366262273 << 30
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&1073741824
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 141012366262273 << 30
(smt.stats   18   2198  38814  41766  3096/2827/213    2258/182    24   89   20.39)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 8 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 8 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 272 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2048 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 4096 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 18432 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 4096 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 4096 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 4096 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2048 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2048 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2048 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 2 := 536870912&282024732524544
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&282024732524544
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 282024732524545 := 141012366524928 << 30
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 536870912&282024732524544
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 282024732524545 := 141012366524928 << 30
(smt.stats   19   2345  39760  44647  3317/2869/228    2522/190    25   98   20.68)
(smt.stats   20   2506  42674  51125  3401/3140/256    2783/200    25   98   20.77)
ramon: poll                 wall=1.000s usage=0.900s mem=21920KiB load=0.90 rootload=0.90
(smt.stats   21   2607  43950  54793  3445/3170/256    2874/305    26  109   20.77)
(smt.stats   22   2718  46985  63543  3477/3208/257    3048/309    26  109   20.87)
(smt.stats   23   2840  49835  71179  3500/3235/257    3164/342    27  110   20.87)
(smt.stats   24   2974  51656  77769  3523/3270/259    3320/346    28  116   20.87)
(smt.stats   25   3121  52932  83953  3534/3281/261    3473/346    28  116   21.13)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 2251799813685248&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1 := 282024732524544 << 51
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 2251799813685248&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1 := 282024732524544 << 51
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 2251799813685248&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370497 := 282024732524544 << 51
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 2251799813685248&4503599627370495
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 2251799813685248&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 4503599627370497 := 282024732524544 << 51
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 2147483648&21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 21 := 282024732524544 << 31
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 4294967296&20
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 20 := 282024732524544 << 32
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8589934592&19
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 19 := 282024732524544 << 33
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8589934592&19
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 19 := 282024732524544 << 33
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 17179869184&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 18 := 282024732524544 << 34
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 34359738368&17
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 17 := 282024732524544 << 35
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 274877906944&14
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 14 := 282024732524544 << 38
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&282024732524543
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 282024732524543 := 282024732524544 << 39
(smt.stats   26   3283  54461  90148  3592/3304/277    3631/374    29  122   21.13)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 0 := 282024732524544 << 39
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 11 := 141012366262272 << 40
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 0 := 282024732524544 << 39
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 11 := 141012366262272 << 40
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 0 := 282024732524544 << 39
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 141012366262272 << 40
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 0 := 282024732524544 << 39
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4503599627370495 := 141012366262272 << 40
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 0 := 282024733049858 << 39
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 549755813888&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 0 := 282024733049858 << 39
(smt.stats   27   3461  57006  95817  3915/3629/319    3916/389    30  130   21.43)
(smt.stats   28   3562  59207 101546  3939/3643/321    4056/514    31  150   21.52)
(smt.stats   29   3673  60491 105895  3997/3683/322    4190/520    31  150   21.52)
(smt.stats   30   3795  64166 114285  4005/3722/322    4357/581    32  152   21.62)
(smt.stats   31   3929  67803 120456  4060/3774/332    4538/623    33  154   21.72)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  70387 126272  4132/3793/339    4813/628    33  154   22.01)
(smt.stats   33   4237  74622 139347  4145/3863/340    5042/755    35  172   22.01)
ramon: poll                 wall=2.000s usage=1.900s mem=23376KiB load=1.00 rootload=0.99
(smt.stats   34   4414  79744 147875  4240/3871/340    5254/764    35  172   22.10)
(smt.stats   35   4608  81349 154335  4266/3984/341    5457/796    36  172   22.10)
(smt.stats   36   4709  83533 160990  4279/3992/341    5559/798    36  172   22.10)
(smt.stats   37   4820  87216 169044  4382/4002/341    5711/802    36  172   22.10)
(smt.stats   38   4942  89469 178559  4477/4195/345    5906/839    37  173   22.30)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   39   5076  92722 185160  4696/4359/349    6101/840    37  173   22.69)
(smt.stats   40   5223  98923 194934  4746/4377/349    6265/923    38  186   22.69)
ramon: poll                 wall=3.000s usage=2.899s mem=24084KiB load=1.00 rootload=1.00
(smt.stats   41   5384 104027 207562  4824/4433/350    6496/952    39  191   22.79)
(smt.stats   42   5561 107733 219102  4899/4512/352    6684/954    39  191   22.99)
(smt.stats   43   5755 111374 229021  4947/4602/352    6869/958    40  204   22.99)
ramon: poll                 wall=4.000s usage=3.899s mem=24284KiB load=1.00 rootload=1.00
(smt.stats   44   5968 116640 241689  5053/4720/353    7154/977    41  209   22.99)
(smt.stats   45   6069 118943 245670  5110/4725/353    7281/978    41  209   23.08)
ramon: poll                 wall=5.000s usage=4.898s mem=24468KiB load=1.00 rootload=1.00
(smt.stats   46   6180 120994 257330  5257/4810/353    7452/985    41  209   23.18)
(smt.stats   47   6302 123814 266694  5321/4981/353    7584/985    41  209   23.43)
(smt.stats   48   6436 128456 284968  5376/5022/353    7730/987    41  209   23.43)
(smt.stats   49   6583 132806 294565  5388/5053/353    7877/987    41  209   23.43)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 4 := 8&4
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&207366389761
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 207366389761 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4362690944303103 := 103683194880 << 4
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1658931118080 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4362690944303103 := 103683194880 << 4
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&207366389761
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 207366389761 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 4362690944303103 := 103683194880 << 4
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&207366389761
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 207366389761 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 93991079014456 := 103683194880 << 4
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&207366389761
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 207366389761 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
shl: (shl[52] (bv2int %1) (+ 52 (* 4503599627370495 #105))) 93991079014456 := 103683194880 << 4
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&207366389761
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 207366389761 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118079
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118079
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118064
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 51 #788 #792) 64)) 1658931118064 := 207366389760 << 3
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 8 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 1 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 1 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 1 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 2 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 4 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 8 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 2 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 4 := 8&1658931118080
(smt.stats   50   6744 136050 308608  5506/5066/353    8057/994    41  209   23.63)
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 2 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 8 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 1 := 8&1658931118080
band: (band[52] (if (= #379 63) 1 (if #587 2 #781)) (shl[64] (* 2 #362) (mod #796 64))) 0 := 8&1658931118080
band: (band[52] (if (= #109 51) 1 (if #609 2 #709)) (shl[52] (bv2int %1) (+ 52 #712))) 4 := 8&1658931118080
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   51   6921 139942 327034  5588/5175/404    8250/1025    42  219   23.82)
ramon: poll                 wall=6.000s usage=5.897s mem=25400KiB load=1.00 rootload=0.99
(smt.stats   52   7115 144477 338416  5679/5309/420    8581/1030    43  222   24.01)
ramon: poll                 wall=7.000s usage=6.895s mem=25408KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.895s mem=25528KiB load=1.00 rootload=1.00
(smt.stats   53   7328 150256 351085  6005/5365/420    8923/1033    43  222   24.11)
(smt.stats   54   7562 155302 366470  6067/5679/421    9224/1088    44  251   24.20)
ramon: poll                 wall=9.000s usage=8.894s mem=25696KiB load=1.00 rootload=1.00
(smt.stats   55   7663 160459 377559  6187/5784/421    9360/1092    44  251   24.30)
(smt.stats   56   7774 164437 387199  6195/5805/424    9484/1121    45  256   24.39)
(smt.stats   57   7896 170745 403058  6207/5816/424    9623/1121    45  256   24.39)
(smt.stats   58   8030 173678 410703  6230/5837/427    9812/1133    46  258   24.49)
(smt.stats   59   8177 180927 425929  6286/5843/427    9999/1135    46  258   24.58)
(smt.stats   60   8338 187976 441116  6325/5906/427   10171/1148    47  262   24.58)
ramon: poll                 wall=10.000s usage=9.894s mem=26012KiB load=1.00 rootload=1.00
(smt.stats   61   8515 191879 455006  6377/5984/430   10443/1165    48  267   24.68)
(smt.stats   62   8709 201334 484461  6384/5991/430   10750/1165    48  267   24.68)
ramon: poll                 wall=11.003s usage=10.896s mem=26160KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.893s mem=26160KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.892s mem=26348KiB load=1.00 rootload=1.00
(smt.stats   63   8922 209502 502017  6529/6000/430   11020/1181    49  282   24.87)
ramon: poll                 wall=14.000s usage=13.891s mem=26392KiB load=1.00 rootload=1.00
(smt.stats   64   9156 215124 520991  6551/6152/430   11401/1181    49  282   24.87)
ramon: poll                 wall=15.000s usage=14.891s mem=26640KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.890s mem=26648KiB load=1.00 rootload=1.00
(smt.stats   65   9413 222364 545379  6911/6175/430   11799/1189    49  282   25.16)
(smt.stats   66   9514 225070 552076  6927/6526/430   11932/1189    49  282   25.25)
(smt.stats   67   9625 231128 574218  6933/6532/431   12157/1262    50  295   25.25)
ramon: poll                 wall=17.000s usage=16.889s mem=26984KiB load=1.00 rootload=1.00
(smt.stats   68   9747 237940 595819  6945/6544/431   12345/1262    50  295   25.25)
(smt.stats   69   9881 246015 613549  6989/6547/431   12585/1263    50  295   25.35)
ramon: poll                 wall=18.000s usage=17.889s mem=26988KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 141)
(smt.stats   70  10028 250447 626413  7050/6627/431   12650/1265    50  295   25.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10189 256621 646512  7118/6662/431   12935/1268    50  295   25.44)
ramon: poll                 wall=19.000s usage=18.888s mem=27024KiB load=1.00 rootload=1.00
(smt.stats   72  10366 264253 676765  7207/6755/432   13188/1363    51  296   25.54)
(smt.stats   73  10560 271276 703790  7231/6830/433   13544/1363    51  296   25.63)
ramon: poll                 wall=20.000s usage=19.888s mem=27168KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:53:55 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.000s
ramon: group.total          19.973s
ramon: group.utime          19.965s
ramon: group.stime          0.008s
ramon: group.mempeak        27424KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              0.99
