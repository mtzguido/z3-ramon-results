ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:21:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25723 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QU3k32cRr4d3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             26761
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&1
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&2
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&1
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&1
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536870912 := 1073741822 << 11
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536870912 := 536870914 << 11
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536870912 := 536870914 << 11
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536870912 := 536870914 << 11
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536870912 := 536870914 << 11
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[29] (bv2int %0) (+ 29 (* 536870911 #109))) 1 := 268566528 << 12
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536870912 := 537133056 << 11
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[29] (bv2int %0) (+ 29 (* 536870911 #109))) 1 := 268566528 << 12
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536870912 := 537133056 << 11
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[29] (bv2int %0) (+ 29 (* 536870911 #109))) 1 := 268566528 << 12
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536870912 := 1073741822 << 11
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&0
shl: (shl[29] (bv2int %0) (+ 29 (* 536870911 #109))) 535953407 := 535953408 << 12
(smt.stats    0    101   2325    425   724/640/131     105/19     6   20   18.78)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 2047 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 2046 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 2044 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 2040 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 2032 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 2016 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 1984 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 1920 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 128 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 256 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 512 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 1024 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 32 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 2 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&535293952
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 8 := 2047&535293952
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&535293952
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 16 := 2047&535293952
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&535293952
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 128 := 2047&535293952
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&535293952
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 256 := 2047&535293952
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&535293952
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 512 := 2047&535293952
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&535293952
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 1024 := 2047&535293952
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 1024 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 1024 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 1024 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&533196800
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 512 := 2047&533196800
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 64 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 64 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&4096
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 64 := 2047&4096
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 2047&8192
band: (band[29] (if (= #113 28) 0 (if #387 1 #463)) (shl[29] (bv2int %0) (+ 29 #466))) 64 := 2047&8192
(smt.stats    1    202   4088   2458  1128/952/190     256/36     9   37   19.37)
(smt.stats    2    313   5790   3741  1304/1168/236     396/53    11   47   19.47)
(smt.stats    3    415   8299   7298  1473/1358/246     638/93    14   60   19.57)
(smt.stats    4    526  10343  10884  1603/1434/251     840/154    16   72   19.57)
(smt.stats    5    648  13121  16677  1668/1541/253     975/172    17   73   19.66)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    749  15090  21995  1697/1548/253    1211/191    18   75   19.77)
(smt.stats    7    860  18206  33128  1760/1610/253    1384/191    18   75   19.86)
(smt.stats    8    982  20528  39501  1821/1669/262    1685/303    20   99   19.96)
(smt.stats    9   1116  20885  40647  1921/1669/262    1872/317    20   99   20.15)
(smt.stats   10   1217  21924  42793  2105/1929/264    2012/350    21  116   20.26)
(smt.stats   11   1328  23886  46962  2206/1989/264    2191/350    21  116   20.26)
(smt.stats   12   1450  25499  53542  2269/2111/274    2426/377    22  121   20.35)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 67108863&535035906
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 67108863&535035906
(smt.stats   13   1584  26816  57248  2281/2112/275    2728/486    23  140   20.77)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&35918
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&35918
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&35918
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&35918
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&35914
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&35914
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&35914
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&35914
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&4418
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&4930
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 67108863&4674
(smt.stats   14   1731  28084  61998  2706/2327/281    3182/495    23  140   20.96)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 65 := 67108863&962
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 64 := 67108863&962
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 66 := 67108863&962
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 66 := 67108863&962
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 66 := 67108863&962
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 118 := 67108863&962
ramon: poll                 wall=1.000s usage=0.942s mem=22296KiB load=0.94 rootload=0.93
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&882
(smt.stats   15   1832  29395  68988  2937/2759/343    3535/569    24  153   21.16)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 90 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 74 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 122 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 122 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 122 := 67108863&634
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 122 := 67108863&634
(smt.stats   16   1943  30898  79028  3071/2887/380    4033/622    26  168   21.45)
(smt.stats   17   2065  32848  85952  3115/2934/380    4333/622    26  168   21.45)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2199  36752 107621  3124/2961/380    5105/622    26  168   21.54)
(smt.stats   19   2346  40110 128373  3134/2967/380    5621/622    26  168   21.65)
(smt.stats   20   2507  46213 156873  3135/2976/383    5889/846    27  180   21.90)
(smt.stats   21   2608  48119 166820  3153/2980/384    6224/886    28  186   21.90)
(smt.stats   22   2719  51075 182820  3286/3065/385    6659/895    29  190   22.09)
(smt.stats   23   2841  54470 203673  3394/3160/386    7164/968    30  194   22.20)
(smt.stats   24   2975  57589 225844  3414/3214/389    7930/1138    31  200   22.29)
(smt.stats   25   3122  61302 240238  3573/3236/389    8415/1138    31  200   22.49)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 268435455&5120
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 268435455&5120
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 268435455&5120
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 1&5120
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 5120 := 1071906818 << 1
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 1&5120
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 5120 := 1071906820 << 1
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 1&5120
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 5120 := 1071906820 << 1
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 1&5120
shl: (shl[29] (bv2int %0) (+ 29 (* 536870911 #109))) 0 := 1280 << 2
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 1&5120
shl: (shl[29] (bv2int %0) (+ 29 (* 536870911 #109))) 0 := 1280 << 2
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 1&5120
shl: (shl[29] (bv2int %0) (+ 29 (* 536870911 #109))) 0 := 1280 << 2
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 1&5120
shl: (shl[29] (bv2int %0) (+ 29 (* 536870911 #109))) 0 := 1280 << 2
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 2 := 4095&4352
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 4095&4352
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 4095&4352
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 4095&4128
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 0 := 4095&4128
(smt.stats   26   3284  62838 251852  3874/3649/441    8884/1243    32  208   22.80)
ramon: poll                 wall=2.000s usage=1.942s mem=24076KiB load=1.00 rootload=1.00
(smt.stats   27   3461  66201 261030  3896/3666/441    9152/1244    32  208   22.80)
(smt.stats   28   3562  69009 270481  3957/3694/443    9684/1280    33  224   23.09)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   29   3673  71703 290224  4135/3777/444   10046/1281    33  224   23.19)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 8 := 16777215&2088
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 8 := 16777215&2088
(smt.stats   30   3795  74022 296142  4152/3920/444   10217/1360    34  234   23.19)
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 8 := 127&2056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536872968 := 1071906818 << 7
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 8 := 127&2056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536872968 := 1071906818 << 7
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 8 := 127&2056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536872968 := 1071906818 << 7
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 8 := 127&2056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 536872968 := 1071906818 << 7
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 8 := 127&2056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 2056 := 1071906818 << 7
band: (band[29] (if (= #270 31) 0 (if #364 1 #505)) (shl[32] (* 2 #253) (mod #520 32))) 8 := 127&2056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 28 #512 #516) 32)) 2056 := 1071906818 << 7
(smt.stats   31   3929  77813 323138  4231/3925/444   10988/1363    34  234   23.29)
(smt.stats   32   4076  80530 347468  4254/4009/449   12456/1509    35  235   23.64)
(smt.stats   33   4237  85758 387194  4374/4081/450   13354/1510    35  235   23.73)
(smt.stats   34   4414  90930 433591  4406/4133/450   13763/1653    36  240   23.83)
(smt.stats   35   4608  99439 483482  4417/4164/457   15463/1805    38  307   24.12)
ramon: poll                 wall=3.000s usage=2.942s mem=25504KiB load=1.00 rootload=0.99
(smt.stats   36   4709 104743 513327  4531/4236/457   16013/1805    38  307   24.32)
(smt.stats   37   4820 105935 531048  4707/4283/457   16282/1805    38  307   24.41)
(smt.stats   38   4942 107072 543816  4872/4589/458   17157/1859    39  312   24.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 1404)
(smt.stats   39   5076 110473 570842  4882/4599/458   16748/1859    39  312   24.91)
(smt.stats   40   5223 116946 622895  4886/4603/458   17858/1859    39  312   25.01)
(smt.stats   41   5384 123859 677250  4939/4644/458   19001/1859    39  312   25.30)
ramon: poll                 wall=4.000s usage=3.941s mem=26672KiB load=1.00 rootload=1.00
(smt.stats   42   5561 128538 709301  4948/4653/458   20725/1859    39  312   25.59)
(smt.stats   43   5755 137972 746113  4954/4659/458   22215/1859    39  312   25.78)
(smt.stats   44   5968 143988 782214  5018/4723/460   23010/2663    40  317   25.88)
(smt.stats   45   6069 147163 797189  5076/4779/464   23862/2664    40  317   25.97)
ramon: poll                 wall=5.000s usage=4.941s mem=27520KiB load=1.00 rootload=0.99
(smt.stats   46   6180 150567 815242  5158/4863/466   24522/2665    40  317   26.07)
(smt.stats   47   6302 154052 830153  5187/4878/469   25467/2860    41  414   26.22)
(smt.stats   48   6436 157631 850206  5240/4897/469   26059/2860    41  414   26.22)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   49   6583 159808 865245  5265/4968/471   26742/2860    41  414   26.32)
(smt.stats   50   6744 162272 887583  5381/4975/471   27279/2866    41  414   26.42)
(smt.stats   51   6921 164988 918011  5485/5101/471   27702/3041    42  440   26.58)
ramon: poll                 wall=6.000s usage=5.941s mem=28068KiB load=1.00 rootload=1.00
(smt.stats   52   7115 168647 956889  5500/5205/473   28961/3181    43  476   26.77)
(smt.stats   53   7328 177389 1031998  5503/5208/476   30082/3181    43  476   26.87)
(smt.stats   54   7562 182463 1089270  5517/5222/476   32052/3217    44  505   27.26)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7663 184471 1114137  5523/5228/476   32375/3217    44  505   27.26)
ramon: poll                 wall=7.000s usage=6.941s mem=28744KiB load=1.00 rootload=1.00
(smt.stats   56   7774 186410 1131457  5578/5238/476   32564/3221    44  505   27.26)
(smt.stats   57   7896 190025 1161488  5601/5306/478   32914/3342    45  534   27.36)
(smt.stats   58   8030 193520 1203755  5672/5311/480   33397/3343    45  534   27.45)
(smt.stats   59   8177 194966 1224039  5811/5384/480   33686/3344    45  534   27.45)
(smt.stats   60   8338 197002 1245404  5962/5521/480   34316/3344    45  534   27.55)
(smt.stats   61   8515 199428 1264147  6064/5700/480   34640/3391    46  552   27.64)
(smt.stats   62   8709 202986 1322942  6102/5780/480   35302/3393    46  552   27.64)
ramon: poll                 wall=8.000s usage=7.941s mem=29176KiB load=1.00 rootload=1.00
(smt.stats   63   8922 207191 1388386  6174/5879/482   36368/3468    47  567   27.84)
(smt.stats   64   9156 212011 1414794  6358/5886/482   37617/3469    47  567   28.03)
ramon: poll                 wall=9.000s usage=8.940s mem=30096KiB load=1.00 rootload=1.00
(smt.stats   65   9413 218370 1444507  6516/6114/482   38446/3474    47  567   28.55)
(smt.stats   66   9514 221462 1464846  6540/6245/482   39358/3474    47  567   28.65)
(smt.stats   67   9625 227094 1518780  6614/6250/482   39717/3856    48  568   28.84)
ramon: poll                 wall=10.000s usage=9.940s mem=30544KiB load=1.00 rootload=1.00
(smt.stats   68   9747 231544 1560961  6797/6336/482   40474/3861    48  568   28.94)
(smt.stats   69   9881 237492 1622317  6830/6535/482   40856/3861    48  568   29.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 21)
(smt.stats   70  10028 243682 1663643  6848/6553/483   42546/4044    49  569   29.29)
(smt.stats   71  10189 249447 1718505  6979/6553/483   43762/4047    49  569   29.48)
ramon: poll                 wall=11.000s usage=10.940s mem=30932KiB load=1.00 rootload=1.00
(smt.stats   72  10366 252735 1736367  7075/6710/483   44135/4047    49  569   29.48)
(smt.stats   73  10560 257891 1775605  7150/6855/485   45288/4234    50  586   29.58)
ramon: poll                 wall=12.000s usage=11.940s mem=31296KiB load=1.00 rootload=0.99
(smt.stats   74  10773 267177 1830671  7313/6856/485   46230/4241    50  586   29.87)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11007 272758 1898878  7493/7047/485   47861/4245    50  586   30.15)
ramon: poll                 wall=13.000s usage=12.939s mem=31804KiB load=1.00 rootload=1.00
(smt.stats   76  11264 279381 1945761  7817/7236/487   49163/4396    51  591   30.53)
ramon: poll                 wall=14.000s usage=13.939s mem=32388KiB load=1.00 rootload=1.00
(smt.stats   77  11546 284011 1987561  8132/7626/488   50824/4397    51  591   30.92)
(smt.stats   78  11647 286796 2007607  8221/7842/488   51739/4403    51  591   31.01)
(smt.stats   79  11758 288886 2025024  8255/7956/488   52134/4403    51  591   31.11)
ramon: poll                 wall=15.000s usage=14.939s mem=32904KiB load=1.00 rootload=1.00
(smt.stats   80  11880 290863 2043855  8306/7975/488   52967/4613    52  592   31.30)
(smt.stats   81  12014 292970 2060598  8389/8026/488   53809/4613    52  592   31.39)
(smt.stats   82  12161 297291 2086647  8420/8099/488   55212/4614    52  592   31.48)
(smt.stats   83  12322 301235 2127802  8529/8143/489   56457/4619    52  592   31.68)
ramon: poll                 wall=16.004s usage=15.942s mem=33340KiB load=1.00 rootload=1.00
(smt.stats   84  12499 305159 2158648  8635/8340/490   59209/4621    52  592   31.88)
(smt.stats   85  12693 310586 2210977  8806/8342/490   60193/5331    53  621   32.07)
ramon: poll                 wall=17.000s usage=16.938s mem=33836KiB load=1.00 rootload=0.99
(smt.stats   86  12906 318237 2296567  8913/8618/494   61980/5335    53  621   32.47)
(smt.stats   87  13140 322541 2342432  8939/8632/494   63070/5335    53  621   32.66)
ramon: poll                 wall=18.000s usage=17.938s mem=34240KiB load=1.00 rootload=1.00
(smt.stats   88  13397 329972 2390938  8985/8646/496   64390/5575    54  658   32.75)
(smt.stats   89  13679 335422 2432441  9096/8752/496   66159/5576    54  658   32.94)
ramon: poll                 wall=19.000s usage=18.938s mem=34632KiB load=1.00 rootload=1.00
(smt.stats   90  13989 345181 2557405  9221/8867/497   68340/5583    54  658   33.14)
(smt.stats   91  14090 347502 2567596  9275/8941/498   68804/6064    55  671   33.23)
(smt.stats   92  14201 351093 2606098  9393/8999/498   69597/6067    55  671   33.42)
ramon: poll                 wall=20.000s usage=19.938s mem=35052KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:21:28 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.040s
ramon: group.total          20.000s
ramon: group.utime          19.956s
ramon: group.stime          0.044s
ramon: group.mempeak        35564KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
