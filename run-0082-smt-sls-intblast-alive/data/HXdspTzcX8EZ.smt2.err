ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:08:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28720 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/HXdspTzcX8EZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             731698
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 1 := 18446744073709547520 >>l 30
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 1 := 18446744073709547520 >>l 30
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 1 := 18446744073709547520 >>l 30
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179869183&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 4503599627370494 := 4503599627370495 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179869183&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 17179869183 := 18446744073709547520 >>l 30
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179869183&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 4503599627370494 := 4503599627370495 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179869183&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 17179869183 := 18446744073709547520 >>l 30
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179869183&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 4503599627370494 := 4503599627370495 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 1 := 12288 >>l 30
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 2 := 262144 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 2&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 2 := 8192 >>l 30
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 2&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1 := 524288 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4095&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627374591 := 4503600701108224 >>l 30
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4095&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1 := 1073479680 >>l 18
(smt.stats    0    101   3752   1885  1255/1135/113      93/8     9   16   52.14)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   62.1118     10000        49          0            1        2)
(smt.stats    1    202   4522   2728  1845/1628/113     203/12     9   16   52.33)
(sat.ddfw       1      1   34.1331     20001        98          1            1        3)
(sat.ddfw       1      1   38.7597     40001       196          2            1        5)
(sat.ddfw       1      1   36.5408     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.841s mem=55152KiB load=0.84 rootload=0.82
(sat.ddfw       1      1   32.4939    110001       539          4            1       12)
(smt.stats    2    313   4791   2830  1978/1796/114     313/21    10   18   53.11)
(sat.ddfw       1      1   28.5545    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.842s mem=55536KiB load=1.00 rootload=1.00
(smt.stats    3    414   5188   3505  2330/2092/114     438/21    10   18   53.11)
(smt.stats    4    525   6145   5165  2784/2572/120     680/131    13   26   53.11)
(smt.stats    5    647  10252   9268  3238/2993/125     905/259    16   31   53.30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  11152  12064  3293/3027/131     993/261    16   31   53.30)
(smt.stats    7    859  13729  16398  3355/3069/131    1097/283    17   33   53.40)
(smt.stats    8    981  15038  18783  3461/3211/134    1212/337    19   35   53.40)
(sat.ddfw       1      1    25.349    220001      1078          6            1       23)
(smt.stats    9   1115  17375  24186  3522/3232/134    1355/344    19   35   53.49)
(smt.stats   10   1216  19572  29114  3629/3288/135    1460/365    20   36   53.49)
(smt.stats   11   1327  21891  32415  3668/3403/135    1613/369    20   36   53.59)
(smt.stats   12   1449  23598  38890  3732/3477/138    1748/424    22   40   53.59)
(smt.stats   13   1583  28157  42213  3797/3506/139    1921/431    22   40   53.71)
ramon: poll                 wall=3.000s usage=2.843s mem=56048KiB load=1.00 rootload=1.00
(smt.stats   14   1730  33416  55846  3886/3576/139    2080/483    23   44   53.71)
(smt.stats   15   1831  35630  64829  3950/3650/139    2170/485    23   44   53.81)
(sat.ddfw       1      1   22.6025    290001      1421          7            1       30)
(smt.stats   16   1942  37881  70510  4010/3718/139    2288/488    23   44   53.81)
(smt.stats   17   2064  40813  73984  4095/3789/139    2436/496    23   44   53.81)
(smt.stats   18   2198  44427  79594  4129/3850/139    2575/497    23   44   53.94)
(smt.stats   19   2345  48800  87680  4141/3892/139    2718/497    23   44   53.94)
(smt.stats   20   2506  50347  95021  4155/3901/139    2880/498    23   44   54.09)
(smt.stats   21   2607  51701  97006  4208/3913/139    3002/502    23   44   54.09)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   22   2718  52862 102441  4310/3998/139    3115/506    23   44   54.09)
(smt.stats   23   2840  55129 110340  4362/4072/139    3232/507    23   44   54.09)
(sat.ddfw       1      1   20.4134    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.836s mem=56304KiB load=0.99 rootload=0.99
(smt.stats   24   2974  56940 118331  4420/4126/139    3366/513    23   44   54.09)
(smt.stats   25   3121  60175 123103  4429/4176/139    3508/513    23   44   54.19)
(smt.stats   26   3282  61828 128905  4458/4195/139    3667/516    23   44   54.32)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4096&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627374592 := 4503599627374592 >>l 12
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4503582447501312&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503582447501312 := 4503582447501312 >>l 12
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4503582447501312&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503582447501312 := 4503582447501312 >>l 12
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1073741823&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 1073741823 := 1073741824 >>l 12
(smt.stats   27   3459  63208 133873  4481/4221/139    3841/517    23   44   54.32)
(smt.stats   28   3560  63970 138953  4524/4267/144    3929/665    24   45   54.32)
(smt.stats   29   3671  65898 143648  4540/4284/144    4031/665    24   45   54.32)
(smt.stats   30   3793  67894 147836  4554/4299/144    4156/677    25   45   54.62)
(smt.stats   31   3927  69841 153961  4556/4301/145    4301/681    26   46   54.62)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 2&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740994 := 4503599627370496 >>l 13
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 2&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740994 := 4503599627370496 >>l 13
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 2&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740994 := 4503599627370496 >>l 13
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 2&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740994 := 4503599627370496 >>l 13
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 549755813888&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1 := 1099511627776 >>l 1
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 549753978879&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 4194290 := 1099507957759 >>l 1
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 549753978879&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 549753978878 := 1099507957759 >>l 1
(smt.stats   32   4074  71672 158143  4583/4302/145    4452/685    26   46   54.62)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 549755813889&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 549755813889 := 4503599627378688 >>l 12
(smt.stats   33   4235  76868 164395  4614/4353/155    4633/688    27   48   54.62)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 50&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254741042 := 1073737728 >>l 62
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 50&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370546 := 1073737728 >>l 62
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 50&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370546 := 1073737728 >>l 62
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1125899906842625 := 1125899906842624 >>l 50
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 562949953421313 := 1125899906842624 >>l 50
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 562949953421313 := 1125899906842624 >>l 50
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179869183&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 17179869183 := 18446744073709547520 >>l 63
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4194289&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4194289 := 4503583521243136 >>l 63
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4194288&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4194288 := 4503582447501312 >>l 63
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 52&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 52 := 55834574848 >>l 63
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1099511627777 := 2 >>l 51
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1 := 1099511627777 >>l 51
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1 := 1099511627777 >>l 51
(smt.stats   34   4412  79774 170989  4657/4366/155    4807/707    28   48   54.71)
(smt.stats   35   4606  82008 184787  4736/4444/175    5001/709    28   48   54.71)
(smt.stats   36   4707  83349 191869  4762/4471/175    5108/718    29   52   54.71)
(sat.ddfw       1      1   18.5567    460001      2254          9            1       47)
(smt.stats   37   4818  84921 197231  4780/4502/175    5222/719    29   52   54.71)
ramon: poll                 wall=5.000s usage=4.838s mem=56888KiB load=1.00 rootload=1.00
(smt.stats   38   4940  87268 206602  4787/4520/177    5342/734    30   52   54.71)
(smt.delete-inactive-clauses  :num-deleted-clauses 189)
(smt.stats   39   5074  88648 218132  4798/4527/177    5282/734    30   52   54.71)
(smt.stats   40   5221  90374 229555  4806/4535/177    5425/734    30   52   54.71)
(smt.stats   41   5382  93204 239784  4809/4542/177    5588/734    30   52   55.17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   42   5559  96269 246557  4811/4544/178    5761/735    31   53   55.17)
(smt.stats   43   5753  99986 258358  4820/4547/178    5952/735    31   53   55.17)
(smt.stats   44   5966 103598 268486  4836/4563/178    6161/735    31   53   55.17)
(smt.stats   45   6067 105060 273752  4843/4576/178    6256/735    31   53   55.17)
(smt.stats   46   6178 107311 279099  4843/4576/178    6367/735    31   53   55.17)
(smt.stats   47   6300 108979 285399  4870/4590/178    6477/737    31   53   55.17)
(smt.stats   48   6434 110625 292572  4888/4613/178    6608/737    31   53   55.29)
(sat.ddfw       1      1   17.0068    560001      2745         10            1       57)
(smt.stats   49   6581 112744 300828  4889/4622/178    6755/737    31   53   55.29)
ramon: poll                 wall=6.000s usage=5.837s mem=57460KiB load=1.00 rootload=1.00
(smt.stats   50   6742 116501 312495  4890/4623/178    6915/737    31   53   55.29)
(smt.stats   51   6919 119311 323646  4895/4628/178    7095/737    31   53   55.29)
(smt.stats   52   7113 121142 333226  4899/4632/178    7287/737    31   53   55.38)
(smt.stats   53   7326 124270 344896  4909/4634/178    7504/738    31   53   55.38)
(smt.stats   54   7560 127623 357878  4911/4644/178    7736/738    31   53   55.38)
(smt.stats   55   7661 129534 364515  4911/4644/178    7837/738    31   53   55.38)
(smt.stats   56   7772 131535 371783  4911/4644/178    7948/738    31   53   55.38)
(smt.stats   57   7894 133562 379378  4913/4646/178    8068/738    31   53   55.38)
(smt.stats   58   8028 134662 384230  4916/4649/178    8201/738    31   53   55.48)
(smt.stats   59   8175 136163 390108  4918/4651/178    8348/738    31   53   55.48)
ramon: poll                 wall=7.000s usage=6.837s mem=57716KiB load=1.00 rootload=1.00
(smt.stats   60   8336 138683 400904  4922/4651/178    8510/738    31   53   55.75)
(sat.ddfw       1      1   15.6896    670001      3284         11            1       68)
(smt.stats   61   8513 140587 413867  4927/4660/178    8683/738    31   53   55.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   62   8707 143316 426496  4929/4662/178    8877/738    31   53   55.75)
(smt.stats   63   8920 146339 438111  4929/4662/178    9090/738    31   53   55.75)
(smt.stats   64   9154 150551 449726  4930/4662/178    9324/738    31   53   56.19)
(smt.stats   65   9411 154663 463699  4934/4667/178    9583/738    31   53   56.19)
(smt.stats   66   9512 156166 469199  4935/4668/178    9683/738    31   53   56.19)
(smt.stats   67   9623 158686 474496  4935/4668/178    9794/738    31   53   56.19)
(smt.stats   68   9745 161585 480277  4936/4669/178    9915/738    31   53   56.19)
(smt.stats   69   9879 163185 486669  4939/4672/178   10046/738    31   53   56.19)
(smt.delete-inactive-clauses  :num-deleted-clauses 547)
(smt.stats   70  10026 165246 495969  4949/4684/187    9630/761    32   59   56.19)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370496 := 4503599627370496 >>l 46
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370496 := 4503599627370496 >>l 46
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370496 := 4503599627370496 >>l 46
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370496 := 4503599627370496 >>l 46
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370496 := 4503599627370496 >>l 46
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 0&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1099511627777 := 0 >>l 34
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 64&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 63 := 1099511627776 >>l 34
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 64&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 63 := 1099511627776 >>l 34
ramon: poll                 wall=8.005s usage=7.821s mem=58408KiB load=0.98 rootload=0.97
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 36&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254741028 := 9007199254745088 >>l 47
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 35&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254741027 := 9223372036854771712 >>l 47
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 35&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254741027 := 9223372036854771712 >>l 47
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 65536&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 3 := 2251799813685248 >>l 35
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 65536&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 65537 := 2251799813685248 >>l 35
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 65536&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 65537 := 2251799813685248 >>l 35
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 65538&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 65538 := 9223372036854775808 >>l 49
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 65535&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 65535 := 9223372036854775808 >>l 49
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 16384&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 16383 := 2251799813685248 >>l 37
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 16385&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 16385 := 9223372036854775808 >>l 49
(smt.stats   71  10187 166964 501702  5011/4716/198    9912/769    32   59   56.39)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 32767&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 65536 := 4503599627370495 >>l 37
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 32766&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 32766 := 18446744073709547520 >>l 52
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4095&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 4096 := 4503599627370495 >>l 40
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 32766&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 32766 := 18446744073709547520 >>l 52
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4095&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 4 := 4503599627370495 >>l 40
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4096&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4096 := 18446744073709547520 >>l 52
(smt.stats   72  10364 170858 507893  5093/4802/219   10113/770    32   59   56.39)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1125899906842625&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9219994337134247937 := 9223372036854775808 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1125899906842625&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 10133099161583617 := 9223372036854775808 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1125899906842625&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 10133099161583617 := 9223372036854775808 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 2251799813685248&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 11258999068426240 := 18446744073709547520 >>l 18
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 35184372088832&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1125899906842624 := 2251799813685248 >>l 6
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179807744&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 549753847808 := 1099507695616 >>l 6
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179807744&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 549753847808 := 1099507695616 >>l 6
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 6&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740998 := 18446744073709547520 >>l 17
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740996 := 18446744073709547520 >>l 17
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740993 := 18446744073709547520 >>l 17
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 5&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740997 := 18446744073709547520 >>l 16
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740993 := 18446744073709547520 >>l 16
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740993 := 18446744073709547520 >>l 16
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179869181&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007216434610173 := 18446744073709547520 >>l 15
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 17179869181&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007216434610173 := 18446744073709543424 >>l 14
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 3&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740995 := 18446744073709547520 >>l 14
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740993 := 18446744073709547520 >>l 14
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 1&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 9007199254740993 := 18446744073709547520 >>l 14
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370500 := 18446744073709547520 >>l 15
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 4&0
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #100 #324) 64)) 4503599627370500 := 18446744073709547520 >>l 15
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 281474976710655&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 2250700310446079 := 4503599627370495 >>l 4
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 281474976710655&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 2250700310446079 := 4503599627370494 >>l 4
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 140737488355328&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 1124800403603456 := 2251799813685248 >>l 4
(sat.ddfw       1      1   14.5085    790001      3872         12            1       80)
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 34359615488&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 64 := 1099507695616 >>l 5
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 140737488355327&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 2250700310446079 := 4503599627370495 >>l 5
band: (band[52] (lshr[64] (* 4096 #99) (mod #325 64)) (if (= #625 63) 41538374868278621028243970633760768 (if #627 20769187434139310514121985316880384 #751))) 0 := 140737488355327&0
lshr: (lshr[52] (bv2int %0) (mod (bv2int %1) 52)) 2250700310446079 := 4503599627370495 >>l 5
(smt.stats   73  10558 174585 513164  5184/4893/265    4697/828    34 5725   56.54)
(smt.stats   74  10771 178062 521695  5340/5005/265    4902/832    34 5725   56.63)
(smt.stats   75  11005 185073 538200  5371/5057/265    5135/834    34 5725   56.63)
(smt.stats   76  11262 191868 555116  5401/5094/265    5437/838    34 5725   56.73)
ramon: poll                 wall=9.000s usage=8.813s mem=59468KiB load=1.00 rootload=1.00
(smt.stats   77  11544 196469 573714  5520/5161/267    5743/877    35 5725   56.92)
(smt.stats   78  11645 198316 585449  5551/5218/267    5861/886    36 5725   56.92)
(smt.stats   79  11756 200439 592446  5575/5255/267    5972/886    36 5725   56.92)
(smt.stats   80  11878 202066 601648  5591/5287/268    6102/907    37 5726   56.92)
(smt.stats   81  12012 204376 609063  5603/5299/270    6237/907    37 5726   57.02)
(sat.ddfw       1      1   13.5009    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas        :deletions      )
(smt.stats   82  12159 208504 620103  5610/5306/270    6393/914    38 5731   57.41)
(smt.stats   83  12321 210649 630700  5624/5320/270    6578/914    38 5731   57.41)
ramon: poll                 wall=10.000s usage=9.816s mem=59360KiB load=1.00 rootload=1.01
(smt.stats   84  12498 213533 643675  5634/5330/271    6761/925    39 5733   57.41)
(smt.stats   85  12692 217016 659051  5655/5343/271    6990/926    39 5733   57.51)
(smt.stats   86  12905 219696 672079  5705/5389/271    7179/927    39 5733   57.61)
(smt.stats   87  13139 223514 688667  5717/5405/271    7420/928    39 5733   57.61)
(smt.stats   88  13396 227192 714094  5729/5421/271    7680/928    39 5733   57.61)
ramon: poll                 wall=11.000s usage=10.817s mem=60008KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.6434   1060001      5196         14            1      108)
(smt.stats   89  13988 234766 752519  5751/5446/271    8276/928    39 5733   57.70)
(smt.stats   90  14089 235403 758047  5754/5449/271    8375/928    39 5733   57.70)
(smt.stats   91  14200 236593 766581  5754/5449/271    8486/928    39 5733   57.70)
(smt.stats   92  14322 237724 777034  5764/5459/271    8599/928    39 5733   57.70)
(smt.stats   93  14456 239258 787031  5765/5460/271    8732/928    39 5733   57.70)
(smt.stats   94  14603 241946 796558  5770/5465/272    8873/946    40 5737   58.54)
(smt.stats   95  14764 245699 809848  5773/5468/272    9042/946    40 5737   58.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 125)
ramon: poll                 wall=12.000s usage=11.815s mem=60752KiB load=1.00 rootload=1.00
(smt.stats   96  15135 253043 843262  5778/5473/272    9299/946    40 5737   58.54)
(smt.stats   97  15348 258800 860856  5779/5474/272    9523/946    40 5737   58.64)
(smt.stats   98  15582 263591 878773  5780/5475/272    9757/946    40 5737   58.73)
(smt.stats   99  15839 267914 896797  5783/5478/272   10013/946    40 5737   58.73)
(sat.ddfw       1      1   11.8868   1210001      5931         15            1      123)
(smt.stats  100  16121 274831 914168  5790/5485/272   10292/946    40 5737   58.83)
(smt.stats  101  16431 280489 939885  5793/5488/272   10599/946    40 5737   58.83)
ramon: poll                 wall=13.005s usage=12.821s mem=61396KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas         :deletions      )
(smt.stats  102  16771 287997 968800  5794/5489/272   10978/946    40 5737   58.83)
(smt.stats  103  16872 289566 977944  5794/5489/272   11081/946    40 5737   58.83)
(smt.stats  104  16983 290483 987091  5795/5490/272   11194/946    40 5737   58.93)
(smt.stats  105  17105 291286 995014  5796/5491/272   11320/946    40 5737   58.93)
(smt.stats  106  17239 293008 1008187  5796/5491/272   11454/946    40 5737   58.93)
(smt.stats  107  17386 295417 1018646  5797/5492/272   11602/946    40 5737   58.93)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas         :deletions      )
(smt.stats  108  17547 298862 1033240  5809/5497/272   11762/946    40 5737   59.03)
(smt.stats  109  17726 303031 1054135  5815/5510/272   11951/946    40 5737   59.03)
(smt.stats  110  17920 306078 1072881  5820/5511/272   12147/946    40 5737   59.03)
ramon: poll                 wall=14.000s usage=13.814s mem=61756KiB load=1.00 rootload=1.01
(smt.stats  111  18133 308207 1085091  5822/5517/272   12361/946    40 5737   59.14)
(smt.stats  112  18367 312125 1104138  5824/5519/272   12596/946    40 5737   59.76)
(sat.ddfw       1      1   11.2084   1370001      6715         16            1      139)
(smt.stats  113  18624 314719 1117400  5828/5523/272   12858/946    40 5737   59.76)
(smt.stats  114  18906 318701 1135549  5832/5527/272   13166/946    40 5737   59.86)
(smt.stats  115  19216 324961 1157103  5832/5527/272   13491/946    40 5737   59.86)
ramon: poll                 wall=15.000s usage=14.814s mem=62104KiB load=1.00 rootload=1.00
(smt.stats  116  19556 329282 1181838  5842/5537/273    8001/996    41 11562   59.95)
(smt.stats  117  19929 338118 1213866  5851/5538/273    8380/998    41 11562   59.95)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  118  20030 340965 1220243  5853/5548/273    8483/998    41 11562   59.95)
(smt.stats  119  20141 343065 1232378  5858/5549/273    8599/998    41 11562   59.95)
(smt.stats  120  20263 345874 1243721  5859/5554/273    8720/998    41 11562   59.95)
(smt.stats  121  20397 348670 1256159  5861/5556/273    8868/998    41 11562   59.95)
(smt.stats  122  20544 351415 1268253  5861/5556/273    9016/998    41 11562   59.95)
(sat.ddfw       1      1   10.7222   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=15.988s mem=62360KiB load=1.17 rootload=1.17
(smt.stats  123  20705 354937 1280303  5863/5558/273    9175/998    41 11562   59.95)
(smt.stats  124  20882 358658 1297937  5867/5562/273    9350/998    41 11562   60.05)
(smt.stats  125  21076 362303 1313563  5879/5574/273    9537/998    41 11562   60.05)
(smt.stats  126  21289 365474 1336455  5895/5590/273    9734/998    41 11562   60.05)
(smt.stats  127  21523 370746 1350861  5896/5591/273    9968/998    41 11562   60.05)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify     :memory)
(smt.stats    :conflicts   :propagations           :lemmas         :deletions       )
(smt.stats  128  21780 379672 1367920  5899/5594/273   10223/998    41 11562   60.05)
(smt.stats  129  22062 386074 1388716  5899/5594/273   10505/998    41 11562   60.05)
(smt.stats  130  22372 389098 1417858  5900/5595/273   10821/998    41 11562   60.05)
(sat.ddfw       1      1   10.6377   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=17.597s mem=62532KiB load=1.61 rootload=1.61
(smt.stats  131  22712 393546 1440667  5901/5596/273   11177/998    41 11562   60.05)
(smt.stats  132  23085 397997 1473171  5901/5596/273   11555/998    41 11562   60.05)
(smt.stats  133  23495 403915 1509743  5903/5598/273   11994/998    41 11562   60.05)
(smt.stats  134  23596 405619 1516784  5903/5598/273   12098/998    41 11562   60.05)
(smt.stats  135  23707 407147 1524269  5905/5600/273   12209/998    41 11562   60.05)
ramon: poll                 wall=18.000s usage=18.768s mem=62780KiB load=1.17 rootload=1.17
(smt.stats  136  23829 410431 1535056  5906/5601/273   12335/998    41 11562   60.05)
(smt.stats  137  23963 412794 1544841  5907/5602/273   12475/998    41 11562   60.05)
(smt.stats  138  24110 413947 1554799  5909/5603/273   12621/999    41 11562   60.05)
(smt.stats  139  24271 415041 1566523  5949/5609/273   12781/1001    41 11562   60.05)
(smt.stats  140  24448 416883 1585076  5952/5644/273   12959/1001    41 11562   60.05)
(sat.ddfw       1      1   10.2559   1910001      9362         19            1      193)
(smt.stats  141  24642 420166 1601398  5955/5650/273   13152/1001    41 11562   60.14)
(smt.stats  142  24855 424516 1617967  5955/5650/273   13368/1001    41 11562   60.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats  143  25089 427796 1636667  5961/5656/273   13598/1001    41 11562   60.14)
ramon: poll                 wall=19.000s usage=19.769s mem=62612KiB load=1.00 rootload=1.00
(smt.stats  144  25346 432748 1652081  5961/5656/273   13860/1001    41 11562   60.14)
(smt.stats  145  25628 437186 1678634  5962/5657/273   14142/1001    41 11562   60.14)
(smt.stats  146  25938 441036 1708699  5965/5660/273   14449/1001    41 11562   60.14)
(smt.stats  147  26278 444791 1726455  5966/5661/273   14794/1001    41 11562   60.14)
ramon: poll                 wall=20.000s usage=20.772s mem=62988KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify     :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions       )
(smt.stats  148  26651 449965 1750183  5966/5661/273   15176/1001    41 11562   60.14)
ramon: end                  Fri Nov  1 22:08:51 2024
ramon: root.execname        z3
ramon: root.utime           20.800s
ramon: root.stime           0.020s
ramon: group.total          20.826s
ramon: group.utime          20.802s
ramon: group.stime          0.024s
ramon: group.mempeak        63024KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.059s
ramon: loadavg              1.04
