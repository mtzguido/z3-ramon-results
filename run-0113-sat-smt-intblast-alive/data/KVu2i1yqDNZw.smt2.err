ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:39:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40842 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1324
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KVu2i1yqDNZw.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3798639
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  69       0    18.51   0.00)
(sat.stats    112    523    0   224/224   112/35  69       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 426 :time 0.00)
(sat.stats    112    523    0   224/224   112/35  69       0    18.83   0.01)
(sat.stats    112    523    0   224/224   112/35  69       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 376418.83 :time 0.00)
(sat.stats    112    523    0   224/224    58/35  69       0    18.83   0.01)
(sat.stats    175   2122    1   224/224   121/83  69       0    18.93   0.03)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    178   2163    2   224/224   124/84  69       0    18.93   0.03)
(sat.stats    181   2204    3   224/224   127/84  69       0    18.93   0.03)
(sat.stats    184   2247    4   224/224   130/84  69       0    18.93   0.03)
(sat.stats    187   2296    5   224/224   133/84  69       0    18.93   0.03)
(sat.stats    190   2358    6   224/224   136/84  69       0    18.93   0.03)
(sat.stats    193   2420    7   224/224   139/84  69       0    18.93   0.03)
(sat.stats    196   2491    8   224/224   142/84  69       0    18.93   0.03)
(sat.stats    199   2537    9   224/224   145/86  69       0    18.93   0.03)
(sat.stats    202   2546   10   224/224   148/89  69       0    18.93   0.03)
(sat.stats    205   2554   11   224/224   151/92  69       0    18.93   0.03)
(sat.stats    208   2561   12   224/224   154/95  69       0    18.93   0.03)
(sat.stats    211   2569   13   224/224   157/98  69       0    18.93   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1714 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2320 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    314   4052   20   238/238   258/136  80       0    19.63   0.10)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 2872 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 3990 :time 0.00)
(sat.stats    572   9177   41  1712/1712   527/169  84       0    20.10   0.53)
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 70368744177663&0
lshr: (lshr[64] (* 262144 (bv2int %0)) (mod (+ 18 #59 #278) 64)) 0 := 18446744073709289472 >>l 18
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4676 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4803 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4928 :time 0.00)
(sat.stats    843  27033   69  2081/2080   815/232  93       0    20.38   0.68)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 7660 :time 0.00)
ramon: poll                 wall=1.005s usage=0.872s mem=21980KiB load=0.87 rootload=0.86
(sat.stats   1541  54763  111  3006/3005  1517/361  94       0    20.79   1.05)
(sat.stats   1619  55569  118  3007/3006  1595/387  94       0    20.79   1.06)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 13638 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14813 :time 0.00)
 (sat-cleaner :elim-literals 64 :elim-clauses 542 :cost 18479 :time 0.00)
(sat.stats   2706  71352  160  3618/3617  2079/480  98       0    21.20   1.67)
ramon: poll                 wall=2.000s usage=1.867s mem=22476KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats   3601  99813  293  4444/4443  2992/719 100       0    21.65   2.24)
 (sat-cleaner :elim-literals 19 :elim-clauses 2 :cost 26382 :time 0.00)
ramon: poll                 wall=3.000s usage=2.867s mem=23280KiB load=1.00 rootload=1.00
lshr: (lshr[46] (bv2int %0) (mod (bv2int %1) 46)) 0 := 0 >>l 1
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 0&35184372088832
lshr: (lshr[64] (* 262144 (bv2int %0)) (mod (+ 18 #59 #278) 64)) 70368744176430 := 0 >>l 19
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34208 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 1&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 1 := 1&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 1 := 2&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 2 := 4&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 4 := 6&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 10 := 14&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 8 := 14&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 16 := 18&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 32 := 34&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 64 := 66&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 128 := 130&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 256 := 258&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 512 := 514&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 1024 := 1026&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 2048 := 2050&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 4096 := 4098&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 8192 := 8194&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 16384 := 16386&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 32768 := 32770&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 1 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 60842 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 45480 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 65524 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 65520 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 65504 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 16640 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 40448 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 37888 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 36864 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 40960 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 32768 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 18624 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 18560 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 2048 := 65535&35184372088832
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1237940039285345090527035392 (if #471 618970019642672545263517696 #559))) 0 := 65535&35184372088832
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 649037107316835006822238331600896 (if #584 324518553658417503411119165800448 #708))) 16384 := 65535&35184372088832
(sat.stats   7048 146427  548 28658/28656  5124/1114 107       0    26.56   3.53)
ramon: poll                 wall=4.000s usage=3.866s mem=28920KiB load=1.00 rootload=1.00
(sat.stats   8092 173456  869 32078/32076  5763/1257 107       0    28.92   4.09)
 (sat-cleaner :elim-literals 11 :elim-clauses 1 :cost 52091 :time 0.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 56021 :time 0.00)
ramon: poll                 wall=5.000s usage=4.866s mem=31488KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.866s mem=44840KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.866s mem=60104KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.866s mem=64644KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.865s mem=68552KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.865s mem=71492KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.865s mem=90592KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.864s mem=92888KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.864s mem=96144KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.864s mem=97536KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.864s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.863s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.863s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.863s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.863s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.005s usage=19.863s mem=105MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:39:50 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.030s
ramon: group.total          19.956s
ramon: group.utime          19.924s
ramon: group.stime          0.032s
ramon: group.mempeak        107MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.098s
ramon: loadavg              0.99
