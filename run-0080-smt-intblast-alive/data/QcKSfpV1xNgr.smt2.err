ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:21:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25674 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QcKSfpV1xNgr.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             27690
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 14846327538069&125
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 14846327538069&125
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 14846327538069&9007199254740991
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 14846327538069&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 18437736874454810624 := 124 << 43
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 20 := 14846327538069&20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 20 := 18 << 43
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 20 := 14846327538069&20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 20 := 18 << 43
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 20 := 14846327538069&20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 20 := 18 << 43
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 20 := 14846327538069&20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 20 := 18 << 43
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 20 := 14846327538069&20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 20 := 18 << 43
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 20 := 14846327538069&20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 20 := 18 << 43
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 14846327538069 := 14846327538069&158329674399744
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 14846327538068 := 14846327538069&158329674399744
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 14846327538064 := 14846327538069&158329674399744
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 8 := 14846327538069&158329674399744
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 14846327538069&158329674399744
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #116))) 9007199254740991 := 9 << 44
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 14846327538069&668503069687808
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #116))) 9007199254740991 := 1048614 << 44
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 14846327538069&668503069687808
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #116))) 9007199254740990 := 1048614 << 44
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 14846327538069&668503069687808
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #116))) 9007199254740991 := 1048614 << 44
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 1 := 14846327538069&668503069687808
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 14846327538069&668503069687808
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 4 := 14846327538069&668503069687808
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 4 := 14846327538069&668503069687808
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 32 := 14846327538069&668503069687808
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 64 := 14846327538069&668503069687808
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 64 := 14846327538069&668503069687808
(smt.stats    0    101   2263    606  1358/1237/157     137/15     9   28   19.39)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 65 := 14846327538069&668503069687808
(smt.stats    1    204   3792   2186  2352/2139/160     266/30    11   30   19.68)
(smt.stats    2    315   7188   5929  2492/2269/162     432/62    12   34   19.78)
(smt.stats    3    416   9852   9811  2511/2287/164     531/85    14   35   19.78)
(smt.stats    4    527  11717  11839  2617/2299/164     640/94    14   35   19.89)
(smt.stats    5    649  16709  15816  2647/2388/164     768/95    15   37   19.89)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 18014398509481986 := 102 << 1
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 18014398509481986 := 102 << 1
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 3 := 3&19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 18014398509482003 := 102 << 1
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 3&18
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 18014398509481984 := 102 << 1
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 18014398509481984 := 102 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    750  18587  18947  2680/2444/181     869/117    18   57   19.99)
(smt.stats    7    861  22461  22195  2691/2453/181     982/117    18   57   20.12)
(smt.stats    8    983  24667  25121  2731/2485/181    1129/117    18   57   20.12)
(smt.stats    9   1117  30297  28724  2737/2491/185    1271/137    19   58   20.27)
(smt.stats   10   1218  34224  32758  2741/2495/186    1369/147    21   62   20.27)
(smt.stats   11   1329  37745  38132  2753/2507/187    1480/148    21   62   20.27)
(smt.stats   12   1451  41577  42745  2803/2509/188    1615/150    22   62   20.27)
(smt.stats   13   1585  45862  47758  2803/2557/192    1744/155    23   68   20.27)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 1&2097208
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #116))) 9007199252641219 := 1048604 << 1
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 1&2097208
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #116))) 9007199252641219 := 1048604 << 1
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 1&2097208
band: (band[53] (if (= #120 52) 1 (if #568 3 #716)) (shl[53] (bv2int %0) (+ 53 #719))) 1 := 1&2097208
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 1&3072
band: (band[53] (if (= #120 52) 1 (if #568 3 #716)) (shl[53] (bv2int %0) (+ 53 #719))) 1 := 1&3072
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 1&3072
band: (band[53] (if (= #120 52) 1 (if #568 3 #716)) (shl[53] (bv2int %0) (+ 53 #719))) 1 := 1&3072
(smt.stats   14   1732  48792  53549  2838/2564/192    1887/167    24   82   20.37)
(smt.stats   15   1833  51305  56384  2867/2612/209    1993/176    25   85   20.46)
(smt.stats   16   1944  55266  62221  2883/2627/213    2109/180    26   92   20.46)
(smt.stats   17   2066  58625  69161  2884/2628/213    2231/180    26   92   20.46)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&16
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 14 := 9007199258944512 << 6
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&16
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&16
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 14 := 9007199254765568 << 6
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&18
(smt.stats   18   2200  62320  75541  2954/2645/214    2387/188    28   93   20.66)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 14 := 9007199256838186 << 6
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 14 := 9007199254746170 << 6
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 14 := 9007199254743096 << 6
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 12 := 108&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 14 := 9007199254743096 << 6
(smt.stats   19   2347  63960  78228  3109/2849/225    2571/193    28   93   20.85)
(smt.stats   20   2508  66305  82624  3115/2853/225    2736/193    28   93   20.85)
(smt.stats   21   2609  67833  87931  3124/2864/226    2868/221    29   99   20.85)
ramon: poll                 wall=1.000s usage=0.956s mem=22044KiB load=0.96 rootload=0.94
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 74 := 108&268631808
(smt.stats   22   2720  69489  90645  3187/2874/226    3055/221    29   99   21.23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   23   2842  70738  94463  3390/3004/226    3222/270    30  102   21.23)
(smt.stats   24   2976  72155  98618  3480/3161/226    3394/272    30  102   21.23)
(smt.stats   25   3123  75878 103765  3520/3237/228    3611/273    30  102   21.45)
ramon: poll                 wall=2.000s usage=1.955s mem=22768KiB load=1.00 rootload=0.99
(smt.stats   26   3284  79515 110713  3649/3272/228    3811/357    31  108   21.54)
ramon: poll                 wall=3.000s usage=2.955s mem=22892KiB load=1.00 rootload=1.00
(smt.stats   27   3461  81120 113267  3891/3446/228    4096/358    31  108   21.64)
(smt.stats   28   3562  83957 120447  3923/3659/228    4285/358    31  108   21.64)
(smt.stats   29   3673  86305 125560  4001/3737/230    4465/396    32  112   21.64)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 216&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1107885508333142016 := 9722056337910784 << 7
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 216&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1107885508333142016 := 9722056337910784 << 7
(smt.stats   30   3795  88089 129855  4062/3739/230    4625/397    32  112   21.83)
(smt.stats   31   3929  90732 135420  4078/3811/235    4761/397    32  112   21.83)
ramon: poll                 wall=4.000s usage=3.954s mem=23232KiB load=1.00 rootload=1.00
(smt.stats   32   4076  93155 142410  4086/3820/235    4942/419    33  116   21.83)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 1 := 13&12582401
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1107885508345724417 := 9007199265352854 << 3
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 1 := 13&12582401
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1107885508345724417 := 9007199265352854 << 3
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 1 := 13&12582401
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1107885508345724417 := 9007199265352854 << 3
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 1 := 13&12582409
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 1 := 13&12582409
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 1 := 13&12582417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1107885508345724433 := 9007199265352854 << 3
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 1 := 13&12582417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1107885508345724433 := 9007199265352854 << 3
(smt.stats   33   4237  95577 150599  4233/3822/235    5166/422    33  116   21.93)
(smt.stats   34   4414 100270 165294  4246/3972/250    5435/463    34  119   21.93)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 5 := 6&6862628003613399
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 6&6862628003613396
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 6&6862628003613398
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 6&6862628003613395
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 51898624277318355 := 9007199254747238 << 2
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 6&6862628003613395
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 60905823532059347 := 9007199254748192 << 2
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 6&6862628003613395
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 60905823532059347 := 9007199254748192 << 2
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 4 := 6&6862628003613398
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 4 := 6&6862628003613462
(smt.stats   35   4608 103573 177133  4306/3990/250    5790/496    35  119   22.14)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 6 := 6&6862628003613518
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1114748136336755534 := 100 << 2
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 6 := 6&6862628003613518
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #889 #891) 64)) 1114748136336755534 := 100 << 2
(smt.stats   36   4709 105714 183277  4353/4081/266    5927/558    36  123   22.14)
(smt.stats   37   4820 109302 192793  4378/4091/266    6127/560    36  123   22.23)
(smt.stats   38   4942 111912 204274  4423/4149/268    6322/600    37  124   22.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 61)
(smt.stats   39   5076 115454 214514  4426/4152/269    6461/600    37  124   22.23)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 4 := 237541240609113&2956358108902436
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 4 := 237541240609113&2956358108902436
(smt.stats   40   5223 118544 223944  4523/4152/269    6640/602    37  124   22.33)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108901376
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108901360
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900704
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900704
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900704
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900736
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900736
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900864
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900704
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900736
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900864
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108901376
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108901376
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108901376
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108901248
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900864
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108900736
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108905472
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358108905472
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358110404608
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358110355456
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358110142464
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358110486528
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358110486528
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358110486528
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358110486528
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358129221632
ramon: poll                 wall=5.000s usage=4.953s mem=24324KiB load=1.00 rootload=1.00
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358162915456
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358162915840
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358162916032
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358162916016
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 237541240609113&2956358162916000
(smt.stats   41   5384 121106 233452  4902/4555/378    7021/667    38  137   23.01)
(smt.stats   42   5561 124190 241543  5018/4646/378    7406/671    38  137   23.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   43   5755 129127 257140  5012/4734/380    7678/786    39  159   23.20)
(smt.stats   44   5968 136509 275754  5032/4748/381    7948/786    39  159   23.20)
(smt.stats   45   6069 138916 283441  5104/4816/381    8306/804    40  169   23.29)
(smt.stats   46   6180 144619 293786  5111/4823/381    8442/804    40  169   23.29)
ramon: poll                 wall=6.000s usage=5.953s mem=24704KiB load=1.00 rootload=1.00
(smt.stats   47   6302 149600 303219  5270/4827/382    8840/811    40  169   23.68)
ramon: poll                 wall=7.000s usage=6.952s mem=25252KiB load=1.00 rootload=0.99
(smt.stats   48   6436 152452 311009  5397/5109/383    9203/1129    41  182   23.78)
(smt.stats   49   6583 157419 322996  5412/5124/392    9527/1129    41  182   23.88)
(smt.stats   50   6744 162584 335478  5420/5132/392    9853/1129    41  182   23.97)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6921 168698 354504  5438/5151/393   10048/1329    42  235   23.97)
(smt.stats   52   7115 175681 372957  5454/5156/393   10559/1329    42  235   24.16)
ramon: poll                 wall=8.000s usage=7.952s mem=25684KiB load=1.00 rootload=1.00
(smt.stats   53   7328 180843 381620  5842/5170/393   11151/1371    43  245   24.57)
(smt.stats   54   7562 187311 400740  5990/5703/396   11769/1371    43  245   24.57)
(smt.stats   55   7663 191083 418015  5995/5708/398   11881/1464    44  265   24.57)
(smt.stats   56   7774 193183 424997  6008/5721/398   12152/1464    44  265   24.57)
(smt.stats   57   7896 198037 439317  6025/5730/398   12421/1465    44  265   24.68)
ramon: poll                 wall=9.004s usage=8.955s mem=26148KiB load=1.00 rootload=1.01
(smt.stats   58   8030 201693 456938  6166/5740/399   12619/1684    45  270   24.77)
(smt.stats   59   8177 206889 488802  6333/5881/399   12990/1686    45  270   24.77)
(smt.stats   60   8338 213602 525849  6395/6060/399   13339/1687    45  270   24.88)
(smt.stats   61   8515 218452 555231  6461/6123/399   13838/1687    45  270   24.98)
(smt.stats   62   8709 224644 572032  6487/6198/399   14109/1687    45  270   24.98)
(smt.stats   63   8922 229455 588564  6497/6210/400   14417/1877    46  283   25.07)
ramon: poll                 wall=10.000s usage=9.950s mem=26516KiB load=1.00 rootload=0.99
(smt.stats   64   9156 235894 611265  6573/6268/400   14860/1877    46  283   25.17)
(smt.stats   65   9413 244099 636442  6693/6275/400   15191/1877    46  283   25.26)
(smt.stats   66   9514 247008 651456  6708/6403/400   15336/1877    46  283   25.26)
(smt.stats   67   9625 250375 662321  6729/6408/401   15627/1976    47  288   25.36)
ramon: poll                 wall=11.000s usage=10.950s mem=26936KiB load=1.00 rootload=1.00
(smt.stats   68   9747 252968 673350  6988/6470/401   15953/1976    47  288   25.45)
(smt.stats   69   9881 254965 681755  7443/7078/402   16436/1976    47  288   25.65)
(smt.delete-inactive-clauses  :num-deleted-clauses 13)
(smt.stats   70  10028 259796 691151  7459/7142/402   16753/1976    47  288   25.65)
ramon: poll                 wall=12.000s usage=11.949s mem=27288KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10189 263762 711306  7709/7154/402   17313/1981    47  288   25.74)
(smt.stats   72  10366 271255 745965  7763/7433/402   17648/2106    48  304   25.74)
(smt.stats   73  10560 276478 771006  7775/7466/402   18003/2106    48  304   25.84)
(smt.stats   74  10773 287120 818828  7785/7480/403   18492/2212    49  306   25.93)
(smt.stats   75  11007 294464 844993  7790/7483/403   19304/2212    49  306   26.03)
ramon: poll                 wall=13.000s usage=12.949s mem=27488KiB load=1.00 rootload=1.00
(smt.stats   76  11264 305199 873352  7799/7494/403   19793/2212    49  306   26.03)
(smt.stats   77  11546 315580 911208  7812/7504/403   20626/2213    49  306   26.12)
(smt.stats   78  11648 321376 947254  7826/7516/403   20772/2213    49  306   26.12)
(smt.stats   79  11759 324737 970782  7872/7526/403   21061/2214    49  306   26.22)
(smt.stats   80  11881 327518 980932  7928/7580/403   21204/2214    49  306   26.22)
(smt.stats   81  12015 329464 997187  7958/7626/403   21410/2215    49  306   26.22)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   82  12162 334906 1024665  7963/7658/403   21620/2215    49  306   26.22)
(smt.stats   83  12323 340140 1047065  7964/7660/406   21791/3036    50  320   26.32)
ramon: poll                 wall=14.000s usage=13.949s mem=27728KiB load=1.00 rootload=1.00
(smt.stats   84  12500 345968 1069432  7970/7666/406   22028/3036    50  320   26.32)
(smt.stats   85  12694 355789 1110370  7987/7683/406   22382/3036    50  320   26.32)
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 2 := 221227&125952
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 221227&125952
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 221227&125952
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 221227&125952
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 221227&125952
band: (band[53] (if (or #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741) 0 (if #742 1 #846)) (shl[64] (* 2 #114) (mod #892 64))) 0 := 221227&125952
(smt.stats   86  12907 361733 1136574  8066/7760/422   22735/3078    51  323   26.42)
(smt.stats   87  13141 369063 1151275  8087/7769/422   23098/3078    51  323   26.51)
ramon: poll                 wall=15.000s usage=14.948s mem=28044KiB load=1.00 rootload=1.00
(smt.stats   88  13398 382550 1198770  8155/7810/422   23525/3078    51  323   26.51)
(smt.stats   89  13680 389344 1254331  8388/7893/423   23988/3217    52  325   26.70)
ramon: poll                 wall=16.000s usage=15.948s mem=28372KiB load=1.00 rootload=1.00
(smt.stats   90  13990 394256 1289626  8907/8089/423   24860/3225    52  325   27.07)
(smt.stats   91  14091 397290 1307643  9042/8729/423   25746/3228    52  325   27.07)
(smt.stats   92  14202 399957 1316080  9059/8746/424   26050/3334    53  330   27.17)
(smt.stats   93  14324 404014 1332136  9163/8767/424   26432/3336    53  330   27.27)
(smt.stats   94  14458 407874 1358812  9263/8957/425   27167/3337    53  330   27.36)
ramon: poll                 wall=17.000s usage=16.947s mem=29144KiB load=1.00 rootload=1.00
(smt.stats   95  14605 410200 1370483  9555/8960/425   27954/3341    53  330   27.59)
(smt.stats   96  14766 414091 1395003  9794/9252/425   28596/3631    54  337   27.78)
ramon: poll                 wall=18.004s usage=17.949s mem=29316KiB load=1.00 rootload=1.00
(smt.stats   97  14943 418089 1411200  9958/9502/425   29407/3634    54  337   27.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 1362)
(smt.stats   98  15137 425462 1440066 10038/9688/426   28820/3634    54  337   27.88)
ramon: poll                 wall=19.000s usage=18.945s mem=29696KiB load=1.00 rootload=1.00
(smt.stats   99  15350 430493 1470641 10456/9741/426   29701/3812    55  341   28.21)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  100  15584 438739 1507825 10709/10364/427   31161/3812    55  341   28.31)
ramon: poll                 wall=20.000s usage=19.944s mem=30052KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:21:43 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.994s
ramon: group.utime          19.970s
ramon: group.stime          0.024s
ramon: group.mempeak        30308KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.050s
ramon: loadavg              1.00
