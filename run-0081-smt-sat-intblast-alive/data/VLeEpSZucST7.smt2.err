ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:37:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28843 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/VLeEpSZucST7.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             441299
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   226/226     0/0  64       0    18.50   0.00)
(sat.stats    101    472    0   226/226   101/28  64       0    18.84   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 277 :time 0.00)
(sat.stats    101    472    0   226/226   101/28  64       0    18.84   0.00)
(sat.stats    101    472    0   226/226   101/28  64       0    18.84   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 354418.84 :time 0.00)
(sat.stats    101    472    0   228/228    37/27  64       0    18.84   0.01)
(sat.stats    168   1624    1   228/228   104/80  64       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    171   1667    2   228/228   107/80  64       0    18.94   0.01)
(sat.stats    174   1701    3   228/228   110/80  64       0    18.94   0.01)
(sat.stats    177   1743    4   228/228   113/80  64       0    18.94   0.01)
(sat.stats    180   1778    5   228/228   116/80  64       0    18.94   0.01)
(sat.stats    183   1807    6   228/228   119/80  64       0    18.94   0.01)
(sat.stats    186   1864    7   228/228   122/80  64       0    18.94   0.01)
(sat.stats    189   1907    8   228/228   125/83  64       0    18.94   0.01)
(sat.stats    193   1949    9   228/228   129/87  64       0    18.94   0.01)
(sat.stats    196   2000   10   228/228   132/90  64       0    18.94   0.01)
(sat.stats    199   2055   11   228/228   135/93  64       0    18.94   0.01)
(sat.stats    202   2116   12   228/228   138/96  64       0    18.94   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    224   2599   13   228/228   160/116  64       0    18.94   0.01)
(sat.stats    314   5883   30   228/228   250/160  64       0    19.04   0.02)
(sat.stats    486   9271   55   236/236   422/230  64       0    19.62   0.07)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3712 :time 0.00)
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 0&140737488355319
lshr: (lshr[64] (mod (div #77 2) 70368744177664) (mod (+ 46 #698 #700) 64)) 14855545583346647039 := 0 >>l 46
 (sat-cleaner :elim-literals 0 :elim-clauses 75 :cost 4322 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3340 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 4169 :time 0.00)
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #80))) 0 := 140737488355061 >>l 30
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
lshr: (lshr[64] (mod (div #77 2) 70368744177664) (mod (+ 46 #698 #700) 64)) 757730637305085951 := 70368744177530 >>l 29
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 104190 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 131069 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 131068 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 21704 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 40048 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 35296 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 65344 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 6912 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 128 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 64512 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 512 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 24576 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 2048 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 4096 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 49152 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 65536 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 32768 := 131071&140737487175680
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 3083 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 47776 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 74626 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 64 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 67716 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 152 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 144 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 3968 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 102656 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 61952 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 81920 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 13312 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 4096 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 10240 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 8192 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 65536 := 140737487175680&131071
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 9903520314282408880495394816 (if #466 4951760157141204440247697408 #556))) 0 := 131071&140737487175680
band: (band[47] (if (= #567 63) 1298074214633623896784292389322752 (if #569 649037107316811948392146194661376 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 32768 := 140737487175680&131071
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 5191 :time 0.00)
(sat.stats    814  24084   86  3633/3603   600/226 303       0    21.89   0.32)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 5548 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5934 :time 0.00)
 (sat-cleaner :elim-literals 32 :elim-clauses 1 :cost 7724 :time 0.00)
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 8449 :time 0.00)
(sat.stats   1070  38779  112  4362/4331   853/299 311       0    22.76   0.51)
ramon: poll                 wall=1.000s usage=0.999s mem=35260KiB load=1.00 rootload=0.98
(sat.stats   1602  42854  182 78766/78735  1442/374 311       0    38.46   1.34)
ramon: poll                 wall=2.000s usage=1.998s mem=53628KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.998s mem=59644KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.004s usage=4.002s mem=65212KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.997s mem=69444KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.997s mem=89504KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts          :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin           :units         :memory       )
(sat.stats   2401  44239  291 201268/201237  2241/374 311       0    88.61   6.06)
ramon: poll                 wall=7.000s usage=6.997s mem=92584KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.996s mem=96068KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=99456KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.996s mem=99MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.995s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.995s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.995s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.994s mem=108MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.993s mem=109MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.993s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.992s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.992s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.991s mem=113MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:37:59 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.004s
ramon: group.utime          19.952s
ramon: group.stime          0.052s
ramon: group.mempeak        114MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
