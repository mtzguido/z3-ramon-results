ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:58:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27531 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/jCKH8OCQzPTQ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             901590
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   68.4932     10000        49          0            1        2)
(sat.ddfw       1      1   35.3392     20001        98          1            1        3)
(sat.ddfw       1      1   35.5872     40001       196          2            1        5)
(sat.ddfw       1      1   38.5109     70001       343          3            1        8)
(smt.stats    0    101   1911    273  1335/1193/110     107/14     3   18   52.26)
ramon: poll                 wall=1.004s usage=1.026s mem=54524KiB load=1.02 rootload=1.02
(smt.stats    1    202   4565   1118  2148/1944/114     216/21     5   28   52.45)
(sat.ddfw       1      1   30.8404    110001       539          4            1       12)
(smt.stats    2    313   6754   2143  2350/2141/117     321/32     6   35   52.55)
(smt.stats    3    414  10297   3198  2396/2181/120     423/34     7   39   52.64)
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 36028797018963967&36028795676786688
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 36028797018963967&36028795676786688
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 36028797018963967&36028795676786688
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 36028797018963967&36028795676786688
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 36028796750528511&36028795676786688
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 1&36028795676786688
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 17654110539292344321 := 13824 >>l 36
(smt.stats    4    525  12221   4357  2694/2439/126     530/75     8   42   52.83)
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 1&36028795676786688
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 17654110539292344321 := 13824 >>l 36
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 0&36028795676786688
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 17654110539292344320 := 13824 >>l 36
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 0&36028795676786688
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 17654110539292344320 := 13824 >>l 36
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 0&36028795676786688
lshr: (lshr[55] (bv2int %0) (mod (bv2int %0) 55)) 26 := 27 >>l 27
(smt.stats    5    647  14371   5965  2773/2462/137     651/84     9   46   52.93)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  16214   7904  2794/2544/143     748/87    11   50   53.03)
(sat.ddfw       1      1   28.3924    160000       784          5            1       17)
(smt.stats    7    859  18886  10642  2826/2569/144     853/91    12   52   53.15)
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 512 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 512 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 512 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 512 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 512 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 1536 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 26111 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 26111 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 26110 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 26108 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 1536 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 0 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 1536 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 16896 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 15360 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 1536 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 9728 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 7164 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 7160 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 7152 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 7136 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 7104 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 7040 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 6144 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 2048 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 2560 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 3072 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 3584 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 3072 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 3584 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 3584 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 5120 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 5632 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 4092 := 26112&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 2048 := 4096&36028797018963888
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 4096 := 4097&36028797018963888
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 4097 := 26112 >>l 60
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 4096 := 4097&36028797018963888
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 4097 := 26112 >>l 60
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 4096 := 4097&36028797018963888
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 4097 := 26112 >>l 60
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 4096 := 4097&36028797018963888
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 4097 := 26112 >>l 60
band: (band[55] (lshr[64] (* 512 #111) (mod #358 64)) (if (= #656 63) 664613997892457844218183161592414208 (if #658 332306998946228922109091580796207104 #782))) 4096 := 4097&36028797018963888
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 9 #111 #357) 64)) 4097 := 26112 >>l 60
(smt.stats    8    981  20863  13755  2929/2672/230     976/122    15   73   53.55)
ramon: poll                 wall=2.000s usage=2.156s mem=55696KiB load=1.13 rootload=1.12
(sat.ddfw       1      1   23.1129    220001      1078          6            1       23)
ramon: poll                 wall=3.004s usage=3.392s mem=55864KiB load=1.23 rootload=1.24
(smt.stats    9   1115  21941  15027  3174/2679/230    1159/153    16   80   53.74)
(sat.ddfw       1      1   20.8147    290001      1421          7            1       30)
(smt.stats   10   1216  23290  17497  3373/2969/230    1292/158    16   80   53.83)
ramon: poll                 wall=4.004s usage=4.383s mem=56332KiB load=0.99 rootload=0.99
(smt.stats   11   1327  24380  20127  3577/3141/230    1419/168    16   80   53.93)
(sat.ddfw       1      1   17.8015    370001      1813          8            1       38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28449  24365  3642/3388/234    1574/219    17   88   54.02)
ramon: poll                 wall=5.004s usage=5.353s mem=56388KiB load=0.97 rootload=0.96
(smt.stats   13   1583  30255  28045  3758/3398/235    1715/235    18   94   54.12)
(sat.ddfw       1      1   15.5548    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=6.328s mem=56560KiB load=0.98 rootload=0.98
(smt.stats   14   1730  31367  29479  3991/3572/235    1857/239    19   97   54.21)
ramon: poll                 wall=7.000s usage=7.300s mem=56612KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   13.7874    560001      2745         10            1       57)
(smt.stats   15   1831  31900  30516  4243/3892/235    1977/240    19   97   54.31)
(smt.stats   16   1942  33499  34056  4444/4188/239    2142/252    20  101   54.41)
ramon: poll                 wall=8.000s usage=8.261s mem=56736KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   12.3721    670001      3284         11            1       68)
ramon: poll                 wall=9.004s usage=9.249s mem=56628KiB load=0.98 rootload=0.99
ramon: poll                 wall=10.000s usage=10.247s mem=57008KiB load=1.00 rootload=1.00
(smt.stats   17   2064  36888  38355  4577/4219/244    2362/282    21  115   54.50)
(sat.ddfw       1      1   11.3314    790001      3872         12            1       80)
ramon: poll                 wall=11.000s usage=11.240s mem=57020KiB load=0.99 rootload=0.99
(smt.stats   18   2198  37371  39216  4780/4364/244    2506/284    21  115   54.60)
ramon: poll                 wall=12.000s usage=12.236s mem=57152KiB load=1.00 rootload=1.00
(smt.stats   19   2345  40464  44364  5019/4662/244    2705/288    21  115   54.85)
(sat.ddfw       1      1   10.4636    920001      4509         13            1       93)
(smt.stats   20   2506  44040  51567  5158/4889/245    2978/405    22  120   54.84)
ramon: poll                 wall=13.000s usage=13.235s mem=57428KiB load=1.00 rootload=0.99
(smt.stats   21   2607  45433  55899  5286/4926/245    3125/413    22  120   54.94)
(smt.stats   22   2718  47129  58965  5465/5095/245    3398/419    22  120   55.04)
ramon: poll                 wall=14.000s usage=14.229s mem=57504KiB load=0.99 rootload=1.00
(sat.ddfw       1      1    9.7148   1060001      5196         14            1      108)
(smt.stats   23   2840  48720  62281  5646/5265/245    3638/421    22  120   55.13)
ramon: poll                 wall=15.004s usage=15.219s mem=57504KiB load=0.99 rootload=0.98
(smt.stats   24   2974  52362  70076  5729/5431/245    3929/423    22  120   55.23)
(smt.stats   25   3121  57512  79868  5743/5480/245    4275/423    22  120   55.23)
(smt.stats   26   3282  66583  96673  5773/5512/245    4517/424    22  120   55.42)
ramon: poll                 wall=16.000s usage=16.182s mem=57760KiB load=0.97 rootload=0.97
(smt.stats   27   3459  74639 108756  5835/5524/245    4808/427    22  120   55.42)
(smt.stats   28   3560  75295 111151  5900/5641/245    4934/428    22  120   55.42)
(sat.ddfw       1      1   9.02581   1210001      5931         15            1      123)
(smt.stats   29   3671  79200 123609  5994/5648/249    5093/807    23  120   55.51)
ramon: poll                 wall=17.000s usage=17.183s mem=57760KiB load=1.00 rootload=1.00
(smt.stats   30   3793  82857 132023  6246/5772/249    5304/814    23  120   55.61)
ramon: poll                 wall=18.000s usage=18.182s mem=58016KiB load=1.00 rootload=1.00
(smt.stats   31   3927  85546 141776  6433/5997/249    5471/818    23  120   55.61)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  90462 152721  6468/6212/250    5667/864    24  128   55.71)
(sat.ddfw       1      1   8.48131   1370001      6715         16            1      139)
ramon: poll                 wall=19.000s usage=19.180s mem=58216KiB load=1.00 rootload=1.00
(smt.stats   33   4235  96582 166202  6543/6220/250    5878/872    24  128   55.89)
(smt.stats   34   4412 102950 189409  6617/6356/250    6268/872    24  128   56.27)
ramon: poll                 wall=20.000s usage=20.179s mem=58532KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:59:12 2024
ramon: root.execname        z3
ramon: root.utime           20.210s
ramon: root.stime           0.020s
ramon: group.total          20.233s
ramon: group.utime          20.213s
ramon: group.stime          0.020s
ramon: group.mempeak        58788KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.054s
ramon: loadavg              1.01
