ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:57:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40600 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1252
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qcnJr02a3AgU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3089452
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   3055   1310  1201/1077/110     103/62     3   17   19.26)
(smt.stats    1    202   5052   2263  1988/1681/112     223/80     5   20   19.36)
(smt.stats    2    313   6915   2781  2049/1838/112     345/80     5   20   19.46)
(smt.stats    3    414   8950   3449  2181/1914/112     456/86     5   20   19.56)
(smt.stats    4    525  11523   5613  2708/2482/125     579/114     9   41   19.65)
(smt.stats    5    647  13712   8547  2738/2508/129     688/115    11   43   19.75)
ramon: poll                 wall=1.004s usage=0.990s mem=20860KiB load=0.99 rootload=0.98
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  15891  10291  2761/2509/129     788/115    12   43   19.75)
(smt.stats    7    859  17266  11868  2795/2559/130     907/122    13   45   19.84)
(smt.stats    8    981  19101  15339  2840/2601/132    1041/127    14   48   19.84)
(smt.stats    9   1115  22115  17116  2854/2615/132    1178/127    14   48   19.94)
(smt.stats   10   1216  25739  19168  2860/2628/132    1276/131    15   52   19.94)
(smt.stats   11   1327  28060  22240  2866/2634/133    1384/132    16   54   20.05)
(smt.stats   12   1449  31952  25757  2867/2635/133    1505/132    16   54   20.16)
(smt.stats   13   1583  33108  26642  2924/2643/133    1645/133    16   54   20.25)
ramon: poll                 wall=2.000s usage=1.985s mem=21396KiB load=1.00 rootload=1.00
(smt.stats   14   1730  34481  28588  3201/2863/133    1800/135    16   54   20.25)
(smt.stats   15   1831  35820  30465  3287/2980/133    1924/136    16   54   20.25)
(smt.stats   16   1942  37366  32180  3363/3103/133    2075/137    16   54   20.35)
(smt.stats   17   2064  39488  34277  3422/3144/133    2226/140    16   54   20.35)
(smt.stats   18   2198  45382  40241  3458/3213/133    2415/141    16   54   20.35)
(smt.stats   19   2345  50906  45786  3510/3227/134    2572/219    17   55   20.46)
(smt.stats   20   2506  52607  50517  3589/3295/134    2791/221    17   55   20.55)
(smt.stats   21   2607  53649  52742  3604/3370/135    2923/275    18   58   20.55)
(smt.stats   22   2718  56155  56334  3615/3377/135    3034/275    18   58   20.66)
(smt.stats   23   2840  57805  58931  3625/3389/135    3200/275    18   58   20.66)
(smt.stats   24   2974  58892  62405  3626/3390/135    3338/275    18   58   20.66)
(smt.stats   25   3121  60349  66646  3628/3392/135    3490/275    18   58   20.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   26   3282  63250  73567  3637/3395/135    3658/275    18   58   20.75)
ramon: poll                 wall=3.000s usage=2.974s mem=21944KiB load=0.99 rootload=0.99
(smt.stats   27   3459  65707  81390  3708/3410/135    3840/277    18   58   20.95)
(smt.stats   28   3560  66632  83522  3950/3689/135    3956/277    18   58   20.95)
(smt.stats   29   3671  68661  87342  4001/3730/135    4145/277    18   58   20.95)
ramon: poll                 wall=4.000s usage=3.970s mem=22200KiB load=1.00 rootload=0.99
(smt.stats   30   3793  69950  89684  4076/3772/135    4276/277    18   58   21.04)
(smt.stats   31   3927  72229  95163  4140/3903/137    4507/411    19   62   21.04)
(smt.stats   32   4074  74530  99091  4175/3904/137    4690/411    19   62   21.30)
(smt.stats   33   4235  76663 101904  4326/3949/137    4891/411    19   62   21.30)
ramon: poll                 wall=5.000s usage=4.963s mem=22584KiB load=0.99 rootload=1.00
(smt.stats   34   4412  79960 106576  4482/4247/142    5105/448    20   74   21.49)
(smt.stats   35   4606  82173 111561  4528/4254/142    5306/448    20   74   21.49)
(smt.stats   36   4707  83394 113200  4634/4304/142    5414/448    20   74   21.59)
(smt.stats   37   4818  84776 117773  4748/4432/142    5528/449    20   74   21.59)
ramon: poll                 wall=6.000s usage=5.959s mem=22868KiB load=1.00 rootload=0.99
(smt.stats   38   4940  86241 120823  4905/4529/142    5652/449    20   74   21.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 159)
(smt.stats   39   5074  88311 124713  4913/4678/142    5630/449    20   74   21.68)
(smt.stats   40   5221  91360 133172  4918/4683/142    5779/449    20   74   21.78)
(smt.stats   41   5382  94218 141636  4922/4687/142    5940/449    20   74   21.78)
(smt.stats   42   5559  96858 147447  4933/4698/142    6117/449    20   74   21.88)
(smt.stats   43   5753 100660 155729  4935/4700/142    6309/449    20   74   22.33)
(smt.stats   44   5966 104923 163691  4936/4701/142    6524/449    20   74   22.33)
(smt.stats   45   6067 105888 165910  4948/4705/142    6634/450    20   74   22.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   46   6178 106746 168452  5060/4714/142    6747/451    20   74   22.57)
(smt.stats   47   6300 108297 174597  5239/4922/142    6888/451    20   74   22.57)
ramon: poll                 wall=7.000s usage=6.955s mem=23876KiB load=1.00 rootload=1.00
(smt.stats   48   6434 109981 178409  5371/5030/142    7035/451    20   74   22.66)
(smt.stats   49   6581 111510 182990  5580/5205/142    7197/451    20   74   22.66)
ramon: poll                 wall=8.000s usage=7.954s mem=24116KiB load=1.00 rootload=1.00
(smt.stats   50   6742 112901 185898  5863/5411/142    7359/451    20   74   22.85)
(smt.stats   51   6919 115517 191745  6163/5756/142    7543/451    20   74   22.95)
(smt.stats   52   7113 118139 197497  6293/5964/142    7780/451    20   74   23.05)
ramon: poll                 wall=9.000s usage=8.954s mem=24484KiB load=1.00 rootload=0.99
(smt.stats   53   7326 120985 207101  6399/6103/142    8034/451    20   74   23.14)
(smt.stats   54   7560 123962 214652  6599/6230/142    8320/454    20   74   23.24)
(smt.stats   55   7661 125249 218852  6684/6405/142    8437/454    20   74   23.24)
(smt.stats   56   7772 127028 236053  6734/6489/142    8560/454    20   74   23.33)
(smt.stats   57   7894 128891 244196  6772/6506/142    8692/454    20   74   23.33)
ramon: poll                 wall=10.000s usage=9.949s mem=24768KiB load=0.99 rootload=1.00
(smt.stats   58   8028 130692 249551  6897/6554/142    8833/454    20   74   23.43)
(smt.stats   59   8175 132616 263104  6982/6673/142    8983/454    20   74   23.43)
(smt.stats   60   8336 135290 267199  7099/6801/142    9143/454    20   74   23.52)
(smt.stats   61   8513 137720 277959  7172/6881/142    9331/454    20   74   23.52)
(smt.stats   62   8707 140004 287886  7251/6941/142    9537/454    20   74   23.62)
ramon: poll                 wall=11.000s usage=10.945s mem=25152KiB load=1.00 rootload=1.00
(smt.stats   63   8920 142404 294440  7484/7060/142    9761/454    20   74   23.71)
(smt.stats   64   9154 144759 304496  7579/7252/142   10001/454    20   74   24.55)
(smt.stats   65   9411 147677 318782  7702/7351/142   10262/454    20   74   24.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions    )
(smt.stats   66   9512 148605 322191  7749/7486/142   10367/455    20   74   24.74)
ramon: poll                 wall=12.000s usage=11.944s mem=26248KiB load=1.00 rootload=1.00
(smt.stats   67   9623 149718 329344  7920/7588/142   10493/455    20   74   24.74)
(smt.stats   68   9745 150716 333579  8047/7725/142   10615/456    20   74   24.84)
(smt.stats   69   9879 152230 340729  8250/7980/142   10791/456    20   74   24.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 17)
(smt.stats   70  10026 154207 350681  8253/8018/142   10940/456    20   74   24.93)
ramon: poll                 wall=13.000s usage=12.940s mem=26556KiB load=1.00 rootload=0.99
(smt.stats   71  10187 155837 354053  8379/8019/142   11207/457    20   74   25.03)
(smt.stats   72  10364 157368 357430  8738/8294/142   11417/458    20   74   25.12)
(smt.stats   73  10558 160203 363413  8775/8512/142   12180/458    20   74   25.12)
(smt.stats   74  10771 163759 375607  8814/8548/142   12854/458    20   74   25.23)
(smt.stats   75  11005 166835 385854  8828/8593/142   13169/458    20   74   25.34)
(smt.stats   76  11262 170087 393496  8830/8595/142   13599/458    20   74   25.43)
(smt.stats   77  11544 176018 406287  8836/8601/142   13896/458    20   74   25.43)
ramon: poll                 wall=14.000s usage=13.939s mem=27064KiB load=1.00 rootload=1.00
(smt.stats   78  11645 178028 410871  8842/8602/142   14039/458    20   74   25.53)
(smt.stats   79  11756 180856 416567  8855/8614/142   14156/458    20   74   25.53)
(smt.stats   80  11878 183318 420745  8865/8622/142   14280/458    20   74   25.53)
(smt.stats   81  12012 185448 425270  8879/8634/142   14414/459    20   74   25.53)
(smt.stats   82  12159 187732 429982  8885/8646/142   14571/459    20   74   25.53)
(smt.stats   83  12320 190593 435352  8894/8653/142   14742/459    20   74   25.63)
(smt.stats   84  12497 193715 441196  8914/8679/142   14919/459    20   74   25.63)
(smt.stats   85  12691 197199 447608  8928/8680/142   15117/459    20   74   25.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   86  12904 200121 455447  8940/8698/142   15345/459    20   74   25.63)
(smt.stats   87  13138 202962 465352  8955/8710/142   15601/459    20   74   25.72)
(smt.stats   88  13395 207709 474509  8959/8723/142   15860/459    20   74   25.72)
ramon: poll                 wall=15.000s usage=14.939s mem=27368KiB load=1.00 rootload=1.00
(smt.stats   89  13677 211323 488175  8970/8727/142   16178/459    20   74   25.72)
(smt.stats   90  13987 215401 503922  8972/8737/142   16583/459    20   74   25.82)
(smt.stats   91  14088 216717 509467  8972/8737/142   16688/459    20   74   25.82)
(smt.stats   92  14199 218210 514461  8972/8737/142   16817/459    20   74   25.82)
(smt.stats   93  14321 219727 521919  8974/8739/142   16965/459    20   74   25.92)
(smt.stats   94  14455 221036 527517  8974/8739/142   17171/459    20   74   25.92)
(smt.stats   95  14602 222852 534154  8980/8745/142   17356/459    20   74   26.02)
(smt.stats   96  14763 227183 547074  8985/8750/142   17513/459    20   74   26.02)
(smt.stats   97  14940 230820 556074  8993/8750/142   17701/459    20   74   26.02)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
(smt.stats   98  15134 234585 565146  9003/8758/142   17896/459    20   74   26.11)
(smt.stats   99  15347 239049 572799  9004/8769/142   18111/459    20   74   26.11)
(smt.stats  100  15581 242012 579970  9013/8777/142   18353/459    20   74   26.21)
ramon: poll                 wall=16.000s usage=15.938s mem=27896KiB load=1.00 rootload=1.00
(smt.stats  101  15838 248016 588700  9017/8779/142   18610/459    20   74   26.21)
(smt.stats  102  16120 253215 597408  9030/8785/142   18935/459    20   74   26.21)
(smt.stats  103  16431 257229 613038  9073/8805/142   19280/460    20   74   26.30)
(smt.stats  104  16771 260717 623769  9079/8840/142   19677/460    20   74   26.40)
(smt.stats  105  16872 261618 628568  9096/8850/142   19779/460    20   74   26.40)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats  106  16983 262595 631135  9130/8869/142   19997/460    20   74   26.40)
ramon: poll                 wall=17.000s usage=16.938s mem=28056KiB load=1.00 rootload=1.00
(smt.stats  107  17105 264181 635447  9147/8905/142   20136/460    20   74   26.40)
(smt.stats  108  17239 265791 640504  9150/8913/142   20270/460    20   74   26.40)
(smt.stats  109  17386 267768 647482  9152/8917/142   20418/460    20   74   26.49)
(smt.stats  110  17547 269717 653334  9153/8918/142   20578/460    20   74   26.49)
(smt.stats  111  17724 271886 661961  9167/8918/142   20770/460    20   74   26.49)
(smt.stats  112  17918 273012 668467  9185/8937/142   20971/463    20   74   26.49)
(smt.stats  113  18131 274471 675627  9192/8953/142   21190/464    20   74   26.69)
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 25 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 26 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 28 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 32 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 25 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 26 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 28 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 32 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 28 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 32 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 30 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 28 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 32 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 36 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 32 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 32 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 36 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 36 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 32 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 36 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 1540 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 80 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 68 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 68 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 52 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 68 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 68 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 68 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 54 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 52 := 134693&556434789556140
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 70 := 134693&556434789556164
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 68 := 134693&556434789556164
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 132 := 134693&556434789557952
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 388 := 134693&556434789556740
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 260 := 134693&556434789556740
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 260 := 134693&556434789556740
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 196 := 134693&556434789558788
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 132 := 134693&556434789558788
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 36 := 134693&556434789558788
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 36 := 134693&556434789558820
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 548 := 134693&556434789558820
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 2596 := 134693&556434789558820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #845 #849) 64)) 9479507750497610276 := 354 << 18
(smt.stats  114  18365 277100 681762  9454/8956/142   21566/491    20   74   27.11)
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 512 := 134693&556434789556144
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 512 := 134693&556434789556163
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 512 := 134693&556434789556163
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 512 := 134693&556434789556168
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 512 := 134693&556434789556168
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 514 := 134693&556434789556163
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 515 := 134693&556434789556163
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 515 := 134693&556434789556163
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 513 := 134693&556434789555163
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 513 := 134693&137731
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 513 := 134693&137731
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 513 := 134693&135683
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 513 := 134693&135683
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 513 := 134693&524803
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #845 #849) 64)) 1125899907367427 := 354 << 18
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 134693&556434789556674
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #845 #849) 64)) 292727460615217602 := 354 << 18
(smt.stats  115  18622 281149 696398  9581/9331/298   22154/1114    21   95   27.31)
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 1024 := 134693&92798976
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 512 := 134693&92798976
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 134693&92798976
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 562949953420593 := 177 << 19
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 134693&92798976
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 562949953420593 := 177 << 19
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 134693&92798976
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 562949953420593 := 177 << 19
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 134693&92798976
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 562949953420054 := 177 << 19
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 134693&92798976
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 562949953420054 := 177 << 19
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 1 := 134693&92798976
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas            :deletions    )
(smt.stats  116  18904 283391 709656 10050/9345/298   22768/1117    21   95   27.58)
ramon: poll                 wall=18.000s usage=17.937s mem=29468KiB load=1.00 rootload=0.99
(smt.stats  117  19214 288033 730206 10098/9835/304   23238/1117    21   95   27.68)
(smt.stats  118  19554 296120 754630 10109/9867/305   24111/1429    22  110   27.98)
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 129 := 131&262337
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #845 #849) 64)) 9478951315708313793 := 178 << 8
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 129 := 131&262593
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #845 #849) 64)) 2251799813947841 := 178 << 8
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 129 := 131&262337
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #845 #849) 64)) 1688849860526273 := 178 << 8
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 128 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 64 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 64 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 132 := 89 << 9
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 132 := 89 << 9
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 131 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 130 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 128 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 4 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 45568 := 89 << 9
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 130 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 128 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #117))) 45566 := 89 << 9
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 4 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 8 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 16 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 128 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 96 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 64 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 96 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 64 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 128 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 1 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 2 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 2 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 2 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 2 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 4 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 8 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 16 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 32 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 64 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 12 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 4 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 8 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 16 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 16 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 16 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 4 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 72 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 72 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 18 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 18 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 16 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 16 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 128 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 128 := 131&45568
band: (band[49] (if (= #383 63) 0 (if #597 1 #838)) (shl[64] (* 2 #115) (mod #853 64))) 0 := 131&45568
band: (band[49] (if (= #121 48) 0 (if #617 1 #752)) (shl[49] (bv2int %0) (+ 49 #755))) 128 := 131&45568
(smt.stats  119  19927 306545 794985 10446/10150/400   24795/1774    23  135   28.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 104)
(smt.stats  120  20028 307713 805169 10601/10276/403   25082/1774    23  135   28.81)
(smt.stats  121  20139 310584 820603 10616/10281/403   25310/1774    23  135   28.81)
(smt.stats  122  20261 313238 838687 10605/10295/404   25474/1984    24  196   28.91)
(smt.stats  123  20395 318113 853757 10606/10296/404   25757/1984    24  196   29.00)
ramon: poll                 wall=19.000s usage=18.936s mem=30912KiB load=1.00 rootload=0.99
(smt.stats  124  20542 321646 867336 10633/10319/407   26251/1984    24  196   29.10)
(smt.stats  125  20703 328328 884992 10696/10373/408   26571/1988    24  196   29.10)
(smt.stats  126  20880 335298 918339 10721/10391/408   26874/1990    24  196   29.10)
(smt.stats  127  21074 340061 943594 10746/10426/410   27504/2315    25  201   29.39)
ramon: poll                 wall=20.000s usage=19.932s mem=31256KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:58:14 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.010s
ramon: group.total          19.947s
ramon: group.utime          19.927s
ramon: group.stime          0.020s
ramon: group.mempeak        31516KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
