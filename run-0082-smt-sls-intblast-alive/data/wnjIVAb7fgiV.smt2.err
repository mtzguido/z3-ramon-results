ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:17:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27096 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/wnjIVAb7fgiV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             960871
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   64.9351     10000        49          0            1        2)
(smt.stats    0    101   1136   1653  1201/1046/114      87/17     8   19   51.85)
(sat.ddfw       1      1   33.7872     20001        98          1            1        3)
(smt.stats    1    202   2118   2982  1431/1265/115     191/18     9   20   51.94)
(smt.stats    2    313   4135   3917  1440/1296/115     302/18     9   20   52.04)
(sat.ddfw       1      1   37.2439     40001       196          2            1        5)
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 3 := 3&252
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 2 := 3&252
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&500
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 500 := 502 << 48
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&500
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 500 := 502 << 48
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&500
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 500 := 502 << 48
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 251 := 251 << 49
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 251 := 251 << 49
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 252 := 251 << 49
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 562949953421313 := 251 << 49
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 562949953421313 := 251 << 49
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 2 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 2 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 2 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 2 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 2 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 2 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 3&562949953421312
(smt.stats    3    415   5713   5754  1510/1361/172     396/26    12   38   52.33)
(smt.stats    4    526   7634   7056  1530/1380/196     439/31    14   94   52.33)
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 3&562949953421312
band: (band[50] (if (or #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 ...) 0 (if #653 1 #657)) (shl[50] (bv2int %0) (+ 50 #841))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 3&562949953421312
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 7&8
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 7&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 9 := 200 << 49
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 7&1125899906842621
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 7&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 55169095435288585 := 200 << 49
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 7&1125899906842621
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 1 := 7&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 55169095435288585 := 200 << 49
(smt.stats    5    648  10303   9432  1586/1408/198     568/40    15   98   52.62)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    749  12587  11005  1602/1445/209     663/42    16  103   52.62)
(sat.ddfw       1      1   34.6021     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.841s mem=54764KiB load=0.84 rootload=0.82
(smt.stats    7    860  15128  14421  1631/1455/209     774/42    16  103   52.71)
(sat.ddfw       1      1    30.722    110001       539          4            1       12)
(smt.stats    8    982  16535  15838  1682/1520/210     904/48    17  105   52.85)
(smt.stats    9   1116  20072  19085  1703/1528/210    1040/48    17  105   52.85)
(sat.ddfw       1      1   26.9391    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.816s mem=55016KiB load=0.98 rootload=0.98
(smt.stats   10   1217  22337  20798  1722/1550/210    1142/48    17  105   52.95)
(sat.ddfw       1      1   24.3313    220001      1078          6            1       23)
(smt.stats   11   1328  23822  22380  1759/1582/210    1255/48    17  105   52.95)
ramon: poll                 wall=3.000s usage=2.901s mem=55208KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   22.6244    290001      1421          7            1       30)
(smt.stats   12   1450  25440  24184  1853/1682/212    1382/52    18  111   52.95)
ramon: poll                 wall=4.000s usage=3.981s mem=55216KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   20.1816    370001      1813          8            1       38)
(smt.stats   13   1584  27189  26855  1950/1752/213    1516/56    19  111   53.04)
(smt.stats   14   1731  29165  29901  2040/1865/214    1675/60    20  113   53.18)
ramon: poll                 wall=5.000s usage=5.033s mem=55532KiB load=1.05 rootload=1.05
(sat.ddfw       1      1   18.2002    460001      2254          9            1       47)
(smt.stats   15   1832  30270  32194  2096/1900/214    1778/60    20  113   53.28)
(smt.stats   16   1943  31421  34359  2206/1952/214    1904/62    20  113   53.38)
ramon: poll                 wall=6.000s usage=5.998s mem=55544KiB load=0.97 rootload=0.96
(sat.ddfw       1      1   16.4096    560001      2745         10            1       57)
(smt.stats   17   2065  32691  37570  2267/2060/214    2053/62    20  113   53.47)
(smt.stats   18   2199  35474  42286  2314/2113/214    2213/63    20  113   53.47)
ramon: poll                 wall=7.000s usage=6.968s mem=55604KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   14.9905    670001      3284         11            1       68)
(smt.stats   19   2346  37444  45864  2416/2162/214    2383/64    20  113   53.47)
ramon: poll                 wall=8.000s usage=7.967s mem=55616KiB load=1.00 rootload=1.00
(smt.stats   20   2507  39529  50793  2505/2283/214    2592/66    20  113   53.47)
(smt.stats   21   2608  42573  56758  2551/2389/214    2806/66    20  113   53.61)
(smt.stats   22   2719  44513  60376  2587/2394/214    2962/66    20  113   53.70)
(sat.ddfw       1      1     13.86    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.969s mem=55848KiB load=1.00 rootload=1.00
(smt.stats   23   2841  45723  63600  2716/2437/214    3126/67    20  113   53.70)
(smt.stats   24   2975  47139  67899  2774/2585/214    3317/67    20  113   53.80)
(smt.stats   25   3122  48997  69759  2788/2622/214    3464/67    20  113   53.80)
ramon: poll                 wall=10.000s usage=9.952s mem=55872KiB load=0.98 rootload=0.99
(sat.ddfw       1      1   12.8764    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   26   3283  50629  74832  2892/2634/214    3663/68    20  113   53.89)
ramon: poll                 wall=11.000s usage=11.022s mem=56008KiB load=1.07 rootload=1.07
(smt.stats   27   3460  52353  79589  3032/2775/214    3955/75    20  113   53.89)
(sat.ddfw       1      1   12.1581   1060001      5196         14            1      108)
(smt.stats   28   3561  53511  83604  3113/2883/215    4113/151    21  116   53.89)
ramon: poll                 wall=12.000s usage=12.020s mem=56044KiB load=1.00 rootload=0.99
(smt.stats   29   3672  54819  87285  3235/2974/215    4247/152    21  116   53.99)
ramon: poll                 wall=13.000s usage=13.018s mem=56180KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3705   1210001      5931         15            1      123)
(smt.stats   30   3794  55857  91458  3416/3099/215    4386/155    21  116   53.99)
(smt.stats   31   3928  57228  99116  3511/3350/216    4556/196    22  118   54.08)
ramon: poll                 wall=14.000s usage=14.014s mem=56224KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  59181 104680  3521/3355/216    4739/196    22  118   54.08)
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 0&272
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 419960665252299024 := 2251799813621206 << 46
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 0&272
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 419960665252299024 := 2251799813621206 << 46
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 0&272
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 419960665252299024 := 2251799813621206 << 46
(smt.stats   33   4236  62822 113827  3565/3363/216    4946/197    22  118   54.24)
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 421086565159141376 := 2251799813621210 << 44
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 0&264
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 421086565159141640 := 2251799813621210 << 44
band: (band[50] (if (or #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 #463 #466 #469 #472 ...) 0 (if #424 1 #874)) (shl[64] (* 2 #107) (mod #1072 64))) 0 := 0&264
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1064 #1068) 64)) 421086565159141640 := 2251799813621210 << 44
(smt.stats   34   4413  65253 117882  3600/3404/221    5312/223    23  119   54.44)
ramon: poll                 wall=15.000s usage=15.013s mem=56656KiB load=1.00 rootload=0.99
(smt.stats   35   4607  67730 125795  3647/3463/227    5636/223    23  119   54.73)
(sat.ddfw       1      1   10.6873   1370001      6715         16            1      139)
(smt.stats   36   4708  69478 130727  3657/3485/228    5784/382    24  122   54.73)
(smt.stats   37   4819  71000 135850  3695/3499/228    5925/382    24  122   54.82)
(smt.stats   38   4941  72447 140638  3720/3528/228    6061/391    25  124   54.82)
ramon: poll                 wall=16.000s usage=16.012s mem=56916KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(sat.ddfw       1      1   10.0747   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=17.008s mem=57020KiB load=1.00 rootload=1.00
(smt.stats   39   5075  73592 145236  3825/3562/228    6221/391    25  124   54.82)
ramon: poll                 wall=18.000s usage=18.007s mem=57096KiB load=1.00 rootload=1.00
(smt.stats   40   5222  75207 150702  4002/3732/228    6401/402    25  124   54.92)
ramon: poll                 wall=19.000s usage=18.944s mem=57164KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   9.49517   1720001      8431         18            1      174)
(smt.stats   41   5383  76945 156372  4270/3959/228    6567/408    25  124   55.01)
(smt.stats   42   5560  78463 161838  4392/4108/228    6763/416    25  124   55.11)
ramon: poll                 wall=20.000s usage=20.072s mem=57440KiB load=1.13 rootload=1.12
ramon: end                  Fri Nov  1 23:17:47 2024
ramon: root.execname        z3
ramon: root.utime           20.120s
ramon: root.stime           0.020s
ramon: group.total          20.150s
ramon: group.utime          20.126s
ramon: group.stime          0.024s
ramon: group.mempeak        57696KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.00
