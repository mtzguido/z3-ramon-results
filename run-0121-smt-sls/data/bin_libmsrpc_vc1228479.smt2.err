ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:25:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         13612 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1176
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1228479.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1358274
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
tabu (if (and (bvsle bv[4294967295:32] #13912) (not #17826)) (bvadd bv[1:32] (if #13908 bv[0:32] v464620512)) (if (and #8176 #8259) bv[0:32] v464620512))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      42      8   136.986     10000         0          0           47      335)
(sat.ddfw      25     30   95.1038     20081         0          1          107      514)
(sat.ddfw      16    122   119.886     40102         0          2           78      786)
(sat.ddfw       6    162   106.804     70007         0          3           36     1378)
(sat.ddfw       5    319   88.4956    110007         0          4           81     1917)
(sat.ddfw       5   1000   75.6657    160022         0          5           88     2315)
(sat.ddfw       5   1025   65.1629    220037         1          6           67     3078)
ramon: poll                 wall=1.000s usage=0.989s mem=22468KiB load=0.99 rootload=0.98
(sat.ddfw       5   1025   58.6664    290026         1          7           23     3892)
(sat.ddfw       1    369   48.6164    370000         3          8           65     4789)
ramon: poll                 wall=2.000s usage=1.977s mem=22468KiB load=0.99 rootload=0.98
(sat.ddfw       1   1025   45.0936    460052         3          9           88     6043)
(sat.ddfw       1   1025   40.4917    560026         4         10           76     7077)
ramon: poll                 wall=3.000s usage=2.972s mem=22472KiB load=0.99 rootload=0.99
(sat.ddfw       1   1025   36.6947    670000         5         11            4     8123)
(sat.ddfw       1   1025   31.6563    790009         6         12           18     8782)
ramon: poll                 wall=4.000s usage=3.972s mem=22472KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.972s mem=22472KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025    25.991    920016         6         13           14     8870)
ramon: poll                 wall=6.000s usage=5.971s mem=22472KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   22.9317   1060014         7         14           15     9090)
ramon: poll                 wall=7.000s usage=6.965s mem=22472KiB load=0.99 rootload=1.00
(sat.ddfw       1   1025   20.1648   1210000         7         15            2     9764)
ramon: poll                 wall=8.000s usage=7.963s mem=22472KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.960s mem=22472KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.960s mem=22472KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.952s mem=22472KiB load=0.99 rootload=0.99
(sat.ddfw       1   1025   13.6671   1370001         8         16           59    10424)
ramon: poll                 wall=12.000s usage=11.947s mem=22472KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.946s mem=22472KiB load=1.00 rootload=0.99
(sat.ddfw       1   1025   12.9238   1540026         9         17           41    12301)
(sat.ddfw       1   1025   12.9277   1720057        10         18           94    13988)
ramon: poll                 wall=14.000s usage=13.946s mem=22472KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   12.7916   1910000        12         19           50    15527)
ramon: poll                 wall=15.000s usage=14.945s mem=22472KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   12.6072   2110000        13         20           14    17034)
ramon: poll                 wall=16.000s usage=15.945s mem=22472KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.944s mem=22472KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   12.1509   2320016        14         21           22    19097)
ramon: poll                 wall=18.000s usage=17.944s mem=22472KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025    12.053   2540068        14         22           68    21097)
ramon: poll                 wall=19.000s usage=18.944s mem=22472KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.943s mem=22472KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:25:45 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.949s
ramon: group.utime          19.933s
ramon: group.stime          0.016s
ramon: group.mempeak        22868KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
