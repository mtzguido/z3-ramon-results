ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:23:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28340 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ORNVIGNl0SGx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             781937
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   67.5676     10000        49          0            1        2)
(sat.ddfw       1      1   33.3367     20001        98          1            1        3)
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 0&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 0&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 0&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 0&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 3746994889972252672&65189952862620526
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 0&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 2&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 65189952862620526 := 65189952862620526&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 9288561989717396334 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 309 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 308 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 288 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 309 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 308 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 320 := 320&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 320 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 65189952862620526 := 3746994889972252672&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 288 := 309&65189952862620526
(smt.stats    0    101   4480    571  1399/1271/135      89/16     6   27   52.25)
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 312&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 315&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 32 := 312&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 8 := 312&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 3 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 4 := 309&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 14 := 320&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 14 := 320&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 320&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 64 := 320&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 15 := 321&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 15 := 320&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 15 := 320&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 14 := 320&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 13 := 316&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 8 := 312&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 320&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 384&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 384&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 512&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 512&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 512&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 512&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 1024&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 1024 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 3746994889972252672&65189952862620526
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 307 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 3746994889972252672&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 3746994889972252672 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 3746994889972252672&65189952862620526
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 3746994889972252672&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 3746994889972252672 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 3746994889972252672&65189952862620526
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 512&65189952862620526
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 1024&65189952862620526
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 1024 := 371 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 0 := 8286623314361712640&65189952862620526
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 371 << 56
(sat.ddfw       1      1    34.662     40001       196          2            1        5)
(smt.stats    1    202   5645   3022  2430/2200/206     188/32    10   48   52.83)
ramon: poll                 wall=1.004s usage=0.852s mem=55156KiB load=0.85 rootload=0.84
(sat.ddfw       1      1   31.2175     70001       343          3            1        8)
(sat.ddfw       1      1   27.2851    110001       539          4            1       12)
ramon: poll                 wall=2.000s usage=1.844s mem=55232KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   23.7525    160000       784          5            1       17)
(smt.stats    2    313   6046   3313  2813/2526/206     305/34    10   48   53.12)
(smt.stats    3    414   6561   4060  3090/2654/206     422/35    10   48   53.22)
(smt.stats    4    525   9530   5991  3203/2938/213     505/51    13   67   53.22)
(sat.ddfw       1      1   21.0161    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.968s mem=55600KiB load=1.12 rootload=1.12
(smt.stats    5    647  15603  10392  3287/3006/219     684/83    15   73   53.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  18931  13480  3320/3031/220     817/100    16   74   53.44)
(smt.stats    7    859  22472  17216  3382/3106/221     970/104    17   74   53.53)
(sat.ddfw       1      1   19.9033    290001      1421          7            1       30)
(smt.stats    8    981  26042  21110  3450/3177/227    1116/122    19   79   53.53)
ramon: poll                 wall=4.004s usage=4.178s mem=55648KiB load=1.21 rootload=1.21
(sat.ddfw       1      1   17.8811    370001      1813          8            1       38)
(smt.stats    9   1115  29258  25294  3550/3202/228    1275/146    20   84   53.63)
ramon: poll                 wall=5.000s usage=5.174s mem=55824KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.0428    460001      2254          9            1       47)
(smt.stats   10   1216  30096  26378  3796/3326/229    1399/179    21   87   53.73)
ramon: poll                 wall=6.000s usage=6.173s mem=55828KiB load=1.00 rootload=1.00
(smt.stats   11   1327  31019  27473  3923/3554/229    1540/180    21   87   53.82)
(sat.ddfw       1      1   14.5497    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=7.171s mem=55916KiB load=1.00 rootload=0.99
(smt.stats   12   1449  33919  30852  4054/3729/229    1755/180    21   87   53.92)
(smt.stats   13   1583  37640  36027  4102/3793/233    1927/216    22   90   53.92)
ramon: poll                 wall=8.000s usage=8.115s mem=56172KiB load=0.94 rootload=0.95
(smt.stats   14   1730  45143  45448  4164/3849/233    2119/241    23   93   54.17)
(sat.ddfw       1      1   13.0564    670001      3284         11            1       68)
(smt.stats   15   1831  47518  49174  4230/3897/233    2259/241    23   93   54.17)
ramon: poll                 wall=9.000s usage=9.063s mem=56392KiB load=0.95 rootload=0.95
(smt.stats   16   1942  50978  55099  4286/3978/233    2467/242    23   93   54.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   17   2064  55528  61950  4293/4017/235    2654/314    24  101   54.26)
(smt.stats   18   2198  61842  68977  4301/4019/235    2852/314    24  101   54.43)
(smt.stats   19   2345  70659  80984  4311/4035/235    3011/314    24  101   54.54)
(smt.stats   20   2506  75311  91291  4317/4041/236    3226/397    25  103   54.54)
(smt.stats   21   2607  79733 100162  4319/4042/237    3335/401    26  104   54.63)
(smt.stats   22   2718  84708 107916  4352/4046/237    3455/405    26  104   54.63)
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 32 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 34 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 34 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 34 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 34 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 38 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 38 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 38 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 54 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 54 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 182 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 246 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 758 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 694 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1974 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9223372036854775806&32594976431310263
(smt.stats   23   2840  86666 112107  4497/4083/239    3630/415    27  106   54.86)
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 438 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 438 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 438 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 502 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 950 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9223372036854775806&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9223372036854743038&32594976431310263
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9190777060423466430&32594976431310263
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 18414149097278242238 := 9223372036854775792 << 55
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9190777060423466430&32594976431310263
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 18414149097278242238 := 9223372036854775792 << 55
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9190777060423466430&32594976431310263
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 18414149097278242238 := 9223372036854775792 << 55
band: (band[63] (shl[64] (bv2int %0) (mod #438 64)) (if (= #783 63) 0 (if #785 1 #909))) 1462 := 9190777060423466430&32594976431310263
shl: (shl[64] (bv2int %0) (mod (+ #105 #437) 64)) 18414149097278242238 := 9223372036854775792 << 55
(smt.stats   24   2974  88865 123394  4605/4327/329    4019/449    28  126   54.96)
(smt.stats   25   3121  94573 137734  4677/4384/334    4293/535    30  142   55.40)
ramon: poll                 wall=10.004s usage=9.976s mem=57388KiB load=0.91 rootload=0.91
(sat.ddfw       1      1   11.9772    790001      3872         12            1       80)
(smt.stats   26   3282 100223 150595  4709/4416/336    4544/623    31  161   55.40)
(smt.stats   27   3459 104000 157703  4875/4582/337    5022/632    31  161   55.59)
(smt.stats   28   3560 107034 163308  4898/4595/348    5262/719    32  167   55.59)
ramon: poll                 wall=11.000s usage=10.944s mem=57952KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   11.1416    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=11.945s mem=57860KiB load=1.00 rootload=1.00
(smt.stats   29   3671 111186 173080  4995/4620/348    5481/722    32  167   55.69)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793 115319 189026  5078/4774/349    5655/1027    34  235   55.79)
ramon: poll                 wall=13.000s usage=12.945s mem=58232KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.4174   1060001      5196         14            1      108)
(smt.stats   31   3927 118289 193766  5217/4801/349    6014/1028    34  235   55.98)
ramon: poll                 wall=14.000s usage=13.943s mem=58464KiB load=1.00 rootload=1.00
(smt.stats   32   4074 122110 204897  5240/4937/352    6225/1143    35  238   56.08)
(smt.stats   33   4235 127953 232315  5265/4957/352    6398/1182    36  241   56.08)
(smt.stats   34   4412 135562 266618  5307/4986/356    6706/1194    37  243   56.17)
ramon: poll                 wall=15.000s usage=14.942s mem=58636KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.77836   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=15.943s mem=58436KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.941s mem=58440KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   9.21871   1370001      6715         16            1      139)
(smt.stats   35   4606 138533 279042  5388/5026/356    7165/1282    38  253   56.48)
ramon: poll                 wall=18.000s usage=17.944s mem=58452KiB load=1.00 rootload=1.01
(smt.stats   36   4707 139993 291374  5464/5134/357    7310/1399    39  256   56.48)
ramon: poll                 wall=19.000s usage=19.071s mem=58764KiB load=1.13 rootload=1.12
(sat.ddfw       1      1   8.85647   1540001      7549         17            1      156)
ramon: poll                 wall=20.000s usage=20.169s mem=58544KiB load=1.10 rootload=1.10
ramon: end                  Fri Nov  1 22:23:34 2024
ramon: root.execname        z3
ramon: root.utime           20.220s
ramon: root.stime           0.010s
ramon: group.total          20.241s
ramon: group.utime          20.225s
ramon: group.stime          0.016s
ramon: group.mempeak        60612KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.01
