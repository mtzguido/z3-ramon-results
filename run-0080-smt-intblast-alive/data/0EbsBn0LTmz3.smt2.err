ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:21:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31289 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1260
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0EbsBn0LTmz3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4014709
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2712    359  1430/1293/104      86/44     8   23   19.09)
(smt.stats    1    202   4402   1782  2142/1944/113     202/67    12   27   19.50)
(smt.stats    2    313   5560   3430  2292/2077/114     317/83    13   31   19.50)
(smt.stats    3    414   6653   4943  2514/2278/116     429/104    15   32   19.60)
(smt.stats    4    525   8107   6865  2635/2398/120     531/118    16   35   19.69)
(smt.stats    5    647   9517   9462  2666/2421/120     661/118    16   35   19.89)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  12415  12326  2676/2434/121     759/132    17   36   19.99)
(smt.stats    7    859  15493  17155  2686/2441/121     870/133    17   36   20.09)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 1 := 1&1099511627776
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 1&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 1385 << 41
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 1&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 1385 << 41
(smt.stats    8    981  17629  19728  2704/2459/123     987/134    18   39   20.09)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 46&70368744177664
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1407374883553326 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 46&70368744177664
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1407374883553326 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 46&70368744177664
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1407374883553326 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 46 := 46&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 45 := 46&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 46&70368744177664
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1407374883553326 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 0&70368744177664
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 70368744177664 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 70368744177662 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 70368744177665 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 1 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 2 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 4 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 8 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 70368744177664 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 70368744177648 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 32 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 64 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 128 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 128 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 256 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 512 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 1024 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 2048 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 4096 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 8192 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 16384 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 32768 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 65536 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 131072 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 262144 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 262144 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 524288 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 1048576 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 2097152 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 4194304 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 8388608 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 16777216 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 33554432 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 67108864 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 134217728 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 268435456 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 536870912 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 1073741824 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 2147483648 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 4294967296 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 4294967296 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 8589934592 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 17179869184 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 34359738368 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 68719476736 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 137438953472 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 274877906944 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 549755813888 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 1099511627776 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 549755813888 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 1099511627776 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 2199023255552 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 4398046511104 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 8796093022208 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 17592186044416 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 35184372088832 := 140737488355328&70368744177664
(smt.stats    9   1115  20064  22212  3180/2495/135    1113/143    20   45   21.50)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 140737488355329 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 140737488355329 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 140737488355329 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 17592186044416 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 35184372088832 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 35184372088832 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 35184372088832 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 35184372088832 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 70368744177664 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488355328&70368744177664
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #595 47) 1 (if #597 2 #689))) 13194139533312 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 70368744177660 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046511112 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046511120 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046511136 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046511168 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046511232 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046511232 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046511360 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046511616 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046512128 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046513152 := 140737488355328&70368744177664
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 4398046515200 := 140737488355328&70368744177664
(smt.stats   10   1216  21068  24250  3136/2648/325    1276/147    20   45   21.51)
(smt.stats   11   1327  22138  25290  3241/2819/401    1520/177    21  101   21.90)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  24025  29132  3719/3465/421    1991/219    22  106   21.99)
(smt.stats   13   1583  29225  35542  3834/3585/427    2687/992    24  156   22.09)
ramon: poll                 wall=1.000s usage=0.947s mem=23860KiB load=0.95 rootload=0.94
ramon: poll                 wall=2.000s usage=1.947s mem=23688KiB load=1.00 rootload=1.00
(smt.stats   14   1730  30567  37652  4023/3590/427    2868/1000    24  156   22.51)
ramon: poll                 wall=3.003s usage=2.951s mem=23948KiB load=1.00 rootload=1.00
(smt.stats   15   1831  34499  51884  4242/3990/429    3024/1072    25  160   22.51)
ramon: poll                 wall=4.000s usage=3.946s mem=23844KiB load=1.00 rootload=1.00
(smt.stats   16   1942  37729  60815  4335/4022/429    3169/1072    25  160   22.51)
(smt.stats   17   2064  41846  67520  4445/4118/436    3672/1125    26  162   22.61)
(smt.stats   18   2198  46991  80155  4821/4569/438    4053/1230    28  174   22.70)
(smt.stats   19   2345  53952  99614  5143/4579/438    4611/1236    28  174   22.93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2506  59686 114804  5296/5016/439    5268/1456    29  175   23.02)
ramon: poll                 wall=5.000s usage=4.946s mem=24456KiB load=1.00 rootload=1.00
(smt.stats   21   2607  64476 122756  5383/5071/439    5394/1463    29  175   23.12)
(smt.stats   22   2718  68602 131163  5546/5161/439    5626/1466    29  175   23.21)
(smt.stats   23   2840  73204 138656  5742/5349/439    5799/1468    29  175   23.21)
ramon: poll                 wall=6.000s usage=5.946s mem=24672KiB load=1.00 rootload=1.00
(smt.stats   24   2974  77510 155238  5854/5602/440    6497/1839    30  176   23.31)
(smt.stats   25   3121  84797 176901  5890/5641/443    6863/2142    31  179   23.40)
(smt.stats   26   3282  88984 184631  5960/5650/443    7117/2238    32  194   23.40)
(smt.stats   27   3459  93037 207736  6187/5932/450    7548/2386    33  202   23.50)
ramon: poll                 wall=7.000s usage=6.946s mem=25184KiB load=1.00 rootload=1.00
(smt.stats   28   3560  96508 214604  6319/5941/450    7985/2390    33  202   23.60)
(smt.stats   29   3671  99354 224886  6693/6119/450    8136/2588    34  243   23.69)
(smt.stats   30   3793 102698 238110  7003/6531/450    8476/2588    34  243   23.78)
ramon: poll                 wall=8.000s usage=7.946s mem=25696KiB load=1.00 rootload=1.00
(smt.stats   31   3927 107574 253710  7422/6911/450    8948/2588    34  243   23.88)
(smt.stats   32   4074 112468 269816  7489/7206/451    9423/2708    35  249   23.97)
(smt.stats   33   4235 118548 289771  7654/7382/454    9964/2785    36  262   23.97)
(smt.stats   34   4412 126841 312229  7797/7422/454   10750/2894    37  264   24.07)
(smt.stats   35   4606 132489 348461  7832/7584/456   11997/3352    38  274   24.40)
(smt.stats   36   4707 138566 389372  7838/7590/458   12231/3462    40  310   24.40)
ramon: poll                 wall=9.000s usage=8.945s mem=25952KiB load=1.00 rootload=1.00
(smt.stats   37   4818 142865 423067  7846/7592/459   12397/3605    41  314   24.40)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 24576 := 32144&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 24576 := 32144&8796093022208
(smt.stats   38   4940 146548 437559  7972/7612/460   12882/3654    42  316   24.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 406)
(smt.stats   39   5074 150525 463057  7988/7731/471   12736/3870    43  328   24.50)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5221 157310 500167  8089/7756/472   13044/3873    43  328   24.59)
(smt.stats   41   5382 163994 546052  8203/7909/473   13463/3946    44  330   24.69)
ramon: poll                 wall=10.000s usage=9.945s mem=26208KiB load=1.00 rootload=1.00
(smt.stats   42   5559 168436 563808  8341/8056/475   13744/4048    45  331   24.69)
(smt.stats   43   5753 173456 574814  8664/8112/475   13984/4116    46  333   24.79)
ramon: poll                 wall=11.000s usage=10.945s mem=26464KiB load=1.00 rootload=1.00
(smt.stats   44   5966 177622 589848  9133/8885/476   14238/4160    47  334   24.88)
(smt.stats   45   6067 181638 610408  9147/8889/476   14662/4161    47  334   24.88)
(smt.stats   46   6178 186572 631694  9168/8920/477   15163/4350    48  346   24.98)
(smt.stats   47   6300 192414 666525  9179/8931/477   15336/4350    48  346   24.98)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488879592&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 140737488879592 := 140737488879592 << 40
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488879140&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18446603336221720100 := 140737488879592 << 40
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 0 := 140737488879140&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18446603336221720100 := 140737488879592 << 40
(smt.stats   48   6434 196290 694807  9255/8932/477   15638/4357    48  346   25.17)
ramon: poll                 wall=12.003s usage=11.949s mem=26976KiB load=1.00 rootload=1.00
(smt.stats   49   6581 199385 705166  9473/9053/483   15860/4419    49  349   25.26)
(smt.stats   50   6742 204363 736512  9681/9234/483   16296/4433    49  349   25.44)
ramon: poll                 wall=13.000s usage=12.945s mem=26976KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.945s mem=27292KiB load=1.00 rootload=1.00
(smt.stats   51   6919 209965 778645 10019/9489/483   16701/4618    50  349   25.74)
(smt.stats   52   7113 214720 813736 10106/9781/483   17140/4620    50  349   25.74)
ramon: poll                 wall=15.000s usage=14.945s mem=27548KiB load=1.00 rootload=1.00
(smt.stats   53   7326 219167 829013 10341/9904/483   17376/4625    50  349   25.84)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   54   7560 225836 870132 10667/10110/483   18061/4634    50  349   25.93)
(smt.stats   55   7661 228938 901574 10747/10497/486   18310/4910    51  352   25.93)
(smt.stats   56   7772 232622 922309 10899/10499/486   18629/4915    51  352   26.03)
(smt.stats   57   7894 236001 934292 11044/10749/487   18879/5050    52  360   26.18)
ramon: poll                 wall=16.000s usage=15.945s mem=27804KiB load=1.00 rootload=1.00
(smt.stats   58   8028 237985 942427 11116/10861/487   19059/5050    52  360   26.18)
(smt.stats   59   8175 240081 949656 11314/10875/487   19278/5077    53  370   26.28)
(smt.stats   60   8336 242984 956897 11747/11079/488   19509/5079    53  370   26.37)
(smt.stats   61   8513 245486 966357 11774/11512/488   19795/5080    53  370   26.37)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   62   8707 251961 1000689 11786/11530/488   20050/5158    54  372   26.37)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 262657538 := 140737497005612&2199023255552
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 262657536 := 140737497005612&2199023255552
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 262657536 := 140737497005612&2199023255552
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (= #708 63) 0 (if #710 1 #834))) 262657536 := 140737497005612&2199023255552
(smt.stats   63   8920 258676 1056082 12027/11542/488   20855/5160    54  372   26.47)
(smt.stats   64   9154 260733 1069341 12041/11789/495   21403/5373    55  373   26.56)
ramon: poll                 wall=17.000s usage=16.944s mem=28376KiB load=1.00 rootload=1.00
(smt.stats   65   9411 266891 1095186 12302/11802/495   21800/5378    55  373   26.75)
(smt.stats   66   9512 268847 1114996 12351/12093/496   21982/5656    56  375   26.75)
(smt.stats   67   9623 272016 1131602 12380/12110/496   22169/5658    56  375   26.75)
(smt.stats   68   9745 275218 1166489 12401/12134/496   22465/5758    57  376   26.75)
(smt.stats   69   9879 279380 1205202 12431/12161/497   22616/5867    58  377   26.85)
ramon: poll                 wall=18.000s usage=17.943s mem=28668KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 283753 1239649 12497/12213/497   23048/5869    58  377   26.85)
(smt.stats   71  10187 289693 1296991 12529/12250/497   23477/5869    58  377   26.94)
(smt.stats   72  10364 293361 1312317 12618/12289/497   23693/5870    58  377   26.94)
(smt.stats   73  10558 296728 1336797 12632/12363/498   23975/6274    59  379   27.04)
ramon: poll                 wall=19.000s usage=18.941s mem=28816KiB load=1.00 rootload=1.00
(smt.stats   74  10771 301895 1366983 12678/12384/498   24199/6274    59  379   27.04)
(smt.stats   75  11005 307283 1419520 12693/12423/498   24695/6281    59  379   27.14)
(smt.stats   76  11262 312762 1485142 12708/12448/499   25026/6558    60  381   27.14)
(smt.stats   77  11544 321013 1595846 12740/12472/499   25882/6558    60  381   27.33)
(smt.stats   78  11645 323832 1629749 12762/12485/499   25982/6558    60  381   27.33)
ramon: poll                 wall=20.003s usage=19.943s mem=28988KiB load=1.00 rootload=1.00
(smt.stats   79  11756 328957 1693320 12767/12503/499   26099/6558    60  381   27.33)
ramon: end                  Fri Nov  1 17:21:42 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.997s
ramon: group.utime          19.985s
ramon: group.stime          0.012s
ramon: group.mempeak        29244KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.057s
ramon: loadavg              1.00
