ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:31:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28182 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Sa6dBY8vGGcU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             810568
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&9223372036854775807
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&9223372036854775806
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775806 := 2 << 61
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&3
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775808 := 2 << 61
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4611686018427387905
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775808 := 2 << 61
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775808 := 2 << 61
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&3
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 4 := 2 << 61
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4611686018427387904
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 2 := 1 << 62
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4611686018427387904
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 2 := 1 << 62
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4611686018427387904
band: (band[63] (if (or #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 ...) 0 (if #729 1 #731)) (shl[63] (bv2int %0) (+ 63 #971))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4611686018427387904
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 4611686018427387905 := 1 << 62
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4611686018427387904
band: (band[63] (if (or #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 ...) 0 (if #729 1 #731)) (shl[63] (bv2int %0) (+ 63 #971))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4611686018427387904
band: (band[63] (if (or #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 ...) 0 (if #729 1 #731)) (shl[63] (bv2int %0) (+ 63 #971))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 1 := 1&4611686018427387904
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 1&4611686018427387904
band: (band[63] (if (or #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 ...) 0 (if #729 1 #731)) (shl[63] (bv2int %0) (+ 63 #971))) 1 := 1&4611686018427387904
(smt.stats    0    101    670    794  1345/1203/148      93/12     5   29   51.98)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   64.9351     10000        49          0            1        2)
(sat.ddfw       1      1   29.4147     20001        98          1            1        3)
(sat.ddfw       1      1   33.4448     40001       196          2            1        5)
(smt.stats    1    202   1430   1628  1485/1281/148     204/13     5   29   52.27)
ramon: poll                 wall=1.000s usage=0.892s mem=54688KiB load=0.89 rootload=0.88
(sat.ddfw       1      1   31.1203     70001       343          3            1        8)
(smt.stats    2    313   2128   2491  1621/1372/148     334/14     5   29   52.37)
(sat.ddfw       1      1   27.5292    110001       539          4            1       12)
(smt.stats    3    414   3110   3835  1692/1534/155     429/28     7   40   52.37)
(smt.stats    4    525   4603   7733  1728/1560/170     552/37     8   50   52.46)
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775810 := 228 << 11
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775810 := 228 << 11
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775810 := 228 << 11
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775810 := 228 << 11
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775810 := 228 << 11
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775810 := 228 << 11
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&100
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775908 := 228 << 11
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&100
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775908 := 228 << 11
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&466944
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 466946 := 114 << 12
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&466944
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 466946 := 114 << 12
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&466944
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 466946 := 114 << 12
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&466944
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 466946 := 114 << 12
(smt.stats    5    647   6719  10590  1813/1620/177     671/63    10   69   52.65)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   8777  12820  1836/1660/182     805/67    11   71   52.75)
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&112
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 112 := 232 << 9
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 60 := 240 << 5
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&58
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 58 := 240 << 5
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 2 := 240 << 5
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 60 := 244 << 3
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&62
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 62 := 244 << 3
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980))ramon: poll                 wall=2.000s usage=1.889s mem=55124KiB load=1.00 rootload=0.99
 (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&62
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 62 := 244 << 3
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&62
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 62 := 244 << 3
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&62
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 62 := 236 << 7
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&62
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 62 := 236 << 7
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 60 := 236 << 7
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 60 := 236 << 7
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 0 := 232 << 9
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 0 := 232 << 9
(smt.stats    7    859   9803  14012  1887/1661/182     921/99    12   71   52.85)
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&7680
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 7682 := 120 << 6
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&7680
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 7682 := 120 << 6
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&7680
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 7682 := 120 << 6
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&7680
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 7682 := 120 << 6
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&507905
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 507905 := 248 << 1
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&1952
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 7809 := 122 << 4
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&1952
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 7809 := 122 << 4
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&1952
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 7809 := 122 << 4
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&1952
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #130))) 7809 := 122 << 4
(smt.stats    8    981  11296  16296  1973/1785/226    1059/106    14   79   53.04)
(sat.ddfw       1      1   24.2596    160000       784          5            1       17)
(smt.stats    9   1115  12505  18329  2013/1818/229    1201/106    14   79   53.23)
(smt.stats   10   1216  13622  20656  2016/1821/229    1268/118    15  115   53.23)
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 2 := 2&99
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775907 := 0 << 62
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 2 := 2&99
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775907 := 0 << 62
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&4611686018427387905
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 13835058055282163713 := 98 << 13
(smt.stats   11   1328  14844  23699  2044/1839/238    1377/122    16  121   53.43)
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&4611686018427387907
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 13835058055282163715 := 98 << 13
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&4611686018427387907
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 13835058055282163715 := 98 << 13
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  16913  27990  2200/1971/247    1524/152    18  139   53.62)
(smt.stats   13   1584  18366  32099  2213/1982/272    1707/152    18  139   53.92)
(sat.ddfw       1      1   22.1161    220001      1078          6            1       23)
(smt.stats   14   1731  20413  37075  2218/1991/273    1824/173    20  192   53.92)
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&99
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775907 := 192 << 29
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&99
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775907 := 196 << 27
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&99
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854775907 := 196 << 27
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&1375
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854777183 := 172 << 39
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&352257
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855128065 := 172 << 39
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&352257
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855128065 := 172 << 39
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&4611686018427387907
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 13835058055282163715 := 172 << 39
(smt.stats   15   1832  23419  40571  2284/2005/273    1929/174    20  192   54.16)
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&344064
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855119872 := 168 << 41
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&311296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855087104 := 152 << 49
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&327680
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855103488 := 160 << 45
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&278528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855054336 := 136 << 57
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&294912
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855070720 := 144 << 53
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&270336
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855046144 := 132 << 59
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&286720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855062528 := 140 << 55
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&335872
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855111680 := 164 << 43
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&319488
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855095296 := 156 << 47
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&303104
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855078912 := 148 << 51
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&344062
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036855119870 := 168 << 41
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&1344
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854777152 := 168 << 41
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&1310
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854777118 := 164 << 43
band: (band[63] (if (or #473 #476 #479 #482 #485 #488 #491 #494 #497 #500 #503 #506 #509 #512 #515 #518 ...) 0 (if #470 1 #980)) (shl[64] (* 2 #128) (mod #1232 64))) 0 := 0&1310
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1226 #1227) 64)) 9223372036854777118 := 164 << 43
ramon: poll                 wall=3.000s usage=2.982s mem=56500KiB load=1.09 rootload=1.08
(smt.stats   16   1943  25719  44011  2380/2148/344    2026/181    22  215   54.36)
(sat.ddfw       1      1   20.2429    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.983s mem=56944KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.9453    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=5.077s mem=57164KiB load=1.09 rootload=1.09
(sat.ddfw       1      1    17.039    460001      2254          9            1       47)
(smt.stats   17   2065  29897  47365  2524/2238/346    2183/187    22  215   54.74)
ramon: poll                 wall=6.000s usage=6.073s mem=57172KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.4799    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=7.074s mem=57172KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    14.036    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=8.073s mem=57180KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=9.076s mem=57236KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.8742    790001      3872         12            1       80)
(smt.stats   18   2199  32066  49558  2685/2302/346    2343/211    23  228   55.13)
ramon: poll                 wall=10.000s usage=10.058s mem=57816KiB load=0.98 rootload=0.99
ramon: poll                 wall=11.000s usage=11.059s mem=57824KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.8613    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=12.054s mem=57824KiB load=0.99 rootload=0.99
(smt.stats   19   2346  34992  53872  2812/2474/348    2498/232    24  228   55.22)
(sat.ddfw       1      1   11.0297   1060001      5196         14            1      108)
ramon: poll                 wall=13.000s usage=13.055s mem=57832KiB load=1.00 rootload=1.00
(smt.stats   20   2507  39169  59479  2893/2588/348    2698/239    25  229   55.32)
ramon: poll                 wall=14.000s usage=14.053s mem=57844KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.3157   1210001      5931         15            1      123)
ramon: poll                 wall=15.000s usage=15.051s mem=57888KiB load=1.00 rootload=1.00
(smt.stats   21   2608  41325  63001  2959/2660/349    2804/260    26  233   55.41)
ramon: poll                 wall=16.000s usage=16.052s mem=57896KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.69168   1370001      6715         16            1      139)
(smt.stats   22   2719  43959  67076  3065/2777/350    2925/282    27  234   55.51)
ramon: poll                 wall=17.000s usage=17.050s mem=57904KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=18.051s mem=57908KiB load=1.00 rootload=1.00
(smt.stats   23   2841  47173  70509  3166/2843/350    3062/293    27  234   55.51)
(sat.ddfw       1      1   9.13684   1540001      7549         17            1      156)
ramon: poll                 wall=19.000s usage=19.049s mem=57920KiB load=1.00 rootload=1.00
(smt.stats   24   2975  50037  76199  3209/2959/351    3236/324    28  234   55.60)
ramon: poll                 wall=20.000s usage=20.051s mem=57924KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:31:53 2024
ramon: root.execname        z3
ramon: root.utime           20.080s
ramon: root.stime           0.020s
ramon: group.total          20.117s
ramon: group.utime          20.089s
ramon: group.stime          0.028s
ramon: group.mempeak        58180KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.067s
ramon: loadavg              1.00
