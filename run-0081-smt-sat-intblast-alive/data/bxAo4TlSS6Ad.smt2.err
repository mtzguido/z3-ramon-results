ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:49:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28814 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/bxAo4TlSS6Ad.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             477534
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   102/102     0/0  66       0    18.23   0.00)
 (sat-cleaner :elim-literals 8 :elim-clauses 3 :cost 515 :time 0.00)
(sat.stats    234   2314    0   787/787   237/60  80       0    18.99   0.62)
(sat.stats    234   2314    0   836/836   237/60  80       0    18.99   0.62)
(sat.stats    234   2314    0   836/836   237/60  80       0    18.99   0.62)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 3 :elim-bin 338 :time 0.00)
 (sat-probing :cost 847818.99 :time 0.00)
(sat.stats    234   2314    0   183/183   233/64  80       0    18.99   0.62)
(sat.stats    285   2955    1   426/426   289/82  80       0    19.19   0.70)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    288   2969    2   509/509   292/83  80       0    19.19   0.70)
(sat.stats    297   3175    3   582/582   301/84  80       0    19.19   0.72)
(sat.stats    300   3189    4   614/614   304/84  80       0    19.19   0.72)
(sat.stats    303   3195    5   644/644   307/84  80       0    19.19   0.73)
(sat.stats    307   3202    6   671/671   311/84  80       0    19.19   0.73)
(sat.stats    310   3215    7   730/730   314/84  80       0    19.19   0.74)
(sat.stats    314   3296    8   828/828   326/86  80       0    19.19   0.74)
(sat.stats    317   3375    9   828/828   329/89  80       0    19.19   0.75)
(sat.stats    320   3457   10   828/828   332/92  80       0    19.19   0.75)
(sat.stats    323   3545   11   828/828   335/94  80       0    19.19   0.75)
(sat.stats    326   3603   12   828/828   338/94  80       0    19.19   0.75)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    329   3656   13   852/852   361/114  80       0    19.28   0.75)
(sat.stats    332   3728   14   887/887   364/115  80       0    19.28   0.76)
(sat.stats    504   7080   36  1347/1347   599/140  80       0    19.38   0.86)
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 0 := 65535 << 16
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3974 :time 0.00)
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&0
shl: (shl[32] (bv2int %1) (mod (+ #54 #378 #374) 32)) 65535 := 51600 << 16
(sat.stats    718  11084   63  2090/2088   834/199  85       0    19.68   0.93)
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 65535 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 32268 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 9482 := 65535&65536
ramon: poll                 wall=1.000s usage=0.962s mem=20900KiB load=0.96 rootload=0.95
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 4664 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 60576 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 16 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 37312 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 45184 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 8192 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 1280 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 5632 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 5120 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 4096 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 2048 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 49152 := 65535&65536
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 32768 := 65535&65536
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 6533 :time 0.00)
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 1 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 2 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 56812 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 36656 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 8 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 32 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 27520 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 64 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 19456 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 256 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 512 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 28672 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 2048 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 57344 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 16384 := 65536&65535
band: (band[17] (if (= #322 16) 1 (if #324 3 #365)) (shl[17] (bv2int %1) (mod #54 17))) 0 := 65535&65536
band: (band[17] (shl[32] (bv2int %1) (mod #379 32)) (if (= #399 31) 0 (if #401 1 #474))) 32768 := 65536&65535
 (sat-cleaner :elim-literals 23 :elim-clauses 1 :cost 6995 :time 0.00)
 (sat-cleaner :elim-literals 44 :elim-clauses 1 :cost 7277 :time 0.00)
(sat.stats   1200  26045   98  9404/9400  1440/357 329       0    22.25   1.33)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9266 :time 0.00)
(sat.stats   1742  33878  117 11345/11341  2062/498 330       0    22.90   1.78)
ramon: poll                 wall=2.000s usage=1.961s mem=24404KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.961s mem=25672KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.961s mem=27768KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   3201  61876  153 19543/19539  3648/611 330       0    27.18   4.05)
(sat.stats   3598  73531  237 21983/21979  4113/637 330       0    28.39   4.63)
ramon: poll                 wall=5.000s usage=4.961s mem=30368KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.960s mem=32452KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.960s mem=35088KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.960s mem=37948KiB load=1.00 rootload=1.00
(sat.stats   7723 133872  286 35144/35140  6833/802 330       0    37.36   8.26)
ramon: poll                 wall=9.000s usage=8.960s mem=40076KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.959s mem=45228KiB load=1.00 rootload=1.00
(sat.stats   9333 160076  288 48322/48318  7879/920 330       0    43.60   9.99)
ramon: poll                 wall=11.000s usage=10.959s mem=46972KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.958s mem=52308KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.958s mem=55916KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.957s mem=59832KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.957s mem=63644KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.957s mem=68240KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.957s mem=73016KiB load=1.00 rootload=0.99
(sat.stats  14172 238299  366 175637/175633 11958/2427 330       0    75.65  17.05)
ramon: poll                 wall=18.000s usage=17.956s mem=82176KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.956s mem=82236KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.956s mem=83408KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:50:15 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.001s
ramon: group.utime          19.949s
ramon: group.stime          0.052s
ramon: group.mempeak        83920KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.046s
ramon: loadavg              1.00
