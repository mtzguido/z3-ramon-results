ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:06:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41833 MiB
ramon: sys.mem.avail        61385 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7hVr2zqb11eL.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3698545
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts     :learned/bin    :gc          :time)
(sat.stats          :decisions   :clauses/bin :units       :memory       )
(sat.stats      0      0    0     8/8     0/0  79       0    18.03   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 29 :time 0.00)
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 1&0
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #61 #98) 64)) 0 := 256 >>l 8
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 41 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 74 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 179 :time 0.00)
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #138 #142) 64)) 6701356245527298049 := 0 << 55
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 256 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 330 :time 0.00)
 (sat-cleaner :elim-literals 17 :elim-clauses 0 :cost 592 :time 0.00)
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 0 := 72057594037927935 >>l 15
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 600 :time 0.00)
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #62))) 72057594037927919 := 72057594037927919 << 41
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 662 :time 0.00)
 (sat-cleaner :elim-literals 21 :elim-clauses 2 :cost 868 :time 0.00)
(sat.stats    254   4479    0  1306/1301   265/54 124       0    19.08   0.55)
(sat.stats    254   4479    0  1366/1361   265/54 124       0    19.08   0.55)
(sat.stats    254   4479    0  1366/1361   265/54 124       0    19.08   0.55)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :elim-bin 551 :time 0.00)
 (sat-probing :cost 1984019.08 :time 0.00)
(sat.stats    254   4479    0   250/245   245/59 124       0    19.08   0.55)
(sat.stats    257   4545    1   250/245   256/68 124       0    19.08   0.55)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin    :units         :memory       )
(sat.stats    261   4676    2   254/249   265/73 124       0    19.08   0.55)
(sat.stats    265   4736    3   256/251   269/73 124       0    19.08   0.55)
lshr: (lshr[56] (bv2int %1) (mod (bv2int %0) 56)) 0 := 0 >>l 24
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #62))) 72040001851883520 := 72057594037927928 << 32
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 0&72057559678189568
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 8 #61 #98) 64)) 0 := 0 >>l 32
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 0&72057559678189568
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #138 #142) 64)) 144115188075855856 := 144115188075855856 << 31
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1018 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1074 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 5 :cost 1180 :time 0.00)
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 1 := 1&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 2 := 2&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 4 := 4&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 8 := 8&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 16 := 16&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 32 := 32&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 64 := 64&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 128 := 128&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 256 := 256&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 512 := 512&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 1024 := 1024&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 2048 := 2048&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 4096 := 4096&72057559678189568
(sat.stats    400   8420    4  1338/1330   414/109 142       0    19.98   0.61)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1358 :time 0.00)
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 20799488 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 171737088 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 16384 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 1366425600 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 65536 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 1361838080 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 1876951040 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 524288 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 1048576 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 2403336192 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 964689920 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 1543503872 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 50331648 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 33554432 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 268435456 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 134217728 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 1073741824 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 536870912 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 2147483648 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 13 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 6 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 4 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 32 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 8 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 16 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 879552 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 2806016 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 640 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 7175680 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 1024 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 27437056 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 64385024 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 78618624 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 60456960 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 16384 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 164167680 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 2758672384 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 4251189248 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 3080192000 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 3356491776 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 1476395008 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 71303168 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 2097152 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 16777216 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 8388608 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 100663296 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 67108864 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 2415919104 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 2684354560 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 2147483648 := 4294967295&72057559678189568
band: (band[56] (lshr[56] (bv2int %1) (mod #61 56)) (shl[56] (bv2int %0) (+ 56 #124))) 0 := 4294967295&72057559678189568
band: (band[56] (lshr[64] (* 256 #56) (mod #99 64)) (shl[64] (* 2 #61) (mod #147 64))) 1073741824 := 4294967295&72057559678189568
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 2072 :time 0.00)
(sat.stats    571  13414    5  5549/5541   616/168 527       0    23.64   0.85)
(sat.stats    574  13645    6  6159/6151   619/168 527       0    23.64   0.86)
(sat.stats    577  13732    7  6159/6151   622/168 527       0    23.64   0.87)
(sat.stats :conflicts    :restarts      :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    581  13886    8  6159/6151   626/168 527       0    23.64   0.88)
(sat.stats    584  14138    9  6159/6151   629/168 527       0    23.64   0.89)
(sat.stats    587  14395   10  6159/6151   632/168 527       0    23.64   0.90)
(sat.stats    590  14553   11  6159/6151   635/168 527       0    23.64   0.91)
(sat.stats    593  14676   12  6159/6151   638/168 527       0    23.64   0.92)
(sat.stats    596  14747   13  6159/6151   641/168 527       0    23.74   0.93)
(sat.stats    599  14818   14  6159/6151   644/168 527       0    23.74   0.93)
(sat.stats    602  14869   15  6159/6151   647/168 527       0    23.74   0.94)
ramon: poll                 wall=1.003s usage=1.000s mem=25516KiB load=1.00 rootload=0.99
ramon: poll                 wall=2.000s usage=1.996s mem=34740KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.996s mem=39896KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.996s mem=43512KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.996s mem=55316KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.996s mem=57708KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.996s mem=59724KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.995s mem=61532KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.995s mem=63196KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.995s mem=65244KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.995s mem=66644KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.995s mem=67952KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.994s mem=69292KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=70528KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.994s mem=71644KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.994s mem=90068KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.993s mem=91240KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.993s mem=92964KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.993s mem=94800KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.003s usage=19.996s mem=95220KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:06:24 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.040s
ramon: group.total          20.006s
ramon: group.utime          19.962s
ramon: group.stime          0.044s
ramon: group.mempeak        102MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              1.00
