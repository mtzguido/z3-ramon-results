ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:14:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27159 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/uBhkWDe1chqM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             950951
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   95.2381     10000        49          0            1        2)
(sat.ddfw       1      1   59.8862     20001        98          1            1        3)
(sat.ddfw       1      1   64.1026     40001       196          2            1        5)
(smt.stats    0    101   4645    455  1121/958/99     118/25     6   17   52.04)
(smt.stats    1    202   7801   1886  1887/1699/102     227/54     8   19   52.25)
(smt.stats    2    313   9859   4262  2294/2072/103     348/56     9   20   52.34)
(sat.ddfw       1      1    46.225     70001       343          3            1        8)
(smt.stats    3    414  10543   5881  2347/2101/108     468/78    10   20   52.44)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 52837947 := 52837976&52837947
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 52837946 := 52837976&52837947
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 52837944 := 52837976&52837947
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 52837888 := 52837976&52837947
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 52837976&52837947
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 52837976&52837947
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 52837968&52837947
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 112&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 68719476848 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 112&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 68719476848 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 68&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 68719476804 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 74&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 73 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 74&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 73 := 37 << 1
(smt.stats    4    526  12598   7363  2450/2229/168     543/93    14   68   52.68)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 74&1
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 1 := 74&1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 74&1
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 1 := 74&1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1 := 74&1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 6763257216 := 6763257264&6763257228
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 75482734000 := 69 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 6763257216 := 6763257264&6763257228
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 75482734000 := 69 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 6763257216 := 6763257264&6763257228
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 75482734000 := 69 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 6763257222 := 6763257332&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 6763257220 := 6763257332&6763257228
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 625238547956 := 69 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 179 := 69 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 179 := 69 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 32 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 64 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 64 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 128 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 256 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 512 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 512 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1024 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2048 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4096 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8192 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16384 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 32768 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 65536 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 131072 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 262144 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 524288 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1048576 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2097152 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4194304 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8388608 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16777216 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 33554432 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8388608 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16777216 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 33554432 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 67108864 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 134217728 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 268435456 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 536870912 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1073741824 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2147483648 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1048576 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1048576 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1048576 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2097152 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 589824 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 655360 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 589824 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 655360 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 655360 := 42949672960&6763257228
(smt.stats    5    649  15076   9527  2604/2360/298     688/108    16   98   53.90)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 524288 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1048576 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8388608 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8388608 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 33554432 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 67108864 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 134217728 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 268435456 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 33554432 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 67108864 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 67108864 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 67108864 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 134217728 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 134217728 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2048 := 42949672960&6763257228
ramon: poll                 wall=1.000s usage=0.923s mem=56396KiB load=0.92 rootload=0.91
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2048 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4096 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8192 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8192 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8192 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2048 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2048 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 64 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 64 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 256 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 512 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 512 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1024 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4096 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 65536 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 536870912 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1073741824 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1610612736 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1610612736 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1610612736 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1073741824 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4294967296 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4294967296 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4294967296 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4294967296 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4294967296 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16777216 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16384 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 32768 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 262144 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4194304 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2147483648 := 42949672960&6763257228
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    751  17712  12769  2763/2505/438     939/242    18  131   54.09)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 48 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 32 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 2 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 4 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 8 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 16 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 6763257216 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 4 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 4 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 8 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 16 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 32 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 64 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 128 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 256 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 512 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 1024 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 2048 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 4096 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 8192 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 16384 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 32768 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 65536 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 131072 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 262144 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 524288 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 1048576 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 2097152 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 4194304 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 8388608 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 16777216 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 33554432 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 16777216 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 33554432 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 67108864 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 134217728 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 268435456 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 536870912 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 1073741824 := 42949672960&6763257228
(sat.ddfw       1      1   38.4986    110001       539          4            1       12)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 2147483648 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 4294967296 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 268435456 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 536870912 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 1073741824 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 536870912 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 536870912 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 42949672960&6763257228
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 268435456 := 42949672960&6763257228
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 60129542144&27053028915
(smt.stats    7    862  19995  15163  2947/2666/636    1157/255    19  143   55.10)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 64 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 64 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 512 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 512 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2048 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2048 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2048 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8192 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8192 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8192 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8192 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1024 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1024 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4096 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4096 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 4096 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 131072 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 131072 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 65536 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 65536 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2097152 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2097152 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2097152 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 2097152 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8388608 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8388608 := 60129542144&27053028915
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8388608 := 60129542144&27053028915
(smt.stats    8    984  25448  21984  2949/2717/682    1515/515    22  205   55.39)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 2&1
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 1 := 2&1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 2&1
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #561 35) 1 (if #563 3 #660))) 1 := 2&1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1 := 2&1
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1 := 2&1
(smt.stats    9   1118  32815  30127  3178/2887/689    1792/573    24  265   57.79)
(sat.ddfw       1      1   32.7433    160000       784          5            1       17)
(smt.stats   10   1219  43108  48687  3653/3250/689    1953/564    25  286   58.04)
(smt.stats   11   1330  51825  67061  3659/3252/691    2269/572    26  288   58.23)
ramon: poll                 wall=2.000s usage=1.906s mem=60968KiB load=0.98 rootload=0.96
(smt.stats   12   1452  59216  81050  3753/3340/709    2781/652    27  298   58.73)
(sat.ddfw       1      1   27.9464    220001      1078          6            1       23)
(sat.ddfw       1      1   24.6219    290001      1421          7            1       30)
ramon: poll                 wall=3.004s usage=2.907s mem=62100KiB load=1.00 rootload=1.00
(smt.stats   13   1586  69323  86784  3767/3351/709    3184/653    27  298   59.50)
(sat.ddfw       1      1   21.9901    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.978s mem=62324KiB load=1.07 rootload=1.08
(sat.ddfw       1      1   19.9159    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   14   1733  79246 103841  3832/3380/713    3635/797    29  328   59.79)
ramon: poll                 wall=5.000s usage=4.978s mem=62580KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.1785    560001      2745         10            1       57)
(smt.stats   15   1834  86054 114975  3906/3435/713    3976/805    30  344   59.88)
ramon: poll                 wall=6.000s usage=5.976s mem=62836KiB load=1.00 rootload=0.99
(smt.stats   16   1945  91924 123910  3964/3524/713    4337/811    30  344   60.09)
(sat.ddfw       1      1   16.6945    670001      3284         11            1       68)
(smt.stats   17   2067  99963 137793  3976/3569/713    4894/811    30  344   60.44)
ramon: poll                 wall=7.000s usage=6.976s mem=63064KiB load=1.00 rootload=1.00
(smt.stats   18   2201 110980 158391  3988/3578/717    5445/977    32  363   60.53)
(smt.stats   19   2348 123165 183142  4004/3587/719    5978/1008    34  373   60.92)
(sat.ddfw       1      1    15.446    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.977s mem=63796KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.975s mem=64308KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.3694    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2509 131755 199879  4113/3703/727    6717/1059    35  382   61.20)
ramon: poll                 wall=10.000s usage=10.035s mem=64308KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   13.5856   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=11.027s mem=64308KiB load=0.99 rootload=0.99
(smt.stats   21   2610 138993 209440  4184/3738/728    6930/1130    36  413   61.53)
(sat.ddfw       1      1    12.714   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=12.026s mem=64564KiB load=1.00 rootload=1.00
(smt.stats   22   2721 147232 219609  4342/3817/728    7259/1142    36  413   61.83)
ramon: poll                 wall=13.000s usage=13.110s mem=65572KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   11.9716   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=14.095s mem=65080KiB load=0.98 rootload=0.99
(smt.stats   23   2843 154761 231712  4556/4121/730    7777/1208    37  429   62.21)
ramon: poll                 wall=15.004s usage=15.098s mem=65220KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3092   1540001      7549         17            1      156)
(smt.stats   24   2977 159720 242930  4591/4181/734    8599/1356    38  443   62.41)
ramon: poll                 wall=16.000s usage=16.096s mem=65472KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.7079   1720001      8431         18            1      174)
(smt.stats   25   3124 171140 256044  4657/4185/734    9125/1362    38  443   62.41)
ramon: poll                 wall=17.000s usage=17.095s mem=65808KiB load=1.00 rootload=1.00
(smt.stats   26   3285 183959 274497  4785/4332/736    9770/1475    39  466   62.60)
ramon: poll                 wall=18.000s usage=18.098s mem=65692KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.1675   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=19.100s mem=65992KiB load=1.00 rootload=1.00
(smt.stats   27   3462 194789 288972  4885/4395/736   10178/1548    40  472   62.79)
ramon: poll                 wall=20.000s usage=20.099s mem=66100KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:14:33 2024
ramon: root.execname        z3
ramon: root.utime           20.130s
ramon: root.stime           0.030s
ramon: group.total          20.173s
ramon: group.utime          20.141s
ramon: group.stime          0.032s
ramon: group.mempeak        66364KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.00
