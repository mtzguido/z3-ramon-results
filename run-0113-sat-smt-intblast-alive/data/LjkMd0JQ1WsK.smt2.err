ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:42:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40599 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LjkMd0JQ1WsK.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3807301
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   214/214     0/0  63       0    18.54   0.00)
(sat.stats    102    524    0   214/214   102/27  63       0    18.73   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 385 :time 0.00)
(sat.stats    102    524    0   214/214   102/27  63       0    18.73   0.00)
(sat.stats    102    524    0   214/214   102/27  63       0    18.73   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 340018.83 :time 0.00)
(sat.stats    102    524    0   214/214    42/27  63       0    18.83   0.00)
(sat.stats    105    544    1   214/214    45/30  63       0    18.83   0.00)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    179   1622    2   214/214   119/82  63       0    18.92   0.01)
(sat.stats    182   1652    3   214/214   122/82  63       0    18.92   0.01)
(sat.stats    185   1720    4   214/214   125/82  63       0    18.92   0.01)
(sat.stats    188   1783    5   214/214   128/82  63       0    18.92   0.01)
(sat.stats    191   1843    6   214/214   131/82  63       0    18.92   0.01)
(sat.stats    194   1886    7   214/214   134/85  63       0    18.92   0.01)
(sat.stats    197   1925    8   214/214   137/88  63       0    18.92   0.01)
(sat.stats    200   1997    9   214/214   140/91  63       0    18.92   0.01)
(sat.stats    203   2079   10   214/214   143/94  63       0    18.92   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1476 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    270   3698   11   224/224   210/119  67       0    19.51   0.04)
(sat.stats    273   3770   12   224/224   213/120  67       0    19.51   0.04)
(sat.stats    276   3846   13   225/225   216/120  73       0    19.42   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2250 :time 0.00)
(sat.stats    315   4558   26   547/547   256/124  73       0    19.61   0.14)
 (sat-cleaner :elim-literals 268 :elim-clauses 2 :cost 4882 :time 0.00)
ramon: poll                 wall=1.004s usage=0.955s mem=21892KiB load=0.95 rootload=0.95
(sat.stats   1200  26150   53  9389/9389  1231/191  74       0    20.84   0.95)
(sat.stats   1203  26301   54  9392/9392  1234/191  74       0    20.84   0.96)
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1206  26372   55  9580/9580  1237/193  74       0    20.84   0.96)
(sat.stats   1836  36550   86  9709/9709  1884/465  74       0    21.05   1.13)
lshr: (lshr[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 2 >>l 30
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 1&2199023253504
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 23 #63 #252) 64)) 18446744073709551615 := 9007199254740992 >>l 53
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11987 :time 0.00)
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 1&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 1 := 1&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 1 := 1&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 2 := 2&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 4 := 1990&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 1952 := 2047&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 24 := 2047&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 16 := 2047&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 576 := 2047&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 1536 := 2047&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 128 := 2047&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 256 := 2047&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 1024 := 2047&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 72&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 14 := 72&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 72&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 4 := 72&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 72&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 48 := 72&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 31&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 10 := 31&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 22&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 8 := 22&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 55&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 36 := 55&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 55&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 32 := 55&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 70&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 64 := 70&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 130&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 128 := 130&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 258&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 256 := 258&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 514&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 512 := 514&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 1026&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 1024 := 1026&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 1035&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 8 := 1035&2199023253504
band: (band[41] (lshr[41] (bv2int %0) (mod #63 41)) (if (= #453 40) 1208925819613529663078400 (if #455 604462909806764831539200 #533))) 0 := 1046&2199023253504
band: (band[41] (lshr[64] (* 8388608 #69) (mod #253 64)) (if (= #556 63) 20282409603633223679873541734400 (if #558 10141204801816611839936770867200 #682))) 16 := 1046&2199023253504
 (sat-cleaner :elim-literals 16 :elim-clauses 1 :cost 16415 :time 0.00)
ramon: poll                 wall=2.000s usage=1.951s mem=36996KiB load=1.00 rootload=0.98
(sat.stats   2396  50384  223 41949/41945  2498/614 237       0    37.75   2.09)
ramon: poll                 wall=3.000s usage=2.950s mem=55352KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.950s mem=62240KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.949s mem=83740KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.949s mem=87548KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.948s mem=91700KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.947s mem=95540KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.947s mem=98264KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.946s mem=98MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.946s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.946s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.945s mem=105MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.945s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.944s mem=109MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.944s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.944s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.943s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.943s mem=149MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.942s mem=150MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:42:43 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.060s
ramon: group.total          20.003s
ramon: group.utime          19.939s
ramon: group.stime          0.064s
ramon: group.mempeak        181MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
