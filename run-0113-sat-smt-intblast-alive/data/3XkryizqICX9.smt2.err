ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:54:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42011 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1305
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3XkryizqICX9.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3663663
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   226/226     0/0  72       0    18.61   0.00)
(sat.stats    101    651    0   226/226   101/29  72       0    18.81   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 405 :time 0.00)
(sat.stats    101    651    0   226/226   101/29  72       0    18.81   0.00)
(sat.stats    101    651    0   226/226   101/29  72       0    18.81   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 437618.91 :time 0.00)
(sat.stats    101    651    0   226/226   101/29  72       0    18.91   0.01)
(sat.stats    104    671    1   226/226   104/32  72       0    18.91   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    691    2   226/226   107/35  72       0    18.91   0.01)
(sat.stats    110    749    3   226/226   110/38  72       0    18.91   0.01)
(sat.stats    113    833    4   226/226   113/41  72       0    18.91   0.01)
(sat.stats    123   1107    5   226/226   123/49  72       0    18.91   0.01)
(sat.stats    126   1157    6   226/226   126/49  72       0    18.91   0.01)
(sat.stats    129   1222    7   226/226   129/49  72       0    18.91   0.01)
(sat.stats    160   2170    8   226/226   160/70  72       0    18.91   0.01)
(sat.stats    163   2204    9   226/226   163/70  72       0    18.91   0.01)
(sat.stats    166   2254   10   226/226   166/70  72       0    18.91   0.01)
(sat.stats    169   2316   11   226/226   169/70  72       0    18.91   0.01)
(sat.stats    172   2383   12   226/226   172/70  72       0    18.91   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   7899   23   226/226   400/238  72       0    19.10   0.04)
(sat.stats    475   9035   24   243/243   475/250  72       0    19.69   0.09)
(sat.stats    478   9084   25   243/243   478/250  72       0    19.69   0.09)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #76))) 0 := 0 << 9
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 511&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #811 #815) 64)) 26090 := 0 << 8
 (sat-cleaner :elim-literals 8 :elim-clauses 0 :cost 4220 :time 0.00)
(sat.stats    709  13729   73  1054/1051   708/285  90       0    20.16   0.20)
 (sat-cleaner :elim-literals 17 :elim-clauses 1 :cost 7147 :time 0.00)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #76))) 0 := 140187732541440 << 38
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #811 #815) 64)) 1621577340830089215 := 280375465082880 << 37
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 1 := 274877906943&274877906944
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 30832 := 274877906943&12369505812480
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 274542 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 940320 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 2461696 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 71428288 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 263843328 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 7226368 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 243443712 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 135897088 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 153026560 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 2122088448 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 1048576 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 2097152 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 72313995264 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 178257920000 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 8388608 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 103918075904 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 183408525312 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 181462368256 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 134217728 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 805306368 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 536870912 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 188978561024 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 4294967296 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 2147483648 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 8589934592 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 103079215104 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 137438953472 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 68719476736 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 1 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 26254 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 274877563320 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 433520 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 4 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 852992 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 448 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 32 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 768 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 128 := 274877906943&11819749998592
band: (band[47] (if (= #58 46) 1 (if #586 3 #716)) (shl[47] (bv2int %0) (+ 47 #719))) 0 := 274877906943&11819749998592
band: (band[47] (if (= #344 63) 1 (if #562 3 #804)) (shl[64] (* 2 #323) (mod #819 64))) 512 := 274877906943&11819749998592
(sat.stats   1220  24455   79 12360/12350  1283/394  93       0    23.61   0.94)
 (sat-cleaner :elim-literals 189 :elim-clauses 1 :cost 10346 :time 0.00)
ramon: poll                 wall=1.002s usage=0.999s mem=25552KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 10 :elim-clauses 1 :cost 10740 :time 0.00)
ramon: poll                 wall=2.000s usage=1.995s mem=30928KiB load=1.00 rootload=0.99
(sat.stats   1742  43865  136 46258/46248  2318/958 347       0    29.63   2.05)
 (sat-cleaner :elim-literals 66 :elim-clauses 2 :cost 12821 :time 0.00)
ramon: poll                 wall=3.000s usage=2.994s mem=31348KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.994s mem=31604KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.994s mem=31608KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.993s mem=36440KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.993s mem=40928KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.993s mem=44100KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.992s mem=47680KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.992s mem=50472KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.992s mem=53544KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.992s mem=64920KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.992s mem=69656KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.992s mem=71192KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.992s mem=73496KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.992s mem=79116KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.992s mem=79116KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.992s mem=80652KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 2 :cost 19911 :time 0.01)
ramon: poll                 wall=19.000s usage=18.992s mem=81676KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.992s mem=81676KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:54:54 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.010s
ramon: group.utime          19.986s
ramon: group.stime          0.024s
ramon: group.mempeak        81696KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.00
