ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:44:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42434 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1259
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BVlrNmk3wpTY.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2845507
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2845    756   835/582/105     133/73     6   19   18.66)
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 9&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 9&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 2&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 1&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 2&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 4&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 1&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 1 := 1&511
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 1 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 1&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 1 := 1&511
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 1 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 511 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 510 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 508 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 504 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 496 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 448 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10272&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10244&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10256&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10272&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10272&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10304&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10272&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 32 := 10272&511
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 10272 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 511 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 510 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 508 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 10241 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 33554431 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 33554431 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 1 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 8 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 64 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 64 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 256 := 10240&511
(smt.stats    1    202   4195   2454  1170/1048/227     274/86    10   49   19.24)
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 8 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 2 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 10239 := 10 << 10
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 1 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 510 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 2 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 8 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 64 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 32 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 16 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 4 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 8 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 64 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 128 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 256 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 1 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 2 := 10240&511
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 10240&511
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 1 := 10240&511
(smt.stats    2    313   5981   4891  1326/1197/332     543/143    13   75   19.84)
(smt.stats    3    416   7972   8479  1506/1367/351     807/186    17   86   20.08)
(smt.stats    4    527  10364  13831  1581/1429/367    1115/291    21  156   20.37)
(smt.stats    5    649  11638  15896  1760/1486/367    1347/295    21  156   20.56)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    750  12009  16658  1960/1695/367    1529/296    21  156   20.56)
(smt.stats    7    861  13514  21031  2187/1934/369    1732/320    22  157   20.65)
(smt.stats    8    983  15815  27804  2300/2126/378    2253/465    24  174   20.84)
ramon: poll                 wall=1.001s usage=0.992s mem=22380KiB load=0.99 rootload=0.98
(smt.stats    9   1117  18755  34955  2381/2143/383    2690/544    25  205   20.94)
(smt.stats   10   1218  21217  40564  2542/2301/383    3022/550    25  205   21.13)
(smt.stats   11   1329  25265  49590  2585/2388/383    3225/551    25  205   21.23)
(smt.stats   12   1451  28177  56922  2648/2476/388    3774/625    26  210   21.23)
(smt.stats   13   1585  30056  62717  2726/2483/395    4500/679    27  228   21.42)
ramon: poll                 wall=2.000s usage=1.990s mem=22844KiB load=1.00 rootload=1.00
(smt.stats   14   1732  32120  68528  2947/2624/396    4872/718    28  272   21.61)
(smt.stats   15   1833  33567  75984  3045/2819/397    5265/720    28  272   21.71)
(smt.stats   16   1944  36427  83896  3144/2894/397    5604/776    29  279   21.80)
(smt.stats   17   2066  39820  94752  3202/2991/401    6109/860    30  306   21.80)
(smt.stats   18   2200  42827 106387  3348/3041/401    6483/865    30  306   21.99)
ramon: poll                 wall=3.000s usage=2.990s mem=23460KiB load=1.00 rootload=1.00
(smt.stats   19   2347  45801 119416  3587/3251/404    7112/935    31  306   22.19)
(smt.stats   20   2508  49631 132035  3780/3444/404    7945/944    31  306   22.29)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2609  51112 140450  3924/3641/405    8226/1060    32  323   22.38)
(smt.stats   22   2720  53289 158409  4187/3851/405    8692/1060    32  323   22.48)
(smt.stats   23   2842  56999 183695  4377/4024/405    9285/1062    32  323   22.57)
ramon: poll                 wall=4.000s usage=3.990s mem=23988KiB load=1.00 rootload=1.00
(smt.stats   24   2976  59924 197377  4519/4237/405    9896/1063    32  323   22.76)
(smt.stats   25   3123  64529 211065  4668/4443/406   10848/1325    33  323   22.86)
(smt.stats   26   3284  70391 243124  4756/4502/406   11789/1330    33  323   23.05)
(smt.stats   27   3461  74601 268851  4920/4594/406   12603/1332    33  323   23.15)
(smt.stats   28   3562  77233 282182  4978/4762/406   13673/1336    33  323   23.24)
ramon: poll                 wall=5.000s usage=4.989s mem=24548KiB load=1.00 rootload=1.00
(smt.stats   29   3673  80050 307244  5128/4819/406   14347/1337    33  323   23.34)
(smt.stats   30   3795  83470 328680  5250/4960/406   15073/1339    33  323   23.54)
(smt.stats   31   3929  87575 355815  5364/5084/406   15693/1343    33  323   23.63)
(smt.stats   32   4076  90723 366327  5446/5201/406   16461/1345    33  323   23.73)
ramon: poll                 wall=6.001s usage=5.990s mem=25208KiB load=1.00 rootload=1.00
(smt.stats   33   4237  92787 376510  5742/5302/407   16732/1893    34  325   23.83)
(smt.stats   34   4414  94828 391595  5983/5628/407   17048/1894    34  325   23.93)
(smt.stats   35   4608  98359 414945  6189/5960/407   17934/1895    34  325   24.02)
(smt.stats   36   4709 102348 436977  6361/6179/408   19278/2229    35  326   24.26)
ramon: poll                 wall=7.001s usage=6.982s mem=25600KiB load=0.99 rootload=0.99
(smt.stats   37   4820 105776 458657  6515/6202/408   19772/2230    35  326   24.35)
(smt.stats   38   4942 108429 480755  6650/6355/408   20490/2232    35  326   24.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 6)
(smt.stats   39   5076 110593 491862  6704/6485/408   21968/2234    35  326   24.64)
(smt.stats   40   5223 113716 518655  6770/6540/408   22922/2237    35  326   24.83)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5384 117789 547571  6915/6624/408   24126/2238    35  326   24.92)
ramon: poll                 wall=8.000s usage=7.978s mem=26368KiB load=1.00 rootload=0.99
(smt.stats   42   5561 120002 568905  7158/6759/409   24993/2907    36  336   25.02)
(smt.stats   43   5755 124415 622012  7293/6990/409   25934/2908    36  336   25.31)
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8687774&4194303
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8685212&4194303
(smt.stats   44   5968 127311 647982  7733/7136/409   27223/2915    36  336   25.50)
(smt.stats   45   6069 128882 663571  7795/7565/413   27612/3466    37  443   25.77)
(smt.stats   46   6180 130627 684787  7904/7647/413   28138/3467    37  443   25.77)
ramon: poll                 wall=9.000s usage=8.977s mem=27136KiB load=1.00 rootload=1.00
(smt.stats   47   6302 132048 694822  8023/7750/413   28388/3468    37  443   25.87)
(smt.stats   48   6436 133318 699696  8159/7887/413   28643/3468    37  443   25.96)
(smt.stats   49   6583 134676 716669  8437/8231/414   29101/3474    37  443   26.20)
(smt.stats   50   6744 136363 722566  8904/8575/414   29313/3611    38  445   26.20)
ramon: poll                 wall=10.001s usage=9.981s mem=27648KiB load=1.00 rootload=1.01
(smt.stats   51   6921 138201 765873  9146/8876/414   29717/3611    38  445   26.20)
(smt.stats   52   7115 141383 819080  9374/9016/416   30717/3617    38  445   26.54)
(smt.stats   53   7328 145554 871670  9950/9261/416   31470/3770    39  466   26.73)
ramon: poll                 wall=11.001s usage=10.981s mem=28416KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   54   7562 152102 945635 10210/10017/417   32640/3874    40  468   26.92)
(smt.stats   55   7663 156537 1000010 10210/10017/417   32982/3874    40  468   26.92)
(smt.stats   56   7774 161185 1054813 10230/10021/417   33438/3874    40  468   27.02)
(smt.stats   57   7896 164737 1096982 10460/10096/417   33936/3876    40  468   27.20)
(smt.stats   58   8030 167208 1119602 10501/10277/417   35180/3878    40  468   27.20)
ramon: poll                 wall=12.000s usage=11.977s mem=29016KiB load=1.00 rootload=0.99
(smt.stats   59   8177 169850 1151661 10711/10329/417   35701/3878    40  468   27.40)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   60   8338 172073 1193154 11257/10621/417   36223/3878    40  468   27.61)
(smt.stats   61   8515 173183 1211492 11629/11068/417   36456/3881    40  468   27.83)
ramon: poll                 wall=13.000s usage=12.977s mem=29528KiB load=1.00 rootload=1.00
(smt.stats   62   8709 177017 1284300 12052/11625/417   37370/3881    40  468   27.92)
(smt.stats   63   8922 184164 1457449 12120/11899/417   38769/3881    40  468   28.02)
(smt.stats   64   9156 186878 1503250 12358/11961/417   39973/3882    40  468   28.30)
ramon: poll                 wall=14.000s usage=13.977s mem=30100KiB load=1.00 rootload=1.00
(smt.stats   65   9413 191216 1610160 12467/12160/420   40729/5310    41  471   28.40)
(smt.stats   66   9514 193100 1636270 12492/12276/421   41513/5446    42  472   28.65)
(smt.stats   67   9625 195357 1687081 12608/12300/421   41883/5446    42  472   28.75)
(smt.stats   68   9747 198330 1727634 12725/12421/421   42145/5446    42  472   28.75)
(smt.stats   69   9881 201711 1814409 12814/12524/421   42764/5731    43  478   28.85)
ramon: poll                 wall=15.000s usage=14.977s mem=30356KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 1211)
(smt.stats   70  10028 204157 1857581 12866/12611/421   42560/5732    43  478   29.12)
(smt.stats   71  10189 206517 1936151 12890/12656/421   43158/5732    43  478   29.22)
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8685296&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 8685296 := 23265280 << 5
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8685280&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 8685280 := 23265280 << 5
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 8685280&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #238) 32)) 8685280 := 23265280 << 5
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 12599808 := 23265280 << 5
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
shl: (shl[25] (bv2int %0) (mod (bv2int %0) 25)) 12599296 := 23265280 << 5
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 2 := 6291456&15
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 2 := 6291456&15
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 4 := 6291456&15
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 8 := 6291456&15
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 8 := 6291456&15
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 1 := 6291456&15
band: (band[25] (shl[32] (bv2int %0) (mod #239 32)) (if (or #455 #456) 0 (if #457 1 #520))) 0 := 6291456&15
band: (band[25] (shl[25] (bv2int %0) (mod #101 25)) (if (= #369 24) 0 (if #371 1 #435))) 1 := 6291456&15
(smt.stats   72  10366 209173 2003462 12982/12690/421   44259/5741    43  478   29.52)
(smt.stats   73  10560 212140 2040859 13073/12783/433   46509/6096    44  480   29.62)
ramon: poll                 wall=16.000s usage=15.976s mem=31184KiB load=1.00 rootload=1.00
(smt.stats   74  10773 215522 2092036 13281/12865/433   47270/6097    44  480   29.71)
(smt.stats   75  11007 219847 2149411 13728/13504/434   48383/6374    45  495   29.90)
(smt.stats   76  11264 228304 2258103 13974/13526/434   49544/6376    45  495   30.00)
ramon: poll                 wall=17.000s usage=16.976s mem=31696KiB load=1.00 rootload=1.00
(smt.stats   77  11546 235000 2393656 14397/13773/434   51652/6382    45  495   30.29)
(smt.stats   78  11647 237917 2443032 14517/14193/434   51974/6384    45  495   30.38)
ramon: poll                 wall=18.000s usage=17.976s mem=31952KiB load=1.00 rootload=1.00
(smt.stats   79  11758 240835 2479822 14663/14327/434   52569/6386    45  495   30.48)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   80  11880 243468 2520079 14757/14461/434   53129/6386    45  495   30.57)
(smt.stats   81  12014 246713 2562976 14787/14564/434   54352/6386    45  495   30.67)
(smt.stats   82  12161 251426 2641405 14864/14619/434   55477/6387    45  495   30.76)
(smt.stats   83  12322 256755 2716799 14993/14661/435   56225/7043    46  501   30.95)
ramon: poll                 wall=19.000s usage=18.976s mem=32720KiB load=1.00 rootload=1.00
(smt.stats   84  12499 263463 2862767 15003/14759/435   58080/7043    46  501   31.05)
(smt.stats   85  12693 270039 2957561 15006/14762/435   60954/7043    46  501   31.25)
(smt.stats   86  12906 276074 3022343 15243/14771/435   62693/7049    46  501   31.74)
ramon: poll                 wall=20.000s usage=19.976s mem=33488KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:44:41 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.995s
ramon: group.utime          19.979s
ramon: group.stime          0.016s
ramon: group.mempeak        33744KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.00
