ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:58:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27562 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/iganwLMonOUr.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             899092
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   86.9565     10000        49          0            1        2)
(sat.ddfw       1      1   42.9227     20001        98          1            1        3)
(smt.stats    0    101   2336    698  1221/1101/107      98/46     5   21   52.05)
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 29&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 29&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 30&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 29&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 30&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 32&78353561
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 32 := 28 << 28
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 29&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 30&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 32&78353561
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 32 := 28 << 28
(smt.stats    1    202   4390   1687  2275/2064/119     205/73     7   25   52.34)
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192769&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 7516192768 := 28 << 28
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755813887 := 28 << 28
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 78353560 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 2 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 78353561 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 4 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 8 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 16 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 16 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 32 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 64 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 128 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 128 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 256 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 512 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 1024 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 2048 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 4096 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 8192 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 16384 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 32768 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 65536 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192769&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192770&78353561
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 7516192770 := 28 << 28
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 7516192769 := 28 << 28
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 128 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 128 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 256 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 131072 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 262144 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 524288 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 1048576 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 2097152 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 4194304 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 8388608 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 16777216 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 16777216 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 33554432 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 67108864 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 16777216 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 33554432 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 67108864 := 7516192768&78353561
(sat.ddfw       1      1     41.58     40001       196          2            1        5)
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 67108864 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 67108864 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 67108864 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 67108864 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 33554432 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 33554432 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 524288 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 8388608 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 131072 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 77824 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 77824 := 7516192768&78353561
(smt.stats    2    313   6599   3786  2491/2177/223     436/94     9   46   53.04)
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 1 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 76832 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 76832 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 76832 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 76816 := 7516192768&78353561
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 7516192768&78353561
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #588 38) 0 (if #590 1 #695))) 76815 := 7516192768&78353561
(smt.stats    3    414   8664   7156  2675/2313/326     620/162    11   71   53.43)
(smt.stats    4    525  12197  11062  2764/2546/349     769/309    18  102   53.52)
(sat.ddfw       1      1   34.8028     70001       343          3            1        8)
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 67108862&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 0&1253656988
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 21032008171913216 := 71 << 32
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 0&1253656988
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 21032008171913216 := 71 << 32
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 0&1253656988
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 21032008171913216 := 71 << 32
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 0&1253656988
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 21032008171913216 := 71 << 32
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 0&1253656988
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 21032008171913216 := 71 << 32
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 1253656988 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 1253656988 := 304942678015&1253656988
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 304942678015 := 71 << 32
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 1253656988 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 1253656988 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 1253656984 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 304942678016&1253656988
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 72 := 71 << 32
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 304942678016&1253656988
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 72 := 71 << 32
(smt.stats    5    647  16299  17875  2870/2616/355     905/330    21  108   53.72)
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 1253656980 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 4 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 4 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 2 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 304942678016&1253656988
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 305076895744 := 71 << 32
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 16 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 32 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 64 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 128 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 256 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 512 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 1024 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 2048 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 4096 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 8192 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 4096 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 8192 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 16384 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 32768 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 65536 := 304942678016&1253656988
ramon: poll                 wall=1.000s usage=0.955s mem=56268KiB load=0.95 rootload=0.94
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 131072 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 131072 := 304942678016&1253656988
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 131072 := 304942678016&1253656988
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  18292  19605  2977/2735/448    1085/334    23  128   54.25)
(smt.stats    7    859  18724  20259  3263/2854/458    1410/334    23  128   54.52)
(sat.ddfw       1      1   29.3686    110001       539          4            1       12)
(smt.stats    8    981  22158  28187  3471/3218/463    1736/395    25  132   54.80)
(sat.ddfw       1      1   25.7727    160000       784          5            1       17)
ramon: poll                 wall=2.004s usage=1.987s mem=57092KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   24.3412    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=3.200s mem=57440KiB load=1.22 rootload=1.21
(sat.ddfw       1      1   21.5054    290001      1421          7            1       30)
(smt.stats    9   1115  24711  30868  3643/3284/463    2077/458    26  138   54.99)
ramon: poll                 wall=4.000s usage=4.200s mem=57480KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.7661    370001      1813          8            1       38)
(smt.stats   10   1216  25084  32054  3957/3532/463    2224/464    26  138   55.08)
ramon: poll                 wall=5.000s usage=5.200s mem=57480KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.6728    460001      2254          9            1       47)
(smt.stats   11   1327  27038  36720  4222/3937/464    2412/741    27  138   55.27)
(smt.stats   12   1449  30638  47963  4271/4041/469    3301/839    29  148   55.38)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   13   1583  39441  62854  4316/4080/475    3933/1725    32  160   55.68)
ramon: poll                 wall=6.000s usage=6.198s mem=58248KiB load=1.00 rootload=1.00
(smt.stats   14   1730  52155  67759  4427/4172/475    4087/1741    33  165   55.80)
(smt.stats   15   1831  60124  79049  4435/4180/475    4231/1741    33  165   56.21)
(smt.stats   16   1942  68655  98025  4441/4186/478    4452/1800    36  190   56.34)
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 262146&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 21034756951244802 := 68719476736 << 1
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 21034756950982658 := 68719476736 << 1
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 427885854722&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #705) 64)) 1152922482248515586 := 68719476736 << 1
(smt.stats   17   2064  77121 117258  4474/4192/480    4709/1811    37  193   56.34)
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 137438953472&0
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 427886116865 := 68719476736 << 1
band: (band[39] (shl[64] (bv2int %0) (mod #706 64)) (if (or #721 #722) 0 (if #723 1 #868))) 0 := 137438953472&0
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 427886116865 := 68719476736 << 1
(smt.stats   18   2198  80657 133408  4536/4271/496    4898/1863    39  205   56.54)
(sat.ddfw       1      1   15.0038    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=7.198s mem=59208KiB load=1.00 rootload=1.00
(smt.stats   19   2345  89040 165126  4824/4480/501    5239/1884    41  214   56.79)
(smt.stats   20   2506  95502 187347  4872/4546/507    6356/2005    43  237   57.22)
ramon: poll                 wall=8.000s usage=8.198s mem=59720KiB load=1.00 rootload=1.00
(smt.stats   21   2607 101857 196475  4942/4551/507    6781/2015    43  237   57.41)
(sat.ddfw       1      1   13.6663    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=9.199s mem=60104KiB load=1.00 rootload=0.99
(smt.stats   22   2718 109843 208641  5096/4717/508    7217/2339    45  248   57.60)
(sat.ddfw       1      1   12.5958    790001      3872         12            1       80)
ramon: poll                 wall=10.004s usage=10.253s mem=60188KiB load=1.05 rootload=1.06
ramon: poll                 wall=11.004s usage=11.253s mem=60188KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.7149    920001      4509         13            1       93)
(smt.stats   23   2840 117296 223734  5339/4799/508    7576/2347    45  248   57.79)
ramon: poll                 wall=12.000s usage=12.249s mem=60444KiB load=1.00 rootload=0.99
(smt.stats   24   2974 123143 239929  5537/5160/510    8211/2491    46  249   57.99)
(sat.ddfw       1      1   10.8822   1060001      5196         14            1      108)
ramon: poll                 wall=13.000s usage=13.249s mem=60444KiB load=1.00 rootload=1.00
(smt.stats   25   3121 130855 250920  5653/5226/510    8932/2542    47  252   58.08)
ramon: poll                 wall=14.000s usage=14.249s mem=60956KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.1626   1210001      5931         15            1      123)
ramon: poll                 wall=15.000s usage=15.249s mem=60956KiB load=1.00 rootload=1.00
(smt.stats   26   3282 140103 268436  5906/5409/511    9438/2657    48  256   58.55)
ramon: poll                 wall=16.000s usage=16.249s mem=61076KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.53232   1370001      6715         16            1      139)
ramon: poll                 wall=17.000s usage=17.249s mem=61076KiB load=1.00 rootload=1.00
(smt.stats   27   3459 147057 286288  6075/5593/511   10117/2664    48  256   58.74)
ramon: poll                 wall=18.000s usage=18.249s mem=61076KiB load=1.00 rootload=1.00
(smt.stats   28   3560 150736 293221  6142/5782/511   10586/2666    48  256   58.84)
(smt.stats   29   3671 155300 303150  6205/5839/511   10850/2671    48  256   58.84)
(sat.ddfw       1      1   8.97808   1540001      7549         17            1      156)
ramon: poll                 wall=19.000s usage=19.249s mem=61332KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=20.248s mem=61844KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:58:24 2024
ramon: root.execname        z3
ramon: root.utime           20.270s
ramon: root.stime           0.020s
ramon: group.total          20.302s
ramon: group.utime          20.278s
ramon: group.stime          0.024s
ramon: group.mempeak        61844KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              1.01
