ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:15:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41651 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1252
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QKRob011kly4.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2953210
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4008    619  1393/1257/113      70/30    11   27   19.26)
(smt.stats    1    202   5650   1603  2355/2128/114     184/52    12   28   19.46)
(smt.stats    2    313   7438   2808  2445/2150/114     302/57    12   28   19.56)
(smt.stats    3    414   8158   3565  2576/2230/114     416/59    12   28   19.75)
(smt.stats    4    525   9626   4541  2929/2662/126     539/109    15   41   19.75)
(smt.stats    5    647  12033   6325  3034/2774/129     687/158    17   49   19.87)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  12934   9387  3140/2800/129     804/159    17   49   19.87)
(smt.stats    7    859  15619  12573  3234/2924/130     917/176    18   49   19.87)
(smt.stats    8    981  17669  15590  3266/2997/134    1028/186    20   57   19.98)
(smt.stats    9   1115  20795  18636  3313/3014/134    1218/186    20   57   19.98)
(smt.stats   10   1216  22150  20584  3334/3056/134    1320/186    20   57   19.98)
(smt.stats   11   1327  23163  22602  3338/3080/134    1431/186    20   57   20.08)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26985  26116  3344/3085/134    1555/186    20   57   20.08)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 1 := 2 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 1 := 2 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 1 := 2 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1 := 576460752303423485&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 576460752303423485 := 576460752303423486 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1 := 576460752303423484&1
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 576460752303423484&1
shl: (shl[59] (bv2int %1) (mod (bv2int %0) 59)) 576460752303423487 := 144115188075855871 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 576460752303423484&1
shl: (shl[59] (bv2int %1) (mod (bv2int %0) 59)) 576460752303423485 := 144115188075855871 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1 := 576460752303423484&1
(smt.stats   13   1583  28437  27624  3392/3130/150    1687/209    21   61   20.18)
(smt.stats   14   1730  29503  32033  3393/3131/150    1833/209    21   61   20.31)
(smt.stats   15   1831  30283  36179  3401/3139/151    1938/224    22   63   20.31)
(smt.stats   16   1942  31364  39803  3409/3143/151    2050/225    22   63   20.31)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 1&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 1 := 384307168202282326 << 1
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 576460752303423488 := 384307168202282326 << 1
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 192153584101141164&0
shl: (shl[59] (bv2int %1) (mod (bv2int %0) 59)) 384307168202282327 := 384307168202282326 << 1
(smt.stats   17   2064  31956  45894  3444/3176/167    2214/280    24   70   20.41)
(smt.stats   18   2198  32634  48793  3476/3205/167    2354/281    24   70   20.41)
(smt.stats   19   2345  34063  52578  3555/3229/167    2487/284    24   70   20.41)
(smt.stats   20   2506  35346  57214  3624/3312/167    2640/291    24   70   20.51)
(smt.stats   21   2607  36390  60223  3626/3359/170    2737/303    25   74   20.51)
(smt.stats   22   2718  37059  63978  3634/3369/171    2849/305    26   74   20.51)
ramon: poll                 wall=1.003s usage=1.002s mem=21628KiB load=1.00 rootload=0.98
(smt.stats   23   2840  38995  65883  3673/3373/171    2970/306    26   74   20.51)
(smt.stats   24   2974  42101  68817  3698/3410/172    3113/308    27   75   20.74)
(smt.stats   25   3121  42931  73859  3720/3451/172    3263/308    27   75   20.74)
(smt.stats   26   3282  44722  79656  3723/3458/172    3429/308    27   75   20.74)
(smt.stats   27   3459  47583  85220  3759/3494/172    3583/308    27   75   20.74)
(smt.stats   28   3560  48395  88882  3775/3498/172    3681/308    27   75   20.74)
(smt.stats   29   3671  51368  92551  3775/3510/172    3795/308    27   75   20.74)
(smt.stats   30   3793  55870  96871  3777/3512/172    3927/308    27   75   20.74)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 576460752303423487&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 576460752303423487&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 576460752303423486&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780908&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780908&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780908&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780908&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780928&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780920&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780928&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026781184&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780928&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026781184&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026784256&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026780928&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026781184&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026784256&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026915328&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026783744&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026781184&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026781184&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026915328&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907027177472&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907027177472&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907031896064&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026915328&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907027177472&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907031896072&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026915848&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 459482907026916056&108549371196853159
(smt.stats   31   3927  59036 101620  3905/3627/287    4125/334    28   84   21.14)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  59798 105714  3906/3628/287    4293/334    28   84   21.24)
(smt.stats   33   4235  62520 113494  3920/3634/287    4451/358    29  104   21.24)
(smt.stats   34   4412  65546 122481  3923/3658/288    4626/363    30  107   21.24)
(smt.stats   35   4606  68384 133558  3933/3661/288    4845/363    30  107   21.50)
(smt.stats   36   4707  72832 139594  3938/3668/288    4955/363    30  107   21.50)
(smt.stats   37   4818  74496 145663  3954/3689/288    5067/363    30  107   21.50)
(smt.stats   38   4940  76553 151250  3962/3697/290    5196/383    31  112   21.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 48)
(smt.stats   39   5074  78375 157992  3964/3699/292    5294/383    31  112   21.62)
(smt.stats   40   5221  80045 165024  4003/3732/293    5411/399    32  126   21.72)
(smt.stats   41   5382  86001 174792  4101/3811/294    5616/399    32  126   21.72)
(smt.stats   42   5559  90535 186191  4114/3826/294    6026/411    33  128   21.83)
(smt.stats   43   5753  96473 197787  4120/3832/295    6260/432    34  130   21.83)
(smt.stats   44   5966 101960 209952  4129/3841/295    6492/432    34  130   21.93)
ramon: poll                 wall=2.000s usage=1.998s mem=23096KiB load=1.00 rootload=1.00
(smt.stats   45   6067 104032 214213  4167/3844/296    6617/448    35  140   21.93)
(smt.stats   46   6178 105908 222607  4330/3892/296    6787/458    35  140   22.03)
(smt.stats   47   6300 108241 234363  4348/4053/296    6963/458    35  140   22.03)
(smt.stats   48   6434 112282 243617  4379/4086/296    7225/458    35  140   22.03)
(smt.stats   49   6581 115186 249988  4439/4088/298    7398/568    36  142   22.14)
(smt.stats   50   6742 118289 269883  4473/4172/298    7607/568    36  142   22.28)
(smt.stats   51   6919 124957 287023  4500/4192/298    7880/568    36  142   22.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 131471 295766  4510/4209/298    8156/568    36  142   22.67)
(smt.stats   53   7326 134692 319839  4510/4209/298    8382/568    36  142   22.67)
(smt.stats   54   7560 140809 340902  4519/4211/298    8664/568    36  142   22.67)
(smt.stats   55   7662 144257 347448  4523/4222/298    8767/568    36  142   22.67)
(smt.stats   56   7773 148690 362309  4553/4250/298    8854/568    36  142   22.67)
(smt.stats   57   7895 149158 364796  4580/4269/298    8972/569    36  142   22.77)
(smt.stats   58   8029 151012 373266  4586/4284/298    9138/569    36  142   23.13)
(smt.stats   59   8176 153102 385568  4612/4288/298    9301/570    36  142   23.13)
ramon: poll                 wall=3.000s usage=2.998s mem=24524KiB load=1.00 rootload=1.00
(smt.stats   60   8337 157750 400777  4627/4315/298    9491/570    36  142   23.13)
(smt.stats   61   8514 161206 410916  4645/4340/301    9767/669    37  155   23.23)
(smt.stats   62   8708 163167 425238  4651/4349/303   10092/669    37  155   23.23)
(smt.stats   63   8921 165437 433421  4820/4349/303   10376/724    38  171   23.44)
(smt.stats   64   9155 170419 453881  4840/4523/303   10668/725    38  171   23.44)
(smt.stats   65   9412 175518 476692  4893/4542/303   10985/725    38  171   23.44)
(smt.stats   66   9513 177849 484101  4987/4594/303   11183/729    38  171   23.43)
(smt.stats   67   9624 180136 498635  5029/4705/303   11305/729    38  171   23.43)
(smt.stats   68   9746 182620 509744  5074/4731/303   11463/729    38  171   23.43)
(smt.stats   69   9880 187263 525930  5155/4788/303   11695/729    38  171   23.53)
ramon: poll                 wall=4.000s usage=3.997s mem=25028KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 224)
(smt.stats   70  10027 189878 535019  5168/4863/303   11753/729    38  171   23.53)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186880 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186880 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186880 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186880 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186944 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186944 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186880 := 171252537372971996&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186880 := 171252537372971996&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186880 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880186944 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880187072 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880187328 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880187328 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880199168 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880199232 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880199360 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880232384 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880215550 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880215548 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880215548 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880201208 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880201152 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880201152 := 171252537372971980&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880201152 := 171252537372971980&106005245309426
(smt.stats   71  10188 194998 548102  5320/4868/303   11989/744    38  171   23.73)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10365 199359 570175  5747/5098/373   12415/1066    39  185   24.01)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245461528&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245461528&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245470744&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203536 := 106005245470744&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245470984&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245470984&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245470984&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245470984&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245470984&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245470984&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245470984&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245473032&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245473032&106005245309426
(smt.stats   73  10559 202348 588330  6093/5516/373   13221/1161    40  185   24.32)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245473032&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245473032&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245464840&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245464840&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245464840&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 25880203520 := 106005245464840&106005245309426
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 3582 := 106005245462280&106005245309426
(smt.stats   74  10772 207158 617755  6459/5945/420   14092/1365    41  197   24.51)
(smt.stats   75  11006 210538 637695  6515/6213/421   14874/1474    42  201   24.61)
(smt.stats   76  11263 216092 674373  6525/6220/421   15327/1474    42  201   24.73)
ramon: poll                 wall=5.000s usage=4.996s mem=26056KiB load=1.00 rootload=0.99
(smt.stats   77  11545 220913 711187  6557/6224/421   15671/1476    42  201   24.73)
(smt.stats   78  11646 223707 724811  6671/6256/421   15813/1478    42  201   24.73)
(smt.stats   79  11757 226287 744641  6683/6377/421   15950/1478    42  201   24.73)
(smt.stats   80  11879 229198 764758  6728/6391/421   16081/1480    42  201   24.83)
(smt.stats   81  12013 231206 782248  6740/6438/423   16551/1895    43  209   24.83)
(smt.stats   82  12160 238037 814553  6747/6438/423   16802/1895    43  209   24.94)
(smt.stats   83  12321 240652 835338  6750/6448/429   17043/2017    44  214   24.94)
(smt.stats   84  12498 243128 855288  6755/6452/429   17316/2017    44  214   24.94)
(smt.stats   85  12692 244973 875673  6756/6454/429   17511/2107    45  226   25.04)
(smt.stats   86  12905 250966 907010  6763/6461/429   17754/2107    45  226   25.04)
ramon: poll                 wall=6.000s usage=5.995s mem=26380KiB load=1.00 rootload=1.00
(smt.stats   87  13139 253112 925923  6765/6463/429   18034/2107    45  226   25.04)
(smt.stats   88  13396 258447 961090  6776/6471/429   18346/2107    45  226   25.14)
(smt.stats   89  13678 262492 991994  6781/6479/429   18914/2107    45  226   25.14)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   90  13988 267155 1038589  6785/6483/429   19376/2107    45  226   25.24)
(smt.stats   91  14089 268742 1052342  6785/6483/429   19510/2107    45  226   25.24)
(smt.stats   92  14200 270983 1069555  6788/6486/429   19700/2107    45  226   25.33)
(smt.stats   93  14322 276373 1093570  6819/6487/429   19946/2109    45  226   25.33)
(smt.stats   94  14456 278812 1108889  6973/6550/429   20191/2112    45  226   25.43)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 5 := 8&6
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6 := 9&6
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 4 := 16777216&6
(smt.stats   95  14603 281666 1129502  7029/6698/432   20530/2556    46  233   25.43)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 16777216&6
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 576460752320200704 := 1 << 4
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 16777216&6
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 576460752320200704 := 1 << 4
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 16777216&6
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 576460752320200704 := 1 << 4
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 16777216&6
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 576460752320200704 := 1 << 4
ramon: poll                 wall=7.000s usage=6.995s mem=26772KiB load=1.00 rootload=1.00
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 16777216&6
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 576460752320200704 := 1 << 4
(smt.stats   96  14764 283241 1141486  7083/6768/438   20707/2557    46  233   25.43)
(smt.stats   97  14941 284823 1155740  7095/6782/438   20950/2557    46  233   25.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 90)
(smt.stats   98  15135 289273 1186932  7135/6817/440   21149/2588    47  252   25.53)
(smt.stats   99  15348 301480 1250188  7215/6890/442   21425/2696    48  277   25.62)
(smt.stats  100  15582 309670 1289515  7348/6898/443   21927/2712    49  278   25.82)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 512 := 117440512&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1024 := 117440512&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1024 := 6625238712320&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1024 := 6625238712320&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1024 := 6625305821184&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 1024 := 6625305821184&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 2048 := 6625372930048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 2048 := 6625372930048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 8192 := 6625372930048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 128 := 6625507147776&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 32 := 6625372930048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 32 := 6625372930048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 64 := 6625372930048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625440038912 := 6625440038912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625440038912 := 6625440038912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625440038912 := 6625440038912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625439973376 := 6625440038912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625439907840 := 6625440038912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625439776768 := 6625440038912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625439973376 := 6625440038912&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625439907840 := 6625440038912&108549371196853159
(smt.stats  101  15839 316357 1352548  7874/7370/450   22633/2902    50  283   26.02)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625439973376 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625439973376 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625439973376 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625456816128 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625490370560 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625490370560 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6625557479424 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6626094350336 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6627168092160 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6627134537728 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6627168092160 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6628241833984 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6628241833984 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6628241833984 := 106005211906048&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6628241833984 := 106005211906048&108549371196853159
ramon: poll                 wall=8.000s usage=7.995s mem=27568KiB load=1.00 rootload=0.99
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6626127904768 := 6626127904768&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6627134537728 := 6627134537728&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6627134537728 := 6627134537728&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6631429505024 := 6631429505024&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 6665789243392 := 6665789243392&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 8796093022208 := 8796093022208&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 17592186044416 := 17592186044416&108549371196853159
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 35184372088832 := 35184372088832&108549371196853159
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 35184372088832 := 288239172244733951 << 58
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 35184372088832 := 35184372088832&108549371196853159
shl: (shl[64] (bv2int %1) (mod (+ #103 #409) 64)) 35184372088832 := 288230376151711774 << 58
(smt.stats  102  16121 322458 1371624  7997/7625/546   23091/2969    51  303   26.60)
(smt.stats  103  16431 337019 1460403  8073/7746/570   24165/3278    52  322   26.70)
ramon: poll                 wall=9.000s usage=8.995s mem=28644KiB load=1.00 rootload=0.99
(smt.stats  104  16771 352623 1547276  8411/7817/570   25001/3281    52  322   27.10)
(smt.stats  105  16872 358196 1570161  8496/8126/571   25322/3498    53  333   27.19)
(smt.stats  106  16983 361038 1595551  8542/8180/571   25752/3499    53  333   27.29)
(smt.stats  107  17105 363924 1620765  8552/8212/572   26251/3499    53  333   27.29)
(smt.stats  108  17239 374629 1679237  8552/8212/573   26516/3979    54  346   27.58)
ramon: poll                 wall=10.000s usage=9.995s mem=29168KiB load=1.00 rootload=1.00
(smt.stats  109  17386 379341 1691702  8587/8237/576   26786/4034    55  353   27.77)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  110  17547 382536 1712497  8759/8372/579   27245/4034    55  353   27.96)
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 67108872&1
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (if (= #634 58) 0 (if #636 1 #801))) 1 := 67108872&1
band: (band[59] (shl[64] (bv2int %1) (mod #410 64)) (if (or #821 #822) 0 (if #823 1 #948))) 0 := 67108872&1
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (if (= #634 58) 0 (if #636 1 #801))) 1 := 67108872&1
(smt.stats  111  17724 386516 1737203  8818/8392/580   27659/4188    56  376   28.37)
(smt.stats  112  17918 393400 1779143  8884/8445/591   28137/4190    56  376   28.59)
(smt.stats  113  18131 398102 1801008  8905/8500/595   28418/4321    57  410   28.68)
(smt.stats  114  18365 407881 1873084  8998/8507/595   28793/4328    57  410   28.68)
ramon: poll                 wall=11.000s usage=10.994s mem=30228KiB load=1.00 rootload=1.00
(smt.stats  115  18622 412081 1923473  9068/8660/598   29069/4340    58  410   28.80)
(smt.stats  116  18904 421048 1976919  9175/8671/598   29654/4342    58  410   29.00)
(smt.stats  117  19214 430485 2019238  9222/8809/606   30668/4423    59  421   29.20)
ramon: poll                 wall=12.000s usage=11.994s mem=31484KiB load=1.00 rootload=0.99
(smt.stats  118  19554 452498 2146542  9325/8868/608   31476/4537    60  481   30.20)
ramon: poll                 wall=13.000s usage=12.994s mem=32004KiB load=1.00 rootload=1.00
(smt.stats  119  19927 469031 2235753  9507/8951/609   32752/4542    60  481   30.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20028 470987 2248258  9511/9109/609   33387/4667    61  488   30.58)
(smt.stats  121  20139 471363 2264818  9514/9112/609   33558/4667    61  488   30.58)
(smt.stats  122  20261 473724 2285912  9516/9114/609   34009/4667    61  488   30.58)
(smt.stats  123  20395 479187 2305511  9535/9133/612   34887/4667    61  488   30.68)
(smt.stats  124  20542 485675 2326774  9538/9136/612   35092/4881    62  511   30.77)
(smt.stats  125  20703 494052 2381006  9544/9142/612   35557/4881    62  511   30.77)
ramon: poll                 wall=14.000s usage=13.994s mem=32340KiB load=1.00 rootload=1.00
(smt.stats  126  20880 503712 2422965  9549/9147/612   35768/4881    62  511   30.77)
(smt.stats  127  21074 511566 2481356  9561/9159/612   36439/4881    62  511   30.87)
(smt.stats  128  21287 526459 2607568  9565/9163/613   36719/5068    63  531   30.87)
(smt.stats  129  21521 535111 2667636  9607/9167/613   37355/5071    63  531   30.87)
ramon: poll                 wall=15.003s usage=14.996s mem=32516KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  130  21778 539381 2699064  9660/9225/613   37727/5071    63  531   31.00)
(smt.stats  131  22060 548083 2746338  9734/9266/613   38118/5079    63  531   31.00)
(smt.stats  132  22370 560454 2912060  9738/9335/613   38487/5079    63  531   31.19)
ramon: poll                 wall=16.000s usage=15.993s mem=32796KiB load=1.00 rootload=1.00
(smt.stats  133  22710 573683 3007842  9858/9356/614   40014/5234    64  532   31.28)
ramon: poll                 wall=17.000s usage=16.993s mem=33104KiB load=1.00 rootload=1.00
(smt.stats  134  23083 591231 3105823 10063/9479/614   41637/5243    64  532   31.72)
ramon: poll                 wall=18.000s usage=17.993s mem=33492KiB load=1.00 rootload=1.00
(smt.stats  135  23493 608737 3210995 10270/9803/621   43115/5690    65  560   31.91)
(smt.stats  136  23594 613744 3225755 10323/9873/621   43330/5693    65  560   31.91)
(smt.stats  137  23705 621698 3246489 10365/9937/621   43491/5694    65  560   31.91)
(smt.stats  138  23827 630984 3268111 10432/9981/621   43558/5852    66  667   32.00)
ramon: poll                 wall=19.000s usage=18.993s mem=33524KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  139  23961 636941 3324784 10457/10050/622   44041/5852    66  667   32.00)
(smt.stats  140  24108 643587 3349885 10459/10052/622   44295/5852    66  667   32.00)
(smt.stats  141  24269 651420 3436811 10465/10058/623   44471/6055    67  678   32.00)
(smt.stats  142  24446 658421 3479614 10578/10067/624   44894/6060    67  678   32.19)
(smt.stats  143  24640 660077 3515755 10583/10176/625   45209/6094    68  680   32.19)
ramon: poll                 wall=20.000s usage=19.993s mem=33800KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:16:19 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.002s
ramon: group.utime          19.950s
ramon: group.stime          0.052s
ramon: group.mempeak        34056KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
