ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:36:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25362 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YsgESoGXXBmW.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             76680
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5876    495  1345/1192/100     102/14     7   18   19.27)
(smt.stats    1    202   7861   1425  2151/1919/102     206/18     8   21   19.47)
(smt.stats    2    313  10211   2433  2289/2031/102     327/19     8   21   19.47)
(smt.stats    3    414  12856   3573  2435/2213/108     431/40    10   24   19.57)
(smt.stats    4    525  14702   4736  2947/2264/113     509/86    12   47   19.77)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 69444 := 69920&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 69443 := 69920&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69920&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139552 := 18446744073709547520 >>l 34
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69921&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139553 := 18446744073709547520 >>l 34
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69920&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139552 := 18446744073709547520 >>l 34
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69920&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139552 := 18446744073709547520 >>l 34
(smt.stats    5    647  18725   7802  2985/2740/125     623/92    14   53   19.86)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69920&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139552 := 18446744073709547520 >>l 34
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731458 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731460 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731458 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1073741344 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731464 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731472 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731472 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1073741344 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731520 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731648 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072732160 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072734208 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072742400 := 1073741823&2147483648
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  19524   8933  3112/2778/133     764/93    15   57   20.26)
(smt.stats    7    859  20688  10102  3428/2972/184    1100/95    15   57   20.45)
(smt.stats    8    981  22615  16092  3505/3253/188    1486/196    17   69   20.45)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450271&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519903 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450271&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519903 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450271&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519903 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450256&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519888 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450256&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519888 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450256&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519888 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450256&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519888 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 6 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481982 := 18014398509481953 >>l 51
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481952 := 18014398509481953 >>l 51
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 8 := 18014398509481953 >>l 51
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 8 := 18014398509481953 >>l 51
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 7 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 6 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 4 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 4 := 7&16
(smt.stats    9   1116  24550  20890  3592/3341/246    1689/356    21   98   20.74)
(smt.stats   10   1217  26370  22559  3661/3358/246    1809/361    21   98   20.74)
ramon: poll                 wall=1.000s usage=0.998s mem=21916KiB load=1.00 rootload=0.99
(smt.stats   11   1328  28026  25524  3806/3451/246    1931/423    22  102   20.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  30051  27501  3956/3702/247    2074/436    23  103   20.85)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 10 := 10&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 10 := 10&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 8 := 8&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 8 := 8&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 0&549755813888
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18320643284143177728 := 18446744073709539328 >>l 26
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 0&549755813888
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 2287828610704211968 := 18446744073709539328 >>l 26
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 0&549755813888
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 2287828610704211968 := 18446744073709539328 >>l 26
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481983 := 18014398509481972 >>l 16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481973 := 18014398509481972 >>l 16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481973 := 18014398509481972 >>l 16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 8 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 16 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 32 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 64 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 128 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 256 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 512 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1024 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2048 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 4096 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 8192 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 16384 := 274877906943&549755813888
(smt.stats   13   1584  33339  32874  4126/3737/255    2269/487    24  113   21.04)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2048 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2048 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 64 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 128 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 256 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 512 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1024 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1048 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1296 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1296 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1296 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1536 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1536 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1536 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1088 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1024 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 128 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 8 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 16 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 16 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906736 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906736 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906721 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906720 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906720 := 274877906943&549755813888
(smt.stats   14   1731  36075  43650  4207/3870/365    2584/565    26  145   21.20)
(smt.stats   15   1832  38103  49283  4393/3976/380    2820/648    27  148   21.40)
(smt.stats   16   1943  41815  58632  4601/4154/381    3236/661    28  151   21.69)
ramon: poll                 wall=2.000s usage=1.995s mem=23088KiB load=1.00 rootload=0.98
(smt.stats   17   2065  46414  69363  4671/4401/386    3564/817    30  159   21.69)
(smt.stats   18   2199  51863  80655  4911/4630/387    3863/839    32  165   21.79)
(smt.stats   19   2346  57271  95207  5073/4743/388    4240/882    33  165   21.88)
(smt.stats   20   2507  62316 106855  5188/4845/388    4806/886    33  165   22.11)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2608  66178 114357  5296/4951/389    4961/1224    34  165   22.11)
ramon: poll                 wall=3.000s usage=2.993s mem=23424KiB load=1.00 rootload=1.00
(smt.stats   22   2719  69750 124179  5434/5062/390    5093/1277    35  165   22.21)
(smt.stats   23   2841  72988 129905  5627/5214/390    5233/1281    35  165   22.31)
(smt.stats   24   2975  74995 137149  5804/5528/397    5514/1313    36  167   22.40)
(smt.stats   25   3122  82266 158036  5873/5579/402    5732/1406    38  193   22.60)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
(smt.stats   26   3283  86417 168791  5918/5626/408    6063/1416    39  200   22.70)
(smt.stats   27   3460  93806 190995  5961/5667/410    6464/1543    42  203   22.79)
(smt.stats   28   3561  97177 196639  5979/5675/410    6617/1545    42  203   22.79)
ramon: poll                 wall=4.000s usage=3.992s mem=24116KiB load=1.00 rootload=1.00
(smt.stats   29   3672 102893 207247  6038/5700/410    6759/1546    42  203   22.79)
(smt.stats   30   3794 109679 218856  6136/5821/411    6902/1586    43  204   22.90)
(smt.stats   31   3928 114090 235404  6211/5910/411    7256/1586    43  204   22.90)
(smt.stats   32   4075 118368 245266  6241/5935/411    7512/1587    43  204   23.04)
(smt.stats   33   4236 124766 271337  6256/5960/411    7715/1588    43  204   23.04)
(smt.stats   34   4413 131123 284017  6353/6003/412    7984/1676    44  204   23.13)
ramon: poll                 wall=5.000s usage=4.991s mem=24516KiB load=1.00 rootload=1.00
(smt.stats   35   4607 138224 308120  6442/6074/415    8461/1703    45  223   23.23)
(smt.stats   36   4708 142301 321051  6533/6162/415    8670/1703    45  223   23.23)
(smt.stats   37   4819 145648 331038  6650/6247/415    8819/1705    45  223   23.43)
(smt.stats   38   4941 148683 344311  6863/6426/415    9124/1705    45  223   23.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=6.000s usage=5.990s mem=25052KiB load=1.00 rootload=0.99
(smt.stats   39   5075 152575 352786  6922/6584/415    9418/1707    45  223   23.62)
(smt.stats   40   5222 156336 366662  7045/6647/415    9654/1708    45  223   23.62)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   41   5383 158219 376319  7735/6776/415    9908/1709    45  223   24.03)
ramon: poll                 wall=7.000s usage=6.989s mem=25528KiB load=1.00 rootload=1.00
(smt.stats   42   5560 160860 383418  7885/7455/415   10129/1710    45  223   24.03)
(smt.stats   43   5754 165079 422440  8117/7596/415   10395/1713    45  223   24.13)
(smt.stats   44   5967 170859 446417  8350/7837/415   10736/1714    45  223   24.23)
(smt.stats   45   6068 173176 454066  8396/8087/415   11001/1718    45  223   24.23)
(smt.stats   46   6179 177983 468099  8425/8109/415   11246/1724    45  223   24.33)
ramon: poll                 wall=8.000s usage=7.988s mem=25700KiB load=1.00 rootload=1.00
(smt.stats   47   6301 181641 476042  8504/8153/415   11436/1732    45  223   24.33)
(smt.stats   48   6435 185063 484660  8716/8254/415   11655/1734    45  223   24.33)
(smt.stats   49   6582 190025 498566  8784/8437/415   11992/1736    45  223   24.45)
(smt.stats   50   6743 197595 529133  8836/8510/416   12623/2363    46  226   24.71)
ramon: poll                 wall=9.002s usage=8.989s mem=26156KiB load=1.00 rootload=1.00
(smt.stats   51   6920 205026 561748  9050/8553/416   13006/2364    46  226   24.80)
(smt.stats   52   7114 209675 578789  9151/8762/416   13663/2365    46  226   25.05)
(smt.stats   53   7327 214660 616110  9289/8884/416   14210/2365    46  226   25.15)
ramon: poll                 wall=10.000s usage=9.986s mem=26640KiB load=1.00 rootload=1.00
(smt.stats   54   7561 216797 623431  9655/9002/416   14510/2369    46  226   25.24)
(smt.stats   55   7662 218582 625504  9809/9402/416   14618/2369    46  226   25.24)
(smt.stats   56   7773 220876 636450  9961/9569/416   14795/2369    46  226   25.35)
ramon: poll                 wall=11.000s usage=10.985s mem=26816KiB load=1.00 rootload=1.00
(smt.stats   57   7895 223320 657305 10111/9739/416   15015/2370    46  226   25.35)
(smt.stats   58   8029 226053 674872 10134/9826/416   15370/2372    46  226   25.44)
(smt.stats   59   8176 232899 718518 10389/9872/416   15878/2372    46  226   25.54)
ramon: poll                 wall=12.000s usage=11.984s mem=27036KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   60   8337 240058 752383 10573/10119/416   16324/2380    46  226   25.54)
(smt.stats   61   8514 246563 782735 10651/10299/416   16795/2380    46  226   25.77)
(smt.stats   62   8708 254985 828182 10849/10372/416   17299/2381    46  226   25.77)
ramon: poll                 wall=13.000s usage=12.983s mem=27324KiB load=1.00 rootload=1.00
(smt.stats   63   8921 263158 866024 10967/10583/416   17941/2385    46  226   25.86)
(smt.stats   64   9155 267203 890159 11344/10718/416   18475/2390    46  226   26.14)
ramon: poll                 wall=14.000s usage=13.982s mem=27844KiB load=1.00 rootload=1.00
(smt.stats   65   9412 271414 901701 11874/11189/416   18781/2390    46  226   26.24)
(smt.stats   66   9513 273904 915590 11981/11677/418   19355/3387    47  230   26.24)
(smt.stats   67   9624 278704 951678 12056/11700/418   19762/3388    47  230   26.24)
(smt.stats   68   9746 282160 979537 12143/11785/418   20094/3671    48  234   26.38)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9880 287263 1010220 12196/11872/418   20432/3671    48  234   26.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 290129 1022885 12225/11919/418   20790/3671    48  234   26.50)
(smt.stats   71  10188 295816 1054821 12245/11953/418   21152/3671    48  234   26.50)
ramon: poll                 wall=15.000s usage=14.981s mem=28284KiB load=1.00 rootload=1.00
(smt.stats   72  10365 302557 1088289 12255/11959/418   21434/3671    48  234   26.72)
(smt.stats   73  10559 308600 1122205 12276/11984/418   21732/3671    48  234   26.72)
(smt.stats   74  10772 315170 1162665 12319/12010/418   22022/3671    48  234   26.83)
(smt.stats   75  11006 319920 1210018 12340/12045/418   22511/3671    48  234   26.83)
(smt.stats   76  11263 329436 1262887 12422/12059/418   22989/3673    48  234   26.83)
ramon: poll                 wall=16.000s usage=15.980s mem=28464KiB load=1.00 rootload=1.00
(smt.stats   77  11545 336782 1306381 12492/12159/418   23542/3674    48  234   26.95)
(smt.stats   78  11646 340809 1331121 12601/12231/418   23704/3676    48  234   26.95)
(smt.stats   79  11757 345489 1346186 12692/12335/418   23849/3680    48  234   27.05)
(smt.stats   80  11879 349405 1365042 12752/12429/418   24002/3680    48  234   27.05)
(smt.stats   81  12013 351082 1378836 12784/12479/418   24156/3680    48  234   27.05)
(smt.stats   82  12160 353763 1392175 12929/12496/418   24323/3682    48  234   27.16)
ramon: poll                 wall=17.000s usage=16.979s mem=28740KiB load=1.00 rootload=1.00
(smt.stats   83  12321 357126 1407819 13170/12772/419   24514/4426    49  234   27.16)
(smt.stats   84  12498 359904 1424777 13216/12901/419   24795/4429    49  234   27.28)
(smt.stats   85  12692 365638 1442042 13306/12930/419   25085/4429    49  234   27.38)
(smt.stats   86  12905 368822 1459009 13436/13072/419   25422/4430    49  234   27.38)
ramon: poll                 wall=18.000s usage=17.979s mem=28920KiB load=1.00 rootload=1.00
(smt.stats   87  13139 377981 1510515 13635/13337/420   26133/4521    50  236   27.47)
(smt.stats   88  13396 390529 1624755 13814/13358/420   26741/4523    50  236   27.47)
ramon: poll                 wall=19.000s usage=18.978s mem=29112KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   89  13678 395547 1667183 13940/13559/421   27201/4645    51  240   27.57)
(smt.stats   90  13988 405573 1729819 13986/13694/421   27823/4645    51  240   27.80)
(smt.stats   91  14089 407876 1746113 14084/13736/421   28007/4647    51  240   27.80)
(smt.stats   92  14200 411122 1776405 14143/13785/421   28204/4649    51  240   27.89)
(smt.stats   93  14322 414540 1816140 14259/13892/421   28473/4649    51  240   28.00)
(smt.stats   94  14456 416829 1835773 14456/13983/421   28790/4650    51  240   28.10)
ramon: poll                 wall=20.000s usage=19.977s mem=29584KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:36:20 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.984s
ramon: group.utime          19.952s
ramon: group.stime          0.032s
ramon: group.mempeak        29840KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
