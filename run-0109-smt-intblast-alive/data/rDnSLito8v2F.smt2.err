ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:58:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40639 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rDnSLito8v2F.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3092102
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3384    985   992/893/96      98/4     4   14   18.95)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 1 := 1&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 8589934592 := 8589934676 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 66 := 66&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 8589934592 := 8589934676 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 524288 := 78643200&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 78643200&524288
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 0 := 4294967371 << 20
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 524288 := 78643200&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 78643200&524288
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 0 := 4294967371 << 20
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 78643200&524288
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 0 := 4294967371 << 20
(smt.stats    1    202   4186   2693  1471/1278/110     186/7     8   16   19.24)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 524288 := 4245684224&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 524287 := 24117248&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 61865984&524288
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 61865985 := 4294443067 << 20
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 524286 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 524284 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 2 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 8 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 16 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 32 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 64 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 128 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 256 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 512 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 1024 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 2048 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 4096 := 34603008&524288
(smt.stats    2    313   4698   3633  1895/1641/132     293/12    10   24   19.63)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 12800 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 13314 := 34603008&524288
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 13312 := 34603008&524288
(smt.stats    3    415   5291   4546  2037/1879/205     607/63    11   42   19.73)
(smt.stats    4    526   5986   6297  2181/2002/208     713/129    13   45   19.83)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1048576&4294967296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 1048576 := 8589885678 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1048576&4294967296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 1048576 := 8589885810 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1048576&4294967296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 1048576 := 8589901782 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1571840&4294967296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 1571840 := 8589885678 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1048576&4294967296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 1048576 := 8589885810 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1048576&4294967296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 1048576 := 8589901782 << 32
(smt.stats    5    648   8615  12124  2234/2034/211     959/133    14   47   19.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    749  11071  18046  2305/2104/218    1155/137    16   54   19.93)
(smt.stats    7    860  12308  19680  2418/2128/218    1481/145    16   54   20.14)
(smt.stats    8    982  13650  23136  2539/2325/220    1916/322    17   58   20.23)
(smt.stats    9   1116  17209  35727  2659/2468/224    2179/500    19   68   20.23)
(smt.stats   10   1217  18755  42137  2687/2475/224    2440/495    20   77   20.33)
(smt.stats   11   1328  20387  45106  2753/2513/224    2622/502    20   77   20.33)
(smt.stats   12   1450  21910  49621  2833/2588/226    2892/585    21   79   20.44)
(smt.stats   13   1584  23538  61349  2866/2652/226    3266/602    22   85   20.54)
ramon: poll                 wall=1.000s usage=0.993s mem=21672KiB load=0.99 rootload=0.98
(smt.stats   14   1731  25198  65233  3049/2680/226    3488/605    22   85   20.63)
(smt.stats   15   1832  25970  68084  3132/2885/226    3633/611    22   85   20.63)
(smt.stats   16   1943  26972  72290  3285/2990/227    3857/713    23   97   20.73)
(smt.stats   17   2065  28317  75407  3428/3101/227    4179/715    23   97   20.82)
(smt.stats   18   2199  29771  84216  3687/3415/229    4593/819    24  114   20.82)
(smt.stats   19   2346  31863  94508  3877/3525/229    4954/829    24  114   20.92)
ramon: poll                 wall=2.000s usage=1.991s mem=22200KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   20   2507  33604 102220  4093/3745/229    5442/838    24  114   21.01)
(smt.stats   21   2608  34997 109549  4240/3923/229    5730/844    24  114   21.11)
(smt.stats   22   2719  36759 115491  4374/4064/230    5961/1102    25  118   21.20)
(smt.stats   23   2841  39061 125437  4549/4228/230    6366/1105    25  118   21.20)
(smt.stats   24   2975  41497 128784  4559/4367/232    6516/1212    26  123   21.30)
(smt.stats   25   3122  43601 138668  4605/4377/236    6969/1255    27  127   21.51)
(smt.stats   26   3283  47189 153042  4698/4442/236    7332/1257    27  127   21.51)
(smt.stats   27   3460  51170 163963  4826/4634/239    8076/1584    28  129   21.51)
(smt.stats   28   3561  53105 180095  4828/4636/239    8207/1799    29  137   21.70)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 1 := 8572108802&4096
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 1 := 8572108803&4096
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 8572108802&4096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4503865897517058 := 12885950524 << 12
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 8572108802&4096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4503865897517058 := 12885950524 << 12
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 8572108802&4096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4503865897517058 := 12885950524 << 12
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 8571582465&4096
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 8571582501&4096
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 6443499521&4096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4503863768907777 := 12885950524 << 12
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&4096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4503848735473664 := 12885950524 << 12
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&4096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4503848735473664 := 12885950524 << 12
ramon: poll                 wall=3.000s usage=2.990s mem=23016KiB load=1.00 rootload=1.00
(smt.stats   29   3672  54852 193123  4866/4663/255    8580/1862    30  140   21.81)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 2 := 4295213056&4096
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 2 := 4295213056&4096
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 6442975262 := 6442975262 << 13
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 6442975262 := 6442975262 << 13
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 6442975262 := 6442975262 << 13
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 4096 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 4096 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 4095 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 4094 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 4092 := 4096&4295213056
(smt.stats   30   3794  55446 197316  4936/4678/255    8939/1865    30  140   22.12)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 306 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 305 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 304 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 304 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 304 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 256 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 288 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 136 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 128 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 128 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 128 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 128 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 320 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 320 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 512 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 512 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 1024 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 2048 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 4096 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 4096 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 3072 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 2048 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 1024 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 1024 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 1024 := 4096&4295213056
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4295213056&4096
band: (band[33] (if (= #134 32) 1 (if #544 2 #606)) (shl[33] (bv2int %0) (+ 33 #609))) 2048 := 4096&4295213056
(smt.stats   31   3928  57523 213709  5281/5082/365    9674/2074    31  158   22.22)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4075  61889 231809  5325/5122/371   10397/2717    32  196   22.32)
(smt.stats   33   4236  65740 248272  5489/5244/374   10901/2783    33  203   22.51)
(smt.stats   34   4413  69634 265484  5736/5325/374   11410/2792    33  203   22.80)
(smt.stats   35   4607  76772 300761  5818/5619/375   12273/3038    34  208   22.93)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 2313 := 514316&67108864
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 2317 := 514321&67108864
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 2317 := 514321&67108864
(smt.stats   36   4710  79270 324640  5878/5679/381   12457/3346    35  212   22.93)
ramon: poll                 wall=4.000s usage=3.990s mem=24476KiB load=1.00 rootload=0.99
(smt.stats   37   4821  82065 344566  5941/5697/381   12917/3348    35  212   23.02)
(smt.stats   38   4943  83505 353806  6078/5865/384   13069/3616    36  217   23.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 9)
(smt.stats   39   5077  89284 365240  6096/5881/386   13258/3616    36  217   23.12)
(smt.stats   40   5224  95856 429838  6100/5885/386   13693/3616    36  217   23.12)
(smt.stats   41   5385 102650 474781  6105/5891/386   14070/3724    37  243   23.38)
(smt.stats   42   5562 109941 539014  6112/5898/386   14920/3724    37  243   23.38)
(smt.stats   43   5756 120846 619237  6120/5904/386   15419/3724    37  243   23.38)
ramon: poll                 wall=5.000s usage=4.990s mem=24804KiB load=1.00 rootload=1.00
(smt.stats   44   5969 127376 675205  6155/5941/388   15817/4317    38  248   23.47)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 2289041481&2147483648
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 2289041481&2147483648
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 2289041481&2147483648
(smt.stats   45   6070 129891 701410  6226/6010/401   16080/4319    38  248   23.47)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294967369&2147483648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 21474836553 := 266246 << 31
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294967369&2147483648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 21474836553 := 266246 << 31
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294967369&2147483648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 21474836553 := 266246 << 31
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294967369&2147483648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 21474836553 := 266246 << 31
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294968316&2147483648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 21474837500 := 266246 << 31
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294968316&2147483648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 21474837500 := 266246 << 31
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294967296&2147483648
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 2150629375 := 133123 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294967296&2147483648
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 2150629375 := 133123 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 4294967296&2147483648
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 2150629375 := 133123 << 32
(smt.stats   46   6181 131836 714391  6337/6010/401   16328/4324    38  248   23.76)
(smt.stats   47   6303 136099 770070  6368/6137/411   16469/4376    39  270   23.67)
(smt.stats   48   6437 138343 786629  6452/6178/412   16815/4395    40  270   23.76)
(smt.stats   49   6584 141278 805490  6719/6245/413   17552/4396    40  270   23.95)
ramon: poll                 wall=6.000s usage=5.989s mem=25336KiB load=1.00 rootload=1.00
(smt.stats   50   6745 145051 826594  6909/6529/413   17942/4488    41  275   23.95)
(smt.stats   51   6922 148857 848188  7053/6718/417   18619/4621    42  301   24.15)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7116 152618 863110  7381/6856/417   19103/4622    42  301   24.25)
ramon: poll                 wall=7.000s usage=6.989s mem=25692KiB load=1.00 rootload=1.00
(smt.stats   53   7329 157184 894684  7658/7233/417   19808/4631    42  301   24.44)
(smt.stats   54   7563 161269 929598  7974/7713/418   20365/4799    43  301   24.63)
(smt.stats   55   7664 163551 944215  8126/7768/418   21012/4802    43  301   24.72)
ramon: poll                 wall=8.000s usage=7.989s mem=26132KiB load=1.00 rootload=1.00
(smt.stats   56   7775 166177 970499  8296/7922/418   21852/4948    44  309   24.82)
(smt.stats   57   7897 170281 990698  8476/8088/418   22315/4963    44  309   25.01)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8031 173133 1017439  8535/8300/418   23178/4963    44  309   25.01)
(smt.stats   59   8178 175734 1044816  8555/8322/419   23648/5346    45  315   25.10)
ramon: poll                 wall=9.000s usage=8.989s mem=26532KiB load=1.00 rootload=1.00
(smt.stats   60   8339 180456 1067986  8649/8393/419   24124/5347    45  315   25.20)
(smt.stats   61   8516 186210 1081976  8688/8452/420   24415/5496    46  326   25.20)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 9226751385842745344 := 6443237760 << 14
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 9226751385842745344 := 6443237760 << 14
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 9226751385842745344 := 6443237760 << 14
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 18446533293894533120 := 8589885516 << 14
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 0&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 18446533293894533120 := 8589885516 << 14
(smt.stats   62   8710 191293 1113921  8870/8464/420   24742/5503    46  326   25.51)
(smt.stats   63   8923 195536 1125573  8881/8639/425   25003/5544    47  327   25.80)
(smt.stats   64   9157 200456 1158954  8924/8666/426   25483/5546    47  327   25.80)
ramon: poll                 wall=10.000s usage=9.988s mem=27460KiB load=1.00 rootload=0.99
(smt.stats   65   9414 204553 1177474  9226/8811/427   25980/5615    48  330   26.06)
(smt.stats   66   9515 206862 1197829  9265/9013/427   26375/5615    48  330   26.06)
(smt.stats   67   9626 209458 1231464  9279/9027/430   27261/6156    49  342   26.16)
(smt.stats   68   9748 215322 1280456  9334/9042/430   27908/6158    49  342   26.46)
(smt.stats   69   9882 220619 1309566  9510/9095/430   28299/6191    50  343   26.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 1500)
(smt.stats   70  10029 224124 1334124  9624/9359/431   28227/6192    50  343   26.74)
ramon: poll                 wall=11.000s usage=10.988s mem=28128KiB load=1.00 rootload=1.00
(smt.stats   71  10190 230810 1385896  9754/9375/431   28913/6381    51  349   26.84)
(smt.stats   72  10367 237215 1429553  9904/9516/431   30166/6386    51  349   27.12)
(smt.stats   73  10561 241867 1464103  9962/9659/431   31431/6390    51  349   27.31)
ramon: poll                 wall=12.000s usage=11.988s mem=28828KiB load=1.00 rootload=1.00
(smt.stats   74  10774 245808 1487563 10457/9755/431   32242/6399    51  349   27.50)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   75  11008 251146 1534809 10876/10291/431   33229/6406    51  349   27.66)
(smt.stats   76  11265 254935 1548592 11216/10623/431   33871/6407    51  349   27.85)
ramon: poll                 wall=13.000s usage=12.988s mem=29424KiB load=1.00 rootload=1.00
(smt.stats   77  11547 264413 1616262 11423/11126/432   35161/6816    52  351   28.04)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 461&268435456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 90003840006357453 := 8606154752 << 28
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 509&268435456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 90003840006357501 := 8608317440 << 28
(smt.stats   78  11648 268684 1666454 11496/11196/433   35387/6817    52  351   28.04)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 509&268435456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 90003840006357501 := 8606154752 << 28
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 509&268435456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 90003840006357501 := 8606154752 << 28
(smt.stats   79  11759 272498 1699788 11611/11285/438   35597/7157    53  362   28.13)
(smt.stats   80  11881 275449 1725395 11749/11376/438   35841/7160    53  362   28.23)
(smt.stats   81  12015 278295 1747749 11813/11527/438   36448/7160    53  362   28.23)
ramon: poll                 wall=14.000s usage=13.988s mem=29768KiB load=1.00 rootload=1.00
(smt.stats   82  12162 283258 1786228 11900/11560/438   37113/7298    54  362   28.42)
(smt.stats   83  12323 286926 1818771 12054/11655/438   37538/7303    54  362   28.52)
(smt.stats   84  12500 290027 1856413 12239/11814/438   38319/7304    54  362   28.61)
ramon: poll                 wall=15.000s usage=14.988s mem=30280KiB load=1.00 rootload=1.00
(smt.stats   85  12694 293718 1885415 12523/11996/438   39107/7304    54  362   28.71)
(smt.stats   86  12907 299010 1928267 12766/12290/438   41159/7305    54  362   29.04)
(smt.stats   87  13141 304950 1973298 12816/12525/439   43563/8031    55  375   29.43)
ramon: poll                 wall=16.000s usage=15.984s mem=30880KiB load=1.00 rootload=1.00
(smt.stats   88  13398 315775 2066263 13220/12573/439   45066/8038    55  375   29.62)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 29360384 := 30408983&134217728
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 29360128 := 30408983&134217728
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 29360128 := 30408983&134217728
(smt.stats   89  13680 323570 2120607 13422/12999/439   47091/8047    55  375   29.90)
ramon: poll                 wall=17.000s usage=16.984s mem=31392KiB load=1.00 rootload=1.00
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 101716032 := 102760553&134217728
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 101716032 := 102760553&134217728
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 101716032 := 102760553&134217728
(smt.stats   90  13990 330802 2178016 13588/13230/454   48415/8497    56  378   30.19)
(smt.stats   91  14091 336324 2203236 13661/13397/460   48778/8699    57  381   30.19)
(smt.stats   92  14202 340762 2265289 13783/13415/460   49017/8700    57  381   30.28)
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1&134217728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4504304002007041 := 8592031942 << 27
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1&134217728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4504304002007041 := 8592031942 << 27
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1&134217728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4504312591941633 := 8592031942 << 27
band: (band[33] (shl[64] (* 2 #128) (mod #621 64)) (if (or #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 #646 #647 ...) 0 (if #663 1 #727))) 0 := 1&134217728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #620 #300 #618) 64)) 4504372721483777 := 8592031942 << 27
(smt.stats   93  14324 342857 2304667 13934/13533/460   49424/8702    57  381   30.38)
ramon: poll                 wall=18.000s usage=17.984s mem=31904KiB load=1.00 rootload=1.00
(smt.stats   94  14458 345268 2351906 13945/13677/469   50737/8867    58  383   30.47)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   95  14605 350108 2386624 14001/13678/469   51651/8869    58  383   30.67)
(smt.stats   96  14766 356024 2422143 14187/13772/469   52358/8872    58  383   30.67)
ramon: poll                 wall=19.000s usage=18.984s mem=32416KiB load=1.00 rootload=1.00
(smt.stats   97  14943 362614 2489404 14331/13931/469   53600/8872    58  383   30.86)
(smt.delete-inactive-clauses  :num-deleted-clauses 139)
(smt.stats   98  15137 368994 2526504 14365/14071/470   55031/9466    59  396   30.95)
(smt.stats   99  15350 380881 2667870 14467/14116/470   57198/9470    59  396   31.15)
ramon: poll                 wall=20.000s usage=19.984s mem=32928KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:59:04 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.998s
ramon: group.utime          19.978s
ramon: group.stime          0.020s
ramon: group.mempeak        33184KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
