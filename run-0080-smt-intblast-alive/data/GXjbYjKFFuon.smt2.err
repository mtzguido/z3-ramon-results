ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:00:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28272 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GXjbYjKFFuon.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4150030
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3514    806  1050/945/97      93/8     4   19   19.16)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 0&103813158
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 0 := 28 << 28
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 0&103813158
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 0 := 28 << 28
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 0&103813158
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 0 := 28 << 28
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 0&103813158
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 0 := 28 << 28
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103813158 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103813157 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103813158 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103813157 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103813156 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103813144 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103813136 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103813120 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 103809024 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 32 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 7516192769 := 28 << 28
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 16 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 32 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 64 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 128 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 256 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 512 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1024 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 2048 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 4096 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8192 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 16384 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 4096 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8192 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 16384 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 32768 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 65536 := 7516192768&103813158
(smt.stats    1    202   6231   1972  1908/1610/120     190/12     5   21   19.74)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 512 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1024 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 2048 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8192 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 16384 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 32768 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 131072 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 262144 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 524288 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1048576 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 2097152 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 4194304 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8388608 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8388608 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 16777216 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 33554432 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 67108864 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8388608 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 33554432 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 67108864 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 67108864 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 67108864 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 33554432 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 16777216 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 4194304 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 2097152 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1966080 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 262144 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 524288 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1048576 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 262144 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 524288 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 131072 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8192 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8192 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 8192 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 16384 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 65536 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 65536 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 65536 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 32768 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 32768 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 32768 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 272 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 288 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 258 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 260 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 260 := 7516192768&103813158
(smt.stats    2    313   8657   5052  1994/1784/320     418/93     9   69   20.32)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 258 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 258 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 7516192769 := 28 << 28
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 7516192769 := 28 << 28
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 1 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 2 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 4 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 103813152 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 103813120 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 4032 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 3968 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 3840 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 3584 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 2 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 103813114 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 103813112 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 103813112 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 103809024 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 8 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 16 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 32 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 64 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 128 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 256 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 512 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 1024 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 2048 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 8192 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 16384 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 32768 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 65536 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 131072 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 262144 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 524288 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 1048576 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 2097152 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 4194304 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 8388608 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 16777216 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 16777216 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 33554432 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 67108864 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 2048 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 1536 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 1024 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 1024 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 1024 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 512 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 10485760 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 8454144 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 8519680 := 7516192768&103813158
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 7516192768&103813158
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 8454144 := 7516192768&103813158
(smt.stats    3    414  10370   7380  2149/1970/512     620/184    12  117   21.10)
(smt.stats    4    525  13683  10696  2265/2061/528     833/296    15  137   21.47)
(smt.stats    5    647  16110  12481  2423/2211/533     984/335    16  174   21.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  19956  16524  2575/2345/533    1154/339    16  174   21.75)
ramon: poll                 wall=1.000s usage=0.934s mem=23552KiB load=0.93 rootload=0.92
(smt.stats    7    859  21095  17649  2681/2432/533    1286/444    17  175   21.75)
(smt.stats    8    981  23761  22630  2990/2779/546    1532/630    19  217   22.04)
(smt.stats    9   1115  28564  29264  3048/2821/550    1704/660    20  228   22.14)
(smt.stats   10   1216  31734  30545  3143/2857/550    1829/672    21  228   22.33)
ramon: poll                 wall=2.000s usage=1.934s mem=23644KiB load=1.00 rootload=1.00
(smt.stats   11   1327  34120  34097  3456/3034/550    2030/685    21  228   22.43)
(smt.stats   12   1449  36387  38711  3727/3510/555    2359/787    23  242   22.52)
(smt.stats   13   1583  42488  47726  3783/3515/555    2639/790    23  242   22.72)
ramon: poll                 wall=3.004s usage=2.938s mem=24572KiB load=1.00 rootload=1.00
(smt.stats   14   1730  47474  53022  4050/3588/555    3000/918    24  254   22.81)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   15   1831  50632  57942  4268/3904/556    3210/1018    25  257   23.00)
(smt.stats   16   1942  54999  69201  4445/4144/556    3622/1022    25  257   23.09)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 17448304640&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 86167781376 := 34359738352 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 17448304640&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 86167781376 := 34359738352 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 268435456&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 68987912192 := 34359738352 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 268435456&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 137707388928 := 34359738352 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 268435456&12672
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 68987912192 := 34359738365 << 15
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 268435456&12672
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 68987912192 := 34359738365 << 15
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 201326592&12672
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 68920803328 := 34359738365 << 15
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 268337151&12672
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 268337023&12672
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 260046848&12672
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 68979523584 := 34359738365 << 15
(smt.stats   17   2064  60803  80613  4540/4300/571    3872/1247    27  263   23.19)
ramon: poll                 wall=4.000s usage=3.934s mem=24580KiB load=1.00 rootload=0.99
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 34359640064&12672
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34355544082 := 34359738365 << 15
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 34359640064&12672
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34355544082 := 34359738365 << 15
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 34359640064&12672
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (= #558 34) 0 (if #560 1 #653))) 1 := 34359640064&12672
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1 := 34359640064&12672
(smt.stats   18   2198  67302  91776  4796/4557/604    4331/1332    29  275   23.38)
(smt.stats   19   2345  75144 102202  5087/4628/604    4699/1419    30  282   23.48)
(smt.stats   20   2506  81198 120023  5278/5022/608    5680/1548    31  286   23.76)
(smt.stats   21   2607  84611 131236  5376/5049/608    6033/1672    32  292   23.86)
(smt.stats   22   2718  90415 151038  5404/5158/608    6366/1672    32  292   23.86)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 49153 := 18962379647&6644042136
ramon: poll                 wall=5.000s usage=4.933s mem=25332KiB load=1.00 rootload=1.00
(smt.stats   23   2840  95855 167773  5561/5316/614    6821/1858    33  297   23.95)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 12288 := 19042275331&6644042136
(smt.stats   24   2974  99423 180318  5694/5451/631    7490/2055    34  310   24.05)
(smt.stats   25   3121 108797 211768  5748/5478/636    8608/2646    35  355   24.22)
(smt.stats   26   3282 120560 249860  5928/5540/636    9179/2658    35  355   24.40)
ramon: poll                 wall=6.000s usage=5.933s mem=26252KiB load=1.00 rootload=1.00
(smt.stats   27   3459 126884 272491  6214/5967/637    9632/3137    36  366   24.59)
(smt.stats   28   3560 131934 283733  6257/5973/637    9894/3141    36  366   24.59)
ramon: poll                 wall=7.000s usage=6.933s mem=26260KiB load=1.00 rootload=1.00
(smt.stats   29   3671 136316 293111  6557/6062/637   10059/3151    36  366   24.69)
(smt.stats   30   3793 140045 306444  6876/6316/637   10281/3155    36  366   24.78)
(smt.stats   31   3927 142815 317040  7210/6662/637   10606/3164    36  366   24.88)
ramon: poll                 wall=8.000s usage=7.933s mem=26380KiB load=1.00 rootload=1.00
(smt.stats   32   4074 149970 349900  7253/6976/638   10967/3320    37  371   24.88)
(smt.stats   33   4235 156167 372253  7660/7013/638   11395/3334    37  371   24.97)
(smt.stats   34   4412 165225 418874  7923/7640/640   12699/3655    38  376   25.19)
ramon: poll                 wall=9.000s usage=8.932s mem=26688KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   35   4606 172768 454090  8026/7777/644   13656/4049    40  414   25.52)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 282038016&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 8694165511456395008 := 34359738246 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 34359738246&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 34359738246 := 34359738246 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 34359738246&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 34359738246 := 34359738246 << 1
(smt.stats   36   4707 176047 466518  8157/7901/651   13898/4054    40  414   25.65)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 34359738124&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34355544083 := 34359738246 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 0 := 34359738124&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34355544083 := 34359738246 << 1
(smt.stats   37   4818 180472 482190  8222/7917/652   14178/4204    41  419   25.75)
(smt.stats   38   4940 183674 492689  8458/8207/658   14928/4397    42  424   25.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 131)
(smt.stats   39   5074 191543 529622  8461/8210/658   15040/4397    42  424   25.94)
ramon: poll                 wall=10.000s usage=9.932s mem=27480KiB load=1.00 rootload=1.00
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1180196 := 34359477120&1622080
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1180196 := 34359477120&1622080
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1180196 := 34359477376&1622080
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 1180192 := 34359477376&1622080
(smt.stats   40   5221 196187 541493  8634/8212/658   15428/4419    42  424   26.04)
(smt.stats   41   5382 202352 575181  9072/8515/659   16139/4690    43  426   26.23)
(smt.stats   42   5559 207518 603974  9318/9037/660   17320/4887    44  428   26.32)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #673 #674) 0 (if #675 1 #824))) 393216 := 34355417084&3244161
(smt.stats   43   5753 215244 636852  9493/9109/660   17903/4901    44  428   26.42)
ramon: poll                 wall=11.000s usage=10.932s mem=28020KiB load=1.00 rootload=1.00
(smt.stats   44   5966 221890 677818  9800/9275/660   18485/4912    44  428   26.81)
ramon: poll                 wall=12.000s usage=11.932s mem=28316KiB load=1.00 rootload=1.00
(smt.stats   45   6067 226389 704505  9857/9559/661   18804/5460    45  431   26.81)
(smt.stats   46   6178 231096 732706  9993/9644/661   19049/5464    45  431   26.91)
ramon: poll                 wall=13.000s usage=12.932s mem=28424KiB load=1.00 rootload=1.00
(smt.stats   47   6300 233589 739570 10294/9754/661   19230/5468    45  431   27.00)
ramon: poll                 wall=14.000s usage=13.931s mem=28548KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   48   6434 236909 760069 10569/10318/662   19683/5640    46  442   27.10)
(smt.stats   49   6581 243289 789470 10615/10330/665   20275/5643    46  442   27.19)
ramon: poll                 wall=15.000s usage=14.931s mem=29064KiB load=1.00 rootload=0.99
(smt.stats   50   6742 245546 795781 11035/10490/666   20520/5650    46  442   27.29)
ramon: poll                 wall=16.000s usage=15.931s mem=29092KiB load=1.00 rootload=1.00
(smt.stats   51   6919 246396 799308 11535/10952/666   20756/5877    47  466   27.48)
(smt.stats   52   7113 252859 836985 11967/11535/668   22054/5881    47  466   27.99)
ramon: poll                 wall=17.000s usage=16.931s mem=29520KiB load=1.00 rootload=1.00
(smt.stats   53   7326 257960 857327 12505/11836/668   22750/6117    48  482   28.37)
ramon: poll                 wall=18.000s usage=17.931s mem=29928KiB load=1.00 rootload=1.00
(smt.stats   54   7560 267050 899710 12829/12526/669   24733/6727    49  500   28.57)
(smt.stats   55   7661 269302 913431 13035/12553/670   25160/6736    49  500   28.85)
ramon: poll                 wall=19.000s usage=18.930s mem=30596KiB load=1.00 rootload=1.00
(smt.stats   56   7772 274559 950474 13250/12874/672   25873/6865    50  507   29.04)
ramon: poll                 wall=20.000s usage=19.928s mem=31020KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:00:53 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.997s
ramon: group.utime          19.973s
ramon: group.stime          0.024s
ramon: group.mempeak        33044KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
