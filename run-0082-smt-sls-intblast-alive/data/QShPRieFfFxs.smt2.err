ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:27:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28232 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QShPRieFfFxs.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             796166
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   84.0336     10000        49          0            1        2)
(sat.ddfw       1      1   42.7393     20001        98          1            1        3)
(sat.ddfw       1      1    47.619     40001       196          2            1        5)
(smt.stats    0    101   1574    104  1061/953/99      98/20     4   17   52.06)
(smt.stats    1    202   1866    765  1862/1637/99     218/25     4   17   52.06)
(sat.ddfw       1      1   44.2478     70001       343          3            1        8)
(smt.stats    2    313   4395   3007  2004/1849/101     366/83     6   19   52.16)
(smt.stats    3    414   5390   4215  2375/2184/109     459/101     8   36   52.25)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 1 := 34359738367 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 0 := 34359738367 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 0 := 2 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1&1073741823
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1&1073741823
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1&1073741823
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1073741823 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1073741822 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869184 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869184 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 8 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 16 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 256 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1024 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1024 := 1073741824&1073741823
(smt.stats    4    525   6755   5966  2547/2228/119     561/120    10   43   52.75)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 29 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 8 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 16 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1024 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2048 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4096 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 8192 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 16384 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32768 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 65536 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 131072 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 262144 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 524288 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1048576 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2097152 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4194304 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 8388608 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 16777216 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 33554432 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 268435456 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 536870912 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 536870912 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 268435456 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 37748736 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 37748736 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 50331648 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 33554432 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 512 := 1073741824&1073741823
(smt.stats    5    647   9773   9937  2751/2529/354     830/223    14  100   53.55)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 256 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
ramon: poll                 wall=1.005s usage=0.845s mem=55732KiB load=0.84 rootload=0.84
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  12504  14609  2776/2546/365     927/220    15  112   53.64)
(smt.stats    7    859  14551  17193  2856/2571/375    1084/223    16  114   53.64)
(sat.ddfw       1      1   39.1007    110001       539          4            1       12)
(smt.stats    8    981  18011  22493  2920/2686/386    1236/237    18  117   53.74)
(smt.stats    9   1115  22025  27890  2992/2762/393    1373/266    19  123   53.93)
(smt.stats   10   1216  23976  32393  3097/2825/393    1472/291    20  131   53.93)
(sat.ddfw       1      1   36.9542    160000       784          5            1       17)
(smt.stats   11   1327  26228  38463  3153/2878/393    1590/295    20  131   54.32)
(smt.stats   12   1449  28692  45373  3193/2959/399    1744/346    21  134   54.32)
(smt.stats   13   1583  31089  51025  3260/2991/399    1945/352    21  134   54.41)
(sat.ddfw       1      1   34.6027    220001      1078          6            1       23)
(smt.stats   14   1730  36387  61622  3316/3061/399    2084/443    22  142   54.51)
(smt.stats   15   1831  42488  72572  3332/3081/399    2205/445    22  142   54.62)
ramon: poll                 wall=2.000s usage=2.009s mem=56884KiB load=1.17 rootload=1.17
(smt.stats   16   1942  45283  80568  3413/3101/399    2337/456    22  142   54.72)
(smt.stats   17   2064  47180  88078  3443/3203/400    2461/490    23  144   54.72)
(smt.stats   18   2198  50532  98390  3467/3219/400    2606/491    23  144   54.72)
(sat.ddfw       1      1   29.8762    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2345  54807 106739  3469/3233/401    2820/502    24  146   55.01)
(smt.stats   20   2506  56338 114886  3490/3254/406    2989/556    25  152   55.01)
(smt.stats   21   2607  60883 123079  3503/3257/406    3086/553    26  169   55.01)
(smt.stats   22   2718  63128 128336  3512/3274/406    3202/553    26  169   55.25)
(smt.stats   23   2840  65317 134160  3530/3279/406    3333/558    26  169   55.25)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&7
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 5&3
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 5&3
(smt.stats   24   2974  67239 136913  3728/3322/406    3607/573    26  169   55.34)
ramon: poll                 wall=3.000s usage=3.009s mem=57440KiB load=1.00 rootload=1.00
(smt.stats   25   3121  70759 146881  3756/3511/425    3881/624    27  175   55.34)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&8589934591
(sat.ddfw       1      1   26.2812    370001      1813          8            1       38)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 4 := 5&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 4 := 5&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 5 := 5&8589934591
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 68719476741 := 6 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 5 := 5&8589934591
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 68719476741 := 17179869233 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 5 := 5&8589934591
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 68719476741 := 17179869233 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 5 := 5&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 68719476741 := 17179869186 << 34
(smt.stats   26   3282  75265 154685  3796/3534/433    4045/634    28  186   55.44)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 2&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 2&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 2&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 2&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 2 := 2&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 9223371968135299074 := 2 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 2 := 2&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 9223371968135299074 := 2 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 2 := 2&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 9223371968135299074 := 2 << 34
(smt.stats   27   3459  80206 171038  3882/3638/465    4498/740    30  207   55.81)
(smt.stats   28   3560  81991 176555  4085/3784/469    4612/740    30  207   55.94)
(sat.ddfw       1      1   23.5417    460001      2254          9            1       47)
ramon: poll                 wall=4.000s usage=4.010s mem=58628KiB load=1.00 rootload=0.99
(smt.stats   29   3671  86125 185790  4161/3804/469    4823/834    31  240   56.22)
(smt.stats   30   3793  89553 193812  4323/3878/469    5045/837    31  240   56.22)
(sat.ddfw       1      1   21.2766    560001      2745         10            1       57)
(smt.stats   31   3927  92339 201007  4389/4069/469    5243/837    31  240   56.48)
ramon: poll                 wall=5.000s usage=5.025s mem=58732KiB load=1.01 rootload=1.01
(smt.stats   32   4074  96228 213020  4412/4102/470    5568/920    32  247   56.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   33   4235 101653 231423  4485/4154/471    5960/1076    33  249   56.68)
(sat.ddfw       1      1   19.3628    670001      3284         11            1       68)
(smt.stats   34   4412 106748 246213  4525/4212/471    6181/1076    33  249   56.68)
ramon: poll                 wall=6.000s usage=5.948s mem=59204KiB load=0.92 rootload=0.93
(smt.stats   35   4606 111184 255862  4586/4238/473    6564/1114    34  254   57.02)
(sat.ddfw       1      1   17.9078    790001      3872         12            1       80)
(smt.stats   36   4707 112988 266440  4762/4450/476    6764/1176    35  255   57.12)
ramon: poll                 wall=7.000s usage=6.932s mem=59484KiB load=0.98 rootload=0.98
(smt.stats   37   4818 115175 280957  4867/4472/476    6960/1179    35  255   57.12)
(smt.stats   38   4940 117646 296669  4879/4580/476    7137/1194    36  255   57.12)
(sat.ddfw       1      1   16.6389    920001      4509         13            1       93)
(smt.delete-inactive-clauses  :num-deleted-clauses 402)
ramon: poll                 wall=8.000s usage=7.888s mem=59448KiB load=0.96 rootload=0.96
(smt.stats   39   5074 122859 315070  4902/4594/477    7286/1299    37  259   57.12)
(smt.stats   40   5221 128096 334142  5167/4606/477    7645/1306    37  259   57.21)
ramon: poll                 wall=9.000s usage=8.958s mem=59884KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   15.5211   1060001      5196         14            1      108)
(smt.stats   41   5382 134317 359590  5461/4889/477    8198/1313    37  259   57.44)
(smt.stats   42   5559 138129 373864  5579/5278/482    8838/1546    38  266   57.54)
ramon: poll                 wall=10.000s usage=9.958s mem=60180KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    14.556   1210001      5931         15            1      123)
(smt.stats   43   5753 144446 394401  5675/5288/482    9426/1553    38  266   57.82)
(smt.stats   44   5966 152020 440476  5699/5397/483    9949/1774    40  273   57.91)
(smt.stats   45   6067 155365 461278  5713/5406/484   10304/1786    41  274   58.01)
ramon: poll                 wall=11.000s usage=10.958s mem=60264KiB load=1.00 rootload=1.00
(smt.stats   46   6178 157997 485493  5789/5420/485   10479/1789    41  274   58.01)
(smt.stats   47   6300 160270 514197  5838/5509/485   10754/1904    42  279   58.01)
(smt.stats   48   6434 161347 526829  5864/5559/485   10982/1904    42  279   58.01)
(sat.ddfw       1      1   13.7033   1370001      6715         16            1      139)
(smt.stats   49   6581 166660 556158  5884/5581/485   12015/1905    42  279   58.20)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 33285996544 := 17179869186 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 32212254720 := 17179869186 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 32212254720 := 17179869186 << 1
ramon: poll                 wall=12.000s usage=11.956s mem=60572KiB load=1.00 rootload=0.99
(smt.stats   50   6742 169727 570127  6008/5608/485   12319/1910    42  279   58.30)
(smt.stats   51   6919 172453 589583  6098/5716/490   12600/2180    43  280   58.30)
(smt.stats   52   7113 179153 608757  6102/5794/490   12961/2180    43  280   58.60)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7326 181192 626779  6147/5831/490   13288/2193    44  280   58.60)
ramon: poll                 wall=13.000s usage=12.955s mem=61144KiB load=1.00 rootload=1.00
(smt.stats   54   7560 186702 657265  6168/5858/491   13990/2291    45  296   58.69)
(sat.ddfw       1      1   12.9317   1540001      7549         17            1      156)
(smt.stats   55   7661 191380 688492  6228/5893/491   14277/2292    45  296   58.79)
(smt.stats   56   7772 196657 724823  6228/5915/491   14751/2292    45  296   58.79)
(smt.stats   57   7894 201739 775383  6235/5918/491   15238/2292    45  296   58.79)
ramon: poll                 wall=14.000s usage=13.955s mem=61440KiB load=1.00 rootload=1.00
(smt.stats   58   8028 204756 796042  6252/5939/496   15613/2543    46  298   58.88)
(smt.stats   59   8175 212383 846661  6259/5946/499   15825/2623    47  321   59.29)
(sat.ddfw       1      1   12.2449   1720001      8431         18            1      174)
(smt.stats   60   8336 220099 901573  6278/5948/499   16024/2626    47  321   59.29)
ramon: poll                 wall=15.000s usage=14.950s mem=61396KiB load=1.00 rootload=1.00
(smt.stats   61   8513 223500 923950  6304/5989/500   16557/2643    48  325   59.39)
(smt.stats   62   8707 230077 977232  6316/6002/500   16850/2643    48  325   59.39)
ramon: poll                 wall=16.000s usage=15.948s mem=61632KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 236742 1025121  6335/6019/503   17616/2710    49  327   59.48)
(sat.ddfw       1      1   11.6379   1910001      9362         19            1      193)
(smt.stats   64   9154 244191 1061631  6341/6025/504   18096/2710    49  327   59.58)
ramon: poll                 wall=17.000s usage=16.947s mem=61816KiB load=1.00 rootload=1.00
(smt.stats   65   9411 251795 1092720  6558/6045/504   19025/2778    50  350   59.69)
(smt.stats   66   9512 253084 1099662  6565/6247/504   19156/2778    50  350   59.69)
ramon: poll                 wall=18.000s usage=17.946s mem=61908KiB load=1.00 rootload=1.00
(smt.stats   67   9623 256016 1116176  6605/6252/504   19472/2778    50  350   59.78)
(sat.ddfw       1      1   11.0803   2110001     10343         20            1      214)
(smt.stats   68   9745 259231 1131307  6665/6300/504   19785/2780    50  350   59.88)
ramon: poll                 wall=19.000s usage=18.942s mem=62128KiB load=1.00 rootload=0.99
(smt.stats   69   9879 263560 1155864  6753/6362/504   20190/2783    50  350   59.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 160)
(smt.stats   70  10026 264684 1166362  6767/6446/504   20227/2783    50  350   59.97)
(smt.stats   71  10187 266933 1202557  6791/6456/504   20472/2785    50  350   59.97)
(smt.stats   72  10364 271321 1244967  6807/6489/504   20688/2785    50  350   59.97)
(sat.ddfw       1      1   10.5793   2320001     11372         21            1      235)
ramon: poll                 wall=20.000s usage=19.942s mem=62564KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:27:42 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.010s
ramon: group.total          20.009s
ramon: group.utime          19.993s
ramon: group.stime          0.016s
ramon: group.mempeak        62596KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.071s
ramon: loadavg              1.00
