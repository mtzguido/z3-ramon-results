ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:42:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25200 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/d17byhGawfA2.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             98708
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5669   1007  1335/1203/104      86/21    10   23   19.27)
(smt.stats    1    202   6972   3309  2325/2109/112     181/51    13   36   19.46)
(smt.stats    2    313   7608   3762  2545/2302/112     296/59    14   36   19.96)
(smt.stats    3    414   8447   4848  2795/2494/113     439/63    15   37   19.96)
(smt.stats    4    525  10475   6428  2975/2681/118     546/105    17   46   19.96)
(smt.stats    5    647  11585   8524  3164/2877/119     751/119    18   46   20.05)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  11904   9201  3329/2923/119     866/133    18   46   20.24)
(smt.stats    7    859  12992  11525  3454/3119/119     976/142    18   46   20.24)
(smt.stats    8    981  13966  13923  3601/3240/119    1160/147    18   46   20.24)
(smt.stats    9   1115  15748  16804  3611/3349/120    1300/240    19   47   20.34)
(smt.stats   10   1216  17228  21467  3665/3358/120    1431/240    19   47   20.34)
ramon: poll                 wall=1.000s usage=1.000s mem=21456KiB load=1.00 rootload=0.99
(smt.stats   11   1327  18294  24169  3752/3412/120    1567/241    19   47   20.34)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  19233  27898  3801/3534/122    1703/292    20   51   20.34)
(smt.stats   13   1583  20385  30558  3894/3545/123    1847/292    20   51   20.45)
(smt.stats   14   1730  23357  37268  3974/3642/123    2010/299    21   52   20.54)
(smt.stats   15   1831  24431  41113  4021/3722/123    2145/301    21   52   20.54)
(smt.stats   16   1942  25299  46927  4058/3771/123    2265/301    21   52   20.54)
(smt.stats   17   2064  25927  49872  4071/3812/123    2388/301    21   52   20.64)
(smt.stats   18   2198  27755  56594  4161/3813/123    2548/301    21   52   20.64)
(smt.stats   19   2345  29790  62785  4247/3935/127    2753/411    22   52   20.64)
(smt.stats   20   2506  31783  72170  4374/4017/128    2925/411    22   52   20.74)
(smt.stats   21   2607  33295  78249  4399/4119/128    3028/424    23   54   20.74)
(smt.stats   22   2718  35778  84111  4424/4142/128    3140/424    23   54   20.74)
ramon: poll                 wall=2.000s usage=1.999s mem=21936KiB load=1.00 rootload=1.00
(smt.stats   23   2840  37729  89919  4452/4167/128    3264/424    23   54   20.84)
(smt.stats   24   2974  40399  99246  4494/4197/128    3429/426    23   54   20.84)
(smt.stats   25   3121  42271 106112  4519/4240/128    3577/426    23   54   20.84)
(smt.stats   26   3282  45125 111310  4600/4339/130    3754/454    24   55   20.94)
(smt.stats   27   3463  49927 120966  4613/4347/130    3952/455    24   55   20.94)
(smt.stats   28   3564  50860 122516  4667/4360/132    4059/483    25   56   21.03)
(smt.stats   29   3675  51186 123425  4899/4500/132    4188/500    25   56   21.23)
(smt.stats   30   3797  51471 124462  5145/4777/132    4318/507    25   56   21.23)
ramon: poll                 wall=3.004s usage=3.001s mem=22508KiB load=1.00 rootload=1.01
(smt.stats   31   3931  52195 126621  5564/4984/132    4456/528    25   56   21.33)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4078  58680 136781  5766/5487/132    4668/528    25   56   21.52)
(smt.stats   33   4239  62469 144132  5841/5508/132    4856/528    25   56   21.52)
(smt.stats   34   4416  64768 152970  5873/5603/132    5086/529    25   56   21.52)
(smt.stats   35   4610  67930 161608  5914/5622/132    5321/530    25   56   21.52)
(smt.stats   36   4711  69802 166268  5924/5661/132    5427/530    25   56   21.52)
(smt.stats   37   4822  70897 169734  5934/5666/132    5550/530    25   56   21.52)
(smt.stats   38   4944  73338 179048  5963/5684/132    5700/531    25   56   21.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 79)
(smt.stats   39   5078  76736 199094  6010/5703/132    5764/531    25   56   21.62)
(smt.stats   40   5225  79521 210738  6046/5754/132    5918/532    25   56   21.62)
ramon: poll                 wall=4.000s usage=3.998s mem=22904KiB load=1.00 rootload=0.99
(smt.stats   41   5386  82973 222012  6112/5795/132    6092/536    25   56   21.73)
(smt.stats   42   5563  85471 235362  6134/5859/132    6282/537    25   56   21.73)
(smt.stats   43   5757  88080 250001  6185/5884/132    6478/540    25   56   21.73)
(smt.stats   44   5970  92297 264047  6196/5933/132    6701/541    25   56   21.73)
(smt.stats   45   6071  93485 267615  6202/5942/132    6801/541    25   56   21.83)
(smt.stats   46   6182  94344 270669  6203/5943/132    6914/541    25   56   21.92)
(smt.stats   47   6304  98454 278374  6203/5943/132    7050/541    25   56   21.92)
(smt.stats   48   6438  99714 283269  6204/5944/132    7183/541    25   56   21.92)
(smt.stats   49   6585 103040 291866  6212/5947/133    7332/746    26   57   22.03)
(smt.stats   50   6746 105287 305210  6223/5959/133    7533/746    26   57   22.03)
(smt.stats   51   6923 107842 311647  6226/5966/133    7714/746    26   57   22.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7117 111132 323089  6230/5970/133    7906/746    26   57   22.03)
(smt.stats   53   7330 114617 336376  6241/5972/136    8131/783    27   62   22.14)
(smt.stats   54   7564 115987 343758  6245/5982/136    8386/784    27   62   22.14)
(smt.stats   55   7665 116442 346869  6245/5985/137    8515/787    28   66   22.14)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 4752&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 4752 := 4752 >>l 61
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 4751&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 4751 := 4752 >>l 61
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 716&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 716 := 4752 >>l 61
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 613 := 297 >>l 57
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 612 := 297 >>l 57
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 298 := 297 >>l 57
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 3904 >>l 8
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 3856 >>l 5
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 3872 >>l 6
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 3888 >>l 7
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 4784 >>l 63
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 715 := 299 >>l 59
(smt.stats   56   7776 117457 351421  6287/5989/137    8659/789    28   66   22.23)
(smt.stats   57   7898 117701 357331  6359/6083/173    8858/789    28   66   22.46)
(smt.stats   58   8032 117945 360750  6352/6083/173    9029/803    29   73   22.46)
ramon: poll                 wall=5.000s usage=4.991s mem=23700KiB load=0.99 rootload=0.99
(smt.stats   59   8179 119339 368072  6357/6088/173    9206/803    29   73   22.46)
(smt.stats   60   8340 120928 373680  6359/6090/175    9422/807    30   73   22.46)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 2880 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 181&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 2305843009213694133 := 2880 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 181&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 2305843009213694133 := 2880 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 181&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 181 := 2912 >>l 6
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 45&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 38 := 182 >>l 2
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 46&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 46 := 2912 >>l 6
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 180&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 180 := 2896 >>l 5
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 90&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 38 := 181 >>l 1
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 91&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 91 := 2896 >>l 5
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 90&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 91 := 181 >>l 1
(smt.stats   61   8517 122402 381146  6389/6092/175    9613/811    30   73   22.56)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 181&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 3458764513820541109 := 3216 >>l 25
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 792633534417208680&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 4251398048237749608 := 3248 >>l 27
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 3458764513820540927 := 3248 >>l 27
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 720575940379283338&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 3026418949592977290 := 3248 >>l 27
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 720575940379283338&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 3026418949592977290 := 3232 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 720575940379283338&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 720575940379283338 := 3232 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 720575940379283338&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 720575940379283338 := 3232 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 1152921504606846975 := 3344 >>l 33
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 720575940379283338&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 720575940379283338 := 3296 >>l 30
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 1152921504606846975 := 3312 >>l 31
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 720575940379283338&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 720575940379283338 := 3264 >>l 28
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 720575940379283338&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 720575940379283338 := 3280 >>l 29
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 2305843009213693952 := 3280 >>l 29
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 2305843009213693952 := 3280 >>l 29
(smt.stats   62   8711 124537 388250  6489/6149/185    9828/811    30   73   22.77)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 16350&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 12682136550675333086 := 3296 >>l 30
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 12682136550675316737 := 3296 >>l 30
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 792633534417208859 := 206 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 720575940379283337 := 206 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 720575940379283337 := 206 >>l 26
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 792633534417208681&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 3098476543630902633 := 2320 >>l 29
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 5764607523034234879 := 2304 >>l 28
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 792633534417208681&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 5404319552844596585 := 2304 >>l 28
(smt.stats   63   8924 126789 396430  6628/6333/231   10072/815    31   83   22.86)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 230584300921369395&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 2536427310135063347 := 1504 >>l 38
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1152921504606846975&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 2305843009213693951 := 1504 >>l 38
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 230584300921369395&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 1383505805528216371 := 1504 >>l 38
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 216172782113784997 := 94 >>l 34
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 72057594037927177 := 94 >>l 34
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 72057594037913161 := 94 >>l 34
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 230584300921369395&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 16371485365417227059 := 1840 >>l 59
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 216172782113784998&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 16357073846609642662 := 1840 >>l 59
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 216172782113784976&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 16357073846609642640 := 1840 >>l 59
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 216172782113784975 := 115 >>l 55
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 216172782113784937 := 115 >>l 55
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 216172782113784937 := 115 >>l 55
(smt.stats   64   9158 129329 404245  6693/6368/231   10337/816    31   83   22.96)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 230584300921369395&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 2536427310135063347 := 960 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1887&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 1887 := 1888 >>l 62
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 1888 >>l 62
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 118 := 118 >>l 58
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 1888 >>l 62
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 38 := 118 >>l 58
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 0 := 1888 >>l 62
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 38 := 118 >>l 58
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 1 := 1872 >>l 61
(smt.stats   65   9415 131866 416058  6761/6451/251   10593/854    32   89   23.06)
(smt.stats   66   9516 132849 424320  6799/6496/261   10714/854    32   89   23.15)
(smt.stats   67   9627 135213 433296  6799/6496/261   10829/858    33   91   23.15)
(smt.stats   68   9749 136621 443673  6806/6505/261   10947/858    33   91   23.15)
(smt.stats   69   9883 138695 453669  6816/6515/261   11083/858    33   91   23.25)
ramon: poll                 wall=6.000s usage=5.991s mem=24540KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 709)
(smt.stats   70  10030 140051 465379  6822/6521/261   10522/858    33   91   23.15)
(smt.stats   71  10191 141471 482401  6852/6529/261   10687/858    33   91   23.15)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   72  10368 143668 492579  6858/6556/261   10874/858    33   91   23.15)
(smt.stats   73  10562 145457 505212  6874/6563/261   11080/868    33   91   23.26)
(smt.stats   74  10775 152933 528831  6922/6595/261   11299/868    33   91   23.36)
ramon: poll                 wall=7.000s usage=6.990s mem=24672KiB load=1.00 rootload=1.00
(smt.stats   75  11009 158647 544508  6933/6627/261   11575/868    33   91   23.36)
(smt.stats   76  11266 165923 565238  6935/6629/261   11861/868    33   91   23.36)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 16350&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 1152921504606863326 := 3458764513820613648 >>l 37
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 4983&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 4983 := 3458764513820613648 >>l 37
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 16350&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 16350 := 3458764513820613648 >>l 37
(smt.stats   77  11548 175246 586156  7029/6714/269   12196/937    34   92   23.47)
(smt.stats   78  11649 178654 599779  7097/6783/270   12308/945    34   92   23.56)
(smt.stats   79  11760 182938 614941  7140/6798/270   12444/967    35   93   23.56)
ramon: poll                 wall=8.000s usage=7.990s mem=24900KiB load=1.00 rootload=1.00
(smt.stats   80  11882 186075 637841  7153/6845/273   12570/967    35   93   23.56)
(smt.stats   81  12016 188030 651967  7200/6862/273   12736/1002    36  103   23.66)
(smt.stats   82  12163 192364 666087  7265/6907/273   12906/1006    36  103   23.66)
(smt.stats   83  12324 195109 674982  7307/6970/273   13071/1006    36  103   23.66)
ramon: poll                 wall=9.000s usage=8.990s mem=25008KiB load=1.00 rootload=1.00
(smt.stats   84  12501 197803 690010  7403/7073/274   13288/1059    37  105   23.75)
(smt.stats   85  12695 202433 716267  7468/7130/274   13463/1064    37  105   23.85)
ramon: poll                 wall=10.000s usage=9.990s mem=25232KiB load=1.00 rootload=1.00
(smt.stats   86  12909 207411 747038  7638/7330/279   13487/1145    39  307   23.85)
(smt.stats   87  13143 214305 762945  7735/7344/279   13777/1149    39  307   23.94)
ramon: poll                 wall=11.000s usage=10.989s mem=25288KiB load=1.00 rootload=1.00
(smt.stats   88  13400 221630 781531  7937/7454/279   14077/1182    40  307   23.94)
ramon: poll                 wall=12.000s usage=11.989s mem=25396KiB load=1.00 rootload=1.00
(smt.stats   89  13682 227377 801211  8032/7683/280   14414/1187    40  307   24.04)
(smt.stats   90  13992 232409 825651  8142/7781/280   14704/1232    41  313   24.04)
(smt.stats   91  14093 235037 837582  8189/7850/280   14833/1233    41  313   24.14)
ramon: poll                 wall=13.000s usage=12.989s mem=25480KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   92  14204 237940 849164  8226/7885/280   14958/1234    41  313   24.14)
(smt.stats   93  14326 240629 864068  8273/7935/280   15119/1237    41  313   24.14)
(smt.stats   94  14460 243287 872063  8431/8123/283   15308/1309    42  320   24.14)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 12682136550675316736 := 5744 >>l 63
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 14987979559889010688 := 9584 >>l 63
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 14987979559889010688 := 9584 >>l 63
(smt.stats   95  14607 245074 879246  8476/8136/283   15452/1311    42  320   24.24)
(smt.stats   96  14768 247504 894127  8509/8193/288   15657/1311    42  320   24.72)
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 216172782113784976 := 2339 >>l 59
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 0&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 216172782113784976 := 2339 >>l 59
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 1152921504606846977 := 37408 >>l 62
band: (band[60] (lshr[64] (* 16 #98) (mod #354 64)) (if (= #652 63) 10633823966279326983230456482242756608 (if #654 5316911983139663491615228241121378304 #778))) 0 := 1&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #353) 64)) 1152921504606846977 := 37408 >>l 62
(smt.stats   97  14945 251128 909308  8523/8204/288   15914/1375    43  328   24.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
ramon: poll                 wall=14.000s usage=13.989s mem=26256KiB load=1.00 rootload=0.99
(smt.stats   98  15139 254597 921089  8575/8227/288   16123/1376    43  328   24.81)
(smt.stats   99  15352 256880 937652  8593/8268/288   16348/1378    43  328   24.81)
ramon: poll                 wall=15.000s usage=14.988s mem=26400KiB load=1.00 rootload=1.00
(smt.stats  100  15586 263547 958602  8671/8300/288   16650/1381    43  328   24.91)
(smt.stats  101  15843 269114 991829  8822/8507/289   16801/1449    44  469   25.01)
ramon: poll                 wall=16.000s usage=15.988s mem=26500KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  102  16125 273240 1019568  8856/8545/290   17118/1485    45  470   25.10)
(smt.stats  103  16435 281433 1050567  8876/8565/290   17426/1485    45  470   25.10)
(smt.stats  104  16775 297283 1100122  8904/8583/290   17795/1485    45  470   25.10)
(smt.stats  105  16876 300800 1120943  8916/8605/290   17938/1485    45  470   25.10)
ramon: poll                 wall=17.000s usage=16.988s mem=26596KiB load=1.00 rootload=1.00
(smt.stats  106  16987 304291 1135829  8926/8615/290   18042/1485    45  470   25.10)
(smt.stats  107  17109 307936 1168372  8943/8625/290   18222/1486    45  470   25.20)
(smt.stats  108  17243 309524 1176424  9005/8640/290   18380/1488    45  470   25.39)
(smt.stats  109  17390 312474 1193557  9139/8706/290   18538/1490    45  470   25.49)
ramon: poll                 wall=18.000s usage=17.988s mem=26924KiB load=1.00 rootload=1.00
(smt.stats  110  17551 315504 1207650  9215/8845/290   18796/1495    45  470   25.49)
(smt.stats  111  17728 319018 1213862  9317/8906/290   19031/1508    45  470   25.58)
ramon: poll                 wall=19.000s usage=18.988s mem=27052KiB load=1.00 rootload=1.00
(smt.stats  112  17922 322971 1229376  9668/9136/290   19280/1513    45  470   25.68)
(smt.stats  113  18135 326228 1253300  9778/9398/290   19588/1514    45  470   25.68)
ramon: poll                 wall=20.003s usage=19.989s mem=27252KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:43:10 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.991s
ramon: group.utime          19.979s
ramon: group.stime          0.012s
ramon: group.mempeak        27508KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
