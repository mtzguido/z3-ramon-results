ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:24:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         16177 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1183
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libsmbsharemodes_vc5735.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1353532
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
failed to commit (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...))) 1 ev: 0 [1, 0[
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
tabu (if (or (not #10561) (and #10606 #10599 #10602) (= #10658 bv[4294967295:32]) (and #10752 #12998)) v113787120 (if (= #13345 bv[0:32]) bv[0:32] (concat #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 #13052 ...)))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      25     40   176.316     10050         0          0          113      260)
(sat.ddfw      19      7   129.221     20000         0          1           15      321)
(sat.ddfw      19    153   170.356     40102         0          2           83      461)
(sat.ddfw      18    143   167.285     70046         0          3           83      713)
(sat.ddfw      10    105   152.217    110079         0          4          123      992)
(sat.ddfw      10    431   138.476    160069         0          5          121     1428)
(sat.ddfw       6    121   123.726    220076         1          6           92     1878)
(sat.ddfw       6    577   110.669    290019         1          7           80     2402)
(sat.ddfw       6   1025   99.8514    370000         2          8           19     3148)
ramon: poll                 wall=1.000s usage=0.943s mem=21528KiB load=0.94 rootload=0.93
(sat.ddfw       3    579    91.001    460000         3          9          144     3885)
(sat.ddfw       3   1025   83.5848    560051         3         10           83     4713)
(sat.ddfw       3   1025   77.0427    670068         4         11          102     5916)
(sat.ddfw       3   1025   71.3456    790000         5         12           74     7025)
ramon: poll                 wall=2.000s usage=1.943s mem=21304KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   66.8551    920100         6         13          136     8825)
(sat.ddfw       1    778   61.1718   1060000         7         14          112     9982)
(sat.ddfw       1   1025   57.8835   1210034         7         15           53    11304)
ramon: poll                 wall=3.000s usage=2.941s mem=21304KiB load=1.00 rootload=0.99
(sat.ddfw       1   1025   54.1615   1370027         7         16          117    12440)
ramon: poll                 wall=4.000s usage=3.941s mem=21304KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   42.5579   1540046         9         17          121    13980)
(sat.ddfw       1   1025   41.2111   1720015        10         18          123    15665)
(sat.ddfw       1   1025   39.7958   1910000        12         19           69    18507)
ramon: poll                 wall=5.000s usage=4.941s mem=21304KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   38.4025   2110000        13         20           61    20239)
(sat.ddfw       1   1025   37.0044   2320000        14         21          110    22793)
ramon: poll                 wall=6.000s usage=5.933s mem=21304KiB load=0.99 rootload=1.00
(sat.ddfw       1   1025   34.6249   2540041        14         22          100    25103)
ramon: poll                 wall=7.000s usage=6.933s mem=21304KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   29.8959   2770000        15         23           46    28509)
ramon: poll                 wall=8.000s usage=7.932s mem=21304KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   28.9753   3010031        15         24           23    31203)
(sat.ddfw       1   1025   28.0612   3260000        15         25           66    35911)
ramon: poll                 wall=9.000s usage=8.928s mem=21304KiB load=1.00 rootload=0.99
(sat.ddfw       1   1025   27.3015   3520047        17         26          129    38788)
ramon: poll                 wall=10.000s usage=9.928s mem=21304KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   26.5362   3790000        18         27           11    44722)
ramon: poll                 wall=11.000s usage=10.927s mem=21304KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   23.8162   4070031        21         28           77    47642)
ramon: poll                 wall=12.000s usage=11.927s mem=21304KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   23.4095   4360121        22         29          116    53196)
ramon: poll                 wall=13.000s usage=12.927s mem=21308KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025    22.756   4660000        23         30           80    56562)
(sat.ddfw       1   1025    22.405   4970130        25         31          109    62100)
ramon: poll                 wall=14.000s usage=13.927s mem=21308KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   21.9704   5290063        28         32           54    65580)
ramon: poll                 wall=15.000s usage=14.925s mem=21308KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   21.3451   5620016        29         33           18    70938)
ramon: poll                 wall=16.000s usage=15.925s mem=21308KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   20.6915   5960019        30         34           83    75103)
ramon: poll                 wall=17.000s usage=16.925s mem=21308KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025    20.236   6310000        30         35           25    82614)
ramon: poll                 wall=18.000s usage=17.925s mem=21308KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.925s mem=21308KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   18.7813   6670038        31         36           76    87715)
ramon: poll                 wall=20.000s usage=19.925s mem=21308KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:25:04 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.990s
ramon: group.utime          19.978s
ramon: group.stime          0.012s
ramon: group.mempeak        21564KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
