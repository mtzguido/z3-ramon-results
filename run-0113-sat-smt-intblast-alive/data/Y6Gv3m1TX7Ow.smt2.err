ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:08:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40368 MiB
ramon: sys.mem.avail        61379 MiB
ramon: sys.nprocs           1324
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Y6Gv3m1TX7Ow.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3885191
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   209/208     0/0  58       0    18.53   0.00)
(sat.stats    201   1592    0   210/209   201/86  58       0    18.92   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 970 :time 0.00)
(sat.stats    201   1592    0   209/208   201/86  61       0    18.92   0.01)
(sat.stats    201   1592    0   209/208   201/86  61       0    18.92   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 606418.92 :time 0.00)
(sat.stats    201   1592    0   209/208   207/92  61       0    18.92   0.01)
(sat.stats    390   4536    1   209/208   396/217  61       0    19.02   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    393   4560    2   209/208   399/217  61       0    19.02   0.02)
(sat.stats    396   4616    3   209/208   402/219  61       0    19.02   0.02)
(sat.stats    399   4692    4   209/208   405/219  61       0    19.02   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 2668 :time 0.00)
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #79))) 0 := 19 << 27
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 19937 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 28612 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #656 #658) 64)) 95823839 := 38 << 26
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 29732 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 1 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 248200 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 403920 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 155424 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 1033728 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 128 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 64 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 256 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 31265792 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 9115648 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 39636992 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 18169856 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 8192 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 23396352 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 32768 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 30277632 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 20185088 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 42467328 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 57671680 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 25165824 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 4194304 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 2097152 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 67108864 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 16777216 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 33554432 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 194914 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 8 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 309472 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 16 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 64 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 692352 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 4340736 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 256 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 512 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 13565952 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 2048 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 131072 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 51642368 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 28311552 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 524288 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 0 := 95823839&2550136832
band: (band[46] (shl[64] (* 2 #78) (mod #659 64)) (if (or #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 ...) 0 (if #684 1 #774))) 2 := 2550136832&95823839
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 4096 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 8192 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 32768 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 16384 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 79691776 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 2097152 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 50331648 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 8388608 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 67108864 := 95823839&2550136832
band: (band[46] (if (= #54 45) 1 (if #515 2 #642)) (shl[46] (bv2int %0) (+ 46 #645))) 33554432 := 95823839&2550136832
(sat.stats    689  10759    5  2557/2554   817/381  70       0    22.68   0.19)
(sat.stats    692  10881    6  3439/3436   826/387  70       0    22.87   0.20)
(sat.stats    695  10983    7  3617/3614   842/400  70       0    22.87   0.20)
(sat.stats :conflicts    :restarts      :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    698  10989    8  3690/3687   847/403  70       0    22.97   0.20)
(sat.stats    701  11078    9  3896/3893   862/415  70       0    23.08   0.20)
(sat.stats    704  11170   10  4050/4047   872/422  70       0    23.08   0.20)
(sat.stats    707  11260   11  4169/4166   883/430  70       0    23.08   0.21)
(sat.stats    710  11323   12  4395/4392   904/448  70       0    23.19   0.21)
(sat.stats    714  11342   13  4625/4622   913/453  70       0    23.19   0.21)
(sat.stats    717  11380   14  4794/4791   930/467  70       0    23.29   0.21)
(sat.stats    720  11401   15  5084/5081   950/484  70       0    23.48   0.22)
(sat.stats    723  11414   16  5375/5372   966/497  70       0    23.48   0.22)
ramon: poll                 wall=1.000s usage=0.996s mem=31424KiB load=1.00 rootload=0.97
ramon: poll                 wall=2.000s usage=1.993s mem=33732KiB load=1.00 rootload=1.00
(sat.stats :conflicts   :restarts       :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin           :units        :memory       )
(sat.stats   1201  17616   55 65674/65671  2631/1714  70       0    34.01   2.33)
ramon: poll                 wall=3.000s usage=2.990s mem=38560KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7731 :time 0.00)
ramon: poll                 wall=4.000s usage=3.983s mem=39384KiB load=0.99 rootload=0.99
ramon: poll                 wall=5.000s usage=4.981s mem=39384KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.978s mem=39520KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.976s mem=39776KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.976s mem=39776KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.975s mem=39776KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.001s usage=9.975s mem=39884KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.975s mem=39884KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.975s mem=39884KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.975s mem=39884KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 8312 :time 0.00)
ramon: poll                 wall=14.000s usage=13.975s mem=39884KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 8344 :time 0.00)
(sat.stats   1598  28979  148 151545/151542  3556/2317 405       0    43.54  14.74)
ramon: poll                 wall=15.000s usage=14.974s mem=45944KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.974s mem=46456KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.974s mem=46968KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.974s mem=46968KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.974s mem=47224KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.973s mem=47736KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:08:51 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.982s
ramon: group.utime          19.950s
ramon: group.stime          0.032s
ramon: group.mempeak        47996KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
