ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:45:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27843 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/amh2KhYsO1O5.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             858527
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   90.9091     10000        49          0            1        2)
(sat.ddfw       1      1   45.0495     20001        98          1            1        3)
(smt.stats    0    101   5125    360  1152/1043/100      92/10     6   20   52.05)
(sat.ddfw       1      1   45.7666     40001       196          2            1        5)
(smt.stats    1    202   6469    740  1988/1746/100     205/13     6   20   52.25)
(smt.stats    2    313   8447   2619  2105/1887/100     321/13     6   20   52.25)
(smt.stats    3    414  10754   4110  2146/1952/102     437/41     7   24   52.34)
(smt.stats    4    525  11891   4906  2331/2116/107     549/68     9   31   52.44)
(sat.ddfw       1      1   39.4218     70001       343          3            1        8)
(smt.stats    5    647  13520   6578  2520/2286/109     668/73    10   31   52.53)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14393   7946  2575/2319/109     763/86    11   32   52.63)
(smt.stats    7    859  15021   9530  2597/2364/109     866/86    11   32   52.63)
ramon: poll                 wall=1.000s usage=1.021s mem=54688KiB load=1.02 rootload=1.01
(smt.stats    8    981  16374  11998  2604/2377/109     985/86    11   32   52.63)
(smt.stats    9   1115  17961  13604  2608/2382/109    1122/86    11   32   52.75)
(smt.stats   10   1216  18695  15749  2627/2394/109    1228/87    11   32   52.75)
(sat.ddfw       1      1    33.557    110001       539          4            1       12)
(smt.stats   11   1327  19218  17277  2642/2416/109    1334/90    11   32   52.94)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1449  19659  17829  2804/2535/109    1462/95    11   32   52.94)
(smt.stats   13   1583  22402  19975  2838/2603/109    1631/95    11   32   52.94)
(sat.ddfw       1      1   28.9179    160000       784          5            1       17)
(smt.stats   14   1730  27825  22986  2910/2676/110    1797/166    12   33   53.04)
(smt.stats   15   1831  31820  25185  2943/2718/110    1899/166    12   33   53.04)
(smt.stats   16   1942  34083  28158  2963/2728/117    2004/168    13   40   53.14)
ramon: poll                 wall=2.000s usage=2.017s mem=55172KiB load=1.00 rootload=1.00
(smt.stats   17   2064  34885  31089  2977/2744/117    2140/168    13   40   53.14)
(smt.stats   18   2198  37176  36262  2998/2753/117    2281/184    14   43   53.30)
(smt.stats   19   2345  40494  40633  3010/2779/121    2429/208    15   43   53.30)
(smt.stats   20   2506  42575  43958  3014/2788/121    2593/208    15   43   53.40)
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 17179869891&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 9007216434610883 := 2199023255543 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 17179869891&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 9007216434610883 := 2199023255543 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 17179869891&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 9007216434610883 := 2199023255543 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 17179869891&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 9007216434610883 := 2199023255543 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1480&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446741874686297544 := 2199023255543 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 8589934592 := 2044404432896&8589934592
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2044404432896&8589934592
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 2199023255543 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 8589934592 := 2044404432896&8589934592
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 8589934591 := 2044404432896&8589934592
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2044404432896&8589934592
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2044404432927 := 2199023255543 << 34
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 8589934562 := 2044404432896&8589934592
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2044404432896&8589934592
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2044404432927 := 2199023255543 << 34
(smt.stats   21   2607  43780  46426  3053/2812/138    2690/213    16   45   53.40)
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 17179869184 := 2061584302081&17179869184
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2061584302081&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446743936270598145 := 2199023255544 << 35
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 17179869184 := 2061584302081&17179869184
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2078764171263&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446743953450467327 := 2199023255544 << 35
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 17179869184 := 2061584302081&17179869184
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 17179869184 := 2061584302081&17179869184
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2061584302081&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446743936270598145 := 2199023255544 << 35
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 17179869184 := 2181843386367&17179869184
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2181843386367&17179869184
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446744056529682431 := 2199023255544 << 35
(sat.ddfw       1      1   25.2636    220001      1078          6            1       23)
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2113123909631&68719476736
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446743987810205695 := 2199023255546 << 37
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2181843386367&34359738368
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2181843386367&34359738368
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2181843386367&34359738368
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2181843386367&34359738368
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 2130303778816&34359738368
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446744004990074880 := 2199023255545 << 36
(smt.stats   22   2718  45532  49413  3095/2825/138    2800/214    16   45   53.51)
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 34359738368 := 2164663517184&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 68719476736 := 2164663517184&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 34359738368 := 2164663517184&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 68719476736 := 2181843386367&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 137438953472 := 2181843386367&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 274877906944 := 2181843386367&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 549755813888 := 2181843386367&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446744056529682431 := 2199023255549 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 17179869183&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446741891866165247 := 2199023255549 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1482&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 18446741874686297546 := 2199023255549 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 34359738368 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 34359738368 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 34359738368 := 1099511627776&549755813888
(smt.stats   23   2840  47521  52635  3173/2917/200    2912/220    17   55   53.61)
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 549755813888 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 549755813888 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 549755813888 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 274877906944 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 274877906944 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 274877906944 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 274877906944 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 137438953472 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 68719476736 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 68719476736 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 17179869184 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1099511627776&549755813888
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 17179870205 := 2199023255549 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1099511627776&549755813888
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 2199023255549 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 25769803775 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 25769803774 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 25769803772 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 17179869184 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 17179869184 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 2 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 4 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 8 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 16 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 4 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 8 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 32 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 64 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 128 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 256 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 512 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 1024 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 2048 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 4096 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 8192 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 16384 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 32768 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 65536 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 131072 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 262144 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 524288 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 524288 := 1099511627776&549755813888
(smt.stats   24   2974  49477  58769  3269/3027/294    3032/228    19   95   54.40)
ramon: poll                 wall=3.000s usage=3.018s mem=56588KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   22.3928    290001      1421          7            1       30)
(smt.stats   25   3121  53953  65108  3360/3120/295    3200/278    20  111   54.40)
(smt.stats   26   3283  57043  71938  3399/3159/298    3375/298    21  112   54.52)
ramon: poll                 wall=4.000s usage=4.017s mem=56656KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   20.0602    370001      1813          8            1       38)
(smt.stats   27   3460  59564  77751  3637/3389/300    3564/315    21  112   54.52)
ramon: poll                 wall=5.000s usage=5.014s mem=56708KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   18.1745    460001      2254          9            1       47)
(smt.stats   28   3561  61013  80936  3720/3424/309    3654/335    22  116   54.61)
(smt.stats   29   3672  63904  87094  3806/3493/309    3776/351    22  116   55.00)
(smt.stats   30   3794  66840  93892  3897/3649/311    3694/403    24  317   55.00)
ramon: poll                 wall=6.004s usage=6.018s mem=57120KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   16.6085    560001      2745         10            1       57)
(smt.stats   31   3928  69166  99486  3978/3682/311    3837/410    24  317   55.00)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  71799 105906  3990/3752/312    4001/457    25  317   55.10)
ramon: poll                 wall=7.000s usage=7.078s mem=57368KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   15.6584    670001      3284         11            1       68)
(smt.stats   33   4236  78596 116226  4155/3753/312    4161/470    25  317   55.20)
(smt.stats   34   4413  81349 124306  4268/4014/312    4313/470    25  317   55.20)
(smt.stats   35   4607  88731 138186  4284/4046/312    4516/470    25  317   55.20)
(smt.stats   36   4708  94854 147223  4286/4048/312    4615/470    25  317   55.43)
(smt.stats   37   4819  98960 155970  4292/4054/312    4758/470    25  317   55.43)
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 154618822656&131072
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 16397107219595788288 := 2684354560 << 18
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 154618822656&131072
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 16397107219595788288 := 2684354560 << 18
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 154618822656&131072
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 16397107219595788288 := 2684354560 << 18
(smt.stats   38   4941 103103 162874  4313/4056/312    4895/471    25  317   55.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 5)
ramon: poll                 wall=8.000s usage=8.114s mem=57780KiB load=1.04 rootload=1.03
(smt.stats   39   5075 107150 171089  4363/4086/317    5018/508    26  318   55.43)
(smt.stats   40   5222 112417 180577  4394/4131/317    5160/510    27  318   55.53)
(sat.ddfw       1      1    14.437    790001      3872         12            1       80)
(smt.stats   41   5383 115698 184553  4457/4179/317    5305/512    27  318   55.75)
(smt.stats   42   5560 118918 193045  4505/4247/317    5466/515    27  318   55.75)
ramon: poll                 wall=9.000s usage=9.112s mem=58028KiB load=1.00 rootload=1.00
(smt.stats   43   5754 121431 199929  4634/4288/319    5660/526    28  320   55.94)
(sat.ddfw       1      1   13.3883    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=10.097s mem=58100KiB load=0.99 rootload=0.98
(smt.stats   44   5967 124686 208136  5161/4623/319    5872/533    28  320   56.03)
(smt.stats   45   6068 129290 214615  5169/4930/319    5973/550    29  322   56.03)
(smt.stats   46   6179 132588 222484  5170/4931/319    6088/550    29  322   56.03)
(smt.stats   47   6301 139245 233472  5171/4932/319    6213/550    29  322   56.35)
(smt.stats   48   6435 144872 241533  5171/4932/319    6359/550    29  322   56.35)
ramon: poll                 wall=11.000s usage=11.082s mem=58608KiB load=0.98 rootload=0.99
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 137438953472&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 137438953472 := 20937965568 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 68719476736&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 68719476736 := 20937965568 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 41875931136&1
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 20937965568 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 41875931136&1
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 20937965568 << 1
(smt.stats   49   6583 149326 253100  5205/4945/320    6507/567    30  322   56.35)
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 41875931136&1
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #574 40) 1 (if #576 2 #654))) 1 := 41875931136&1
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 41875931136&1
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #574 40) 1 (if #576 2 #654))) 1 := 41875931136&1
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 41875931136&1
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #574 40) 1 (if #576 2 #654))) 1 := 41875931136&1
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 1 := 41875931136&1
(smt.stats   50   6745 152999 264486  5255/4990/330    6663/568    30  322   56.45)
(sat.ddfw       1      1   12.4967   1060001      5196         14            1      108)
(smt.stats   51   6922 157690 274725  5280/5015/345    6845/569    31  327   56.45)
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1483&2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1485&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 1485 := 19864223744 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 341&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 341 := 19864223744 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 341&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #316) 64)) 341 := 19864223744 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 79456894976&2
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 79456894976 := 19864223744 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 79456894976&2
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #574 40) 1 (if #576 2 #654))) 2 := 79456894976&2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 79456894976&2
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 79456894976 := 19864223744 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 79456894976&2
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #574 40) 1 (if #576 2 #654))) 1 := 79456894976&2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 79456894976&2
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 79456894976 := 19864223744 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 79456894976&2
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #574 40) 1 (if #576 2 #654))) 1 := 79456894976&2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 2 := 79456894976&2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 1 := 79456894976&2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 1 := 79456894976&2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 79456894976&2
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 79456894977 := 19864223744 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #317 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 79456894976&2
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 79456894977 := 19864223744 << 2
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7116 160642 280182  5373/5065/345    7042/578    32  327   56.73)
(smt.stats   53   7329 165731 296790  5401/5148/371    7280/599    33  341   56.73)
ramon: poll                 wall=12.000s usage=12.073s mem=59100KiB load=0.99 rootload=0.98
(sat.ddfw       1      1   11.6795   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=13.025s mem=59356KiB load=0.95 rootload=0.96
(smt.stats   54   7563 171417 308461  5609/5174/374    7523/631    34  342   56.92)
ramon: poll                 wall=14.000s usage=14.011s mem=59148KiB load=0.99 rootload=0.98
(smt.stats   55   7664 173207 311198  5886/5494/374    7627/633    34  342   57.02)
(sat.ddfw       1      1   10.9657   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=14.995s mem=59236KiB load=0.98 rootload=0.99
(smt.stats   56   7775 174720 316323  6248/5774/374    7740/633    34  342   57.11)
(smt.stats   57   7897 178163 327104  6261/6002/374    7884/633    34  342   57.11)
(smt.stats   58   8031 180565 332884  6281/6020/374    8026/653    35  343   57.21)
(smt.stats   59   8178 186077 352394  6305/6044/374    8173/653    35  343   57.30)
ramon: poll                 wall=16.000s usage=16.062s mem=59628KiB load=1.07 rootload=1.06
(smt.stats   60   8339 188922 362868  6507/6100/374    8349/659    35  343   57.40)
(sat.ddfw       1      1   10.3532   1540001      7549         17            1      156)
ramon: poll                 wall=17.004s usage=17.066s mem=59884KiB load=1.00 rootload=1.01
(smt.stats   61   8516 192156 375564  6605/6237/374    8572/668    35  343   57.40)
(smt.stats   62   8710 197530 383555  6636/6339/374    8766/670    35  343   57.49)
ramon: poll                 wall=18.004s usage=18.066s mem=59884KiB load=1.00 rootload=1.00
(smt.stats   63   8923 201844 394128  6844/6370/374    8995/678    35  343   57.59)
(sat.ddfw       1      1    9.8264   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=19.062s mem=59884KiB load=1.00 rootload=0.99
(smt.stats   64   9157 206494 409708  6932/6583/374    9246/687    35  343   57.59)
(smt.stats   65   9414 214682 439899  6963/6688/375    9504/772    36  346   58.03)
ramon: poll                 wall=20.000s usage=20.062s mem=60396KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:46:04 2024
ramon: root.execname        z3
ramon: root.utime           20.100s
ramon: root.stime           0.020s
ramon: group.total          20.128s
ramon: group.utime          20.104s
ramon: group.stime          0.024s
ramon: group.mempeak        60652KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              1.00
