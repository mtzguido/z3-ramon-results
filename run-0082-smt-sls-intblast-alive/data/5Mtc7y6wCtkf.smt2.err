ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:39:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29348 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5Mtc7y6wCtkf.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             631283
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   64.9351     10000        49          0            1        2)
(smt.stats    0    101   6053   1298  1366/1140/99      96/13     5   15   52.17)
(sat.ddfw       1      1   38.7636     20001        98          1            1        3)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 0 := 1 << 1
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 0 := 1 << 1
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 0 := 2 << 1
(smt.stats    1    202   7113   2737  2539/2248/102     196/24     8   19   52.49)
(sat.ddfw       1      1   42.9185     40001       196          2            1        5)
(smt.stats    2    313   7623   3544  2668/2358/114     311/29     9   20   52.77)
(smt.stats    3    414   8715   4842  2762/2502/120     350/47    11   92   52.77)
(smt.stats    4    525   9497   6452  2784/2522/129     452/49    12  101   52.77)
(smt.stats    5    647  10652   7918  2796/2529/130     565/51    14  113   52.93)
(sat.ddfw       1      1   39.7878     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas       :deletions     )
(smt.stats    6    748  11832   9830  2800/2537/130     676/51    14  113   52.93)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 55&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 55&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 54&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 54&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 52&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 1&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 4&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 53&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 52&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 1&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 1&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 4&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 16&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 32&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 53&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 52&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 32&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 32&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 7 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 6 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 8&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8 := 8&36028797018963967
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 8 := 3 << 56
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 32 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 48 := 48&36028797018963967
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 48 := 22 << 56
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 32 := 48&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 48 := 48&36028797018963967
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 48 := 22 << 56
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 48 := 48&36028797018963967
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 48 := 0 << 56
(smt.stats    7    859  12941  11431  2891/2557/161     822/66    15  119   53.17)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 64 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 128 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 256 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 512 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1024 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2048 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4096 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8192 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16384 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 32768 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65536 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 131072 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 262144 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 524288 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1048576 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2097152 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4194304 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8388608 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16777216 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 33554432 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 67108864 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 134217728 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 268435456 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 536870912 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1073741824 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2147483648 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4294967296 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8589934592 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17179869184 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 34359738368 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 68719476736 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 137438953472 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 274877906944 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 549755813888 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1099511627776 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2199023255552 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1099511627776 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4398046511104 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8796093022208 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17592186044416 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 35184372088832 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 35184372088832 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 70368744177664 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 140737488355328 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 281474976710656 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 562949953421312 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1125899906842624 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2251799813685248 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4503599627370496 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 9007199254740992 := 72057594037927936&36028797018963967
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 18014398509481984 := 72057594037927936&36028797018963967
ramon: poll                 wall=1.002s usage=0.846s mem=57388KiB load=0.84 rootload=0.83
(smt.stats    8    981  14302  13743  3063/2798/411     921/91    17  190   54.90)
(sat.ddfw       1      1    34.965    110001       539          4            1       12)
(smt.stats    9   1115  18547  18063  3124/2842/414    1119/176    18  203   55.05)
(smt.stats   10   1216  21077  21402  3165/2871/417    1263/194    20  207   55.14)
(sat.ddfw       1      1   30.7497    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.842s mem=57428KiB load=1.00 rootload=1.00
(smt.stats   11   1327  22778  23483  3239/2899/417    1399/195    20  207   55.27)
(sat.ddfw       1      1   27.1744    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  23897  26670  3506/3239/427    1669/247    21  210   55.47)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 7 := 12&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 3 := 8&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4 := 8&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 3 := 8&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 4 := 8&7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855871 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855871 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855871 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855869 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855869 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855869 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 144115188075855869 << 4
(smt.stats   13   1583  29212  33478  3556/3277/449    1765/407    24  315   55.81)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&7
shl: (shl[57] (bv2int %1) (mod (bv2int %0) 57)) 1 := 0 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&7
shl: (shl[57] (bv2int %1) (mod (bv2int %0) 57)) 1 := 0 << 4
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 1&15
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 1 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&15
shl: (shl[57] (bv2int %1) (mod (bv2int %0) 57)) 14 := 0 << 5
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 0&15
shl: (shl[57] (bv2int %1) (mod (bv2int %0) 57)) 1 := 0 << 5
(sat.ddfw       1      1   24.2803    290001      1421          7            1       30)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 8 := 768&15
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2 := 768&15
ramon: poll                 wall=3.006s usage=2.849s mem=58320KiB load=1.00 rootload=0.99
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 2 := 832&15
(smt.stats   14   1730  36141  41124  3688/3382/471    1998/489    26  326   56.02)
(smt.stats   15   1831  43286  53997  3734/3456/471    2138/489    26  326   56.11)
(smt.stats   16   1943  45283  57818  3833/3555/478    2267/580    28  341   56.21)
(smt.stats   17   2065  52118  65056  3909/3620/485    2448/663    30  374   56.21)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 81 := 36028797018964305&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 756604737398243665 := 45035996273704960 << 8
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 17 := 36028797018964305&127
(sat.ddfw       1      1    21.852    370001      1813          8            1       38)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 65 := 36028797018964305&127
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 81 := 36028797018964305&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 11565243843087434065 := 45035996273704960 << 8
(smt.stats   18   2199  60218  72122  4105/3756/507    2683/700    31  380   56.35)
ramon: poll                 wall=4.000s usage=3.841s mem=58788KiB load=1.00 rootload=1.00
(smt.stats   19   2346  67151  79833  4239/3857/507    2901/701    31  380   56.54)
(sat.ddfw       1      1   20.7469    460001      2254          9            1       47)
(smt.stats   20   2507  72557  89237  4282/4002/511    3160/770    32  387   56.64)
(smt.stats   21   2608  77067  95098  4378/4014/512    3320/826    33  398   56.64)
ramon: poll                 wall=5.000s usage=5.031s mem=58912KiB load=1.19 rootload=1.19
(sat.ddfw       1      1   18.9753    560001      2745         10            1       57)
(smt.stats   22   2719  81289 101980  4545/4121/512    3495/892    34  398   56.76)
ramon: poll                 wall=6.002s usage=6.035s mem=59168KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   17.3941    670001      3284         11            1       68)
(smt.stats   23   2841  85648 111675  4706/4335/514    3681/940    35  398   57.09)
(smt.stats   24   2975  88936 119150  4829/4549/519    3937/979    36  400   57.19)
ramon: poll                 wall=7.000s usage=7.031s mem=59892KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   16.0815    790001      3872         12            1       80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3122  94980 132373  4948/4639/521    4076/1062    38  422   57.39)
ramon: poll                 wall=8.000s usage=8.030s mem=59892KiB load=1.00 rootload=1.00
(smt.stats   26   3283 101530 141357  5105/4673/521    4268/1063    38  422   57.50)
(sat.ddfw       1      1   14.9339    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=9.030s mem=59892KiB load=1.00 rootload=1.00
(smt.stats   27   3460 106706 151645  5297/5016/523    4546/1110    39  424   57.64)
(smt.stats   28   3561 109817 158046  5354/5023/524    4741/1111    39  424   57.64)
(smt.stats   29   3672 113642 164883  5444/5091/524    4843/1213    40  438   57.64)
(smt.stats   30   3794 120475 175845  5525/5169/524    4993/1213    40  438   57.64)
ramon: poll                 wall=10.000s usage=10.030s mem=60148KiB load=1.00 rootload=1.00
(smt.stats   31   3928 126617 182922  5627/5258/524    5130/1213    40  438   57.75)
(sat.ddfw       1      1   13.9234   1060001      5196         14            1      108)
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 32 := 18014398509485056&63
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 16 := 18014398509485056&63
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 18014398509484928&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 18014398509484928 := 140174538401906781 << 7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 18014398509484928&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 18014398509484928 := 140174538401906781 << 7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 18014398509484928&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 18014398509484928 := 140174538401906783 << 7
band: (band[57] (shl[64] (bv2int %1) (mod #401 64)) (if (or #810 #811) 0 (if #812 1 #939))) 0 := 18014398509484928&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #400) 64)) 18014398509484928 := 140174538401906804 << 7
(smt.stats   32   4075 128988 188184  5865/5357/525    5323/1263    41  440   57.75)
(smt.stats   33   4236 134225 200643  6016/5628/531    5640/1264    41  440   57.89)
(smt.stats   34   4413 141439 219216  6026/5721/531    5833/1328    42  445   58.22)
(smt.stats   35   4607 148915 239173  6057/5750/531    6134/1329    42  445   58.48)
ramon: poll                 wall=11.000s usage=11.030s mem=60660KiB load=1.00 rootload=1.00
(smt.stats   36   4708 152352 250455  6079/5766/532    6250/1413    43  447   58.48)
(smt.stats   37   4819 156129 263320  6120/5792/533    6450/1423    44  447   58.48)
(sat.ddfw       1      1   13.0548   1210001      5931         15            1      123)
(smt.stats   38   4941 159500 273457  6160/5825/533    6606/1424    44  447   58.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 84)
ramon: poll                 wall=12.000s usage=12.030s mem=60916KiB load=1.00 rootload=1.00
(smt.stats   39   5075 162581 283091  6203/5878/533    6756/1426    44  447   58.58)
(smt.stats   40   5222 168263 296896  6231/5916/533    6942/1426    44  447   58.58)
(smt.stats   41   5383 173687 314917  6293/5946/533    7132/1427    44  447   58.58)
(smt.stats   42   5560 180233 330401  6331/5999/533    7349/1430    44  447   58.69)
ramon: poll                 wall=13.000s usage=13.038s mem=60920KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   12.3058   1370001      6715         16            1      139)
(smt.stats   43   5754 189819 353677  6589/6067/533    7580/1437    44  447   58.69)
ramon: poll                 wall=14.000s usage=14.035s mem=61152KiB load=1.00 rootload=0.99
(smt.stats   44   5967 196055 375780  6696/6347/533    7910/1439    44  447   58.84)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   45   6068 198767 383126  6729/6411/533    8094/1440    44  447   59.03)
(sat.ddfw       1      1   11.6223   1540001      7549         17            1      156)
(smt.stats   46   6179 201963 390113  6785/6457/533    8269/1443    44  447   59.09)
(smt.stats   47   6301 205008 401691  6806/6508/535    8517/1656    45  448   59.20)
ramon: poll                 wall=15.000s usage=15.035s mem=61564KiB load=1.00 rootload=1.00
(smt.stats   48   6435 208651 417529  6824/6515/535    8662/1657    45  448   59.56)
(smt.stats   49   6582 214056 439042  6842/6543/538    8916/1690    46  451   59.65)
(smt.stats   50   6743 216544 448228  7083/6546/539    9203/1751    47  464   59.75)
ramon: poll                 wall=16.000s usage=16.035s mem=61796KiB load=1.00 rootload=1.00
(smt.stats   51   6920 218576 454386  7245/6796/539    9442/1757    47  464   59.75)
(sat.ddfw       1      1   11.0065   1720001      8431         18            1      174)
(smt.stats   52   7114 224120 466764  7362/7057/543    9689/1798    48  480   59.88)
ramon: poll                 wall=17.000s usage=17.035s mem=62112KiB load=1.00 rootload=1.00
(smt.stats   53   7327 230248 498051  7459/7112/544    9997/1834    49  486   59.98)
ramon: poll                 wall=18.000s usage=18.034s mem=62172KiB load=1.00 rootload=1.00
(smt.stats   54   7561 237801 527750  7545/7175/544   10386/1835    49  486   59.98)
(smt.stats   55   7662 239872 535321  7572/7248/544   10507/1837    49  486   59.98)
(sat.ddfw       1      1   10.4528   1910001      9362         19            1      193)
(smt.stats   56   7773 242661 546736  7599/7293/544   10702/1837    49  486   59.98)
(smt.stats   57   7895 247342 555299  7604/7306/544   10858/1837    49  486   60.08)
(smt.stats   58   8029 251067 578660  7614/7316/544   11003/1837    49  486   60.08)
(smt.stats   59   8176 252286 588641  7615/7317/544   11161/1837    49  486   60.08)
ramon: poll                 wall=19.000s usage=19.036s mem=62364KiB load=1.00 rootload=1.01
(smt.stats   60   8337 257759 608847  7696/7322/544   11397/1841    49  486   60.20)
(smt.stats   61   8514 262746 628413  7783/7409/544   11660/1843    49  486   60.30)
ramon: poll                 wall=20.002s usage=20.037s mem=62668KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:40:15 2024
ramon: root.execname        z3
ramon: root.utime           20.060s
ramon: root.stime           0.010s
ramon: group.total          20.083s
ramon: group.utime          20.067s
ramon: group.stime          0.016s
ramon: group.mempeak        62924KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              1.00
