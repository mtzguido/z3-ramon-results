ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:22:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25703 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/REsztclHV80Q.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             32022
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.80)
(smt.stats    0    101   1895    493   626/570/100     110/21     5   19   18.69)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 2048 := 1048320&2049
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266340353 := 266340352 >>l 23
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 7 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&9
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266338313 := 266338304 >>l 23
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&9
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266338313 := 266338304 >>l 23
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&9
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266338313 := 260046848 >>l 23
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&9
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 36863 := 36864 >>l 12
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 9 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 10 := 1048320&10
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 12 := 1048320&12
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 16 := 1048320&17
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048320&33
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 64 := 1048320&65
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 128 := 1048320&128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 1048574 := 1048575 >>l 12
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 1048574 := 1048575 >>l 12
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 255 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&254
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 254 := 1048320&254
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&252
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 252 := 1048320&252
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&248
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 248 := 1048320&248
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&16
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 16 := 1048320&16
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&32
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 32 := 1048320&32
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&64
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 64 := 1048320&64
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&128
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 128 := 1048320&128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 256 := 1048575 >>l 12
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 5 := 1048320&128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048320&128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&128
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 128 := 1048320&128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 5 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 32 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 32 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 64 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 64 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 64 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 64 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 24 := 1048320&255
(smt.stats    1    202   2966   1764  1267/1152/192     256/46     8   39   19.28)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 16 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 2 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 4 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 4 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 4 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048320&255
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 1 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 5 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 2 := 1048320&255
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 1 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 2 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048320&32
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 16 := 1048320&16
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048320&9
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 16 := 1048320&16
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 16 := 1048320&16
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 96 := 1048320&96
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 96 := 1048320&96
(smt.stats    2    313   4527   4508  1365/1250/264     523/90    12   62   19.47)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048574&5
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266338309 := 266340352 >>l 30
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048574&5
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266338309 := 2145388544 >>l 30
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048574&5
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266338309 := 268435456 >>l 30
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048574&5
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266338309 := 268435456 >>l 30
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 4 := 1048574&5
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 266338309 := 2147481600 >>l 30
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048574&1
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 0 := 524288 >>l 19
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048574&1
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 0 := 524288 >>l 19
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048574&1
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 1 := 524288 >>l 19
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048574&1
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 1 := 1048574&1
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048574&1
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 1 := 524288 >>l 19
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048574&1
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 1 := 1048574&1
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048574&1
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 2 := 524288 >>l 19
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 1048574&1
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 128 := 528384 >>l 19
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 1 := 1048574&1
(smt.stats    3    414   6649   7515  1443/1304/274     703/96    14   66   19.76)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 1 := 1048575&524289
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 1 := 1048575&524289
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 2 := 1048575&524289
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 2 := 1048575&524290
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 2 := 1048575&524290
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 64 := 1048575&4097
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4097
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4098
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4098
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4100
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4104
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4112
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4098
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4098
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&4128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&8192
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&8288
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 32 := 1048575&8352
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&4192
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&4200
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&4232
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&4360
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&4232
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&4616
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&5128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&5128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&5128
(smt.stats    4    525   7878  10093  1599/1445/382     977/152    17  107   20.44)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&5640
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&5640
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6152
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6152
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6152
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6152
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6216
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6216
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&7176
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&7176
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&7176
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 24 := 1048575&7176
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6152
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6152
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&6152
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 8 := 1048575&4105
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 9 := 1048575&4105
(smt.stats    5    647  10033  13876  1775/1620/427    1303/211    18  123   20.53)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  12320  19063  1868/1690/430    1653/275    19  138   20.73)
(smt.stats    7    859  15087  31520  2050/1842/436    2101/283    20  143   21.22)
(smt.stats    8    981  17154  38684  2170/1968/471    2602/379    22  202   21.51)
(smt.stats    9   1115  19080  41809  2245/1969/473    3075/381    22  202   22.08)
(smt.stats   10   1216  22684  50949  2352/2128/474    3459/431    23  396   22.08)
(smt.stats   11   1327  27922  61876  2371/2164/474    3677/572    24  398   22.18)
ramon: poll                 wall=1.000s usage=0.999s mem=23512KiB load=1.00 rootload=0.98
(smt.stats   12   1449  30616  72982  2469/2273/479    4540/610    25  411   22.28)
(smt.stats   13   1583  35632  91030  2524/2319/489    5158/758    27  457   22.37)
(smt.stats   14   1730  38271 102966  2754/2355/490    5539/792    28  477   22.47)
(smt.stats   15   1831  40740 119160  2929/2580/490    5988/793    28  477   22.56)
(smt.stats   16   1942  43978 130753  2982/2783/491    6530/915    29  486   22.66)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   17   2064  47342 143681  3024/2829/494    7087/1042    30  501   22.76)
(smt.stats   18   2198  49940 152382  3101/2879/495    7521/1044    30  501   22.76)
(smt.stats   19   2345  54508 165027  3135/2928/496    7823/1122    31  519   22.76)
(smt.stats   20   2506  57259 176608  3211/3002/498    8321/1124    31  519   22.87)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 384 := 1048575&500
(smt.stats   21   2607  59200 185469  3298/3049/499    8484/1164    32  553   22.97)
(smt.stats   22   2718  60878 195704  3369/3121/499    8837/1164    32  553   22.97)
ramon: poll                 wall=2.002s usage=2.001s mem=24252KiB load=1.00 rootload=0.99
(smt.stats   23   2840  63311 213981  3511/3190/499    9289/1192    33  554   23.06)
(smt.stats   24   2974  64479 228025  3634/3438/501   10285/1211    34  567   23.16)
(smt.stats   25   3121  67407 257534  3670/3446/501   10917/1211    34  567   23.30)
(smt.stats   26   3282  74325 300659  3683/3484/501   11913/1464    35  570   23.39)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 1 := 524288&128
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 2 := 524288&129
(smt.stats   27   3459  76793 311448  3750/3554/502   12282/1689    36  579   23.53)
(smt.stats   28   3560  78720 326697  3757/3557/503   12590/1689    36  579   23.53)
(smt.stats   29   3671  80000 336777  3816/3594/504   12783/1690    36  579   23.62)
(smt.stats   30   3793  82068 367663  3858/3621/504   12966/1747    37  594   23.62)
(smt.stats   31   3927  84352 386414  3932/3682/504   13696/1749    37  594   23.72)
ramon: poll                 wall=3.000s usage=2.999s mem=25072KiB load=1.00 rootload=1.00
(smt.stats   32   4074  88083 405851  3962/3752/508   14400/1840    38  595   23.91)
(smt.stats   33   4235  93203 426949  4133/3771/508   15234/1847    38  595   24.01)
(smt.stats   34   4412  98558 446637  4207/3975/508   15900/2042    39  612   24.01)
(smt.stats   35   4606 103178 478544  4283/4027/510   17527/2285    40  642   24.20)
(smt.stats   36   4707 104802 493465  4438/4082/510   17913/2291    40  642   24.30)
ramon: poll                 wall=4.000s usage=3.999s mem=25716KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   37   4818 106183 507548  4556/4237/510   18322/2293    40  642   24.40)
(smt.stats   38   4940 108786 520067  4601/4365/510   19123/2293    40  642   24.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 74)
(smt.stats   39   5074 110691 536710  4628/4405/514   19751/2455    41  683   24.60)
(smt.stats   40   5221 114078 561566  4693/4484/517   20828/2462    41  683   24.70)
(smt.stats   41   5382 116739 582716  4766/4498/517   21248/2468    41  683   24.80)
(smt.stats   42   5559 119211 598129  4840/4633/518   22241/2695    42  735   24.90)
(smt.stats   43   5753 122518 619608  4946/4647/518   22847/2696    42  735   25.00)
ramon: poll                 wall=5.002s usage=5.000s mem=26664KiB load=1.00 rootload=1.00
(smt.stats   44   5966 128284 677623  4959/4753/519   24520/2955    43  774   25.33)
(smt.stats   45   6067 130495 683881  5017/4755/519   24848/2958    43  774   25.33)
(smt.stats   46   6178 133106 703648  5123/4856/519   25299/2961    43  774   25.43)
(smt.stats   47   6300 134498 722122  5148/4924/519   25940/2964    43  774   25.43)
(smt.stats   48   6434 137099 754883  5156/4950/519   26892/2964    43  774   25.53)
(smt.stats   49   6581 138934 779476  5173/4960/519   27960/2964    43  774   25.72)
(smt.stats   50   6742 141703 803524  5298/4972/519   28472/2965    43  774   25.81)
(smt.stats   51   6919 145201 815737  5418/5120/519   28989/2976    43  774   25.91)
ramon: poll                 wall=6.000s usage=5.996s mem=27176KiB load=1.00 rootload=1.00
(smt.stats   52   7113 150153 840493  5578/5312/520   29889/3708    44  774   26.00)
(smt.stats   53   7326 153749 882416  5717/5420/520   30453/3713    44  774   26.00)
(smt.stats   54   7560 157381 918643  5785/5575/522   31878/3848    45  774   26.19)
(smt.stats   55   7661 158499 922934  5868/5589/522   32171/3851    45  774   26.19)
(smt.stats   56   7772 159416 933124  5942/5694/522   32710/3853    45  774   26.34)
ramon: poll                 wall=7.002s usage=7.000s mem=27944KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   57   7894 161695 946318  6062/5756/522   33425/3854    45  774   26.44)
(smt.stats   58   8028 164313 962055  6168/5862/522   34170/3861    45  774   26.54)
(smt.stats   59   8175 165780 975572  6418/6027/522   34831/3861    45  774   26.63)
(smt.stats   60   8336 168478 1002573  6762/6299/522   35387/4270    46  779   26.73)
(smt.stats   61   8513 171771 1062258  6772/6566/522   36102/4270    46  779   26.73)
ramon: poll                 wall=8.000s usage=7.996s mem=28456KiB load=1.00 rootload=1.00
(smt.stats   62   8707 174446 1097759  6883/6569/522   37002/4273    46  779   26.84)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 179347 1133761  7187/6706/522   38037/4283    46  779   27.21)
(smt.stats   64   9154 183421 1161005  7297/7003/523   39329/4566    47  787   27.31)
ramon: poll                 wall=9.000s usage=8.996s mem=29140KiB load=1.00 rootload=1.00
(smt.stats   65   9411 186775 1250085  7346/7135/523   41800/4566    47  787   27.69)
(smt.stats   66   9512 188620 1257921  7371/7146/526   42396/5131    48  793   27.79)
(smt.stats   67   9623 189861 1267947  7487/7259/526   42695/5132    48  793   27.79)
(smt.stats   68   9745 192237 1283398  7658/7287/526   43230/5137    48  793   27.88)
(smt.stats   69   9879 194796 1303391  7790/7478/526   43680/5137    48  793   27.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 71)
(smt.stats   70  10026 198267 1326820  7860/7608/526   44381/5142    48  793   27.98)
(smt.stats   71  10187 200986 1353783  7917/7667/526   45048/5143    48  793   28.26)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 256 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 256 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 1478500872 := 0 >>l 13
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 1478500872 := 0 >>l 13
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 510705 := 34848 >>l 2
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 510705 := 34848 >>l 2
ramon: poll                 wall=10.000s usage=9.996s mem=29968KiB load=1.00 rootload=0.99
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 510705 := 34848 >>l 2
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 56 := 34848 >>l 2
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
lshr: (lshr[20] (bv2int %0) (+ 20 (* 1048575 #108))) 56 := 34848 >>l 2
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 16 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 16 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 256 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 512 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 256 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 512 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 1024 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 2048 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 4096 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 8192 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 4096 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 512 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 512 := 786432&8712
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 786432&8712
band: (band[20] (if (= #112 19) 549755289600 (if #312 274877644800 #348)) (lshr[20] (bv2int %0) (+ 20 #351))) 512 := 786432&8712
(smt.stats   72  10364 203058 1394067  8086/7859/593   46094/5278    49  799   28.64)
(smt.stats   73  10558 207322 1423815  8205/7904/600   47898/5280    49  799   28.83)
(smt.stats   74  10771 216101 1493724  8341/8001/601   49049/5284    49  799   29.03)
(smt.stats   75  11005 221735 1536192  8416/8194/604   50745/5826    50  825   29.22)
ramon: poll                 wall=11.000s usage=10.995s mem=30992KiB load=1.00 rootload=1.00
(smt.stats   76  11262 227149 1565955  8446/8220/605   51653/5826    50  825   29.32)
(smt.stats   77  11544 235786 1627005  8647/8231/605   52919/5829    50  825   29.51)
(smt.stats   78  11645 238724 1648335  8721/8459/606   53582/6121    51  835   29.70)
(smt.stats   79  11756 242095 1679635  8794/8519/606   54351/6124    51  835   29.80)
ramon: poll                 wall=12.000s usage=11.995s mem=31388KiB load=1.00 rootload=1.00
(smt.stats   80  11878 245422 1716127  8848/8580/606   54867/6126    51  835   29.80)
(smt.stats   81  12012 247306 1755489  8872/8642/608   55789/6128    51  835   29.89)
(smt.stats   82  12159 249710 1815483  8902/8680/609   56413/6530    52  856   29.99)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12320 252862 1880336  8929/8688/609   57149/6532    52  856   29.99)
(smt.stats   84  12497 256006 1930622  8971/8720/609   58484/6535    52  856   30.18)
ramon: poll                 wall=13.000s usage=12.995s mem=32252KiB load=1.00 rootload=1.00
(smt.stats   85  12691 260021 1948225  9154/8752/609   59393/6540    52  856   30.18)
(smt.stats   86  12904 263524 1977643  9543/9005/609   60124/6544    52  856   30.27)
(smt.stats   87  13138 270700 2081722  9597/9373/610   62586/7283    53  865   30.78)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 192 := 1048320&193
(smt.stats   88  13395 275325 2126671  9747/9523/611   63434/7283    53  865   30.87)
ramon: poll                 wall=14.000s usage=13.995s mem=32508KiB load=1.00 rootload=1.00
(smt.stats   89  13677 281771 2215428  9791/9543/611   66891/7285    53  865   31.17)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 524288&24
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 1032847384 := 335542272 >>l 12
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 0 := 524288&24
lshr: (lshr[32] (* 2048 (bv2int %0)) (mod (+ 31 #362 #366) 32)) 1032847384 := 328454144 >>l 12
(smt.stats   90  13987 286131 2313079  9886/9661/621   68991/7595    54  913   31.46)
(smt.stats   91  14088 287471 2347608  9894/9668/621   69567/7595    54  913   31.46)
(smt.stats   92  14199 290709 2379166  9948/9674/621   70460/7596    54  913   31.55)
ramon: poll                 wall=15.000s usage=14.994s mem=33276KiB load=1.00 rootload=1.00
(smt.stats   93  14321 294586 2398689 10029/9734/621   70755/7600    54  913   31.55)
(smt.stats   94  14455 297368 2429768 10182/9862/621   71408/7941    55  994   31.65)
(smt.stats   95  14602 299250 2484612 10198/9967/621   71870/7941    55  994   31.75)
(smt.stats   96  14763 300875 2563222 10294/9980/621   72159/7945    55  994   31.87)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   97  14940 302071 2583193 10351/10109/622   72392/7946    55  994   31.87)
(smt.delete-inactive-clauses  :num-deleted-clauses 5466)
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 36 := 1048575&64
band: (band[20] (if (= #207 31) 2251797666201600 (if #289 1125898833100800 #286)) (lshr[32] (* 2048 #191) (mod #369 32))) 292 := 1048575&320
(smt.stats   98  15134 304446 2677815 10430/10142/622   67835/7950    55  994   31.97)
ramon: poll                 wall=16.000s usage=15.994s mem=33532KiB load=1.00 rootload=1.00
(smt.stats   99  15347 308701 2719996 10485/10213/622   68554/8136    56  994   31.97)
(smt.stats  100  15581 313403 2761091 10610/10287/622   70437/8140    56  994   32.07)
(smt.stats  101  15838 319928 2807782 10721/10428/622   71565/8144    56  994   32.16)
ramon: poll                 wall=17.000s usage=16.994s mem=33788KiB load=1.00 rootload=1.00
(smt.stats  102  16120 324902 2843969 10813/10521/622   73085/8146    56  994   32.26)
(smt.stats  103  16430 333273 2906692 11053/10597/622   74533/8150    56  994   32.36)
ramon: poll                 wall=18.000s usage=17.994s mem=34044KiB load=1.00 rootload=1.00
(smt.stats  104  16770 339444 2987554 11371/10931/622   76897/8153    56  994   32.55)
(smt.stats  105  16871 342599 3023668 11389/11156/622   77398/8153    56  994   32.55)
(smt.stats  106  16982 344453 3070143 11424/11177/622   78483/8154    56  994   32.74)
(smt.stats  107  17104 346068 3106141 11441/11196/622   79159/8154    56  994   32.74)
ramon: poll                 wall=19.000s usage=18.994s mem=34560KiB load=1.00 rootload=1.00
(smt.stats  108  17238 348445 3133986 11539/11212/622   79864/8158    56  994   32.85)
(smt.stats  109  17385 350445 3166575 11609/11324/622   80780/8164    56  994   32.94)
(smt.stats  110  17546 354175 3191672 11745/11399/622   81437/8166    56  994   33.14)
(smt.stats  111  17723 357020 3222434 11844/11567/622   82053/8168    56  994   33.14)
(smt.stats  112  17917 362369 3275592 12003/11637/622   83220/8173    56  994   33.24)
ramon: poll                 wall=20.006s usage=19.998s mem=35072KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 18:23:04 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.030s
ramon: group.total          20.005s
ramon: group.utime          19.973s
ramon: group.stime          0.032s
ramon: group.mempeak        35328KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
