ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:15:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40457 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1320
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/c6zOuTej9Tqo.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3906807
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   256/256     0/0  58       0    18.51   0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.76   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 339 :time 0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.76   0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.76   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 378218.86 :time 0.00)
(sat.stats    101    278    0   260/260    21/14  58       0    18.86   0.00)
(sat.stats    400   2698    1   260/260   320/241  58       0    19.15   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    490   3546    2   260/260   410/284  58       0    19.15   0.02)
(sat.stats    493   3547    3   260/260   413/284  58       0    19.15   0.02)
(sat.stats    496   3623    4   260/260   416/285  58       0    19.25   0.02)
(sat.stats    500   3692    5   260/260   420/286  58       0    19.25   0.02)
(sat.stats    629   5222    6   261/261   549/339  58       0    19.35   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3694 :time 0.00)
lshr: (lshr[62] (bv2int %0) (mod (bv2int %0) 62)) 49 := 49 >>l 49
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 0&4611686018427379712
lshr: (lshr[64] (bv2int %0) (mod (+ #58 #754) 64)) 9223372036854775807 := 49 >>l 49
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 4379 :time 0.00)
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 1 := 1&4611686018427379712
(sat.stats    771  11726    7   318/316   683/399  90       0    20.12   0.11)
(sat.stats    775  11935    8   318/316   687/399  90       0    20.12   0.11)
(sat.stats    778  12004    9   318/316   690/399  90       0    20.12   0.11)
(sat.stats    782  12064   10   318/316   694/399  90       0    20.12   0.12)
(sat.stats    809  13016   11   318/316   721/402  90       0    20.12   0.12)
(sat.stats    812  13084   12   318/316   723/402  91       0    20.12   0.12)
(sat.stats    816  13509   13   331/329   727/404  91       0    20.22   0.12)
 (sat-cleaner :elim-literals 7 :elim-clauses 1 :cost 5784 :time 0.00)
(sat.stats    819  14227   14   485/473   729/405  93       0    20.22   0.12)
(sat.stats    823  14796   15   544/532   733/406  93       0    20.31   0.13)
(sat.stats    826  14954   16   900/852   737/408  93       0    20.31   0.14)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1064  26674   62  4823/4760   996/482  93       0    20.94   0.25)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14926 :time 0.00)
(sat.stats   1618  49781  171  7114/7051  1550/636  95       0    21.64   0.40)
lshr: (lshr[62] (bv2int %0) (mod (bv2int %0) 62)) 562949951660039 := 562949951599044 >>l 52
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 25425 :time 0.00)
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 0&4611686018427386880
lshr: (lshr[64] (bv2int %0) (mod (+ #58 #754) 64)) 562949953421286 := 562949953421286 >>l 52
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 2 := 2&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 4 := 4&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 8 := 8&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 16 := 16&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 32 := 32&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 576 := 1023&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 384 := 1023&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 768 := 1023&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 512 := 1023&4611686018427386880
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 675 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 830 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 132 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 944 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 8 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 416 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 960 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 640 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 768 := 4611686018427386880&1023
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1023&4611686018427386880
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 512 := 4611686018427386880&1023
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 29204 :time 0.00)
lshr: (lshr[62] (bv2int %0) (mod (bv2int %0) 62)) 4420 := 562949953421226 >>l 54
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 0&4611686018427387648
lshr: (lshr[64] (bv2int %0) (mod (+ #58 #754) 64)) 9223372036854776065 := 562949953421226 >>l 54
 (sat-cleaner :elim-literals 263 :elim-clauses 64 :cost 37657 :time 0.00)
ramon: poll                 wall=1.000s usage=0.958s mem=25740KiB load=0.96 rootload=0.95
lshr: (lshr[62] (bv2int %0) (mod (bv2int %0) 62)) 7 := 126100789566373951 >>l 51
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 71&4611686018427385856
lshr: (lshr[64] (bv2int %0) (mod (+ #58 #754) 64)) 4611686018427355356 := 161003686678495295 >>l 51
(sat.stats   2636  91735  249 32780/32713  2734/1003 256       0    26.79   1.42)
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 1024 := 1024&4611686018427385856
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 5316911983139663489309385231907684352 (if #490 2658455991569831744654692615953842176 #610))) 0 := 1024&4611686018427385856
band: (band[62] (if (= #625 63) 42535295865117307914475081855261474816 (if #627 21267647932558653957237540927630737408 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 1024 := 4611686018427385856&1024
ramon: poll                 wall=2.000s usage=1.958s mem=37324KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.958s mem=58976KiB load=1.00 rootload=0.98
ramon: poll                 wall=4.000s usage=3.958s mem=67164KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.957s mem=90008KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.957s mem=95128KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.957s mem=98968KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.957s mem=99MiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.957s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.957s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.957s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.957s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.004s usage=12.965s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.957s mem=114MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.956s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.956s mem=119MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.956s mem=122MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.956s mem=156MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.955s mem=160MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.955s mem=161MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:16:13 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.009s
ramon: group.utime          19.949s
ramon: group.stime          0.060s
ramon: group.mempeak        188MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.050s
ramon: loadavg              1.00
