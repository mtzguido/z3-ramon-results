ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:24:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41173 MiB
ramon: sys.mem.avail        61383 MiB
ramon: sys.nprocs           1321
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EWVHkDRJSDOf.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3753100
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   230/230     0/0  64       0    18.53   0.00)
(sat.stats    339   3902    0   230/230   339/203  64       0    18.94   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1293 :time 0.00)
(sat.stats    339   3902    0   230/230   339/203  64       0    18.94   0.04)
(sat.stats    339   3902    0   230/230   339/203  64       0    18.94   0.04)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 907618.94 :time 0.00)
(sat.stats    339   3902    0   232/232   331/205  64       0    18.94   0.04)
(sat.stats    342   3946    1   232/232   334/205  64       0    18.94   0.04)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    347   3992    2   232/232   339/205  64       0    18.94   0.04)
(sat.stats    357   3995    3   232/232   349/205  64       0    19.04   0.04)
(sat.stats    360   4000    4   232/232   352/207  64       0    19.04   0.04)
(sat.stats    364   4003    5   232/232   356/209  64       0    19.04   0.04)
(sat.stats    367   4017    6   232/232   359/212  64       0    19.04   0.04)
(sat.stats    370   4041    7   232/232   362/214  64       0    19.04   0.04)
(sat.stats    373   4055    8   232/232   365/216  64       0    19.04   0.04)
(sat.stats    376   4079    9   232/232   368/216  64       0    19.04   0.04)
(sat.stats    379   4106   10   232/232   371/216  64       0    19.04   0.04)
(sat.stats    382   4170   11   232/232   374/218  64       0    19.04   0.04)
(sat.stats    385   4185   12   232/232   377/221  64       0    19.04   0.04)
(sat.stats    388   4219   13   232/232   380/224  64       0    19.04   0.04)
(sat.stats    391   4267   14   232/232   383/226  64       0    19.04   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2946 :time 0.00)
(sat.stats    573   8978   17   258/257   562/296  72       0    19.74   0.21)
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 0&24
lshr: (lshr[64] (mod (div #77 2) 281474976710656) (mod (+ 48 #704 #706) 64)) 1164975 := 1164975 >>l 48
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 3947 :time 0.00)
 (sat-cleaner :elim-literals 22 :elim-clauses 1 :cost 5194 :time 0.00)
(sat.stats    801  24795   48   982/979   790/372  93       0    20.35   0.37)
 (sat-cleaner :elim-literals 24 :elim-clauses 52 :cost 5669 :time 0.00)
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 5110 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1064  49797   76  2163/2159  1005/429  96       0    20.65   0.59)
 (sat-cleaner :elim-literals 16 :elim-clauses 0 :cost 8265 :time 0.00)
lshr: (lshr[49] (bv2int %0) (+ 49 (* 562949953421311 #66))) 0 := 5838 >>l 42
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 0&3072
lshr: (lshr[64] (mod (div #77 2) 281474976710656) (mod (+ 48 #704 #706) 64)) 1890 := 1890 >>l 41
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 25 := 33&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 32 := 33&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 30 := 33&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 28 := 33&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 24 := 33&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 16 := 33&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 4 := 36&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 10 := 42&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 8 := 42&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 16 := 24&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 64 := 78&3072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 127&3072
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 28 := 3072&127
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 127&3072
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 43 := 3072&127
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 127&3072
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 2 := 3072&127
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 127&3072
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 64 := 3072&127
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 127&3072
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 32 := 3072&127
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 127&3072
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 8 := 3072&127
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 127&3072
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 16 := 3072&127
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 15593 :time 0.00)
ramon: poll                 wall=1.000s usage=0.892s mem=23116KiB load=0.89 rootload=0.88
(sat.stats   1600  74326  197  3820/3814  1575/623 206       0    21.81   0.93)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 22750 :time 0.00)
(sat.stats   2518 107720  206 26705/26698  3246/1581 208       0    27.12   1.43)
ramon: poll                 wall=2.000s usage=1.892s mem=29416KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 27019 :time 0.00)
lshr: (lshr[49] (bv2int %0) (+ 49 (* 562949953421311 #66))) 5991 := 5991 >>l 36
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 0&196608
lshr: (lshr[64] (mod (div #77 2) 281474976710656) (mod (+ 48 #704 #706) 64)) 1 := 31 >>l 35
ramon: poll                 wall=3.000s usage=2.892s mem=31460KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 28378 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 28550 :time 0.00)
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 5120 := 8191&196608
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 6912 := 8191&196608
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 2560 := 8191&196608
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 2048 := 8191&196608
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 4096 := 8191&196608
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 128 := 8191&196608
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 8191&196608
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 4352 := 196608&8191
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 8191&196608
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 128 := 196608&8191
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 8191&196608
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 1024 := 196608&8191
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 8191&196608
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 512 := 196608&8191
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 8191&196608
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 6144 := 196608&8191
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 8191&196608
band: (band[49] (if (= #573 63) 221360928884514619392 (if #575 110680464442257309696 #699)) (lshr[64] (mod #446 281474976710656) (mod #707 64))) 4096 := 196608&8191
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 30641 :time 0.00)
ramon: poll                 wall=4.000s usage=3.891s mem=32704KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34014 :time 0.00)
ramon: poll                 wall=5.000s usage=4.891s mem=33056KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.883s mem=33104KiB load=0.99 rootload=0.99
(sat.stats   4017 180708  347 51366/51357  4921/2266 325       0    32.30   6.80)
ramon: poll                 wall=7.003s usage=6.885s mem=33436KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.003s usage=7.885s mem=33912KiB load=1.00 rootload=1.00
(sat.stats   5551 224980  592 59375/59365  5758/2418 325       0    33.06   8.26)
lshr: (lshr[49] (bv2int %0) (+ 49 (* 562949953421311 #66))) 191 := 4743 >>l 10
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #464)) (if (= #73 48) 6755399441055744 (if #468 3377699720527872 #562))) 0 := 4&13194139533312
lshr: (lshr[64] (mod (div #77 2) 281474976710656) (mod (+ 48 #704 #706) 64)) 2 := 2371 >>l 9
ramon: poll                 wall=9.000s usage=8.882s mem=34728KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.881s mem=35916KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.881s mem=38396KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.880s mem=40116KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.880s mem=42404KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.880s mem=45712KiB load=1.00 rootload=0.99
(sat.stats   8504 356226  890 109662/109650  7749/2967 325       0    45.15  14.48)
ramon: poll                 wall=15.000s usage=14.879s mem=46536KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.879s mem=54000KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.879s mem=56708KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.878s mem=58764KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.878s mem=60888KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.878s mem=61360KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:24:39 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.050s
ramon: group.total          19.969s
ramon: group.utime          19.917s
ramon: group.stime          0.052s
ramon: group.mempeak        61624KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.092s
ramon: loadavg              0.99
