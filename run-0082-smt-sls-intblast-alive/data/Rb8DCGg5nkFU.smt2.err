ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:29:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28223 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Rb8DCGg5nkFU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             804270
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 20&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 1 := 0 << 34
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 20&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 1 := 0 << 34
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 20&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 1 := 0 << 34
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 20&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 1 := 0 << 34
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 20&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 1 := 0 << 34
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 20&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 1 := 0 << 34
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 20&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 34359738369 := 0 << 34
(smt.stats    0    101    948   1028   985/880/97      99/14     4   18   51.67)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 20&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 34359738369 := 140 << 34
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   94.3396     10000        49          0            1        2)
(sat.ddfw       1      1   45.0495     20001        98          1            1        3)
(smt.stats    1    202   1499   1646  1132/999/98     218/22     5   19   52.06)
(sat.ddfw       1      1   50.6329     40001       196          2            1        5)
(smt.stats    2    313   1890   2164  1397/1108/99     360/27     6   22   52.06)
(sat.ddfw       1      1   45.7317     70001       343          3            1        8)
(smt.stats    3    414   2363   2770  1611/1488/103     471/61     7   23   52.06)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 5 := 5&3221225474
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 4 := 5&3221225474
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&3221225480
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 7253126021128 := 34359739754 << 32
ramon: poll                 wall=1.000s usage=0.867s mem=54180KiB load=0.87 rootload=0.86
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&3221225480
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 7253126021128 := 34359739754 << 32
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 5 := 5&8589934592
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 4 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179870121 := 17179870122 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 4 := 5&17179869079
(smt.stats    4    525   3347   4081  1658/1512/123     596/74     9   38   52.15)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 4 := 5&17179869079
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&3221225474
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 7253126021122 := 34359740034 << 32
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 4 := 5&8589934592
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 2 := 5&25769803776
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179869387 := 17179870122 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&8589934592
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179870124 := 17179870157 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&8589934592
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179870156 := 17179870157 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 2 := 5&25769803776
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&25769803776
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179870081 := 17179870087 << 33
(sat.ddfw       1      1        40    110001       539          4            1       12)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&25769803776
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179870086 := 17179870087 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&25769803776
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179870082 := 17179870087 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 4 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 5 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 4 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 2 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 1 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 4 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 4 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 4 := 5&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 5&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 2 := 5&17179869184
(smt.stats    5    647   4813   6203  1806/1678/192     664/97    12  105   52.44)
(sat.ddfw       1      1   34.9643    160000       784          5            1       17)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats    6    748   5756   7075  1946/1734/193     769/101    13  105   52.54)
ramon: poll                 wall=2.000s usage=1.853s mem=55104KiB load=0.99 rootload=0.98
(sat.ddfw       1      1   31.0725    220001      1078          6            1       23)
(smt.stats    7    859   6666   8092  2086/1850/193     885/101    13  105   52.73)
(sat.ddfw       1      1   28.9975    290001      1421          7            1       30)
(smt.stats    8    981   7968  10511  2233/2041/193    1027/102    13  105   52.73)
(smt.stats    9   1115   9943  13318  2255/2119/195    1160/126    15  110   52.83)
(smt.stats   10   1216  11042  15027  2337/2141/195    1284/129    15  110   52.83)
ramon: poll                 wall=3.000s usage=2.888s mem=55112KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   25.7815    370001      1813          8            1       38)
(smt.stats   11   1327  11868  17016  2518/2250/195    1394/129    15  110   52.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  13061  19732  2556/2405/195    1557/131    15  110   52.92)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 8 := 10&4294972558
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972558
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 38654710926 := 38654710992 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972342
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972342
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972342
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972336
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972336
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972342
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972334
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 38654710702 := 38654710712 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972056
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294972062
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 38654710430 := 38654710432 << 33
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 10 := 10&4294971502
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 38654709870 := 38654709872 << 33
(smt.stats   13   1583  15542  22311  2716/2447/195    1747/132    15  110   53.11)
(smt.stats   14   1730  18029  26704  2845/2660/211    1928/175    17  113   53.21)
(sat.ddfw       1      1   23.2678    460001      2254          9            1       47)
ramon: poll                 wall=4.000s usage=3.888s mem=55548KiB load=1.00 rootload=1.00
(smt.stats   15   1831  19717  29723  2906/2749/212    2028/176    18  116   53.21)
(smt.stats   16   1942  21782  32908  2958/2811/213    2179/188    19  117   53.30)
(smt.stats   17   2064  23013  35214  3024/2840/214    2352/191    19  117   53.40)
(sat.ddfw       1      1   21.9732    560001      2745         10            1       57)
(smt.stats   18   2198  24096  39653  3072/2893/214    2517/191    19  117   53.40)
(smt.stats   19   2345  26538  45007  3097/2943/215    2707/210    20  117   53.50)
ramon: poll                 wall=5.000s usage=5.046s mem=55776KiB load=1.16 rootload=1.16
(smt.stats   20   2506  28524  51626  3123/2967/217    2990/225    22  124   53.50)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 1 := 2&34359738275
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&34359738267
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&34359738269
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 34359738269 := 6 << 31
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&34359738269
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 34359738269 := 6 << 31
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 34359738367 := 1 << 34
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 34359738367 := 1 << 34
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 1 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 4 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 2 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 2 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 2 := 10&17179869184
(smt.stats   21   2607  29694  55529  3182/2979/217    3126/230    22  124   53.69)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 2 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 2 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 2 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 4 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 4 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 8 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 10&17179869184
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 8 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 8 := 10&17179869184
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 8 := 10&17179869184
(sat.ddfw       1      1   20.9404    670001      3284         11            1       68)
(smt.stats   22   2718  30936  59366  3245/3060/270    3279/262    23  134   53.88)
(smt.stats   23   2840  32044  62209  3344/3111/270    3404/263    23  134   53.98)
(smt.stats   24   2974  32665  69872  3374/3189/270    3628/272    24  141   54.07)
ramon: poll                 wall=6.005s usage=6.174s mem=56348KiB load=1.12 rootload=1.11
(smt.stats   25   3121  38807  82651  3477/3277/271    3913/283    25  143   54.17)
(sat.ddfw       1      1   19.5217    790001      3872         12            1       80)
ramon: poll                 wall=7.000s usage=7.154s mem=56600KiB load=0.99 rootload=0.99
(smt.stats   26   3282  41559  89350  3601/3315/272    4181/337    26  143   54.46)
(sat.ddfw       1      1   18.0983    920001      4509         13            1       93)
(smt.stats   27   3459  44217  97043  3714/3507/273    4581/362    27  145   54.65)
(smt.stats   28   3560  46588 100977  3803/3539/274    4767/362    27  145   54.65)
ramon: poll                 wall=8.000s usage=8.153s mem=56844KiB load=1.00 rootload=1.00
(smt.stats   29   3671  48990 108323  3893/3602/274    4984/387    28  145   54.75)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 1&34359738168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 8005819039544 := 67645740268 << 30
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 1&34359738168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 8005819039544 := 67645740268 << 30
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 1&34359738168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 8005819039544 := 67645740268 << 30
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 1&34359738168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 68719476536 := 68719476638 << 30
(smt.stats   30   3793  50888 115290  4037/3827/280    5155/414    29  149   54.90)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 1&34359738216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 68719476584 := 68719476638 << 30
(sat.ddfw       1      1   16.7224   1060001      5196         14            1      108)
(smt.stats   31   3927  53010 127277  4080/3871/281    5337/430    30  151   54.90)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  56760 145261  4094/3879/284    5606/440    31  155   54.90)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 2 := 2&17179869185
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 2 := 2&17179869185
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&17179869185
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 18446744056529682433 := 68719476706 << 31
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&17179869185
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 18446744056529682433 := 68719476706 << 31
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&4294967296
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179869179 := 34359738353 << 32
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&4294967296
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 17179869179 := 34359738353 << 32
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&4294967296
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 12884901899 := 34359738353 << 32
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&4294967296
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 12884901895 := 34359738353 << 32
(smt.stats   33   4235  59496 155515  4174/3958/290    5925/486    32  162   55.09)
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&4294967296
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 1 := 2&4294967296
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 2&4294967296
band: (band[35] (if (or #530 #531 #532 #533 #534 #535 #536 #537 #538 #539 #540 #541 #542 #543 #544 #545 ...) 0 (if #560 1 #568)) (shl[35] (bv2int %0) (+ 35 #684))) 1 := 2&4294967296
ramon: poll                 wall=9.000s usage=9.192s mem=57412KiB load=1.04 rootload=1.04
(smt.stats   34   4412  61136 161431  4212/3971/290    6203/486    32  162   55.19)
(smt.stats   35   4606  67380 178915  4272/4047/290    6507/487    32  162   55.34)
(smt.stats   36   4707  69115 184179  4272/4060/290    6654/487    32  162   55.49)
(smt.stats   37   4818  71140 189732  4286/4069/290    6771/487    32  162   55.49)
(sat.ddfw       1      1   15.6495   1210001      5931         15            1      123)
(smt.stats   38   4940  73433 195299  4331/4089/291    6884/535    33  163   55.49)
(smt.delete-inactive-clauses  :num-deleted-clauses 105)
ramon: poll                 wall=10.000s usage=10.190s mem=57720KiB load=1.00 rootload=0.99
(smt.stats   39   5074  77368 204187  4345/4130/291    7023/535    33  163   55.58)
(smt.stats   40   5221  79839 212218  4367/4151/291    7216/535    33  163   55.58)
(smt.stats   41   5382  82987 219552  4440/4153/291    7438/535    33  163   55.58)
ramon: poll                 wall=11.000s usage=11.192s mem=57908KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.5799   1370001      6715         16            1      139)
(smt.stats   42   5559  84417 223630  4694/4341/291    7672/538    33  163   55.68)
ramon: poll                 wall=12.000s usage=12.190s mem=58380KiB load=1.00 rootload=1.00
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 17145509445634 := 41875932780 << 29
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 17145509445633 := 41875933340 << 29
band: (band[35] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #755 1 #763)) (shl[64] (* 2 #114) (mod #1001 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #998 #1000) 64)) 17145509445633 := 41875935860 << 29
(smt.stats   43   5753  85902 231137  5310/4603/291    7918/545    33  163   55.96)
(sat.ddfw       1      1   13.6854   1540001      7549         17            1      156)
(smt.stats   44   5966  90558 262187  5362/5092/296    8291/571    34  164   56.25)
(smt.stats   45   6067  94915 272229  5377/5153/296    8476/587    35  164   56.34)
(smt.stats   46   6178  98207 285843  5412/5159/296    8671/590    35  164   56.43)
ramon: poll                 wall=13.000s usage=13.190s mem=58672KiB load=1.00 rootload=1.00
(smt.stats   47   6300 100769 292254  5503/5194/296    8867/591    35  164   56.43)
(smt.stats   48   6434 102479 303137  5671/5338/296    9114/591    35  164   56.62)
ramon: poll                 wall=14.000s usage=14.185s mem=58920KiB load=0.99 rootload=1.00
(sat.ddfw       1      1    12.894   1720001      8431         18            1      174)
(smt.stats   49   6581 104476 309081  5788/5456/296    9383/593    35  164   56.62)
(smt.stats   50   6742 106233 315658  6012/5627/296    9606/595    35  164   56.81)
ramon: poll                 wall=15.000s usage=15.184s mem=59028KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.1857   1910001      9362         19            1      193)
(smt.stats   51   6919 107830 321580  6447/5905/296    9925/603    35  164   56.91)
ramon: poll                 wall=16.000s usage=16.183s mem=59160KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7113 112529 340824  6472/6250/296   10250/603    35  164   56.91)
(smt.stats   53   7326 118343 362438  6491/6260/296   10597/603    35  164   56.91)
(smt.stats   54   7560 123894 383262  6522/6296/296   11206/605    35  164   57.00)
(smt.stats   55   7661 127689 387424  6529/6306/297   11319/831    36  169   57.00)
(smt.stats   56   7772 129764 393640  6551/6326/297   11467/831    36  169   57.00)
ramon: poll                 wall=17.000s usage=17.184s mem=59372KiB load=1.00 rootload=1.00
(smt.stats   57   7894 133196 403046  6565/6340/297   11588/831    36  169   57.00)
(sat.ddfw       1      1   11.5727   2110001     10343         20            1      214)
(smt.stats   58   8028 135285 410568  6580/6355/297   11762/831    36  169   57.10)
(smt.stats   59   8175 136966 416779  6624/6371/299   11907/861    37  195   57.20)
ramon: poll                 wall=18.001s usage=18.176s mem=59592KiB load=0.99 rootload=0.99
(smt.stats   60   8336 138656 426895  6665/6410/299   12090/861    37  195   57.46)
(smt.stats   61   8513 140902 438688  6719/6452/299   12290/863    37  195   57.56)
ramon: poll                 wall=19.000s usage=19.170s mem=59728KiB load=1.00 rootload=0.99
(smt.stats   62   8707 145555 452928  6743/6507/299   12550/863    37  195   57.56)
(sat.ddfw       1      1   11.0057   2320001     11372         21            1      235)
(smt.stats   63   8920 151915 465363  6794/6530/299   12806/864    37  195   57.65)
ramon: poll                 wall=20.000s usage=20.169s mem=59904KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:30:04 2024
ramon: root.execname        z3
ramon: root.utime           20.210s
ramon: root.stime           0.010s
ramon: group.total          20.232s
ramon: group.utime          20.220s
ramon: group.stime          0.012s
ramon: group.mempeak        60168KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.01
