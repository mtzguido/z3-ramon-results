ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:44:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40743 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Mfk6TWqQNtqL.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3813556
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   247/245     0/0  61       0    18.62   0.01)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 800 :time 0.00)
(sat.stats    179   1214    0   268/266   177/48  68       0    19.58   0.23)
(sat.stats    179   1214    0   273/271   177/48  68       0    19.48   0.23)
(sat.stats    179   1214    0   273/271   177/48  68       0    19.48   0.23)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :elim-bin 5 :time 0.00)
 (sat-probing :cost 588219.48 :time 0.00)
(sat.stats    179   1214    0   252/250   182/54  68       0    19.48   0.23)
(sat.stats    344   4039    1   252/250   347/163  68       0    19.58   0.25)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    347   4088    2   252/250   350/163  68       0    19.68   0.25)
(sat.stats    350   4283    3   252/250   353/165  68       0    19.68   0.25)
(sat.stats    356   4342    4   252/250   359/165  68       0    19.68   0.25)
(sat.stats    359   4348    5   252/250   362/168  68       0    19.68   0.25)
(sat.stats    362   4461    6   252/250   365/168  68       0    19.68   0.25)
(sat.stats    365   4610    7   252/250   368/168  68       0    19.68   0.25)
(sat.stats    368   4811    8   252/250   371/168  68       0    19.68   0.25)
(sat.stats    371   4991    9   252/250   374/168  68       0    19.68   0.25)
(sat.stats    374   5199   10   252/250   377/168  68       0    19.68   0.26)
(sat.stats    377   5465   11   252/250   380/169  68       0    19.68   0.26)
(sat.stats    380   5709   12   252/250   383/171  68       0    19.68   0.26)
(sat.stats    383   5736   13   264/262   386/171  68       0    19.77   0.27)
(sat.stats    386   5881   14   268/266   389/171  68       0    19.67   0.28)
(sat.stats    476   7432   19   384/382   479/213  68       0    19.86   0.34)
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 0 := 665 << 38
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 19463 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 19464 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 63970803750 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 63970803748 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 63970803744 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 63970803648 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 2200576 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 896 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 256 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 512 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 1363968 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 2048 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 325271552 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 8192 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 1043595264 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 32768 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 8166899712 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 524288 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 131072 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 1048592 := 63970803765&182793808117760
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
shl: (shl[64] (bv2int %0) (mod (+ #59 #363) 64)) 144115188075839273 := 665 << 38
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 5355 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 27912 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 439186 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 16 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 1444 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 352 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 983104 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 92416 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 10715136 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 512 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 21504 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 2048 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 24576 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 4096 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 16384 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 1140719616 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 65536 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 3602907136 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 262144 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 524288 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 3145728 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 2097152 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 30291263488 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 3875536896 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 16911433728 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 33554432 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 201326592 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 134217728 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 33285996544 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 536870912 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 12884901888 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 2147483648 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 42949672960 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 17179869184 := 182793808117760&63970803765
band: (band[57] (if (or #592 #593) 0 (if #594 1 #750)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 63970803765&182793808117760
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #772 #773 #774) 0 (if #775 1 #900))) 34359738368 := 182793808117760&63970803765
ramon: poll                 wall=1.001s usage=0.916s mem=25720KiB load=0.92 rootload=0.90
(sat.stats :conflicts   :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units        :memory       )
(sat.stats   1200  22560   59 12430/12426  1219/234  68       0    25.14   1.00)
(sat.stats   1203  22706   60 12442/12438  1222/234  68       0    25.14   1.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9814 :time 0.00)
 (sat-cleaner :elim-literals 112 :elim-clauses 0 :cost 10551 :time 0.00)
ramon: poll                 wall=2.000s usage=1.899s mem=31360KiB load=0.98 rootload=0.98
 (sat-cleaner :elim-literals 114 :elim-clauses 0 :cost 12158 :time 0.00)
ramon: poll                 wall=3.000s usage=2.898s mem=31900KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 10 :elim-clauses 0 :cost 12431 :time 0.00)
(sat.stats   1599  54598  120 53223/53219  2101/841 418       0    31.55   3.08)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 13371 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 13519 :time 0.00)
ramon: poll                 wall=4.000s usage=3.898s mem=33192KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 13 :elim-clauses 0 :cost 15143 :time 0.00)
ramon: poll                 wall=5.000s usage=4.897s mem=33612KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.001s usage=5.897s mem=33984KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.896s mem=34128KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.895s mem=34344KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.895s mem=34828KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 22492 :time 0.00)
ramon: poll                 wall=10.000s usage=9.894s mem=34864KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.894s mem=34960KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.894s mem=35120KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.893s mem=35300KiB load=1.00 rootload=1.00
(sat.stats   3201 168551  275 74897/74893  3772/969 428       0    34.45  13.81)
ramon: poll                 wall=14.000s usage=13.893s mem=35968KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.893s mem=36008KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 32 :elim-clauses 2 :cost 26238 :time 0.00)
ramon: poll                 wall=16.000s usage=15.892s mem=36204KiB load=1.00 rootload=1.00
(sat.stats   3600 185407  292 81094/81090  4240/1091 436       0    35.49  15.94)
ramon: poll                 wall=17.000s usage=16.892s mem=36868KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.891s mem=37852KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.891s mem=38304KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.891s mem=38812KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:44:51 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.970s
ramon: group.utime          19.950s
ramon: group.stime          0.020s
ramon: group.mempeak        39112KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              0.99
