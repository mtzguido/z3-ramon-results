ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:09:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28102 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1271
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KpgoVFxP7FFQ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4180738
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 1 := 2 << 5
(smt.stats    0    101   3567    404  1113/1004/105      96/22     6   16   19.06)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 31 := 137438953471&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 274877906943 := 137438953471 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 31 := 31&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 31 := 1 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 31 := 64&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 30 := 64&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 64&31
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 64&31
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 0&31
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 4294967296 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 29 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 28 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 8 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 24 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 0&31
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 4294967296 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 8 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 8 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 4 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 4 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 4 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 1 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 2 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 4 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 31 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 30 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 28 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 24 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 4 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 8 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 29 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 28 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 29 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 28 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 24 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 133005438816&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 1 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 133005438816&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 4 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 133005438816&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 1 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 133005438816&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 2 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 2 := 32&31
(smt.stats    1    202   6452   1711  1333/1194/178     193/30    12   34   19.85)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 128&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 2 := 128&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 128&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 8 := 128&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 128&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 8 := 128&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 128&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 8 := 128&31
(smt.stats    2    313   7959   3486  2028/1571/205     311/89    14   41   19.85)
(smt.stats    3    414  11221   5680  2234/2035/216     411/118    18   43   20.14)
(smt.stats    4    525  12555   7866  2505/2285/219     514/139    19   48   20.14)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 225&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 225&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 226&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 226&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 290&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 322&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 258&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 258&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 258&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 258&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 514&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 514&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1050&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1042&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 2050&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 2050&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 6146&32767
(smt.stats    5    647  16570  12197  2682/2377/296     738/173    21   69   20.44)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 8730&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 8730&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8730&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8730&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8778&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8842&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8842&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8778&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8778&32767
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19632  15916  2855/2489/306     917/185    22   71   20.54)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8842&1023
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 10250&1023
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 4260607567882 := 40 << 10
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 10250&1023
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 4260607567882 := 40 << 10
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 10250&1023
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 4260607567882 := 40 << 10
(smt.stats    7    859  22132  18658  2919/2646/339    1161/201    24   85   20.73)
(smt.stats    8    982  25290  22920  2992/2765/354    1593/248    25   92   20.83)
(smt.stats    9   1116  29613  28264  3121/2774/355    1936/312    26  105   21.12)
(smt.stats   10   1217  32511  36150  3332/2971/355    2286/410    27  111   21.12)
(smt.stats   11   1328  34712  43389  3595/3128/355    2593/413    27  111   21.21)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  36756  50428  3789/3567/357    2911/490    29  118   21.31)
(smt.stats   13   1584  42902  60952  3954/3579/357    3765/494    29  118   21.54)
(smt.stats   14   1731  51002  76569  4272/3774/357    4550/495    29  118   21.73)
(smt.stats   15   1832  56383  87694  4414/4050/357    5049/497    29  118   21.83)
ramon: poll                 wall=1.000s usage=1.000s mem=23212KiB load=1.00 rootload=0.98
(smt.stats   16   1943  61912 100583  4603/4377/359    5545/607    30  123   21.92)
(smt.stats   17   2065  69166 131188  4646/4383/359    6911/609    30  123   22.14)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2199  76038 151451  5018/4434/359    7879/1017    31  129   22.24)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 4294967601&7
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 4294967601&7
(smt.stats   19   2346  83099 169624  5498/4798/359    8416/1025    31  129   22.43)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 3 := 4294967601&7
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 4294967601&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 416611828017 := 8724152517 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 4294967601&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 416611828017 := 8724152517 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 4294967601&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 416611828017 := 8724152517 << 3
(smt.stats   20   2507  88198 190115  5545/5317/365    8694/1148    32  131   22.53)
(smt.stats   21   2608  93943 209845  5584/5318/365    9074/1148    32  131   22.69)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 1024&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 274877907968 := 8589934624 << 1
(smt.stats   22   2719  97115 224628  5731/5383/365    9482/1149    32  131   22.69)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 1024&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 274877907968 := 8589934624 << 1
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 1024&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 274877907968 := 8589934624 << 1
(smt.stats   23   2841 100859 229261  5775/5536/371    9950/1433    33  132   22.89)
(smt.stats   24   2975 107356 255680  5797/5543/373   11380/1719    34  140   22.98)
(smt.stats   25   3122 113737 270605  5917/5672/376   12021/1762    35  162   23.08)
ramon: poll                 wall=2.000s usage=1.999s mem=24580KiB load=1.00 rootload=1.00
(smt.stats   26   3283 122174 297108  6073/5715/377   13307/1765    35  162   23.27)
(smt.stats   27   3460 126324 321943  6136/5896/380   13849/1892    36  163   23.37)
(smt.stats   28   3561 129112 344839  6138/5898/380   14128/2014    37  171   23.37)
(smt.stats   29   3672 133100 357015  6297/5902/380   14395/2017    37  171   23.47)
(smt.stats   30   3794 135925 375962  6568/6245/386   14976/2080    38  172   23.66)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 34359739392&7
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 81604348615 := 21474836608 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 34359739392&7
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 81604348615 := 21474836608 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 34359739392&7
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 81604348615 := 21474836608 << 3
(smt.stats   31   3928 139345 391763  6660/6338/386   15321/2087    38  172   23.66)
(smt.stats   32   4075 146175 422251  6778/6431/391   16139/2186    39  182   23.85)
(smt.stats   33   4236 153982 468582  6857/6563/391   16368/2187    39  182   23.85)
ramon: poll                 wall=3.000s usage=2.998s mem=25504KiB load=1.00 rootload=0.99
(smt.stats   34   4413 158286 507046  6948/6708/395   16709/2373    41  194   23.94)
(smt.stats   35   4607 165989 559368  6961/6717/395   17297/2373    41  194   24.04)
(smt.stats   36   4708 170013 584749  7007/6761/396   18406/2732    42  197   24.23)
(smt.stats   37   4819 172656 599379  7090/6765/397   18725/2735    42  197   24.33)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 177813 635092  7216/6898/397   19471/2896    43  203   24.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 182841 644895  7296/6971/397   20149/2904    43  203   24.62)
(smt.stats   40   5222 191232 673839  7374/7055/398   20405/3019    44  212   24.85)
(smt.stats   41   5383 199821 713393  7513/7126/398   20737/3023    44  212   24.85)
ramon: poll                 wall=4.000s usage=3.998s mem=26248KiB load=1.00 rootload=1.00
(smt.stats   42   5560 206585 729476  7606/7257/398   20983/3025    44  212   24.95)
(smt.stats   43   5754 217512 766201  7785/7347/400   21657/3087    45  218   25.04)
(smt.stats   44   5967 223923 793213  7938/7544/400   22480/3098    45  218   25.14)
(smt.stats   45   6068 227208 806478  7958/7687/400   22795/3098    45  218   25.14)
(smt.stats   46   6179 233045 822740  8068/7793/402   23279/3264    46  222   25.23)
(smt.stats   47   6301 238923 833659  8149/7797/402   23626/3268    46  222   25.33)
ramon: poll                 wall=5.000s usage=4.997s mem=26796KiB load=1.00 rootload=1.00
(smt.stats   48   6435 244475 857686  8327/7953/402   24340/3270    46  222   25.42)
(smt.stats   49   6582 250678 896484  8426/8093/402   25455/3479    47  223   25.52)
(smt.stats   50   6743 257878 942869  8496/8179/402   25831/3480    47  223   25.61)
(smt.stats   51   6920 265666 990476  8551/8232/402   26132/3482    47  223   25.71)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   52   7114 273285 1037211  8558/8287/403   27840/3833    48  232   25.97)
ramon: poll                 wall=6.000s usage=5.997s mem=27420KiB load=1.00 rootload=1.00
(smt.stats   53   7327 284708 1104382  8646/8322/403   28618/3838    48  232   26.16)
(smt.stats   54   7561 296191 1183209  8735/8387/403   29508/3842    48  232   26.31)
(smt.stats   55   7662 300800 1226762  8764/8475/403   30226/3842    48  232   26.40)
(smt.stats   56   7773 305390 1256230  8786/8505/404   30864/4168    49  247   26.60)
ramon: poll                 wall=7.000s usage=6.996s mem=28092KiB load=1.00 rootload=1.00
(smt.stats   57   7895 309466 1294565  8844/8509/405   31595/4168    49  247   26.69)
(smt.stats   58   8029 312891 1324532  8927/8580/405   33348/4169    49  247   26.89)
(smt.stats   59   8176 318860 1369067  9012/8668/405   33810/4497    50  262   26.89)
ramon: poll                 wall=8.000s usage=7.996s mem=28456KiB load=1.00 rootload=1.00
(smt.stats   60   8337 328464 1445389  9151/8870/406   34376/4611    51  276   27.08)
(smt.stats   61   8514 332866 1493527  9234/8879/406   35582/4616    51  276   27.17)
(smt.stats   62   8708 338219 1554053  9339/8970/406   36193/4621    51  276   27.27)
ramon: poll                 wall=9.000s usage=8.996s mem=28788KiB load=1.00 rootload=1.00
(smt.stats   63   8921 344225 1640483  9434/9091/406   36952/4626    51  276   27.36)
(smt.stats   64   9155 351190 1672779  9567/9200/407   37851/4834    52  292   27.46)
ramon: poll                 wall=10.003s usage=9.998s mem=29080KiB load=1.00 rootload=1.00
(smt.stats   65   9412 360966 1743564 10024/9736/408   38762/4982    53  296   27.65)
(smt.stats   66   9513 363104 1767922 10031/9743/409   40020/4982    53  296   27.74)
(smt.stats   67   9624 367201 1786971 10113/9744/409   40304/4982    53  296   27.84)
(smt.stats   68   9746 371016 1812207 10294/9834/409   40685/4984    53  296   27.96)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9880 375547 1868677 10399/10068/410   41157/4985    53  296   28.12)
ramon: poll                 wall=11.000s usage=10.994s mem=29612KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 3367)
(smt.stats   70  10027 379244 1908465 10408/10120/410   39257/5178    54  298   28.22)
(smt.stats   71  10188 381674 1937780 10536/10142/410   39981/5183    54  298   28.32)
(smt.stats   72  10365 386936 2003291 10637/10306/410   41192/5183    54  298   28.32)
(smt.stats   73  10559 393411 2069688 10719/10384/411   43401/5535    55  308   28.41)
(smt.stats   74  10772 398262 2095077 10771/10456/411   43940/5538    55  308   28.51)
ramon: poll                 wall=12.000s usage=11.993s mem=30108KiB load=1.00 rootload=1.00
(smt.stats   75  11006 404444 2165614 10932/10640/414   47531/5799    56  348   28.98)
(smt.stats   76  11263 418116 2269036 11234/10640/414   48379/5807    56  348   29.08)
ramon: poll                 wall=13.000s usage=12.993s mem=30556KiB load=1.00 rootload=1.00
(smt.stats   77  11545 427749 2331886 11405/10998/414   49270/5807    56  348   29.17)
(smt.stats   78  11646 433885 2387342 11522/11150/415   49526/5905    57  352   29.17)
(smt.stats   79  11757 440036 2468880 11564/11265/415   49984/5906    57  352   29.17)
(smt.stats   80  11879 444706 2523090 11581/11283/417   51379/6033    58  369   29.36)
(smt.stats   81  12013 449274 2562076 11634/11314/418   52641/6034    58  369   29.68)
ramon: poll                 wall=14.000s usage=13.993s mem=31212KiB load=1.00 rootload=1.00
(smt.stats   82  12160 455846 2614720 11812/11354/418   53377/6039    58  369   29.78)
(smt.stats   83  12321 461131 2656550 11975/11557/418   54106/6040    58  369   29.88)
(smt.stats   84  12498 465778 2683930 12054/11700/418   54482/6207    59  411   29.88)
ramon: poll                 wall=15.000s usage=14.993s mem=31520KiB load=1.00 rootload=1.00
(smt.stats   85  12692 472410 2775197 12088/11773/418   55061/6208    59  411   29.97)
(smt.stats   86  12905 476754 2810478 12490/11801/418   55961/6212    59  411   30.27)
(smt.stats   87  13139 484255 2851105 12519/12212/418   56470/6213    59  411   30.27)
ramon: poll                 wall=16.000s usage=15.992s mem=31848KiB load=1.00 rootload=1.00
(smt.stats   88  13396 493197 2924279 12633/12248/420   57305/6391    60  413   30.36)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   89  13678 500965 3032195 12761/12355/421   59829/6395    60  413   30.67)
ramon: poll                 wall=17.000s usage=16.992s mem=32252KiB load=1.00 rootload=1.00
(smt.stats   90  13988 511663 3178653 13059/12494/421   61814/6601    61  430   31.14)
(smt.stats   91  14089 515382 3235872 13104/12778/421   63233/6603    61  430   31.24)
ramon: poll                 wall=18.000s usage=17.991s mem=32680KiB load=1.00 rootload=1.00
(smt.stats   92  14200 519369 3283131 13212/12920/423   63584/6993    62  446   31.33)
(smt.stats   93  14322 522528 3303570 13303/12924/423   63942/6998    62  446   31.33)
(smt.stats   94  14456 525869 3363426 13383/13018/423   64606/6998    62  446   31.43)
(smt.stats   95  14603 530028 3395138 13429/13133/424   65109/7003    62  446   31.43)
(smt.stats   96  14764 534224 3455892 13533/13145/424   65315/7345    63  474   31.53)
ramon: poll                 wall=19.000s usage=18.991s mem=32964KiB load=1.00 rootload=0.99
(smt.stats   97  14941 541159 3541768 13581/13244/424   66698/7352    63  474   31.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 417)
(smt.stats   98  15135 544573 3571801 13670/13308/424   66670/7353    63  474   31.72)
(smt.stats   99  15348 548341 3621630 13776/13394/424   66956/7355    63  474   31.72)
(smt.stats  100  15582 551639 3687571 13869/13504/424   67868/7356    63  474   31.82)
ramon: poll                 wall=20.000s usage=19.989s mem=33240KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:09:47 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.998s
ramon: group.utime          19.966s
ramon: group.stime          0.032s
ramon: group.mempeak        33496KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
