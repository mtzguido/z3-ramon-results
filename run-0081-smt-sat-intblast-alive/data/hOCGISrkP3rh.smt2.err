ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:59:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28533 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/hOCGISrkP3rh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             504564
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   242/242     0/0  64       0    18.51   0.00)
(sat.stats    102    609    0   242/242   102/31  64       0    18.87   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 269 :time 0.00)
(sat.stats    102    609    0   242/242   102/31  64       0    18.87   0.01)
(sat.stats    102    609    0   242/242   102/31  64       0    18.87   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 377618.87 :time 0.00)
(sat.stats    102    609    0   244/244    38/30  64       0    18.87   0.01)
(sat.stats    176   1489    1   244/244   112/85  64       0    18.97   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    179   1538    2   244/244   115/85  64       0    18.97   0.01)
(sat.stats    182   1599    3   244/244   118/85  64       0    18.97   0.01)
(sat.stats    185   1651    4   244/244   121/85  64       0    18.97   0.01)
(sat.stats    188   1696    5   244/244   124/85  64       0    18.97   0.01)
(sat.stats    191   1778    6   244/244   127/85  64       0    18.97   0.01)
(sat.stats    194   1826    7   244/244   130/88  64       0    18.97   0.01)
(sat.stats    197   1855    8   244/244   133/91  64       0    18.97   0.01)
(sat.stats    200   1909    9   244/244   136/93  64       0    18.97   0.01)
(sat.stats    203   1979   10   244/244   139/96  64       0    18.97   0.01)
(sat.stats    206   2064   11   244/244   142/99  64       0    18.97   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    331   4217   12   245/245   267/178  64       0    19.31   0.02)
(sat.stats    334   4292   13   245/245   270/180  64       0    19.31   0.02)
(sat.stats    337   4361   14   245/245   273/180  64       0    19.31   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2329 :time 0.00)
(sat.stats    553   9623   35   244/244   489/248  67       0    19.31   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5375 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 8259 :time 0.00)
(sat.stats    782  15824   63   453/451   715/296  82       0    20.18   0.18)
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 251 >>l 24
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&4294967296
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 125 := 125 >>l 23
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 125 := 248 >>l 27
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 11597 :time 0.00)
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 64 := 252 >>l 23
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 42 := 249 >>l 26
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 117 := 250 >>l 25
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&2147483648
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 125 >>l 24
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&536870912
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 3 := 124 >>l 26
 (sat-cleaner :elim-literals 51 :elim-clauses 5 :cost 13492 :time 0.00)
(sat.stats   1200  30826   75  1415/1406  1131/390 115       0    20.66   0.32)
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 228 >>l 47
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&512
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 114 := 114 >>l 46
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 86 := 245 >>l 30
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&67108864
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 112 := 122 >>l 29
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 1899 := 241 >>l 34
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats   1598  37627  174  1515/1503  1534/512 115       0    20.95   0.38)
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&4194304
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 120 >>l 33
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 244 >>l 31
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&33554432
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 3 := 122 >>l 30
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 247 >>l 28
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&268435456
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 3 := 123 >>l 27
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 242 >>l 33
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&8388608
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 4611686018427387905 := 121 >>l 32
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 223 := 223 >>l 52
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&16
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 3 := 111 >>l 51
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 237 >>l 38
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&262144
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 2 := 118 >>l 37
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 235 >>l 40
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&65536
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 11853474219239156010 := 117 >>l 39
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 1 := 231 >>l 44
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&4096
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 115 >>l 43
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 225 >>l 50
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&64
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 112 >>l 49
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 151 := 227 >>l 48
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&256
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 113 >>l 47
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 229 >>l 46
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&1024
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 114 >>l 45
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 1 := 233 >>l 42
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&16384
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 116 >>l 41
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 0 := 224 >>l 51
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&32
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 112 >>l 50
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 132 := 226 >>l 49
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&128
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 1 := 113 >>l 48
(sat.stats   2490  56263  262  3198/3157  2461/703 115       0    22.52   0.73)
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 1 := 236 >>l 39
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #49))) 1 := 232 >>l 43
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 38020 :time 0.00)
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 0&8192
lshr: (lshr[64] (mod (div #70 2) 18014398509481984) (mod (+ 54 #721 #723) 64)) 3 := 116 >>l 42
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 0 := 1&8192
band: (band[55] (if (= #590 63) 18446744073709551616 (if #592 9223372036854775808 #716)) (lshr[64] (mod #452 18014398509481984) (mod #724 64))) 1 := 8192&1
ramon: poll                 wall=1.000s usage=0.943s mem=24696KiB load=0.94 rootload=0.92
band: (band[55] (lshr[55] (bv2int %0) (+ 55 #469)) (if (= #73 54) 36028797018963968 (if #473 18014398509481984 #579))) 1 := 1&8192
ramon: poll                 wall=2.000s usage=1.940s mem=32976KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.940s mem=43148KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.939s mem=45976KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.938s mem=50348KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.937s mem=51048KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.936s mem=53156KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.936s mem=53796KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 15 :elim-clauses 1 :cost 44962 :time 0.00)
ramon: poll                 wall=9.000s usage=8.935s mem=55084KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.934s mem=55092KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.933s mem=55096KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.932s mem=55136KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.931s mem=57220KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.931s mem=69660KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.930s mem=69692KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.929s mem=69732KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.928s mem=69732KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.927s mem=69732KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.926s mem=69732KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.925s mem=69732KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:59:26 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.988s
ramon: group.utime          19.960s
ramon: group.stime          0.028s
ramon: group.mempeak        74756KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
