ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:01:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40521 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tX3jNmCXlcAz.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3101401
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   1353    541  1169/1046/100      94/13     6   21   19.05)
(smt.stats    1    202   2190   1761  1379/1219/101     205/17     7   22   19.05)
(smt.stats    2    313   3691   3604  1435/1255/101     320/18     7   22   19.15)
(smt.stats    3    414   4896   6134  1450/1297/102     423/30     8   23   19.25)
(smt.stats    4    525   6283   7452  1469/1301/107     527/33     9   28   19.25)
(smt.stats    5    647   7154   8776  1617/1329/107     651/35     9   28   19.35)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   7848   9965  1659/1472/107     751/38     9   28   19.35)
(smt.stats    7    859   9062  11926  1710/1522/107     860/38     9   28   19.44)
(smt.stats    8    981  10346  14018  1731/1561/108     980/40    10   30   19.44)
(smt.stats    9   1115  12890  17460  1741/1586/108    1114/40    10   30   19.44)
(smt.stats   10   1216  15027  20241  1741/1586/108    1215/40    10   30   19.44)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 358&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 358 := 359 << 47
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 359&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 359 := 359 << 47
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 360&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 360 := 359 << 47
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 360&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 360 := 359 << 47
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 985162418487296&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 985162418484536 := 359 << 47
(smt.stats   11   1327  17126  23626  1769/1586/108    1326/41    10   30   19.54)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 985162418487296&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 985162418487295 := 359 << 47
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 1548112371908608&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 51087708272984064 := 363 << 51
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4503599627370495&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4503599627370495&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4503599627370494&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254740990 := 363 << 51
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 1548112371908609&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 1548112371908610&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 15058911254020098 := 363 << 51
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 4503599627370495 := 363 << 51
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 2251799813685249 := 363 << 51
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #658 1 #660))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #658 1 #660))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #658 1 #660))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 1407374883556041&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 46443371157261001 := 362 << 50
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4503599627368190&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 9007199254738686 := 362 << 50
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 1407374883553281&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 46443371157258241 := 362 << 50
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1449  18717  25527  1861/1622/118    1448/44    11   32   19.74)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 2251799813685247 := 362 << 50
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 2251799813682488 := 362 << 50
(smt.stats   13   1583  20652  28139  1923/1705/158    1586/45    12   40   19.84)
ramon: poll                 wall=1.003s usage=0.914s mem=21192KiB load=0.91 rootload=0.90
(smt.stats   14   1730  22587  29538  2000/1769/163    1734/47    13   41   20.13)
(smt.stats   15   1831  24698  31675  2111/1935/165    1845/47    13   41   20.13)
(smt.stats   16   1942  26901  34617  2173/1955/166    1967/55    14   44   20.23)
(smt.stats   17   2064  28998  37589  2270/2067/170    2081/74    16   49   20.23)
ramon: poll                 wall=2.003s usage=1.913s mem=21396KiB load=1.00 rootload=1.00
(smt.stats   18   2198  30511  40119  2414/2136/170    2224/79    16   49   20.32)
(smt.stats   19   2345  32524  44629  2575/2287/170    2364/84    16   49   20.32)
ramon: poll                 wall=3.000s usage=2.910s mem=21568KiB load=1.00 rootload=1.00
(smt.stats   20   2506  34418  48080  2807/2414/170    2530/86    16   49   20.42)
(smt.stats   21   2607  35852  51341  2937/2640/170    2658/90    16   49   20.52)
(smt.stats   22   2718  37459  53732  2986/2799/170    2814/90    16   49   20.52)
(smt.stats   23   2840  39655  57694  3098/2851/170    2996/96    16   49   20.72)
ramon: poll                 wall=4.000s usage=3.910s mem=21912KiB load=1.00 rootload=1.00
(smt.stats   24   2974  41707  61803  3169/2982/197    3162/212    17   55   20.72)
(smt.stats   25   3121  44455  67485  3185/2983/197    3327/214    17   55   20.72)
(smt.stats   26   3282  46699  73697  3252/3009/197    3470/302    18  106   20.72)
ramon: poll                 wall=5.000s usage=4.910s mem=22004KiB load=1.00 rootload=1.00
(smt.stats   27   3459  51062  78348  3316/3088/197    3660/305    18  106   20.82)
(smt.stats   28   3560  52437  81893  3365/3185/202    3755/337    19  116   20.82)
(smt.stats   29   3671  53991  84821  3394/3188/202    3871/337    19  116   20.82)
(smt.stats   30   3793  55443  87711  3447/3228/202    3996/342    20  121   20.92)
ramon: poll                 wall=6.000s usage=5.910s mem=22164KiB load=1.00 rootload=1.00
(smt.stats   31   3927  57460  92872  3476/3288/202    4140/342    20  121   20.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   32   4074  59342  97871  3496/3306/202    4316/342    20  121   21.01)
(smt.stats   33   4235  61542 102363  3520/3320/202    4483/342    20  121   21.01)
(smt.stats   34   4412  64484 110342  3595/3348/202    4663/342    20  121   21.01)
ramon: poll                 wall=7.000s usage=6.910s mem=22292KiB load=1.00 rootload=1.00
(smt.stats   35   4606  67167 116724  3706/3419/202    4882/347    20  121   21.11)
(smt.stats   36   4707  69030 119835  3749/3537/202    4984/347    20  121   21.11)
(smt.stats   37   4818  70729 122257  3790/3582/202    5101/349    20  121   21.21)
(smt.stats   38   4940  73334 127226  3834/3642/202    5230/351    20  121   21.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
ramon: poll                 wall=8.000s usage=7.909s mem=22676KiB load=1.00 rootload=0.99
(smt.stats   39   5074  74374 132372  3873/3675/202    5346/351    20  121   21.41)
(smt.stats   40   5221  76306 136075  3993/3697/202    5496/351    20  121   21.51)
(smt.stats   41   5382  78218 142782  4055/3841/202    5671/351    20  121   21.51)
ramon: poll                 wall=9.000s usage=8.909s mem=22808KiB load=1.00 rootload=1.00
(smt.stats   42   5559  80313 147969  4133/3900/202    5867/351    20  121   21.60)
(smt.stats   43   5753  82357 153848  4217/4001/204    6086/448    21  125   21.60)
ramon: poll                 wall=10.005s usage=9.912s mem=22876KiB load=1.00 rootload=1.00
(smt.stats   44   5966  85408 159225  4415/4070/204    6318/448    21  125   21.70)
(smt.stats   45   6067  86527 161082  4495/4241/204    6423/470    22  125   21.70)
ramon: poll                 wall=11.003s usage=10.910s mem=23132KiB load=1.00 rootload=0.99
(smt.stats   46   6178  87973 166382  4595/4345/204    6555/471    22  125   21.79)
(smt.stats   47   6300  89503 172033  4669/4425/204    6695/472    22  125   21.89)
ramon: poll                 wall=12.000s usage=11.906s mem=23236KiB load=1.00 rootload=1.00
(smt.stats   48   6434  91282 177358  4758/4516/204    6839/472    22  125   21.89)
(smt.stats   49   6581  92952 186433  4779/4585/204    6996/472    22  125   21.98)
(smt.stats   50   6742  95292 192866  4827/4603/204    7186/472    22  125   21.98)
ramon: poll                 wall=13.000s usage=12.906s mem=23492KiB load=1.00 rootload=1.00
(smt.stats   51   6919  96994 198334  4957/4690/204    7369/472    22  125   21.98)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 100210 211406  5014/4783/204    7613/472    22  125   22.08)
(smt.stats   53   7326 102820 217974  5126/4843/204    7828/474    22  125   22.08)
ramon: poll                 wall=14.000s usage=13.906s mem=23492KiB load=1.00 rootload=1.00
(smt.stats   54   7560 105610 227547  5176/4986/205    8063/513    23  125   22.08)
(smt.stats   55   7661 107298 232544  5198/5007/205    8164/513    23  125   22.17)
(smt.stats   56   7772 111024 239630  5201/5020/205    8283/513    23  125   22.17)
(smt.stats   57   7894 115017 245299  5206/5022/205    8415/514    23  125   22.17)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2757&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 3350678122763651781 := 2135 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2137&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 936748722493065305 := 2135 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 17080&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 3377699720527873 := 2135 << 3
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 17080&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 3377699720527873 := 2135 << 3
(smt.stats   58   8028 117164 249050  5247/5030/210    8580/573    24  143   22.27)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2179&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 932245122865694851 := 2177 << 45
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2759&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 900719925474101959 := 2177 << 45
(smt.stats   59   8175 119294 253171  5313/5089/220    8769/573    24  143   22.36)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 35184372088832&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 35184372088816 := 2177 << 45
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 35184372088832&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 35184372088820 := 2177 << 45
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 155818&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 918734323983737002 := 2181 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 182404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 905223525101652100 := 2181 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 182404&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 900719925474281604 := 2181 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2814749767106560&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 2814749766926338 := 2181 << 49
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2814749767106560&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 2814749766926338 := 2181 << 49
(smt.stats   60   8336 121958 259346  5434/5150/225    8971/576    24  143   22.46)
(smt.stats   61   8513 124942 266118  5444/5241/240    9186/627    25  149   22.56)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #658 1 #660))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2251799813685248&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #658 1 #660))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 1 := 2251799813685248&1
(smt.stats   62   8707 127763 272609  5459/5256/241    9421/630    25  149   22.56)
ramon: poll                 wall=15.000s usage=14.904s mem=24260KiB load=1.00 rootload=1.00
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 3764727813505022&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2417694128084090878 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 3764727813505022&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2417694128084090878 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 3764727813505024&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2422197727711461376 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 3764727813505026&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2422197727711461378 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 3764727813505026&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2422197727711461378 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 3764727813505026&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2422197727711461378 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 18077450240&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 2251799813685248 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 18077450240&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 3764727813505026 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 18077450240&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 3764727813505026 := 2155 << 23
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 18077450240&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 3764727813505026 := 2155 << 23
(smt.stats   63   8920 131098 282346  5558/5285/241    9684/654    26  150   22.75)
(smt.stats   64   9154 135055 294006  5674/5348/251    9954/654    26  150   22.85)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2178&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 936748722493065346 := 2143 << 11
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2144&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 936748722493065312 := 2143 << 11
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 12&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 936748722493063180 := 2176 << 44
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 10&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 936748722493063178 := 2176 << 44
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 936748722493063170 := 2176 << 44
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 16&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 932245122865692688 := 2180 << 48
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 18&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 932245122865692690 := 2180 << 48
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 18&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 932245122865692690 := 2180 << 48
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 16&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 932245122865692688 := 2178 << 46
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 16&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 932245122865692688 := 2148 << 16
(smt.stats   65   9411 139572 308872  5757/5481/251   10235/692    27  152   23.42)
(smt.stats   66   9512 142020 314000  5795/5576/283   10335/717    28  170   23.42)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2132&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 5008002785635993684 := 2134 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2126&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 4962966789362288718 := 2134 << 2
(smt.stats   67   9623 143050 318244  5948/5579/283   10497/721    28  170   23.51)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 8536&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 8520 := 2134 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 8536&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 8520 := 2134 << 2
(smt.stats   68   9745 145721 325716  5979/5742/288   10617/722    28  170   23.61)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 8634&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 8634 := 2159 << 27
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 0 := 2159 << 27
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 0 := 2159 << 27
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 289776074752&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 3905465301860354 := 2159 << 27
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 289776074752&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 3905465301860354 := 2159 << 27
(smt.stats   69   9879 148118 335054  6028/5768/293   10775/729    29  172   23.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 151082 341352  6065/5831/303   10955/729    29  172   23.80)
ramon: poll                 wall=16.000s usage=15.904s mem=25408KiB load=1.00 rootload=1.00
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4081387162304514&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 900297713009033218 := 2141 << 9
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4081387162304514&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 900297713009033218 := 2141 << 9
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4081387162307270&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 895794113381665478 := 2141 << 9
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 1096192&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 1096176 := 2141 << 9
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 1096192&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 1096176 := 2141 << 9
(smt.stats   71  10187 154494 349640  6111/5840/303   11131/730    29  172   23.80)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2135&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 810647932926691415 := 2133 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2135&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 806144333299320919 := 2133 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2135&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 801640733671950423 := 2133 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4266&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 17064 := 2133 << 1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 4266&0
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 17064 := 2133 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 159116 358515  6162/5888/313   11322/742    30  176   23.89)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2141&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2422936599525328989 := 2140 << 8
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2141&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2422936599525328989 := 2140 << 8
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2141&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2418432999897958493 := 2140 << 8
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 0 := 2141&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #371) 64)) 2418432999897958493 := 2140 << 8
(smt.stats   73  10558 164990 376278  6238/5980/330   11548/746    30  176   23.99)
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 1 := 2251799813685248&1
band: (band[52] (shl[64] (bv2int %0) (mod #372 64)) (if (or #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 #888 ...) 0 (if #924 1 #948))) 1 := 2251799813685248&1
ramon: poll                 wall=17.000s usage=16.904s mem=25664KiB load=1.00 rootload=1.00
(smt.stats   74  10771 169753 383470  6509/6009/330   11774/779    31  185   24.27)
ramon: poll                 wall=18.000s usage=17.904s mem=25920KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.904s mem=26176KiB load=1.00 rootload=1.00
(smt.stats   75  11005 172655 389042  6802/6322/330   12020/795    31  185   24.76)
ramon: poll                 wall=20.000s usage=19.903s mem=26688KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:02:07 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.969s
ramon: group.utime          19.957s
ramon: group.stime          0.012s
ramon: group.mempeak        26688KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.00
