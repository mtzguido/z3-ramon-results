ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:48:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29426 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/AWqBea2RhMZw.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             294914
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   256/256     0/0  58       0    18.63   0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.95   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 339 :time 0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.95   0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.95   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 378219.05 :time 0.00)
(sat.stats    101    278    0   260/260    21/14  58       0    19.05   0.00)
(sat.stats    322   2199    1   260/260   242/169  58       0    19.25   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    325   2246    2   260/260   245/169  58       0    19.25   0.01)
(sat.stats    328   2277    3   260/260   248/170  58       0    19.25   0.01)
(sat.stats    331   2281    4   260/260   251/172  58       0    19.25   0.01)
(sat.stats    336   2292    5   260/260   256/175  58       0    19.25   0.01)
(sat.stats    339   2297    6   260/260   259/177  58       0    19.25   0.01)
(sat.stats    342   2310    7   260/260   262/180  58       0    19.25   0.01)
(sat.stats    373   2820    8   260/260   293/209  58       0    19.25   0.01)
(sat.stats    376   2869    9   260/260   296/212  58       0    19.25   0.01)
(sat.stats    379   2905   10   260/260   299/215  58       0    19.25   0.01)
(sat.stats    384   2951   11   260/260   304/218  58       0    19.25   0.01)
(sat.stats    387   2965   12   260/260   307/219  58       0    19.25   0.01)
(sat.stats    390   2989   13   260/260   310/220  58       0    19.25   0.01)
(sat.stats    393   3039   14   260/260   313/222  58       0    19.25   0.01)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2865 :time 0.00)
(sat.stats    472   4297   17   272/271   389/241  67       0    19.75   0.04)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 3146 :time 0.00)
lshr: (lshr[62] (bv2int %0) (mod (bv2int %0) 62)) 0 := 49 >>l 49
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 0&4611686018427379712
lshr: (lshr[64] (bv2int %0) (mod (+ #57 #813) 64)) 25481 := 49 >>l 49
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3359 :time 0.00)
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 1&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 1 := 4611686018427379712&1
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 1 := 2&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 1 := 3&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 3&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 2 := 4611686018427379712&3
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 3930 :time 0.00)
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 3926 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 8152 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 6132 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 7328 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 6336 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 5120 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 6912 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 4096 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 2048 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 512 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 128 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 16 := 8191&4611686018427379712
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 3824 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 4 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 8 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 3360 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 6272 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 64 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 7680 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 256 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 3072 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 4096 := 4611686018427379712&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #57 62)) (if (= #547 61) 10633823966279326980924613473029062656 (if #549 5316911983139663490462306736514531328 #669))) 0 := 8191&4611686018427379712
band: (band[62] (if (= #684 63) 42535295865117307914475081855261474816 (if #686 21267647932558653957237540927630737408 #810)) (lshr[64] (bv2int %0) (mod #814 64))) 2048 := 4611686018427379712&8191
 (sat-cleaner :elim-literals 0 :elim-clauses 11 :cost 4606 :time 0.00)
 (sat-cleaner :elim-literals 18 :elim-clauses 55 :cost 4855 :time 0.00)
 (sat-cleaner :elim-literals 120 :elim-clauses 20 :cost 3454 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    711  17214   52  1619/1618   423/227 280       0    21.71   0.22)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 6136 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 9115 :time 0.00)
ramon: poll                 wall=1.000s usage=0.992s mem=32324KiB load=0.99 rootload=0.96
ramon: poll                 wall=2.003s usage=1.992s mem=51812KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.981s mem=59028KiB load=0.99 rootload=0.98
ramon: poll                 wall=4.000s usage=3.977s mem=64976KiB load=1.00 rootload=1.00
(sat.stats   1200  50080  112 82527/82470  3756/3130 309       0    62.78   4.11)
ramon: poll                 wall=5.000s usage=4.972s mem=85600KiB load=0.99 rootload=0.97
ramon: poll                 wall=6.000s usage=5.966s mem=88644KiB load=0.99 rootload=1.00
ramon: poll                 wall=7.000s usage=6.963s mem=92760KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.959s mem=96608KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.945s mem=99444KiB load=0.99 rootload=0.98
ramon: poll                 wall=10.000s usage=9.942s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.938s mem=102MiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.933s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.930s mem=106MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.003s usage=13.930s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.922s mem=110MiB load=0.99 rootload=0.99
ramon: poll                 wall=16.000s usage=15.912s mem=112MiB load=0.99 rootload=0.99
ramon: poll                 wall=17.000s usage=16.909s mem=113MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.905s mem=117MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.901s mem=151MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.898s mem=152MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:49:05 2024
ramon: root.execname        z3
ramon: root.utime           19.810s
ramon: root.stime           0.090s
ramon: group.total          19.914s
ramon: group.utime          19.818s
ramon: group.stime          0.096s
ramon: group.mempeak        183MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              0.99
