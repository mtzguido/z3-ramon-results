ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:06:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41432 MiB
ramon: sys.mem.avail        61385 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7i70FYMiNU0e.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3698691
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   250/250     0/0  63       0    18.52   0.00)
(sat.stats    115    840    0   250/250   115/41  63       0    18.88   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 322 :time 0.00)
(sat.stats    115    840    0   250/250   115/41  63       0    18.88   0.01)
(sat.stats    115    840    0   250/250   115/41  63       0    18.88   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 409618.88 :time 0.00)
(sat.stats    115    840    0   252/252    51/40  63       0    18.88   0.01)
(sat.stats    165    934    1   252/252   101/62  63       0    18.97   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    168    947    2   252/252   104/62  63       0    18.97   0.01)
(sat.stats    300   2302    3   252/252   236/153  63       0    19.19   0.01)
(sat.stats    303   2336    4   252/252   239/154  63       0    19.19   0.01)
(sat.stats    306   2386    5   252/252   242/154  63       0    19.19   0.01)
(sat.stats    309   2430    6   252/252   245/155  63       0    19.19   0.01)
(sat.stats    312   2479    7   252/252   248/156  63       0    19.19   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    315   2513    8   252/252   251/157  63       0    19.19   0.01)
(sat.stats    318   2529    9   252/252   254/159  63       0    19.19   0.01)
(sat.stats    321   2565   10   252/252   257/162  63       0    19.19   0.01)
(sat.stats    324   2581   11   252/252   260/165  63       0    19.19   0.01)
(sat.stats    328   2589   12   252/252   264/168  63       0    19.19   0.01)
(sat.stats    331   2595   13   252/252   267/171  63       0    19.19   0.01)
(sat.stats    335   2608   14   252/252   271/174  63       0    19.19   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2986 :time 0.00)
(sat.stats    516   8056   23   262/262   450/240  75       0    19.68   0.06)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %1) 59)) 0 := 360287970189639681 >>l 48
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 5540 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 0&496286392523964416
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 5 #63 #323) 64)) 9007199254740960 := 9007199254740960 >>l 53
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 6058 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 1&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 1 := 1&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 2&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 2 := 2&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 3 := 4&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 4&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 4 := 4&496286392523964416
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    712  15750   38  1129/1128   587/255 110       0    20.25   0.20)
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 4 := 8&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 8&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 8 := 8&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 16&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 16 := 16&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 2 := 32&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 32&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 32 := 32&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 64&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 64 := 64&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 128&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 128 := 128&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 256&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 256 := 256&496286392523964416
 (sat-cleaner :elim-literals 10 :elim-clauses 1 :cost 8449 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 512&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 512 := 512&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 0 := 1024&496286392523964416
band: (band[59] (lshr[64] (* 32 #70) (mod #324 64)) (if (= #627 63) 5378497399008426543240550563847340032 (if #629 2689248699504213271620275281923670016 #753))) 1024 := 1024&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 2 := 14&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 4 := 14&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 8 := 14&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 16 := 18&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 160 := 2047&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 1984 := 2047&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 896 := 2047&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 1792 := 2047&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 512 := 2047&496286392523964416
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 1024 := 2047&496286392523964416
 (sat-cleaner :elim-literals 7 :elim-clauses 2 :cost 12700 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (mod #63 59)) (if (= #488 58) 84039021859506664738133602560114688 (if #490 42019510929753332369066801280057344 #604))) 1 := 2039&496286392523964416
(sat.stats   1203  31922   92  4398/4396  1110/320 231       0    22.23   0.62)
ramon: poll                 wall=1.000s usage=0.937s mem=31596KiB load=0.94 rootload=0.92
(sat.stats   1599  42878  219 44383/44381  3130/2011 231       0    49.87   1.79)
ramon: poll                 wall=2.000s usage=1.936s mem=52720KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.935s mem=59276KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.935s mem=63704KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.934s mem=66628KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.933s mem=85844KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.933s mem=88196KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.932s mem=91488KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.932s mem=95604KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.932s mem=96872KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.931s mem=98580KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.930s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.930s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.002s usage=13.932s mem=101MiB load=1.00 rootload=1.01
ramon: poll                 wall=15.000s usage=14.929s mem=103MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.929s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.929s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.929s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.928s mem=109MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.928s mem=110MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:06:32 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          20.002s
ramon: group.utime          19.966s
ramon: group.stime          0.036s
ramon: group.mempeak        110MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.00
