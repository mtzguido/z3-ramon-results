ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:56:43 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28962 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CFrZkj2ZotTO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             689998
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4233   2985  1255/1112/91      93/0     3   16   51.93)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 18 := 16738233696630&19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 19 := 18 << 45
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018963969 := 128 << 45
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&36028797018963967
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018963969 := 18 << 45
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&19
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&19
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018963969 := 18 << 45
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&21
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&20
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&240
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   95.2381     10000        49          0            1        2)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&20
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&21
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&24
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018963969 := 18 << 45
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&36028797018963965
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018963969 := 18 << 45
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&3307330976350208
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 0 := 559 << 46
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018963969 := 1118 << 45
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&633318697598976
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 0 := 9 << 46
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&633318697598976
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 0 := 9 << 46
(smt.stats    1    202   5945   4877  1915/1723/134     180/5     6   26   52.42)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 16738233696630&35465847065542656
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 0 := 504 << 46
(sat.ddfw       1      1    49.266     20001        98          1            1        3)
(smt.stats    2    313   6574   6106  2532/2269/136     292/7     7   29   52.61)
(sat.ddfw       1      1   48.8998     40001       196          2            1        5)
(smt.stats    3    414   9634   8865  2611/2373/142     389/7     9   31   52.71)
(smt.stats    4    525  10306  10086  2709/2464/143     436/12    10   34   52.71)
(sat.ddfw       1      1   44.7094     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=1.016s mem=55224KiB load=1.02 rootload=1.00
(sat.ddfw       1      1   40.8163    110001       539          4            1       12)
(smt.stats    5    647  11142  11150  2835/2480/143     582/15    10   34   52.99)
(sat.ddfw       1      1   33.7148    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  11919  12274  3033/2745/143     703/16    10   34   52.99)
ramon: poll                 wall=2.000s usage=2.013s mem=55404KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   28.7224    220001      1078          6            1       23)
(smt.stats    7    859  12343  13309  3180/2813/143     824/18    10   34   53.19)
(sat.ddfw       1      1   25.0627    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=3.010s mem=55656KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   22.1914    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.008s mem=56252KiB load=1.00 rootload=1.00
(smt.stats    8    981  12667  13774  3295/3023/143     953/18    10   34   54.05)
(smt.stats    9   1115  14691  18116  3604/3358/149    1102/36    11   37   53.77)
(smt.stats   10   1216  18313  22967  3619/3368/149    1251/53    12   45   53.77)
(smt.stats   11   1327  23208  31992  3627/3382/149    1366/53    12   45   53.86)
(sat.ddfw       1      1   19.9557    460001      2254          9            1       47)
(smt.stats   12   1449  25471  36190  3735/3490/150    1584/91    13   48   53.96)
(smt.stats   13   1583  29127  44705  3752/3507/151    1718/94    14   49   54.09)
ramon: poll                 wall=5.000s usage=5.005s mem=56572KiB load=1.00 rootload=1.00
(smt.stats   14   1730  32314  49812  3758/3513/151    1936/94    14   49   54.09)
(smt.stats   15   1831  34358  54479  3771/3521/151    2041/95    14   49   54.09)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   16   1942  35851  58172  3880/3623/152    2166/146    15   50   54.09)
(smt.stats   17   2064  37524  62840  3892/3639/152    2398/146    15   50   54.09)
(sat.ddfw       1      1   18.1258    560001      2745         10            1       57)
(smt.stats   18   2198  40784  67207  3903/3650/152    2548/146    15   50   54.22)
(smt.stats   19   2345  43632  74488  3932/3669/152    2870/146    15   50   54.22)
(smt.stats   20   2506  46573  80458  3948/3694/152    3079/147    15   50   54.31)
(smt.stats   21   2607  50028  83963  3961/3712/152    3227/147    15   50   54.43)
ramon: poll                 wall=6.000s usage=6.004s mem=56764KiB load=1.00 rootload=1.00
(smt.stats   22   2718  52692  88138  3990/3719/152    3341/150    15   50   54.43)
(smt.stats   23   2840  54443  89693  3999/3750/152    3460/150    15   50   54.43)
(smt.stats   24   2974  56279  93472  4039/3794/153    3630/267    16   53   54.43)
(smt.stats   25   3121  60387  99124  4051/3802/153    3812/267    16   53   54.43)
(smt.stats   26   3282  63682 111080  4175/3819/153    4061/271    16   53   54.60)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569144
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569120
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569120
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569120
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569120
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569144
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569128
(sat.ddfw       1      1   16.6138    670001      3284         11            1       68)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569144
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 16 := 133905869573041&133905869569144
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569144
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 16 := 133905869573041&133905869569144
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 112 := 133905869573041&133905869569136
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&133905869569144
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 16 := 133905869573041&133905869569144
(smt.stats   27   3459  66098 118534  4348/4066/174    4325/341    17   57   54.79)
ramon: poll                 wall=7.000s usage=7.013s mem=57160KiB load=1.01 rootload=1.00
(smt.stats   28   3560  67704 121101  4421/4104/174    4491/341    17   57   54.79)
(smt.stats   29   3671  69100 129041  4570/4300/175    4674/360    18   58   54.94)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&16738238071260
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 133905869573041&16738238071260
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 48 := 133905869573041&16738238071260
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 16738238071199 := 133905869573041&16738238071260
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 80 := 133905869573041&16738238071260
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 144 := 133905869573041&16738238071260
(smt.stats   30   3793  70826 134173  4781/4338/175    4888/361    18   58   55.03)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 128 := 133905869573041&16738237552092
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 144 := 133905869573041&16738237552092
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 144 := 133905869573041&16738237551836
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 144 := 133905869573041&16738237551836
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 272 := 133905869573041&16738234138332
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 272 := 133905869573041&16738237551836
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 272 := 133905869573041&16738237551836
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 272 := 133905869573041&16738237551644
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 287 := 133905869573041&16738237551764
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 286 := 133905869573041&16738237551764
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 284 := 133905869573041&16738237551764
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 280 := 133905869573041&16738237551764
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 272 := 133905869573041&16738237551764
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 272 := 133905869573041&16738237551708
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 272 := 133905869573041&16738237551708
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 1040 := 133905869573041&16738234138644
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 2064 := 133905869573041&16738234138644
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4112 := 133905869573041&16738234138644
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4112 := 133905869573041&16738234138644
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 2064 := 133905869573041&16738234138644
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 543 := 133905869573041&16738234139156
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 542 := 133905869573041&16738234139156
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 528 := 133905869573041&16738234139156
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 528 := 133905869573041&16738234139156
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 528 := 133905869573041&16738234139156
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 8388624 := 133905869573041&16738234138900
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 8388624 := 133905869573041&16738234140252
(smt.stats   31   3927  71874 140245  5097/4850/262    5233/414    19   74   55.23)
(sat.ddfw       1      1   15.3061    790001      3872         12            1       80)
(smt.stats   32   4074  77425 159078  5104/4859/263    5642/506    20   82   55.32)
ramon: poll                 wall=8.000s usage=8.066s mem=57540KiB load=1.05 rootload=1.05
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 15 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 14 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 13 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 12 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 8 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 12 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 8 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 9 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 8 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 8 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242795593
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242795529
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 1 := 2142493913168658&16738242795529
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242795529
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242795585
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738243056193
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 1 := 2142493913168658&16738242797633
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242797633
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242806849
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242806849
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242805825
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242805825
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&16738242805825
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&1089
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018965057 := 33476479287354 << 52
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&1089
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018965057 := 33476479287354 << 52
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 2142493913168658&65
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 36028797018964033 := 33476479287354 << 52
(smt.stats   33   4235  80402 173301  5423/5018/294    6023/543    21   88   55.81)
(smt.stats   34   4413  87103 191130  5434/5188/326    6283/575    22   99   55.81)
(smt.stats   35   4607  90957 207401  5452/5204/326    6631/575    22   99   55.90)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   36   4708  93246 215467  5485/5208/326    6789/576    22   99   56.09)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 16 := 2142493913168658&492581209280635
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 18 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 18 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 18 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 18 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 18 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4114 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4114 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4114 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 6162 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 5139 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 5138 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4626 := 2142493913168658&492581209281659
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 69650 := 2142493913168658&492581209281659
(smt.stats   37   4819  95072 226279  5776/5295/326    7093/587    22   99   56.19)
(smt.stats   38   4942  96052 232209  6104/5858/353    7344/751    23  104   56.40)
ramon: poll                 wall=9.000s usage=9.065s mem=58736KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 123)
(smt.stats   39   5076 100825 244041  6198/5866/359    8001/755    23  104   56.40)
(sat.ddfw       1      1   14.1228    920001      4509         13            1       93)
(smt.stats   40   5223 106331 272218  6206/5957/359    8473/1447    24  126   56.59)
ramon: poll                 wall=10.000s usage=9.964s mem=58864KiB load=0.90 rootload=0.90
(smt.stats   41   5384 111714 293433  6438/6174/360    8843/1693    25  126   56.68)
(smt.stats   42   5561 115686 310858  6490/6210/361    9274/1693    25  126   56.78)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 73728 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 81920 := 2142493913168658&34993118939971584
(sat.ddfw       1      1    12.963   1060001      5196         14            1      108)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 131072 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 262144 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 524288 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 1048576 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 2097152 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4194304 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 6291456 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 4718592 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 131072 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 131072 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 131072 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 131072 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 131072 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 262144 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 1048576 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 90112 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 81920 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 65536 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 65537 := 2142493913168658&34993118839308288
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 65536 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 65536 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 65536 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 65536 := 2142493913168658&34993118939971584
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 65536 := 2142493913168658&34993118939971584
(smt.stats   43   5755 119307 336803  7032/6719/402    9813/1840    26  136   57.18)
ramon: poll                 wall=11.000s usage=10.873s mem=59608KiB load=0.91 rootload=0.90
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5968 123041 365120  7358/7113/438   10353/2156    28  156   57.38)
(smt.stats   45   6070 127562 391661  7430/7143/442   10586/2160    28  156   57.47)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&335609856
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 335609856 := 33476476198770 << 54
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 134217728 := 8569975652674633&201392128
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&16738233679872
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 536870912 := 8569975652674633&604045312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 604045312 := 33476476198220 << 54
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&528416768
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&520159232
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&511442944
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&470024192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 470024192 := 33476476198220 << 54
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&520159232
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 301989888 := 8569975652674633&520159232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 520159232 := 33476476198220 << 54
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&470089728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 470089728 := 33476476198220 << 54
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&469958656
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&469827584
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 469827584 := 33476476198220 << 54
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&469827584
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 469827584 := 33476476198220 << 54
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 268435456 := 8569975652674633&469827584
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 469827584 := 33476476198220 << 54
(smt.stats   46   6181 130974 412771  7623/7196/442   10995/2325    29  167   57.66)
ramon: poll                 wall=12.000s usage=11.757s mem=60176KiB load=0.88 rootload=0.88
(smt.stats   47   6303 133901 433253  7916/7387/482   11139/2330    29  167   57.66)
(sat.ddfw       1      1   12.0938   1210001      5931         15            1      123)
(smt.stats   48   6437 137773 460928  8138/7676/483   11595/2535    30  179   57.76)
(smt.stats   49   6584 140950 480943  8227/7935/494   12637/3062    31  194   58.27)
ramon: poll                 wall=13.000s usage=12.696s mem=60416KiB load=0.94 rootload=0.94
(smt.stats   50   6745 146510 506956  8384/8036/494   12995/3062    31  194   58.49)
(smt.stats   51   6922 151721 550205  8460/8210/497   13370/3396    32  206   58.59)
ramon: poll                 wall=14.000s usage=13.682s mem=61224KiB load=0.99 rootload=0.99
(sat.ddfw       1      1    11.396   1370001      6715         16            1      139)
(smt.stats   52   7116 156068 567868  8477/8222/498   13743/3427    33  206   58.59)
(smt.stats   53   7329 165995 608179  8509/8261/502   14109/3602    34  222   58.68)
ramon: poll                 wall=15.000s usage=14.656s mem=61236KiB load=0.97 rootload=0.97
(smt.stats   54   7563 172054 651522  8552/8278/502   14695/3607    34  222   58.78)
(smt.stats   55   7664 177401 696717  8574/8326/502   14880/3812    35  235   58.78)
(sat.ddfw       1      1   10.7765   1540001      7549         17            1      156)
(smt.stats   56   7775 181977 730632  8776/8341/503   15244/3922    36  235   58.88)
ramon: poll                 wall=16.000s usage=15.651s mem=61228KiB load=0.99 rootload=1.00
(smt.stats   57   7897 185030 748529  9176/8556/503   15443/3927    36  235   59.17)
(smt.stats   58   8031 189480 774955  9240/8992/506   15829/4029    37  238   59.17)
(smt.stats   59   8178 196071 798893  9251/9003/507   16138/4113    38  268   59.26)
ramon: poll                 wall=17.000s usage=16.714s mem=61940KiB load=1.06 rootload=1.06
(smt.stats   60   8339 201311 805969  9262/9010/507   16460/4113    38  268   59.36)
(sat.ddfw       1      1   10.4281   1720001      8431         18            1      174)
(smt.stats   61   8516 206248 825208  9280/9032/511   16815/4123    39  281   59.36)
(smt.stats   62   8710 214111 861289  9289/9041/511   17078/4123    39  281   59.78)
ramon: poll                 wall=18.000s usage=17.892s mem=62300KiB load=1.18 rootload=1.18
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8923 229690 1007735  9297/9048/511   17303/4207    40  313   59.78)
(smt.stats   64   9157 241640 1043250  9300/9051/511   17637/4207    40  313   59.78)
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 15962823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 18374686479671623680 := 33476476299258 << 25
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 15962823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 18374686479671623680 := 33476476299258 << 25
band: (band[55] (if (or #739 #740 #741 #742 #743 #744 #745 #746 #747 #748 #749) 0 (if #750 1 #854)) (shl[64] (* 2 #114) (mod #900 64))) 0 := 15962823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #897 #899) 64)) 18374686479671623680 := 33476476299258 << 25
(sat.ddfw       1      1   10.0657   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=18.966s mem=62168KiB load=1.07 rootload=1.07
(smt.stats   65   9414 249080 1090398  9553/9059/512   18078/4318    41  316   59.98)
(smt.stats   66   9515 252166 1096169  9593/9343/517   18213/4398    42  317   59.98)
(smt.stats   67   9626 256168 1123663  9612/9350/517   18550/4403    42  317   60.07)
ramon: poll                 wall=20.000s usage=19.960s mem=62392KiB load=0.99 rootload=1.00
ramon: end                  Fri Nov  1 21:57:03 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.020s
ramon: group.total          20.027s
ramon: group.utime          19.999s
ramon: group.stime          0.028s
ramon: group.mempeak        62928KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
