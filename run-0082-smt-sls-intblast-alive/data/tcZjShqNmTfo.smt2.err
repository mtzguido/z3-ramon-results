ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:13:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27230 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1377
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tcZjShqNmTfo.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             948566
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   83.3333     10000        49          0            1        2)
(sat.ddfw       1      1   43.1078     20001        98          1            1        3)
(smt.stats    0    101   3261    860  1404/1261/101      91/44     7   16   52.08)
(sat.ddfw       1      1    47.619     40001       196          2            1        5)
(smt.stats    1    202   3527   1087  2075/1853/101     202/48     7   16   52.27)
(smt.stats    2    313   4702   2325  2250/2019/101     345/49     7   16   52.27)
(sat.ddfw       1      1   43.7318     70001       343          3            1        8)
(smt.stats    3    414   6054   3581  2363/2169/103     440/99     8   17   52.37)
(smt.stats    4    525   7270   4606  2415/2199/109     559/100    10   20   52.37)
(smt.stats    5    647   7793   5777  2474/2229/109     686/132    11   23   52.46)
ramon: poll                 wall=1.004s usage=0.859s mem=54688KiB load=0.86 rootload=0.85
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748   8549   7279  2565/2367/110     790/146    12   24   52.46)
(sat.ddfw       1      1   38.4986    110001       539          4            1       12)
(smt.stats    7    859  11950   9888  2568/2370/110     903/146    12   24   52.57)
(smt.stats    8    981  13754  12240  2656/2448/115    1061/160    14   26   52.67)
(smt.stats    9   1115  15255  15927  2688/2472/115    1199/161    14   26   52.67)
(smt.stats   10   1217  15937  19047  2720/2510/115    1285/162    14   26   52.67)
(smt.stats   11   1328  18733  21514  2733/2519/115    1395/165    14   26   52.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  22245  24964  2746/2535/121    1496/251    17   38   52.80)
(smt.stats   13   1584  24431  28286  2809/2575/123    1614/256    18   39   52.80)
(smt.stats   14   1731  26533  31716  2829/2620/124    1758/262    20   43   52.91)
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 65535 := 65535&65535
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 65535 := 65536 << 17
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 65535 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 65534 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 65532 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 8 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 16 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 32 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 64 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 128 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 256 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 512 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 137438953470&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 137438953470&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 137438953469&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 137438953469&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 137438953468&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 137438953470&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 137438953469&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 66560&65535
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 66560 := 137438953471 << 17
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 65536&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 66560&65535
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 66560 := 66561 << 17
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 1024 := 137438822400&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2048 := 131072&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2560 := 131072&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2048 := 131072&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2048 := 131072&65535
(sat.ddfw       1      1    33.692    160000       784          5            1       17)
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 512 := 131072&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 256 := 131072&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 32 := 131072&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 32 := 131072&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 16 := 131072&65535
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 131072&65535
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 1 << 17
(smt.stats   15   1832  28448  34030  2954/2731/244    1889/269    21   56   53.30)
(smt.stats   16   1943  30427  37231  2972/2759/249    1982/295    23   76   53.45)
(smt.stats   17   2065  31376  40709  2994/2777/252    2127/301    24   88   53.45)
(smt.stats   18   2199  34088  45859  3012/2784/252    2261/301    24   88   53.54)
ramon: poll                 wall=2.004s usage=1.858s mem=55832KiB load=1.00 rootload=1.00
(smt.stats   19   2346  35983  49140  3097/2815/254    1666/380    25  823   53.54)
(sat.ddfw       1      1   29.8364    220001      1078          6            1       23)
(smt.stats   20   2507  37142  53971  3185/2963/259    1824/407    26  825   53.54)
(smt.stats   21   2608  40791  55976  3219/2971/262    1933/422    27  834   53.54)
(smt.stats   22   2719  43221  60765  3245/3013/262    2044/423    27  834   53.67)
(smt.stats   23   2841  45484  65987  3249/3030/262    2178/423    27  834   53.93)
(smt.stats   24   2975  48372  73652  3259/3040/266    2309/470    30  849   53.93)
(smt.stats   25   3122  52200  76754  3263/3043/266    2458/470    30  849   53.93)
(smt.stats   26   3283  56581  84895  3269/3049/266    2632/470    30  849   53.93)
(sat.ddfw       1      1   26.5957    290001      1421          7            1       30)
(smt.stats   27   3460  60958  93046  3288/3065/267    2825/490    31  852   54.22)
(smt.stats   28   3561  64540  98377  3294/3071/267    2928/490    31  852   54.36)
(smt.stats   29   3672  69066 102762  3295/3072/267    3042/490    31  852   54.36)
(smt.stats   30   3794  74362 109861  3297/3074/267    3163/490    31  852   54.36)
(smt.stats   31   3928  78868 115629  3299/3076/267    3308/490    31  852   54.46)
ramon: poll                 wall=3.000s usage=2.856s mem=56696KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  84371 122137  3300/3077/267    3459/490    31  852   54.46)
(smt.stats   33   4236  89716 132374  3303/3080/267    3624/490    31  852   54.46)
(smt.stats   34   4413  95583 141529  3303/3080/267    3801/490    31  852   54.69)
(smt.stats   35   4607 101180 150186  3303/3080/268    3988/504    32  861   54.69)
(smt.stats   36   4708 104677 156256  3304/3081/268    4098/504    32  861   54.69)
(sat.ddfw       1      1   23.9736    370001      1813          8            1       38)
(smt.stats   37   4819 109237 161672  3304/3081/268    4209/504    32  861   54.81)
(smt.stats   38   4941 113058 168029  3304/3081/268    4336/504    32  861   54.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 16)
(smt.stats   39   5075 116626 173102  3304/3081/268    4454/504    32  861   54.81)
(smt.stats   40   5222 121862 180069  3304/3081/268    4601/504    32  861   54.81)
(smt.stats   41   5383 127774 187532  3304/3081/268    4766/504    32  861   55.25)
(smt.stats   42   5560 133769 195832  3304/3081/268    4944/504    32  861   55.25)
ramon: poll                 wall=4.000s usage=3.856s mem=57636KiB load=1.00 rootload=1.00
(smt.stats   43   5754 141284 206899  3305/3082/268    5139/504    32  861   55.55)
(sat.ddfw       1      1   21.7865    460001      2254          9            1       47)
(smt.stats   44   5967 148796 220073  3315/3092/268    5352/504    32  861   55.55)
(smt.stats   45   6068 150063 222845  3334/3093/268    5455/504    32  861   55.65)
(smt.stats   46   6179 152113 226284  3360/3114/268    5568/505    32  861   55.65)
(smt.stats   47   6301 153900 233241  3376/3153/268    5689/505    32  861   55.65)
(smt.stats   48   6435 157441 240406  3379/3156/268    5831/505    32  861   55.75)
(smt.stats   49   6582 159688 245428  3385/3158/268    5978/505    32  861   55.75)
(smt.stats   50   6743 160912 249971  3405/3167/268    6145/505    32  861   55.75)
(smt.stats   51   6920 163044 259011  3414/3191/269    6333/539    33  863   55.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7114 165314 266253  3416/3193/269    6528/539    33  863   55.75)
(smt.stats   53   7327 172989 278992  3416/3193/270    6744/543    34  866   55.75)
ramon: poll                 wall=5.000s usage=4.856s mem=57892KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   19.9442    560001      2745         10            1       57)
(smt.stats   54   7561 177825 289148  3421/3194/270    6985/543    34  866   55.85)
(smt.stats   55   7662 179107 292328  3426/3203/270    7095/543    34  866   55.85)
(smt.stats   56   7773 182052 297196  3437/3212/273    7206/557    35  869   55.85)
(smt.stats   57   7895 183500 305004  3444/3213/273    7337/557    35  869   55.85)
(smt.stats   58   8029 186872 311817  3448/3223/273    7475/557    35  869   55.85)
(smt.stats   59   8176 190675 319415  3448/3223/273    7622/557    35  869   55.85)
(smt.stats   60   8337 192898 329839  3449/3224/273    7794/557    35  869   55.85)
(smt.stats   61   8514 196662 337409  3452/3227/274    7980/575    36  870   55.85)
(smt.stats   62   8708 204361 348186  3452/3227/274    8183/575    36  870   55.95)
ramon: poll                 wall=6.000s usage=5.856s mem=58404KiB load=1.00 rootload=1.00
(smt.stats   63   8921 213611 359386  3452/3227/274    8396/575    36  870   56.36)
(sat.ddfw       1      1    18.367    670001      3284         11            1       68)
(smt.stats   64   9155 220697 369677  3454/3229/274    8638/575    36  870   56.36)
(smt.stats   65   9412 230212 381880  3454/3229/274    8895/575    36  870   56.36)
(smt.stats   66   9513 232321 387038  3454/3229/274    8998/575    36  870   56.36)
(smt.stats   67   9624 233030 390905  3455/3230/274    9108/575    36  870   56.47)
(smt.stats   68   9746 234264 397436  3458/3233/274    9227/575    36  870   56.47)
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 0 := 137406447360 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 0 := 137406447360 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 0 := 137406447360 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 0 := 137405398783 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 3145756&1
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 137405399040 := 103080001543 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 45812984488&1
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 137405399040 := 45812984490 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 45811586380&1
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 137405399040 := 45812634963 << 2
(smt.stats   69   9880 235684 400900  3509/3235/274    9377/581    36  870   56.47)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 237509 406661  3529/3298/285    9530/606    37  872   56.47)
(smt.stats   71  10188 240017 414426  3541/3308/285    9693/606    37  872   56.57)
ramon: poll                 wall=7.004s usage=6.842s mem=58792KiB load=0.98 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas         :deletions     )
(smt.stats   72  10365 241864 421162  3647/3355/286    9883/610    37  872   56.57)
(sat.ddfw       1      1   16.9827    790001      3872         12            1       80)
(smt.stats   73  10559 243750 431040  3792/3486/286   10092/615    37  872   56.70)
(smt.stats   74  10772 246502 440265  3820/3578/288   10297/649    38  874   56.70)
(smt.stats   75  11006 248805 446982  3884/3595/288   10538/650    38  874   56.99)
(smt.stats   76  11263 256650 464282  3947/3695/292   10908/684    39  882   56.99)
(smt.stats   77  11545 264092 486998  3966/3714/293   11243/684    39  882   57.08)
(smt.stats   78  11646 266544 492486  3970/3718/293   11330/686    40  896   57.08)
ramon: poll                 wall=8.004s usage=7.792s mem=59344KiB load=0.95 rootload=0.95
(smt.stats   79  11757 268621 498064  3974/3720/293   11449/686    40  896   57.08)
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 0 := 0 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 0 := 0 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 0 := 0 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&63
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 137405399041 := 0 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 0 := 0 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 0&63
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 137405399041 := 0 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 45816834112&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 45816834112 := 0 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 45816834112&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 45816834112 := 0 << 7
(smt.stats   80  11879 270099 506896  4007/3726/293   11612/693    40  896   57.18)
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 1024&63
band: (band[37] (shl[37] (bv2int %0) (mod #104 37)) (if (= #569 36) 0 (if #571 1 #670))) 63 := 1024&63
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 1024&63
band: (band[37] (shl[37] (bv2int %0) (mod #104 37)) (if (= #569 36) 0 (if #571 1 #670))) 62 := 1024&63
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 1024&63
band: (band[37] (shl[37] (bv2int %0) (mod #104 37)) (if (= #569 36) 0 (if #571 1 #670))) 60 := 1024&63
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 1024&63
band: (band[37] (shl[37] (bv2int %0) (mod #104 37)) (if (= #569 36) 0 (if #571 1 #670))) 8 := 1024&63
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 1024&63
band: (band[37] (shl[37] (bv2int %0) (mod #104 37)) (if (= #569 36) 0 (if #571 1 #670))) 16 := 1024&63
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 1024&63
band: (band[37] (shl[37] (bv2int %0) (mod #104 37)) (if (= #569 36) 0 (if #571 1 #670))) 32 := 1024&63
(smt.stats   81  12013 271095 513720  4074/3814/335   11767/713    41  914   57.27)
(sat.ddfw       1      1   15.8305    920001      4509         13            1       93)
(smt.stats   82  12160 274084 522763  4100/3816/335   11930/714    41  914   57.39)
(smt.stats   83  12321 278526 534105  4112/3846/337   12185/714    41  914   57.48)
(smt.stats   84  12498 281679 545219  4153/3867/339   12422/769    42  939   57.58)
ramon: poll                 wall=9.004s usage=8.792s mem=60112KiB load=1.00 rootload=0.99
(smt.stats   85  12692 286954 555151  4288/3922/339   12767/776    42  939   57.72)
(sat.ddfw       1      1   14.8936   1060001      5196         14            1      108)
(smt.stats   86  12905 293309 574181  4330/4042/339   13018/777    42  939   57.72)
(smt.stats   87  13139 298728 592978  4349/4083/339   13415/777    42  939   57.82)
ramon: poll                 wall=10.000s usage=9.923s mem=60368KiB load=1.13 rootload=1.13
(smt.stats   88  13396 306554 618565  4356/4090/340   13833/886    43  941   57.91)
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2 := 3&262143
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2 := 2&262143
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 2 := 1 << 19
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 2&262143
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2 := 2&262143
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 2 := 1 << 19
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2 := 2&262143
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 2 := 1 << 19
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2 := 2&524287
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 2 := 1 << 20
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 8 := 10&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 8 := 10&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 8 := 10&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 4 := 8&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 4 := 8&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 4 := 8&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 4 := 8&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 8&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 8&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 8&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 8&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 0 := 4&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 5 := 5&524287
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 5 := 3 << 20
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 3 := 3&262143
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 3 := 1 << 19
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 3 := 3&262143
shl: (shl[64] (bv2int %0) (mod (+ #104 #300) 64)) 3 := 1 << 19
(sat.ddfw       1      1   14.5801   1210001      5931         15            1      123)
(smt.stats   89  13678 310923 631856  4442/4157/371   14212/935    44  968   58.10)
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 3 := 1048576&524287
band: (band[37] (shl[64] (bv2int %0) (mod #301 64)) (if (or #690 #691) 0 (if #692 1 #839))) 2 := 1048576&524287
(smt.stats   90  13988 315862 657891  4602/4199/371   14658/940    44  968   58.93)
ramon: poll                 wall=11.000s usage=11.099s mem=60880KiB load=1.18 rootload=1.17
(smt.stats   91  14089 317221 665755  4609/4339/372   14858/940    44  968   58.93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   92  14200 320409 676316  4623/4346/372   15015/1010    45  970   58.93)
(smt.stats   93  14322 322515 685917  4708/4363/372   15194/1012    45  970   59.03)
(smt.stats   94  14456 324087 694598  4765/4486/373   15424/1013    45  970   59.03)
(sat.ddfw       1      1   13.8456   1370001      6715         16            1      139)
(smt.stats   95  14603 326689 708699  4770/4498/373   15691/1013    45  970   59.03)
(smt.stats   96  14764 329863 722530  4776/4504/373   15959/1013    45  970   59.14)
ramon: poll                 wall=12.000s usage=12.099s mem=61136KiB load=1.00 rootload=1.00
(smt.stats   97  14941 334134 737261  4791/4513/374   16360/1145    46  971   59.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 88)
(smt.stats   98  15135 338213 755317  4796/4523/374   16628/1145    46  971   60.00)
(smt.stats   99  15348 345825 783648  4800/4528/377   16939/1252    47  991   60.00)
ramon: poll                 wall=13.000s usage=13.099s mem=62156KiB load=1.00 rootload=1.00
(smt.stats  100  15582 351348 808216  4837/4553/377   17313/1252    47  991   60.10)
(sat.ddfw       1      1   13.0298   1540001      7549         17            1      156)
(smt.stats  101  15839 354213 833941  4887/4597/380   17700/1267    48  994   60.30)
(smt.stats  102  16121 357897 859258  4901/4603/381   18251/1267    48  994   60.39)
(smt.stats  103  16431 364011 889281  4907/4616/381   18668/1351    49 1007   60.52)
ramon: poll                 wall=14.000s usage=14.099s mem=62668KiB load=1.00 rootload=1.00
(smt.stats  104  16771 371382 920069  4928/4623/381   19071/1351    49 1007   60.61)
(smt.stats  105  16872 373617 929478  4944/4644/381   19181/1352    49 1007   60.61)
(smt.stats  106  16983 376049 943103  4956/4662/388   19313/1378    50 1016   60.61)
(smt.stats  107  17105 378291 956513  4964/4676/388   19482/1378    50 1016   60.61)
(sat.ddfw       1      1   12.2917   1720001      8431         18            1      174)
(smt.stats  108  17239 382465 972371  4983/4676/388   19638/1378    50 1016   60.61)
ramon: poll                 wall=15.000s usage=15.099s mem=62924KiB load=1.00 rootload=1.00
(smt.stats  109  17386 387756 996259  4990/4698/388   19825/1378    50 1016   60.61)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats  110  17547 393246 1016923  4995/4703/388   20176/1378    50 1016   60.71)
(smt.stats  111  17724 396782 1038081  5005/4717/388   20368/1378    50 1016   60.71)
(smt.stats  112  17918 402036 1059221  5019/4720/391   20674/1431    51 1029   60.71)
ramon: poll                 wall=16.004s usage=16.153s mem=63180KiB load=1.05 rootload=1.06
(sat.ddfw       1      1   11.7327   1910001      9362         19            1      193)
(smt.stats  113  18131 409895 1079903  5058/4736/393   20942/1434    51 1029   60.81)
(smt.stats  114  18365 417297 1104242  5161/4863/394   21208/1448    52 1086   61.00)
ramon: poll                 wall=17.000s usage=17.232s mem=63436KiB load=1.08 rootload=1.08
(smt.stats  115  18622 424904 1138028  5180/4880/394   21724/1448    52 1086   61.00)
(sat.ddfw       1      1   11.4541   2110001     10343         20            1      214)
(smt.stats  116  18904 433158 1172346  5184/4895/394   22207/1448    52 1086   61.09)
ramon: poll                 wall=18.004s usage=18.396s mem=63668KiB load=1.16 rootload=1.16
(smt.stats  117  19214 441968 1219354  5196/4907/394   22688/1448    52 1086   61.09)
(smt.stats  118  19554 448354 1260644  5212/4913/395   23207/1564    53 1090   61.20)
ramon: poll                 wall=19.000s usage=19.363s mem=63696KiB load=0.97 rootload=0.97
(smt.stats  119  19927 461175 1316529  5230/4939/395   23723/1564    53 1090   61.30)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20028 463400 1323386  5232/4939/396   23827/1611    54 1091   61.30)
(sat.ddfw       1      1   10.8786   2320001     11372         21            1      235)
(smt.stats  121  20139 465856 1341579  5232/4941/396   23943/1611    54 1091   61.30)
(smt.stats  122  20261 469842 1362437  5233/4941/396   24074/1611    54 1091   62.22)
(smt.stats  123  20395 471920 1372974  5378/4945/396   24266/1615    54 1091   62.32)
ramon: poll                 wall=20.004s usage=20.322s mem=64128KiB load=0.96 rootload=0.96
ramon: end                  Fri Nov  1 23:13:47 2024
ramon: root.execname        z3
ramon: root.utime           20.360s
ramon: root.stime           0.010s
ramon: group.total          20.385s
ramon: group.utime          20.365s
ramon: group.stime          0.020s
ramon: group.mempeak        64384KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.02
