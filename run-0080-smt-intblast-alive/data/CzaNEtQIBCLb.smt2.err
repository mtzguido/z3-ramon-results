ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:52:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28516 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1277
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CzaNEtQIBCLb.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4122373
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2534    403  1196/1048/97     104/14     5   14   19.16)
(smt.stats    1    202   4003   1326  2197/1987/99     201/20     6   19   19.35)
(smt.stats    2    313   5564   2693  2288/2089/102     302/23     8   26   19.35)
(smt.stats    3    414   6782   3514  2403/2209/104     404/35     9   28   19.45)
(smt.stats    4    525  10207   4250  2488/2286/108     536/36    10   30   19.54)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592169136236
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 35184355180652 := 35184355180652 << 1
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592169136235
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592169136235
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592169136234
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 35184355180650 := 35184355180652 << 1
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 1 := 1&1704
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 1 := 1&1704
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&1704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 17592186046120 := 35184355180652 << 1
(smt.stats    5    647  14382   6218  2542/2320/125     650/71    12   33   19.74)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592152228056
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 0 := 17592177590326 << 2
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592152228056
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 0 := 17592177590326 << 2
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592152228056
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 0 := 17592177590326 << 2
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592152228056
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 0 := 17592177590326 << 2
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 1&17592152228056
band: (band[44] (if (= #108 43) 0 (if #583 1 #703)) (shl[44] (bv2int %0) (+ 44 #706))) 1 := 1&17592152228056
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 1 := 1&17592152228056
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 0&17592169136238
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17592177590327 := 17592177590327 << 1
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 0&17592169136238
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17592177590327 := 17592177590327 << 1
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  16016   7700  2717/2494/156     753/96    15   49   19.84)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 510 := 511&510
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 17592186044926 := 35184355180636 << 9
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 510 := 511&510
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 17592186044926 := 35184355180636 << 9
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 510 := 511&510
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 17592186044926 := 35184355180636 << 9
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 510 := 511&510
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 35184372089342 := 35184355180636 << 9
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 510 := 511&510
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 35184372089342 := 35184355180636 << 9
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 510 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 508 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 8 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 16 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 48 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 172 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 168 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 168 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 168 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 160 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 160 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 160 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 160 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 160 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 192 := 511&17583529048064
(smt.stats    7    859  18081   9149  2880/2508/156     936/108    15   49   20.13)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 258 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 256 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 256 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 256 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 128 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 128 := 511&17583529048064
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 511&17583529048064
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17583529048066 := 17592177590318 << 10
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 511&17583529048064
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17583529048066 := 17592177590318 << 10
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 511&17583529048064
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17583529048066 := 17592177590318 << 10
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 511&17583529048064
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17583529048066 := 17592177590318 << 10
(smt.stats    8    981  20715  12618  2956/2727/237    1148/201    17   71   20.32)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 18014398509481986 := 35184355180650 << 2
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 1 := 3&2
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 1 := 3&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 576425567931334657 := 35184355180650 << 2
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 1 := 3&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 576425567931334657 := 35184355180650 << 2
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 1 := 3&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 576425567931334657 := 35184355180650 << 2
(smt.stats    9   1115  26567  17741  3001/2747/240    1271/210    18   90   20.62)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17592152228052 := 17592177590325 << 3
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17592152228052 := 17592177590325 << 3
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #104))) 17592152228052 := 17592177590325 << 3
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
band: (band[44] (if (= #108 43) 0 (if #583 1 #703)) (shl[44] (bv2int %0) (+ 44 #706))) 3 := 3&17592118411688
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
band: (band[44] (if (= #108 43) 0 (if #583 1 #703)) (shl[44] (bv2int %0) (+ 44 #706))) 3 := 3&17592118411688
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
band: (band[44] (if (= #108 43) 0 (if #583 1 #703)) (shl[44] (bv2int %0) (+ 44 #706))) 2 := 3&17592118411688
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
band: (band[44] (if (= #108 43) 0 (if #583 1 #703)) (shl[44] (bv2int %0) (+ 44 #706))) 3 := 3&17592118411688
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
band: (band[44] (if (= #108 43) 0 (if #583 1 #703)) (shl[44] (bv2int %0) (+ 44 #706))) 2 := 3&17592118411688
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 3&17592118411688
band: (band[44] (if (= #108 43) 0 (if #583 1 #703)) (shl[44] (bv2int %0) (+ 44 #706))) 1 := 3&17592118411688
(smt.stats   10   1216  29551  21515  3101/2844/261    1423/241    20   95   20.62)
(smt.stats   11   1327  33171  26649  3159/2883/265    1570/250    21  101   20.82)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 56 := 33554431&17592118411504
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 56 := 33554431&17592118411504
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 50 := 33554431&17592118411504
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 50 := 33554431&17592118411504
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 52 := 33554431&17592118411504
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 52 := 33554431&17592118411504
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 64 := 33554431&17592118411504
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 64 := 33554431&17592118411504
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 64 := 33554431&17592118411504
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  36356  31254  3253/2991/287    1875/308    22  104   20.92)
(smt.stats   13   1584  41229  40544  3276/3009/288    1991/362    23  136   21.02)
ramon: poll                 wall=1.000s usage=0.942s mem=22268KiB load=0.94 rootload=0.93
(smt.stats   14   1731  46392  45741  3333/3028/289    2210/364    24  136   21.21)
(smt.stats   15   1832  51441  49541  3361/3090/289    2338/364    24  136   21.41)
(smt.stats   16   1943  53745  56366  3387/3115/291    2500/428    26  140   21.41)
(smt.stats   17   2065  57105  62808  3421/3142/291    2665/428    26  140   21.41)
(smt.stats   18   2199  61646  79199  3432/3151/291    2817/428    26  140   21.41)
(smt.stats   19   2346  65121  89441  3478/3172/291    2981/429    26  140   21.50)
(smt.stats   20   2507  69089  98500  3505/3207/295    3200/466    28  145   21.60)
(smt.stats   21   2608  72029 102891  3564/3228/297    3335/469    28  145   21.60)
ramon: poll                 wall=2.000s usage=1.939s mem=22876KiB load=1.00 rootload=1.00
(smt.stats   22   2719  75255 106941  3806/3298/297    3452/503    29  162   21.70)
(smt.stats   23   2841  78773 114300  3949/3540/297    3627/506    29  162   21.79)
ramon: poll                 wall=3.000s usage=2.939s mem=23096KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.938s mem=23384KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.938s mem=23384KiB load=1.00 rootload=1.00
(smt.stats   24   2975  81354 119287  4029/3710/298    3840/558    30  162   21.89)
(smt.stats   25   3122  84895 125746  4065/3746/298    4066/558    30  162   21.89)
(smt.stats   26   3283  86483 130963  4090/3791/298    4240/558    30  162   21.89)
ramon: poll                 wall=6.000s usage=5.938s mem=23720KiB load=1.00 rootload=1.00
(smt.stats   27   3460  90088 138391  4249/3813/298    4465/564    30  162   22.37)
(smt.stats   28   3561  91704 145046  4320/4026/298    4617/567    30  162   22.37)
(smt.stats   29   3672  91949 146596  4321/4035/298    4728/567    30  162   22.37)
(smt.stats   30   3794  93096 153089  4322/4036/300    4860/690    31  165   22.37)
(smt.stats   31   3928  94854 160137  4331/4041/301    5030/690    31  165   22.37)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  97639 166206  4409/4054/301    5231/692    31  165   22.46)
ramon: poll                 wall=7.004s usage=6.942s mem=23788KiB load=1.00 rootload=1.00
(smt.stats   33   4236 100467 172131  4683/4242/302    5434/722    32  177   22.56)
(smt.stats   34   4413 104505 184062  4837/4456/302    5804/723    32  177   22.65)
ramon: poll                 wall=8.000s usage=7.937s mem=24100KiB load=1.00 rootload=0.99
(smt.stats   35   4607 110736 193936  4840/4554/302    6264/758    33  177   22.65)
(smt.stats   36   4708 113165 200779  4912/4563/302    6500/759    33  177   22.75)
(smt.stats   37   4819 115742 206997  5123/4736/302    6816/765    33  177   22.85)
ramon: poll                 wall=9.000s usage=8.937s mem=24240KiB load=1.00 rootload=1.00
(smt.stats   38   4941 119227 216448  5234/4890/302    7073/767    33  177   22.85)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
(smt.stats   39   5075 122715 228310  5379/4979/302    7370/773    33  177   22.94)
ramon: poll                 wall=10.000s usage=9.937s mem=24348KiB load=1.00 rootload=1.00
(smt.stats   40   5222 125992 233951  5496/5113/302    7596/781    33  177   23.04)
(smt.stats   41   5383 132940 248573  5730/5303/302    7815/781    33  177   23.13)
ramon: poll                 wall=11.000s usage=10.937s mem=24584KiB load=1.00 rootload=1.00
(smt.stats   42   5560 136936 256424  5793/5470/304    8119/963    34  195   23.32)
ramon: poll                 wall=12.000s usage=11.937s mem=24932KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   43   5754 141947 274494  6098/5812/308    8590/1123    35  213   23.42)
(smt.stats   44   5967 148155 301718  6160/5820/308    9189/1125    35  213   23.51)
ramon: poll                 wall=13.004s usage=12.938s mem=24992KiB load=1.00 rootload=1.01
(smt.stats   45   6068 151906 309217  6236/5888/308    9644/1125    35  213   23.61)
(smt.stats   46   6179 155505 322005  6242/5956/308    9823/1125    35  213   23.61)
(smt.stats   47   6301 158951 348366  6261/5973/309   10156/1313    36  216   23.61)
(smt.stats   48   6435 161443 361370  6290/5999/311   10418/1313    36  216   23.61)
(smt.stats   49   6582 164182 379164  6293/6002/311   10620/1361    37  222   23.89)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 8 := 8796093022207&395
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 8 := 8796093022207&458
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 8 := 8796093022207&458
(smt.stats   50   6743 167526 395762  6436/6005/311   10910/1363    37  222   23.89)
(smt.stats   51   6920 170207 413635  6843/6208/316   11347/1432    38  223   24.10)
ramon: poll                 wall=14.000s usage=13.934s mem=25532KiB load=1.00 rootload=0.99
(smt.stats   52   7114 174551 423646  6872/6563/316   11675/1448    39  223   24.19)
ramon: poll                 wall=15.000s usage=14.934s mem=25704KiB load=1.00 rootload=1.00
(smt.stats   53   7327 179766 438457  7251/6591/316   12024/1450    39  223   24.29)
(smt.stats   54   7561 185976 461972  7480/7028/316   12475/1452    39  223   24.38)
(smt.stats   55   7662 188956 473716  7581/7239/316   12738/1454    39  223   24.48)
ramon: poll                 wall=16.000s usage=15.934s mem=25960KiB load=1.00 rootload=1.00
(smt.stats   56   7773 193181 486428  7637/7303/316   12932/1458    39  223   24.48)
(smt.stats   57   7895 197149 503480  7757/7466/320   13128/1704    40  223   24.48)
(smt.stats   58   8029 199641 513476  7764/7473/321   13563/1704    40  223   24.57)
ramon: poll                 wall=17.000s usage=16.933s mem=25992KiB load=1.00 rootload=1.00
(smt.stats   59   8176 202660 530625  7769/7479/321   13800/1840    41  242   24.57)
(smt.stats   60   8337 205498 545254  7773/7483/321   14117/1840    41  242   24.57)
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 7&2632
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 2632 := 2632 << 3
band: (band[44] (if (= #338 63) 0 (if #562 1 #794)) (shl[64] (* 2 #102) (mod #809 64))) 0 := 7&2632
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #801 #805) 64)) 2632 := 2632 << 3
(smt.stats   61   8514 210127 565231  7799/7485/321   14798/1840    41  242   24.67)
(smt.stats   62   8708 213769 588412  7822/7529/327   15392/2113    42  243   24.77)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8921 221781 618321  7833/7540/327   16140/2113    42  243   24.86)
ramon: poll                 wall=18.004s usage=17.936s mem=26496KiB load=1.00 rootload=1.00
(smt.stats   64   9155 228930 643975  7969/7650/329   16756/2229    43  273   25.05)
ramon: poll                 wall=19.000s usage=18.931s mem=26904KiB load=1.00 rootload=1.00
(smt.stats   65   9412 234930 677923  8159/7686/329   17443/2230    43  273   25.24)
(smt.stats   66   9513 236667 689673  8183/7879/329   17698/2308    44  276   25.34)
(smt.stats   67   9624 238815 702442  8211/7895/329   17869/2308    44  276   25.34)
ramon: poll                 wall=20.000s usage=19.931s mem=27056KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:52:59 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.993s
ramon: group.utime          19.989s
ramon: group.stime          0.004s
ramon: group.mempeak        27568KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
