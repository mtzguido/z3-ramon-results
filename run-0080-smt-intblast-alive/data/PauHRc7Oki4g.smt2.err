ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:19:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25871 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/PauHRc7Oki4g.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             21010
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2714    323  1355/1230/116     100/14     7   20   19.19)
(smt.stats    1    202   5149   1565  1703/1502/117     218/18     8   22   19.19)
(smt.stats    2    313   6464   2197  1748/1579/117     346/18     8   22   19.38)
(smt.stats    3    414   8949   5777  1900/1696/117     462/21     8   22   19.48)
(smt.stats    4    525   9219   8359  2577/1848/119     571/70     9   32   19.68)
(smt.stats    5    647  10258  11333  2757/2510/120     720/87    10   32   19.68)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  11114  17097  2788/2537/120     827/87    10   32   19.78)
ramon: poll                 wall=1.002s usage=0.948s mem=20848KiB load=0.95 rootload=0.93
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 1 := 2305843009213694976 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 562949953421313 := 2305843009213694976 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 562949953421313 := 2305843009213694976 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 4503599627370497 := 4503599627370504 >>l 3
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 562949953421313 := 2305843009213698048 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 4503599627370497 := 4503599627370504 >>l 3
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 1 := 2305843009213694976 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 4503599627370497 := 4503599627370498 >>l 3
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 1 := 18446744073709551104 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 4503599627370496 := 36028797018963967 >>l 3
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 4503599627370495 := 18446744073709551104 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 4503599627370496 := 36028797018963967 >>l 3
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 1 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 1 := 18446744073709551104 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 1 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 2 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 2 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 8 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 16 := 562949953421313&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 32 := 562949953421313&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 64 := 562949953421313&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 128 := 562949953421313&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421313&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 256 := 562949953421313&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 512 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 1024 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 2048 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4096 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 8192 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 16384 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 32768 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 65536 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 131072 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 262144 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 524288 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 1048576 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 2097152 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4194304 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 8388608 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 16777216 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 33554432 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 67108864 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 134217728 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 268435456 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 536870912 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 1073741824 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 2147483648 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4294967296 := 562949953421312&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 562949953421312&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 8589934592 := 562949953421312&4503599627370496
(smt.stats    7    859  12488  21317  3163/2564/123     962/102    11   33   20.81)
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627366397&4503599627370496
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 4503599627366397 := 18446744073709547520 >>l 12
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4098 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4097 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4099 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4353 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4352 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4354 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4352 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4608 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 5120 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 5120 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 5120 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 5120 := 4503599627370495&4503599627370496
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4503599627370495&4503599627370496
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 5120 := 4503599627370495&4503599627370496
(smt.stats    8    981  13973  25639  2979/2729/267    1065/153    14  104   20.72)
(smt.stats    9   1115  17642  31672  3008/2749/269    1221/155    14  104   20.81)
(smt.stats   10   1216  22892  38488  3034/2780/274    1319/163    16  115   20.91)
(smt.stats   11   1327  26740  44307  3043/2789/276    1460/166    18  119   20.91)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  31665  55040  3070/2811/280    1592/192    19  124   21.01)
(smt.stats   13   1583  36775  62536  3093/2830/280    1752/193    19  124   21.01)
(smt.stats   14   1730  45047  73852  3094/2835/280    1902/218    20  126   21.13)
(smt.stats   15   1831  48995  82541  3095/2836/280    2005/218    20  126   21.13)
(smt.stats   16   1942  53688  91556  3100/2840/281    2118/222    21  127   21.13)
(smt.stats   17   2064  55624  97734  3147/2877/287    2237/219    22  133   21.13)
(smt.stats   18   2198  57949 104147  3173/2893/287    2384/222    23  134   21.22)
(smt.stats   19   2345  61575 116211  3190/2930/287    2532/222    23  134   21.41)
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 34 := 66&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 1 := 36028797018963967&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 66&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 66&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 66&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 128&64
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 2305843009213694080 := 512 >>l 58
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4512412933882368&64
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 2310355422147576320 := 2310355422147576320 >>l 58
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4512412933882368&64
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 2310355422147576320 := 2310355422147576320 >>l 58
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 1 := 1&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 2 := 2&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 4&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 8 := 8&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 16 := 16&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 16 := 16&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 32 := 32&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 32 := 32&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 32 := 32&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 16 := 16&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 8 := 8&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 8 := 8&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 8 := 8&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 4&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&64
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 562949953421313 := 562949953421312 >>l 49
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 63&64
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 126 := 36028797018963967 >>l 49
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 63&64
lshr: (lshr[55] (bv2int %1) (mod (bv2int %0) 55)) 65 := 36028797018963967 >>l 49
(smt.stats   20   2506  64045 120528  3250/2984/350    2725/236    24  143   21.41)
(smt.stats   21   2607  67274 126192  3273/3005/351    2824/236    24  143   21.51)
(smt.stats   22   2718  69948 131937  3269/3005/351    2932/243    25  157   21.51)
(smt.stats   23   2840  75539 140866  3269/3005/351    3054/243    25  157   21.78)
(smt.stats   24   2974  79476 148200  3269/3005/352    3190/248    26  158   21.78)
(smt.stats   25   3121  83519 158468  3269/3005/352    3338/248    26  158   21.87)
ramon: poll                 wall=2.000s usage=1.938s mem=23076KiB load=0.99 rootload=0.98
(smt.stats   26   3282  88044 168292  3272/3007/352    3497/248    26  158   21.87)
(smt.stats   27   3459  93853 175962  3272/3008/352    3675/248    26  158   21.97)
(smt.stats   28   3560  97002 180665  3276/3009/352    3778/248    26  158   21.97)
(smt.stats   29   3671 102405 188625  3277/3013/352    3892/248    26  158   21.97)
(smt.stats   30   3793 107557 199855  3277/3013/352    4014/248    26  158   21.97)
(smt.stats   31   3927 111978 211421  3282/3018/352    4144/248    26  158   21.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 117443 222782  3282/3018/352    4291/248    26  158   22.06)
(smt.stats   33   4235 123929 235989  3283/3019/352    4458/248    26  158   22.06)
(smt.stats   34   4412 131613 249155  3284/3020/352    4634/248    26  158   22.06)
(smt.stats   35   4606 137768 259703  3288/3021/352    4833/248    26  158   22.55)
(smt.stats   36   4707 142512 267190  3289/3025/352    4934/248    26  158   22.55)
(smt.stats   37   4818 147473 277134  3289/3025/352    5047/248    26  158   22.64)
(smt.stats   38   4940 153019 285427  3289/3025/352    5171/248    26  158   22.64)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
(smt.stats   39   5074 158475 293751  3289/3025/352    5298/248    26  158   22.74)
(smt.stats   40   5221 164090 302642  3289/3025/352    5449/248    26  158   22.74)
(smt.stats   41   5382 172085 315469  3289/3025/352    5610/248    26  158   22.74)
(smt.stats   42   5559 178384 329043  3293/3029/352    5791/248    26  158   22.74)
(smt.stats   43   5753 187811 343055  3293/3029/352    5985/248    26  158   22.84)
(smt.stats   44   5966 197270 355998  3294/3030/352    6222/248    26  158   22.84)
(smt.stats   45   6067 201764 361776  3296/3032/352    6327/248    26  158   22.84)
ramon: poll                 wall=3.000s usage=2.934s mem=24208KiB load=1.00 rootload=1.00
(smt.stats   46   6178 206149 367963  3299/3035/352    6435/248    26  158   22.93)
(smt.stats   47   6300 211220 373508  3299/3035/352    6557/248    26  158   22.93)
(smt.stats   48   6434 215399 380128  3299/3035/352    6691/248    26  158   22.93)
(smt.stats   49   6581 222005 389300  3299/3035/352    6838/248    26  158   23.03)
(smt.stats   50   6742 228814 403155  3299/3035/352    7000/248    26  158   23.12)
(smt.stats   51   6919 233946 416911  3301/3037/353    7181/296    27  159   23.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 241646 424435  3301/3037/353    7375/296    27  159   23.22)
(smt.stats   53   7326 249014 441930  3305/3041/353    7587/296    27  159   23.32)
(smt.stats   54   7560 257343 460482  3306/3042/353    7820/296    27  159   24.13)
(smt.stats   55   7661 261992 469957  3307/3043/353    7924/296    27  159   24.23)
(smt.stats   56   7772 265047 479693  3307/3043/353    8037/296    27  159   24.23)
(smt.stats   57   7894 267861 486758  3308/3044/353    8159/296    27  159   24.23)
(smt.stats   58   8028 272386 498138  3308/3044/353    8293/296    27  159   24.33)
(smt.stats   59   8175 278007 512942  3308/3044/353    8441/296    27  159   24.33)
(smt.stats   60   8336 283773 530862  3308/3044/353    8602/296    27  159   24.33)
(smt.stats   61   8513 286495 538169  3333/3047/353    8784/297    27  159   24.42)
ramon: poll                 wall=4.000s usage=3.933s mem=25860KiB load=1.00 rootload=0.99
(smt.stats   62   8707 290255 548628  3355/3085/354    8987/310    28  161   24.42)
(smt.stats   63   8920 297947 564392  3361/3093/354    9203/310    28  161   24.52)
(smt.stats   64   9154 305265 576220  3394/3097/354    9444/310    28  161   24.62)
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 2 := 2&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 2 := 2&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 4&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 32 := 32&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 64 := 64&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 128 := 128&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 256 := 256&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 512 := 512&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 1024 := 1024&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 2048 := 2048&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4096 := 4096&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 8192 := 8192&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 16384 := 16384&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 32768 := 32768&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 65536 := 65536&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 131072 := 131072&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 262144 := 262144&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 524288 := 524288&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 1048576 := 1048576&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 2097152 := 2097152&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4194304 := 4194304&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 8388608 := 8388608&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 16777216 := 16777216&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 33554432 := 33554432&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 67108864 := 67108864&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 134217728 := 134217728&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 268435456 := 268435456&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 536870912 := 536870912&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 1073741824 := 1073741824&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 2147483648 := 2147483648&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 536870912 := 536870912&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4294967296 := 4294967296&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 8589934592 := 8589934592&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 17179869184 := 17179869184&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 34359738368 := 34359738368&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 68719476736 := 68719476736&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 137438953472 := 137438953472&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 274877906944 := 274877906944&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 549755813888 := 549755813888&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 1099511627776 := 1099511627776&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 2199023255552 := 2199023255552&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4398046511104 := 4398046511104&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 8796093022208 := 8796093022208&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 17592186044416 := 17592186044416&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 35184372088832 := 35184372088832&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 70368744177664 := 70368744177664&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 35184372088832 := 35184372088832&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 35184372088832 := 35184372088832&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 35184372088832 := 35184372088832&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 35184372088832 := 35184372088832&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 70368744177664 := 70368744177664&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 17592186044416 := 17592186044416&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 80 := 80&18014398509481984
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 80 := 80&18014398509481984
(smt.stats   65   9411 310732 588655  3597/3299/524    9730/330    29  161   25.40)
(smt.stats   66   9512 313708 594195  3620/3314/528    9824/330    29  161   25.50)
(smt.stats   67   9623 318721 603009  3621/3319/528    9957/330    29  161   25.69)
(smt.stats   68   9745 324831 615897  3590/3320/528   10062/389    30  214   25.69)
(smt.stats   69   9879 330553 626001  3598/3321/528   10204/389    30  214   25.79)
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 8798241030275&16
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 8798241030275&16
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 8798241030273&16
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 8798241030273&16
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 8798241030273&16
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 4 := 8798241030276&16
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 64 := 65&64
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 36028797018964033 := 576460752303423488 >>l 58
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 2&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 2 := 2&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 2&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 2 := 2&64
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 4&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 4 := 4&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 8&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 8 := 8&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 8&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 8 := 8&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 16&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 16 := 16&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 16&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 16 := 16&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 32&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 32 := 32&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 32&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 32 := 32&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 32&64
band: (band[55] (lshr[55] (bv2int %1) (mod #113 55)) (if (= #518 54) 18014398509481984 (if #520 9007199254740992 #626))) 32 := 32&64
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 1 := 1&64
(smt.stats   70  10026 334638 633969  3659/3372/553   10384/397    30  214   25.98)
ramon: poll                 wall=5.002s usage=4.932s mem=27660KiB load=1.00 rootload=1.00
(smt.stats   71  10187 337022 637841  3825/3395/558   10572/398    30  214   26.08)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 341659 646211  3890/3599/559   10726/427    31  288   26.46)
(smt.stats   73  10558 348567 658715  3984/3692/561   11044/432    31  288   26.65)
(smt.stats   74  10771 356349 671902  4000/3708/563   11314/432    31  288   26.65)
(smt.stats   75  11005 365239 687794  4009/3717/564   11606/553    32  295   26.65)
(smt.stats   76  11262 375357 712095  4021/3725/565   11923/554    32  295   26.75)
ramon: poll                 wall=6.000s usage=5.922s mem=28640KiB load=0.99 rootload=0.98
(smt.stats   77  11544 386855 734069  4122/3803/566   12335/622    33  307   26.87)
(smt.stats   78  11646 390426 746128  4139/3833/567   12444/622    33  307   26.97)
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 504403158265495553 := 0 >>l 9
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 504403158265495553 := 0 >>l 9
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 504403158265495553 := 0 >>l 9
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 504403158265495553 := 0 >>l 9
band: (band[55] (lshr[64] (* 512 #112) (mod #353 64)) (if (= #649 63) 18446744073709551616 (if #651 9223372036854775808 #775))) 0 := 1&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 9 #113 #352) 64)) 504403158265495553 := 0 >>l 9
(smt.stats   79  11757 394510 762316  4173/3850/567   12575/624    33  307   26.97)
ramon: poll                 wall=7.000s usage=6.913s mem=28896KiB load=0.99 rootload=1.00
(smt.stats   80  11879 397947 770020  4226/3869/573   12730/638    34  322   27.16)
(smt.stats   81  12013 401463 777803  4372/4056/576   13078/640    34  322   27.16)
(smt.stats   82  12160 406649 793144  4405/4062/576   13464/645    34  322   27.26)
(smt.stats   83  12321 414471 815020  4423/4106/577   13674/645    34  322   27.36)
(smt.stats   84  12498 420756 830235  4451/4130/581   14021/736    35  337   27.63)
ramon: poll                 wall=8.000s usage=7.882s mem=29660KiB load=0.97 rootload=0.97
(smt.stats   85  12692 429470 854211  4491/4143/581   14300/739    35  337   27.63)
(smt.stats   86  12905 435109 869670  4661/4213/584   14596/822    36  349   27.73)
(smt.stats   87  13139 442734 883477  4705/4374/584   14855/822    36  349   27.73)
ramon: poll                 wall=9.000s usage=8.873s mem=29672KiB load=0.99 rootload=0.99
(smt.stats   88  13396 453113 906169  4805/4410/584   15252/822    36  349   27.82)
(smt.stats   89  13678 461071 930952  4827/4511/587   15676/894    37  355   27.82)
(smt.stats   90  13988 476066 967342  4842/4526/587   16054/894    37  355   27.92)
(smt.stats   91  14089 481326 978387  4846/4527/587   16222/980    38  367   27.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   92  14200 488347 997369  4856/4540/587   16354/980    38  367   27.92)
(smt.stats   93  14322 494431 1010104  4858/4542/588   16494/980    38  367   27.92)
(smt.stats   94  14456 501193 1026332  4862/4544/588   16671/980    38  367   28.02)
ramon: poll                 wall=10.000s usage=9.859s mem=29940KiB load=0.99 rootload=0.98
(smt.stats   95  14603 506285 1046622  4866/4550/588   16836/1003    39  372   28.02)
(smt.stats   96  14764 513870 1066840  4873/4556/588   17038/1003    39  372   28.02)
(smt.stats   97  14941 524171 1086801  4878/4561/588   17247/1003    39  372   28.11)
(smt.delete-inactive-clauses  :num-deleted-clauses 174)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   98  15135 538150 1114368  4882/4565/588   17307/1003    39  372   28.11)
(smt.stats   99  15348 553684 1146238  4887/4570/588   17539/1003    39  372   28.11)
(smt.stats  100  15582 564597 1173039  4896/4579/590   17801/1066    40  374   28.11)
ramon: poll                 wall=11.000s usage=10.852s mem=30032KiB load=0.99 rootload=1.00
(smt.stats  101  15839 578621 1207727  4897/4580/590   18106/1066    40  374   28.11)
(smt.stats  102  16121 599926 1256644  4898/4581/590   18425/1066    40  374   28.27)
(smt.stats  103  16431 620240 1298193  4904/4587/591   18749/1103    41  379   28.27)
(smt.stats  104  16771 640942 1348822  4907/4589/591   19110/1103    41  379   28.36)
(smt.stats  105  16872 645876 1361861  4918/4595/593   19256/1115    42  382   28.36)
ramon: poll                 wall=12.000s usage=11.818s mem=30240KiB load=0.97 rootload=0.96
(smt.stats  106  16983 648957 1371137  4936/4605/593   19381/1119    42  382   28.46)
(smt.stats  107  17105 651767 1378752  4970/4620/593   19527/1119    42  382   28.46)
(smt.stats  108  17239 654775 1386218  4999/4672/593   19731/1119    42  382   28.46)
(smt.stats  109  17386 659198 1398219  5033/4697/593   19986/1119    42  382   28.46)
(smt.stats  110  17547 663056 1405165  5041/4724/593   20198/1119    42  382   28.55)
(smt.stats  111  17724 669796 1432024  5056/4727/593   20406/1120    42  382   28.55)
(smt.stats  112  17918 676792 1466457  5065/4748/593   20703/1254    43  385   28.65)
ramon: poll                 wall=13.000s usage=12.790s mem=30276KiB load=0.97 rootload=0.97
(smt.stats  113  18131 688627 1501958  5082/4758/593   21065/1254    43  385   28.65)
(smt.stats  114  18365 697179 1524843  5293/4765/593   21411/1263    43  385   28.75)
(smt.stats  115  18622 703022 1542355  5389/4994/594   21885/1334    44  387   28.87)
(smt.stats  116  18904 713793 1583881  5412/5093/595   22466/1334    44  387   28.97)
(smt.stats  117  19214 731440 1629897  5421/5100/595   22969/1334    44  387   29.06)
ramon: poll                 wall=14.000s usage=13.787s mem=30924KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  118  19554 736261 1658487  5429/5110/595   23401/1533    45  390   29.16)
(smt.stats  119  19927 748626 1711501  5456/5125/595   23990/1536    45  390   29.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 1319)
(smt.stats  120  20028 750896 1720249  5466/5143/595   22877/1537    45  390   29.15)
(smt.stats  121  20139 756167 1733079  5520/5201/597   23032/1613    46  397   29.15)
ramon: poll                 wall=15.000s usage=14.786s mem=31344KiB load=1.00 rootload=1.00
(smt.stats  122  20261 758108 1743898  5520/5201/597   23173/1613    46  397   29.15)
(smt.stats  123  20395 763528 1762760  5522/5203/597   23327/1613    46  397   29.15)
(smt.stats  124  20542 769730 1782599  5527/5208/597   23595/1613    46  397   29.25)
(smt.stats  125  20703 780473 1815406  5531/5208/597   23797/1651    47  400   29.25)
(smt.stats  126  20880 787187 1834438  5611/5282/598   24073/1654    47  400   29.25)
(smt.stats  127  21074 792387 1849844  5621/5297/598   24328/1689    48  400   29.25)
ramon: poll                 wall=16.000s usage=15.785s mem=31348KiB load=1.00 rootload=1.00
(smt.stats  128  21287 799880 1886362  5639/5307/598   24629/1689    48  400   29.34)
(smt.stats  129  21521 806335 1905706  5686/5326/598   24902/1694    48  400   29.34)
(smt.stats  130  21778 817836 1942642  5713/5384/599   25313/1748    49  403   29.44)
(smt.stats  131  22060 829142 1973790  5777/5453/601   25734/1752    49  403   29.44)
ramon: poll                 wall=17.000s usage=16.779s mem=31368KiB load=0.99 rootload=0.99
(smt.stats  132  22370 842419 2026295  5790/5467/601   26249/1752    49  403   29.44)
(smt.stats  133  22710 852434 2064106  5835/5479/601   26732/1871    50  406   31.05)
(smt.stats  134  23083 858409 2085389  5861/5519/601   27174/1871    50  406   31.14)
ramon: poll                 wall=18.000s usage=17.777s mem=33444KiB load=1.00 rootload=1.00
(smt.stats  135  23493 868291 2121664  5947/5554/601   27661/1872    50  406   31.27)
(smt.stats  136  23594 871041 2130367  5965/5636/601   27792/1872    50  406   31.37)
(smt.stats  137  23705 874653 2146256  5994/5657/601   27940/1872    50  406   31.37)
ramon: poll                 wall=19.000s usage=18.774s mem=33204KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  138  23827 878369 2155181  6058/5682/601   28095/1872    50  406   31.46)
(smt.stats  139  23961 883390 2171634  6087/5760/601   28283/1874    50  406   31.46)
(smt.stats  140  24108 889580 2199724  6125/5773/601   28475/1874    50  406   31.46)
(smt.stats  141  24269 892688 2210651  6178/5818/601   28633/1874    50  406   31.46)
(smt.stats  142  24446 897301 2238257  6209/5862/601   28901/1876    50  406   31.46)
(smt.stats  143  24640 905190 2259151  6218/5895/601   29231/1880    50  406   31.56)
ramon: poll                 wall=20.000s usage=19.773s mem=33600KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:19:52 2024
ramon: root.execname        z3
ramon: root.utime           19.800s
ramon: root.stime           0.030s
ramon: group.total          19.835s
ramon: group.utime          19.803s
ramon: group.stime          0.032s
ramon: group.mempeak        34696KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              0.99
