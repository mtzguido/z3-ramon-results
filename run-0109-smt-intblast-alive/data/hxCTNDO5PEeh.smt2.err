ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:45:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40937 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/hxCTNDO5PEeh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3050318
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101    454    453  1256/1127/112     112/29     5   23   19.05)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387904 := 4611686018427387903 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387904 := 4611686018427387903 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387904 := 4611686018427387903 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 2 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387904 := 4611686018427387903 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282163712 := 2 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 2 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 2 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 2 << 61
(smt.stats    1    202    976    932  1455/1176/118     212/33     7   26   19.44)
(smt.stats    2    313   2150   2830  1582/1424/130     340/42    12   35   19.44)
(smt.stats    3    414   3467   4616  1622/1469/132     437/52    13   41   19.44)
(smt.stats    4    525   4420   6016  1662/1493/141     545/55    14   47   19.53)
(smt.stats    5    647   6253   8845  1691/1533/141     667/67    15   53   19.53)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   8562  11646  1694/1537/143     767/72    16   55   19.53)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 4611686018427387897&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387897 := 4611686018427387897 << 1
(smt.stats    7    859  10934  13704  1768/1548/143     876/84    16   55   19.63)
(smt.stats    8    981  11197  13858  1786/1628/148     998/125    17   56   20.01)
(smt.stats    9   1115  12023  15142  2325/2141/149    1144/125    17   56   20.01)
(smt.stats   10   1216  14457  16787  2345/2182/149    1240/130    18   58   20.01)
(smt.stats   11   1327  15652  20232  2393/2229/151    1363/133    19   58   20.01)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  17517  25471  2480/2322/160    1484/172    21   62   20.11)
ramon: poll                 wall=1.000s usage=0.908s mem=21176KiB load=0.91 rootload=0.90
(smt.stats   13   1585  19817  27250  2483/2324/160    1621/173    21   62   20.11)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 729&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164441 := 783 << 2
(smt.stats   14   1732  21633  31920  2585/2425/166    1750/186    23   99   20.20)
(smt.stats   15   1833  22815  33803  2672/2511/168    1829/194    24  100   20.20)
(smt.stats   16   1944  24127  37314  2754/2543/168    1913/205    24  100   20.20)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 519 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 519 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 519 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 655 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 671 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 469762048&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 755914244103 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 1006632960&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 481036337167 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 1006632960&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 481036337167 << 26
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 1006632960&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 481036337167 << 26
(smt.stats   17   2066  24886  39119  2832/2599/168    2037/212    24  100   20.40)
ramon: poll                 wall=2.000s usage=1.908s mem=21552KiB load=1.00 rootload=0.99
(smt.stats   18   2200  25612  40895  3170/2822/178    2173/215    25  102   20.40)
(smt.stats   19   2347  27467  42961  3363/3147/178    2322/215    25  102   20.49)
(smt.stats   20   2508  28765  46009  3762/3601/188    2457/240    27  125   20.59)
(smt.stats   21   2609  31837  50281  3769/3608/189    2552/240    27  125   20.59)
(smt.stats   22   2720  33910  56166  3798/3613/189    2657/240    28  128   20.69)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 9006855858409482&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9006855858409482 := 9006855858409482 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 9006924577886218&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9006924577886218 := 9006924577886218 << 60
ramon: poll                 wall=3.000s usage=2.907s mem=21928KiB load=1.00 rootload=1.00
(smt.stats   23   2842  35136  58300  3975/3641/189    2779/243    28  128   20.79)
(smt.stats   24   2976  36000  61057  4282/3920/194    2918/247    29  129   20.79)
(smt.stats   25   3123  39115  67659  4303/4134/196    3058/249    30  129   20.79)
(smt.stats   26   3284  41892  69185  4315/4143/196    3212/249    31  135   20.99)
(smt.stats   27   3461  43887  76973  4628/4397/196    3384/250    31  135   20.99)
(smt.stats   28   3562  46026  79484  4631/4468/196    3482/250    31  135   20.99)
(smt.stats   29   3673  48826  86654  4659/4470/196    3598/252    31  135   20.99)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195887817457664 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607195887817457664 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196162695364608 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607196162695364608 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196162695364608 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607196162695364608 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4611685743549480960 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4611685743549480960 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4611685743549480960 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4611685743549480960 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4611685743549480960 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4611685743549480960 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4611685743549480960 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 52
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607195612939550720 << 52
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 50
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607195612939550720 << 50
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 50
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607195612939550720 << 50
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607195612939550720 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 46
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607195612939550720 << 46
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607195612939550720 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607195612939550720 << 42
(smt.stats   30   3795  50020  90041  4781/4513/196    3722/255    31  135   21.16)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607196712451178496 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 38
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 38
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607196712451178496 << 38
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4611685743549480960 << 36
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4611685743549480960 << 36
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 34
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387898 := 4607196712451178496 << 34
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 4607196712451178496 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 0&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387899 := 4607196712451178496 << 32
(smt.stats   31   3929  51123  95131  5022/4837/283    3845/264    33  155   21.54)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   32   4076  52485  98069  5158/4953/283    3972/266    33  155   21.54)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491228174 << 2
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491227918 << 24
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491227678 << 24
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655491227902 << 24
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491227662 << 28
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655491227662 << 28
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655491227662 << 28
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655491227662 << 28
ramon: poll                 wall=4.000s usage=3.907s mem=22936KiB load=1.00 rootload=0.99
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655483559934 << 30
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655483559934 << 30
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655487819774 << 30
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486776062 << 32
(smt.stats   33   4237  54866 105082  5354/4971/283    4124/335    34  158   21.83)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775822 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486776334 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775822 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775822 << 32
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775806 << 34
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775566 << 34
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 36
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775806 << 36
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775790 << 38
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 44
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 48
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775806 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 40
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775742 << 20
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775742 << 20
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775710 << 20
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775694 << 20
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 18
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775726 << 18
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 18
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 18
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 16
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 14
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 735&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164447 := 11258655486775726 << 14
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 795&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164507 := 11258655486775742 << 14
(smt.stats   34   4414  57763 113833  5787/5273/298    4295/397    35  161   22.02)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 13492382532378290&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13848550437814542002 := 11258655486775823 << 28
ramon: poll                 wall=5.005s usage=4.911s mem=24016KiB load=1.00 rootload=0.99
(smt.stats   35   4608  61665 119689  5957/5637/352    4466/411    36  171   22.59)
ramon: poll                 wall=6.000s usage=5.905s mem=24100KiB load=1.00 rootload=1.01
(smt.stats   36   4709  63669 123805  6201/5861/352    4546/433    37  172   22.81)
(smt.stats   37   4820  66242 128673  6386/6178/358    4636/439    38  181   22.91)
ramon: poll                 wall=7.000s usage=6.905s mem=24364KiB load=1.00 rootload=1.00
(smt.stats   38   4942  70309 133237  6406/6198/358    4748/439    38  181   22.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076  74818 136313  6429/6221/358    4861/439    38  181   22.91)
(smt.stats   40   5223  82980 154785  6437/6223/358    5006/439    38  181   22.91)
(smt.stats   41   5384  84885 158140  6659/6236/358    5165/461    38  181   23.00)
ramon: poll                 wall=8.000s usage=7.905s mem=24524KiB load=1.00 rootload=1.00
(smt.stats   42   5561  86736 164349  6841/6582/359    5351/484    39  184   23.19)
ramon: poll                 wall=9.000s usage=8.905s mem=24808KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.903s mem=24812KiB load=1.00 rootload=0.99
(smt.stats   43   5755  89646 167803  7317/6793/359    5548/504    39  184   23.29)
ramon: poll                 wall=11.000s usage=10.903s mem=24936KiB load=1.00 rootload=1.00
(smt.stats   44   5968  92727 173018  7946/7228/359    5762/515    39  184   23.48)
(smt.stats   45   6069  96120 179139  8089/7762/359    5867/528    39  184   23.48)
ramon: poll                 wall=12.000s usage=11.903s mem=25076KiB load=1.00 rootload=1.00
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 820&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164532 := 21323962868887565 << 1
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 796&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164508 := 21323962868887565 << 1
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 796&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164508 := 21323962868958221 << 4
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 796&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164508 := 21323962868957197 << 4
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 796&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164508 := 21323962868957277 << 30
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 796&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164508 := 21323962868957277 << 24
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 796&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164508 := 21323962868957277 << 22
(smt.stats   46   6180  99275 183900  8318/7882/359    5977/564    39  184   23.67)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 796&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 13835058055282164508 := 21323962869092413 << 22
(smt.stats   47   6302 103340 189134  8558/8180/369    6087/591    40  186   23.77)
ramon: poll                 wall=13.000s usage=12.902s mem=25200KiB load=1.00 rootload=1.00
(smt.stats   48   6436 104643 192610  9005/8790/370    6236/593    41  186   23.86)
(smt.stats   49   6583 112194 200330  9009/8794/372    6382/593    41  186   23.86)
ramon: poll                 wall=14.001s usage=13.903s mem=25460KiB load=1.00 rootload=1.00
(smt.stats   50   6744 116121 206988  9188/8799/373    6557/619    42  197   23.96)
ramon: poll                 wall=15.000s usage=14.901s mem=25524KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.001s usage=15.902s mem=26036KiB load=1.00 rootload=1.00
(smt.stats   51   6921 121708 213841  9385/8989/373    6746/650    43  198   24.17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7115 133330 230948  9426/9192/373    6940/650    43  198   24.07)
(smt.stats   53   7328 142866 258241  9532/9224/373    7477/655    43  198   24.91)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 4611686018427387901&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775805 := 0 << 59
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #965 #966 #967 #968 #969 #970 #971 #972 #973 #974 #975 #976 #977 #978 #979 #980 ...) 0 (if #1026 1 #1030))) 0 := 4611686018427387901&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775805 := 0 << 59
(smt.stats   54   7562 153033 281378 10215/9818/386    7836/897    44  199   25.68)
(smt.stats   55   7663 165233 292405 10226/9826/386    7967/975    45  212   25.78)
ramon: poll                 wall=17.000s usage=16.898s mem=27848KiB load=1.00 rootload=0.99
(smt.stats   56   7774 178741 303636 10235/9834/387    8120/987    46  215   25.97)
ramon: poll                 wall=18.000s usage=17.897s mem=27848KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.895s mem=28552KiB load=1.00 rootload=1.00
(smt.stats   57   7896 189817 311103 10317/9848/387    8325/990    46  215   26.36)
(smt.stats   58   8030 194818 320248 10378/9983/387    8494/990    46  215   26.36)
ramon: poll                 wall=20.000s usage=19.894s mem=28436KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:45:53 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.976s
ramon: group.utime          19.948s
ramon: group.stime          0.028s
ramon: group.mempeak        30576KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              0.99
