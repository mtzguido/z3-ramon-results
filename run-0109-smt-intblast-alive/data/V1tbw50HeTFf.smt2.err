ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:24:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41355 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/V1tbw50HeTFf.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2982587
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4549   1411  1288/1163/90      96/1     2   13   19.08)
(smt.stats    1    202   6564   4471  2164/1952/90     196/1     3   13   19.27)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 288230376151711743&3
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 288230376151711743&3
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 288230376151711743&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 1 := 4 << 57
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 288230376151711743&3
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 288230376151711743&3
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 288230376151711743&2
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 288230376151711743&4
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 484 := 288230376151711743&484
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 484 := 724 << 57
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 2 := 288230376151711743&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 2 := 724 << 57
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 2 := 288230376151711743&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 2 := 724 << 57
(smt.stats    2    313   7972   6711  2276/2029/119     303/8     4   14   19.56)
(smt.stats    3    414   8331   7025  2860/2617/124     412/12     6   24   19.86)
(smt.stats    4    525   8993   8610  2995/2744/127     474/28     7   25   19.86)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&2
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&4
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&2
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&4
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&8
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&4
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&8
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&16
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&8
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 8 := 32767&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 4611686018427387912 := 16410 << 14
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&8
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 8 := 32767&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 4611686018427387912 := 16410 << 14
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&8
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 8 := 32767&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 4611686018427387912 := 16410 << 14
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 2 := 32767&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 4611686018427387906 := 16410 << 14
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 2 := 32767&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 4611686018427387906 := 16410 << 14
(smt.stats    5    647  12481  11158  3059/2777/160     600/33    10   33   19.96)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  13413  12628  3103/2811/165     709/34    10   33   20.07)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 32767 := 32767&32768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 32766 := 32767&32768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 32764 := 32767&32768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&32768
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 577094071001022466 := 577094071001022465 << 15
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&32768
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 577094071001022466 := 577094071001022465 << 15
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&32768
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 577094071001022466 := 577094071001022465 << 15
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 32765 := 32767&32768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 32764 := 32767&32768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&32768
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 1152921504606846975 := 576566305419689985 << 15
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 32760 := 32767&576583901374742528
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 32760 := 32767&577146868516421632
(smt.stats    7    859  14657  14924  3163/2872/173     817/71    13   41   20.26)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 32767&6586368
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 579381055186813093 := 579381055186796745 << 15
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 32760 := 32767&582213572703059968
(smt.stats    8    981  16302  17293  3289/3022/189     948/73    13   41   20.26)
(smt.stats    9   1115  20911  21861  3314/3049/190    1078/94    14   46   20.26)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 1&11470105300960902
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1&11470105300960902
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 1152921504606846975 := 582195804953903939 << 1
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1&11470105300960902
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 582195804953920288 := 582195804953903939 << 1
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 1&11470105300960902
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1&11470105300960902
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 1152921504606846975 := 582195804953903939 << 1
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1&11505640797338502
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #115))) 582213572702109088 := 582213572702092739 << 1
(smt.stats   10   1216  22142  24923  3398/3131/196    1172/117    16   51   20.26)
(smt.stats   11   1327  24050  28649  3459/3173/196    1291/118    16   51   20.35)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 1&1062
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 1&1062
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1&822
band: (band[60] (if (= #119 59) 1 (if #580 3 #749)) (shl[60] (bv2int %0) (+ 60 #752))) 1 := 1&822
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  25907  33496  3503/3231/202    1391/128    17   53   20.45)
(smt.stats   13   1583  29662  38178  3524/3260/214    1551/151    19   59   20.45)
(smt.stats   14   1730  35756  47842  3542/3277/215    1730/151    19   59   20.45)
ramon: poll                 wall=1.000s usage=0.891s mem=21724KiB load=0.89 rootload=0.89
(smt.stats   15   1831  38099  51130  3578/3287/216    1827/207    20   61   20.55)
(smt.stats   16   1942  39131  53379  3726/3344/216    1988/207    21   65   20.74)
(smt.stats   17   2064  41356  56770  3735/3475/220    2121/236    22   66   20.74)
(smt.stats   18   2198  45220  63989  3780/3513/220    2248/240    23   77   20.74)
(smt.stats   19   2345  49734  71424  3812/3546/225    2272/268    24  211   20.93)
(smt.stats   20   2506  52985  76948  3845/3579/227    2493/305    25  215   20.93)
(smt.stats   21   2607  56714  80858  3927/3587/228    2622/306    25  215   20.93)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 16 := 549755813887&11470805423360767
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 549755813887&11470805423360767
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 3 := 549755813887&11470805423360767
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 7 := 549755813887&11470805423360767
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360767
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360783
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360847
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360767
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360783
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360815
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360783
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360783
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360847
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423360783
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 31 := 549755813887&11470805423360767
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 31 := 549755813887&11470805423361167
(smt.stats   22   2718  59095  86424  4047/3743/266    2762/326    26  218   21.14)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423361231
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 15 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 591 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1551 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1551 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 655 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 655 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 655 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 655 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1167 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1167 := 549755813887&11470805423361167
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 2191 := 549755813887&11470805423361231
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 2191 := 549755813887&11470805423361167
(smt.stats   23   2840  60201  89091  4208/3798/293    3009/338    27  229   21.33)
(smt.stats   24   2974  62747  97088  4483/4081/328    3387/341    27  229   21.48)
(smt.stats   25   3121  67167 114206  4535/4264/328    4018/419    28  244   21.57)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611299330
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611262466
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 4098 := 17592186044415&11488048611263490
(smt.stats   26   3282  71833 131448  4682/4276/329    4419/735    29  248   21.77)
(smt.stats   27   3459  74192 139031  5017/4488/354    4903/863    30  253   22.05)
(smt.stats   28   3560  77435 145415  5098/4822/354    5405/906    31  253   22.05)
(smt.stats   29   3671  81238 157155  5274/4855/355    5829/1318    32  254   22.15)
(smt.stats   30   3793  84461 164380  5326/5030/355    6087/1318    32  254   22.25)
(smt.stats   31   3927  86561 180764  5621/5086/355    6636/1319    32  254   22.34)
ramon: poll                 wall=2.000s usage=1.891s mem=23896KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074  91712 193900  5654/5381/355    6856/1319    32  254   22.45)
(smt.stats   33   4235  94554 211373  5912/5423/356    7388/1673    33  257   22.74)
(smt.stats   34   4412  97525 237342  6286/5671/356    8086/1689    33  257   22.74)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 4095&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 3458764513820540929 := 1158797474066038416 << 11
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 4095&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 3458764513820540929 := 1158762810462458136 << 11
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 4095&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 3458764513820540929 := 1158797474066038416 << 11
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 4095&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 3458764513820540929 := 1158797474066038416 << 11
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 4095&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 3458764513820540929 := 1158797474066038416 << 11
(smt.stats   35   4606 101568 262946  6408/6069/358    8553/1996    34  259   22.98)
(smt.stats   36   4707 104823 270274  6420/6144/363    8657/2108    35  260   22.98)
(smt.stats   37   4818 108269 281430  6448/6172/365    8742/2123    36  265   22.98)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 1 := 144115188075855871&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 3458764513820540929 := 1144124874680958486 << 56
(smt.stats   38   4940 112384 304533  6681/6223/365    9097/2129    36  265   23.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 428)
ramon: poll                 wall=3.000s usage=2.891s mem=24876KiB load=1.00 rootload=1.00
(smt.stats   39   5074 116952 326409  6846/6457/365    9285/2132    36  265   23.56)
(smt.stats   40   5221 121165 346444  7096/6556/365    9796/2139    36  265   23.66)
ramon: poll                 wall=4.000s usage=3.890s mem=25340KiB load=1.00 rootload=1.00
(smt.stats   41   5382 125394 365074  7295/6893/366   10366/2578    37  269   23.75)
(smt.stats   42   5559 129788 388694  7405/7001/366   11005/2582    37  269   23.85)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 576460752303363074 := 576460752303423487&576460752303571456
(smt.stats   43   5753 133068 407599  7775/7120/367   11695/2796    38  271   24.04)
(smt.stats   44   5966 136461 424442  7979/7505/367   12388/2797    38  271   24.24)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 576460752303357952 := 576460752303423487&576460752303423488
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 576460752303357952 := 576460752303423487&576460752303423488
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 576460752303357952 := 576460752303423487&576460752303357952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 1729382256910204928 := 1162631854399683842 << 58
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 576460752303357952 := 576460752303423487&576460752303357952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 1729382256910204928 := 1162631854399685762 << 58
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 576460752303357952 := 576460752303423487&576460752303357952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 2882303761517051904 := 1162631854399685762 << 58
(smt.stats   45   6068 138282 433546  8195/7723/367   13023/2799    38  271   24.55)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 576460752303357952 := 576460752303423487&576460752303357952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 4035225266123898880 := 1162420748167152002 << 58
ramon: poll                 wall=5.000s usage=4.890s mem=26028KiB load=1.00 rootload=0.99
(smt.stats   46   6179 138690 435064  8374/7921/382   13146/2958    39  274   24.74)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 576460752303357952 := 576460752303423487&576460752303357952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #901 #903) 64)) 4035225266123898880 := 1162280010678798722 << 58
(smt.stats   47   6301 142202 457560  8772/8373/382   13835/2958    39  274   24.74)
(smt.stats   48   6435 146004 474044  8861/8548/390   14447/3094    40  275   24.95)
(smt.stats   49   6582 153077 493318  8878/8565/390   15602/3094    40  275   25.05)
(smt.stats   50   6743 161088 533446  8981/8568/390   16023/3643    41  283   25.28)
ramon: poll                 wall=6.000s usage=5.890s mem=26844KiB load=1.00 rootload=1.00
(smt.stats   51   6920 168163 565744  9184/8679/390   16614/3643    41  283   25.38)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7114 175609 596235  9254/8885/390   18204/3643    41  283   25.47)
(smt.stats   53   7327 184601 653799  9620/8963/390   18757/3644    41  283   25.79)
ramon: poll                 wall=7.000s usage=6.890s mem=27356KiB load=1.00 rootload=1.00
(smt.stats   54   7561 190718 689138  9876/9562/394   20084/3959    42  286   25.98)
(smt.stats   55   7662 195761 712912  9881/9569/394   20313/3959    42  286   25.98)
(smt.stats   56   7773 203909 727890  9884/9573/394   20432/4202    43  298   25.98)
(smt.stats   57   7895 216786 782320  9889/9578/394   20608/4202    43  298   26.09)
(smt.stats   58   8029 221676 795760  9897/9586/394   21030/4202    43  298   26.18)
(smt.stats   59   8176 229833 816272  9904/9593/394   21357/4202    43  298   26.18)
(smt.stats   60   8337 242609 911387  9916/9605/394   21777/4202    43  298   26.18)
(smt.stats   61   8514 247458 943653  9933/9622/394   22713/4202    43  298   26.28)
ramon: poll                 wall=8.000s usage=7.890s mem=28124KiB load=1.00 rootload=1.00
(smt.stats   62   8708 257181 986692  9944/9629/395   23336/4557    44  317   26.37)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8921 269675 1040625 10021/9710/398   24000/4742    45  334   26.47)
(smt.stats   64   9155 279671 1076523 10090/9770/399   24520/4880    46  355   26.47)
(smt.stats   65   9412 286390 1113538 10390/9788/399   25414/4882    46  355   26.66)
(smt.stats   66   9513 288690 1133398 10398/10087/399   25988/4882    46  355   26.76)
ramon: poll                 wall=9.000s usage=8.890s mem=28380KiB load=1.00 rootload=1.00
(smt.stats   67   9624 295931 1163901 10497/10093/399   26421/4893    46  355   26.76)
(smt.stats   68   9746 299564 1195484 10739/10190/399   26843/4896    46  355   26.87)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9880 301670 1221489 11050/10453/399   27337/4896    46  355   27.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 103)
(smt.stats   70  10027 304934 1243285 11226/10839/399   28363/4896    46  355   27.27)
ramon: poll                 wall=10.000s usage=9.889s mem=29208KiB load=1.00 rootload=1.00
(smt.stats   71  10188 312507 1308896 11254/10927/399   29235/4898    46  355   27.58)
(smt.stats   72  10365 319726 1373692 11303/10986/399   30192/4898    46  355   27.68)
(smt.stats   73  10559 325764 1429568 11347/11018/401   31679/5596    47  359   27.87)
(smt.stats   74  10772 336830 1483079 11386/11052/402   33290/6022    48  372   27.96)
ramon: poll                 wall=11.004s usage=10.893s mem=29720KiB load=1.00 rootload=1.00
(smt.stats   75  11006 347693 1537000 11637/11109/402   34892/6025    48  372   28.16)
(smt.stats   76  11263 357396 1565260 11854/11411/403   35469/6295    49  373   28.35)
ramon: poll                 wall=12.000s usage=11.889s mem=29976KiB load=1.00 rootload=1.00
(smt.stats   77  11545 368025 1671841 11891/11561/403   37163/6297    49  373   28.54)
(smt.stats   78  11646 373520 1706436 11901/11575/404   37359/6451    50  377   28.54)
(smt.stats   79  11758 381626 1802640 11954/11619/404   37672/6452    50  377   28.54)
(smt.stats   80  11880 386317 1826877 12102/11640/404   38691/6453    50  377   28.74)
ramon: poll                 wall=13.000s usage=12.861s mem=30488KiB load=0.97 rootload=0.97
(smt.stats   81  12014 389300 1866497 12163/11818/404   40927/6454    50  377   28.93)
(smt.stats   82  12161 392344 1905414 12428/11868/406   41178/6776    51  378   29.29)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792935936
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793198080
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793394688
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793394688
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792739328
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792739328
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792739328
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792739328
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792739328
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792739328
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793918976
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793918976
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793787904
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793787904
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205795885056
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793787904
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205800079360
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205800079360
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205808467968
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205808467968
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205800079360
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205808467968
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205825245184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205825245184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736210120212480
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736210120212480
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736227300081664
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736227300081664
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736261659820032
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736227300081664
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736261659820032
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736330379296768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736330379296768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736227300081664
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736330379296768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736467818250240
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736467818250240
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736742696157184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736467818250240
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736742696157184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12806574536392704
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736742696157184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736330379296768
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736261659820032
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736210120212480
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792477184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792477184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792477184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792477184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205792477184
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205793787904
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205795885056
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&12736205800079360
(smt.stats   83  12322 395852 1956670 12853/12483/599   43643/6801    51  378   29.96)
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020346790576128000
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020346790576128000
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020628265552838656
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020346790576128000
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020628265552838656
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1021191215506259968
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020346790576128000
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020628265552838656
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1021191215506259968
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1022317115413102592
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020346790576128000
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020628265552838656
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1021191215506259968
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020628265552838656
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1020628265552838656
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1022317115413102592
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1026820715040473088
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1026820715040473088
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1044835113549955072
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1044835113549955072
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1080863910568919040
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1080863910568919040
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1044835113549955072
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1022317115413102592
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1044835113549955072
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1026820715040473088
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 0 := 1152921504606846975&1080863910568919040
ramon: poll                 wall=14.000s usage=13.861s mem=32024KiB load=1.00 rootload=0.99
(smt.stats   84  12499 400767 2003536 12952/12632/723   43969/7182    52  445   30.48)
(smt.stats   85  12693 413341 2035888 12970/12650/723   44705/7182    52  445   30.67)
(smt.stats   86  12906 426635 2085536 13006/12664/723   45693/7187    52  445   30.76)
ramon: poll                 wall=15.000s usage=14.861s mem=32792KiB load=1.00 rootload=1.00
(smt.stats   87  13140 441518 2138682 13102/12706/723   46789/7509    53  449   31.15)
ramon: poll                 wall=16.000s usage=15.861s mem=33048KiB load=1.00 rootload=1.00
(smt.stats   88  13397 456209 2222106 13351/13022/724   47689/7835    54  449   31.34)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   89  13679 469710 2283231 13377/13057/726   48823/7835    54  449   31.43)
ramon: poll                 wall=17.000s usage=16.860s mem=33576KiB load=1.00 rootload=1.00
(smt.stats   90  13989 488103 2408642 13442/13122/728   49778/8342    55  479   31.73)
(smt.stats   91  14090 495306 2431131 13447/13127/728   49987/8342    55  479   31.83)
(smt.stats   92  14201 506362 2459435 13606/13247/729   50183/8342    55  479   31.83)
(smt.stats   93  14323 516661 2509759 13693/13294/732   50782/8463    56  481   32.44)
ramon: poll                 wall=18.004s usage=17.864s mem=34344KiB load=1.00 rootload=1.00
(smt.stats   94  14457 523937 2548949 13819/13461/738   51549/8465    56  481   32.63)
(smt.stats   95  14604 533158 2595475 13843/13485/742   51887/8465    56  481   32.73)
(smt.stats   96  14765 546097 2651032 13884/13502/744   52469/8582    57  544   32.93)
ramon: poll                 wall=19.000s usage=18.860s mem=34856KiB load=1.00 rootload=1.00
band: (band[60] (if (or #764 #765 #766 #767) 0 (if #768 1 #886)) (shl[64] (* 2 #113) (mod #904 64))) 16160 := 144115188075855871&16640
(smt.stats   97  14942 558691 2743266 14003/13545/744   53137/8595    57  544   33.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 93)
(smt.stats   98  15136 568818 2772439 14042/13668/745   53505/8709    58  573   33.15)
(smt.stats   99  15349 584500 2904574 14105/13747/755   53875/8805    59  594   33.35)
ramon: poll                 wall=20.000s usage=19.860s mem=35112KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:25:08 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.951s
ramon: group.utime          19.931s
ramon: group.stime          0.020s
ramon: group.mempeak        35368KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.091s
ramon: loadavg              0.99
