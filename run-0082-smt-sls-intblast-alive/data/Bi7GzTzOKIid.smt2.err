ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:55:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28962 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Bi7GzTzOKIid.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             685607
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   81.3008     10000        49          0            1        2)
(smt.stats    0    101   3469    410  1143/1031/100     100/14     5   18   51.96)
(sat.ddfw       1      1   42.5574     20001        98          1            1        3)
(smt.stats    1    202   4539   1179  2020/1541/101     201/55     6   19   52.05)
(smt.stats    2    313   6729   1805  2092/1849/101     315/56     6   19   52.16)
(smt.stats    3    419   9263   2664  2124/1938/109     419/68     7   20   52.26)
(smt.stats    4    530  10284   3557  2192/1962/112     525/71     8   24   52.36)
(sat.ddfw       1      1   42.3729     40001       196          2            1        5)
(smt.stats    5    652  11867   5834  2570/2312/113     644/78     9   30   52.46)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    753  12864   7691  2622/2353/113     756/84    10   30   52.58)
(smt.stats    7    864  13264   8805  2673/2438/113     867/84    10   30   52.58)
(smt.stats    8    987  14924  10609  2685/2463/114    1004/114    11   32   52.58)
(smt.stats    9   1121  16344  13405  2697/2473/114    1145/114    11   32   52.69)
(sat.ddfw       1      1   39.3701     70001       343          3            1        8)
(smt.stats   10   1222  17668  15360  2717/2484/114    1244/115    11   32   52.69)
(smt.stats   11   1333  19481  17501  2722/2500/115    1347/144    12   35   52.69)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 549755813888 := 549755813890&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2748779069442 := 0 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 549755813888 := 549755813890&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 2748779069442 := 0 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 549755813888 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 549755813887 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 549755813886 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 549755813889 := 3 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 549755813890&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 549755813890&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 3298534883328 := 4 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1099511627775 := 549739036675 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 549755813889 := 549739036675 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 2 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 5 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 5 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 4 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 8 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 16 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 32 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 64 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 128 := 1099511627776&549755813888
ramon: poll                 wall=1.000s usage=0.897s mem=55060KiB load=0.90 rootload=0.88
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1455  22209  22249  2797/2566/161    1454/146    14   38   52.98)
(smt.stats   13   1589  23602  25751  2847/2616/166    1581/148    16   51   52.98)
(sat.ddfw       1      1   35.7143    110001       539          4            1       12)
(smt.stats   14   1736  25849  28896  2894/2654/167    1724/151    17   56   52.98)
(smt.stats   15   1837  29407  31507  2901/2672/167    1834/151    17   56   53.14)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 0&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 0 := 33554433 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 0&549755813888
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 2199023255551 := 16777216 << 40
(smt.stats   16   1948  31811  34763  2939/2709/170    1930/163    19   66   53.24)
(smt.stats   17   2070  33535  36877  2980/2716/170    2057/165    19   66   53.24)
(sat.ddfw       1      1   32.0096    160000       784          5            1       17)
(smt.stats   18   2204  35143  41877  3003/2771/171    2195/170    20   71   53.24)
(smt.stats   19   2351  37433  46409  3047/2816/173    2335/182    21   81   53.24)
(smt.stats   20   2512  41191  50533  3075/2828/173    2495/183    21   81   53.44)
ramon: poll                 wall=2.003s usage=1.900s mem=55456KiB load=1.00 rootload=1.01
(smt.stats   21   2613  42994  55983  3092/2862/173    2607/183    21   81   53.44)
(smt.stats   22   2724  44513  59984  3100/2864/173    2719/183    21   81   53.44)
(smt.stats   23   2846  46096  65463  3107/2879/174    2843/202    22   82   53.44)
(sat.ddfw       1      1   28.6675    220001      1078          6            1       23)
(smt.stats   24   2980  48415  71006  3128/2888/175    2996/202    22   82   53.44)
(smt.stats   25   3127  49329  75870  3145/2907/175    3138/203    23   85   53.55)
(smt.stats   26   3288  51825  80611  3180/2930/175    3294/204    23   85   53.66)
(smt.stats   27   3465  55413  86395  3183/2953/175    3477/204    23   85   53.66)
(smt.stats   28   3566  56392  88008  3242/2954/176    3576/210    24   88   53.66)
(sat.ddfw       1      1   25.8207    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.898s mem=56140KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.3304    370001      1813          8            1       38)
(smt.stats   29   3677  56731  89283  3257/3025/176    3688/210    24   88   55.29)
ramon: poll                 wall=4.000s usage=3.897s mem=57396KiB load=1.00 rootload=0.99
(smt.stats   30   3799  58098 101199  3984/3606/176    3842/210    24   88   55.29)
(sat.ddfw       1      1    21.322    460001      2254          9            1       47)
(smt.stats   31   3933  59101 111084  4220/3916/176    3997/210    24   88   55.38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4080  60288 116633  4238/3998/176    4159/210    24   88   55.38)
(smt.stats   33   4241  62560 124477  4276/4046/178    4323/213    25   93   55.53)
(smt.stats   34   4418  65861 132499  4287/4047/178    4503/219    26   95   55.53)
(smt.stats   35   4612  67554 138201  4327/4076/179    4686/219    27  101   55.53)
(smt.stats   36   4713  68658 141861  4340/4102/180    4786/219    27  101   55.53)
(smt.stats   37   4824  70462 148447  4356/4120/180    4835/242    28  165   55.53)
ramon: poll                 wall=5.000s usage=4.893s mem=57648KiB load=1.00 rootload=1.00
(smt.stats   38   4946  71641 155788  4366/4135/180    4952/242    28  165   55.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5080  73999 159978  4378/4144/180    5162/244    28  165   55.62)
(sat.ddfw       1      1   19.5503    560001      2745         10            1       57)
(smt.stats   40   5227  76533 166478  4394/4163/180    5301/244    28  165   55.62)
(smt.stats   41   5388  78927 172108  4460/4185/182    5427/258    29  197   55.62)
(smt.stats   42   5565  81007 179390  4488/4240/182    5606/258    29  197   55.62)
(smt.stats   43   5759  84947 189725  4493/4262/182    5833/262    30  197   55.72)
(smt.stats   44   5972  88678 197672  4508/4273/182    6082/264    30  197   55.72)
(smt.stats   45   6073  90221 201848  4540/4307/189    6091/301    31  293   55.72)
(smt.stats   46   6184  92655 205231  4593/4309/189    6205/302    31  293   55.94)
ramon: poll                 wall=6.000s usage=5.897s mem=57900KiB load=1.00 rootload=1.00
(smt.stats   47   6306  95692 209028  4653/4366/189    6383/304    31  293   55.94)
(sat.ddfw       1      1   18.0565    670001      3284         11            1       68)
(smt.stats   48   6440  98018 212551  4730/4454/189    6528/306    31  293   55.94)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 1131397464981504 := 16777210 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 1133596488237056 := 16777212 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 1126999418470400 := 16777212 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627781&2147483648
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 72056494526300165 := 16777214 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 134744321 := 134744320 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 50529538 := 50529536 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 84215553 := 84215552 << 32
(smt.stats   49   6587 100319 216832  4808/4508/189    6667/309    31  293   56.03)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 548273629442 := 548273629440 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 548273629442 := 548273629440 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&2147483648
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 548273629442 := 548273629440 << 32
(smt.stats   50   6748 102388 224269  4873/4600/199    6824/331    32  295   56.03)
(smt.stats   51   6925 105717 231869  4881/4642/199    6998/331    32  295   56.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7119 109144 240864  4904/4652/199    7204/331    33  295   56.13)
(smt.stats   53   7332 113598 255356  4911/4669/199    7420/331    33  295   56.13)
ramon: poll                 wall=7.000s usage=6.893s mem=58212KiB load=1.00 rootload=1.00
(smt.stats   54   7566 115647 263393  4920/4683/200    7672/333    34  297   56.34)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 1 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 4 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 8 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 1 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 1 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 2 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 16 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 32 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 64 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 128 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 256 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 512 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 1024 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 2048 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 4096 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 8192 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 16384 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 32768 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 65536 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 131072 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 262144 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 524288 := 1099511627776&549755813888
(smt.stats   55   7667 116536 267049  5072/4693/212    7776/336    35  301   56.68)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 384 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 256 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 256 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 256 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 256 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 4096 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 4096 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 8192 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 16384 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 16384 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 16384 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 1 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 2 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 4 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 8 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 549755813888 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 549755813888 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 549755813887 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 549755813886 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 4 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 8 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 16 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 32 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 64 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 128 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 256 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 512 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 1024 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 2048 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 4096 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 8192 := 1099511627776&549755813888
(sat.ddfw       1      1   16.7715    790001      3872         12            1       80)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 16384 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 32768 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 65536 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 131072 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 65536 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 131072 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 262144 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 262144 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 524288 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 1048576 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 2097152 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 4194304 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 8388608 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 16777216 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 33554432 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 67108864 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 134217728 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 268435456 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 536870912 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 1073741824 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 2147483648 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 4294967296 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 8589934592 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 17179869184 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 34359738368 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 4294967296 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 8589934592 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 17179869184 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 34359738368 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 68719476736 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 137438953472 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 274877906944 := 1099511627776&549755813888
(smt.stats   56   7778 117506 271506  5253/4958/497    7972/340    35  301   57.82)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 549755813888 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 549755813888 := 1099511627776&549755813888
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099511627776&549755813888
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #579 40) 1 (if #581 2 #659))) 274877906944 := 1099511627776&549755813888
(smt.stats   57   7900 122537 279885  5269/4972/509    8147/341    35  301   57.91)
(smt.stats   58   8034 126981 286119  5228/4988/510    8484/441    36  366   58.10)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 0&268435456
shl: (shl[64] (bv2int %0) (mod (+ #104 #319) 64)) 0 := 150994944 << 29
(smt.stats   59   8181 133739 301402  5283/5044/517    8641/625    37  369   58.10)
ramon: poll                 wall=8.000s usage=7.897s mem=60444KiB load=1.00 rootload=1.00
(smt.stats   60   8342 141525 321385  5347/5104/523    8924/681    38  370   58.44)
(smt.stats   61   8519 146714 333954  5373/5129/539    9112/708    39  411   58.44)
(sat.ddfw       1      1   15.6438    920001      4509         13            1       93)
(smt.stats   62   8713 150874 350665  5407/5155/540    9241/702    40  493   58.44)
(smt.stats   63   8926 155144 367201  5437/5174/540    9458/704    40  493   58.54)
(smt.stats   64   9160 159031 380415  5460/5202/540    9744/704    40  493   58.54)
ramon: poll                 wall=9.000s usage=8.897s mem=60680KiB load=1.00 rootload=1.00
(smt.stats   65   9417 167963 404819  5473/5222/540   10103/704    40  493   58.54)
(smt.stats   66   9518 170529 410814  5476/5232/540   10201/704    40  493   58.63)
(smt.stats   67   9629 172123 419842  5481/5237/540   10446/704    40  493   58.73)
(smt.stats   68   9751 173009 429304  5483/5239/540   10581/704    40  493   58.73)
(sat.ddfw       1      1   14.6489   1060001      5196         14            1      108)
(smt.stats   69   9885 176344 441401  5483/5239/540   10716/704    40  493   58.73)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10032 179454 454370  5488/5244/540   10865/704    40  493   58.73)
ramon: poll                 wall=10.000s usage=9.897s mem=61092KiB load=1.00 rootload=1.00
(smt.stats   71  10193 183476 473511  5489/5245/540   11030/704    40  493   58.73)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10370 184338 483124  5497/5249/540   11224/704    40  493   58.82)
(smt.stats   73  10564 184967 493410  5498/5254/540   11433/704    40  493   58.82)
(smt.stats   74  10777 192048 516074  5502/5255/540   11659/704    40  493   58.82)
(smt.stats   75  11011 199523 537601  5506/5262/540   11908/704    40  493   58.92)
(sat.ddfw       1      1   13.7817   1210001      5931         15            1      123)
ramon: poll                 wall=11.000s usage=10.897s mem=61244KiB load=1.00 rootload=1.00
(smt.stats   76  11268 207358 562397  5508/5264/540   12179/704    40  493   58.92)
band: (band[41] (shl[64] (bv2int %0) (mod #320 64)) (if (= #678 63) 0 (if #680 1 #804))) 0 := 1099494850562&2
(smt.stats   77  11550 218080 592069  5547/5302/546   12463/937    41  494   59.35)
(smt.stats   78  11651 221523 602076  5640/5311/546   12609/939    41  494   59.35)
(smt.stats   79  11762 222925 610796  5641/5397/548   12732/988    42  500   59.45)
ramon: poll                 wall=12.000s usage=11.896s mem=61468KiB load=1.00 rootload=1.00
(smt.stats   80  11884 224949 620159  5648/5400/548   12854/988    42  500   59.45)
(smt.stats   81  12018 229756 630758  5652/5408/548   12993/988    42  500   59.45)
(smt.stats   82  12165 232877 649317  5652/5408/548   13140/988    42  500   59.45)
(sat.ddfw       1      1    13.006   1370001      6715         16            1      139)
(smt.stats   83  12326 237278 659967  5685/5411/548   13342/990    42  500   59.45)
(smt.stats   84  12503 241573 680080  5698/5448/548   13529/990    42  500   59.45)
ramon: poll                 wall=13.000s usage=12.896s mem=61568KiB load=1.00 rootload=1.00
(smt.stats   85  12697 246558 701941  5702/5458/548   13721/990    42  500   59.45)
(smt.stats   86  12910 249511 719973  5703/5459/548   13939/990    42  500   59.54)
(smt.stats   87  13144 256684 749070  5704/5460/548   14179/990    42  500   59.54)
(sat.ddfw       1      1   12.3126   1540001      7549         17            1      156)
(smt.stats   88  13401 262488 781035  5728/5484/549   14421/1022    43  508   59.64)
ramon: poll                 wall=14.000s usage=13.896s mem=61736KiB load=1.00 rootload=1.00
(smt.stats   89  13683 269516 812845  5743/5497/549   14711/1022    43  508   59.64)
(smt.stats   90  13993 279288 858241  5756/5508/550   15013/1019    44  514   60.00)
(smt.stats   91  14094 283080 870692  5776/5515/550   15115/1019    44  514   60.00)
ramon: poll                 wall=15.000s usage=15.060s mem=62292KiB load=1.16 rootload=1.16
(sat.ddfw       1      1   11.8437   1720001      8431         18            1      174)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   92  14205 286449 881109  5917/5540/550   15233/1021    44  514   60.19)
(smt.stats   93  14327 288158 890557  5950/5692/550   15354/1021    44  514   60.19)
(smt.stats   94  14461 290340 901749  5962/5716/551   15481/1033    45  516   60.19)
(smt.stats   95  14608 292856 912579  5965/5719/552   15638/1033    45  516   60.19)
(smt.stats   96  14769 295086 921479  6006/5720/552   15805/1033    45  516   60.19)
ramon: poll                 wall=16.000s usage=16.060s mem=62448KiB load=1.00 rootload=1.00
(smt.stats   97  14946 297622 939772  6069/5815/554   15989/1054    46  522   60.19)
(smt.delete-inactive-clauses  :num-deleted-clauses 88)
(smt.stats   98  15140 303409 960909  6166/5851/555   16117/1058    46  522   60.19)
(sat.ddfw       1      1   11.2393   1910001      9362         19            1      193)
(smt.stats   99  15353 308042 971204  6531/5950/556   16376/1097    46  522   60.38)
ramon: poll                 wall=17.000s usage=17.059s mem=62752KiB load=1.00 rootload=1.00
(smt.stats  100  15587 311448 993733  6635/6348/560   16742/1134    47  527   61.06)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  101  15844 314077 1011942  6712/6384/560   17020/1136    47  527   61.06)
ramon: poll                 wall=18.000s usage=18.059s mem=62944KiB load=1.00 rootload=1.00
(smt.stats  102  16126 322376 1041980  6730/6452/562   17427/1259    48  541   61.25)
(smt.stats  103  16436 333418 1077437  6749/6469/566   17820/1363    50  550   61.25)
(sat.ddfw       1      1   10.6975   2110001     10343         20            1      214)
ramon: poll                 wall=19.000s usage=19.058s mem=63196KiB load=1.00 rootload=1.00
(smt.stats  104  16776 341218 1107824  6761/6473/566   18162/1364    50  550   61.25)
(smt.stats  105  16877 345856 1128794  6772/6483/566   18241/1365    51  572   61.35)
(smt.stats  106  16988 348726 1140535  6784/6504/566   18391/1365    51  572   61.35)
(smt.stats  107  17110 349651 1147171  6784/6504/566   18524/1365    51  572   61.35)
(smt.stats  108  17244 351177 1153254  6798/6509/566   18659/1365    51  572   61.45)
ramon: poll                 wall=20.000s usage=20.058s mem=63416KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:55:45 2024
ramon: root.execname        z3
ramon: root.utime           20.100s
ramon: root.stime           0.010s
ramon: group.total          20.123s
ramon: group.utime          20.107s
ramon: group.stime          0.016s
ramon: group.mempeak        63928KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.00
