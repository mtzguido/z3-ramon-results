ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:38:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25326 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aSwEMnUUts3N.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             85358
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4503    740  1189/1065/114      88/12    10   20   19.07)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368744177664 := 70368744177666 << 18
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368744177664 := 70368744177666 << 18
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368744177664 := 70368744177666 << 18
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 35184506306561 := 35184506306560 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368744177664 := 70368744177666 << 18
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 35184506306561 := 35184506306560 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 35184506306561 := 35184506306560 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 35184506306561 := 35184506306560 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 524287 := 35184506306561 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 2 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 2 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 524284 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 8 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 16 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524287 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524286 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524284 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524280 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524272 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 8 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 32 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 64 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 128 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 256 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 512 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1024 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 2048 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 512 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1024 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 2048 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 4096 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 8192 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 2048 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 4096 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 8192 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 16384 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 32768 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 65536 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 131072 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 15 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 14 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 8 := 524287&524288
(smt.stats    1    202   6987   3383  1584/1410/213     178/14    14   46   19.79)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 8 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 8 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&24641536
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 65536 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 65536 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 65536 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1048576
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 131072 := 524287&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1048576
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 131072 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 131072 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1048576
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1048576
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
(smt.stats    2    313   9250   5966  1895/1704/290     315/59    18   66   20.10)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&4194304
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&4194304
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&4194304
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&17301504
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&8388608
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&8388608
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&524288
(smt.stats    3    416  11562   9240  2190/2003/372     451/92    23   87   20.30)
(smt.stats    4    527  12801  11645  2543/2306/380     517/93    25  108   20.40)
(smt.stats    5    649  15817  15307  2651/2395/382     738/158    26  109   20.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    750  18947  20829  2769/2531/382     942/160    26  109   20.79)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 35184372088831&35184372088834
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 35184372088831&35184405643266
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 35184372088831&35184372088833
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088833
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 175921860444161 := 536870912 << 44
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184439197697
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184439197697
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184439197697
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184439197697
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088897
(smt.stats    7    861  21217  25415  2898/2650/420    1109/195    28  112   21.11)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088849
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088849
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088961
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372089217
(smt.stats    8    983  24722  33184  2984/2740/459    1358/329    30  144   21.30)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 17592186044415&35184405643268
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 17592186044415&35184405643268
(smt.stats    9   1117  31644  46542  3014/2754/460    1502/335    32  154   21.40)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554436 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554500 := 17592186044415&35184405644044
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554500 := 17592186044415&35184405643788
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554500 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554437 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554436 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 67108868 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 67109380 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104858628 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104858629 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104858628 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 138412548 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 167772676 := 17592186044415&35184405643780
(smt.stats   10   1218  32911  49229  3216/2844/486    1773/396    33  159   21.87)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104859140 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860164 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104859140 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860164 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104862212 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104866308 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104862212 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860420 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860421 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860421 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860420 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860420 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860420 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860165 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860164 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104858116 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171717 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
(smt.stats   11   1329  34251  52780  3460/2972/506    2047/404    33  159   22.11)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
(smt.stats   12   1451  36266  59300  3764/3520/562    2673/557    35  175   22.38)
(smt.stats   13   1585  42921  76456  3783/3536/568    2965/911    36  193   22.47)
ramon: poll                 wall=1.000s usage=0.938s mem=23872KiB load=0.94 rootload=0.92
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 127&25233410
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 127&25233410
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 127&25233410
(smt.stats   14   1732  45545  81436  4149/3543/568    3301/917    36  193   22.66)
(smt.stats   15   1833  47972  94753  4410/3935/568    3724/921    36  193   22.76)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   16   1945  49055  98429  4625/4381/569    4086/1160    37  204   22.85)
(smt.stats   17   2069  53665 111403  4658/4414/573    4512/1427    38  221   23.04)
(smt.stats   18   2203  58374 142223  4721/4477/578    5047/1705    40  230   23.04)
(smt.stats   19   2350  65702 185049  4734/4490/580    5271/1727    41  236   23.14)
(smt.stats   20   2511  70103 206476  4876/4606/583    5658/1785    42  239   23.24)
(smt.stats   21   2612  73287 233790  4892/4620/587    5814/1856    44  279   23.33)
(smt.stats   22   2723  77750 251638  4933/4623/587    6153/1859    44  279   23.43)
(smt.stats   23   2845  81365 266456  5349/4776/587    6959/1861    44  279   23.58)
ramon: poll                 wall=2.000s usage=1.937s mem=25032KiB load=1.00 rootload=0.99
(smt.stats   24   2979  84319 279562  5567/5295/588    7597/2240    45  280   23.77)
(smt.stats   25   3126  91006 299499  5654/5379/593    8538/2593    46  319   23.97)
(smt.stats   26   3287  97757 324653  5684/5412/597    9486/2779    47  351   24.06)
(smt.stats   27   3464 107707 376864  5711/5421/599   10841/2781    47  351   24.31)
(smt.stats   28   3565 111672 401190  5826/5445/599   11553/3222    48  383   24.50)
ramon: poll                 wall=3.000s usage=2.936s mem=25968KiB load=1.00 rootload=1.00
(smt.stats   29   3676 114564 420412  6099/5593/599   11886/3225    48  383   24.59)
(smt.stats   30   3798 117010 434980  6386/5876/599   12358/3227    48  383   24.78)
ramon: poll                 wall=4.000s usage=3.932s mem=26552KiB load=1.00 rootload=1.00
(smt.stats   31   3932 119465 443463  6856/6259/599   12967/3231    48  383   24.88)
(smt.stats   32   4079 127207 497895  6907/6607/599   13776/3233    48  383   24.98)
(smt.stats   33   4240 132315 545868  6929/6655/601   14312/4457    49  385   25.09)
(smt.stats   34   4417 137398 589863  7066/6768/609   15313/4802    51  434   25.28)
ramon: poll                 wall=5.000s usage=4.932s mem=27064KiB load=1.00 rootload=1.00
(smt.stats   35   4611 145365 617609  7336/6907/611   15888/4809    51  434   25.57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   36   4712 149126 631444  7540/7070/611   16164/5234    52  464   25.67)
(smt.stats   37   4823 155122 684927  7619/7280/611   16543/5235    52  464   25.67)
ramon: poll                 wall=6.000s usage=5.931s mem=27336KiB load=1.00 rootload=1.00
(smt.stats   38   4945 161189 742260  7626/7312/611   17233/5235    52  464   25.76)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5079 166702 763999  7639/7317/612   17600/5454    53  476   25.86)
(smt.stats   40   5226 174607 804833  7753/7361/615   18141/5529    54  529   26.03)
(smt.stats   41   5387 181051 830107  7989/7458/615   18566/5546    54  529   26.25)
ramon: poll                 wall=7.000s usage=6.931s mem=27924KiB load=1.00 rootload=0.99
(smt.stats   42   5564 189049 895293  8030/7712/618   19810/5676    55  568   26.34)
(smt.stats   43   5758 196915 954147  8070/7727/619   20337/5965    56  572   26.44)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 1&229440
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 272367617 := 35184372203552 << 1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 1&229440
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 272367617 := 35184372203552 << 1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 1&229440
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 272367617 := 35184372203552 << 1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 1&229440
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 272367617 := 35184372203552 << 1
(smt.stats   44   5971 200583 981918  8469/8149/620   21647/6121    57  589   26.63)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   45   6072 203652 1006607  8530/8175/620   23223/6123    57  589   26.83)
(smt.stats   46   6183 206905 1072395  8836/8261/620   23582/6658    58  602   27.16)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 7&54730754
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 7&54697986
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 2 := 7&54697986
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368798875650 := 70368799752192 << 2
(smt.stats   47   6305 209585 1106032  8934/8535/620   23907/6659    58  602   27.26)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 10 := 15&54697986
ramon: poll                 wall=8.002s usage=7.935s mem=28972KiB load=1.00 rootload=1.00
(smt.stats   48   6439 213244 1137949  9081/8632/625   24478/6698    59  603   27.36)
(smt.stats   49   6586 219290 1173706  9202/8761/625   25517/6712    59  603   27.46)
(smt.stats   50   6747 226758 1207559  9458/8909/625   26597/6951    60  603   27.73)
ramon: poll                 wall=9.000s usage=8.931s mem=29472KiB load=1.00 rootload=0.99
(smt.stats   51   6924 232342 1257797  9728/9163/625   27947/6954    60  603   27.92)
(smt.stats   52   7118 241022 1320147  9747/9423/627   28700/7291    61  605   28.11)
(smt.stats   53   7331 249223 1369582  9875/9519/628   29761/7542    62  606   28.30)
(smt.stats   54   7565 257722 1399171 10042/9578/628   31072/7545    62  606   28.49)
ramon: poll                 wall=10.000s usage=9.931s mem=30016KiB load=1.00 rootload=1.00
(smt.stats   55   7666 262488 1433797 10124/9745/630   31473/7813    63  608   28.59)
(smt.stats   56   7777 268082 1472969 10261/9817/630   31827/7822    63  608   28.59)
(smt.stats   57   7899 272107 1512301 10397/9993/631   32327/7825    63  608   28.59)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   58   8033 275121 1548063 10417/10089/634   34125/8113    64  611   28.68)
ramon: poll                 wall=11.000s usage=10.930s mem=30560KiB load=1.00 rootload=1.00
(smt.stats   59   8180 281751 1620292 10531/10105/634   34731/8123    64  611   28.78)
(smt.stats   60   8341 291392 1691456 10696/10251/634   35571/9173    65  643   28.87)
ramon: poll                 wall=12.000s usage=11.930s mem=30696KiB load=1.00 rootload=1.00
(smt.stats   61   8518 296984 1731614 10775/10396/634   36075/9175    65  643   28.87)
(smt.stats   62   8712 304279 1792452 11096/10483/635   36708/9277    66  644   28.97)
(smt.stats   63   8925 308104 1815151 11458/10916/637   37007/9282    66  644   29.38)
ramon: poll                 wall=13.000s usage=12.925s mem=31008KiB load=0.99 rootload=0.99
(smt.stats   64   9159 317769 1923535 11491/11155/638   38045/9282    66  644   29.38)
(smt.stats   65   9416 324458 1994155 11574/11175/638   39160/9569    67  648   29.77)
(smt.stats   66   9517 327433 2026532 11770/11394/640   39510/9569    67  648   29.87)
(smt.stats   67   9628 332380 2058759 11819/11401/640   39684/9934    68  672   29.87)
ramon: poll                 wall=14.000s usage=13.924s mem=31556KiB load=1.00 rootload=1.00
(smt.stats   68   9750 337573 2094350 11999/11456/640   39952/9942    68  672   29.96)
(smt.stats   69   9884 342605 2141298 12092/11665/641   40243/9943    68  672   30.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 1979)
(smt.stats   70  10031 348507 2202212 12127/11757/646   39241/9999    69  674   30.30)
ramon: poll                 wall=15.000s usage=14.924s mem=31976KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions     )
(smt.stats   71  10192 360774 2293671 12271/11759/649   40101/10011    69  674   30.30)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 50331648 := 8796093022207&297795585
(smt.stats   72  10369 371761 2355227 12291/11918/650   40424/10464    70  698   30.30)
(smt.stats   73  10563 380554 2434274 12355/11929/652   41474/10690    71  734   30.50)
ramon: poll                 wall=16.000s usage=15.924s mem=32048KiB load=1.00 rootload=1.00
(smt.stats   74  10776 391833 2530880 12733/12057/653   42112/10700    71  734   30.60)
(smt.stats   75  11010 399598 2605713 12809/12430/654   43253/10782    72  741   30.69)
ramon: poll                 wall=17.002s usage=16.928s mem=32236KiB load=1.00 rootload=1.00
(smt.stats   76  11267 412075 2795168 12839/12466/654   44235/10782    72  741   30.79)
(smt.stats   77  11549 420352 2953473 12874/12499/655   45765/11718    74  767   30.89)
ramon: poll                 wall=18.002s usage=17.928s mem=32736KiB load=1.00 rootload=1.00
(smt.stats   78  11650 427078 3033173 12892/12518/655   46147/11718    74  767   30.99)
(smt.stats   79  11761 432712 3094115 12911/12522/655   46564/11718    74  767   30.99)
(smt.stats   80  11883 441688 3143294 13003/12544/655   47428/11718    74  767   31.08)
(smt.stats   81  12017 445243 3165469 13066/12674/655   48300/11722    74  767   31.18)
ramon: poll                 wall=19.000s usage=18.922s mem=33052KiB load=1.00 rootload=1.00
(smt.stats   82  12164 453005 3217761 13095/12721/656   48533/12123    75  779   31.27)
(smt.stats   83  12325 458405 3248167 13130/12726/656   48784/12125    75  779   31.27)
(smt.stats   84  12502 460999 3300618 13181/12798/656   49571/12125    75  779   31.37)
(smt.stats   85  12696 465683 3377150 13252/12810/657   50227/12127    75  779   31.46)
ramon: poll                 wall=20.000s usage=19.922s mem=33120KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:39:01 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.996s
ramon: group.utime          19.956s
ramon: group.stime          0.040s
ramon: group.mempeak        33632KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.00
