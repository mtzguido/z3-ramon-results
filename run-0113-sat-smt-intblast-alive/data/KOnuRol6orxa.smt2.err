ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:39:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40938 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1323
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KOnuRol6orxa.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3797649
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   232/232     0/0  69       0    18.51   0.00)
(sat.stats    103    605    0   232/232   103/31  69       0    18.84   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    605    0   232/232   103/31  69       0    18.84   0.01)
(sat.stats    103    605    0   232/232   103/31  69       0    18.84   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 365618.84 :time 0.00)
(sat.stats    103    605    0   234/234    39/30  69       0    18.84   0.01)
(sat.stats    174   1713    1   234/234   110/87  69       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    177   1769    2   234/234   113/87  69       0    18.94   0.01)
(sat.stats    180   1815    3   234/234   116/87  69       0    18.94   0.01)
(sat.stats    183   1876    4   234/234   119/87  69       0    18.94   0.01)
(sat.stats    186   1932    5   234/234   122/87  69       0    18.94   0.01)
(sat.stats    189   2019    6   234/234   125/87  69       0    18.94   0.01)
(sat.stats    192   2063    7   234/234   128/90  69       0    18.94   0.01)
(sat.stats    195   2089    8   234/234   131/93  69       0    18.94   0.01)
(sat.stats    198   2132    9   234/234   134/96  69       0    18.94   0.01)
(sat.stats    201   2197   10   234/234   137/99  69       0    18.94   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    204   2281   11   234/234   140/102  69       0    18.94   0.01)
(sat.stats    207   2388   12   234/234   143/105  69       0    18.94   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1492 :time 0.00)
(sat.stats    279   4306   13   235/235   214/137  73       0    19.63   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1812 :time 0.00)
(sat.stats    315   5110   25   234/234   250/158  76       0    19.54   0.04)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 2776 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 2958 :time 0.00)
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #68))) 1 := 1 >>l 28
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 1&1125899902648320
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #586 #590) 64)) 0 := 4398046502912 >>l 41
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3500 :time 0.00)
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 1 := 1&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 2 := 2&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 4 := 4&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 8 := 8&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 16 := 16&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 32 := 32&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 64 := 64&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 128 := 128&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 256 := 256&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 512 := 512&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 1024 := 1024&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 2048 := 2048&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 4096 := 4096&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 8192 := 8192&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 16384 := 16384&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 32768 := 32768&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 65536 := 65536&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 131072 := 131072&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 262144 := 262144&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 524288 := 524288&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 1048576 := 1048576&1125899902648320
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 2097152 := 2097152&1125899902648320
(sat.stats    595  10691   53  2312/2309   570/249  92       0    21.19   0.25)
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 3028 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 12827 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 2 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 80696 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 436176 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 580928 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 32 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 2990464 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 3444992 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 1257472 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 512 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 2048 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 1024 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 8192 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 1081344 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 16384 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 2555904 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 2752512 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 3670016 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 262144 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 1048576 := 1125899902648320&4194300
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 4194300&1125899902648320
band: (band[50] (if (= #301 63) 5192296858534818405158459474444288 (if #451 2596148429267409202579229737222144 #448)) (lshr[64] (* 8192 #64) (mod #593 64))) 2097152 := 1125899902648320&4194300
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 13284 :time 0.00)
(sat.stats    709  13209   76 29253/29250   913/479 378       0    24.51   0.43)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 14976 :time 0.00)
ramon: poll                 wall=1.000s usage=0.999s mem=28072KiB load=1.00 rootload=0.98
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #68))) 1 := 268441189 >>l 27
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #475)) (if (= #67 49) 316912650057056787424222380032 (if #479 158456325028528393712111190016 #575))) 0 := 0&1125899898454016
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #586 #590) 64)) 18446744073709551615 := 54255616 >>l 40
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   1066  34133  143 49320/49302  1529/765 384       0    28.95   1.32)
ramon: poll                 wall=2.000s usage=1.999s mem=43496KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.998s mem=54732KiB load=1.00 rootload=0.98
ramon: poll                 wall=4.000s usage=3.998s mem=71032KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.997s mem=76780KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.997s mem=83488KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=88032KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.003s usage=8.000s mem=93016KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.992s mem=96372KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.991s mem=113MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.991s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.990s mem=119MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.990s mem=123MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.990s mem=125MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.989s mem=128MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.989s mem=131MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.989s mem=133MiB load=1.00 rootload=0.99
(sat.stats   1599  38572  293 372069/372051  7537/6240 384       0   134.54  17.51)
ramon: poll                 wall=18.000s usage=17.988s mem=134MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.988s mem=139MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.987s mem=140MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:39:30 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.090s
ramon: group.total          20.002s
ramon: group.utime          19.910s
ramon: group.stime          0.092s
ramon: group.mempeak        140MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
