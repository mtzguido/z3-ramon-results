ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:07:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27400 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/pAjD7VYeWr4P.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             929580
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   126.582     10000        49          0            1        2)
(sat.ddfw       1      1   65.7961     20001        98          1            1        3)
(sat.ddfw       1      1   71.6846     40001       196          2            1        5)
(smt.stats    0    102   1990    353   639/585/116     106/17     6   22   51.57)
(sat.ddfw       1      1   62.2407     70001       343          3            1        8)
(smt.stats    1    203   4512   1226   870/759/116     223/19     6   22   51.57)
(sat.ddfw       1      1    52.356    110001       539          4            1       12)
ramon: poll                 wall=1.000s usage=0.749s mem=53580KiB load=0.75 rootload=0.74
(sat.ddfw       1      1   46.4243    160000       784          5            1       17)
(smt.stats    2    314   7180   2034   912/838/117     333/31     7   26   51.66)
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 1&1
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 1&1
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 1&1
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 1&2
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 2 := 4096 >>l 31
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 1&2
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 2 := 4096 >>l 31
(smt.stats    3    415   9520   3260   956/877/130     588/36     8   30   51.76)
(smt.stats    4    526  11261   4794  1330/1206/132     803/40    10   37   51.85)
(sat.ddfw       1      1   43.0115    220001      1078          6            1       23)
(sat.ddfw       1      1   39.5257    290001      1421          7            1       30)
ramon: poll                 wall=2.004s usage=1.754s mem=53976KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   36.1174    370001      1813          8            1       38)
(smt.stats    5    648  13407   7674  1378/1231/132    1058/41    10   37   52.04)
(sat.ddfw       1      1   33.1981    460001      2254          9            1       47)
ramon: poll                 wall=3.000s usage=2.710s mem=54496KiB load=0.96 rootload=0.95
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas         :deletions    )
(smt.stats    6    749  14432   9634  1403/1268/133    1179/44    11   40   52.04)
(sat.ddfw       1      1   30.5904    560001      2745         10            1       57)
(smt.stats    7    860  15805  12658  1429/1290/133    1398/44    11   40   52.04)
(sat.ddfw       1      1   28.3213    670001      3284         11            1       68)
ramon: poll                 wall=4.000s usage=3.710s mem=54504KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   26.4143    790001      3872         12            1       80)
ramon: poll                 wall=5.000s usage=4.745s mem=54100KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   24.6914    920001      4509         13            1       93)
ramon: poll                 wall=6.000s usage=5.724s mem=54104KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   23.2365   1060001      5196         14            1      108)
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 3 := 65536&17
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 4 := 65536&18
(smt.stats    8    982  16637  14922  1455/1335/137    1725/56    12   42   52.14)
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 14 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 13 := 65536&14
(sat.ddfw       1      1   21.7108   1210001      5931         15            1      123)
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 8 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 8 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 4 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 8 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 524303 := 61440 >>l 15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&2
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 524290 := 528384 >>l 15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&2
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 524290 := 2147479552 >>l 15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 1 := 127 >>l 3
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 14 := 120 >>l 3
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 14 := 120 >>l 3
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 14 := 120 >>l 3
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&1
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1 := 65536&1
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&1
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1 := 65536&1
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&1
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1 := 65536&1
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 1 := 65536&1
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&2
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2 := 65536&2
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&2
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2 := 65536&2
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&4
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4 := 65536&4
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&8
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8 := 65536&8
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&15
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4 := 65536&15
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&8
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8 := 65536&8
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&8
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8 := 65536&8
ramon: poll                 wall=7.000s usage=6.654s mem=54424KiB load=0.93 rootload=0.93
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 16 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 32 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 64 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 128 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 64 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 128 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 256 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 512 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 1024 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 4096 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 8192 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 16384 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 32768 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 16384 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 16384 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 16384 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 32 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 64 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 128 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 256 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 512 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 512 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 64 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 64 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 128 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 64 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 128 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 256 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 512 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 1024 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 32 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 32 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 32 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 16 := 65536&65535
(smt.stats    9   1116  17911  18854  1657/1436/253    1914/130    13   64   52.74)
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 65520 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 65504 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 64 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 128 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 256 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 512 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1024 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1024 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4096 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8192 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 16384 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 32768 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 64 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 32768 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1024 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4096 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 2048 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4096 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8192 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 16384 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4096 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8192 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 16384 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 16384 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4096 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8192 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8192 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8192 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 8192 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1152 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1152 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1280 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 1152 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 3072 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 3072 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 3072 := 65536&65535
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 65536&65535
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 3072 := 65536&65535
(smt.stats   10   1217  18925  23893  1800/1662/421    2117/179    15  127   53.13)
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 2&0
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 0 := 65536 >>l 30
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 2&0
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 1 := 16 >>l 18
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 2&0
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 0 := 65536 >>l 30
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 2&0
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 1 := 16 >>l 18
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2 := 2&2
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 2 := 98304 >>l 30
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2 := 2&2
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 2 := 126976 >>l 30
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 2&1
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 0 := 524287 >>l 18
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 2&1
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 2 := 262144 >>l 18
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 2&1
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 2 := 524287 >>l 18
(smt.stats   11   1328  21414  28069  1884/1722/438    2495/223    16  135   53.52)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  25535  34823  2028/1855/444    2815/261    17  146   53.62)
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 2 := 2&3
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 524291 := 0 >>l 30
(smt.stats   13   1584  28005  41340  2059/1875/460    3411/262    17  146   54.00)
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&2
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 524290 := 0 >>l 22
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&3
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 524291 := 1073741824 >>l 22
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&2
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 524290 := 1073737728 >>l 22
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&2
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 1 := 2048 >>l 10
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&2
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 1 := 2048 >>l 10
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&2
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 1 := 2048 >>l 10
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&2
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 1 := 2048 >>l 10
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&2
lshr: (lshr[19] (bv2int %0) (+ 19 (* 524287 #121))) 1 := 2048 >>l 10
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&4
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4 := 512&4
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&4
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 4 := 512&4
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 48 := 512&256
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 48 := 512&256
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 64 := 512&256
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 64 := 512&256
(sat.ddfw       1      1   20.4971   1370001      6715         16            1      139)
(smt.stats   14   1731  31443  53666  2231/2022/479    3682/567    19  367   54.20)
ramon: poll                 wall=8.000s usage=7.653s mem=56772KiB load=1.00 rootload=0.99
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 16 := 512&257
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 16 := 512&257
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&257
lshr: (lshr[32] (* 4096 (bv2int %0)) (mod (+ 31 #371 #375) 32)) 257 := 1073741824 >>l 22
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 32 := 512&256
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 256 := 512&256
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 256 := 512&256
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 128 := 512&256
band: (band[19] (if (= #219 31) 2147483648 (if #302 1073741824 #299)) (lshr[32] (* 4096 #196) (mod #378 32))) 0 := 512&256
band: (band[19] (if (= #125 18) 262144 (if #323 131072 #357)) (lshr[19] (bv2int %0) (+ 19 #360))) 128 := 512&256
(smt.stats   15   1832  33632  61348  2307/2107/486    3949/593    20  372   54.59)
(smt.stats   16   1944  36112  69965  2381/2179/490    4566/734    21  374   54.69)
(sat.ddfw       1      1   19.5695   1540001      7549         17            1      156)
ramon: poll                 wall=9.000s usage=8.737s mem=57240KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   19.1734   1720001      8431         18            1      174)
ramon: poll                 wall=10.000s usage=9.907s mem=57412KiB load=1.17 rootload=1.17
(sat.ddfw       1      1   18.4091   1910001      9362         19            1      193)
(smt.stats   17   2066  39949  77689  2502/2227/493    4988/742    21  374   55.16)
ramon: poll                 wall=11.004s usage=10.906s mem=57472KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.4231   2110001     10343         20            1      214)
ramon: poll                 wall=12.000s usage=11.818s mem=57508KiB load=0.91 rootload=0.91
(sat.ddfw       1      1   16.5733   2320001     11372         21            1      235)
(smt.stats   18   2200  44168  90773  2622/2337/493    5286/893    22  402   55.36)
ramon: poll                 wall=13.000s usage=12.799s mem=57608KiB load=0.98 rootload=0.98
(smt.stats   19   2347  48048 105816  2723/2519/496    6040/941    23  417   55.45)
(sat.ddfw       1      1   15.8148   2540001     12451         22            1      257)
ramon: poll                 wall=14.000s usage=13.775s mem=57716KiB load=0.98 rootload=0.98
(smt.stats   20   2508  50708 115462  2868/2529/497    6464/948    23  417   55.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2609  52458 128368  2931/2728/498    6921/1116    24  421   55.59)
ramon: poll                 wall=15.000s usage=14.727s mem=58036KiB load=0.95 rootload=0.95
(smt.stats   22   2720  54428 138698  3071/2791/498    7117/1117    24  421   55.78)
(sat.ddfw       1      1   15.1047   2770001     13578         23            1      280)
(smt.stats   23   2842  57981 152857  3269/2995/499    7735/1255    25  427   55.97)
ramon: poll                 wall=16.000s usage=15.653s mem=58792KiB load=0.93 rootload=0.93
(smt.stats   24   2976  61903 166347  3353/3107/501    8559/1309    26  436   56.26)
(sat.ddfw       1      1   14.5059   3010001     14754         24            1      305)
(smt.stats   25   3123  65933 178699  3417/3122/502    9098/1400    27  446   56.54)
ramon: poll                 wall=17.000s usage=16.618s mem=58964KiB load=0.97 rootload=0.96
(smt.stats   26   3284  72524 203216  3455/3209/508   10548/1557    28  458   56.64)
(smt.stats   27   3461  79432 241874  3465/3219/510   11891/1663    29  500   56.83)
(smt.stats   28   3562  81897 251803  3525/3252/510   12471/1663    29  500   56.93)
(sat.ddfw       1      1   13.9517   3260001     15980         25            1      330)
ramon: poll                 wall=18.004s usage=17.653s mem=59440KiB load=1.03 rootload=1.04
(smt.stats   29   3673  85525 265861  3660/3312/510   12872/1664    29  500   57.12)
ramon: poll                 wall=19.000s usage=18.831s mem=59704KiB load=1.18 rootload=1.18
(sat.ddfw       1      1   13.7261   3520001     17254         26            1      356)
(smt.stats   30   3795  89905 278445  3808/3412/511   13286/1781    30  500   57.31)
ramon: poll                 wall=20.000s usage=19.934s mem=59708KiB load=1.10 rootload=1.10
ramon: end                  Fri Nov  1 23:07:45 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.010s
ramon: group.total          20.018s
ramon: group.utime          19.998s
ramon: group.stime          0.020s
ramon: group.mempeak        59964KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
