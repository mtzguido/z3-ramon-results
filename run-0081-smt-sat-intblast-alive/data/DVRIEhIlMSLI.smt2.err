ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:56:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29789 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DVRIEhIlMSLI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             317747
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   248/248     0/0  69       0    18.52   0.00)
(sat.stats    116    896    0   248/248   116/42  69       0    18.86   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 318 :time 0.00)
(sat.stats    116    896    0   248/248   116/42  69       0    18.86   0.01)
(sat.stats    116    896    0   248/248   116/42  69       0    18.86   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 408818.86 :time 0.00)
(sat.stats    116    896    0   250/250    52/41  69       0    18.86   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2009 :time 0.00)
(sat.stats    303   2486    1   267/267   239/162  76       0    19.68   0.05)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    329   2790    2   282/282   263/175  80       0    19.69   0.07)
(sat.stats    333   2805    3   316/316   267/176  80       0    19.79   0.10)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 2088 :time 0.00)
(sat.stats    336   2871    4   343/343   271/177  80       0    19.69   0.10)
(sat.stats    339   2911    5   349/349   274/178  80       0    19.69   0.11)
(sat.stats    342   2949    6   355/355   277/181  80       0    19.69   0.11)
(sat.stats    345   3003    7   355/355   280/181  80       0    19.69   0.11)
(sat.stats    349   3047    8   363/363   284/181  80       0    19.69   0.11)
(sat.stats    352   3073    9   365/365   287/184  80       0    19.69   0.11)
(sat.stats    355   3103   10   365/365   290/185  80       0    19.69   0.11)
(sat.stats    400   3636   11   395/395   336/226  80       0    19.69   0.12)
(sat.stats    493   5650   12   395/395   429/249  80       0    19.79   0.12)
(sat.stats    498   5716   13   395/395   434/250  80       0    19.79   0.13)
(sat.stats    503   5719   14   395/395   439/251  80       0    19.79   0.13)
(sat.stats    510   5732   15   395/395   446/251  80       0    19.79   0.13)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    898  13162   24  2306/2305   861/305  80       0    20.51   0.66)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6327 :time 0.00)
(sat.stats   1211  25750   50  3430/3429  1187/339  83       0    20.61   0.94)
ramon: poll                 wall=1.000s usage=0.996s mem=22036KiB load=1.00 rootload=0.98
(sat.stats   1851  38222  117  3971/3970  1841/586  83       0    20.91   1.19)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14473 :time 0.00)
(sat.stats   2424  57997  156  4659/4658  2433/713  85       0    21.20   1.62)
 (sat-cleaner :elim-literals 26 :elim-clauses 0 :cost 17066 :time 0.00)
lshr: (lshr[58] (bv2int %0) (mod (bv2int %1) 58)) 257 := 257 >>l 50
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1&256
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #69 #318) 64)) 0 := 72057594037927936 >>l 56
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 18326 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 1 := 1&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 2 := 2&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 4 := 4&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 128 := 255&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 64 := 255&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 56 := 255&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 32 := 255&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 16 := 255&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 113&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 1 := 113&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 4&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 2 := 4&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 255&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 246 := 255&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 255&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 252 := 255&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 255&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 248 := 255&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 247&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 240 := 247&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 33&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 32 := 33&256
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 66&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 64 := 66&256
 (sat-cleaner :elim-literals 115 :elim-clauses 5 :cost 20578 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 191&256
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 128 := 191&256
ramon: poll                 wall=2.000s usage=1.993s mem=23664KiB load=1.00 rootload=1.00
(sat.stats   3601  88702  210  8027/8024  3624/894 201       0    22.86   2.69)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 33812 :time 0.00)
ramon: poll                 wall=3.000s usage=2.989s mem=24800KiB load=1.00 rootload=1.00
lshr: (lshr[58] (bv2int %0) (mod (bv2int %1) 58)) 496640 := 29199 >>l 38
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 3328 := 3328&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 3072 := 3072&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 512 := 512&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 2048 := 2048&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 4095&1048576
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #69 #318) 64)) 288230376151711745 := 72040001853117376 >>l 44
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 4096 := 1044459&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 49152 := 1040384&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 8192 := 1040384&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1040383&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 256 := 1040383&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1040383&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 327680 := 1040383&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1040383&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 28672 := 1040383&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1040383&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 1024 := 1040383&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1040383&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 512 := 1040383&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1040383&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 2048 := 1040383&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1040383&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 40960 := 1040383&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1032191&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 57344 := 1032191&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1032191&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 16384 := 1032191&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1028098&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 32768 := 1028098&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1028098&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 655360 := 1028098&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1028098&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 262144 := 1028098&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1028098&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 524288 := 1028098&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 0 := 1011714&1048576
band: (band[58] (lshr[64] (* 64 #65) (mod #319 64)) (if (= #619 63) 18446744073709551616 (if #621 9223372036854775808 #745))) 16384 := 1011714&1048576
(sat.stats   5541 133679  370 15775/15770  4971/1231 215       0    25.11   3.70)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 39946 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 4096 := 1011714&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 983040 := 1011714&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 32768 := 1011714&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 163840 := 958464&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 131072 := 958464&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 524288 := 958464&1048576
band: (band[58] (lshr[58] (bv2int %0) (mod #69 58)) (if (= #482 57) 144115188075855872 (if #484 72057594037927936 #596))) 262144 := 958464&1048576
ramon: poll                 wall=4.000s usage=3.984s mem=26968KiB load=0.99 rootload=0.99
ramon: poll                 wall=5.000s usage=4.981s mem=27452KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.978s mem=28000KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   8186 190724  661 29317/29311  6550/1485 380       0    27.66   6.40)
ramon: poll                 wall=7.000s usage=6.973s mem=29316KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.971s mem=30900KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.967s mem=32536KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.962s mem=33772KiB load=0.99 rootload=0.99
ramon: poll                 wall=11.003s usage=10.961s mem=35732KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.956s mem=37664KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.953s mem=40692KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.950s mem=41012KiB load=1.00 rootload=0.99
(sat.stats  14223 299081  829 67942/67936 10324/1746 380       0    45.66  14.94)
ramon: poll                 wall=15.000s usage=14.946s mem=42336KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.943s mem=46184KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.939s mem=48500KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.937s mem=50684KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.934s mem=55460KiB load=1.00 rootload=1.00
(sat.stats  18206 375025 1015 83330/83324 12681/2038 380       0    55.91  19.24)
ramon: poll                 wall=20.000s usage=19.931s mem=57992KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:56:37 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.030s
ramon: group.total          19.941s
ramon: group.utime          19.909s
ramon: group.stime          0.032s
ramon: group.mempeak        58252KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
