ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:45:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28874 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ZMOOZ2mAJgzF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             463726
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   246/246     0/0  63       0    18.53   0.00)
(sat.stats    102    671    0   246/246   102/23  63       0    18.75   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1024 :time 0.00)
(sat.stats    102    671    0   246/246   102/23  63       0    18.75   0.00)
(sat.stats    102    671    0   246/246   102/23  63       0    18.75   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 460018.75 :time 0.00)
(sat.stats    102    671    0   246/246   102/23  63       0    18.75   0.00)
(sat.stats    105    693    1   246/246   105/26  63       0    18.75   0.00)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    108    756    2   246/246   108/29  63       0    18.75   0.01)
(sat.stats    111    832    3   246/246   111/32  63       0    18.75   0.01)
(sat.stats    114    931    4   246/246   114/35  63       0    18.75   0.01)
(sat.stats    127   1320    5   246/246   127/42  63       0    18.85   0.01)
(sat.stats    130   1383    6   246/246   130/43  63       0    18.85   0.01)
(sat.stats    133   1461    7   246/246   133/43  63       0    18.85   0.01)
(sat.stats    136   1567    8   246/246   136/43  63       0    18.85   0.01)
(sat.stats    139   1670    9   246/246   139/44  63       0    18.85   0.01)
(sat.stats    142   1728   10   246/246   142/45  63       0    18.85   0.01)
(sat.stats    145   1811   11   246/246   145/48  63       0    18.85   0.01)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2340 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 6127 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    769  19067   12  1204/1203   770/194  75       0    20.10   0.32)
(sat.stats    772  19318   13  1220/1219   773/194  75       0    20.10   0.34)
(sat.stats    775  19570   14  1228/1227   776/194  75       0    20.10   0.34)
(sat.stats    779  19719   15  1236/1235   780/194  75       0    20.10   0.34)
(sat.stats    788  19871   16  1255/1254   789/194  75       0    20.10   0.34)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6630 :time 0.00)
lshr: (lshr[57] (bv2int %1) (+ 57 (* 144115188075855871 #61))) 1 := 0 >>l 50
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 24 := 127&113667515665306240
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 87 := 127&113667515665306240
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 118 := 127&113667515665306240
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 112 := 127&113667515665306240
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 96 := 127&113667515665306240
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 64 := 127&113667515665306240
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 0 := 127&113667515665306240
lshr: (lshr[64] (* 64 (bv2int %1)) (mod (+ 63 #608 #612) 64)) 0 := 9151314442818236096 >>l 56
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 8408 :time 0.00)
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 9366 :time 0.00)
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 4 := 127&113667515665306240
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 0 := 127&113667515665306240
band: (band[57] (if (= #324 63) 309343825494130453641788079585886208 (if #460 154671912747065226820894039792943104 #457)) (lshr[64] (* 64 #74) (mod #615 64))) 89 := 113667515665306240&127
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 0 := 127&113667515665306240
band: (band[57] (if (= #324 63) 309343825494130453641788079585886208 (if #460 154671912747065226820894039792943104 #457)) (lshr[64] (* 64 #74) (mod #615 64))) 76 := 113667515665306240&127
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 0 := 127&113667515665306240
band: (band[57] (if (= #324 63) 309343825494130453641788079585886208 (if #460 154671912747065226820894039792943104 #457)) (lshr[64] (* 64 #74) (mod #615 64))) 2 := 113667515665306240&127
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 0 := 127&113667515665306240
band: (band[57] (if (= #324 63) 309343825494130453641788079585886208 (if #460 154671912747065226820894039792943104 #457)) (lshr[64] (* 64 #74) (mod #615 64))) 64 := 113667515665306240&127
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 0 := 127&113667515665306240
band: (band[57] (if (= #324 63) 309343825494130453641788079585886208 (if #460 154671912747065226820894039792943104 #457)) (lshr[64] (* 64 #74) (mod #615 64))) 8 := 113667515665306240&127
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 0 := 127&113667515665306240
band: (band[57] (if (= #324 63) 309343825494130453641788079585886208 (if #460 154671912747065226820894039792943104 #457)) (lshr[64] (* 64 #74) (mod #615 64))) 32 := 113667515665306240&127
band: (band[57] (lshr[57] (bv2int %1) (+ 57 #483)) (if (= #84 56) 2416748636672894169076469371764736 (if #487 1208374318336447084538234685882368 #597))) 0 := 127&113667515665306240
band: (band[57] (if (= #324 63) 309343825494130453641788079585886208 (if #460 154671912747065226820894039792943104 #457)) (lshr[64] (* 64 #74) (mod #615 64))) 16 := 113667515665306240&127
(sat.stats   1065  26732   50  2814/2812  1075/240 181       0    21.29   0.51)
(sat.stats   1860  48633   93  4447/4445  1894/464 181       0    21.89   0.87)
ramon: poll                 wall=1.001s usage=0.949s mem=23416KiB load=0.95 rootload=0.94
ramon: poll                 wall=2.000s usage=1.943s mem=43080KiB load=0.99 rootload=0.98
ramon: poll                 wall=3.000s usage=2.942s mem=51556KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.005s usage=3.950s mem=66116KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.941s mem=70760KiB load=1.00 rootload=0.98
ramon: poll                 wall=6.000s usage=5.941s mem=75800KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.941s mem=80208KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.001s usage=7.944s mem=84776KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.940s mem=86964KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.940s mem=89820KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.940s mem=92500KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.939s mem=109MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.939s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.939s mem=115MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.938s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.938s mem=118MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.938s mem=120MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.938s mem=124MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.937s mem=124MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.937s mem=126MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:45:34 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.080s
ramon: group.total          20.001s
ramon: group.utime          19.913s
ramon: group.stime          0.088s
ramon: group.mempeak        126MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
