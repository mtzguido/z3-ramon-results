ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:24:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28405 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1379
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/P7jBE1Ry5IxR.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             787064
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   65.3595     10000        49          0            1        2)
(sat.ddfw       1      1   34.3677     20001        98          1            1        3)
(sat.ddfw       1      1   37.1747     40001       196          2            1        5)
(smt.stats    0    101   4973    590  1169/1042/110     104/20     8   18   52.15)
(smt.stats    1    202   6145   1698  2128/1938/114     212/42    10   27   52.34)
(sat.ddfw       1      1   33.0396     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.836s mem=54388KiB load=0.84 rootload=0.83
(smt.stats    2    313   7461   2885  2339/2137/121     331/50    11   31   52.34)
(smt.stats    3    414   9947   4505  2347/2145/123     442/64    13   41   52.44)
(smt.stats    4    525  11549   6134  2480/2256/126     566/72    14   42   52.54)
(sat.ddfw       1      1   29.8285    110001       539          4            1       12)
(smt.stats    5    647  14467   8519  2513/2283/127     689/86    15   48   52.64)
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&762
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&760
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&4398046511095
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&4398046511095
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 72057594037927936 := 2358 << 38
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 72057594037927936 := 2358 << 38
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 72057594037927936 := 2358 << 38
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 72057594037927936 := 2358 << 38
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2359 := 274877906943&2359
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 2359 := 2358 << 38
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 274877906943 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 274877906942 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 274877906942 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 274877906940 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 8 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 16 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 32 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 64 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 128 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 256 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 512 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 1024 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2048 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 128 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 256 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 512 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 1024 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2048 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 4096 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 8192 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 16384 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 32768 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 65536 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 131072 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 262144 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 524288 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 65536 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 262144 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 524288 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 1048576 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2097152 := 274877906943&1649267441664
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17194  10526  2741/2332/148     788/100    16   53   53.23)
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1178 := 1179 << 39
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1178 := 1179 << 39
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1178 := 1179 << 39
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1178 := 1179 << 39
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 1 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 274877906942 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 4 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 8 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 16 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 32 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 64 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 16 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 32 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 64 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 128 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 256 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 512 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 1024 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 2048 := 274877906943&1649267441664
(smt.stats    7    859  19745  13514  2749/2430/250     904/121    18   80   53.42)
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 1024 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 512 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 512 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 512 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 512 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 512 := 274877906943&1649267441664
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 274877906943&1649267441664
band: (band[42] (if (= #113 41) 0 (if #584 1 #698)) (shl[42] (bv2int %0) (+ 42 #701))) 128 := 274877906943&1649267441664
(smt.stats    8    981  22134  17545  2761/2542/339    1076/176    21  110   53.42)
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 646512837132290 := 590 << 40
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 646512837132290 := 590 << 40
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 646512837132290 := 590 << 40
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&3848290697218
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&3848290697218
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&3848290697218
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&3848290697218
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&3848290697218
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&4398046511102
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2 := 1099511627775&3848290697218
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 3 := 1099511627775&3848290697218
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697218
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697220
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697224
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697232
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697224
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697224
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697220
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697248
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697248
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697280
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697248
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697280
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697344
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697280
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697344
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697472
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697472
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697728
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697472
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697728
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290698240
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290697472
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290698240
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290699264
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290699264
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290698240
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290701312
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290701312
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290705408
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290705408
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290713600
(smt.stats    9   1115  24994  22431  2944/2576/361    1280/195    23  123   54.00)
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290731522
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290731536
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&3848290731584
(sat.ddfw       1      1   26.5387    160000       784          5            1       17)
(smt.stats   10   1216  26052  24869  3128/2791/481    1555/200    24  147   54.10)
ramon: poll                 wall=2.000s usage=1.835s mem=56356KiB load=1.00 rootload=0.97
(smt.stats   11   1327  27764  28929  3470/3191/487    1788/340    26  148   54.88)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33111  40154  3611/3389/493    2158/411    28  158   55.07)
(smt.stats   13   1583  41174  55346  3721/3470/494    2407/512    29  163   55.39)
(sat.ddfw       1      1   23.7252    220001      1078          6            1       23)
(smt.stats   14   1730  47082  69258  3740/3494/497    2717/551    31  175   55.48)
(smt.stats   15   1831  50232  76009  3770/3502/497    2880/563    32  179   55.48)
(smt.stats   16   1942  53316  88595  4024/3770/500    3234/648    33  183   55.58)
ramon: poll                 wall=3.000s usage=2.835s mem=58340KiB load=1.00 rootload=1.00
(smt.stats   17   2064  55685  96896  4273/3771/500    3423/652    33  183   55.67)
(smt.stats   18   2198  58755 115707  4657/4403/502    3900/714    35  196   55.77)
(sat.ddfw       1      1   21.2895    290001      1421          7            1       30)
(smt.stats   19   2345  63247 136557  4880/4408/502    4408/722    36  199   56.07)
(smt.stats   20   2506  64750 149132  5344/5090/503    5003/946    37  200   56.27)
(smt.stats   21   2607  66899 170713  5347/5093/503    5664/946    37  200   56.40)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   22   2718  69608 197450  5367/5102/504    5854/1396    38  205   56.40)
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 30 := 63&2188
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 28 := 63&2188
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 28 := 63&2172
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 60 := 63&2172
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 650910883645564 := 154 << 6
ramon: poll                 wall=4.000s usage=3.835s mem=58712KiB load=1.00 rootload=1.00
(smt.stats   23   2840  72121 207405  5559/5121/506    7026/1452    39  206   56.49)
(sat.ddfw       1      1   19.2771    370001      1813          8            1       38)
(smt.stats   24   2974  75678 230022  5726/5445/512    7538/1663    40  209   56.59)
(smt.stats   25   3122  82980 240999  5732/5477/512    7844/1663    40  209   56.59)
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 549755813887&1
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 1 := 549755813887&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 72066390130950145 := 88 << 39
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 1 := 549755813887&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 650910883643393 := 88 << 39
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 549755813887&0
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1 := 44 << 40
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 549755813887&0
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1 := 44 << 40
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 549755813887&0
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1 := 44 << 40
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 48378511622144 := 86 << 40
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #798 #802) 64)) 48378511622144 := 86 << 40
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 0 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 32 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 128 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 128 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 64 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 256 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 16384 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 12288 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 4096 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 8192 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 4096 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 4096 := 1099511627775&32768
band: (band[42] (if (= #335 63) 0 (if #563 1 #791)) (shl[64] (* 2 #107) (mod #806 64))) 2048 := 1099511627775&32768
(smt.stats   26   3283  86725 273164  5846/5532/518    8882/2032    41  222   56.90)
(smt.stats   27   3460  91226 285124  6147/5818/544    9280/2198    42  232   57.29)
ramon: poll                 wall=5.000s usage=4.834s mem=60088KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   17.5507    460001      2254          9            1       47)
(smt.stats   28   3561  93859 302237  6167/5860/545    9846/2294    43  232   57.83)
(smt.stats   29   3672  98183 331820  6275/5943/547   10317/2327    44  234   58.62)
(smt.stats   30   3794 102872 351015  6370/6006/547   10908/2331    44  234   58.72)
ramon: poll                 wall=6.000s usage=5.834s mem=61168KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.1057    560001      2745         10            1       57)
(smt.stats   31   3928 106456 367691  6526/6172/550   11477/2377    45  235   58.81)
(smt.stats   32   4075 112809 394911  6570/6194/554   11810/2476    46  269   59.04)
ramon: poll                 wall=7.000s usage=7.017s mem=61516KiB load=1.18 rootload=1.19
(sat.ddfw       1      1   15.1037    670001      3284         11            1       68)
(smt.stats   33   4236 126279 425567  6737/6246/554   12505/2510    47  276   59.33)
ramon: poll                 wall=8.000s usage=8.087s mem=61760KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   13.9779    790001      3872         12            1       80)
ramon: poll                 wall=9.003s usage=9.091s mem=62044KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=10.086s mem=62288KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.0078    920001      4509         13            1       93)
(smt.stats   34   4413 139558 480595  6909/6392/554   13695/2516    47  276   60.04)
ramon: poll                 wall=11.000s usage=11.086s mem=62884KiB load=1.00 rootload=0.99
(smt.stats   35   4607 150488 510309  6957/6564/557   14611/2689    48  283   60.13)
(smt.stats   36   4708 156811 543694  6982/6609/558   14901/2797    49  284   60.13)
(sat.ddfw       1      1   12.1612   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=12.088s mem=62944KiB load=1.00 rootload=1.01
(smt.stats   37   4819 163518 568767  7107/6618/558   15444/2811    50  288   60.32)
(smt.stats   38   4941 169583 596535  7176/6811/559   16305/3130    51  296   60.42)
ramon: poll                 wall=13.000s usage=13.081s mem=62996KiB load=0.99 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 889)
(sat.ddfw       1      1   11.4147   1210001      5931         15            1      123)
(smt.stats   39   5075 174995 616351  7201/6820/561   16262/3132    51  296   60.77)
ramon: poll                 wall=14.003s usage=13.998s mem=63496KiB load=0.91 rootload=0.92
(smt.stats   40   5222 182943 655922  7265/6889/562   16982/3270    52  308   60.77)
ramon: poll                 wall=15.000s usage=14.927s mem=63516KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   10.6695   1370001      6715         16            1      139)
(smt.stats   41   5383 188806 675361  7655/6898/562   17303/3271    52  308   60.86)
ramon: poll                 wall=16.000s usage=15.928s mem=63412KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.1088   1540001      7549         17            1      156)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5560 197006 728715  7751/7329/562   18775/3271    52  308   61.05)
ramon: poll                 wall=17.000s usage=16.872s mem=63724KiB load=0.94 rootload=0.94
(smt.stats   43   5754 204842 779651  8001/7386/562   19418/3273    52  308   61.34)
ramon: poll                 wall=18.000s usage=17.836s mem=64156KiB load=0.96 rootload=0.97
(smt.stats   44   5967 209428 817646  8206/7839/566   21735/3991    54  317   62.05)
(sat.ddfw       1      1   9.52633   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=18.765s mem=64480KiB load=0.93 rootload=0.92
(smt.stats   45   6068 213744 827406  8243/7845/566   22297/3996    54  317   62.16)
(smt.stats   46   6179 220235 860380  8300/7909/566   22551/4000    54  317   62.25)
ramon: poll                 wall=20.003s usage=20.007s mem=64592KiB load=1.24 rootload=1.25
ramon: end                  Fri Nov  1 22:25:05 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.030s
ramon: group.total          20.010s
ramon: group.utime          19.974s
ramon: group.stime          0.036s
ramon: group.mempeak        64848KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
