ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:15:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28543 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KcWEXzYyPFY3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             754595
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   88.4956     10000        49          0            1        2)
(smt.stats    0    101   4510    520  1141/1032/111      86/10     9   19   52.04)
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 0&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 4398046511104 := 83 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 0&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 4398046511104 := 83 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 0&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 4398046511104 := 83 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 83 := 83 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 0&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 180319906955264 := 83 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 83 := 83 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 83 := 83 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 1 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 2 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 1099511627776 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 1099511627772 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627776 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627776 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627775 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627774 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 1 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 2 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 4 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
(sat.ddfw       1      1   46.7336     20001        98          1            1        3)
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 2 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 1099511627768 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 1099511627760 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2199023255552&1099511627776
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 32 := 2199023255552&1099511627776
(smt.stats    1    203   6646   1592  1825/1656/200     176/13    12   45   52.52)
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627776 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627775 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627774 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627772 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627768 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1099511627760 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 16 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 32 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 16 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 32 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 64 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 128 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 256 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 512 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1024 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2048 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4096 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 8192 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 16384 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 32768 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 65536 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 131072 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 262144 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 524288 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1048576 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2097152 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4194304 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 115343360 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 47087616 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 47087616 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 47087616 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 47071232 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 47054848 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 47054848 := 2199023255552&1099511627776
(smt.stats    2    314   8448   3681  2434/1984/200     469/21    13   46   53.21)
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 117440512 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 134217728 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 268435456 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 536870912 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1073741824 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2147483648 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4294967296 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 8589934592 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 17179869184 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 34359738368 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 68719476736 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 137438953472 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 274877906944 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 549755813888 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 549755813888 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 549755813888 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 549755813888 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 34359738368 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 68719476736 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 68719476736 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 68719476736 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 68719476736 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 68719476736 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 34359738368 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 137438953472 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 274877906944 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4294967296 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 8589934592 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 17179869184 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 536870912 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 268435456 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 268435456 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1073741824 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2147483648 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2147483648 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 134217728 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 125829120 := 2199023255552&1099511627776
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 117440512 := 2199023255552&1099511627776
(sat.ddfw       1      1   46.9484     40001       196          2            1        5)
(smt.stats    3    415  10629   5943  2545/2333/456     597/188    16  102   53.60)
(smt.stats    4    526  12619   7900  2589/2370/460     738/240    17  111   53.89)
(sat.ddfw       1      1   40.3769     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=1.097s mem=56692KiB load=1.10 rootload=1.08
(sat.ddfw       1      1   34.0136    110001       539          4            1       12)
(sat.ddfw       1      1   29.2906    160000       784          5            1       17)
(smt.stats    5    648  14982   9221  2655/2385/461     871/246    18  114   54.47)
ramon: poll                 wall=2.000s usage=2.260s mem=56992KiB load=1.16 rootload=1.16
(sat.ddfw       1      1   25.6196    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    749  17979  11356  2890/2546/461    1018/255    19  114   54.56)
ramon: poll                 wall=3.000s usage=3.429s mem=57012KiB load=1.17 rootload=1.17
(smt.stats    7    860  23305  15348  3024/2685/461    1191/258    19  114   54.66)
(sat.ddfw       1      1    22.082    290001      1421          7            1       30)
(smt.stats    8    982  28569  20822  3192/2924/472    1410/291    20  115   54.85)
(sat.ddfw       1      1   21.4075    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.539s mem=57448KiB load=1.11 rootload=1.11
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2233383124994&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 2233383124994 := 2199023255521 << 1
(smt.stats    9   1116  33194  26705  3269/3052/480    1641/478    23  182   55.04)
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 2220498223106&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 182540405178370 := 2199023255521 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511042&1
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 2199023255684 := 2199023255521 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511042&1
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 2203318288388 := 2199023255521 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511042&1
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #585 41) 1 (if #587 2 #667))) 1 := 4398046511042&1
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1 := 4398046511042&1
(smt.stats   10   1217  37323  30550  3490/3253/487    1765/498    24  185   55.14)
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 1 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511063&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 0 := 4398046511075&16
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 4398046511075 := 2199023255525 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2 := 4398046511063&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 2 := 4398046511063&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4 := 4398046511059&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 4 := 4398046511063&16
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 16 := 4398046511059&16
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 4398046511059 := 2199023255525 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #330 64)) (if (= #686 63) 0 (if #688 1 #812))) 16 := 4398046511059&16
shl: (shl[64] (bv2int %0) (mod (+ #107 #329) 64)) 4398046511059 := 2199023255525 << 5
(smt.stats   11   1328  44898  39742  3600/3335/526    1974/550    28  195   55.43)
(smt.stats   12   1450  51155  47024  3623/3372/546    2151/572    30  200   55.53)
(sat.ddfw       1      1   19.4217    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.491s mem=57848KiB load=0.95 rootload=0.94
(smt.stats   13   1584  58323  53293  3681/3389/549    2389/595    31  209   55.63)
(sat.ddfw       1      1   17.2176    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.436s mem=58024KiB load=0.95 rootload=0.95
(smt.stats   14   1731  66694  59909  3787/3515/550    2556/717    32  214   55.91)
ramon: poll                 wall=7.000s usage=7.410s mem=58156KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   15.6317    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=8.367s mem=58376KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   14.3816    790001      3872         12            1       80)
(smt.stats   15   1832  71233  65139  3902/3560/550    2689/746    33  214   56.01)
ramon: poll                 wall=9.000s usage=9.368s mem=58644KiB load=1.00 rootload=1.00
(smt.stats   16   1943  77214  76414  4042/3798/559    2870/776    34  219   56.01)
(smt.stats   17   2065  83537  85025  4129/3829/559    3056/783    34  219   56.29)
(sat.ddfw       1      1   13.3197    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=10.437s mem=59040KiB load=1.07 rootload=1.07
(smt.stats   18   2199  88107  94169  4378/4120/561    3304/868    36  251   56.48)
ramon: poll                 wall=11.000s usage=11.437s mem=59060KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.4169   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=12.437s mem=59076KiB load=1.00 rootload=1.00
(smt.stats   19   2346  93188 106393  4634/4141/562    3568/948    37  253   56.77)
(sat.ddfw       1      1   11.6297   1210001      5931         15            1      123)
(smt.stats   20   2507  98848 117409  4733/4472/567    3955/997    39  256   56.96)
ramon: poll                 wall=13.000s usage=13.440s mem=59196KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=14.438s mem=59288KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   21   2608 105328 124938  4786/4484/571    4132/997    39  256   57.05)
(sat.ddfw       1      1   10.9282   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=15.438s mem=59400KiB load=1.00 rootload=1.00
(smt.stats   22   2719 110100 132383  4874/4547/572    4334/1020    40  297   57.15)
ramon: poll                 wall=16.000s usage=16.438s mem=59460KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.3118   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=17.485s mem=59516KiB load=1.05 rootload=1.05
(smt.stats   23   2841 115063 144464  5177/4869/573    4540/1039    41  303   57.24)
ramon: poll                 wall=18.000s usage=18.476s mem=59600KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   9.80072   1720001      8431         18            1      174)
(smt.stats   24   2975 119371 157356  5235/4977/574    4918/1057    43  304   57.34)
ramon: poll                 wall=19.000s usage=19.476s mem=59716KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=20.471s mem=59752KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:15:29 2024
ramon: root.execname        z3
ramon: root.utime           20.500s
ramon: root.stime           0.020s
ramon: group.total          20.535s
ramon: group.utime          20.511s
ramon: group.stime          0.024s
ramon: group.mempeak        60016KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.02
