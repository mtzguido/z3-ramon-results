ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:55:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24817 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/lYtc1wB9X1O0.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             140417
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 8589934592 := 4 << 16
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 8589934592 := 8589934590 << 16
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 8589934592 := 131072 << 16
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 8589934592 := 4 << 16
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 1 := 65536 << 17
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 8589934592 := 4 << 16
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&262144
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 1 := 2 << 17
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&8589934591
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&8589934591
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&8589934590
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&8589934591
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 17179869182 << 16
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 1 := 131072 << 17
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 1 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 2 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 4 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 131064 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 16 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 32 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 64 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 128 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 256 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 512 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 1024 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 2048 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 4096 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 8192 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 16384 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 32768 := 131071&131072
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131072
band: (band[33] (if (= #123 32) 1 (if #570 3 #658)) (shl[33] (bv2int %0) (+ 33 #661))) 65536 := 131071&131072
(smt.stats    0    101   3961    739  1184/972/120      96/14     6   18   19.57)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&1
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131071
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131070
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 131071 := 131071&131076
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 131070 := 131071&131076
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131076
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131077
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&131076
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 8589934592 := 131076 << 16
(smt.stats    1    202   5293   1458  1758/1508/219     206/40    10   40   19.76)
(smt.stats    2    313   8543   3727  2032/1843/222     318/47    12   44   19.76)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 131071 := 131072 << 17
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 131071&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 65537 := 131072 << 17
(smt.stats    3    414  11413   5605  2165/1974/225     410/46    14   49   19.96)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 262143&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 262146 << 17
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 262143&1
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 262143&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 262146 << 17
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 262143&1
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 262143&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 262146 << 17
(smt.stats    4    525  14265   7373  2194/1998/235     512/53    16   57   20.06)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 262143&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 65537 := 65536 << 18
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 262143&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 65537 := 65536 << 18
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 262143&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 65537 := 65536 << 18
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 262140 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 262136 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 262128 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65537 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65537 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65568 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65540 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65544 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65544 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65600 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65664 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 65792 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 66048 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 66560 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 67584 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 69632 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 73728 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 81920 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 98304 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 131072 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 131072 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 131072 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 69632 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 73728 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 82432 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 82944 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 82016 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 81920 := 262143&262144
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 98304 := 262143&262144
(smt.stats    5    647  17727   9699  2354/2112/326     709/73    17   76   20.35)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  22318  13186  2386/2177/353     852/119    19   87   20.58)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 65535&1
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 65535&1
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 65535&2
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 34359738370 := 131074 << 15
(smt.stats    7    859  27013  16702  2474/2253/359    1046/160    20   92   20.67)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 2 := 131074 << 15
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 2 := 131074 << 15
(smt.stats    8    981  29280  20558  2603/2374/374    1189/219    22  108   20.67)
(smt.stats    9   1115  33419  24385  2645/2399/378    1312/279    23  135   21.26)
(smt.stats   10   1216  38548  29480  2976/2661/378    1443/292    24  140   21.46)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 1 := 131072 << 31
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 1 := 131072 << 31
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869185 := 0 << 31
(smt.stats   11   1327  43465  34702  3106/2874/386    1578/353    26  147   21.46)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869185 := 0 << 31
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 4294967295&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 8589934591 := 32770 << 32
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 4294967295&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 8589934591 := 32770 << 32
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 4294967295&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 8589934591 := 32770 << 32
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 4294967295&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 6442254349 := 32770 << 32
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  46886  38954  3190/2898/392    1743/356    26  147   21.46)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 16777215&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 131072 << 23
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 16777215&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 131072 << 23
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 16777215&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 131072 << 23
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 16777215&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 131072 << 23
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 16777215&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 131072 << 23
(smt.stats   13   1583  49718  44980  3247/2990/401    1990/362    27  164   21.66)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 2 := 1048575&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 25769803778 := 131072 << 19
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 2 := 1048575&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 34359738370 := 131072 << 19
(smt.stats   14   1730  54363  50797  3340/3072/407    2222/436    28  174   21.80)
ramon: poll                 wall=1.000s usage=0.952s mem=23128KiB load=0.95 rootload=0.94
(smt.stats   15   1831  58863  58024  3399/3143/413    2375/479    30  177   21.90)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 34359738368 := 65536 << 14
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 34359738368 := 65536 << 14
(smt.stats   16   1942  62178  64681  3417/3160/424    2522/485    31  187   21.90)
(smt.stats   17   2064  66340  71012  3468/3204/434    2730/526    33  226   21.99)
(smt.stats   18   2198  72013  77355  3578/3229/434    3064/526    33  226   22.09)
(smt.stats   19   2345  82104  92657  3642/3329/434    3318/573    34  230   22.18)
(smt.stats   20   2506  88116 105190  3660/3399/436    3645/593    35  235   22.18)
(smt.stats   21   2607  93246 113726  3664/3403/437    3886/651    36  236   22.28)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 2 := 8589934591&8589934590
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 32767 := 8589934591&8589934590
(smt.stats   22   2718  97811 118011  3771/3406/437    4065/678    37  237   22.44)
(smt.stats   23   2840 101409 126734  3931/3540/437    4345/682    37  237   22.53)
ramon: poll                 wall=2.000s usage=1.950s mem=24052KiB load=1.00 rootload=0.99
(smt.stats   24   2974 102264 130022  4330/4069/444    4931/759    38  238   22.63)
(smt.stats   25   3121 107021 137741  4339/4074/447    5463/759    38  238   22.72)
(smt.stats   26   3282 114435 155549  4521/4147/449    6333/985    39  276   22.82)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3459 118404 166115  4685/4287/449    6765/1388    40  278   23.01)
(smt.stats   28   3560 122247 172363  4839/4501/449    7092/1389    40  278   23.01)
(smt.stats   29   3671 126431 182132  4969/4593/449    7344/1389    40  278   23.01)
(smt.stats   30   3793 131377 205644  5101/4731/449    7554/1390    40  278   23.11)
(smt.stats   31   3927 135909 213288  5127/4844/449    7837/1391    40  278   23.33)
ramon: poll                 wall=3.000s usage=2.950s mem=24596KiB load=1.00 rootload=1.00
(smt.stats   32   4074 140938 219970  5282/4871/450    8226/1621    41  288   23.33)
(smt.stats   33   4235 143663 233507  5538/5229/452    8996/1625    41  288   23.42)
(smt.stats   34   4412 147274 259525  5573/5312/454    9638/1913    43  313   23.52)
(smt.stats   35   4606 150878 280206  5633/5326/454   10046/1914    43  313   23.52)
(smt.stats   36   4707 153358 293069  5690/5383/454   10237/1917    43  313   23.52)
(smt.stats   37   4818 157350 309692  5795/5447/454   10594/2073    44  316   23.61)
(smt.stats   38   4940 160234 321413  5919/5555/454   10943/2079    44  316   23.71)
(smt.delete-inactive-clauses  :num-deleted-clauses 153)
(smt.stats   39   5074 161870 338359  5971/5691/454   11009/2080    44  316   23.71)
ramon: poll                 wall=4.000s usage=3.944s mem=25072KiB load=0.99 rootload=1.00
(smt.stats   40   5221 164527 365360  6019/5734/454   11207/2080    44  316   23.80)
(smt.stats   41   5382 167813 398384  6047/5752/457   11463/2344    45  319   23.80)
(smt.stats   42   5559 169802 417570  6071/5789/460   11988/2386    46  321   23.90)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 8388607&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 8589934592 := 65536 << 22
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 8388607&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #839 #294 #669) 64)) 17179869184 := 131072 << 22
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 8388607&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 5369036821 := 0 << 23
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 8388607&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 5369036821 := 0 << 23
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 8388607&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 5369036821 := 0 << 23
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 8388607&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #119))) 5369036821 := 0 << 23
(smt.stats   43   5753 175046 450291  6132/5801/460   12346/2390    46  321   24.09)
(smt.stats   44   5966 177871 460733  6154/5872/470   12569/2645    47  341   24.09)
(smt.stats   45   6067 179995 471427  6188/5901/470   12929/2645    47  341   24.19)
(smt.stats   46   6178 183072 494338  6190/5903/472   13138/2717    48  341   24.19)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6300 186723 508162  6261/5943/474   13559/2893    49  352   24.28)
ramon: poll                 wall=5.000s usage=4.942s mem=25900KiB load=1.00 rootload=1.00
(smt.stats   48   6434 189969 521544  6433/6042/474   14111/2902    49  352   24.38)
(smt.stats   49   6581 195124 538595  6562/6210/477   14932/3024    50  353   24.47)
(smt.stats   50   6742 204262 553963  6595/6292/477   15159/3025    50  353   24.47)
(smt.stats   51   6919 209106 571888  6778/6322/477   15578/3180    51  358   24.57)
(smt.stats   52   7113 213169 592965  6784/6498/477   16113/3180    51  358   24.66)
ramon: poll                 wall=6.000s usage=5.940s mem=26356KiB load=1.00 rootload=0.99
(smt.stats   53   7326 221058 632428  6792/6502/479   17089/3423    52  361   24.93)
(smt.stats   54   7560 225681 654330  6918/6549/479   17468/3427    52  361   25.03)
(smt.stats   55   7661 229222 667890  7011/6659/479   17766/3524    53  381   25.12)
(smt.stats   56   7772 232563 696610  7129/6763/479   18193/3526    53  381   25.22)
ramon: poll                 wall=7.000s usage=6.939s mem=26720KiB load=1.00 rootload=1.00
(smt.stats   57   7894 235640 712972  7310/7024/481   18442/3662    54  415   25.32)
(smt.stats   58   8028 237164 727245  7323/7037/481   18881/3662    54  415   25.41)
(smt.stats   59   8175 243350 742640  7423/7038/481   19665/3675    54  415   25.51)
(smt.stats   60   8336 248100 765092  7594/7177/482   20309/3679    54  415   25.60)
ramon: poll                 wall=8.000s usage=7.937s mem=27344KiB load=1.00 rootload=1.00
(smt.stats   61   8513 250977 779285  7898/7378/482   21036/3955    55  420   25.79)
(smt.stats   62   8707 257083 822030  8007/7678/482   21434/3956    55  420   25.89)
(smt.stats   63   8920 261998 866956  8034/7748/486   21918/4156    56  427   25.89)
(smt.stats   64   9154 266564 909216  8062/7776/486   22470/4156    56  427   25.89)
ramon: poll                 wall=9.000s usage=8.937s mem=27516KiB load=1.00 rootload=1.00
(smt.stats   65   9411 275695 983970  8342/7781/486   23567/4164    56  427   26.18)
(smt.stats   66   9512 276552 992937  8390/8104/486   24075/4164    56  427   26.18)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   67   9623 279837 1020555  8433/8107/486   24336/4167    56  427   26.18)
(smt.stats   68   9745 282885 1048074  8473/8167/486   24485/4168    56  427   26.18)
ramon: poll                 wall=10.005s usage=9.941s mem=27744KiB load=1.00 rootload=1.00
(smt.stats   69   9879 288364 1087728  8549/8190/486   24742/4170    56  427   26.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 291436 1103672  8627/8283/486   25081/4170    56  427   26.28)
(smt.stats   71  10187 295287 1143299  8680/8368/486   25451/4170    56  427   26.37)
(smt.stats   72  10364 301397 1189591  8837/8403/486   26001/4172    56  427   26.51)
(smt.stats   73  10558 306488 1219901  9026/8639/486   26829/4176    56  427   26.70)
ramon: poll                 wall=11.000s usage=10.936s mem=28240KiB load=1.00 rootload=1.00
(smt.stats   74  10771 312211 1252866  9152/8752/487   28165/5032    57  431   27.09)
ramon: poll                 wall=12.000s usage=11.936s mem=28584KiB load=1.00 rootload=1.00
(smt.stats   75  11005 314864 1275039  9467/8989/487   28506/5032    57  431   27.09)
(smt.stats   76  11262 321574 1324390  9691/9224/487   28954/5037    57  431   27.18)
ramon: poll                 wall=13.000s usage=12.936s mem=28712KiB load=1.00 rootload=1.00
(smt.stats   77  11544 325969 1358767  9961/9652/497   29973/5104    58  452   27.28)
(smt.stats   78  11645 329901 1392215 10055/9703/500   30248/5110    58  452   27.28)
(smt.stats   79  11756 333697 1420906 10165/9785/500   30505/5118    58  452   27.37)
(smt.stats   80  11878 337102 1454013 10279/9929/500   30788/5467    59  452   27.37)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   81  12012 338752 1481014 10340/10057/501   31188/5468    59  452   27.37)
(smt.stats   82  12159 342256 1528326 10372/10062/501   31442/5588    60  456   27.47)
ramon: poll                 wall=14.000s usage=13.936s mem=28904KiB load=1.00 rootload=1.00
(smt.stats   83  12320 347939 1577065 10439/10097/501   31860/5590    60  456   27.47)
(smt.stats   84  12497 352901 1595286 10594/10158/501   32764/5595    60  456   27.66)
(smt.stats   85  12691 354667 1605932 10622/10339/501   33077/5595    60  456   27.66)
(smt.stats   86  12904 362772 1671706 10833/10424/502   33876/5861    61  459   28.03)
(smt.stats   87  13138 365390 1697434 10848/10565/503   34508/5861    61  459   28.03)
ramon: poll                 wall=15.000s usage=14.935s mem=29884KiB load=1.00 rootload=1.00
(smt.stats   88  13395 372503 1759825 10928/10568/503   34889/5863    61  459   28.13)
(smt.stats   89  13677 379069 1794532 11106/10683/503   35498/6011    62  460   28.13)
(smt.stats   90  13987 384307 1826694 11285/10861/503   36208/6021    62  460   28.22)
(smt.stats   91  14088 387830 1848730 11311/11028/503   36382/6021    62  460   28.22)
(smt.stats   92  14199 391490 1884109 11315/11032/503   37923/6021    62  460   28.52)
ramon: poll                 wall=16.000s usage=15.935s mem=30140KiB load=1.00 rootload=1.00
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613498368
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613629440
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613631488
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613631488
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613629440
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627424
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627424
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627456
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627456
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627424
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627456
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627520
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627520
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627648
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627424
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627584
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627648
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627632
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627584
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627648
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627520
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627488
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627504
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627456
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627504
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627488
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627456
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627536
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627520
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613627904
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613628416
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613628416
(smt.stats   93  14321 394591 1912243 11533/11216/565   38407/6351    63  464   28.71)
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613628928
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613628416
band: (band[33] (if (= #676 63) 1 (if #678 3 #832)) (shl[64] (* 2 #282) (mod #854 64))) 0 := 2147483647&1613628416
(smt.stats   94  14455 396654 1926521 11687/11239/585   38856/6353    63  464   29.28)
(smt.stats   95  14602 399726 1955892 11855/11391/585   39667/6358    63  464   29.37)
ramon: poll                 wall=17.000s usage=16.935s mem=31020KiB load=1.00 rootload=0.99
(smt.stats   96  14763 404272 2001940 12079/11668/586   40358/6358    63  464   29.47)
(smt.stats   97  14940 410208 2039027 12299/11795/586   41553/6805    64  481   29.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 1169)
ramon: poll                 wall=18.000s usage=17.935s mem=31428KiB load=1.00 rootload=1.00
(smt.stats   98  15134 417449 2101613 12374/12084/588   41466/6805    64  481   29.94)
(smt.stats   99  15347 425847 2124859 12514/12089/588   41899/7278    65  492   30.03)
(smt.stats  100  15581 432648 2175438 12664/12359/589   42922/7282    65  492   30.22)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  101  15838 440528 2186784 12683/12390/589   43194/7282    65  492   30.22)
ramon: poll                 wall=19.000s usage=18.935s mem=31680KiB load=1.00 rootload=1.00
(smt.stats  102  16120 446851 2226656 12770/12398/589   44068/7410    66  501   30.32)
(smt.stats  103  16430 456380 2283590 12892/12510/589   44702/7411    66  501   30.32)
ramon: poll                 wall=20.000s usage=19.934s mem=31900KiB load=1.00 rootload=1.00
(smt.stats  104  16770 467438 2411971 12900/12610/591   45247/7516    67  509   30.32)
ramon: end                  Fri Nov  1 18:56:13 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.985s
ramon: group.utime          19.965s
ramon: group.stime          0.020s
ramon: group.mempeak        32412KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.051s
ramon: loadavg              1.00
