ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:20:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27039 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zZy6gTov3XeM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             970909
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   76.3359     10000        49          0            1        2)
(smt.stats    0    101   4231    565  1142/1037/101      92/21     6   19   51.98)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1 := 1&2
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1 := 1&2
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1&2
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #105))) 4 := 1 << 1
(sat.ddfw       1      1   39.8446     20001        98          1            1        3)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1&2
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #105))) 3 := 1 << 1
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1&2
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1 := 1&2
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1&2
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #105))) 2 := 1 << 1
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1&2
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1 := 1&2
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1 := 1&36
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1&0
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #105))) 1 := 0 << 1
(smt.stats    1    202   7499   1563  2215/1999/114     182/24     8   21   52.26)
(sat.ddfw       1      1   43.1965     40001       196          2            1        5)
(smt.stats    2    313   8331   2214  2304/2051/121     300/28     9   25   52.77)
(smt.stats    3    414  11162   3301  2582/2351/123     422/40    10   28   52.67)
(smt.stats    4    525  11749   4236  2601/2377/134     567/57    12   35   52.67)
(sat.ddfw       1      1   39.1645     70001       343          3            1        8)
(smt.stats    5    647  13773   7172  2657/2413/134     734/59    12   35   52.77)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16069  10409  2703/2440/134     848/59    12   35   52.87)
ramon: poll                 wall=1.000s usage=0.816s mem=55164KiB load=0.82 rootload=0.80
(smt.stats    7    859  17804  11737  2743/2476/137     962/124    13   38   52.87)
(smt.stats    8    981  19985  14637  2807/2579/143    1108/138    14   45   52.96)
(sat.ddfw       1      1   34.4828    110001       539          4            1       12)
(smt.stats    9   1115  22254  18482  2857/2583/143    1260/151    15   53   52.96)
(smt.stats   10   1216  23170  20967  2890/2645/143    1366/151    15   53   52.96)
(smt.stats   11   1327  25411  23665  2919/2673/143    1504/151    15   53   53.07)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27280  25648  2941/2709/143    1636/152    15   53   53.19)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8192 := 8192&8193
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #718 #722) 64)) 274877915137 := 274877915138 << 13
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 32 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 64 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 128 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 256 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 512 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1024 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2048 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4096 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8192 := 8192&8193
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #718 #722) 64)) 274877915137 := 274877915138 << 13
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 32 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 64 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 128 := 8192&8193
(smt.stats   13   1583  30154  28362  3011/2749/185    1768/188    17   65   53.39)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 256 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 256 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 256 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 256 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1024 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1024 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1024 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1024 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 64 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 64 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #718 #722) 64)) 274877923328 := 274877923330 << 13
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&8193
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #718 #722) 64)) 274877923328 := 549755813886 << 13
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #105))) 25 := 16777217 << 14
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #105))) 25 := 16777217 << 14
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 2 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 8192 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 28 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 28 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 32 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 64 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 128 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 264 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 272 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 272 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #105))) 322 := 16777217 << 14
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 322 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 322 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 322 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 16 := 8192&16384
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16384
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 32 := 8192&16384
(smt.stats   14   1730  33835  33319  3140/2903/295    2026/227    18   93   53.68)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 8 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 4 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4096 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8192 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4096 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8192 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2048 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 32 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 32 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 512 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 128 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 128 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 128 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 256 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 512 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1024 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 2048 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 4096 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1024 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 2048 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 4096 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 5632 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 5632 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 5120 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 6144 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 8192 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 8192 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 8192 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 8192 := 8192&16793600
(smt.stats   15   1831  36371  39313  3306/3053/422    2183/262    20  126   54.17)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 4096 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 384 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 384 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 320 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 8192&16793600
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 320 := 8192&16793600
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8192 := 8192&274609455104
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8192 := 8192&274609455104
(sat.ddfw       1      1   30.3208    160000       784          5            1       17)
(smt.stats   16   1942  38145  44424  3441/3184/438    2362/286    21  134   54.37)
ramon: poll                 wall=2.000s usage=1.814s mem=56860KiB load=1.00 rootload=1.00
(smt.stats   17   2064  42458  49712  3481/3207/440    2631/287    21  134   54.58)
(smt.stats   18   2198  48388  60076  3548/3224/440    2792/400    22  139   54.71)
(sat.ddfw       1      1   26.9304    220001      1078          6            1       23)
(smt.stats   19   2345  51893  66849  3636/3326/441    2947/413    23  142   54.71)
(smt.stats   20   2506  56313  77774  3688/3427/443    3168/433    24  145   54.71)
(smt.stats   21   2607  61099  88811  3698/3439/445    3386/467    25  152   54.83)
(smt.stats   22   2718  64039  97243  3741/3473/449    3518/496    26  158   54.94)
(smt.stats   23   2840  69755 110604  3762/3491/450    3729/496    26  158   55.04)
(sat.ddfw       1      1   24.1463    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.814s mem=57424KiB load=1.00 rootload=1.00
(smt.stats   24   2974  73597 119279  3825/3566/451    4003/550    27  158   55.14)
(smt.stats   25   3121  77173 130318  3885/3595/452    4264/583    28  161   55.23)
(smt.stats   26   3282  79623 140305  3957/3642/452    4419/586    28  161   55.23)
(smt.stats   27   3459  81854 149121  4001/3740/455    4631/591    29  170   55.23)
(sat.ddfw       1      1   21.7391    370001      1813          8            1       38)
(smt.stats   28   3560  84306 155252  4064/3746/455    4820/593    29  170   55.33)
(smt.stats   29   3671  87389 165878  4130/3836/456    4952/622    30  174   55.33)
ramon: poll                 wall=4.000s usage=3.814s mem=57736KiB load=1.00 rootload=1.00
(smt.stats   30   3793  90567 177040  4164/3885/456    5075/622    30  174   55.33)
(smt.stats   31   3927  92879 184763  4169/3908/456    5211/631    31  181   55.55)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  95214 192225  4185/3918/457    5393/651    32  185   55.55)
(smt.stats   33   4235  99086 208877  4217/3928/457    5576/654    32  185   55.64)
(smt.stats   34   4412 103974 227325  4255/3990/460    5886/680    33  195   55.85)
(sat.ddfw       1      1   19.8107    460001      2254          9            1       47)
(smt.stats   35   4606 106967 238788  4263/3997/461    6123/680    33  195   55.85)
(smt.stats   36   4707 110121 246507  4270/4004/467    6364/730    34  198   55.85)
(smt.stats   37   4818 114429 256892  4277/4012/468    6521/780    35  204   55.85)
ramon: poll                 wall=5.000s usage=4.808s mem=58216KiB load=0.99 rootload=0.99
(smt.stats   38   4940 118684 268107  4291/4026/468    6738/780    35  204   55.85)
(smt.delete-inactive-clauses  :num-deleted-clauses 67)
(smt.stats   39   5074 121139 276572  4302/4037/476    6864/821    36  211   55.94)
(smt.stats   40   5221 124528 286354  4317/4052/476    7079/821    36  211   55.94)
(smt.stats   41   5382 130173 300948  4322/4058/476    7334/892    37  251   55.94)
(smt.stats   42   5559 136071 316777  4327/4061/477    7556/939    38  256   55.94)
(sat.ddfw       1      1   18.1324    560001      2745         10            1       57)
(smt.stats   43   5753 142012 333549  4344/4078/477    7808/939    38  256   56.28)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1024&137892003838
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1024&137892003839
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1024 := 1024&137875283968
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1024 := 1024&137875284992
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #718 #722) 64)) 1124938270499840 := 412769900552 << 10
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1024 := 1024&137875292092
shl: (shl[64] (* 2 (ramon: poll                 wall=6.000s usage=5.806s mem=58388KiB load=1.00 rootload=0.99
bv2int %0)) (mod (+ 37 #718 #722) 64)) 422350340358076 := 412769900552 << 10
(smt.stats   44   5966 146405 348312  4447/4180/490    8149/993    39  256   56.38)
(smt.stats   45   6067 147526 352434  4457/4189/490    8267/993    39  256   56.47)
(smt.stats   46   6178 150241 365503  4459/4191/490    8395/993    39  256   56.47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   47   6300 152229 377357  4458/4192/491    8524/1018    40  264   56.47)
(smt.stats   48   6434 155253 388569  4460/4194/491    8696/1018    40  264   56.47)
(sat.ddfw       1      1   16.7173    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.895s mem=59304KiB load=1.09 rootload=1.09
(smt.stats   49   6581 158649 401672  4503/4198/491    8958/1018    40  264   56.85)
(smt.stats   50   6742 162808 416780  4533/4242/491    9190/1020    40  264   56.85)
(smt.stats   51   6919 168897 438978  4537/4271/492    9416/1083    41  266   57.03)
(sat.ddfw       1      1   15.9511    790001      3872         12            1       80)
(smt.stats   52   7113 174259 456380  4541/4275/492    9684/1083    41  266   57.03)
(smt.stats   53   7326 179922 481938  4553/4282/492    9991/1083    41  266   57.03)
ramon: poll                 wall=8.000s usage=7.932s mem=59332KiB load=1.04 rootload=1.04
(smt.stats   54   7560 184414 505867  4583/4313/496   10293/1143    42  274   57.12)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1 := 1&137875161088
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1&137891987456
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1 := 1&137891987456
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1 := 1&137891987456
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1 := 1&137891987456
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 0 := 1&137875161088
band: (band[38] (if (= #109 37) 1 (if #567 2 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1 := 1&137875161088
(smt.stats   55   7661 186603 512789  4598/4317/496   10413/1144    42  274   57.22)
(smt.stats   56   7772 189621 523354  4608/4328/506   10533/1176    43  279   57.22)
(smt.stats   57   7894 191153 530031  4622/4350/506   10660/1176    43  279   57.22)
(smt.stats   58   8028 194188 539777  4650/4376/509   10799/1196    44  286   57.22)
(smt.stats   59   8175 199292 561577  4662/4384/509   10985/1196    44  286   57.32)
(sat.ddfw       1      1    14.803    920001      4509         13            1       93)
(smt.stats   60   8336 205220 579886  4710/4403/509   11193/1198    44  286   57.32)
ramon: poll                 wall=9.000s usage=8.930s mem=59596KiB load=1.00 rootload=1.00
(smt.stats   61   8513 208804 595195  4715/4441/510   11374/1244    45  292   57.75)
(smt.stats   62   8707 212229 606905  5036/4444/510   11589/1246    45  292   57.84)
(smt.stats   63   8920 214630 624489  5087/4786/510   11846/1247    45  292   57.96)
ramon: poll                 wall=10.000s usage=9.919s mem=59904KiB load=0.99 rootload=0.98
(smt.stats   64   9154 218746 642725  5135/4818/510   12121/1248    45  292   58.06)
(sat.ddfw       1      1   13.7945   1060001      5196         14            1      108)
(smt.stats   65   9411 221989 675117  5143/4865/510   12403/1248    45  292   58.06)
(smt.stats   66   9512 223112 683556  5145/4871/510   12524/1248    45  292   58.06)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   67   9623 227714 699610  5148/4874/510   12661/1248    45  292   58.06)
(smt.stats   68   9745 232380 725347  5167/4876/510   12789/1248    45  292   58.06)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 64 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 64 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 512 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 512 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2048 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2048 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2048 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2048 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4096 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4096 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16384 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 32768 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 65536 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 65536 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 131072 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 262144 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 524288 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1048576 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 2097152 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4194304 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8388608 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16777216 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 33554432 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16777216 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8388608 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 6291456 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 6291456 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 6291456 := 68719476736&274877898751
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 6291456 := 68719476736&274877898751
(smt.stats   69   9879 235643 741431  5280/4897/510   13017/1257    45  292   58.34)
ramon: poll                 wall=11.000s usage=10.916s mem=60340KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 238793 754482  5342/4999/587   13228/1319    46  307   58.34)
(smt.stats   71  10187 243857 775648  5438/5086/587   13537/1321    46  307   58.44)
(sat.ddfw       1      1   12.9266   1210001      5931         15            1      123)
(smt.stats   72  10364 245984 789100  5500/5169/587   13716/1477    47  312   58.44)
ramon: poll                 wall=12.000s usage=11.913s mem=60616KiB load=1.00 rootload=1.00
(smt.stats   73  10558 253614 811848  5546/5270/588   13950/1477    47  312   58.44)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 4194304 := 2147483648&137866813440
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 1048576 := 2147483648&137891995648
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16 := 2147483648&137891995648
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16 := 2147483648&137891995648
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 8192 := 2147483648&137891996672
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 32768 := 2147483648&137891996672
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 16384 := 2147483648&137891996672
(smt.stats   74  10771 263824 843627  5667/5274/588   14354/1507    48  313   58.64)
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 67108864 := 2147483648&137866814464
band: (band[38] (if (= #309 63) 1 (if #545 2 #711)) (shl[64] (* 2 #292) (mod #726 64))) 67108864 := 2147483648&137866814464
(smt.stats   75  11005 266184 858544  5760/5480/614   14668/1593    49  319   58.64)
(smt.stats   76  11262 269202 876032  5819/5486/619   15108/1593    49  319   58.83)
ramon: poll                 wall=13.000s usage=12.910s mem=61112KiB load=1.00 rootload=0.99
(smt.stats   77  11544 273189 901426  5927/5619/625   15626/1837    50  323   58.93)
(smt.stats   78  11645 274495 910350  5945/5629/625   15738/1837    50  323   58.93)
(sat.ddfw       1      1   12.1784   1370001      6715         16            1      139)
(smt.stats   79  11756 276425 920495  5968/5645/625   15847/1837    50  323   58.93)
(smt.stats   80  11878 280160 934018  5975/5661/625   16055/1837    50  323   58.93)
(smt.stats   81  12012 282616 946225  5993/5682/627   16471/1887    51  339   59.04)
ramon: poll                 wall=14.000s usage=13.907s mem=61440KiB load=1.00 rootload=1.00
(smt.stats   82  12159 288782 968595  6125/5682/627   16656/1891    51  339   59.13)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12320 293019 1000706  6141/5830/627   16829/1891    51  339   59.13)
(smt.stats   84  12497 295919 1022616  6143/5832/629   17017/2035    52  350   59.13)
(smt.stats   85  12691 298469 1050343  6175/5836/629   17243/2036    52  350   59.13)
(sat.ddfw       1      1   11.4974   1540001      7549         17            1      156)
(smt.stats   86  12904 302656 1082848  6237/5917/631   17646/2042    53  351   59.23)
ramon: poll                 wall=15.000s usage=14.976s mem=61660KiB load=1.07 rootload=1.07
(smt.stats   87  13138 306612 1106031  6247/5923/631   17946/2042    53  351   59.33)
(smt.stats   88  13395 316448 1148917  6304/5953/632   18249/2089    54  355   59.94)
(smt.stats   89  13677 323320 1179896  6340/6012/635   18626/2098    55  365   60.16)
ramon: poll                 wall=16.000s usage=16.057s mem=62024KiB load=1.08 rootload=1.08
(smt.stats   90  13987 334383 1230803  6355/6035/638   19376/2110    56  382   60.38)
(sat.ddfw       1      1   11.0274   1720001      8431         18            1      174)
(smt.stats   91  14088 337349 1238083  6356/6036/638   19549/2110    56  382   60.38)
(smt.stats   92  14199 340089 1245942  6373/6038/639   19699/2114    56  382   60.48)
(smt.stats   93  14321 345529 1266648  6515/6133/640   19878/2114    56  382   60.70)
ramon: poll                 wall=17.000s usage=17.059s mem=62652KiB load=1.00 rootload=1.00
(smt.stats   94  14455 348002 1280833  6539/6184/640   20009/2308    57  401   60.70)
(smt.stats   95  14602 354692 1306684  6547/6205/641   20343/2308    57  401   60.70)
(smt.stats   96  14763 357917 1337661  6563/6221/642   20894/2394    58  409   61.08)
(smt.stats   97  14940 361735 1362731  6694/6322/644   21660/2394    58  409   61.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 19)
ramon: poll                 wall=18.000s usage=18.049s mem=63316KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   10.4781   1910001      9362         19            1      193)
(smt.stats   98  15134 367781 1401566  6703/6331/644   22251/2394    58  409   61.37)
(smt.stats   99  15347 375690 1435960  6777/6334/644   22580/2483    59  412   61.47)
ramon: poll                 wall=19.000s usage=19.045s mem=63520KiB load=1.00 rootload=0.99
(smt.stats  100  15581 381430 1466555  6937/6419/644   22895/2483    59  412   61.66)
(smt.stats  101  15838 386923 1511379  7225/6592/645   23414/2510    60  415   61.76)
ramon: poll                 wall=20.000s usage=20.043s mem=63828KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:21:04 2024
ramon: root.execname        z3
ramon: root.utime           20.060s
ramon: root.stime           0.030s
ramon: group.total          20.102s
ramon: group.utime          20.066s
ramon: group.stime          0.036s
ramon: group.mempeak        64340KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.00
