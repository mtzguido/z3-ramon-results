ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:01:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28272 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/H8UNjCZPrJHp.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4154471
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2224    328   594/493/101     114/19     4   15   18.78)
(smt.stats    1    202   3466    789   943/740/101     264/22     4   15   18.97)
(smt.stats    2    313   5150   2460  1029/934/106     424/42     6   21   18.97)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 32768&130288
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 32768&65552
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 196624 := 196624 << 15
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 32768&34408
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 32768&34408
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 32768&34408
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32768 := 32768&34408
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 165480 := 165480 << 15
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32768 := 32768&34408
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 165480 := 165480 << 15
(smt.stats    3    414   6138   4767  1387/1241/128     714/54     7   23   19.16)
(smt.stats    4    525   7199   7090  1466/1308/132     905/109     9   31   19.26)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&131026
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 131026 := 131916 << 1
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&131026
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 131026 := 131916 << 1
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&130958
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 130958 := 131848 << 1
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&130959
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 130959 := 131848 << 1
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&130963
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 130963 := 131848 << 1
(smt.stats    5    647   8314  10070  1616/1393/133    1181/124    10   31   19.36)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&128
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 129 := 32 << 2
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&128
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 129 := 32 << 2
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&128
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 1 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&128
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 2 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&128
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 1 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&128
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 2 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&128
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 2 := 2&128
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&264
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 2 := 2&264
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2&400
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 2 := 2&400
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748   9293  11935  1671/1559/180    1381/175    12   51   19.55)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&80
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 80 := 40 << 13
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 512&96
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 96 := 48 << 9
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 1024&92
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 92 := 46 << 10
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 2048&88
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 88 := 44 << 11
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 256&100
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 100 := 50 << 8
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 128&104
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 104 := 52 << 7
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 64 := 64&108
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 108 := 54 << 6
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4 := 32&112
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 8 := 32&112
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16 := 32&112
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32 := 32&112
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 112 := 56 << 5
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16 := 16&116
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 116 := 58 << 4
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 8 := 8&120
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 120 := 60 << 3
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4 := 4&124
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 124 := 62 << 2
(smt.stats    7    859  10358  13860  1741/1572/181    1558/176    12   51   19.84)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 8 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 64 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 24 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 64 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 64 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1 := 16384&76
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 16384&76
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 76 := 38 << 14
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 24 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 24 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 64 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 64 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1 := 4096&84
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 4096&84
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 84 := 42 << 12
(smt.stats    8    981  11616  16899  1945/1811/308    1715/252    14  132   20.14)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 128 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 256 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 512 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1024 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2048 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4096 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 8192 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 8192 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16384 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 128 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 256 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1024 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4096 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16384 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 16384 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 512 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 512 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 512 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 32768&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 65581 := 35 << 16
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 32768&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 65581 := 35 << 16
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 32768&65536
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 65581 := 35 << 16
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 8192 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2048 := 32768&65536
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 32768 := 32768&65536
(smt.stats    9   1115  13408  20116  2094/1845/308    2029/261    14  132   20.45)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 128 := 8192&132
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2 := 8192&130
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&128
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 2359424 := 74 << 13
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&128
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 2359424 := 74 << 13
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&128
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 2359424 := 74 << 13
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 256 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 256 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1024 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1024 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1024 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1024 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2048 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 2048 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4096 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 4096 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 8192 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 81965 := 37 << 14
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 81965 := 37 << 14
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 81965 := 37 << 14
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 81965 := 37 << 14
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 4 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 8 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 16 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 4 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 8 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 16 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 32 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 64 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 128 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 256 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 512 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 1024 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 2048 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 4096 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 8192 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 16 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 32 := 8192&81920
(smt.stats   10   1216  15357  27562  2246/1950/388    2241/298    15  152   20.94)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 4096 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 8192 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 4096 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 512 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 1024 := 8192&81920
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 8192&81920
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 1536 := 8192&81920
(smt.stats   11   1327  16855  33165  2254/2111/521    2570/396    17  184   21.13)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  20056  40714  2464/2268/526    3135/425    18  187   21.42)
ramon: poll                 wall=1.005s usage=0.957s mem=22964KiB load=0.95 rootload=0.93
(smt.stats   13   1583  23601  52542  2585/2355/545    3617/600    20  247   21.89)
(smt.stats   14   1730  28536  63704  2679/2412/545    3892/636    21  254   21.99)
(smt.stats   15   1831  31752  73550  2801/2469/545    4096/638    21  254   22.09)
ramon: poll                 wall=2.000s usage=1.946s mem=23676KiB load=0.99 rootload=0.99
(smt.stats   16   1942  34554  82977  2879/2659/549    4528/673    22  258   22.28)
(smt.stats   17   2064  36960  89968  2933/2672/549    4930/673    22  258   22.47)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 1 := 1&64
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 1&64
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 127 := 65568 << 1
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 1&64
shl: (shl[17] (bv2int %0) (+ 17 (* 131071 #120))) 127 := 65568 << 1
(smt.stats   18   2198  39757 104189  3056/2785/550    5625/789    23  272   22.76)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 0 := 1&64
band: (band[17] (if (= #124 16) 1 (if #360 2 #390)) (shl[17] (bv2int %0) (+ 17 #393))) 1 := 1&64
(smt.stats   19   2345  42145 120097  3143/2872/567    6278/825    24  282   23.04)
ramon: poll                 wall=3.000s usage=2.944s mem=24932KiB load=1.00 rootload=0.99
(smt.stats   20   2506  43057 125279  3227/2903/567    6472/856    25  288   24.40)
ramon: poll                 wall=4.000s usage=3.942s mem=25784KiB load=1.00 rootload=1.00
(smt.stats   21   2607  43830 129910  3961/3586/567    6689/857    25  288   24.31)
ramon: poll                 wall=5.000s usage=4.939s mem=26068KiB load=1.00 rootload=0.99
(smt.stats   22   2718  44570 133172  4445/3915/567    6882/857    25  288   24.31)
(smt.stats   23   2840  45202 136504  4735/4226/567    7040/859    25  288   24.40)
ramon: poll                 wall=6.000s usage=5.884s mem=25956KiB load=0.95 rootload=0.95
ramon: poll                 wall=7.000s usage=6.882s mem=26364KiB load=1.00 rootload=1.00
(smt.stats   24   2974  45632 138445  4873/4540/567    7184/861    25  288   24.78)
(smt.stats   25   3121  47849 153101  5450/5107/568    7817/912    26  290   24.69)
(smt.stats   26   3282  51268 176733  5484/5196/568    8702/914    26  290   24.88)
ramon: poll                 wall=8.000s usage=7.879s mem=26676KiB load=1.00 rootload=0.99
(smt.stats   27   3459  57866 202519  5516/5207/568    9778/914    26  290   25.07)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   28   3560  59034 212023  5524/5244/574   10562/1610    27  293   25.16)
(smt.stats   29   3671  60614 228511  5527/5246/576   11305/1807    28  359   25.16)
(smt.stats   30   3793  63010 244011  5545/5265/577   11993/1807    28  359   25.46)
(smt.stats   31   3927  66403 256675  5585/5274/577   12608/1807    28  359   25.65)
ramon: poll                 wall=9.000s usage=8.870s mem=27304KiB load=0.99 rootload=0.99
(smt.stats   32   4074  70703 276249  5620/5328/578   13317/1905    29  366   25.75)
(smt.stats   33   4236  78345 309996  5694/5389/581   14292/2021    30  388   25.84)
ramon: poll                 wall=10.005s usage=9.871s mem=27432KiB load=1.00 rootload=1.00
(smt.stats   34   4413  82732 335699  5755/5415/581   14926/2023    30  388   25.94)
(smt.stats   35   4607  90593 355811  5773/5487/582   15759/2136    31  392   26.03)
ramon: poll                 wall=11.000s usage=10.853s mem=27848KiB load=0.99 rootload=0.98
(smt.stats   36   4708  94940 371303  5822/5534/585   16111/2240    32  412   26.23)
(smt.stats   37   4819  99101 382072  5852/5551/585   16549/2242    32  412   26.23)
(smt.stats   38   4941 103739 393573  5886/5580/585   17161/2243    32  412   26.51)
ramon: poll                 wall=12.000s usage=11.850s mem=28520KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 105840 412332  5914/5617/586   17790/2243    32  412   26.61)
(smt.stats   40   5222 109935 429105  5986/5651/586   18478/2366    33  426   26.80)
ramon: poll                 wall=13.000s usage=12.849s mem=28536KiB load=1.00 rootload=1.00
(smt.stats   41   5383 114992 449213  6042/5711/587   19105/2366    33  426   26.99)
(smt.stats   42   5560 119144 468834  6133/5765/587   19692/2410    34  427   26.99)
ramon: poll                 wall=14.000s usage=13.849s mem=28792KiB load=1.00 rootload=1.00
(smt.stats   43   5754 123418 504814  6198/5862/589   20291/2410    34  427   27.08)
ramon: poll                 wall=15.000s usage=14.848s mem=28924KiB load=1.00 rootload=1.00
(smt.stats   44   5967 129962 533830  6285/5998/590   21061/2446    35  442   27.18)
(smt.stats   45   6068 132842 542964  6294/6003/590   21681/2446    35  442   27.28)
(smt.stats   46   6179 135590 553040  6395/6050/590   22097/2447    35  442   27.66)
ramon: poll                 wall=16.000s usage=15.847s mem=29700KiB load=1.00 rootload=1.00
(smt.stats   47   6301 138839 567934  6452/6101/590   22375/2544    36  445   27.66)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6435 142269 587826  6480/6181/593   22930/2547    36  445   27.86)
(smt.stats   49   6582 146776 609565  6483/6182/593   23548/2547    36  445   27.95)
ramon: poll                 wall=17.000s usage=16.843s mem=29760KiB load=1.00 rootload=0.99
(smt.stats   50   6743 154157 645734  6536/6186/593   23989/2616    37  474   27.95)
(smt.stats   51   6920 161909 682689  6567/6246/594   24804/2616    37  474   28.05)
ramon: poll                 wall=18.000s usage=17.842s mem=30088KiB load=1.00 rootload=1.00
(smt.stats   52   7114 169046 706561  6590/6279/594   25582/2661    38  482   28.24)
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 65536 := 65536&114688
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 114688 := 36380 << 16
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 65536 := 65536&114688
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 298172416 := 36380 << 16
band: (band[17] (if (= #408 31) 1 (if #410 2 #470)) (shl[32] (* 2 #118) (mod #492 32))) 65536 := 65536&114688
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 16 #477 #215 #401) 32)) 298172416 := 36380 << 16
(smt.stats   53   7327 171752 732392  6646/6312/595   26196/2663    38  482   28.52)
ramon: poll                 wall=19.000s usage=18.842s mem=30404KiB load=1.00 rootload=1.00
(smt.stats   54   7561 177099 755047  6828/6507/603   26928/2794    39  497   28.71)
(smt.stats   55   7662 177977 775270  6836/6512/603   27220/2794    39  497   28.71)
(smt.stats   56   7773 180072 789862  6837/6516/604   27484/2794    39  497   28.90)
ramon: poll                 wall=20.000s usage=19.841s mem=30548KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:02:08 2024
ramon: root.execname        z3
ramon: root.utime           19.850s
ramon: root.stime           0.030s
ramon: group.total          19.897s
ramon: group.utime          19.857s
ramon: group.stime          0.040s
ramon: group.mempeak        30804KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              0.99
