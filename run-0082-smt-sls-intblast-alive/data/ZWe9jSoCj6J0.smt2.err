ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:43:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27883 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ZWe9jSoCj6J0.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             851444
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1       125     10000        49          0            1        2)
(sat.ddfw       1      1   77.5271     20001        98          1            1        3)
(smt.stats    0    101   3305    785   681/616/130      82/9    14   32   51.65)
(sat.ddfw       1      1        80     40001       196          2            1        5)
(sat.ddfw       1      1   71.4286     70001       343          3            1        8)
(smt.stats    1    202   3980   1489  1334/1162/130     212/14    14   32   51.94)
(sat.ddfw       1      1   64.9351    110001       539          4            1       12)
(smt.stats    2    313   4794   3014  1405/1269/131     417/17    15   34   51.94)
(smt.stats    3    414   6186   5515  1429/1305/134     585/40    16   36   51.94)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 268435455&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 268435455&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 268435455&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 4&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 4&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 4&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 16&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 32&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&511
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 268435456 := 268435454 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&511
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 268435456 := 268435454 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&511
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 268435455 := 264503296 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8397824&511
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 511 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 511 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8397824&511
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 510 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8397824&511
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 508 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8397824&511
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 504 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8397824&511
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 496 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8397824&511
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 480 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8397824&511
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 448 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8397824&511
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 384 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 32 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 64 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 128 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 8397824&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 4194304&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 256&511
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 256 := 129 << 10
(smt.stats    4    525   7768   8600  1498/1371/222     743/90    19   70   52.63)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 1024&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 1024&511
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 2048&511
(sat.ddfw       1      1   58.3419    160000       784          5            1       17)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 2560&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 2048&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 2064&31
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 268437520 := 134479875 << 6
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 2048&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 2048&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 2064&31
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 268437520 := 138674179 << 6
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 17896000&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17896000&31
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 268435455 := 205800521 << 6
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895744&31
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 205800518 := 205800517 << 6
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895872&31
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 205800520 := 205800519 << 6
ramon: poll                 wall=1.000s usage=0.819s mem=54772KiB load=0.82 rootload=0.81
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 6 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 147206144&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 1 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 147206144&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 4 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 147206144&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 8 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 147206144&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 16 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 147206144&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 5 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 147206144&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 4 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 147206144&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 8 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 147206144&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 16 := 147206144&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 1 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 4 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 8 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 16 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 29 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 28 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 24 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 16 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 16 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 1 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 17895936&31
(smt.stats    5    647   9567  11740  1634/1485/277     959/125    21   87   52.73)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 4 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 4 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 4 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 2 := 17895936&31
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 17895936&31
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 8 := 17895936&31
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  11544  14035  1671/1510/292    1096/126    21   87   52.82)
(smt.stats    7    859  13904  18667  1729/1536/307    1315/144    22   93   52.95)
(sat.ddfw       1      1    52.039    220001      1078          6            1       23)
(smt.stats    8    981  15693  24512  1863/1698/319    1829/240    24  113   53.06)
(smt.stats    9   1115  19515  32123  1922/1715/319    2096/266    25  123   53.26)
(smt.stats   10   1216  21637  36758  1971/1769/319    2247/266    25  123   53.26)
(sat.ddfw       1      1   46.8541    290001      1421          7            1       30)
(smt.stats   11   1327  25013  45376  2012/1826/320    2469/299    26  128   53.26)
(smt.stats   12   1449  26561  48974  2107/1847/322    2809/315    27  129   53.35)
(smt.stats   13   1583  29276  57433  2280/1973/324    3194/348    28  136   53.54)
(sat.ddfw       1      1   42.2833    370001      1813          8            1       38)
ramon: poll                 wall=2.000s usage=1.820s mem=55628KiB load=1.00 rootload=1.00
(smt.stats   14   1730  32713  72253  2305/2131/325    3544/373    29  145   53.54)
(smt.stats   15   1831  34280  78595  2336/2139/325    3970/373    29  145   53.64)
(smt.stats   16   1942  36292  86138  2399/2213/328    4396/516    30  154   53.83)
(sat.ddfw       1      1   38.1033    460001      2254          9            1       47)
(smt.stats   17   2064  37298  91961  2578/2263/328    4785/536    30  154   54.02)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2198  38578 102187  2711/2414/329    5164/624    31  155   54.02)
(smt.stats   19   2345  40567 109295  2729/2521/331    5604/648    32  156   54.23)
(sat.ddfw       1      1    35.014    560001      2745         10            1       57)
ramon: poll                 wall=3.000s usage=2.794s mem=56392KiB load=0.97 rootload=0.97
(smt.stats   20   2506  43342 120845  2738/2540/336    6192/727    33  175   54.33)
(smt.stats   21   2607  45034 129859  2856/2544/336    6492/741    33  175   54.43)
(smt.stats   22   2718  46633 138488  2942/2742/337    6648/820    34  281   54.52)
(sat.ddfw       1      1   32.4006    670001      3284         11            1       68)
(smt.stats   23   2840  47714 144312  3057/2766/337    6959/833    34  281   54.62)
(smt.stats   24   2974  48145 150078  3059/2853/337    7148/864    35  282   54.62)
(smt.stats   25   3121  49916 159166  3094/2867/337    7564/864    35  282   54.91)
ramon: poll                 wall=4.000s usage=3.828s mem=57212KiB load=1.03 rootload=1.04
(sat.ddfw       1      1   30.0601    790001      3872         12            1       80)
(smt.stats   26   3282  54410 186682  3133/2896/338    7836/865    35  282   54.91)
(smt.stats   27   3459  58566 207714  3167/2959/345    8323/919    37  298   55.01)
(smt.stats   28   3560  60720 216978  3175/2967/346    8721/919    37  298   55.10)
(smt.stats   29   3671  61986 221044  3209/3001/346    8882/919    37  298   55.24)
(smt.stats   30   3793  65198 232891  3224/3018/347    9074/1019    38  330   55.24)
(sat.ddfw       1      1   28.0414    920001      4509         13            1       93)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 18 := 172490783&32767
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 172490770&32767
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 172490770&32767
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 172490770&32767
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 172490770&32767
(smt.stats   31   3927  68661 244067  3331/3027/349    9349/1029    38  330   55.33)
ramon: poll                 wall=5.000s usage=4.830s mem=57412KiB load=1.00 rootload=1.00
(smt.stats   32   4074  73046 264181  3367/3141/355    9792/1070    39  333   55.56)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 27 := 10759197&255
(sat.ddfw       1      1   26.7431   1060001      5196         14            1      108)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 17 := 17895453&255
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4235  75441 277220  3588/3170/355   10353/1076    39  333   55.56)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 21 := 2589&255
(smt.stats   34   4412  76442 285701  3664/3397/355   10774/1104    40  333   55.72)
(smt.stats   35   4606  81953 309930  3675/3461/360   11483/1107    40  333   55.72)
(smt.stats   36   4707  83519 325743  3680/3474/360   11738/1141    41  334   55.82)
ramon: poll                 wall=6.000s usage=5.865s mem=57972KiB load=1.04 rootload=1.03
(sat.ddfw       1      1    25.092   1210001      5931         15            1      123)
(smt.stats   37   4818  85741 338791  3728/3474/360   12152/1146    41  334   55.91)
(smt.stats   38   4940  86596 346183  3744/3531/360   12438/1146    41  334   55.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 11)
(smt.stats   39   5074  88027 358484  3757/3551/362   12911/1238    42  336   56.01)
(smt.stats   40   5221  88632 363615  3757/3551/362   13083/1238    42  336   56.01)
(smt.stats   41   5382  90805 371953  3791/3562/362   13540/1238    42  336   56.01)
(smt.stats   42   5559  92607 385144  3818/3607/362   14223/1238    42  336   56.28)
(sat.ddfw       1      1   23.6197   1370001      6715         16            1      139)
ramon: poll                 wall=7.000s usage=6.867s mem=58652KiB load=1.00 rootload=1.00
(smt.stats   43   5753  96410 417524  3979/3613/362   14835/1392    43  348   56.37)
(smt.stats   44   5966  99804 439089  4178/3796/362   15834/1396    43  348   56.46)
(smt.stats   45   6067 100283 444086  4189/3975/364   16193/1549    44  351   56.57)
(smt.stats   46   6178 101356 450203  4215/3982/364   16538/1551    44  351   56.57)
(sat.ddfw       1      1   22.3185   1540001      7549         17            1      156)
(smt.stats   47   6300 103756 468892  4321/4013/364   16924/1551    44  351   56.66)
ramon: poll                 wall=8.000s usage=7.866s mem=58792KiB load=1.00 rootload=1.00
(smt.stats   48   6434 106434 490301  4332/4118/365   17414/1551    44  351   56.66)
(smt.stats   49   6581 108962 514383  4347/4126/365   18152/1615    45  356   56.76)
(sat.ddfw       1      1   21.1466   1720001      8431         18            1      174)
(smt.stats   50   6742 111559 529614  4490/4147/365   18674/1618    45  356   56.99)
(smt.stats   51   6919 114647 544557  4532/4302/365   19050/1618    45  356   56.99)
ramon: poll                 wall=9.000s usage=8.866s mem=59152KiB load=1.00 rootload=1.00
(smt.stats   52   7113 117556 561874  4618/4338/365   19906/1625    45  356   57.09)
(sat.ddfw       1      1   20.1037   1910001      9362         19            1      193)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7326 121900 593640  4875/4450/365   20772/1629    45  356   57.38)
ramon: poll                 wall=10.000s usage=9.868s mem=59812KiB load=1.00 rootload=1.00
(smt.stats   54   7560 125703 629014  5030/4706/365   21694/1632    45  356   57.47)
(smt.stats   55   7661 127684 645252  5061/4829/365   21899/1633    45  356   57.47)
(sat.ddfw       1      1   19.1571   2110001     10343         20            1      214)
(smt.stats   56   7772 129992 660927  5091/4853/365   22465/1633    45  356   57.57)
(smt.stats   57   7894 132566 678896  5148/4877/365   22876/1638    45  356   57.57)
ramon: poll                 wall=11.000s usage=10.868s mem=59868KiB load=1.00 rootload=1.00
(smt.stats   58   8028 133810 687092  5155/4941/365   24114/1638    45  356   57.76)
(smt.stats   59   8175 134645 695674  5158/4944/365   24440/1638    45  356   57.76)
(sat.ddfw       1      1   18.2991   2320001     11372         21            1      235)
(smt.stats   60   8336 137925 722696  5202/4946/365   25006/1641    45  356   57.76)
(smt.stats   61   8513 140622 750972  5219/4996/365   25483/1641    45  356   58.10)
ramon: poll                 wall=12.000s usage=11.870s mem=60180KiB load=1.00 rootload=1.00
(smt.stats   62   8707 142287 759919  5452/5009/366   25755/2160    46  359   58.29)
(sat.ddfw       1      1   17.5159   2540001     12451         22            1      257)
(smt.stats   63   8920 145602 804901  5770/5278/366   26264/2166    46  359   58.29)
ramon: poll                 wall=13.000s usage=12.870s mem=60820KiB load=1.00 rootload=1.00
(smt.stats   64   9154 147505 828282  5783/5569/366   27007/2166    46  359   58.66)
(smt.stats   65   9411 151880 861529  5808/5588/368   28135/2229    47  361   58.94)
(smt.stats   66   9512 153557 875369  5867/5647/369   29283/2229    47  361   59.13)
(sat.ddfw       1      1   16.7945   2770001     13578         23            1      280)
(smt.stats   67   9623 155810 897259  5951/5668/369   29810/2235    47  361   59.13)
ramon: poll                 wall=14.000s usage=13.871s mem=61260KiB load=1.00 rootload=1.00
(smt.stats   68   9745 158012 913383  6040/5746/369   30191/2451    48  392   59.23)
(smt.stats   69   9879 161820 960116  6117/5840/369   30664/2454    48  392   59.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 12)
(smt.stats   70  10026 163804 978843  6168/5906/369   30944/2455    48  392   59.33)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   71  10187 167088 1035454  6211/5989/370   31369/2570    49  398   59.33)
(sat.ddfw       1      1    16.129   3010001     14754         24            1      305)
ramon: poll                 wall=15.000s usage=14.871s mem=61444KiB load=1.00 rootload=1.00
(smt.stats   72  10364 169753 1074740  6231/5999/370   31772/2571    49  398   59.42)
(smt.stats   73  10558 174553 1134262  6238/6020/370   33416/2571    49  398   59.52)
ramon: poll                 wall=16.003s usage=15.875s mem=61772KiB load=1.00 rootload=1.01
(smt.stats   74  10771 181038 1205113  6242/6022/370   34140/2571    49  398   59.62)
(sat.ddfw       1      1   15.5145   3260001     15980         25            1      330)
(smt.stats   75  11005 184497 1236907  6256/6031/372   35250/2746    50  401   59.71)
(smt.stats   76  11262 190875 1286183  6297/6044/372   36026/2747    50  401   59.81)
ramon: poll                 wall=17.003s usage=16.875s mem=62028KiB load=1.00 rootload=1.00
(smt.stats   77  11544 195566 1337758  6339/6083/372   37254/2749    50  401   59.90)
(smt.stats   78  11645 195997 1347753  6344/6126/372   37461/2749    50  401   59.90)
(sat.ddfw       1      1   14.9434   3520001     17254         26            1      356)
(smt.stats   79  11756 196278 1352574  6344/6126/372   37685/2749    50  401   59.90)
(smt.stats   80  11878 197601 1365947  6360/6128/372   37913/2754    50  401   59.90)
(smt.stats   81  12012 199055 1386522  6383/6165/372   38499/2754    50  401   60.00)
ramon: poll                 wall=18.000s usage=17.875s mem=62340KiB load=1.00 rootload=1.00
(smt.stats   82  12159 201938 1415745  6409/6171/372   38877/2755    50  401   60.00)
(smt.stats   83  12320 203903 1459182  6420/6194/372   39095/2755    50  401   60.00)
(smt.stats   84  12497 204857 1480799  6422/6204/372   39999/2755    50  401   60.09)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 22&131071
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 22&131071
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 5 := 21&131071
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 12&131071
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8 := 8&131071
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 3221225480 := 264243200 << 18
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8 := 8&131071
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 3221225480 := 264243200 << 18
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8 := 8&131071
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 3221225480 := 264243200 << 18
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8 := 8&131071
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 3221225480 := 264253441 << 18
(smt.stats   85  12691 207704 1502262  6510/6217/372   40760/2759    50  401   60.79)
(sat.ddfw       1      1   14.4138   3790001     18578         27            1      383)
ramon: poll                 wall=19.000s usage=18.875s mem=62924KiB load=1.00 rootload=0.99
(smt.stats   86  12904 209730 1522939  6673/6306/377   41147/3194    51  402   61.02)
(smt.stats   87  13138 214179 1564213  6830/6544/379   42390/3196    51  402   61.11)
ramon: poll                 wall=20.000s usage=19.875s mem=63056KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:43:58 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.960s
ramon: group.utime          19.944s
ramon: group.stime          0.016s
ramon: group.mempeak        65364KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.088s
ramon: loadavg              0.99
