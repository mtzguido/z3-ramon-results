ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:19:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         43117 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1VI9eGz1jbBy.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2759812
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   2042    278  1184/1072/116      92/12     9   19   19.16)
(smt.stats    1    202   3851    922  1718/1552/119     191/27    11   22   19.36)
(smt.stats    2    313   6351   1454  2083/1831/120     302/33    12   24   19.45)
(smt.stats    3    414   8398   2317  2196/1984/125     415/35    13   26   19.45)
(smt.stats    4    525  10565   5513  2401/2016/125     515/61    13   26   19.55)
(smt.stats    5    647  13992   6786  2433/2195/125     640/87    14   31   19.64)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  16121   8222  2531/2279/126     758/91    15   33   19.75)
(smt.stats    7    859  18116  10181  2597/2352/126     868/91    15   33   19.75)
(smt.stats    8    981  19666  11719  2688/2432/127     988/96    16   37   19.84)
ramon: poll                 wall=1.000s usage=0.999s mem=21048KiB load=1.00 rootload=0.99
(smt.stats    9   1115  20476  12582  2792/2476/127    1126/98    16   37   20.04)
(smt.stats   10   1216  21198  13333  2912/2609/127    1251/98    16   37   20.04)
ramon: poll                 wall=2.000s usage=1.999s mem=21164KiB load=1.00 rootload=1.00
(smt.stats   11   1327  22867  14385  3072/2841/129    1383/102    17   42   20.13)
ramon: poll                 wall=3.000s usage=2.991s mem=21296KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  24408  16816  3169/2917/130    1547/132    18   45   20.13)
(smt.stats   13   1583  27008  19740  3230/2955/130    1760/135    18   45   20.23)
(smt.stats   14   1730  28916  22438  3328/3024/130    1959/137    18   45   20.32)
(smt.stats   15   1831  31664  25092  3332/3103/132    2055/176    19   49   20.32)
(smt.stats   16   1942  34477  27249  3333/3104/132    2166/176    19   49   20.54)
(smt.stats   17   2064  36011  28990  3338/3109/132    2353/176    19   49   20.54)
(smt.stats   18   2198  40151  34514  3351/3114/132    2505/176    19   49   20.54)
(smt.stats   19   2345  43009  38011  3384/3137/132    2728/176    19   49   20.54)
(smt.stats   20   2506  44441  41573  3409/3178/134    2904/261    20   54   20.64)
(smt.stats   21   2607  47021  45132  3419/3180/134    3026/261    20   54   20.64)
(smt.stats   22   2718  49346  48378  3455/3188/134    3161/261    20   54   20.64)
(smt.stats   23   2840  51426  50532  3465/3230/134    3285/261    20   54   20.64)
(smt.stats   24   2974  53755  53289  3491/3251/137    3451/273    21   57   20.73)
(smt.stats   25   3121  56766  57486  3496/3264/137    3604/273    21   57   20.95)
(smt.stats   26   3282  61782  65482  3508/3272/137    3763/273    21   57   20.95)
ramon: poll                 wall=4.000s usage=3.991s mem=22180KiB load=1.00 rootload=1.00
(smt.stats   27   3459  67630  73626  3527/3281/137    4006/274    21   57   21.05)
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 281474976710656 := 96 << 45
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 35184372088832 := 35184372088832&35184372088832
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 879609302220800 := 96 << 45
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8796093022205 := 35184372088832&140737488355327
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8796093022204 := 35184372088832&140737488355326
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 18155135997837312 := 96 << 45
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 131941395333123 := 48 << 46
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&140737488355327
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&105553116266495
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 18119951625748479 := 96 << 45
(smt.stats   28   3560  69614  79151  3568/3304/137    4123/274    21   57   21.05)
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 3518437208883201 := 96 << 45
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 131941395333124 := 48 << 46
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 131941395333126 := 48 << 46
(smt.stats   29   3671  72058  84204  3605/3362/152    4257/315    22   60   21.14)
(smt.stats   30   3793  73982  88157  3620/3379/152    4384/315    22   60   21.14)
(smt.stats   31   3927  75813  92027  3624/3380/152    4517/318    23   60   21.14)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  77894  98889  3639/3399/158    4656/320    24   64   21.14)
(smt.stats   33   4235  82236 103815  3639/3399/158    4817/320    24   64   21.14)
(smt.stats   34   4412  86668 110875  3648/3404/158    4992/319    25   68   21.24)
(smt.stats   35   4606  89774 118816  3669/3425/158    5189/319    25   68   21.24)
(smt.stats   36   4707  92620 122875  3681/3438/158    5292/319    25   68   21.24)
(smt.stats   37   4818  94625 126077  3700/3453/158    5406/319    25   68   21.34)
(smt.stats   38   4940  97564 129788  3709/3469/158    5529/319    25   68   21.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 234)
(smt.stats   39   5074 100116 134973  3715/3470/158    5430/319    25   68   21.34)
(smt.stats   40   5221 102914 140978  3730/3482/158    5589/320    25   68   21.34)
(smt.stats   41   5382 106770 148288  3738/3498/158    5760/320    25   68   21.43)
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 549755813888&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 140737488355328 := 14 << 39
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 549755813887 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 549755813886 := 549755813888&549755813886
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 549755813884 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 16 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 32 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 64 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 128 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 256 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 512 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1024 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2048 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4096 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 16384 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 32768 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 65536 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 131072 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 262144 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1024 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1024 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2048 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4096 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4096 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4096 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 32768 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 65536 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 131072 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 524288 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1048576 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2097152 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4194304 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8388608 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 16777216 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 33554432 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 67108864 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 134217728 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 268435456 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 536870912 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1073741824 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2147483648 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4294967296 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8589934592 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17179869184 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 34359738368 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 68719476736 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 137438953472 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 274877906944 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 549755813888 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 274877906944 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1099511627776 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2199023255552 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4398046511104 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8796093022208 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17592186044416 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 35184372088832 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8796093022208 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4398046511104 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1099511627776 := 35184372088832&70368744177664
(smt.stats   42   5560 108611 152919  3953/3670/352    5997/352    26   81   22.57)
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17592186044416 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17592186044416 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17592186044416 := 35184372088832&70368744177664
ramon: poll                 wall=5.000s usage=4.990s mem=24064KiB load=1.00 rootload=1.00
(smt.stats   43   5754 113197 158830  4035/3706/373    6269/355    26   81   22.76)
ramon: poll                 wall=6.000s usage=5.990s mem=24080KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.989s mem=24080KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.989s mem=24140KiB load=1.00 rootload=1.00
(smt.stats   44   5967 117518 167118  4354/4102/375    6541/438    27  121   22.86)
ramon: poll                 wall=9.000s usage=8.989s mem=24160KiB load=1.00 rootload=1.00
(smt.stats   45   6068 121516 175691  4451/4162/380    6723/448    27  121   22.86)
(smt.stats   46   6179 125480 185836  4541/4288/390    6856/626    29  169   22.95)
ramon: poll                 wall=10.000s usage=9.988s mem=24336KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.988s mem=24372KiB load=1.00 rootload=0.99
(smt.stats   47   6301 127194 188919  4663/4297/390    6978/633    29  169   23.05)
(smt.stats   48   6435 129543 193376  4880/4627/393    7223/633    29  169   23.05)
(smt.stats   49   6583 132809 204418  4928/4657/402    7352/704    30  217   23.15)
ramon: poll                 wall=12.000s usage=11.987s mem=24480KiB load=1.00 rootload=1.00
(smt.stats   50   6744 137329 216290  4954/4679/402    7522/706    30  217   23.61)
(smt.stats   51   6921 141415 224682  5070/4767/402    7728/736    31  225   23.71)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7115 147355 237624  5124/4871/403    8050/736    31  225   23.71)
(smt.stats   53   7328 152187 249586  5139/4886/404    8295/821    33  229   23.82)
ramon: poll                 wall=13.000s usage=12.987s mem=25468KiB load=1.00 rootload=1.00
(smt.stats   54   7562 158046 260085  5176/4902/405    8623/821    33  229   24.01)
(smt.stats   55   7663 160070 263466  5218/4943/405    8736/821    33  229   24.10)
(smt.stats   56   7774 162946 267895  5257/4965/405    8855/838    34  235   24.10)
(smt.stats   57   7896 165883 272622  5280/5006/405    8984/839    34  235   24.10)
(smt.stats   58   8030 168095 277656  5311/5040/405    9121/840    34  235   24.20)
(smt.stats   59   8177 171859 287034  5340/5059/405    9302/840    34  235   24.20)
(smt.stats   60   8338 177198 296754  5350/5092/405    9484/840    34  235   24.20)
(smt.stats   61   8515 181048 308525  5356/5098/406    9668/870    35  240   24.30)
ramon: poll                 wall=14.000s usage=13.986s mem=25760KiB load=1.00 rootload=1.00
(smt.stats   62   8709 186258 320439  5390/5102/406    9879/870    35  240   24.39)
(smt.stats   63   8922 191308 332041  5414/5146/406   10115/870    35  240   24.39)
ramon: poll                 wall=15.000s usage=14.986s mem=26652KiB load=1.00 rootload=1.00
(smt.stats   64   9156 195261 345481  5415/5160/406   10354/870    35  240   25.28)
(smt.stats   65   9413 202829 373531  5425/5170/406   10659/870    35  240   25.28)
ramon: poll                 wall=16.000s usage=15.983s mem=27056KiB load=1.00 rootload=1.00
(smt.stats   66   9514 204150 378464  5582/5177/406   10787/882    35  240   25.38)
(smt.stats   67   9625 206164 382416  5657/5328/406   10931/883    35  240   25.47)
(smt.stats   68   9747 209142 392657  5695/5418/406   11136/886    35  240   25.57)
(smt.stats   69   9881 213215 403003  5747/5492/407   11270/920    36  242   25.66)
ramon: poll                 wall=17.000s usage=16.983s mem=27312KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028 216315 412777  5764/5501/407   11428/921    36  242   25.66)
(smt.stats   71  10189 222164 431202  5807/5513/407   11594/925    36  242   25.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10366 228061 454398  5919/5576/407   11794/928    36  242   25.86)
ramon: poll                 wall=18.000s usage=17.983s mem=27568KiB load=1.00 rootload=1.00
(smt.stats   73  10560 230435 461388  6121/5720/407   12004/935    36  242   25.95)
ramon: poll                 wall=19.000s usage=18.983s mem=27824KiB load=1.00 rootload=1.00
(smt.stats   74  10773 233169 466027  6489/6056/407   12240/938    36  242   26.14)
(smt.stats   75  11007 236987 474890  6661/6383/409   12518/979    37  242   26.24)
ramon: poll                 wall=20.000s usage=19.983s mem=27824KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:19:56 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.993s
ramon: group.utime          19.981s
ramon: group.stime          0.012s
ramon: group.mempeak        28080KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
