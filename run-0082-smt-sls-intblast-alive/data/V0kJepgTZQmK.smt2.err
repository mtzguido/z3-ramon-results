ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:35:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28040 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/V0kJepgTZQmK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             825295
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3758    844  1154/1045/103      81/6     9   18   51.95)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   106.383     10000        49          0            1        2)
(smt.stats    1    203   5759   3816  1902/1721/105     172/15    10   19   52.24)
(sat.ddfw       1      1   52.9153     20001        98          1            1        3)
(sat.ddfw       1      1   53.6193     40001       196          2            1        5)
(smt.stats    2    314   6273   4899  2239/1748/105     288/43    11   19   52.53)
(smt.stats    3    415   7937   6517  2432/2214/108     422/70    12   22   52.53)
(smt.stats    4    526   8457   8980  2633/2391/121     485/89    14   48   52.53)
(smt.stats    5    648  10060  10760  2722/2480/122     612/110    15   50   52.62)
(sat.ddfw       1      1   46.0123     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  10453  11276  2782/2505/122     719/112    15   50   52.72)
(smt.stats    7    860  11768  13716  2897/2635/122     843/112    15   50   52.72)
(smt.stats    8    982  13166  17352  2932/2690/124     975/130    16   51   52.72)
ramon: poll                 wall=1.000s usage=0.926s mem=54836KiB load=0.93 rootload=0.92
(smt.stats    9   1116  14884  20435  2948/2704/126    1110/142    17   55   52.82)
(smt.stats   10   1217  16114  22845  2985/2721/126    1215/149    18   55   52.82)
(sat.ddfw       1      1   39.0625    110001       539          4            1       12)
(smt.stats   11   1328  18120  25761  2995/2753/126    1325/149    18   55   52.82)
(smt.stats   12   1450  19137  29717  3008/2762/126    1450/149    18   55   52.92)
(smt.stats   13   1584  21234  32931  3018/2775/126    1588/149    18   55   53.05)
(smt.stats   14   1731  22921  36015  3034/2788/126    1751/149    18   55   53.05)
(smt.stats   15   1832  24327  45782  3038/2802/126    1857/149    18   55   53.05)
(smt.stats   16   1943  25546  50549  3049/2811/126    1973/149    18   55   53.05)
(smt.stats   17   2065  26568  53272  3067/2815/126    2097/149    18   55   53.05)
(sat.ddfw       1      1   33.4889    160000       784          5            1       17)
(smt.stats   18   2199  28605  58163  3134/2833/126    2242/151    18   55   53.18)
(smt.stats   19   2346  30402  62228  3158/2905/126    2392/151    18   55   53.18)
(smt.stats   20   2507  32180  65104  3224/2921/126    2570/154    18   55   53.27)
(smt.stats   21   2608  33299  68715  3323/3056/126    2678/154    18   55   53.27)
(smt.stats   22   2719  33853  71384  3340/3085/126    2793/154    18   55   53.27)
(smt.stats   23   2841  35918  74648  3352/3102/126    2917/154    18   55   53.27)
ramon: poll                 wall=2.000s usage=1.923s mem=55536KiB load=1.00 rootload=0.99
(smt.stats   24   2975  38389  77622  3386/3115/126    3054/154    18   55   53.27)
(sat.ddfw       1      1   29.3403    220001      1078          6            1       23)
(smt.stats   25   3122  39951  83047  3434/3155/126    3244/155    18   55   53.27)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   26   3283  41497  89920  3493/3198/126    3413/156    18   55   53.43)
(smt.stats   27   3460  43383  97032  3545/3307/127    3586/246    19   57   53.43)
(smt.stats   28   3561  44215 102738  3550/3308/127    3688/246    19   57   53.68)
(smt.stats   29   3672  46065 108998  3551/3313/127    3798/246    19   57   53.68)
(smt.stats   30   3794  47425 113483  3556/3315/127    3921/246    19   57   53.68)
(smt.stats   31   3928  48693 117157  3558/3320/128    4055/250    20   58   53.68)
(smt.stats   32   4075  50507 122567  3560/3322/128    4204/250    20   58   53.68)
(smt.stats   33   4236  54559 127403  3560/3322/128    4365/250    20   58   53.68)
(sat.ddfw       1      1   26.0126    290001      1421          7            1       30)
(smt.stats   34   4413  57429 136941  3562/3324/129    4545/300    21   61   53.68)
(smt.stats   35   4607  60625 142262  3563/3325/129    4745/300    21   61   53.68)
(smt.stats   36   4708  61549 148132  3564/3326/130    4839/310    22   74   53.84)
ramon: poll                 wall=3.000s usage=2.925s mem=55912KiB load=1.00 rootload=1.01
(smt.stats   37   4819  62382 152153  3573/3333/130    4955/310    22   74   53.84)
(smt.stats   38   4941  64388 161409  3571/3333/140    5090/325    23   95   53.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 35184372088830&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 4611650868415037440 := 34359738369 << 35
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
shl: (shl[45] (bv2int %0) (mod (bv2int %1) 45)) 1 := 34493955073 << 35
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34896609278&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34896609277&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34896609277&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 4611650868415037440 := 34493955074 << 35
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
shl: (shl[45] (bv2int %0) (mod (bv2int %1) 45)) 1 := 35030825985 << 35
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
shl: (shl[45] (bv2int %0) (mod (bv2int %1) 45)) 0 := 34493955073 << 35
(smt.stats   39   5075  66414 165384  3608/3365/161    5341/369    24  100   53.94)
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 34359738367 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 34359738366 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 34359738366 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 34359738366 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 34359738364 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 34359738360 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 34359738352 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 34359738364 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 2 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 34359738367 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 34359738366 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 8 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 16 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 32 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 64 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 128 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 256 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 512 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 256 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 1024 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 2048 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4096 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 8192 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 16384 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4096 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 32768 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 65536 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 131072 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 262144 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 524288 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 1048576 := 34359738368&34359738367
(smt.stats   40   5222  66949 167228  3773/3444/255    5498/378    24  100   54.79)
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4259840 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4259840 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4259840 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4227073 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4227073 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4228096 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4229120 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4229120 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4229120 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4227075 := 34359738368&34359738367
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 34359738368&34359738367
band: (band[45] (shl[45] (bv2int %0) (mod #104 45)) (if (= #593 44) 1 (if #595 3 #719))) 4227330 := 34359738368&34359738367
(sat.ddfw       1      1   23.2897    370001      1813          8            1       38)
(smt.stats   41   5383  69468 182763  4228/3790/290    5882/387    24  100   55.08)
ramon: poll                 wall=4.000s usage=3.912s mem=57536KiB load=0.99 rootload=0.97
(smt.stats   42   5560  73225 198939  4281/4035/309    6742/526    25  133   55.27)
(smt.stats   43   5754  77009 213433  4304/4046/311    6977/996    26  143   55.27)
(sat.ddfw       1      1   21.0133    460001      2254          9            1       47)
(smt.stats   44   5967  81024 233316  4332/4084/313    7344/1008    27  146   55.51)
(smt.stats   45   6068  84537 248302  4346/4097/314    7485/1111    28  151   55.51)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   46   6179  86681 258258  4396/4132/316    7640/1152    29  151   55.61)
(smt.stats   47   6301  89422 273566  4459/4160/316    7772/1154    29  151   55.61)
ramon: poll                 wall=5.000s usage=4.906s mem=58056KiB load=0.99 rootload=0.99
(smt.stats   48   6435  92292 290415  4519/4235/316    7903/1166    30  155   55.83)
(smt.stats   49   6582  94676 309057  4530/4275/317    8079/1166    30  155   55.83)
(sat.ddfw       1      1   19.2641    560001      2745         10            1       57)
(smt.stats   50   6743  98793 339018  4536/4283/317    8407/1180    31  157   55.92)
(smt.stats   51   6920 103175 374049  4546/4294/318    8585/1337    32  165   55.92)
(smt.stats   52   7114 110205 417002  4547/4295/318    8791/1337    32  165   55.92)
ramon: poll                 wall=6.000s usage=5.901s mem=58472KiB load=1.00 rootload=1.00
(smt.stats   53   7327 114948 438005  4793/4323/319    9034/1349    33  165   56.11)
(sat.ddfw       1      1   17.7821    670001      3284         11            1       68)
(smt.stats   54   7561 117235 451699  5108/4856/320    9430/1350    33  165   56.11)
(smt.stats   55   7662 120050 464259  5117/4863/320    9557/1350    33  165   56.11)
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 1&524287
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 1 := 1&524287
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 1 := 0 << 19
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 1 := 1&524287
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 1 := 1 << 19
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 0&524287
shl: (shl[45] (bv2int %0) (mod (bv2int %1) 45)) 1 := 0 << 19
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 0&524287
shl: (shl[45] (bv2int %0) (mod (bv2int %1) 45)) 1 := 0 << 19
(smt.stats   56   7773 121583 470260  5152/4872/320    9741/1411    34  171   56.40)
(smt.stats   57   7895 123056 477395  5210/4938/335    9879/1411    34  171   56.40)
(smt.stats   58   8029 125038 493155  5213/4944/340   10180/1493    35  185   56.50)
(smt.stats   59   8176 128115 518755  5237/4951/340   10349/1493    35  185   56.50)
ramon: poll                 wall=7.000s usage=6.902s mem=59004KiB load=1.00 rootload=1.00
(smt.stats   60   8337 130589 557072  5290/4998/340   10525/1493    35  185   56.50)
(smt.stats   61   8514 134887 590176  5322/5040/347   11369/1595    36  193   56.69)
(sat.ddfw       1      1   16.4541    790001      3872         12            1       80)
(smt.stats   62   8708 140926 641194  5340/5047/347   11633/1596    36  193   56.99)
(smt.stats   63   8921 149081 681035  5348/5064/347   12605/1596    36  193   57.11)
ramon: poll                 wall=8.000s usage=7.896s mem=59444KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   15.2905    920001      4509         13            1       93)
(smt.stats   64   9155 154277 692668  5493/5074/348   13179/1764    37  195   57.30)
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 137438953448 := 137438953449&137438953471
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 137438953449 := 137438953449&137438953471
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 137438953449 := 262144 << 37
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 137438953449 := 137438953449&137438953471
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 137438953449 := 262144 << 37
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 137438953449 := 137438953449&137438953471
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 137438953449 := 262144 << 37
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 137438953449 := 137438953449&137438953471
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 137438953449 := 262144 << 37
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 137438953449 := 137438953449&137438953471
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 137438953449 := 262144 << 37
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 137438953449 := 137438953449&137438953471
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 137438953449 := 262144 << 37
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 137438953449 := 137438953449&137438953471
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 137438953449 := 67107840 << 37
ramon: poll                 wall=9.000s usage=8.893s mem=59676KiB load=1.00 rootload=0.99
(smt.stats   65   9412 159591 718128  5767/5451/356   14056/1924    38  214   57.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   66   9513 160712 724236  5794/5509/356   14354/1924    38  214   57.68)
(sat.ddfw       1      1   14.1471   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=9.830s mem=59868KiB load=0.94 rootload=0.93
(smt.stats   67   9624 165198 741637  5802/5517/357   14556/1924    38  214   57.68)
(smt.stats   68   9746 170582 762855  5805/5520/358   14795/2004    39  223   57.68)
(smt.stats   69   9880 174432 784319  5812/5526/358   14959/2004    39  223   57.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10027 176504 797371  5886/5588/363   15244/2026    40  227   57.78)
(smt.stats   71  10188 183248 815746  5893/5594/364   15485/2026    40  227   57.88)
ramon: poll                 wall=11.000s usage=10.830s mem=60288KiB load=1.00 rootload=1.00
(smt.stats   72  10365 188874 856322  5897/5598/367   15700/2058    41  251   57.88)
(smt.stats   73  10559 195338 881118  5923/5624/369   16272/2062    42  257   57.88)
(sat.ddfw       1      1   13.3274   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.829s mem=60672KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.5816   1370001      6715         16            1      139)
(smt.stats   74  10772 202759 900939  6044/5686/371   16691/2138    43  278   58.29)
ramon: poll                 wall=13.000s usage=12.825s mem=60844KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.824s mem=60896KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.9014   1540001      7549         17            1      156)
(smt.stats   75  11006 207908 927184  6124/5761/372   17013/2138    43  278   58.72)
(smt.stats   76  11263 215858 978538  6128/5821/372   17501/2194    44  280   58.72)
ramon: poll                 wall=15.000s usage=14.823s mem=61388KiB load=1.00 rootload=1.00
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 0 := 2&7
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 2 := 2&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 105553116266498 := 1 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #341 64)) (if (= #738 63) 0 (if #740 1 #881))) 3 := 3&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #340) 64)) 70368744177667 := 2 << 3
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11545 220526 1007020  6214/5852/372   17950/2199    44  280   59.39)
(sat.ddfw       1      1   11.3087   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=15.821s mem=61624KiB load=1.00 rootload=0.99
(smt.stats   78  11646 221121 1009481  6416/5935/378   18082/2234    45  283   59.49)
(smt.stats   79  11757 222957 1018169  6558/6231/379   18247/2236    45  283   59.58)
ramon: poll                 wall=17.000s usage=16.817s mem=61924KiB load=1.00 rootload=1.00
(smt.stats   80  11879 226815 1029434  6562/6243/379   18377/2236    45  283   59.58)
(smt.stats   81  12013 229590 1045936  6567/6248/382   18624/2236    45  283   59.58)
(smt.stats   82  12160 232625 1068945  6583/6261/382   18831/2301    46  306   59.58)
(smt.stats   83  12321 235331 1095781  6597/6264/383   19160/2301    46  306   59.68)
(sat.ddfw       1      1   10.7679   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=17.816s mem=62060KiB load=1.00 rootload=1.00
(smt.stats   84  12498 238989 1122027  6626/6279/385   19509/2329    47  312   59.78)
(smt.stats   85  12692 242679 1137758  6641/6318/385   19719/2329    47  312   59.78)
(smt.stats   86  12905 246625 1170850  6642/6319/385   19958/2329    47  312   59.78)
(smt.stats   87  13139 250189 1197722  6642/6319/385   20214/2392    48  316   59.78)
ramon: poll                 wall=19.000s usage=18.869s mem=62028KiB load=1.05 rootload=1.05
(smt.stats   88  13396 256671 1239438  6652/6329/385   20585/2392    48  316   59.87)
(smt.stats   89  13678 263215 1282706  6661/6338/385   21845/2392    48  316   59.87)
(sat.ddfw       1      1   10.2706   2110001     10343         20            1      214)
(smt.stats   90  13988 270751 1329104  6675/6345/385   22721/2393    48  316   60.07)
ramon: poll                 wall=20.000s usage=19.868s mem=62496KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:36:18 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.030s
ramon: group.total          19.934s
ramon: group.utime          19.902s
ramon: group.stime          0.032s
ramon: group.mempeak        62516KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
