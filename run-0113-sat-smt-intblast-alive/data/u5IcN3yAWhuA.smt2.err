ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:43:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39912 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/u5IcN3yAWhuA.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3988987
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   222/222     0/0  64       0    18.51   0.00)
(sat.stats    102    614    0   222/222   102/34  64       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 308 :time 0.00)
(sat.stats    102    614    0   222/222   102/34  64       0    18.83   0.01)
(sat.stats    102    614    0   222/222   102/34  64       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 366418.83 :time 0.00)
(sat.stats    102    614    0   224/224    47/33  64       0    18.83   0.01)
(sat.stats    110    777    1   224/224    55/40  64       0    18.83   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    113    835    2   224/224    58/40  64       0    18.83   0.01)
(sat.stats    116    932    3   224/224    61/41  64       0    18.83   0.01)
(sat.stats    119   1075    4   224/224    64/44  64       0    18.83   0.01)
(sat.stats    122   1217    5   224/224    67/47  64       0    18.83   0.01)
(sat.stats    135   1888    6   224/224    80/55  64       0    18.93   0.02)
(sat.stats    138   2025    7   224/224    83/55  64       0    18.93   0.02)
(sat.stats    141   2154    8   224/224    86/57  64       0    18.93   0.02)
(sat.stats    144   2285    9   224/224    89/57  64       0    18.93   0.02)
(sat.stats    147   2391   10   224/224    92/57  64       0    18.93   0.02)
(sat.stats    150   2477   11   224/224    95/57  64       0    18.93   0.02)
(sat.stats    153   2586   12   224/224    98/57  64       0    18.93   0.02)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    308   7680   28   225/225   253/151  64       0    19.02   0.06)
(sat.stats    314   7976   30   225/225   259/151  64       0    19.02   0.06)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2620 :time 0.00)
(sat.stats    472  13386   56   224/224   417/229  67       0    19.12   0.09)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5225 :time 0.00)
lshr: (lshr[45] (bv2int %0) (+ 45 (* 35184372088831 #80))) 0 := 18 >>l 27
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 0&22614020194304
lshr: (lshr[64] (mod (div #57 2) 17592186044416) (mod (+ 44 #690 #692) 64)) 9 := 9 >>l 26
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 1&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 1 := 22614020194304&1
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 1 := 1&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 2&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 2 := 22614020194304&2
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 2 := 183427&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 28676 := 194452&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 83437&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 44424 := 22614020194304&83437
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 6&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 4 := 22614020194304&6
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 16368 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 64 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 15776 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 128 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 46080 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 512 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 256 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 75776 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 40960 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 4096 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 245760 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 32768 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 131072 := 22614020194304&262143
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 0 := 262143&22614020194304
band: (band[45] (if (= #559 63) 134900359681068114688891454226432 (if #561 67450179840534057344445727113216 #685)) (lshr[64] (mod #440 17592186044416) (mod #693 64))) 65536 := 22614020194304&262143
 (sat-cleaner :elim-literals 8 :elim-clauses 2 :cost 7398 :time 0.00)
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 247816 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 150416 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 91648 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 32 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 320 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 384 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 256 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 134144 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 196608 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 24576 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 2048 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 4096 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 32768 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 16384 := 262143&22614020194304
band: (band[45] (lshr[45] (bv2int %0) (+ 45 #458)) (if (= #76 44) 257302016603599767091544064 (if #462 128651008301799883545772032 #548))) 131072 := 262143&22614020194304
(sat.stats    711  18758   95  1355/1352   656/282 223       0    21.44   0.44)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 8633 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 10922 :time 0.00)
(sat.stats   1065  26144  159 19287/19284  1021/394 317       0    31.34   0.79)
ramon: poll                 wall=1.000s usage=0.926s mem=35776KiB load=0.93 rootload=0.91
ramon: poll                 wall=2.000s usage=1.926s mem=56192KiB load=1.00 rootload=0.98
ramon: poll                 wall=3.000s usage=2.926s mem=63988KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.926s mem=86256KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.925s mem=91520KiB load=1.00 rootload=1.00
(sat.stats   1597  30238  336 82802/82799  1553/394 317       0    89.18   4.98)
ramon: poll                 wall=6.000s usage=5.925s mem=96260KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.925s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.925s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.925s mem=104MiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.925s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.923s mem=109MiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.923s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.922s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.922s mem=118MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.922s mem=152MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.922s mem=155MiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.922s mem=157MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.921s mem=159MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.921s mem=161MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.002s usage=19.922s mem=164MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:43:55 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.080s
ramon: group.total          19.984s
ramon: group.utime          19.900s
ramon: group.stime          0.084s
ramon: group.mempeak        183MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
