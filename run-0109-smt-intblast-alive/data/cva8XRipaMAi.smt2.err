ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:37:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41131 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cva8XRipaMAi.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3026039
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5819    546  1257/1099/97      97/14     5   16   19.16)
(smt.stats    1    202   7316   1721  2122/1924/100     195/25     6   19   19.36)
(smt.stats    2    313   8376   2586  2251/1961/100     314/33     7   20   19.46)
(smt.stats    3    414  10184   4730  2343/2111/102     413/37     8   22   19.55)
(smt.stats    4    525  11104   6203  2711/2436/107     569/50     9   23   19.65)
(smt.stats    5    647  12865   8465  2755/2497/109     682/55    10   30   19.65)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14413  10649  2770/2534/109     775/59    11   36   19.76)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 2130202623746244609 := 520 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 2130202623746244609 := 520 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 2130202623746244609 := 520 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 2130202623746244609 := 520 << 51
(smt.stats    7    859  15577  12138  2796/2544/110     879/61    12   36   19.76)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814678
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814678
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814681
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814678
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814680
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 21 := 2076042923670602&168929719814705
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 116 := 2076042923670602&168929719814801
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 112 := 2076042923670602&168929719814800
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 112 := 2076042923670602&168929719814800
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 112 := 2076042923670602&168929719814800
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814806
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814808
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814816
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 256 := 2076042923670602&168929719814944
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 512 := 2076042923670602&168929719815200
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 2076042923670602&168929719815712
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 104 := 2076042923670602&168929719814785
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814816
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814816
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814816
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 256 := 2076042923670602&168929719814944
(smt.stats    8    981  16943  14689  2914/2673/192    1024/85    14   53   19.97)
(smt.stats    9   1115  18369  17291  3134/2699/193    1170/104    15   55   20.11)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 2076042923670602&1025
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 4683743612465316865 := 2080 << 51
(smt.stats   10   1216  20561  19424  3204/2954/194    1273/105    16   58   20.22)
ramon: poll                 wall=1.000s usage=0.944s mem=21376KiB load=0.94 rootload=0.94
(smt.stats   11   1327  24608  22105  3220/2972/194    1393/105    16   58   20.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26120  24517  3381/3056/195    1535/128    17   58   20.32)
(smt.stats   13   1583  29250  28317  3480/3191/195    1689/128    17   58   20.32)
(smt.stats   14   1730  31844  31783  3599/3252/195    1849/131    17   58   20.42)
(smt.stats   15   1831  33664  34905  3714/3392/196    1954/148    18   62   20.42)
(smt.stats   16   1942  35070  37357  3813/3503/196    2072/148    18   62   20.54)
(smt.stats   17   2064  38162  42015  3870/3627/209    2184/196    20   79   20.73)
ramon: poll                 wall=2.000s usage=1.944s mem=21920KiB load=1.00 rootload=1.00
(smt.stats   18   2198  40270  45814  3916/3664/211    2333/196    20   79   20.73)
(smt.stats   19   2345  44254  52576  3949/3706/212    2493/228    22   86   20.73)
(smt.stats   20   2506  46541  57737  4019/3715/212    2690/229    22   86   20.83)
(smt.stats   21   2607  48476  60351  4065/3779/212    2796/234    22   86   20.83)
(smt.stats   22   2718  51109  64724  4249/3870/212    2914/237    22   86   20.92)
(smt.stats   23   2840  53004  69617  4351/4025/213    3042/281    23   88   20.92)
(smt.stats   24   2974  54865  76309  4396/4153/215    3178/287    24   96   20.92)
ramon: poll                 wall=3.000s usage=2.944s mem=22268KiB load=1.00 rootload=1.00
(smt.stats   25   3121  56162  82317  4488/4154/215    3324/299    25   96   21.03)
(smt.stats   26   3282  60884  90946  4550/4277/216    3488/304    26   96   21.03)
(smt.stats   27   3459  64575  99170  4604/4316/216    3683/305    26   96   21.03)
(smt.stats   28   3560  65664 102792  4630/4363/216    3809/306    26   96   21.14)
(smt.stats   29   3671  66401 104407  4798/4479/216    3925/306    26   96   21.14)
(smt.stats   30   3793  67694 109554  4886/4595/218    4079/386    27   98   21.23)
ramon: poll                 wall=4.000s usage=3.944s mem=22516KiB load=1.00 rootload=1.00
(smt.stats   31   3927  68475 112186  5016/4694/218    4226/387    27   98   21.33)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  71909 116080  5067/4781/218    4397/397    27   98   21.33)
(smt.stats   33   4235  75003 124172  5230/4849/218    4605/402    27   98   21.33)
(smt.stats   34   4412  77580 134541  5303/4993/218    4800/404    27   98   21.44)
ramon: poll                 wall=5.000s usage=4.943s mem=22660KiB load=1.00 rootload=0.99
(smt.stats   35   4606  79995 145213  5416/5074/218    5019/404    27   98   21.44)
(smt.stats   36   4707  81842 152001  5424/5177/218    5160/404    27   98   21.44)
(smt.stats   37   4818  83886 156295  5428/5185/218    5337/404    27   98   21.55)
(smt.stats   38   4940  86050 163074  5440/5197/218    5477/404    27   98   21.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 35)
(smt.stats   39   5074  87840 167281  5486/5199/218    5590/404    27   98   21.68)
(smt.stats   40   5221  89386 171556  5538/5285/218    5745/404    27   98   21.78)
(smt.stats   41   5382  92172 183539  5558/5311/218    5904/404    27   98   21.78)
(smt.stats   42   5559  94266 192303  5629/5319/219    6100/620    28  103   21.78)
ramon: poll                 wall=6.000s usage=5.943s mem=23116KiB load=1.00 rootload=1.00
(smt.stats   43   5753  97141 202444  5891/5439/219    6323/623    28  103   21.87)
(smt.stats   44   5966 100321 210721  6032/5656/219    6554/624    28  103   21.87)
(smt.stats   45   6067 103603 218663  6066/5823/219    6652/624    28  103   21.98)
(smt.stats   46   6178 106725 229440  6076/5833/219    6778/624    28  103   21.98)
(smt.stats   47   6300 111796 242420  6085/5833/219    6909/624    28  103   21.98)
(smt.stats   48   6434 116114 251873  6095/5848/219    7046/624    28  103   21.98)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 3072 := 3776&32756
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32756
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&57333
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32741
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32772
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32772
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32773
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&34820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13898108450065385476 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&34820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13898108450065385476 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32772
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&36869
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&38916
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13898108450065389572 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&36869
(smt.stats   49   6581 119862 259227  6163/5904/238    7190/707    29  112   22.08)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&34820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13938640846711719940 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&34820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13938640846711719940 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1280 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1280 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1280 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1120 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 64 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 64 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 64 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 512 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691865805 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691865805 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691865805 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691854386 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691854386 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 3776 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 3776 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 512 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2048 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 15 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 14 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 12 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 4 := 3776&2716459608793088
(smt.stats   50   6742 122962 267403  6363/6056/341    7433/739    30  121   22.78)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 64 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2048 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2048 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2048 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 512 := 3776&2716459608793088
(smt.stats   51   6919 130088 276442  6380/6130/421    7629/783    31  156   22.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 135806 290950  6425/6167/424    7890/786    31  156   23.07)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 4683743612465315840 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 4683743612465315840 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 7120191010872754176 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&8192
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&8192
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&17281
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&17280
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&25473
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&25472
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&24576
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&24576
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&897
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&896
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 7120191010872754560 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 7124694610500124672 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4096 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4096 := 4328559121813525 << 51
ramon: poll                 wall=7.000s usage=6.943s mem=24692KiB load=1.00 rootload=0.99
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1280 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1280 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1280 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1280 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 512 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 512 := 1038021461835301&2251799813685248
(smt.stats   53   7326 141894 308198  6648/6369/499    8287/931    33  186   23.40)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4096 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8192 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16384 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32768 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 65536 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 131072 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 65536 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 262144 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 524288 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1048576 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1048576 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2097152 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4194304 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8388608 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16777216 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16384 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8192 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4160 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4160 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4096 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4096 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1048576 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2097152 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4194304 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16777216 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 33554432 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 67108864 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 134217728 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 268435456 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 536870912 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1073741824 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1073741824 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2147483648 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4294967296 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8589934592 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 17179869184 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 34359738368 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 68719476736 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 137438953472 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 274877906944 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 549755813888 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 549755813888 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1099511627776 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2199023255552 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4398046511104 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8796093022208 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 17592186044416 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 35184372088832 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 70368744177664 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 140737488355328 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 281474976710656 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 562949953421312 := 1038021461835301&2251799813685248
(smt.stats   54   7560 148279 322343  6938/6606/696    8802/947    33  186   24.89)
(smt.stats   55   7661 153066 334402  7004/6689/700    8884/1195    34  237   25.18)
(smt.stats   56   7772 156981 339298  7417/7123/701    8995/1202    35  241   25.28)
ramon: poll                 wall=8.000s usage=7.942s mem=26768KiB load=1.00 rootload=0.98
(smt.stats   57   7894 160723 345272  7741/7204/702    9121/1209    35  241   25.38)
(smt.stats   58   8028 165327 359274  7773/7497/709    9436/1237    36  249   25.47)
(smt.stats   59   8175 174594 371974  7824/7503/710    9634/1242    36  249   25.66)
ramon: poll                 wall=9.000s usage=8.942s mem=27100KiB load=1.00 rootload=1.00
(smt.stats   60   8336 183169 385621  7998/7599/711    9810/1396    37  257   25.66)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 190687 403050  8198/7917/713   10111/1477    38  265   25.85)
(smt.stats   62   8707 199984 430181  8420/8115/716   10463/1607    39  268   25.95)
ramon: poll                 wall=10.000s usage=9.942s mem=27468KiB load=1.00 rootload=1.00
(smt.stats   63   8920 206622 452676  8749/8459/718   10728/1638    40  270   26.05)
(smt.stats   64   9154 212657 477304  8798/8476/725   11164/1643    40  270   26.14)
ramon: poll                 wall=11.000s usage=10.942s mem=27740KiB load=1.00 rootload=1.00
(smt.stats   65   9411 227030 526035  9212/8922/727   11559/1838    42  318   26.33)
(smt.stats   66   9512 229412 542880  9232/8942/733   11819/1882    43  343   26.43)
ramon: poll                 wall=12.000s usage=11.941s mem=27996KiB load=1.00 rootload=1.00
(smt.stats   67   9623 234261 559329  9292/8989/736   12007/1887    43  343   26.43)
(smt.stats   68   9745 241367 584694  9362/9048/737   12222/1887    43  343   26.53)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4503599627337728
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4503599627337728
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4503599627337728
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4503599627337728
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4503599627337728
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4503599627337728
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4503599627337728
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4237983476088832
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459608834048
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459608834048
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459609358336
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459608834048
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459609358336
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459608834048
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459609358336
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716480915374080
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716480915374080
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459608834048
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716618354327552
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716893232234496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 18440453767687045120 := 9007199254740982 << 40
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716893232234496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 18440453767687045120 := 9007199254740982 << 40
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459608834048
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459608834048
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716459609358336
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716480915374080
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716618354327552
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716893232234496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 18431446568432304128 := 9007199254740982 << 40
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716480915374080
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716480915374080
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716480915374080
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716618354327552
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&2716893232234496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 18431446568432304128 := 9007199254740982 << 40
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4492604511092736
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 3138 := 4503599627370491 << 41
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4492604511092736
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 3138 := 4503599627370491 << 41
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4492604511092736
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 3138 := 4503599627370491 << 41
(smt.stats   69   9879 248209 611303  9565/9163/754   12679/1986    44  348   26.86)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4492604511092736
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 3146 := 4503599627370491 << 41
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1013692833823&4492604511092736
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 3156 := 4503599627370491 << 41
(smt.delete-inactive-clauses  :num-deleted-clauses 86)
(smt.stats   70  10026 253639 624602  9608/9286/795   12913/2146    45  360   26.96)
ramon: poll                 wall=13.000s usage=12.941s mem=28552KiB load=1.00 rootload=0.99
(smt.stats   71  10187 263225 635740  9849/9295/795   13116/2155    45  360   27.05)
(smt.stats   72  10364 273634 671404 10098/9642/795   13443/2244    46  360   27.05)
(smt.stats   73  10558 283150 699798 10174/9850/801   13895/2315    47  373   27.26)
(smt.stats   74  10771 296604 734074 10220/9890/804   14488/2480    48  393   27.35)
ramon: poll                 wall=14.000s usage=13.938s mem=29108KiB load=1.00 rootload=1.00
(smt.stats   75  11005 306560 769233 10261/9928/813   14876/2559    50  427   27.47)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11262 316343 798427 10448/10110/816   15213/2647    51  440   27.67)
(smt.stats   77  11544 327961 832214 10583/10232/817   15878/2780    52  454   27.86)
ramon: poll                 wall=15.000s usage=14.938s mem=29496KiB load=1.00 rootload=1.00
(smt.stats   78  11645 336835 858299 10630/10257/817   16115/2781    52  454   27.96)
(smt.stats   79  11756 343384 874255 10727/10303/817   16307/2781    52  454   27.96)
ramon: poll                 wall=16.000s usage=15.937s mem=30060KiB load=1.00 rootload=1.00
(smt.stats   80  11878 350105 889361 10861/10415/817   16487/2781    52  454   28.15)
(smt.stats   81  12012 355462 899516 11063/10636/817   16803/2783    52  454   28.24)
ramon: poll                 wall=17.000s usage=16.937s mem=30284KiB load=1.00 rootload=1.00
(smt.stats   82  12159 365192 922135 11266/10754/817   17079/2786    52  454   28.46)
ramon: poll                 wall=18.000s usage=17.937s mem=30284KiB load=1.00 rootload=1.00
(smt.stats   83  12320 371900 933097 11410/10962/817   17274/2786    52  454   28.55)
(smt.stats   84  12497 377472 952880 11552/11203/819   17627/3110    53  458   28.65)
ramon: poll                 wall=19.000s usage=18.937s mem=30540KiB load=1.00 rootload=1.00
(smt.stats   85  12691 394895 993655 11624/11216/819   17873/3114    53  458   28.74)
ramon: poll                 wall=20.000s usage=19.937s mem=30540KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:38:14 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.040s
ramon: group.total          19.999s
ramon: group.utime          19.951s
ramon: group.stime          0.048s
ramon: group.mempeak        30800KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
