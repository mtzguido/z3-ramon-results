ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:06:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40446 MiB
ramon: sys.mem.avail        61705 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xT8K01NLlYu6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3116162
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&34359738366
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&34359738366
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 34359738368 := 26 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 34359738368 := 26 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 34359738368 := 26 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 34359738368 := 26 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&34359738359
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1 := 360162&34359738367
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 2 := 360162&34359738367
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360162 := 360162&34359738367
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 68719476735 := 68719476726 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360162 := 360162&360162
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 360162 := 26 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360162 := 360162&360162
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 360162 := 26 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360162 := 360162&360162
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 360162 := 26 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360162 := 360162&54525952
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360162 := 360162&360162
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 68719836898 := 68719476726 << 21
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360162 := 360162&34338766848
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360162 := 360162&34191966208
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1 := 360162&34191966208
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&34191966208
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 34359738367 := 34359738328 << 22
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&34191966208
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 34359738367 := 34359738328 << 22
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 360160 := 360162&54525952
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 28 := 360162&54525952
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 64 := 360162&54525952
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 8 := 360162&54525952
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 16 := 360162&54525952
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 16 := 360162&54525952
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 16 := 360162&54525952
(smt.stats    0    101   1978   1058  1126/991/157     104/24     9   32   19.27)
(smt.stats    1    202   3406   3176  1759/1587/165     201/40    12   37   19.37)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&54525952
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 54525951 := 13 << 22
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 1 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 360162 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 360162 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 360160 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 360161 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 360162 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 64 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 128 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 256 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 512 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 1024 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 2048 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 4096 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 8192 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 16384 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 32768 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 65536 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 131072 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 262144 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 4 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 8 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 16 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 8 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 16 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 4 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 4 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 8 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 16 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 16 := 360162&4194304
(smt.stats    2    313   4692   4791  1927/1697/241     339/47    14   53   20.18)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 16 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 8 := 360162&4194304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 360162&4194304
band: (band[35] (if (or #531 #532 #533) 0 (if #534 1 #621)) (shl[35] (bv2int %0) (+ 35 #629))) 8 := 360162&4194304
(smt.stats    3    414   5558   6176  2105/1930/274     518/122    15   61   20.37)
(smt.stats    4    525   7325   8886  2171/1984/279     694/132    17   69   20.37)
(smt.stats    5    647  11634  15193  2218/2017/279     872/139    18   73   20.47)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1&5
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1&5
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1&17
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 263951510143006 := 273203202 << 3
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 263951510143006 := 272662592 << 3
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 263951510143006 := 272662592 << 3
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 263951510143006 := 273236032 << 3
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 263917150404638 := 273236032 << 3
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  13895  19468  2329/2122/298    1026/171    21   82   20.57)
(smt.stats    7    859  14612  20952  2511/2278/300    1149/177    21   82   20.76)
(smt.stats    8    981  15577  23799  2751/2544/303    1354/182    22   84   20.86)
(smt.stats    9   1115  18804  27647  2837/2555/307    1602/204    23   90   21.05)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&33570826
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 264398220312586 := 437403746 << 1
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&33570826
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 264398220312586 := 437403746 << 1
(smt.stats   10   1216  20038  30675  2996/2693/307    1776/220    24   99   21.05)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&33570824
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 33570824 := 437403746 << 1
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&33570824
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 33570824 := 437403746 << 1
(smt.stats   11   1327  21160  34139  3033/2811/313    1988/237    25  100   21.15)
ramon: poll                 wall=1.003s usage=0.916s mem=22368KiB load=0.91 rootload=0.90
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&33570872
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 8392717 := 8392718 << 2
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&33570872
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 8392717 := 8392718 << 2
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&33570872
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 8392717 := 8392718 << 2
(smt.stats   12   1449  23156  40323  3052/2818/313    2241/259    26  101   21.15)
(smt.stats   13   1583  27613  47355  3062/2837/316    2433/331    27  113   21.15)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1 := 1406&33570824
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1406&33570824
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1406&33570825
(smt.stats   14   1730  32253  61039  3151/2919/327    2693/367    28  116   21.24)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786978
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786981
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786985
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786985
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786985
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786985
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786985
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786989
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787005
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787069
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16786973
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787001
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787005
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787069
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787277
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787293
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787293
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787325
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 16787325 := 33571132 << 13
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787533
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&33570813
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 33570813 := 33571132 << 13
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787453
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 16787453 := 33571132 << 13
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1404 := 1406&16787325
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 16787325 := 33571132 << 13
(smt.stats   15   1831  35161  67468  3288/2940/327    2921/373    28  116   21.44)
(smt.stats   16   1942  37621  74782  3356/3127/361    3246/405    29  122   21.53)
(smt.stats   17   2064  42073  84162  3388/3133/361    3554/541    30  135   21.63)
(smt.stats   18   2198  45944  93720  3491/3193/362    3851/645    31  139   21.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2345  50182 113362  3665/3281/362    4297/654    31  139   21.94)
(smt.stats   20   2506  52678 123412  3891/3660/378    5389/707    32  141   22.38)
(smt.stats   21   2607  56479 135029  3893/3664/379    5506/969    33  176   22.59)
(smt.stats   22   2718  59732 144271  4044/3664/379    5759/994    34  182   22.49)
(smt.stats   23   2840  62946 157037  4170/3930/380    6111/1100    35  188   22.59)
(smt.stats   24   2974  66191 170214  4264/4035/382    6989/1100    35  188   22.69)
(smt.stats   25   3121  69617 180336  4289/4060/384    7217/1267    36  195   22.69)
ramon: poll                 wall=2.000s usage=1.913s mem=24004KiB load=1.00 rootload=1.00
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 2 := 2950453605&34355544848
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&34355544208
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&34355544208
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&34355544208
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&34355544080
(smt.stats   26   3282  74417 197218  4446/4208/395    7472/1353    37  216   22.78)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&34355544080
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&34355543952
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&34351349776
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&34351349776
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&17179967632
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 2697239560336 := 327155780 << 34
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&17179967632
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 2697239560336 := 327155780 << 34
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&17179967632
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 2697239560336 := 327155780 << 34
(smt.stats   27   3459  78603 214626  4518/4286/418    7867/1422    38  223   22.90)
(smt.stats   28   3560  81829 225762  4569/4311/418    8011/1427    38  223   22.99)
(smt.stats   29   3671  83868 234070  4724/4489/419    8163/1493    39  228   23.09)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&34049474600
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 1 := 34204606484 << 1
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 0&34049474600
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #116))) 83886079 := 34204606484 << 1
(smt.stats   30   3793  86072 245450  4777/4542/427    8395/1651    40  421   23.18)
(smt.stats   31   3927  92489 263531  4807/4561/427    8696/1652    40  421   23.28)
(smt.stats   32   4074  98141 297265  4828/4584/429    9013/1735    41  422   23.28)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&33571300
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&33571300
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109189
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109573
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109573
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109573
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109573
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109701
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109701
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109701
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109957
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67109957
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   33   4235 101805 318378  5135/4593/429    9304/1812    42  425   23.37)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67110981
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 1475226802&67113029
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 2 := 1475226802&67113029
(smt.stats   34   4412 109516 354264  5203/4911/474   10214/1836    43  434   23.57)
(smt.stats   35   4606 117491 381052  5257/4998/484   10912/2040    44  436   23.66)
ramon: poll                 wall=3.000s usage=2.913s mem=25052KiB load=1.00 rootload=1.00
(smt.stats   36   4707 122238 399095  5303/5055/484   11132/2103    45  436   23.76)
(smt.stats   37   4818 127497 417797  5339/5089/486   11521/2150    46  437   23.76)
(smt.stats   38   4940 130127 431896  5566/5173/487   11773/2152    46  437   23.96)
(smt.delete-inactive-clauses  :num-deleted-clauses 475)
(smt.stats   39   5074 135596 451989  5601/5353/492   11941/2376    47  449   24.05)
(smt.stats   40   5221 141613 474600  5632/5370/495   12537/2378    47  449   24.15)
(smt.stats   41   5382 148924 499374  5709/5389/495   12742/2541    48  481   24.15)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 351&4
(smt.stats   42   5559 153031 515707  5773/5492/495   13206/2542    48  481   24.24)
(smt.stats   43   5753 156028 537156  6299/5645/496   13868/2661    49  481   24.53)
(smt.stats   44   5966 163612 569528  6375/6052/496   14517/2661    49  481   24.53)
ramon: poll                 wall=4.000s usage=3.913s mem=25988KiB load=1.00 rootload=1.00
(smt.stats   45   6067 166170 584332  6395/6127/498   15135/2800    50  484   24.63)
(smt.stats   46   6178 169343 605213  6403/6135/499   15566/2800    50  484   24.73)
(smt.stats   47   6300 172059 622129  6405/6137/499   16098/2945    51  501   24.73)
(smt.stats   48   6434 175831 646433  6418/6150/502   16841/3010    52  516   24.83)
(smt.stats   49   6581 179762 662559  6466/6188/502   17165/3010    52  516   24.93)
(smt.stats   50   6742 185287 681976  6476/6198/503   17605/3010    52  516   25.02)
(smt.stats   51   6919 191259 716564  6493/6215/506   18683/3086    53  542   25.26)
(smt.stats   52   7113 198282 749461  6581/6264/508   19294/3223    54  586   25.35)
ramon: poll                 wall=5.000s usage=4.912s mem=26772KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7326 206986 801910  6849/6567/513   20122/3395    55  609   25.45)
(smt.stats   54   7560 217936 859692  6860/6578/513   20971/3395    55  609   25.77)
(smt.stats   55   7661 220611 876132  6866/6583/515   21081/3450    56  626   25.87)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&16777304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&16777304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2950453605&16777304
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 12 := 2950453605&16777230
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&16777230
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&16777230
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&16777230
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&16777230
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&12580878
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8388878
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8388878
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8390670
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8390670
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8390670
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8390670
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8388878
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8392718
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8392718
(smt.stats   56   7773 222701 893978  7086/6633/532   21489/3455    56  626   26.07)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8392974
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&8392718
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 171798691854 := 8388590 << 34
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 4 := 2950453605&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 2645699854350 := 8388590 << 34
(smt.stats   57   7895 225519 909911  7242/6811/562   21905/3458    56  626   26.26)
(smt.stats   58   8029 231085 935281  7299/7008/578   22349/3558    57  654   26.26)
ramon: poll                 wall=6.000s usage=5.912s mem=27748KiB load=1.00 rootload=0.99
(smt.stats   59   8176 235597 953767  7469/7025/578   22672/3559    57  654   26.35)
(smt.stats   60   8337 239937 968668  7759/7262/578   23050/3643    58  664   26.45)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   61   8514 246198 1004533  7808/7516/581   24821/3644    58  664   26.68)
(smt.stats   62   8708 254026 1034569  7898/7577/583   25696/3888    59  673   26.97)
ramon: poll                 wall=7.000s usage=6.912s mem=28560KiB load=1.00 rootload=1.00
(smt.stats   63   8921 262447 1094462  7910/7615/585   26875/4027    60  690   27.07)
(smt.stats   64   9155 273455 1150599  7921/7624/585   27973/4027    60  690   27.23)
(smt.stats   65   9412 282000 1200970  7992/7657/587   28475/4164    61  694   27.51)
ramon: poll                 wall=8.000s usage=7.912s mem=28960KiB load=1.00 rootload=1.00
(smt.stats   66   9513 286149 1216010  8231/7936/589   29107/4165    61  694   27.51)
(smt.stats   67   9624 291184 1260674  8251/7951/590   29491/4365    62  723   27.61)
(smt.stats   68   9746 297569 1313297  8290/7983/590   30146/4365    62  723   27.71)
(smt.stats   69   9880 305282 1365235  8296/7989/590   30698/4365    62  723   27.71)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 309484 1395034  8337/8000/591   31151/4618    63  731   27.90)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2&34208743424
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 143482590781767680 := 37585518450 << 4
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2&34208743424
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 143482590781767680 := 37585518450 << 4
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 2&34175188992
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 143482590748213248 := 37585514110 << 4
(smt.stats   71  10188 313161 1420641  8458/8053/591   31437/4624    63  731   27.90)
ramon: poll                 wall=9.000s usage=8.912s mem=29388KiB load=1.00 rootload=1.00
(smt.stats   72  10365 322040 1463057  8495/8165/596   31973/4624    63  731   28.00)
(smt.stats   73  10559 326165 1505149  8504/8195/603   33515/4746    64  732   28.09)
(smt.stats   74  10772 331437 1557203  8714/8195/603   34477/4746    64  732   28.28)
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 1 := 1&33579216
ramon: poll                 wall=10.000s usage=9.911s mem=30444KiB load=1.00 rootload=1.00
(smt.stats   75  11006 335695 1574473  9073/8433/603   35169/5116    65  853   28.59)
(smt.stats   76  11263 339390 1586972  9515/8796/603   35769/5117    65  853   28.88)
(smt.stats   77  11545 343812 1604234 10047/9337/604   36285/5117    65  853   28.98)
ramon: poll                 wall=11.000s usage=10.911s mem=30624KiB load=1.00 rootload=1.00
(smt.stats   78  11646 345704 1617370 10225/9747/604   36506/5117    65  853   29.08)
(smt.stats   79  11757 347296 1627025 10387/9929/604   36739/5118    65  853   29.27)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   80  11879 350185 1642287 10554/10138/604   37224/5119    65  853   29.27)
(smt.stats   81  12013 353956 1681709 10589/10278/608   38446/5325    66  857   29.36)
(smt.stats   82  12160 364217 1726060 10635/10305/609   38891/5328    66  857   29.36)
ramon: poll                 wall=12.000s usage=11.911s mem=30948KiB load=1.00 rootload=1.00
(smt.stats   83  12321 373928 1832537 10642/10332/610   39527/5863    67  866   29.46)
(smt.stats   84  12498 382141 1893586 10734/10337/610   41528/5943    68  891   29.81)
(smt.stats   85  12692 393516 1962202 10749/10439/611   42278/5943    68  891   29.91)
ramon: poll                 wall=13.000s usage=12.911s mem=31384KiB load=1.00 rootload=1.00
(smt.stats   86  12905 402815 2031851 10926/10459/612   43394/6544    69  896   30.10)
(smt.stats   87  13139 412424 2133063 10988/10664/612   45292/6544    69  896   30.29)
ramon: poll                 wall=14.000s usage=13.911s mem=31816KiB load=1.00 rootload=1.00
(smt.stats   88  13396 421138 2201632 11270/10680/614   46125/7031    70  931   30.58)
ramon: poll                 wall=15.000s usage=14.910s mem=32140KiB load=1.00 rootload=1.00
(smt.stats   89  13678 429282 2239686 11720/11041/614   46841/7032    70  931   30.68)
(smt.stats   90  13988 438356 2312258 11932/11622/616   47998/7107    71  933   30.77)
(smt.stats   91  14089 442151 2321248 11976/11625/616   48202/7109    71  933   30.77)
(smt.stats   92  14200 447141 2376155 12020/11710/616   48565/7109    71  933   30.88)
(smt.stats   93  14322 450624 2402173 12101/11717/616   49015/7456    72  934   30.97)
(smt.stats   94  14456 453536 2426792 12227/11837/616   49433/7459    72  934   30.97)
ramon: poll                 wall=16.000s usage=15.910s mem=32476KiB load=1.00 rootload=1.00
(smt.stats   95  14603 461209 2508286 12261/11929/616   50266/7459    72  934   31.17)
(smt.stats   96  14764 469140 2534399 12354/11994/616   50751/7460    72  934   31.17)
ramon: poll                 wall=17.000s usage=16.910s mem=32844KiB load=1.00 rootload=1.00
(smt.stats   97  14941 476903 2563703 12526/12080/616   51739/7464    72  934   31.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 405)
(smt.stats   98  15135 492156 2731210 12575/12255/616   52512/7465    72  934   31.36)
ramon: poll                 wall=18.003s usage=17.912s mem=32964KiB load=1.00 rootload=1.00
(smt.stats   99  15348 503823 2846040 12829/12259/616   53210/7475    72  934   31.46)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  100  15582 515413 2995713 13011/12560/617   53852/8036    73  946   31.46)
ramon: poll                 wall=19.000s usage=18.909s mem=33124KiB load=1.00 rootload=0.99
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 92201675&8623489056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 75908023662411808 := 1073381480 << 29
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 92201675&8623489056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 75908023662411808 := 1073381480 << 29
band: (band[35] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #673 1 #735)) (shl[64] (* 2 #114) (mod #865 64))) 0 := 92201675&8623489056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #862 #864) 64)) 75908023662411808 := 1073397860 << 29
(smt.stats  101  15839 523728 3071611 13369/12708/618   54748/8069    74  949   31.75)
(smt.stats  102  16121 537724 3180721 13474/13103/623   55642/8074    74  949   31.85)
ramon: poll                 wall=20.000s usage=19.909s mem=33452KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:07:02 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.990s
ramon: group.utime          19.970s
ramon: group.stime          0.020s
ramon: group.mempeak        33716KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              1.00
