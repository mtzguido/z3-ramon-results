ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:58:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29011 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DD928mTASq1K.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             697290
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   97.0874     10000        49          0            1        2)
(sat.ddfw       1      1   49.7562     20001        98          1            1        3)
(smt.stats    0    101   4590    623  1265/1109/114     101/10     9   21   52.07)
(sat.ddfw       1      1   51.6796     40001       196          2            1        5)
(smt.stats    1    202   6294   1212  2105/1922/116     232/26    11   22   52.27)
(smt.stats    2    313  10944   3571  2135/1947/117     343/35    12   25   52.36)
(smt.stats    3    415  14299   6968  2300/2098/127     441/45    13   27   52.46)
(sat.ddfw       1      1   44.6429     70001       343          3            1        8)
(smt.stats    4    526  16082   8804  2544/2296/131     567/68    14   39   52.58)
(smt.stats    5    648  20008  13147  2728/2489/132     692/103    15   41   52.68)
ramon: poll                 wall=1.000s usage=0.907s mem=54808KiB load=0.91 rootload=0.90
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  22253  16475  2762/2507/132     792/104    15   41   52.80)
(smt.stats    7    860  26022  22215  2771/2528/132     907/104    15   41   52.80)
(sat.ddfw       1      1   38.3142    110001       539          4            1       12)
(smt.stats    8    982  28294  26677  2776/2532/136    1030/107    16   42   52.93)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 2 := 3 << 1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 2 := 3 << 1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 2 := 3 << 1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 2 := 1 << 1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
shl: (shl[50] (bv2int %1) (mod (bv2int %0) 50)) 1125899906842623 := 1 << 1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 2 := 0 << 1
(smt.stats    9   1116  30090  30927  2842/2590/169    1150/118    18   56   53.03)
(smt.stats   10   1217  33332  35120  2854/2607/169    1250/118    18   56   53.03)
(smt.stats   11   1328  36870  41068  2854/2607/169    1361/119    19   57   53.03)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 2&1
shl: (shl[50] (bv2int %1) (mod (bv2int %0) 50)) 1 := 1 << 1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1 := 2&1
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 2 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 4 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 8 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 32 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 64 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 128 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 256 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 512 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1024 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 2048 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 4096 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 8192 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 8192 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 32768 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 65536 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 131072 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 262144 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 524288 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1048576 := 1125899906842622&67108864
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 2097152 := 1125899906842622&67108864
(smt.stats   12   1450  38667  43899  3065/2621/172    1478/120    20   61   54.03)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 4096 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 4096 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 4096 := 562949953425408&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 32768 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 65536 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 32768 := 562949953421314&1048576
(sat.ddfw       1      1   32.9809    160000       784          5            1       17)
(smt.stats   13   1584  39935  45565  3020/2707/242    1669/125    21   74   53.94)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16512 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953437696&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16512 := 562949953437696&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16512 := 562949953437568&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953437696&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953437696&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953421314&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 16384 := 562949953437696&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 562949953421314&1048576
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 562949953421314 := 562949953421312 << 21
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 562949953421314&1048576
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 562949953421314 := 562949953421312 << 21
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 562949953421314&1048576
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 562949953421314 := 562949953421312 << 21
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 1125899904745472&1048576
shl: (shl[50] (bv2int %1) (mod (bv2int %0) 50)) 1125899906842623 := 562950490292223 << 21
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 562950223953918&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 562950223953916&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 562950223953916&1048576
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 562950221856898&1048576
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 562950221856898 := 562950221856897 << 21
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 562950223953920&1048576
shl: (shl[50] (bv2int %1) (mod (bv2int %0) 50)) 571746312781954 := 562950221856897 << 21
ramon: poll                 wall=2.000s usage=1.885s mem=56352KiB load=0.98 rootload=0.96
(smt.stats   14   1731  41591  50266  3240/2969/284    1999/271    22   90   54.13)
(smt.stats   15   1832  43946  58413  3259/3001/289    2206/271    22   90   54.13)
(sat.ddfw       1      1    28.477    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   16   1943  46072  64377  3275/3015/295    2467/501    24  102   54.22)
(smt.stats   17   2065  48720  73707  3320/3043/296    2798/502    24  102   54.33)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 4398046511106&4398046511104
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 4398046511106&4398046511104
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 8796093054974&4398046511104
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1134695999897598 := 4398046527486 << 43
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 17592186044418&4398046511104
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1143492092887042 := 1073741824 << 43
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 8796093022210&4398046511104
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1134695999864834 := 1073741824 << 43
(smt.stats   18   2199  54546  88304  3347/3060/297    3054/686    25  102   54.42)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 8796093022470&4398046511104
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1134695999865094 := 4398046511234 << 43
(sat.ddfw       1      1   25.2071    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.864s mem=56820KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   22.2655    370001      1813          8            1       38)
(smt.stats   19   2347  56448  92037  3464/3092/312    3231/803    26  106   54.54)
(smt.stats   20   2508  58792  96830  3493/3224/315    3428/814    27  111   54.63)
ramon: poll                 wall=4.000s usage=3.811s mem=57048KiB load=0.95 rootload=0.95
(smt.stats   21   2609  61802 103853  3519/3244/318    3560/814    27  111   54.82)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 2 := 1117103813820416&128
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 1117103813820542&128
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1117103813820542 := 1117103813820542 << 8
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 1117103813820543&128
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1117103813820543 := 1117103813820543 << 8
(smt.stats   22   2720  64777 112161  3548/3246/320    3703/848    28  123   55.04)
(smt.stats   23   2842  67684 122493  3593/3288/331    3838/854    29  141   55.14)
(smt.stats   24   2976  70512 133312  3606/3328/338    4052/911    31  160   55.14)
(sat.ddfw       1      1   20.1027    460001      2254          9            1       47)
(smt.stats   25   3123  74181 151124  3621/3340/338    4222/911    31  160   55.14)
(smt.stats   26   3284  78223 170232  3649/3366/339    4417/969    33  168   55.23)
(smt.stats   27   3461  83689 192264  3698/3405/340    4739/981    34  169   55.23)
(smt.stats   28   3562  85162 196904  3727/3423/340    4849/981    34  169   55.23)
ramon: poll                 wall=5.000s usage=4.811s mem=57608KiB load=1.00 rootload=1.00
(smt.stats   29   3673  86848 202090  3754/3443/340    4988/981    34  169   55.36)
(smt.stats   30   3795  90028 212719  3804/3475/340    5169/982    34  169   55.36)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 56 := 61&140737488355328
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3929  92918 226124  3834/3542/347    5329/1079    35  172   55.56)
(sat.ddfw       1      1   18.4672    560001      2745         10            1       57)
(smt.stats   32   4076  94827 235394  3854/3560/352    5572/1079    35  172   55.56)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 0&64
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1125899906842624 := 562949953421312 << 7
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 0&64
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1125899906842624 := 562949953421312 << 7
ramon: poll                 wall=6.000s usage=5.812s mem=58120KiB load=1.00 rootload=1.00
(smt.stats   33   4237  96361 241103  4048/3570/352    5786/1081    35  172   55.99)
(sat.ddfw       1      1   17.0596    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.816s mem=58376KiB load=1.00 rootload=1.01
(smt.stats   34   4414  99270 255191  4412/3898/357    6068/1111    36  180   56.19)
(smt.stats   35   4608 104140 276879  4435/4140/357    6527/1114    37  180   56.19)
(smt.stats   36   4709 107324 293035  4441/4146/358    6663/1192    38  182   56.19)
(smt.stats   37   4820 111101 309900  4445/4150/358    6881/1192    38  182   56.19)
(sat.ddfw       1      1   15.8458    790001      3872         12            1       80)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 96 := 589338232521220&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 96 := 589338232521248&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 96 := 589338232521220&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 96 := 589338232521248&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 96 := 589338232521248&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 64 := 589338232521248&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 64 := 589338232521280&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 64 := 589338232521220&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 64 := 589338232521280&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 64 := 589338232521220&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 64 := 589338232521280&1024
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 589338232521220&1024
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 4610023556846223876 := 562949953421312 << 11
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 589338232521220&1024
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 4610023556846223876 := 562949953421312 << 11
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 589338232521220&1024
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 4610023556846223876 := 562949953421312 << 11
(smt.stats   38   4942 114904 325506  4493/4198/374    7227/1238    39  187   56.49)
(smt.delete-inactive-clauses  :num-deleted-clauses 126)
(smt.stats   39   5076 119503 343895  4519/4219/374    7410/1238    39  187   56.58)
ramon: poll                 wall=8.000s usage=7.816s mem=58948KiB load=1.00 rootload=1.00
(smt.stats   40   5223 124097 362781  4527/4227/374    7624/1238    39  187   56.58)
(smt.stats   41   5384 128236 380022  4535/4235/376    7832/1360    40  190   56.58)
(smt.stats   42   5561 133339 401428  4552/4252/378    8085/1383    41  195   56.58)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 2097152 := 2129916&2097152
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1125899908972540 := 1117104350691329 << 22
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1536 := 1540&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1536 := 1540&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1536 := 1792&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1024 := 1028&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 1024 := 1028&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 256 := 516&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 256 := 768&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 256 := 516&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 256 := 768&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 256 := 768&2097152
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 768&2097152
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1125899906843392 := 1108307720798337 << 22
(smt.stats   43   5755 137341 417042  4698/4388/412    8417/1404    42  200   56.77)
(sat.ddfw       1      1    14.771    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.815s mem=59460KiB load=1.00 rootload=0.99
(smt.stats   44   5968 140672 423474  4813/4423/412    8742/1408    42  200   57.48)
(smt.stats   45   6069 143205 431538  5114/4805/413    8926/1482    43  213   57.48)
(smt.stats   46   6180 145568 443909  5118/4809/413    9041/1482    43  213   57.48)
ramon: poll                 wall=10.000s usage=9.816s mem=59716KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   13.8449   1060001      5196         14            1      108)
(smt.stats   47   6302 149656 463827  5152/4818/413    9237/1525    44  215   57.58)
(smt.stats   48   6436 151314 475476  5167/4858/414    9500/1587    45  217   57.58)
(smt.stats   49   6583 153160 481800  5183/4866/414    9702/1587    45  217   57.58)
(smt.stats   50   6744 157004 503927  5220/4884/414   10054/1589    45  217   57.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6921 159469 517227  5240/4926/414   10395/1589    45  217   57.67)
ramon: poll                 wall=11.000s usage=10.820s mem=59972KiB load=1.00 rootload=1.00
(smt.stats   52   7115 164514 529445  5285/4947/414   10728/1592    45  217   57.77)
(sat.ddfw       1      1   13.0333   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.820s mem=60228KiB load=1.00 rootload=1.00
(smt.stats   53   7328 170708 548280  5432/4995/414   10984/1595    45  217   57.77)
(smt.stats   54   7562 174814 565673  5556/5236/415   11347/1826    46  226   57.86)
ramon: poll                 wall=13.000s usage=12.819s mem=60484KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.2973   1370001      6715         16            1      139)
(smt.stats   55   7663 177080 581253  5616/5254/416   11511/1826    46  226   57.86)
(smt.stats   56   7774 180676 610514  5630/5312/417   11669/1826    46  226   57.86)
(smt.stats   57   7896 182231 634440  5647/5330/417   11814/1900    47  233   57.99)
(smt.stats   58   8030 185634 648069  5697/5371/417   12213/1900    47  233   58.09)
(smt.stats   59   8177 187479 659998  5736/5382/420   12383/1927    48  236   58.09)
ramon: poll                 wall=14.000s usage=13.821s mem=60484KiB load=1.00 rootload=1.00
(smt.stats   60   8338 190624 679450  5832/5483/420   12627/1929    48  236   58.19)
(smt.stats   61   8515 193251 691453  5838/5515/420   12858/1929    48  236   58.19)
(sat.ddfw       1      1   11.6351   1540001      7549         17            1      156)
(smt.stats   62   8709 199691 721031  5848/5525/420   13110/1929    48  236   58.19)
ramon: poll                 wall=15.000s usage=14.823s mem=60736KiB load=1.00 rootload=1.00
(smt.stats   63   8922 204663 753335  5855/5528/420   13379/1929    48  236   58.31)
(smt.stats   64   9156 208879 780572  5880/5538/420   13642/1930    48  236   58.66)
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 262&512
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1125899906842886 := 1117104350691328 << 10
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 262&512
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1125899906842886 := 1117104350691328 << 10
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 29392900&512
shl: (shl[64] (bv2int %1) (mod (+ #109 #371) 64)) 1125899936235524 := 1117104350691328 << 10
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
shl: (shl[50] (bv2int %1) (mod (bv2int %0) 50)) 1117104350691329 := 1117104350691328 << 10
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
shl: (shl[50] (bv2int %1) (mod (bv2int %0) 50)) 549755813893 := 1117104350691328 << 10
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
shl: (shl[50] (bv2int %1) (mod (bv2int %0) 50)) 549755813893 := 1117104350691328 << 10
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 2 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 4 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 8 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 16 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 32 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 60 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 8 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 16 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 32 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 32 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 32 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 16 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 12 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 8 := 549755813888&512
band: (band[50] (shl[64] (bv2int %1) (mod #372 64)) (if (= #730 63) 0 (if #732 1 #856))) 0 := 549755813888&512
band: (band[50] (shl[50] (bv2int %1) (mod #109 50)) (if (= #613 49) 1 (if #615 2 #711))) 2 := 549755813888&512
(smt.stats   65   9413 213042 802735  5969/5628/462   13924/2055    49  238   58.76)
(smt.stats   66   9514 213969 814236  6002/5664/467   14030/2055    49  238   58.85)
(smt.stats   67   9625 214679 824846  6018/5676/467   14166/2055    49  238   58.85)
(smt.stats   68   9747 216895 840599  6013/5680/467   14360/2078    50  248   58.85)
ramon: poll                 wall=16.000s usage=15.821s mem=60992KiB load=1.00 rootload=1.00
(smt.stats   69   9881 222198 854635  6123/5685/467   14651/2088    50  248   58.95)
(sat.ddfw       1      1   11.0497   1720001      8431         18            1      174)
(smt.delete-inactive-clauses  :num-deleted-clauses 6)
(smt.stats   70  10028 224605 866465  6175/5827/467   14906/2088    50  248   58.95)
ramon: poll                 wall=17.000s usage=16.821s mem=61248KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10189 230187 884611  6237/5859/467   15214/2101    50  248   59.14)
(smt.stats   72  10366 234636 911986  6274/5932/471   15519/2254    51  254   59.14)
(smt.stats   73  10560 237784 931038  6293/5958/474   15777/2254    51  254   59.14)
ramon: poll                 wall=18.000s usage=17.817s mem=61504KiB load=1.00 rootload=0.99
(smt.stats   74  10773 247095 971765  6311/5975/478   16145/2287    52  286   59.33)
(sat.ddfw       1      1   10.5088   1910001      9362         19            1      193)
(smt.stats   75  11007 253889 1003485  6323/5987/479   16566/2287    52  286   59.33)
(smt.stats   76  11264 267023 1055212  6330/5994/480   16915/2394    53  287   59.33)
ramon: poll                 wall=19.000s usage=18.868s mem=61624KiB load=1.05 rootload=1.05
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11546 278006 1107403  6341/6005/480   17301/2561    54  295   59.53)
(smt.stats   78  11647 281687 1122405  6380/6035/480   17467/2561    54  295   59.62)
(smt.stats   79  11758 283349 1133679  6381/6036/481   17640/2600    55  296   59.62)
(smt.stats   80  11880 284420 1147621  6385/6036/481   17810/2600    55  296   59.62)
ramon: poll                 wall=20.000s usage=19.777s mem=62256KiB load=0.91 rootload=0.91
ramon: end                  Fri Nov  1 21:59:11 2024
ramon: root.execname        z3
ramon: root.utime           19.810s
ramon: root.stime           0.020s
ramon: group.total          19.835s
ramon: group.utime          19.811s
ramon: group.stime          0.024s
ramon: group.mempeak        62512KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              0.99
