ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:01:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28936 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1376
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ENQw4rkqP0HO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             705954
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    60.241     10000        49          0            1        2)
(sat.ddfw       1      1   32.4708     20001        98          1            1        3)
(sat.ddfw       1      1   35.2734     40001       196          2            1        5)
(smt.stats    0    101   3543    371  1320/1130/108     101/14     4   16   52.18)
(smt.stats    1    202   4689    718  2538/2269/108     197/16     4   16   52.37)
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963968 := 36028797018964224 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963968 := 36028797018964224 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963968 := 36028797018964224 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963968 := 36028797018964224 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 9223372036854775296 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&7
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 36028797018963967 := 36028797018963966 >>l 52
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&7
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 7 := 9223372036854775296 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&7
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 36028797018963967 := 36028797018963966 >>l 52
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 1152921504606846976 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 36028797018963967 := 4503599627370496 >>l 52
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 768 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 2 := 4503599627370496 >>l 52
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 768 >>l 60
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 2 := 4503599627370496 >>l 52
(smt.stats    2    313   7364   2257  2607/2376/122     298/18     6   24   52.56)
(smt.stats    3    414  11923   5259  2741/2498/128     399/22     8   28   52.66)
(sat.ddfw       1      1   32.7511     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.810s mem=54772KiB load=0.81 rootload=0.80
(smt.stats    4    525  14369   6738  2827/2538/132     504/33     9   34   52.75)
(smt.stats    5    647  17361   8671  2884/2615/133     616/37    11   41   52.75)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  20836  12743  2920/2650/133     715/37    11   41   52.86)
(smt.stats    7    859  25586  15534  2928/2683/133     825/37    11   41   52.96)
(sat.ddfw       1      1   29.0909    110001       539          4            1       12)
(smt.stats    8    981  28859  21188  2961/2719/139     950/38    12   42   53.17)
(smt.stats    9   1115  31646  27581  2984/2719/139    1080/38    13   47   53.17)
(smt.stats   10   1216  33691  32864  3046/2750/139    1183/38    13   47   53.17)
(smt.stats   11   1327  37025  37943  3082/2822/139    1294/38    13   47   53.41)
ramon: poll                 wall=2.000s usage=1.809s mem=55456KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   25.6274    160000       784          5            1       17)
(smt.stats   12   1449  39850  42385  3149/2903/141    1415/47    14   50   53.41)
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 18014398509481984&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963969 := 0 >>l 63
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 18014398509481984&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963969 := 0 >>l 63
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 18014398509481984&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 0 >>l 63
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 18014398509481984&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 0 >>l 63
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 62
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 62
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 1 := 0 >>l 54
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 62
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 1 := 0 >>l 54
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963969 := 0 >>l 62
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 0 >>l 62
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 0 >>l 62
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 0 := 18014398509481984 >>l 54
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 0 := 18014398509481984 >>l 54
(smt.stats   13   1583  41413  44778  3214/2936/147    1536/53    15   55   53.51)
(smt.stats   14   1730  42447  48096  3284/3009/164    1691/56    16   58   53.61)
(smt.stats   15   1831  43299  49685  3349/3089/165    1788/63    17   60   53.61)
(sat.ddfw       1      1   22.7363    220001      1078          6            1       23)
(smt.stats   16   1942  46128  53450  3358/3091/165    1901/63    17   60   53.70)
(smt.stats   17   2064  49072  59355  3409/3151/166    2015/64    18   68   53.70)
ramon: poll                 wall=3.000s usage=2.809s mem=55852KiB load=1.00 rootload=1.00
(smt.stats   18   2198  52251  66509  3421/3152/166    2151/64    19   69   53.80)
(smt.stats   19   2345  53735  73917  3519/3206/166    2299/64    19   69   53.80)
(smt.stats   20   2506  54871  82330  3545/3273/166    2460/64    19   69   53.80)
(smt.stats   21   2607  56472  86986  3551/3289/166    2571/64    19   69   54.06)
(sat.ddfw       1      1   20.3548    290001      1421          7            1       30)
(smt.stats   22   2718  57867  92794  3569/3297/166    2688/64    19   69   54.06)
(smt.stats   23   2840  62149  98340  3606/3323/166    2808/64    19   69   54.24)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats   24   2974  64017 101860  3635/3363/166    2935/65    19   69   54.33)
(smt.stats   25   3121  66579 108628  3641/3383/166    3085/65    19   69   54.33)
(smt.stats   26   3282  69867 117118  3642/3383/166    3246/65    19   69   54.43)
ramon: poll                 wall=4.000s usage=3.808s mem=56480KiB load=1.00 rootload=1.00
(smt.stats   27   3459  71961 122037  3728/3391/166    3425/65    19   69   54.52)
(smt.stats   28   3560  73753 125326  3734/3476/166    3522/65    19   69   54.52)
(sat.ddfw       1      1   18.3528    370001      1813          8            1       38)
(smt.stats   29   3671  78549 131608  3737/3479/166    3630/65    19   69   54.52)
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&5
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 5 := 0 >>l 56
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&5
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 5 := 0 >>l 56
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 0 >>l 56
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 0 >>l 56
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 0 >>l 56
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 1 := 0 >>l 56
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 2 := 281474976710656 >>l 48
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 2 := 562949953421311 >>l 48
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 2 := 281474976710656 >>l 48
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 2 := 281474976710656 >>l 48
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&1
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 2 := 281474976710656 >>l 48
(smt.stats   30   3793  82425 137134  3773/3484/166    3755/65    19   69   54.62)
(smt.stats   31   3927  83111 139553  3832/3527/176    3906/106    20   71   54.71)
(smt.stats   32   4074  84372 144379  3840/3578/176    4051/106    20   71   54.71)
ramon: poll                 wall=5.000s usage=4.744s mem=57556KiB load=0.94 rootload=0.93
(smt.stats   33   4235  86672 152598  3884/3582/176    4212/128    21   71   55.16)
(smt.stats   34   4412  89970 158658  3894/3632/177    4394/130    22   72   55.16)
(smt.stats   35   4606  92375 168605  3898/3636/177    4586/130    22   72   55.44)
(sat.ddfw       1      1     16.08    460001      2254          9            1       47)
(smt.stats   36   4707  93135 172529  3997/3636/177    4692/130    22   72   55.53)
(smt.stats   37   4818  94804 182222  4034/3746/177    4806/130    22   72   55.53)
(smt.stats   38   4940  96379 189066  4049/3786/177    4931/130    22   72   55.63)
ramon: poll                 wall=6.000s usage=5.665s mem=57668KiB load=0.92 rootload=0.92
(smt.delete-inactive-clauses  :num-deleted-clauses 139)
(smt.stats   39   5074  98922 193758  4051/3789/177    4925/130    22   72   55.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   40   5221 102960 199069  4051/3789/177    5072/130    22   72   55.63)
(smt.stats   41   5382 107504 207318  4053/3791/177    5231/130    22   72   55.63)
(smt.stats   42   5559 111285 214383  4058/3796/177    5419/130    22   72   55.74)
(smt.stats   43   5753 119905 220206  4062/3800/177    5609/130    22   72   55.74)
(smt.stats   44   5966 125734 227498  4063/3801/177    5821/130    22   72   55.74)
(smt.stats   45   6067 126593 230570  4068/3802/177    5926/130    22   72   55.86)
(smt.stats   46   6178 127553 235492  4078/3808/177    6041/130    22   72   55.86)
(smt.stats   47   6300 129538 244036  4129/3843/178    6180/175    23   72   55.86)
(sat.ddfw       1      1   14.7341    560001      2745         10            1       57)
(smt.stats   48   6434 132669 253747  4143/3871/178    6315/175    23   72   55.96)
ramon: poll                 wall=7.000s usage=6.610s mem=58432KiB load=0.95 rootload=0.95
(smt.stats   49   6581 136476 257242  4259/3887/178    6469/175    23   72   56.05)
(smt.stats   50   6742 141070 267241  4293/4009/178    6631/175    23   72   56.36)
(smt.stats   51   6919 145505 280349  4347/4031/178    6809/182    23   72   56.46)
ramon: poll                 wall=8.000s usage=7.564s mem=58800KiB load=0.95 rootload=0.95
(smt.stats   52   7113 148752 292585  4380/4099/178    7010/183    23   72   56.46)
(sat.ddfw       1      1   13.5903    670001      3284         11            1       68)
(smt.stats   53   7326 150377 295816  4424/4133/178    7216/184    23   72   56.46)
(smt.stats   54   7560 157526 303388  4435/4173/178    7446/184    23   72   56.56)
(smt.stats   55   7661 158312 306747  4436/4174/178    7550/184    23   72   56.56)
(smt.stats   56   7772 161398 311569  4439/4177/178    7658/184    23   72   56.56)
(smt.stats   57   7894 164157 319341  4444/4178/178    7779/184    23   72   56.56)
(smt.stats   58   8028 166298 325366  4446/4182/178    7913/184    23   72   56.56)
(smt.stats   59   8175 167890 333631  4537/4191/178    8060/184    23   72   56.56)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   60   8336 170972 340614  4586/4285/178    8227/184    23   72   56.56)
(smt.stats   61   8513 172420 348850  4608/4340/178    8412/184    23   72   56.67)
ramon: poll                 wall=9.000s usage=8.566s mem=59116KiB load=1.00 rootload=1.00
(smt.stats   62   8707 174662 359270  4661/4352/178    8617/187    23   72   56.67)
(smt.stats   63   8920 177816 384917  4697/4408/179    8836/257    24   74   56.77)
(smt.stats   64   9154 181827 402945  4727/4458/179    9084/257    24   74   57.52)
(sat.ddfw       1      1    12.621    790001      3872         12            1       80)
(smt.stats   65   9411 186269 424565  4727/4465/179    9341/257    24   74   57.64)
(smt.stats   66   9512 187598 430514  4754/4469/179    9449/257    24   74   57.64)
ramon: poll                 wall=10.000s usage=9.720s mem=60284KiB load=1.15 rootload=1.15
(smt.stats   67   9623 189312 445408  4768/4498/179    9562/257    24   74   57.74)
(smt.stats   68   9745 190925 454091  4768/4506/179    9685/257    24   74   57.74)
(smt.stats   69   9879 193757 463309  4782/4506/179    9823/257    24   74   57.83)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 195928 471589  4810/4532/179    9973/257    24   74   57.83)
(smt.stats   71  10187 198130 484621  4851/4548/179   10137/258    24   74   58.00)
(smt.stats   72  10364 202004 499171  4876/4589/180   10315/302    25   76   58.00)
(sat.ddfw       1      1   12.1371    920001      4509         13            1       93)
(smt.stats   73  10558 204773 513130  4880/4615/180   10515/302    25   76   58.00)
ramon: poll                 wall=11.002s usage=10.726s mem=60788KiB load=1.00 rootload=1.01
(smt.stats   74  10771 208270 534614  4963/4620/180   10745/303    25   76   58.53)
(smt.stats   75  11005 212140 556030  4990/4708/180   10978/303    25   76   58.62)
(smt.stats   76  11262 217479 566795  5034/4733/180   11234/303    25   76   58.62)
(smt.stats   77  11544 221567 599141  5119/4796/180   11508/304    25   76   58.74)
ramon: poll                 wall=12.000s usage=11.721s mem=61200KiB load=1.00 rootload=0.99
(smt.stats   78  11645 223904 620010  5122/4857/180   11609/304    25   76   58.74)
(smt.stats   79  11756 225677 631425  5125/4862/180   11720/304    25   76   58.85)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   80  11878 226929 639229  5134/4872/180   11837/304    25   76   58.85)
(smt.stats   81  12012 228044 649189  5140/4878/180   11968/304    25   76   58.85)
(smt.stats   82  12159 228700 657252  5144/4878/180   12120/305    25   76   58.96)
(smt.stats   83  12320 231552 681311  5146/4883/180   12291/305    25   76   59.05)
(sat.ddfw       1      1    11.325   1060001      5196         14            1      108)
(smt.stats   84  12497 233170 692323  5232/4883/180   12471/305    25   76   59.15)
(smt.stats   85  12691 236144 703765  5239/4976/180   12670/305    25   76   59.24)
(smt.stats   86  12904 238792 719972  5258/4976/180   12889/305    25   76   59.24)
ramon: poll                 wall=13.000s usage=12.801s mem=61840KiB load=1.08 rootload=1.08
(smt.stats   87  13138 241828 732766  5341/5070/180   13125/305    25   76   59.34)
(smt.stats   88  13395 244832 754721  5458/5079/180   13408/306    25   76   59.44)
(smt.stats   89  13677 248616 781823  5503/5201/180   13704/306    25   76   61.06)
ramon: poll                 wall=14.002s usage=13.805s mem=63832KiB load=1.00 rootload=1.00
(smt.stats   90  13987 253038 818589  5525/5245/180   14018/306    25   76   61.15)
(smt.stats   91  14088 254570 833327  5525/5262/180   14120/306    25   76   61.15)
(sat.ddfw       1      1   10.6217   1210001      5931         15            1      123)
(smt.stats   92  14199 256219 841598  5559/5263/180   14239/306    25   76   61.25)
(smt.stats   93  14321 258044 849572  5705/5374/180   14371/306    25   76   61.25)
(smt.stats   94  14455 260553 857278  5717/5450/180   14506/306    25   76   61.25)
(smt.stats   95  14602 262777 861787  5718/5455/180   14680/306    25   76   61.38)
(smt.stats   96  14763 266209 868760  5721/5458/180   14850/306    25   76   61.38)
ramon: poll                 wall=15.000s usage=14.802s mem=64164KiB load=1.00 rootload=1.00
(smt.stats   97  14940 269841 875263  5722/5459/180   15028/306    25   76   61.47)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   98  15134 273728 882684  5722/5459/180   15248/306    25   76   61.47)
(smt.stats   99  15347 278311 892638  5725/5462/180   15475/306    25   76   61.58)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats  100  15581 282571 901839  5725/5462/180   15724/306    25   76   61.58)
(smt.stats  101  15838 287479 914015  5725/5462/180   15994/306    25   76   61.69)
(smt.stats  102  16120 292120 924153  5725/5462/180   16305/306    25   76   61.69)
(smt.stats  103  16430 297840 935442  5726/5463/180   16635/306    25   76   61.78)
(smt.stats  104  16770 303996 949966  5726/5463/180   16975/306    25   76   61.88)
(smt.stats  105  16871 305970 954920  5726/5463/180   17080/306    25   76   61.88)
(smt.stats  106  16982 307791 959172  5727/5464/180   17191/306    25   76   61.88)
(smt.stats  107  17104 310163 963744  5727/5464/180   17313/306    25   76   61.98)
(smt.stats  108  17238 313242 970683  5727/5464/180   17447/306    25   76   62.58)
(smt.stats  109  17385 316308 977397  5727/5464/180   17596/306    25   76   62.58)
(smt.stats  110  17546 318980 983122  5727/5464/180   17758/306    25   76   62.58)
(smt.stats  111  17723 322504 990146  5727/5464/180   17937/306    25   76   62.69)
ramon: poll                 wall=16.000s usage=15.908s mem=65164KiB load=1.11 rootload=1.11
(smt.stats  112  17917 326166 999140  5727/5464/180   18133/306    25   76   62.69)
(sat.ddfw       1      1   9.99313   1370001      6715         16            1      139)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions    )
(smt.stats  113  18130 329714 1007549  5728/5465/180   18351/306    25   76   62.79)
(smt.stats  114  18364 334855 1017869  5728/5465/180   18585/306    25   76   62.79)
(smt.stats  115  18621 340356 1029416  5728/5465/180   18849/306    25   76   62.92)
(smt.stats  116  18903 346102 1040384  5728/5465/180   19133/306    25   76   62.92)
(smt.stats  117  19213 352183 1056488  5728/5465/180   19443/306    25   76   63.02)
(smt.stats  118  19553 358868 1071795  5728/5465/180   19783/306    25   76   63.02)
(smt.stats  119  19926 366762 1089054  5728/5465/180   20157/306    25   76   63.13)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats  120  20027 368680 1094453  5728/5465/180   20257/306    25   76   63.13)
(smt.stats  121  20138 371489 1099975  5728/5465/180   20372/306    25   76   63.13)
(smt.stats  122  20260 374360 1105353  5728/5465/180   20494/306    25   76   63.24)
ramon: poll                 wall=17.000s usage=16.965s mem=65916KiB load=1.06 rootload=1.05
(smt.stats  123  20394 377130 1111163  5728/5465/180   20629/306    25   76   63.24)
(smt.stats  124  20541 379990 1118339  5728/5465/180   20778/306    25   76   63.24)
(smt.stats  125  20702 384416 1127034  5728/5465/180   20940/306    25   76   63.24)
(smt.stats  126  20879 389206 1138747  5728/5465/180   21117/306    25   76   63.33)
(smt.stats  127  21073 393439 1149871  5729/5466/180   21311/306    25   76   63.33)
(smt.stats  128  21286 399089 1159128  5729/5466/180   21524/306    25   76   63.33)
(smt.stats  129  21520 404452 1172486  5729/5466/180   21758/306    25   76   63.33)
(smt.stats  130  21777 409545 1185187  5770/5467/180   22019/307    25   76   63.43)
(smt.stats  131  22059 415184 1201900  5782/5519/180   22300/307    25   76   63.53)
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&36028797018963967
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 72057594037927935 := 0 >>l 43
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&22
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963990 := 0 >>l 43
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&22
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963990 := 0 >>l 43
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&22
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963990 := 0 >>l 43
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&22
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963990 := 0 >>l 43
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&22
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 36028797018963990 := 0 >>l 43
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 21 := 0 >>l 35
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 21 := 0 >>l 35
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 21 := 0 >>l 35
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 21 := 0 >>l 35
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 21 := 0 >>l 35
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 58
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 58
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 58
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 6 := 0 >>l 50
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 58
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 6 := 0 >>l 50
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 58
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 6 := 0 >>l 50
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 58
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 1 := 0 >>l 50
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 0 >>l 58
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #122))) 1 := 0 >>l 50
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&0
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 0 := 288230376151711744 >>l 58
(smt.stats  132  22369 418387 1212695  5842/5530/180   22624/316    25   76   63.63)
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 4 := 4611686018427387904 >>l 58
band: (band[55] (if (= #650 63) 166153499473114484112975882535043072 (if #652 83076749736557242056487941267521536 #776)) (lshr[64] (* 256 #344) (mod #789 64))) 0 := 0&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #782 #786) 64)) 4 := 4611686018427387904 >>l 58
ramon: poll                 wall=18.000s usage=17.998s mem=66644KiB load=1.03 rootload=1.04
(sat.ddfw       1      1   9.43815   1540001      7549         17            1      156)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions    )
(smt.stats  133  22709 420457 1219963  6044/5611/200   23020/416    26   80   63.82)
ramon: poll                 wall=19.000s usage=18.962s mem=66832KiB load=0.96 rootload=0.96
(smt.stats  134  23082 424723 1236025  6367/6096/201   23384/422    26   80   63.91)
ramon: poll                 wall=20.000s usage=19.959s mem=66964KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:01:41 2024
ramon: root.execname        z3
ramon: root.utime           20.010s
ramon: root.stime           0.010s
ramon: group.total          20.033s
ramon: group.utime          20.017s
ramon: group.stime          0.016s
ramon: group.mempeak        67220KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
