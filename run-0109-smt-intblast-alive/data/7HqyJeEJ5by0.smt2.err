ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:34:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42647 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7HqyJeEJ5by0.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2809698
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   1599    438   553/497/103     128/10     6   17   18.75)
(smt.stats    1    202   2919    930   861/730/104     242/20     7   18   18.94)
(smt.stats    2    313   3251   1395  1239/1094/104     402/22     7   18   19.43)
(smt.stats    3    414   3672   1878  1419/1281/107     536/44     8   24   19.43)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 131063&1
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 131063&1
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 204 := 131063&43572
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 192 := 131063&43560
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 192 := 131063&43560
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 192 := 131063&43551
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 30 := 131063&31
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 131063&2
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 131063&43328
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 24 := 131063&43392
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 1 := 131063&2
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 131063&2
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 131063&64
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 131063&128
(smt.stats    4    525   5388   4735  1650/1542/151     978/109     9   36   19.52)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 152 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 160 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 192 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 256 := 65536&43584
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 512 := 65536&43584
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 1024 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2048 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2048 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 4096 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 8192 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 16384 := 65536&43520
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 512 := 65536&43328
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 512 := 65536&512
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2048 := 65536&2048
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2048 := 65536&2048
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2048 := 65536&2048
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2048 := 65536&2048
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2048 := 65536&2048
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 1024 := 65536&1024
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 1024 := 65536&1024
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 1024 := 65536&1024
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 16384 := 65536&16384
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 16384 := 65536&16384
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 16400 := 65536&16400
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 16384 := 65536&16384
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 16384 := 65536&16384
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 32768 := 65536&32768
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 32768 := 65536&32768
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 32768 := 65536&32768
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 65536 := 65536&65536
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 59179008 := 17252352 >>l 15
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 65536 := 65536&108894
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 58304862 := 17252352 >>l 15
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 65536 := 65536&108894
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 58173790 := 17252352 >>l 15
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
lshr: (lshr[17] (bv2int %0) (+ 17 (* 131071 #119))) 1 := 1053 >>l 1
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
lshr: (lshr[17] (bv2int %0) (+ 17 (* 131071 #119))) 1 := 1053 >>l 1
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
lshr: (lshr[17] (bv2int %0) (+ 17 (* 131071 #119))) 15 := 1053 >>l 1
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
lshr: (lshr[17] (bv2int %0) (+ 17 (* 131071 #119))) 15 := 1053 >>l 1
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
lshr: (lshr[17] (bv2int %0) (+ 17 (* 131071 #119))) 15 := 1053 >>l 1
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 526 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 1 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 16 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 128 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 1 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 2 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 4 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 8 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 16 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 32 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 64 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 128 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 256 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 512 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 512 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 512 := 65536&526
(smt.stats    5    647   7425   8887  1832/1635/241    1248/175    12   60   20.15)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 1 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 16 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 3 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 4 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 2 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 20 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 392 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 392 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 400 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 448 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 384 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 384 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 256 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 256 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 224 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 192 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 128 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 64 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 32 := 65536&526
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748   8961  12095  1945/1813/369    1490/223    13   88   20.34)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 256 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 32 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 32 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 8 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 8 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 130 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 130 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 132 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 132 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 132 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 16 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&526
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 16 := 65536&526
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 0 := 65536&594
band: (band[17] (if (= #123 16) 8589344768 (if #318 4294672384 #348)) (lshr[17] (bv2int %0) (+ 17 #351))) 16 := 65536&594
(smt.stats    7    859  10877  15886  2097/1895/369    1887/228    13   88   20.54)
(smt.stats    8    981  12959  22420  2188/2047/412    2406/403    15  119   20.82)
ramon: poll                 wall=1.000s usage=0.998s mem=22152KiB load=1.00 rootload=0.97
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 65536 := 131063&65664
(smt.stats    9   1115  15745  30813  2347/2152/420    2940/487    17  149   20.92)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 65536 := 131063&65626
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 65536 := 131063&65628
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 65536 := 131063&65884
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 65536 := 131063&65628
(smt.stats   10   1216  16876  36075  2546/2227/420    3114/543    18  149   21.02)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 98304 := 131063&99418
(smt.stats   11   1327  17786  41218  2838/2466/430    3328/544    18  149   21.29)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  18359  44330  3213/3067/440    3999/552    19  151   21.68)
(smt.stats   13   1583  22241  66011  3286/3099/444    4860/808    20  190   21.88)
(smt.stats   14   1730  27774  95823  3335/3181/444    5329/1065    21  197   21.97)
(smt.stats   15   1831  32171 120459  3350/3195/444    5823/1066    21  197   21.97)
(smt.stats   16   1942  34667 132403  3431/3286/447    6288/1384    22  197   22.16)
(smt.stats   17   2064  38162 155608  3464/3309/450    6773/1546    23  209   22.16)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  43721 184465  3485/3319/450    7038/1626    24  224   22.26)
ramon: poll                 wall=2.000s usage=1.998s mem=23564KiB load=1.00 rootload=1.00
(smt.stats   19   2345  47070 207032  3494/3347/452    7298/1730    25  226   22.36)
(smt.stats   20   2506  52487 247571  3510/3363/454    7723/1770    26  230   22.36)
(smt.stats   21   2608  56205 272754  3546/3397/456    7890/1930    28  257   22.50)
(smt.stats   22   2719  60103 300808  3558/3406/456    8186/1930    28  257   22.50)
(smt.stats   23   2841  64294 329895  3561/3410/459    8470/2049    29  263   22.50)
(smt.stats   24   2975  67750 352894  3647/3495/462    8901/2066    30  282   22.50)
(smt.stats   25   3122  69368 364554  3952/3528/462    9362/2069    30  282   22.80)
(smt.stats   26   3283  70896 383158  4198/3857/462    9921/2134    31  282   22.89)
ramon: poll                 wall=3.000s usage=2.998s mem=24192KiB load=1.00 rootload=0.99
(smt.stats   27   3460  73961 406697  4414/4259/465   10668/2161    32  283   22.99)
(smt.stats   28   3561  76031 423319  4442/4271/465   11037/2161    32  283   22.99)
(smt.stats   29   3672  76313 424209  4580/4417/465   11194/2211    33  284   23.18)
(smt.stats   30   3794  76688 425771  5136/4879/465   11471/2212    33  284   23.28)
(smt.stats   31   3928  77003 426782  5508/5344/465   11618/2212    33  284   23.47)
(smt.stats   32   4075  78622 433192  6127/5953/466   12667/2216    33  284   23.66)
(smt.stats   33   4236  80156 442943  6319/6023/466   13400/2219    33  284   23.85)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 111360 := 114688&111376
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 111360 := 114688&111376
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 111360 := 114688&111376
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 114688 := 114688&114704
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 80723984 := 1064960 >>l 17
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 114688 := 114688&114704
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 80723984 := 1064960 >>l 17
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 114688 := 114688&114704
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 80723984 := 1622016 >>l 17
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 114688 := 114688&114704
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 80723984 := 1622016 >>l 17
(smt.stats   34   4413  81835 456453  6504/6351/472   14852/2520    34  285   24.04)
(smt.stats   35   4607  85784 473478  6593/6394/475   16443/2525    34  285   24.23)
(smt.stats   36   4708  88449 498890  6763/6447/475   16824/2844    35  296   24.34)
ramon: poll                 wall=4.003s usage=4.000s mem=25768KiB load=1.00 rootload=1.01
(smt.stats   37   4819  89805 512201  6824/6625/475   17404/2845    35  296   24.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941  93390 544291  6958/6696/475   18572/2850    35  296   24.64)
(smt.delete-inactive-clauses  :num-deleted-clauses 104)
(smt.stats   39   5075  96416 564938  6994/6818/475   20246/2852    35  296   24.83)
(smt.stats   40   5222 102650 642717  7027/6860/476   21412/3702    36  297   25.03)
ramon: poll                 wall=5.000s usage=4.996s mem=26992KiB load=1.00 rootload=0.99
(smt.stats   41   5383 106228 675272  7450/7083/476   22436/3714    36  297   25.43)
(smt.stats   42   5560 109711 699405  7483/7240/476   23553/3714    36  297   25.62)
(smt.stats   43   5754 114164 721804  7671/7269/476   24273/3719    36  297   25.71)
ramon: poll                 wall=6.003s usage=5.998s mem=27428KiB load=1.00 rootload=1.01
(smt.stats   44   5967 116480 732045  7882/7465/476   24914/3725    36  297   25.93)
(smt.stats   45   6068 118429 750370  8007/7770/476   25342/3726    36  297   26.03)
(smt.stats   46   6179 119694 759917  8042/7788/476   25884/3727    36  297   26.03)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 25933 := 131063&25936
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 25932 := 131063&25936
(smt.stats   47   6301 121393 784567  8221/7941/477   26843/4327    37  299   26.24)
(smt.stats   48   6435 122936 808638  8309/8010/477   27548/4329    37  299   26.46)
(smt.stats   49   6582 125230 834784  8327/8105/477   28334/4329    37  299   26.65)
(smt.stats   50   6743 126268 854384  8344/8113/477   28691/4329    37  299   26.65)
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&65
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&104
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&320
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&320
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&256
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&256
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&88
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&80
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&80
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&72
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 99876936 := 10862592 >>l 31
ramon: poll                 wall=7.000s usage=6.994s mem=28532KiB load=1.00 rootload=0.99
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&72
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 106561608 := 14204928 >>l 31
band: (band[17] (if (= #366 31) 281455649357824 (if #368 140727824678912 #428)) (lshr[32] (* 16384 #117) (mod #447 32))) 64 := 131063&72
lshr: (lshr[32] (* 16384 (bv2int %0)) (mod (+ 31 #434 #201 #359) 32)) 106561608 := 14204928 >>l 31
(smt.stats   51   6920 127665 879160  8429/8188/493   30894/4573    38  304   27.14)
(smt.stats   52   7114 130481 907924  8594/8348/499   31969/4579    38  304   27.24)
(smt.stats   53   7327 135818 936762  8813/8567/500   33139/4587    38  304   27.52)
ramon: poll                 wall=8.000s usage=7.991s mem=29576KiB load=1.00 rootload=0.99
(smt.stats   54   7561 141357 967439  9008/8609/500   34163/4785    39  309   27.91)
(smt.stats   55   7662 144828 978020  9089/8809/500   34747/4786    39  309   28.10)
(smt.stats   56   7773 146586 989476  9116/8854/500   35092/4789    39  309   28.10)
(smt.stats   57   7895 148456 998580  9152/8889/500   35387/4791    39  309   28.10)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8029 150534 1018393  9218/8924/500   35894/4794    39  309   28.19)
ramon: poll                 wall=9.000s usage=8.991s mem=30068KiB load=1.00 rootload=1.00
(smt.stats   59   8176 152577 1026645  9470/9035/500   36250/4799    39  309   28.40)
(smt.stats   60   8337 154052 1039348  9755/9303/501   36720/5033    40  316   28.50)
(smt.stats   61   8514 155756 1059388  9975/9636/503   37338/5034    40  316   28.59)
(smt.stats   62   8708 158827 1082337 10220/9848/504   38319/5038    40  316   28.78)
ramon: poll                 wall=10.000s usage=9.990s mem=30496KiB load=1.00 rootload=1.00
(smt.stats   63   8921 165058 1162947 10391/10008/504   40888/5043    40  316   29.07)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   64   9155 170669 1220612 10459/10162/510   42853/5219    41  350   29.48)
ramon: poll                 wall=11.000s usage=10.990s mem=31596KiB load=1.00 rootload=1.00
(smt.stats   65   9412 175773 1290931 10746/10248/510   43993/5222    41  350   29.86)
(smt.stats   66   9513 177323 1312977 10779/10535/514   48118/5449    42  372   30.25)
(smt.stats   67   9624 181888 1354537 10782/10538/514   50917/5449    42  372   30.45)
(smt.stats   68   9746 184947 1392865 10814/10551/515   52558/5452    42  372   30.64)
ramon: poll                 wall=12.000s usage=11.989s mem=32476KiB load=1.00 rootload=1.00
(smt.stats   69   9880 188147 1416115 10917/10612/516   53054/5454    42  372   30.73)
(smt.delete-inactive-clauses  :num-deleted-clauses 1858)
(smt.stats   70  10027 191325 1449655 10958/10712/518   52744/6000    43  408   30.83)
(smt.stats   71  10188 195346 1491211 11026/10724/518   53622/6003    43  408   30.92)
(smt.stats   72  10365 199310 1524348 11165/10801/518   55349/6013    43  408   31.03)
ramon: poll                 wall=13.000s usage=12.989s mem=32964KiB load=1.00 rootload=1.00
(smt.stats   73  10559 202796 1557661 11230/10937/518   57072/6304    44  416   31.25)
(smt.stats   74  10772 206786 1637315 11240/10995/520   59532/6304    44  416   31.54)
(smt.stats   75  11006 211035 1727892 11260/11011/522   62429/6633    45  469   32.06)
ramon: poll                 wall=14.000s usage=13.988s mem=33800KiB load=1.00 rootload=1.00
(smt.stats   76  11263 212915 1755355 11694/11017/522   63417/6634    45  469   32.44)
ramon: poll                 wall=15.000s usage=14.988s mem=34000KiB load=1.00 rootload=1.00
(smt.stats   77  11545 215455 1792248 11910/11466/522   64645/6634    45  469   32.54)
(smt.stats   78  11646 216365 1797192 11931/11674/522   64768/6634    45  469   32.63)
ramon: poll                 wall=16.002s usage=15.975s mem=34380KiB load=0.99 rootload=0.98
(smt.stats   79  11757 217230 1814781 12051/11715/522   65078/6634    45  469   32.63)
(smt.stats   80  11879 218195 1829040 12192/11832/522   65627/6635    45  469   32.73)
(smt.stats   81  12013 221294 1850383 12268/11991/522   66647/6635    45  469   32.73)
(smt.stats   82  12160 223700 1898203 12319/12027/522   67377/6836    46  486   32.92)
ramon: poll                 wall=17.000s usage=16.974s mem=34740KiB load=1.00 rootload=1.00
(smt.stats   83  12321 224231 1903756 12808/12180/522   67581/6836    46  486   33.02)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12498 224785 1911115 13152/12606/522   67834/6837    46  486   33.11)
ramon: poll                 wall=18.000s usage=17.974s mem=34972KiB load=1.00 rootload=1.00
(smt.stats   85  12692 227265 1924540 13624/13197/522   68348/6844    46  486   33.21)
(smt.stats   86  12905 228674 1930610 14071/13594/522   68623/6854    46  486   33.41)
(smt.stats   87  13139 235168 2001821 14346/14098/522   70099/6854    46  486   33.50)
ramon: poll                 wall=19.000s usage=18.973s mem=35260KiB load=1.00 rootload=1.00
(smt.stats   88  13396 236295 2022201 14676/14104/522   70688/6861    46  486   33.79)
(smt.stats   89  13678 238034 2058926 15328/14803/522   71491/6862    46  486   33.89)
ramon: poll                 wall=20.000s usage=19.973s mem=35652KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:34:22 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.980s
ramon: group.utime          19.944s
ramon: group.stime          0.036s
ramon: group.mempeak        35908KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
