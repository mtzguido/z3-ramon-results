ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:09:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28684 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/HsvyJDP2vQT3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             733881
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4736    993  1221/1101/89      98/2     2   13   51.87)
(smt.stats    1    202   6077   2357  1845/1651/89     198/2     2   13   51.98)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&1
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&1
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&1
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&1
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   102.041     10000        49          0            1        2)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&2
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&2
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&8
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&32
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&32
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&64
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&32
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&64
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&128
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 16 := 137438953471&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 16 := 142 << 36
(sat.ddfw       1      1   42.9227     20001        98          1            1        3)
(smt.stats    2    313   7413   4091  2101/1904/171     303/12     5   32   52.60)
(smt.stats    3    414   8647   5811  2429/2200/175     406/23     6   33   52.73)
(smt.stats    4    525  12424   8174  2473/2247/177     512/27     7   35   52.73)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 48 := 17179869183&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 18014398509482032 := 1879048192 << 33
(sat.ddfw       1      1    45.045     40001       196          2            1        5)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 48 := 17179869183&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 18014398509482032 := 1342177384 << 33
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 48 := 17179869183&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 18014398509482032 := 1342177492 << 33
(smt.stats    5    647  14525  10198  2508/2278/184     637/32     8   38   52.83)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16167  12661  2559/2317/185     754/42    10   44   52.83)
(smt.stats    7    859  19985  15620  2614/2381/188     826/63    11   76   52.93)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 4 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 52 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 95 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 94 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 348 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 340 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 532 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 532 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 532 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 596 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 532 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 596 := 2251799813685247&11274289364
(sat.ddfw       1      1   40.2145     70001       343          3            1        8)
(smt.stats    8    981  22482  18300  2725/2489/233    1019/69    13   86   53.13)
(smt.stats    9   1115  26287  23859  2738/2502/240    1167/111    14   99   53.23)
ramon: poll                 wall=1.000s usage=0.876s mem=55440KiB load=0.88 rootload=0.86
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&4604204941312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 5260208968973680640 := 10737418420 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&18014398509481728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11529215046068469504 := 10737418312 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&4604204941312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11511205251763929088 := 10737418312 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&18014398509481728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11529215046068469504 := 10737418312 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&4604204941312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11511205251763929088 := 10737418420 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&4604204941312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11511205251763929088 := 10737418312 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&18014398509481728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11529215046068469504 := 10905190372 << 3
(smt.stats   10   1216  29899  27797  2761/2525/247    1262/161    16  104   53.33)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 6755400649015412 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 6755400649015412 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 6755400649015412 << 4
(smt.stats   11   1327  32348  30848  2817/2532/248    1385/164    16  104   53.42)
(sat.ddfw       1      1   34.6921    110001       539          4            1       12)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327359552
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 2251801021645219 := 2251801021645220 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327366464
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 2251801021645652 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327366464
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 2251801021645652 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1840393492800
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 2251914838278548 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1840393492800
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 2251914838278548 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 15 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 14 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 12 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 8 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 12 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 8 := 15&1125902054326848
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33677  33526  3005/2753/287    1585/185    17  107   53.61)
(smt.stats   13   1583  38444  41866  3033/2789/290    1741/197    18  130   53.61)
(smt.stats   14   1730  40315  44930  3184/2830/293    1978/250    19  130   53.82)
(smt.stats   15   1831  41216  47705  3487/3040/293    2143/250    19  130   53.98)
(sat.ddfw       1      1   30.0475    160000       784          5            1       17)
(smt.stats   16   1942  43335  57473  3861/3609/297    2707/282    21  133   54.08)
(smt.stats   17   2064  45642  63188  3984/3707/299    3217/523    22  134   54.17)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 226 := 2251799813685247&1125901114804626
ramon: poll                 wall=2.004s usage=1.878s mem=56764KiB load=1.00 rootload=1.01
(smt.stats   18   2198  49458  76175  4088/3773/300    3417/523    22  134   54.36)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 240 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 242 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 464 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 466 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 402 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 402 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 402 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 410 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 402 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1168 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1168 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1168 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1170 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1168 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1170 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765823890
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765823890
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765825426
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765825426
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765826450
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322170436915090
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322170168479634
(smt.stats   19   2345  51068  80147  4400/3858/300    3755/555    23  138   54.71)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 658 := 9007199254740991&2322170436913810
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2506  55987 101060  4544/4298/395    4736/1125    25  168   54.90)
(sat.ddfw       1      1   26.3857    220001      1078          6            1       23)
(smt.stats   21   2607  61144 125713  4562/4313/395    4976/1126    25  168   54.90)
(smt.stats   22   2718  64976 141451  4636/4338/395    5348/1126    25  168   55.16)
(smt.stats   23   2840  70039 157214  4667/4412/395    5665/1126    25  168   55.16)
(smt.stats   24   2974  73012 166221  4694/4439/397    6154/1691    26  173   55.38)
ramon: poll                 wall=3.000s usage=2.874s mem=57744KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   23.4427    290001      1421          7            1       30)
(smt.stats   25   3121  81564 209726  4701/4446/400    6438/1691    26  173   55.38)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1122 := 4503599627370495&17179870816
(smt.stats   26   3282  86370 226887  4815/4451/400    6966/1866    27  185   55.57)
(smt.stats   27   3459  90197 242859  5149/4671/400    7421/1876    27  185   55.76)
(sat.ddfw       1      1   20.9919    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.873s mem=58280KiB load=1.00 rootload=1.00
(smt.stats   28   3560  92545 254887  5281/4900/400    7869/1884    27  185   55.96)
(smt.stats   29   3671  94281 267624  5571/5087/400    8270/1894    27  185   56.05)
(sat.ddfw       1      1   19.0355    460001      2254          9            1       47)
(smt.stats   30   3793  96499 279972  5773/5326/400    8715/1896    27  185   56.17)
ramon: poll                 wall=5.000s usage=4.871s mem=58612KiB load=1.00 rootload=1.00
(smt.stats   31   3927  98624 295022  5966/5544/400    9149/1897    27  185   56.46)
(smt.stats   32   4074 101987 316222  6039/5770/402    9648/2571    28  189   56.56)
(smt.stats   33   4235 104580 328606  6383/5791/402   10026/2577    28  189   56.65)
(sat.ddfw       1      1   17.3883    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.868s mem=59128KiB load=1.00 rootload=1.00
(smt.stats   34   4412 107347 336030  6592/6132/402   10344/2701    29  194   56.75)
(smt.stats   35   4606 109657 343681  6634/6379/402   10593/2701    29  194   56.75)
(smt.stats   36   4707 114686 377981  6652/6392/402   11169/2701    29  194   56.75)
(smt.stats   37   4818 117287 390837  6879/6416/402   11512/2705    29  194   56.84)
(smt.stats   38   4940 119418 407896  7114/6653/402   11884/2710    29  194   56.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
ramon: poll                 wall=7.000s usage=6.730s mem=59296KiB load=0.86 rootload=0.86
(sat.ddfw       1      1   15.5653    670001      3284         11            1       68)
(smt.stats   39   5074 122153 428095  7190/6903/405   12250/3286    30  196   57.04)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5221 124524 432537  7709/7015/405   12515/3289    30  196   57.23)
ramon: poll                 wall=8.004s usage=7.694s mem=59664KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   14.3644    790001      3872         12            1       80)
(smt.stats   41   5382 126661 439462  8140/7812/406   12793/3504    31  199   57.32)
(smt.stats   42   5559 130725 466100  8371/8088/409   13461/3509    31  199   57.42)
ramon: poll                 wall=9.004s usage=8.667s mem=59920KiB load=0.97 rootload=0.97
(smt.stats   43   5753 136926 509530  8649/8132/409   14076/3756    32  208   57.51)
(sat.ddfw       1      1   13.3251    920001      4509         13            1       93)
(smt.stats   44   5966 140596 533944  8899/8435/409   14838/3756    32  208   57.88)
(smt.stats   45   6067 141894 538512  8917/8653/409   15094/3756    32  208   57.88)
ramon: poll                 wall=10.000s usage=9.746s mem=60156KiB load=1.08 rootload=1.08
(smt.stats   46   6178 144320 549256  9055/8692/409   15296/3759    32  208   57.88)
(smt.stats   47   6300 145984 560959  9198/8826/409   15730/3760    32  208   58.12)
(smt.stats   48   6434 147928 581343  9361/8967/409   16157/3761    32  208   58.22)
ramon: poll                 wall=11.000s usage=10.728s mem=60508KiB load=0.98 rootload=0.99
(smt.stats   49   6581 150365 598098  9505/9236/410   16914/4364    33  235   58.22)
(sat.ddfw       1      1   12.4933   1060001      5196         14            1      108)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1171 := 9007199254740991&1287
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1175 := 9007199254740991&1287
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1287 := 9007199254740991&1287
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11385099857992615175 := 33776998547456054 << 52
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1287 := 9007199254740991&1287
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11385099857992615175 := 33776998547456162 << 52
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1287 := 9007199254740991&1287
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11385099857992615175 := 33776998547456054 << 52
(smt.stats   50   6742 153628 614097  9751/9262/410   17477/4373    33  235   58.43)
(smt.stats   51   6919 159228 671558  9803/9546/415   18303/4373    33  235   58.62)
(smt.stats   52   7113 163259 697087  9840/9562/416   19043/4803    34  236   58.62)
ramon: poll                 wall=12.000s usage=11.728s mem=61020KiB load=1.00 rootload=1.00
(smt.stats   53   7326 173077 764343  9892/9629/417   19669/4803    34  236   58.72)
(smt.stats   54   7560 178478 799657 10104/9833/419   20711/5382    35  256   58.81)
(sat.ddfw       1      1   11.7463   1210001      5931         15            1      123)
(smt.stats   55   7661 181701 830684 10133/9877/420   21076/5779    36  283   59.00)
ramon: poll                 wall=13.000s usage=12.729s mem=61532KiB load=1.00 rootload=1.00
(smt.stats   56   7772 187915 889594 10236/9959/420   21416/5779    36  283   59.00)
(smt.stats   57   7894 191208 908298 10402/9965/421   21773/6033    37  283   59.23)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8028 194321 938979 10466/10189/425   22448/6033    37  283   59.31)
(smt.stats   59   8175 199490 987859 10479/10198/425   23023/6273    38  303   59.41)
ramon: poll                 wall=14.000s usage=13.729s mem=61788KiB load=1.00 rootload=1.00
(smt.stats   60   8336 201275 1002601 10533/10208/425   23359/6276    38  303   59.41)
(smt.stats   61   8513 202357 1008504 10549/10263/425   24241/6276    38  303   59.50)
(sat.ddfw       1      1   11.1065   1370001      6715         16            1      139)
(smt.stats   62   8707 210244 1078912 10559/10282/425   24527/6276    38  303   60.03)
ramon: poll                 wall=15.004s usage=14.781s mem=62300KiB load=1.05 rootload=1.05
(smt.stats   63   8920 218032 1159498 10716/10288/425   25122/6279    38  303   60.22)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   64   9154 223693 1196308 10789/10512/428   25709/6758    39  304   60.32)
ramon: poll                 wall=16.000s usage=15.807s mem=62464KiB load=1.03 rootload=1.02
(sat.ddfw       1      1   10.5926   1540001      7549         17            1      156)
(smt.stats   65   9411 237290 1373892 10792/10515/428   26066/6758    39  304   60.32)
(smt.stats   66   9512 238575 1382151 10800/10519/428   26348/6791    40  311   60.41)
(smt.stats   67   9623 241894 1394245 10800/10523/428   26522/6791    40  311   60.41)
(smt.stats   68   9745 245385 1417149 10807/10530/428   26689/6791    40  311   60.41)
(smt.stats   69   9879 251548 1448820 10807/10530/428   26832/6791    40  311   60.41)
ramon: poll                 wall=17.000s usage=16.791s mem=62728KiB load=0.98 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 234)
(smt.stats   70  10026 255462 1480878 10840/10536/428   26930/6791    40  311   60.41)
(smt.stats   71  10187 258381 1500510 11009/10570/428   27377/6794    40  311   60.58)
ramon: poll                 wall=18.000s usage=17.799s mem=63244KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   10.0139   1720001      8431         18            1      174)
(smt.stats   72  10364 259803 1508619 11361/10804/428   27768/6796    40  311   60.77)
(smt.stats   73  10558 261553 1512745 11615/11147/428   28215/6801    40  311   60.87)
ramon: poll                 wall=19.000s usage=18.757s mem=63360KiB load=0.96 rootload=0.95
ramon: poll                 wall=20.000s usage=19.736s mem=63360KiB load=0.98 rootload=0.98
ramon: end                  Fri Nov  1 22:09:29 2024
ramon: root.execname        z3
ramon: root.utime           19.810s
ramon: root.stime           0.000s
ramon: group.total          19.819s
ramon: group.utime          19.811s
ramon: group.stime          0.008s
ramon: group.mempeak        63616KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              0.99
