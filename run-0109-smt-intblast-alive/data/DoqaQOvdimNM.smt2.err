ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:49:40 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42282 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DoqaQOvdimNM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2863269
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   4187    581  1323/1184/107     107/22     5   17   19.25)
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&12287
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 12287 := 12288 >>l 15
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&12287
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 12287 := 12288 >>l 15
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1 := 21110623253299200&1
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 2 := 21110623253299200&2
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 1 := 12288 >>l 15
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 1 := 12288 >>l 15
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&1
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 1 := 12288 >>l 15
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 702 := 48 >>l 7
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 702 := 48 >>l 7
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 49 := 48 >>l 7
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 49 := 48 >>l 7
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 49 := 48 >>l 7
(smt.stats    1    202   6444   5693  1574/1422/121     205/28     7   21   19.44)
(smt.stats    2    313  10296   8770  1621/1457/122     314/29     7   21   19.54)
(smt.stats    3    414  11763  10404  2180/1928/126     404/36     9   29   19.63)
(smt.stats    4    525  13637  12349  2432/2201/130     513/51    11   35   19.82)
(smt.stats    5    647  14251  13121  2583/2232/130     649/54    11   35   19.92)
ramon: poll                 wall=1.000s usage=0.931s mem=21380KiB load=0.93 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14960  13729  2863/2519/131     761/56    11   35   20.01)
(smt.stats    7    859  15308  14102  2975/2646/131     873/61    12   38   20.11)
(smt.stats    8    981  16164  15276  3279/2924/131    1002/61    12   38   20.11)
ramon: poll                 wall=2.000s usage=1.929s mem=21348KiB load=1.00 rootload=1.00
(smt.stats    9   1115  18756  20612  3345/3069/136    1144/61    12   38   20.21)
(smt.stats   10   1216  20531  21845  3478/3148/136    1243/79    13   48   20.41)
ramon: poll                 wall=3.000s usage=2.922s mem=21572KiB load=0.99 rootload=0.99
(smt.stats   11   1327  21935  23343  3662/3310/136    1360/80    13   48   20.41)
(smt.stats   12   1449  22518  24509  3823/3495/136    1491/80    13   48   20.41)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   13   1583  23799  28618  3956/3673/137    1652/103    14   48   20.50)
(smt.stats   14   1730  26027  31620  4150/3806/137    1812/104    14   48   20.60)
ramon: poll                 wall=4.000s usage=3.921s mem=21836KiB load=1.00 rootload=1.00
(smt.stats   15   1831  27720  36233  4239/3942/137    1912/104    14   48   20.60)
(smt.stats   16   1942  31900  43247  4339/4005/137    2038/107    14   48   20.69)
(smt.stats   17   2064  33590  44780  4509/4111/137    2162/115    14   48   20.69)
(smt.stats   18   2198  35850  50685  4631/4298/137    2310/115    14   48   20.79)
ramon: poll                 wall=5.000s usage=4.919s mem=22008KiB load=1.00 rootload=1.00
(smt.stats   19   2345  38499  54519  4788/4401/137    2473/116    14   48   20.88)
(smt.stats   20   2506  40683  59924  4909/4636/138    2662/153    15   50   20.88)
ramon: poll                 wall=6.000s usage=5.918s mem=22264KiB load=1.00 rootload=1.00
(smt.stats   21   2607  41930  66353  5005/4662/138    2783/154    15   50   21.01)
(smt.stats   22   2718  43882  69145  5020/4764/138    2901/154    15   50   21.01)
(smt.stats   23   2840  45713  74722  5072/4787/139    3108/269    16   51   21.01)
(smt.stats   24   2974  46897  77975  5180/4857/139    3252/271    16   51   21.13)
(smt.stats   25   3121  49171  85903  5248/4950/140    3464/316    17   52   21.13)
(smt.stats   26   3282  53230  91268  5308/5015/140    3658/317    17   52   21.13)
(smt.stats   27   3459  58077 108287  5338/5079/145    3961/398    18   61   21.23)
ramon: poll                 wall=7.000s usage=6.916s mem=22600KiB load=1.00 rootload=0.99
(smt.stats   28   3560  60244 117372  5354/5099/145    4126/398    18   61   21.23)
(smt.stats   29   3671  63926 127425  5358/5107/145    4237/398    18   61   21.23)
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 16 := 36028797018855424&39
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36028797018855424&39
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 39 := 26346496 >>l 52
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36028797018855424&39
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 39 := 26346496 >>l 52
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 11 := 36028797018855424&34
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 12 := 36028797018855424&35
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 16 := 36028797018855424&39
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36028797018855424&39
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 39 := 26346496 >>l 52
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36028797018855424&34
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 34 := 26346496 >>l 52
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36028797018855424&34
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 34 := 26346496 >>l 52
(smt.stats   30   3793  67871 139424  5397/5108/145    4364/398    18   61   21.32)
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36028797018855424&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 22 := 102916 >>l 44
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36028797018855424&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 22 := 102916 >>l 44
(smt.stats   31   3927  70529 148549  5427/5168/156    4511/428    19   62   21.32)
(smt.stats   32   4074  72351 157503  5492/5190/156    4698/443    20   63   21.42)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   33   4235  74947 165628  5598/5258/156    4940/444    20   63   21.56)
(smt.stats   34   4412  78105 177896  5671/5363/156    5121/446    20   63   21.56)
(smt.stats   35   4606  80808 185505  5714/5422/156    5344/446    20   63   21.56)
(smt.stats   36   4707  81857 191796  5761/5482/156    5482/446    20   63   21.66)
(smt.stats   37   4818  83591 198201  5779/5515/156    5599/446    20   63   21.66)
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 4 := 36027886485897216&4
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 3 := 36027886485897216&4
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 2 := 36027886485897216&4
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 36028797018963972 := 65024 >>l 29
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 2 := 36027886485897216&4
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 36028797018963972 := 65024 >>l 29
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 36028797018963972 := 65024 >>l 29
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 36028797018963972 := 65024 >>l 29
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 3 := 254 >>l 21
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 3 := 254 >>l 21
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 3 := 254 >>l 21
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 3 := 254 >>l 21
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 36027886485897216&0
lshr: (lshr[55] (bv2int %0) (+ 55 (* 36028797018963967 #121))) 3 := 254 >>l 21
(smt.stats   38   4940  84813 206009  5847/5532/156    5733/452    20   63   21.75)
ramon: poll                 wall=8.000s usage=7.915s mem=23340KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  86845 208699  5891/5600/181    5945/520    21   68   21.85)
(smt.stats   40   5221  90055 219563  5947/5652/181    6128/520    21   68   21.95)
(smt.stats   41   5382  92709 228721  6121/5717/181    6471/540    22   68   22.04)
(smt.stats   42   5559  96003 239551  6285/5933/181    6705/550    22   68   22.14)
ramon: poll                 wall=9.000s usage=8.913s mem=23620KiB load=1.00 rootload=1.00
(smt.stats   43   5753  99257 254154  6539/6089/181    6915/551    22   68   22.14)
(smt.stats   44   5966 104157 270687  6641/6323/181    7221/551    22   68   22.23)
(smt.stats   45   6067 106633 276952  6676/6412/181    7417/551    22   68   22.45)
(smt.stats   46   6178 108479 284673  6753/6429/181    7559/552    22   68   22.45)
ramon: poll                 wall=10.000s usage=9.913s mem=23804KiB load=1.00 rootload=1.00
(smt.stats   47   6300 110843 299414  6819/6510/181    7838/552    22   68   22.55)
(smt.stats   48   6434 113620 310030  6932/6596/181    8031/554    22   68   22.64)
(smt.stats   49   6581 116038 319887  6980/6719/182    8230/713    23   70   22.64)
ramon: poll                 wall=11.000s usage=10.912s mem=24204KiB load=1.00 rootload=1.00
(smt.stats   50   6742 117162 326105  7197/6724/184    8402/714    23   70   22.83)
(smt.stats   51   6919 120044 340241  7404/6974/184    8676/717    23   70   22.93)
(smt.stats   52   7113 123762 357031  7516/7234/184    8933/731    24   86   22.93)
ramon: poll                 wall=12.000s usage=11.911s mem=24416KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   53   7326 129481 376993  7641/7263/184    9246/737    24   86   23.03)
ramon: poll                 wall=13.005s usage=12.916s mem=24632KiB load=1.00 rootload=1.00
(smt.stats   54   7560 134417 396027  7949/7494/184    9573/740    24   86   23.03)
(smt.stats   55   7661 136979 411344  8056/7721/184    9733/743    24   86   23.12)
(smt.stats   56   7772 138766 417153  8067/7803/184    9845/744    24   86   23.12)
(smt.stats   57   7894 140328 422110  8120/7828/184    9974/746    24   86   23.22)
(smt.stats   58   8028 142052 429022  8141/7883/185   10165/892    25   87   23.22)
(smt.stats   59   8175 145945 445500  8162/7904/185   10307/892    25   87   23.22)
(smt.stats   60   8336 150565 460772  8197/7926/186   10471/897    26   87   23.31)
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 4 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 2 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 2 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 8 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 16 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 16 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 8 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 8 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 8 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 8 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 16 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 16 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 16 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&17
band: (band[55] (if (= #125 54) 649037107316852498803191038607360 (if #526 324518553658426249401595519303680 #632)) (lshr[55] (bv2int %0) (+ 55 #635))) 1 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&17
band: (band[55] (if (= #125 54) 649037107316852498803191038607360 (if #526 324518553658426249401595519303680 #632)) (lshr[55] (bv2int %0) (+ 55 #635))) 2 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&17
band: (band[55] (if (= #125 54) 649037107316852498803191038607360 (if #526 324518553658426249401595519303680 #632)) (lshr[55] (bv2int %0) (+ 55 #635))) 1 := 21110623253299200&17
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 21110623253299200&17
band: (band[55] (if (= #125 54) 649037107316852498803191038607360 (if #526 324518553658426249401595519303680 #632)) (lshr[55] (bv2int %0) (+ 55 #635))) 2 := 21110623253299200&17
(smt.stats   61   8513 152911 477199  8267/8006/242   10694/911    27  104   23.51)
(smt.stats   62   8707 159967 500416  8292/8027/242   10942/912    27  104   23.51)
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 18014398509481984&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 144115188075855876 := 591104 >>l 9
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 18014398509481984&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 144115188075855876 := 591104 >>l 9
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 18014398509481984&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 144115188075855876 := 591104 >>l 9
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 18014398509481984&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 108086391056891908 := 591104 >>l 9
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 0 := 18014398509481984&4
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 108086391056891908 := 591104 >>l 9
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1152 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1152 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1152 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1152 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1152 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1152 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 514 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 514 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 513 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 545 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 608 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 608 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 576 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 576 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 576 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 576 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 576 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 256 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 256 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 512 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 512 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 512 := 18014398509481984&1154
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 512 := 18014398509481984&1154
(smt.stats   63   8920 164969 517131  8467/8158/283   11254/926    28  113   23.81)
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 32 := 36028797018963915&45
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 32 := 36028797018963915&46
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 32 := 36028797018963915&48
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 32 := 36028797018963915&48
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 64 := 36028797018963915&80
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 36028797018964048 := 0 >>l 63
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 64 := 36028797018963915&80
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 36028797018964048 := 0 >>l 63
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 64 := 36028797018963915&77
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 64 := 36028797018963915&78
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 64 := 36028797018963915&80
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 80 := 0 >>l 63
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 64 := 36028797018963915&77
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 64 := 36028797018963915&78
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 64 := 36028797018963915&80
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 63 #780 #784) 64)) 80 := 0 >>l 63
ramon: poll                 wall=14.000s usage=13.910s mem=25304KiB load=1.00 rootload=0.99
(smt.stats   64   9154 171974 535602  8499/8229/312   11616/976    29  135   23.90)
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1099511626880 := 27021597764222976&1099511626897
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1099511626880 := 27021597764222976&1099511626897
band: (band[55] (if (= #648 63) 332306998946228479387233811766968320 (if #650 166153499473114239693616905883484160 #774)) (lshr[64] (* 256 #119) (mod #787 64))) 1099511626880 := 27021597764222976&1099511626897
(smt.stats   65   9411 174892 542914  8627/8243/312   11985/982    29  135   24.10)
(smt.stats   66   9512 175695 550437  9326/9058/313   12460/1089    30  165   24.21)
(smt.stats   67   9623 177771 562128  9345/9075/313   12718/1089    30  165   24.31)
(smt.stats   68   9745 184864 595542  9350/9085/313   12913/1089    30  165   24.31)
(smt.stats   69   9879 192830 632606  9387/9089/313   13164/1091    30  165   24.31)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10026 196743 653477  9441/9149/313   13487/1094    30  165   24.40)
ramon: poll                 wall=15.000s usage=14.909s mem=25856KiB load=1.00 rootload=1.00
(smt.stats   71  10187 201436 675354  9547/9208/313   14072/1094    30  165   24.50)
(smt.stats   72  10364 209422 699556  9684/9307/313   14475/1097    30  165   25.18)
ramon: poll                 wall=16.000s usage=15.906s mem=27136KiB load=1.00 rootload=1.00
(smt.stats   73  10558 213868 724005  9820/9555/317   15197/2189    31  171   25.47)
(smt.stats   74  10771 220112 766098  9847/9576/317   15528/2190    31  171   25.47)
(smt.stats   75  11005 228438 819417  9881/9609/317   16180/2326    32  184   25.57)
(smt.stats   76  11262 234767 863629 10038/9765/319   16785/2754    33  193   25.66)
ramon: poll                 wall=17.000s usage=16.905s mem=27412KiB load=1.00 rootload=1.00
(smt.stats   77  11544 241420 900464 10287/9911/321   17393/2764    33  193   25.85)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11645 244757 918889 10468/10094/322   17658/2772    33  193   25.85)
ramon: poll                 wall=18.000s usage=17.905s mem=27464KiB load=1.00 rootload=1.00
(smt.stats   79  11756 247458 931976 10547/10253/323   17979/2959    34  216   25.95)
(smt.stats   80  11878 251084 944907 10626/10286/323   18148/2960    34  216   25.95)
(smt.stats   81  12012 253694 962533 10710/10425/324   18698/3269    35  226   26.06)
(smt.stats   82  12159 258392 988235 10734/10437/324   18927/3269    35  226   26.06)
(smt.stats   83  12320 264685 1026660 10750/10465/325   19822/3347    36  227   26.16)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12497 267992 1050120 10763/10478/327   20198/3369    37  242   26.26)
(smt.stats   85  12691 275778 1060821 10784/10480/327   20524/3369    37  242   26.36)
ramon: poll                 wall=19.000s usage=18.901s mem=28028KiB load=1.00 rootload=0.99
(smt.stats   86  12904 284188 1112480 10841/10510/327   20904/3369    37  242   26.45)
(smt.stats   87  13138 290823 1120844 10849/10563/328   21227/3400    38  242   26.55)
(smt.stats   88  13395 301579 1191907 10878/10572/328   22042/3403    38  242   26.64)
(smt.stats   89  13677 312912 1252965 10925/10609/331   22900/3521    39  247   26.74)
ramon: poll                 wall=20.000s usage=19.900s mem=28364KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:50:00 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.946s
ramon: group.utime          19.934s
ramon: group.stime          0.012s
ramon: group.mempeak        28624KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.043s
ramon: loadavg              1.00
