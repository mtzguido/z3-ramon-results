ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:56:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40673 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/phMRrzAzgqe8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3085595
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5134    303  1357/1159/96     107/10     4   14   19.14)
(smt.stats    1    202  10214   1145  1780/1593/100     210/34     5   24   19.35)
(smt.stats    2    313  11484   2473  2729/2458/101     332/41     6   26   19.45)
(smt.stats    3    414  13909   3592  2773/2509/101     433/41     6   26   19.64)
(smt.stats    4    525  14733   5292  2916/2543/107     559/86     9   35   19.73)
(smt.stats    5    647  16768   6899  2960/2677/108     676/96    10   37   19.73)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 825 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 2 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 2 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 2 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 2 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 11 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 31 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 58 := 576460752303423487&826
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  18779   9418  3031/2742/143     763/101    13   42   19.93)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 58 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 58 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 734 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 730 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 698 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 730 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 730 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 762 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 762 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 766 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 762 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 762 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 698 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 570 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 314 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 314 := 576460752303423487&826
(smt.stats    7    859  20879  14872  3115/2861/238     898/129    15   74   20.22)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 576460752303423487&1025
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 576460752303423487&1025
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 576460752303423487&2048
(smt.stats    8    981  24459  18219  3168/2915/263    1169/192    17   86   20.41)
(smt.stats    9   1115  30436  20763  3194/2931/265    1315/234    18   90   20.61)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3072
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1184
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1184
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1184
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1184
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1060
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1060
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1060
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1060
(smt.stats   10   1216  31897  23170  3292/2961/282    1518/253    19   91   21.00)
(smt.stats   11   1327  32848  24923  3453/3071/297    1723/300    20   97   21.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  35143  31312  3635/3324/297    2017/304    20   97   21.12)
(smt.stats   13   1583  37628  38526  3676/3410/298    2598/398    21   97   21.22)
(smt.stats   14   1730  42229  54423  3726/3430/298    2846/730    22  102   21.31)
ramon: poll                 wall=1.000s usage=0.904s mem=22540KiB load=0.90 rootload=0.88
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 264 := 288230376151711743&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 256 := 288230376151711743&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 128 := 288230376151711743&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&1024
(smt.stats   15   1832  44677  65391  3786/3530/311    3005/857    24  121   21.31)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 288230376151711743&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 1729382256910271488 := 1152921504606846974 << 57
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 288230376151711743&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 1729382256910271488 := 1152921504606846974 << 57
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 288230376151711743&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 1729382256910271488 := 1152921504606846974 << 57
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 288230376151711743&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 2305843009213694976 := 1152921504606846974 << 57
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 576460752303421894 << 58
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 288230376151714694 << 58
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 576460752303420360 << 58
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 576460752303423428 << 58
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 576460752303423428 << 58
(smt.stats   16   1943  45868  68527  3895/3531/311    3144/862    24  121   21.44)
(smt.stats   17   2065  47688  72527  3933/3643/322    3288/863    24  121   21.44)
(smt.stats   18   2199  51869  88409  3958/3695/324    3460/947    25  133   21.44)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&4096
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&4096
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&4096
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1 := 576460752303423487&4096
(smt.stats   19   2346  55826 109165  3981/3717/341    3906/1108    27  153   21.65)
(smt.stats   20   2507  59164 117951  4172/3878/345    4293/1224    28  154   21.79)
(smt.stats   21   2608  60836 123393  4223/3903/345    4472/1224    28  154   21.89)
(smt.stats   22   2719  62976 129961  4240/3951/346    4695/1267    29  161   21.89)
(smt.stats   23   2841  64878 137379  4297/3967/346    4871/1268    29  161   21.99)
(smt.stats   24   2975  66631 143875  4368/4022/346    5000/1287    30  170   21.99)
ramon: poll                 wall=2.000s usage=1.900s mem=23680KiB load=1.00 rootload=1.00
(smt.stats   25   3122  68757 166853  4409/4103/347    5198/1288    30  170   22.09)
(smt.stats   26   3283  76768 190115  4503/4199/349    5522/1301    31  179   22.19)
(smt.stats   27   3460  81470 218617  4523/4219/355    5722/1338    33  213   22.33)
(smt.stats   28   3561  84490 232161  4584/4232/356    5883/1340    33  213   22.52)
(smt.stats   29   3672  87403 245446  4658/4293/356    6179/1351    34  223   22.52)
(smt.stats   30   3794  89707 261031  4718/4371/356    6524/1351    34  223   22.62)
(smt.stats   31   3928  91882 272395  4750/4442/357    6897/1422    35  226   22.72)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4075  94540 284204  4764/4452/357    7209/1426    35  226   22.72)
ramon: poll                 wall=3.000s usage=2.896s mem=24216KiB load=1.00 rootload=0.99
(smt.stats   33   4236  96948 292856  4846/4467/358    7405/1481    36  227   22.72)
(smt.stats   34   4413 100625 305277  5117/4593/358    7614/1483    36  227   22.91)
(smt.stats   35   4607 104860 320919  5174/4816/358    7888/1486    36  227   22.91)
(smt.stats   36   4708 106426 335486  5220/4877/358    8016/1488    36  227   23.01)
(smt.stats   37   4819 108607 355748  5253/4944/359    8157/1532    37  227   23.01)
ramon: poll                 wall=4.000s usage=3.872s mem=24504KiB load=0.98 rootload=0.97
(smt.stats   38   4941 111049 376830  5260/4952/360    8372/1552    38  233   23.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 23)
(smt.stats   39   5075 113774 385127  5295/4957/360    8553/1552    38  233   23.10)
(smt.stats   40   5222 117134 399751  5378/4997/360    8861/1553    38  233   23.20)
(smt.stats   41   5383 120809 415826  5391/5077/360    9119/1553    38  233   23.20)
(smt.stats   42   5560 126066 435107  5417/5091/360    9798/1554    38  233   23.20)
(smt.stats   43   5754 131023 459537  5500/5111/360   10119/1560    38  233   23.30)
ramon: poll                 wall=5.000s usage=4.871s mem=24760KiB load=1.00 rootload=1.00
(smt.stats   44   5967 136201 498441  5587/5279/362   10628/1867    40  246   23.40)
(smt.stats   45   6068 139407 514625  5606/5298/363   10922/1867    40  246   23.60)
(smt.stats   46   6179 146160 552850  5606/5298/363   11042/1867    40  246   23.60)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 394 := 144115188075855871&394
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 3458764513820541322 := 1066 << 56
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 394 := 144115188075855871&394
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 4611686018427388298 := 1066 << 56
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 394 := 144115188075855871&394
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 4611686018427388298 := 1066 << 56
(smt.stats   47   6301 148618 567750  5717/5318/364   11343/1898    41  260   23.70)
(smt.stats   48   6435 150987 578684  5734/5424/370   11568/1913    42  283   23.70)
(smt.stats   49   6582 158099 596490  5743/5433/370   11711/1913    42  283   23.81)
(smt.stats   50   6743 163634 614640  5898/5442/370   12142/1921    42  283   23.90)
(smt.stats   51   6920 168634 632232  6033/5623/370   12781/1923    42  283   24.14)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7114 174244 663483  6078/5736/371   13309/2017    43  289   24.23)
ramon: poll                 wall=6.000s usage=5.868s mem=25588KiB load=1.00 rootload=1.00
(smt.stats   53   7327 183520 714523  6093/5781/371   13850/2017    43  289   24.23)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 1 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 1 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 8 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 16 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 32 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 64 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 128 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 256 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 512 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 1024 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2048 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4096 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 8192 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 16384 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 32768 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 65536 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 131072 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 262144 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 524288 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 1048576 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2097152 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4194304 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 8388608 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 16777216 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 33554432 := 288230376151711743&288230376151711744
(smt.stats   54   7561 189450 750458  6243/5906/518   14689/2348    44  319   24.82)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4480 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4352 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4352 := 288230376151711743&288230376151711744
(smt.stats   55   7662 192852 759596  6372/5998/518   14897/2350    44  319   25.01)
(smt.stats   56   7773 196492 777451  6397/6043/523   15037/2351    44  319   25.01)
(smt.stats   57   7895 199466 784166  6517/6075/523   15215/2351    44  319   25.10)
(smt.stats   58   8029 204075 800034  6571/6231/524   15720/2485    45  323   25.20)
ramon: poll                 wall=7.000s usage=6.865s mem=26732KiB load=1.00 rootload=0.99
(smt.stats   59   8177 214669 843937  6728/6348/526   16068/2564    46  328   25.32)
(smt.stats   60   8338 220866 868238  6902/6517/528   16529/2568    46  328   25.41)
(smt.stats   61   8515 226989 886037  6975/6591/531   17271/2627    47  332   25.70)
(smt.stats   62   8709 238592 921339  7085/6688/532   17765/2721    48  348   25.70)
ramon: poll                 wall=8.000s usage=7.865s mem=27748KiB load=1.00 rootload=1.00
(smt.stats   63   8922 247847 945713  7209/6779/533   18607/2726    48  348   26.03)
(smt.stats   64   9156 257470 971115  7316/6926/535   19151/2783    49  356   26.13)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9413 270968 1025912  7501/7117/536   20096/2910    50  399   26.32)
(smt.stats   66   9514 272598 1033087  7507/7123/537   20427/2910    50  399   26.32)
ramon: poll                 wall=9.000s usage=8.865s mem=28004KiB load=1.00 rootload=1.00
(smt.stats   67   9625 277614 1052852  7539/7129/537   20885/2912    50  399   26.51)
(smt.stats   68   9747 283255 1068908  7590/7168/537   21225/2916    50  399   26.51)
(smt.stats   69   9881 290571 1090550  7683/7299/539   21526/3053    51  412   26.60)
ramon: poll                 wall=10.000s usage=9.864s mem=28260KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028 296405 1109092  7715/7318/543   21895/3056    51  412   26.60)
(smt.stats   71  10189 302836 1136131  7750/7366/547   22273/3135    52  461   26.70)
(smt.stats   72  10366 310843 1185065  7766/7375/548   23177/3328    53  482   26.79)
(smt.stats   73  10560 318129 1209781  7814/7430/554   23963/3329    53  482   26.99)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 7&137
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1 := 7&137
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 6341068275337658505 := 576460752303426902 << 2
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1 := 7&137
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 6341068275337658505 := 576460752303426902 << 2
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1 := 7&137
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 6341068275337658505 := 576460752303426902 << 2
ramon: poll                 wall=11.000s usage=10.864s mem=28772KiB load=1.00 rootload=1.00
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 7 := 7&3457
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 5 := 7&3457
(smt.stats   74  10773 324738 1242263  7992/7435/554   24784/3337    53  482   27.24)
(smt.stats   75  11007 330569 1270667  8171/7781/561   25643/3602    54  493   27.43)
(smt.stats   76  11264 340963 1309123  8203/7787/561   26075/3608    54  493   27.81)
(smt.stats   77  11546 347509 1344654  8335/7945/566   26663/3705    55  514   28.00)
ramon: poll                 wall=12.000s usage=11.861s mem=29788KiB load=1.00 rootload=0.99
(smt.stats   78  11647 351527 1357546  8364/7948/566   26890/3712    55  514   28.00)
(smt.stats   79  11758 354371 1377257  8423/8012/566   27020/3713    55  514   28.09)
(smt.stats   80  11880 356623 1383591  8485/8050/566   27146/3769    56  531   28.09)
(smt.stats   81  12014 361242 1407975  8567/8117/566   27781/3778    56  531   28.29)
ramon: poll                 wall=13.000s usage=12.861s mem=30044KiB load=1.00 rootload=1.00
(smt.stats   82  12161 365751 1427286  8809/8207/566   28290/3783    56  531   28.39)
ramon: poll                 wall=14.000s usage=13.861s mem=30556KiB load=1.00 rootload=1.00
(smt.stats   83  12322 370760 1450486  9034/8431/566   28913/3783    56  531   28.80)
(smt.stats   84  12499 379027 1509651  9176/8690/566   29774/3786    56  531   28.89)
ramon: poll                 wall=15.000s usage=14.861s mem=30812KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   85  12693 388962 1570443  9209/8813/569   30405/4006    57  536   29.08)
(smt.stats   86  12906 394364 1608485  9465/8819/570   31107/4008    57  536   29.35)
(smt.stats   87  13140 403579 1661219  9479/9083/571   31959/4008    57  536   29.45)
ramon: poll                 wall=16.000s usage=15.860s mem=31164KiB load=1.00 rootload=1.00
(smt.stats   88  13397 414636 1695776  9717/9086/572   33093/4138    58  569   29.73)
ramon: poll                 wall=17.000s usage=16.860s mem=31676KiB load=1.00 rootload=1.00
(smt.stats   89  13679 425090 1744200  9985/9344/572   35074/4141    58  569   29.92)
ramon: poll                 wall=18.000s usage=17.860s mem=31932KiB load=1.00 rootload=1.00
(smt.stats   90  13989 438212 1786744 10185/9789/575   36443/4342    59  582   30.30)
(smt.stats   91  14090 442122 1808001 10192/9794/575   36936/4342    59  582   30.30)
(smt.stats   92  14201 448912 1855166 10288/9802/575   37292/4344    59  582   30.40)
ramon: poll                 wall=19.000s usage=18.859s mem=31980KiB load=1.00 rootload=1.00
(smt.stats   93  14323 453496 1883805 10423/9917/575   37717/4564    60  611   30.40)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   94  14457 457931 1923144 10470/10052/576   38082/4564    60  611   30.40)
ramon: poll                 wall=20.000s usage=19.859s mem=32236KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:56:57 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.030s
ramon: group.total          19.962s
ramon: group.utime          19.930s
ramon: group.stime          0.032s
ramon: group.mempeak        32496KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.099s
ramon: loadavg              0.99
