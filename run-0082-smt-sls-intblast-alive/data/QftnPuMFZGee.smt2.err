ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:27:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28267 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QftnPuMFZGee.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             797589
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3034   1217  1120/1012/108      97/66     4   16   51.94)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   74.0741     10000        49          0            1        2)
(sat.ddfw       1      1   36.7684     20001        98          1            1        3)
(smt.stats    1    202   5088   1705  1877/1704/113     195/78     6   19   52.23)
(sat.ddfw       1      1   42.1053     40001       196          2            1        5)
(smt.stats    2    313   6598   2728  2243/2037/118     312/122     7   20   52.33)
(smt.stats    3    414   8897   4114  2380/2110/118     425/124     8   20   52.43)
(sat.ddfw       1      1   39.3701     70001       343          3            1        8)
(smt.stats    4    525  11577   5846  2408/2190/126     523/146    12   34   52.43)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4398046511102&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305834213120671742 := 4398046511103 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4398046511102&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305834213120671742 := 4398046511103 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4398046511102&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305834213120671742 := 4398046511103 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4398046511102&1
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 4398046511103 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511106 := 2199023255552 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 2199023255553 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2 := 3 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2 := 2199023255553 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 1 := 2&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 1 << 1
(smt.stats    5    647  16242   8414  2465/2242/152     649/153    14   47   52.72)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 1 := 2&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 1 := 2&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 1 := 2&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 1 := 2&1
ramon: poll                 wall=1.002s usage=0.831s mem=54992KiB load=0.83 rootload=0.82
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  18291   9950  2558/2310/171     782/205    16   53   52.82)
(sat.ddfw       1      1   34.8432    110001       539          4            1       12)
(smt.stats    7    859  18727  10449  2694/2373/171     903/206    16   53   52.91)
(smt.stats    8    981  20321  13206  2814/2572/176    1030/227    17   58   53.01)
(sat.ddfw       1      1   30.5617    160000       784          5            1       17)
(smt.stats    9   1115  22929  16071  2842/2590/176    1184/227    17   58   53.10)
ramon: poll                 wall=2.000s usage=1.803s mem=55636KiB load=0.97 rootload=0.97
(smt.stats   10   1216  27409  19485  2925/2637/176    1304/254    18   65   53.10)
(smt.stats   11   1327  31321  23054  2977/2700/176    1442/254    18   65   53.20)
(sat.ddfw       1      1   26.7265    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  34421  29810  3003/2748/176    1590/254    18   65   53.20)
(smt.stats   13   1583  37894  35013  3011/2765/179    1741/294    19   72   53.20)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 66&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511170 := 2199023255552 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 66&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511170 := 2199023255552 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 66&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511170 := 2199023255552 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2199023255551&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2199023255551&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2199023255487&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 6597069766591 := 2199023255552 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 67&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 191&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511295 := 2199023255552 << 7
(smt.stats   14   1730  43067  39737  3054/2806/195    1887/303    20   79   53.41)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 256&64
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 2233382993922 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 128&64
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 2199023255553 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2216338399232&64
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 2216338399296 << 7
(smt.stats   15   1831  45473  42185  3098/2806/195    1999/306    20   79   53.51)
(smt.stats   16   1942  48081  46791  3125/2862/201    2120/309    21   80   53.51)
(smt.stats   17   2064  50855  51042  3163/2904/208    2251/321    22   82   53.51)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2267742732289&32768
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2267742732289 := 2267742732290 << 16
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2302102470719&32768
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2302102470719 := 2302102470721 << 16
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2302102470719&32768
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2302102470719 := 2302102470721 << 16
(sat.ddfw       1      1   24.2634    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.782s mem=55860KiB load=0.98 rootload=0.98
(smt.stats   18   2198  55048  55444  3185/2909/209    2371/352    23  110   53.83)
(sat.ddfw       1      1    21.575    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.658s mem=56588KiB load=0.88 rootload=0.88
(sat.ddfw       1      1   19.6207    460001      2254          9            1       47)
ramon: poll                 wall=5.002s usage=4.635s mem=56444KiB load=0.98 rootload=0.97
(smt.stats   19   2345  60319  63939  3392/3015/214    2550/353    24  111   54.12)
(sat.ddfw       1      1   17.5994    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.570s mem=56700KiB load=0.94 rootload=0.94
(sat.ddfw       1      1    16.352    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.572s mem=56452KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.2633    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.570s mem=56452KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.002s usage=8.570s mem=56452KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.2904    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.566s mem=56452KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   13.4228   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.568s mem=56452KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   12.8414   1210001      5931         15            1      123)
(smt.stats   20   2506  62858  70923  3564/3218/214    2779/358    25  111   54.32)
ramon: poll                 wall=12.002s usage=11.609s mem=56720KiB load=1.04 rootload=1.04
(smt.stats   21   2607  64629  75283  3591/3312/214    2926/358    25  111   54.32)
(smt.stats   22   2718  66644  80418  3610/3353/214    3077/358    25  111   54.32)
(smt.stats   23   2840  70179  89072  3621/3358/214    3246/358    25  111   54.32)
(smt.stats   24   2974  72269  93307  3624/3367/214    3422/358    25  111   54.32)
(smt.stats   25   3121  76296 100678  3676/3369/215    3588/418    26  114   54.41)
(smt.stats   26   3282  82006 113044  3683/3426/215    3750/418    26  114   54.41)
ramon: poll                 wall=13.000s usage=12.602s mem=56580KiB load=0.99 rootload=0.99
(smt.stats   27   3459  85997 122448  3713/3434/215    3960/418    26  114   54.51)
(sat.ddfw       1      1    12.123   1370001      6715         16            1      139)
(smt.stats   28   3560  88891 127779  3719/3459/225    4032/529    27  149   54.51)
(smt.stats   29   3671  91603 134868  3766/3471/225    4150/531    27  149   54.51)
(smt.stats   30   3793  93653 142884  3796/3537/225    4291/531    27  149   54.71)
(smt.stats   31   3927  97382 154959  3802/3547/225    4462/531    27  149   54.71)
ramon: poll                 wall=14.000s usage=13.603s mem=56956KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 101592 168754  3816/3553/225    4606/532    27  149   54.85)
(smt.stats   33   4235 109854 190599  3819/3564/225    4772/532    27  149   54.85)
(smt.stats   34   4412 115554 207269  3830/3567/225    4989/532    27  149   54.85)
(smt.stats   35   4606 119075 217960  3847/3592/225    5192/532    27  149   54.85)
(smt.stats   36   4707 121248 224469  3857/3602/225    5298/532    27  149   54.85)
(sat.ddfw       1      1   11.6096   1540001      7549         17            1      156)
(smt.stats   37   4818 123875 232221  3876/3607/225    5423/532    27  149   54.95)
(smt.stats   38   4940 126719 242330  3902/3647/226    5555/621    28  154   54.95)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=15.000s usage=14.706s mem=57376KiB load=1.10 rootload=1.10
(smt.stats   39   5074 132124 259360  3903/3648/226    5692/621    28  154   54.95)
(smt.stats   40   5221 137496 277125  3905/3650/226    5862/621    28  154   54.95)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2216338399104&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305840827505581952 := 1168231104512 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2216338399104&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305840827505581952 := 2061584302080 << 41
(smt.stats   41   5382 139947 287985  4026/3699/232    6029/635    29  156   55.33)
(smt.stats   42   5559 143197 298315  4092/3793/232    6219/635    29  156   55.33)
ramon: poll                 wall=16.000s usage=15.651s mem=57304KiB load=0.95 rootload=0.95
(sat.ddfw       1      1   11.0098   1720001      8431         18            1      174)
(smt.stats   43   5753 146243 316106  4207/3884/233    6452/649    30  164   55.42)
(smt.stats   44   5966 149738 329755  4263/4006/233    6706/649    30  164   55.42)
(smt.stats   45   6067 151542 335904  4268/4008/234    6812/690    31  166   55.42)
ramon: poll                 wall=17.000s usage=16.631s mem=57432KiB load=0.98 rootload=0.98
(smt.stats   46   6178 153536 345675  4277/4012/234    6926/690    31  166   55.42)
(smt.stats   47   6300 155073 355368  4285/4028/235    7055/699    32  168   55.42)
(smt.stats   48   6434 157775 366855  4290/4033/235    7221/699    32  168   55.42)
(smt.stats   49   6581 159953 375131  4290/4033/235    7371/699    32  168   55.52)
(smt.stats   50   6742 164962 395600  4294/4037/235    7542/699    32  168   55.52)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4043085535948&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305847052299229900 := 2199024304130 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4043085535948&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305847052299229900 := 2199024304130 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4043085535948&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305847052299229900 := 2199024304130 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2943573908172&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305845952787602124 := 2370822995970 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2943573908172&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305845952787602124 := 2370858123816 << 5
ramon: poll                 wall=18.000s usage=17.596s mem=57944KiB load=0.97 rootload=0.96
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3298543434784&16
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 2851858552160 := 2851858551777 << 5
(smt.stats   51   6919 168360 405990  4418/4049/235    7736/704    32  168   55.61)
(sat.ddfw       1      1   10.4505   1910001      9362         19            1      193)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 170945 416901  4462/4202/247    8051/734    33  170   55.61)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 62 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 2 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 2 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 8 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 8 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 16 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 32 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 32 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 32 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 32 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 16 := 3665754609664&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 8 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 1 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 2 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 2 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 64 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 4 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 64 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 64 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 62 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 60 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 8 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 16 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 32 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 32 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 24 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 16 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351616&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 8 := 3666828351616&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351616&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 8 := 3666828351616&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 64 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 4 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351616&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 4 := 3666828351616&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351872&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 2 := 3666828351872&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351872&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 2 := 3666828351872&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351616&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 8 := 3666828351616&64
(smt.stats   53   7326 175108 439292  4637/4316/353    8317/755    34  187   56.04)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828352896&4
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 386296874818944 := 3018943902676 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828352512&4
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 386296874818560 := 3018943902685 << 3
ramon: poll                 wall=19.000s usage=18.511s mem=58436KiB load=0.91 rootload=0.91
(smt.stats   54   7560 181092 458093  4754/4396/363    8686/757    34  187   56.32)
(smt.stats   55   7661 186431 474155  4762/4479/370    8828/795    35  217   56.32)
(smt.stats   56   7772 189347 483106  4861/4506/370    9031/800    35  217   56.52)
(smt.stats   57   7894 192414 499328  4905/4597/371    9285/815    36  221   56.52)
ramon: poll                 wall=20.000s usage=19.510s mem=58848KiB load=1.00 rootload=1.00
(smt.stats   58   8028 194833 512563  4915/4621/371    9513/815    36  221   56.62)
ramon: end                  Fri Nov  1 22:28:06 2024
ramon: root.execname        z3
ramon: root.utime           19.540s
ramon: root.stime           0.010s
ramon: group.total          19.564s
ramon: group.utime          19.548s
ramon: group.stime          0.016s
ramon: group.mempeak        59108KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              0.98
