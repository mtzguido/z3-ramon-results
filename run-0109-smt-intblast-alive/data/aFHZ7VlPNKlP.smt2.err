ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:33:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41282 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aFHZ7VlPNKlP.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3011964
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3744    650  1297/1093/96     116/14     4   14   19.15)
(smt.stats    1    202   6031   1559  2061/1859/101     228/37     7   28   19.25)
(smt.stats    2    313   7833   4711  2182/1961/102     337/47     8   29   19.35)
(smt.stats    3    414   9210   6244  2244/2047/106     423/48    12   34   19.46)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&412929
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 412929 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&412929
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 412929 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&412929
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 412929 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&412929
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 412929 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&1099511627941
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627942 := 2199023255883 >>l 1
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&1099511627941
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 2199023255882 := 2199023255883 >>l 1
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&1099511627941
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627942 := 2199023255883 >>l 1
(smt.stats    4    525   9911   7842  2312/2109/118     533/66    14   38   19.55)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 131072 := 131072&1099511627925
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 131071 := 131072&1099511627925
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&1099511627925
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1099511627925 := 4503599627976704 >>l 47
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&131071
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 131071 := 4503599627976704 >>l 47
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&33
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 33 := 4503599627976704 >>l 47
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627923 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 14 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 12 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 6 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627923 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627923 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 33 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 1 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 1 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 24 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 31 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 30 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 28 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 24 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 31 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 30 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 1 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 4 := 131072&32
(smt.stats    5    647  11883  11814  2600/2312/182     658/82    16   54   20.26)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1 := 4503599628027904 >>l 22
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1099511627937
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1099511627937 := 4503599628027904 >>l 22
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1099511627937
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1099511627937 := 4503599628027904 >>l 22
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 2199023255872 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627937 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627937 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627937 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627937 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 8 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 8 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 64 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 64 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 128 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 256 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 512 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 1024 := 4398046511104&1073741824
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14254  14540  2949/2611/252     768/85    17   68   20.56)
(smt.stats    7    859  15585  16299  3172/2727/282     969/91    18   74   20.84)
(smt.stats    8    981  17011  20830  3302/3029/298    1256/136    21   92   21.03)
(smt.stats    9   1115  19357  26876  3397/3053/301    1463/211    22   98   21.13)
ramon: poll                 wall=1.000s usage=0.991s mem=22744KiB load=0.99 rootload=0.98
(smt.stats   10   1216  20095  27832  3482/3160/301    1565/248    23  100   21.22)
(smt.stats   11   1327  21497  30446  3645/3271/301    1700/255    23  100   21.38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  22721  33398  3889/3395/301    1828/258    23  100   21.48)
(smt.stats   13   1583  27385  44130  3969/3635/301    1996/262    23  100   21.48)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 32768&4503599627108351
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 32768&4503599627108351
ramon: poll                 wall=2.000s usage=1.990s mem=22776KiB load=1.00 rootload=1.00
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 32768&4503599627108351
(smt.stats   14   1730  29131  49293  4179/3696/301    2222/265    23  100   21.57)
(smt.stats   15   1831  31722  57831  4349/3953/301    2462/265    23  100   21.68)
(smt.stats   16   1942  34621  65985  4404/4092/301    2964/265    23  100   21.78)
(smt.stats   17   2064  38455  72306  4467/4141/305    3478/511    24  102   21.78)
(smt.stats   18   2198  43402  83852  4625/4212/305    3854/561    25  110   21.87)
(smt.stats   19   2345  49286  96003  4724/4382/305    4144/564    25  110   21.87)
ramon: poll                 wall=3.000s usage=2.990s mem=23388KiB load=1.00 rootload=0.99
(smt.stats   20   2506  53741 107908  4797/4518/307    4732/851    26  116   21.97)
(smt.stats   21   2607  57454 119958  4806/4524/307    5049/851    26  116   22.06)
(smt.stats   22   2718  61230 130274  4901/4569/307    5248/948    27  120   22.30)
(smt.stats   23   2840  64634 138663  5063/4615/307    5410/952    27  120   22.30)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   24   2974  67839 146818  5196/4909/312    5678/1006    28  126   22.30)
(smt.stats   25   3121  71677 163714  5343/4932/313    6163/1072    29  147   22.50)
ramon: poll                 wall=4.000s usage=3.989s mem=23856KiB load=1.00 rootload=1.00
(smt.stats   26   3282  76041 179920  5469/5082/313    6850/1076    29  147   22.59)
(smt.stats   27   3459  84351 196680  5561/5201/314    7130/1276    30  147   22.69)
(smt.stats   28   3560  87246 205748  5599/5295/315    7328/1305    31  148   22.69)
(smt.stats   29   3671  89504 217433  5626/5324/315    7533/1306    31  148   22.69)
(smt.stats   30   3793  91755 226377  5690/5343/316    7744/1338    32  155   22.78)
ramon: poll                 wall=5.000s usage=4.989s mem=24256KiB load=1.00 rootload=1.00
(smt.stats   31   3927  94240 236519  5875/5460/316    8262/1339    32  155   22.97)
(smt.stats   32   4074  97776 246438  5899/5580/319    8603/1414    33  163   22.97)
(smt.stats   33   4235 102191 257318  6037/5630/319    8793/1414    33  163   23.07)
(smt.stats   34   4412 107581 292244  6158/5773/319    9151/1442    34  168   23.07)
(smt.stats   35   4606 109579 308045  6240/5869/319    9493/1444    34  168   23.26)
ramon: poll                 wall=6.000s usage=5.988s mem=24556KiB load=1.00 rootload=1.00
(smt.stats   36   4707 110895 312787  6321/5936/320    9617/1500    35  172   23.36)
(smt.stats   37   4818 111990 316507  6659/6155/320    9769/1500    35  172   23.36)
(smt.stats   38   4940 113429 334104  6728/6391/320    9929/1502    35  172   23.36)
(smt.delete-inactive-clauses  :num-deleted-clauses 136)
(smt.stats   39   5074 117275 342090  6733/6423/320   10090/1502    35  172   23.45)
(smt.stats   40   5221 124420 360472  6780/6434/320   10560/1504    35  172   23.45)
ramon: poll                 wall=7.000s usage=6.988s mem=24860KiB load=1.00 rootload=1.00
(smt.stats   41   5382 136007 395311  6873/6482/320   11216/1507    35  172   23.64)
(smt.stats   42   5559 140855 413426  6922/6584/320   11894/1507    35  172   23.64)
(smt.stats   43   5753 147525 444157  6993/6682/321   12434/1767    36  173   23.74)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5966 155693 478112  7035/6700/321   12879/1767    36  173   23.83)
(smt.stats   45   6067 157660 488347  7070/6735/321   13155/1768    36  173   23.83)
(smt.stats   46   6178 165746 509654  7100/6763/321   13337/1768    36  173   23.83)
(smt.stats   47   6300 173419 535380  7201/6808/322   13806/1876    37  174   23.93)
ramon: poll                 wall=8.000s usage=7.987s mem=25336KiB load=1.00 rootload=1.00
(smt.stats   48   6434 178472 557718  7297/6989/324   14208/1978    38  180   24.02)
(smt.stats   49   6581 182130 564766  7426/6996/324   14420/1979    38  180   24.12)
(smt.stats   50   6742 188095 573864  7631/7189/324   14662/1981    38  180   24.12)
ramon: poll                 wall=9.000s usage=8.987s mem=25596KiB load=1.00 rootload=1.00
(smt.stats   51   6919 193046 584960  7748/7346/325   15119/1981    38  180   24.21)
(smt.stats   52   7113 200870 616549  7877/7445/327   15694/2027    39  182   24.41)
(smt.stats   53   7326 208944 648210  8064/7594/327   16100/2076    40  199   24.50)
ramon: poll                 wall=10.000s usage=9.970s mem=26020KiB load=0.98 rootload=0.98
(smt.stats   54   7560 218655 690758  8238/7796/327   16650/2077    40  199   24.60)
(smt.stats   55   7661 224786 714552  8309/7927/327   16876/2077    40  199   24.70)
(smt.stats   56   7772 227761 725476  8440/8015/327   17052/2077    40  199   24.70)
ramon: poll                 wall=11.000s usage=10.969s mem=26164KiB load=1.00 rootload=1.00
(smt.stats   57   7894 232136 735597  8514/8136/327   17203/2090    40  199   24.79)
(smt.stats   58   8028 235303 748331  8666/8337/327   17602/2090    40  199   24.79)
(smt.stats   59   8175 238892 752535  8815/8405/327   17766/2091    40  199   24.89)
(smt.stats   60   8336 243682 767190  8911/8531/327   18123/2095    40  199   24.89)
ramon: poll                 wall=12.000s usage=11.969s mem=26376KiB load=1.00 rootload=1.00
(smt.stats   61   8513 249357 773455  9160/8671/327   18311/2100    40  199   24.98)
(smt.stats   62   8707 254995 784332  9353/8870/327   18539/2105    40  199   25.24)
ramon: poll                 wall=13.000s usage=12.969s mem=26704KiB load=1.00 rootload=1.00
(smt.stats   63   8920 259295 792649  9668/9086/327   18782/2105    40  199   25.34)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   64   9154 266113 810038  9770/9421/328   19120/2269    41  203   25.34)
ramon: poll                 wall=14.000s usage=13.968s mem=26828KiB load=1.00 rootload=1.00
(smt.stats   65   9411 278700 848341 10013/9468/328   20018/2270    41  203   25.43)
(smt.stats   66   9512 281788 855918 10070/9759/328   20500/2270    41  203   25.71)
(smt.stats   67   9623 287034 868669 10103/9761/328   20891/2271    41  203   25.71)
(smt.stats   68   9745 292877 881623 10139/9811/328   21303/2271    41  203   25.80)
(smt.stats   69   9879 301556 924042 10209/9837/328   21786/2271    41  203   25.80)
(smt.delete-inactive-clauses  :num-deleted-clauses 95)
(smt.stats   70  10026 307341 948712 10245/9913/328   22634/2271    41  203   25.90)
ramon: poll                 wall=15.003s usage=14.971s mem=27416KiB load=1.00 rootload=1.00
(smt.stats   71  10187 317667 985399 10424/9935/328   23378/2277    41  203   26.01)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   72  10364 328728 1017662 10507/10193/329   24131/2489    42  213   26.21)
ramon: poll                 wall=16.000s usage=15.966s mem=27888KiB load=1.00 rootload=0.99
(smt.stats   73  10558 336777 1048853 10552/10228/330   24754/2489    42  213   26.21)
(smt.stats   74  10771 349573 1092117 10678/10328/331   25418/2624    43  216   26.30)
ramon: poll                 wall=17.000s usage=16.965s mem=28020KiB load=1.00 rootload=1.00
(smt.stats   75  11005 359206 1135354 10795/10381/331   26773/2626    43  216   26.40)
(smt.stats   76  11262 365575 1163459 10844/10514/331   27395/2626    43  216   26.62)
(smt.stats   77  11544 375891 1231519 10951/10547/331   28554/2627    43  216   26.79)
(smt.stats   78  11645 379946 1254702 11020/10669/331   28887/2628    43  216   26.88)
ramon: poll                 wall=18.000s usage=17.965s mem=28412KiB load=1.00 rootload=1.00
(smt.stats   79  11756 382033 1266875 11030/10715/331   29084/2628    43  216   26.88)
(smt.stats   80  11878 386756 1282385 11125/10723/331   29301/2629    43  216   26.88)
(smt.stats   81  12012 388751 1289732 11170/10839/331   29547/2629    43  216   26.88)
(smt.stats   82  12159 397317 1319294 11221/10860/331   30070/2629    43  216   27.07)
(smt.stats   83  12320 403450 1362310 11230/10919/332   30750/2919    44  225   27.07)
(smt.stats   84  12497 409342 1388877 11270/10931/332   31477/2923    44  225   27.07)
(smt.stats   85  12691 413199 1403030 11294/10967/332   31861/2923    44  225   27.18)
ramon: poll                 wall=19.000s usage=18.965s mem=28824KiB load=1.00 rootload=1.00
(smt.stats   86  12904 418764 1436949 11374/10991/332   32477/2923    44  225   27.40)
(smt.stats   87  13138 429569 1460430 11529/11095/332   32879/2924    44  225   27.50)
ramon: poll                 wall=20.000s usage=19.964s mem=29048KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:33:53 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.971s
ramon: group.utime          19.955s
ramon: group.stime          0.016s
ramon: group.mempeak        29304KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
