ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:13:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40469 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/amh2KhYsO1O5.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3899840
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   214/214     0/0  61       0    18.52   0.00)
(sat.stats    164   1936    0   214/214   164/62  61       0    18.90   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 606 :time 0.00)
(sat.stats    164   1936    0   214/214   164/62  61       0    18.90   0.02)
(sat.stats    164   1936    0   214/214   164/62  61       0    18.90   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 522618.90 :time 0.00)
(sat.stats    164   1936    0   214/214   169/67  61       0    18.90   0.02)
(sat.stats    167   1948    1   214/214   172/70  61       0    18.90   0.02)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    188   2136    2   214/214   193/90  61       0    19.00   0.02)
(sat.stats    191   2173    3   214/214   196/91  61       0    19.00   0.02)
(sat.stats    194   2216    4   214/214   199/93  61       0    19.00   0.02)
(sat.stats    197   2295    5   214/214   202/96  61       0    19.00   0.02)
(sat.stats    200   2402    6   214/214   205/99  61       0    19.00   0.02)
(sat.stats    203   2508    7   214/214   208/102  61       0    19.00   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    206   2590    8   214/214   211/105  61       0    19.00   0.02)
(sat.stats    209   2700    9   214/214   214/107  61       0    19.00   0.02)
(sat.stats    212   2802   10   214/214   217/109  61       0    19.00   0.02)
(sat.stats    215   2943   11   214/214   220/111  61       0    19.00   0.02)
(sat.stats    218   3041   12   214/214   223/112  61       0    19.00   0.02)
(sat.stats    221   3103   13   214/214   226/112  61       0    19.00   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1617 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 1905 :time 0.00)
(sat.stats    315   5793   42   396/396   318/137  68       0    19.65   0.49)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 2459 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 11 << 11
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&22528
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 4398046533633 := 11 << 11
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5939 :time 0.00)
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 1 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 708 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 40 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 18 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 16 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 32 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 384 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 64 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 512 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 256 := 1024&22528
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 1024 := 1024&22528
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    760  16564   44  1990/1988   779/229 147       0    20.54   0.72)
(sat.stats    764  16647   45  1990/1988   783/231 147       0    20.54   0.72)
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 1017 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 964 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 634 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 8 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 304 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 256 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 32 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 128 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 64 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 512 := 2199023190016&1024
band: (band[41] (if (= #541 40) 1 (if #543 2 #621)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1024&2199023190016
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (= #641 63) 0 (if #643 1 #767))) 1024 := 2199023190016&1024
(sat.stats   1067  20027   74  2679/2676  1087/319 147       0    21.36   0.77)
ramon: poll                 wall=1.000s usage=0.999s mem=24700KiB load=1.00 rootload=0.99
(sat.stats   1695  50329  116 22459/22456  1905/740 147       0    26.83   1.70)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 19864 :time 0.00)
ramon: poll                 wall=2.000s usage=1.999s mem=27780KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.999s mem=28668KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34089 :time 0.00)
ramon: poll                 wall=4.000s usage=3.998s mem=33128KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.998s mem=37316KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.997s mem=37648KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=38748KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=40500KiB load=1.00 rootload=1.00
(sat.stats   3029  89928  254 122688/122685  4259/1723 228       0    39.46   8.17)
ramon: poll                 wall=9.000s usage=8.997s mem=43300KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.996s mem=47444KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.996s mem=50544KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.996s mem=51444KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.995s mem=51444KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.995s mem=51444KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.995s mem=51444KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.995s mem=51500KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.994s mem=51808KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.994s mem=52100KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.994s mem=52408KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.003s usage=19.996s mem=52696KiB load=1.00 rootload=1.01
ramon: end                  Wed Dec 25 16:13:52 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.004s
ramon: group.utime          19.984s
ramon: group.stime          0.020s
ramon: group.mempeak        52952KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
