ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:33:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25383 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/XRMv1uDF78ex.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             68939
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2450    531  1021/918/101      95/26     6   19   19.00)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 2&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 17179869183 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 17179869183 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 2&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 4 := 4&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 4 := 4&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 17179869182&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 2 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934592 := 8589934593 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8589934592 := 8589934593 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934592 := 8589934593 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 1 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 2&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 8 := 8&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8 := 9 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 2&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 8589934592 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934593 := 10737418241 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934593 := 10737418241 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 7 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 6 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 4 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 3 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 2 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 2 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 2 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 5 := 8589934592&8
(smt.stats    1    202   3847   1232  1537/1330/139     193/32     8   29   19.39)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 4 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8589934592 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8589934592 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8589934592 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 4294967296&4
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934600 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 4294967296&4
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934600 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 4 := 4294967296&4
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 4 := 4294967296&4
(smt.stats    2    313   6294   2948  1616/1439/194     315/41    13   44   19.48)
(smt.stats    3    414   7773   5089  1673/1518/219     420/50    17   56   19.58)
(smt.stats    4    525   9536   7829  1835/1642/231     614/84    21   82   19.88)
(smt.stats    5    647  12124  12109  1867/1664/235     779/103    22   87   19.88)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14073  17338  1888/1685/235     937/103    22   87   20.08)
(smt.stats    7    859  16491  21525  1910/1705/235    1103/104    22   87   20.18)
(smt.stats    8    981  18491  26329  1936/1733/246    1276/136    24   94   20.18)
(smt.stats    9   1115  21046  30875  1988/1752/247    1486/170    25  122   20.27)
(smt.stats   10   1216  24425  35883  2033/1806/247    1611/190    26  126   20.38)
(smt.stats   11   1327  28959  43613  2051/1844/250    1724/199    27  128   20.38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33276  50982  2059/1848/250    1904/200    27  128   20.48)
(smt.stats   13   1583  37680  58858  2078/1870/250    2170/200    27  128   20.48)
ramon: poll                 wall=1.000s usage=0.939s mem=21684KiB load=0.94 rootload=0.93
(smt.stats   14   1730  43654  70319  2083/1875/250    2354/200    27  128   20.58)
(smt.stats   15   1831  46896  77532  2099/1885/250    2502/200    27  128   20.58)
(smt.stats   16   1942  49971  84518  2102/1890/250    2666/200    27  128   20.58)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 12884901897&1
(smt.stats   17   2064  51362  87412  2139/1909/268    2790/253    28  129   20.67)
(smt.stats   18   2198  52653  91614  2439/2079/268    3010/253    28  129   20.96)
(smt.stats   19   2345  53081  92379  2511/2302/268    3143/334    29  153   21.16)
(smt.stats   20   2506  55549 100701  2994/2716/268    3472/334    29  153   21.16)
(smt.stats   21   2607  56274 102128  3054/2796/268    3603/334    29  153   21.35)
(smt.stats   22   2718  56889 104399  3295/3035/268    3735/334    29  153   21.52)
(smt.stats   23   2840  57577 106662  3643/3325/268    3906/334    29  153   21.52)
(smt.stats   24   2974  57885 107291  3847/3627/268    4060/334    29  153   21.71)
(smt.stats   25   3121  62403 140532  4240/4035/268    4559/334    29  153   21.71)
ramon: poll                 wall=2.000s usage=1.939s mem=22980KiB load=1.00 rootload=1.00
(smt.stats   26   3282  67907 185221  4259/4039/269    4814/876    30  156   21.81)
(smt.stats   27   3459  71909 213226  4303/4073/270    5209/907    31  156   21.81)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560  72786 217601  4311/4102/271    5530/1041    32  157   21.90)
(smt.stats   29   3671  74506 226449  4335/4102/271    5749/1041    32  157   21.90)
(smt.stats   30   3793  75465 230649  4348/4137/271    6036/1041    32  157   21.90)
(smt.stats   31   3927  76692 240665  4382/4143/271    6304/1041    32  157   22.00)
(smt.stats   32   4074  78545 256096  4393/4173/271    6525/1043    32  157   22.00)
(smt.stats   33   4235  79337 260000  4403/4190/271    6726/1043    32  157   22.00)
(smt.stats   34   4412  80826 274122  4431/4198/271    6999/1043    32  157   22.00)
(smt.stats   35   4606  86350 335965  4443/4228/272    7290/1780    33  161   22.23)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 4294967296&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 8589934592&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 8589934592&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 8589934592&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 8589934592&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 12884901888&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 7056631267328 := 1643 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 4294967296&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 7048041332736 := 1641 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 12884901888&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 7056631267328 := 1643 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 12884901888&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 7056631267328 := 1643 << 31
(smt.stats   36   4707  87787 347238  4493/4236/272    7462/1787    33  161   22.23)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 0&4
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 12884901925 := 0 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 0&2
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 12884901925 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 0&2
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 12884901925 := 0 << 31
(smt.stats   37   4818  89277 352306  4601/4304/282    7606/1898    34  163   22.23)
(smt.stats   38   4940  90363 373489  4652/4408/287    7764/1899    34  163   22.32)
ramon: poll                 wall=3.000s usage=2.939s mem=23636KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 272)
(smt.stats   39   5074  92363 388714  4704/4466/290    7682/1936    35  164   22.52)
(smt.stats   40   5221  96699 427940  4712/4477/291    7904/1945    36  168   22.52)
(smt.stats   41   5382 100069 462029  4739/4490/291    8290/1945    36  168   22.52)
(smt.stats   42   5559 101437 476235  4742/4504/291    8703/1945    36  168   22.61)
(smt.stats   43   5753 103683 499563  4742/4504/291    8945/1945    36  168   22.61)
(smt.stats   44   5966 109369 560725  4810/4523/292    9265/2275    37  168   22.71)
(smt.stats   45   6067 111097 575022  4843/4591/292    9476/2275    37  168   22.71)
(smt.stats   46   6178 113684 605482  4881/4612/292    9663/2275    37  168   22.71)
ramon: poll                 wall=4.000s usage=3.939s mem=24024KiB load=1.00 rootload=1.00
(smt.stats   47   6300 117066 649373  4893/4652/292    9825/2275    37  168   22.71)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 119255 674379  4928/4690/294   10120/2345    38  175   22.90)
(smt.stats   49   6581 123740 688839  4936/4692/294   10293/2345    38  175   22.90)
(smt.stats   50   6742 126251 710770  5024/4784/296   10569/2390    39  189   22.90)
(smt.stats   51   6919 128361 732941  5070/4790/296   10796/2393    39  189   22.99)
ramon: poll                 wall=5.000s usage=4.938s mem=24348KiB load=1.00 rootload=1.00
(smt.stats   52   7113 132262 761366  5119/4845/296   11168/2425    40  191   22.99)
(smt.stats   53   7326 135046 793307  5153/4901/296   11506/2426    40  191   23.09)
(smt.stats   54   7560 139686 816991  5201/4954/298   11831/2506    41  191   23.09)
(smt.stats   55   7661 142992 836532  5264/4965/298   12000/2508    41  191   23.18)
(smt.stats   56   7772 144275 842965  5323/5037/298   12149/2526    42  196   23.18)
(smt.stats   57   7894 147279 882585  5344/5087/298   12295/2526    42  196   23.37)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869256 := 8589934595 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869256 := 8589934595 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869256 := 8589934595 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869248 := 8589934595 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869248 := 8589934595 << 27
(smt.stats   58   8028 149056 903639  5388/5140/306   12504/2540    43  200   23.28)
ramon: poll                 wall=6.000s usage=5.937s mem=24660KiB load=1.00 rootload=1.00
(smt.stats   59   8175 152059 923990  5489/5142/306   12768/2543    43  200   23.37)
(smt.stats   60   8336 157202 997497  5538/5262/306   13013/2546    43  200   23.37)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   61   8513 158847 1024468  5583/5314/306   13317/2614    44  205   23.59)
(smt.stats   62   8707 161465 1046915  5721/5337/306   13679/2616    44  205   23.69)
ramon: poll                 wall=7.000s usage=6.937s mem=25036KiB load=1.00 rootload=1.00
(smt.stats   63   8920 164325 1096106  5788/5479/306   14029/2620    44  205   23.78)
(smt.stats   64   9154 167643 1134329  5843/5554/306   14365/2620    44  205   23.88)
(smt.stats   65   9411 172333 1190017  5917/5662/307   14785/2910    45  206   23.88)
(smt.stats   66   9512 173316 1205907  5921/5673/307   15015/2910    45  206   23.97)
(smt.stats   67   9623 175724 1227499  5997/5675/308   15171/2910    45  206   23.97)
(smt.stats   68   9745 176967 1245964  6039/5761/308   15293/2960    46  212   23.97)
ramon: poll                 wall=8.000s usage=7.937s mem=25296KiB load=1.00 rootload=1.00
(smt.stats   69   9879 178539 1267495  6056/5804/308   15450/2961    46  212   23.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   70  10026 180730 1299081  6063/5815/308   15661/2961    46  212   23.97)
(smt.stats   71  10187 181491 1308443  6063/5815/308   15838/2961    46  212   23.97)
(smt.stats   72  10364 184544 1347875  6082/5821/308   16036/2961    46  212   24.07)
(smt.stats   73  10558 187778 1375513  6160/5861/308   16451/2968    46  212   24.16)
(smt.stats   74  10771 190229 1414847  6184/5923/308   16793/2968    46  212   24.16)
ramon: poll                 wall=9.000s usage=8.936s mem=25576KiB load=1.00 rootload=1.00
(smt.stats   75  11005 193636 1453252  6352/6101/311   17202/3041    47  216   24.26)
(smt.stats   76  11262 197171 1480282  6511/6208/312   17525/3043    47  216   24.36)
ramon: poll                 wall=10.000s usage=9.936s mem=25680KiB load=1.00 rootload=1.00
(smt.stats   77  11544 200481 1525705  6635/6318/312   17852/3046    47  216   24.36)
(smt.stats   78  11645 202202 1546235  6661/6401/312   18033/3124    48  240   24.45)
(smt.stats   79  11756 204230 1555081  6679/6412/312   18209/3124    48  240   24.45)
(smt.stats   80  11878 208196 1588527  6702/6449/312   18411/3124    48  240   24.55)
ramon: poll                 wall=11.000s usage=10.931s mem=25908KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   81  12012 208915 1607928  6705/6454/312   18569/3125    48  240   24.55)
(smt.stats   82  12159 210182 1618088  6717/6462/312   18738/3125    48  240   24.55)
(smt.stats   83  12320 212782 1637530  6755/6467/312   18971/3125    48  240   24.55)
(smt.stats   84  12497 215364 1667902  6795/6520/312   19202/3126    48  240   24.55)
ramon: poll                 wall=12.000s usage=11.931s mem=26196KiB load=1.00 rootload=1.00
(smt.stats   85  12691 218915 1709969  6961/6547/312   19534/3130    48  240   24.64)
ramon: poll                 wall=13.000s usage=12.931s mem=26276KiB load=1.00 rootload=1.00
(smt.stats   86  12904 221729 1749827  7224/6723/312   19886/3137    48  240   24.83)
(smt.stats   87  13138 224136 1778690  7255/7000/312   20319/3138    48  240   24.93)
(smt.stats   88  13395 226556 1800207  7265/7014/312   20724/3138    48  240   25.02)
ramon: poll                 wall=14.002s usage=13.931s mem=26444KiB load=1.00 rootload=1.00
(smt.stats   89  13677 230628 1858167  7322/7019/312   21132/3139    48  240   25.02)
(smt.stats   90  13987 236285 1985333  7357/7101/312   21758/3139    48  240   25.02)
(smt.stats   91  14088 238125 2010704  7375/7115/312   21906/3140    48  240   25.02)
(smt.stats   92  14199 239599 2028905  7377/7124/312   22072/3140    48  240   25.12)
(smt.stats   93  14321 241411 2054672  7377/7124/312   22241/3140    48  240   25.12)
(smt.stats   94  14455 243708 2083659  7380/7127/312   22494/3140    48  240   25.12)
ramon: poll                 wall=15.000s usage=14.929s mem=26628KiB load=1.00 rootload=1.00
(smt.stats   95  14602 246371 2098846  7382/7129/312   22703/3140    48  240   25.12)
(smt.stats   96  14763 249541 2152125  7384/7131/313   23027/3541    49  245   25.21)
(smt.stats   97  14940 254068 2197696  7433/7131/313   23321/3546    49  245   25.21)
(smt.delete-inactive-clauses  :num-deleted-clauses 4697)
(smt.stats   98  15134 256059 2214901  7450/7197/313   18859/3546    49  245   25.31)
ramon: poll                 wall=16.000s usage=15.928s mem=26748KiB load=1.00 rootload=1.00
(smt.stats   99  15347 258625 2249320  7456/7203/313   19178/3546    49  245   25.31)
(smt.stats  100  15581 261198 2275798  7469/7210/313   19474/3546    49  245   25.31)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  101  15838 265423 2313031  7471/7218/313   19817/3546    49  245   25.31)
ramon: poll                 wall=17.000s usage=16.928s mem=26780KiB load=1.00 rootload=1.00
(smt.stats  102  16120 271875 2368892  7570/7228/313   20405/3548    49  245   25.31)
(smt.stats  103  16430 276992 2396254  7774/7330/313   20932/3557    49  245   25.40)
(smt.stats  104  16770 286816 2519145  7811/7555/313   21673/3557    49  245   25.40)
(smt.stats  105  16871 287438 2530358  7814/7561/313   21790/3557    49  245   25.40)
(smt.stats  106  16982 289112 2556745  7816/7563/313   21946/3557    49  245   25.50)
(smt.stats  107  17104 290658 2573974  7831/7574/313   22153/3557    49  245   25.50)
ramon: poll                 wall=18.000s usage=17.928s mem=26876KiB load=1.00 rootload=1.00
(smt.stats  108  17238 292995 2595125  7877/7586/313   22373/3558    49  245   25.59)
(smt.stats  109  17385 295038 2622437  7910/7625/313   22569/3559    49  245   25.50)
(smt.stats  110  17546 297839 2654780  7926/7673/313   22844/3559    49  245   25.59)
ramon: poll                 wall=19.000s usage=18.928s mem=27064KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.924s mem=27184KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:34:02 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.989s
ramon: group.utime          19.985s
ramon: group.stime          0.004s
ramon: group.mempeak        29424KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
