ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:31:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42767 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6OhjF28SmxIS.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2802336
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5638    529  1303/1170/103      90/17     8   22   19.08)
(smt.stats    1    202   6397    773  1959/1748/103     201/22     8   22   19.48)
(smt.stats    2    313   9320   1741  2219/1955/103     352/25     8   22   19.48)
(smt.stats    3    414  10038   2208  2885/2137/103     454/76     8   22   19.59)
(smt.stats    4    525  11716   3803  2997/2753/105     588/138    10   23   19.71)
(smt.stats    5    647  15128   7339  3085/2761/105     733/138    10   23   19.71)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17429  10851  3106/2857/106     851/163    11   25   19.71)
(smt.stats    7    859  20034  16948  3107/2863/106     961/163    11   25   19.81)
(smt.stats    8    981  23098  22717  3108/2864/106    1083/163    11   25   19.92)
(smt.stats    9   1115  24819  28211  3116/2872/108    1221/175    12   28   19.92)
(smt.stats   10   1216  26598  31310  3139/2879/108    1337/176    12   28   19.92)
(smt.stats   11   1327  29175  36493  3175/2909/108    1449/177    12   28   20.03)
(smt.stats   12   1449  32721  40870  3188/2935/108    1573/177    12   28   20.15)
(smt.stats   13   1583  34489  48711  3209/2960/116    1710/196    13   29   20.15)
(smt.stats   14   1730  36268  56102  3216/2963/116    1847/223    14   38   20.15)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 0&144115188075855870
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 0 := 144115188075855871 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 0&144115188075855870
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 0 := 144115188075855871 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 0&144115188075855870
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 0 := 144115188075855871 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 0&144115188075855870
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 0 := 144115188075855871 << 1
(smt.stats   15   1831  38592  58419  3251/2982/116    1943/224    14   38   20.15)
(smt.stats   16   1942  39181  61131  3272/3012/121    2064/227    15   39   20.25)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 1 := 1&2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 144115188075855874 := 0 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 144115188075855874 := 0 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 144115188075855874 := 0 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 2 := 0 << 2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 2 := 0 << 2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 2 := 0 << 2
(smt.stats   17   2064  42243  66654  3332/3035/121    2195/241    16   39   20.35)
(smt.stats   18   2198  44443  73371  3365/3095/132    2329/243    18   46   20.44)
(smt.stats   19   2345  47974  78479  3382/3108/134    2482/243    19   47   20.68)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&62
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&61
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&61
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&60
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 288230376151711744 := 72057594037927968 << 6
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 74309393851613184 := 37154696925806592 << 7
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 4755801206503243776 := 72057594037927968 << 6
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 74309393851613184 := 37154696925806592 << 7
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 74309393851613184 := 37154696925806592 << 7
ramon: poll                 wall=1.000s usage=0.871s mem=21892KiB load=0.87 rootload=0.86
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 74309393851613184 := 37154696925806592 << 7
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 1 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 1 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 2 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 4 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 63 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 1 := 63&128
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 2 := 63&2287542667870720
(smt.stats   20   2506  51489  84779  3468/3189/184    2663/254    21   59   20.87)
(smt.stats   21   2607  52767  88477  3492/3210/185    2770/256    21   59   20.87)
(smt.stats   22   2718  54666  96391  3551/3243/189    2851/271    22   83   20.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   23   2840  56794 101961  3606/3286/189    3000/284    23   98   20.97)
(smt.stats   24   2974  58495 106407  3624/3337/190    3125/306    24  103   20.97)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9367487224930631682 := 144115188075855872 << 16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9367487224930631682 := 144115188075855872 << 16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9655717601082343426 := 144115188075855872 << 16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 15132094747964866562 := 144115188075855872 << 16
(smt.stats   25   3121  63969 115232  3659/3374/197    3284/311    25  109   20.97)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 1 := 36028797018963967&2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&8
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&32
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&64
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&32
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&128
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 3 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&12
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&12
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&12
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&36
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&36
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&36
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&132
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&260
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&260
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&260
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&132
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&260
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&132
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&1028
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&1028
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&2052
(smt.stats   26   3282  66445 122757  3883/3551/312    3522/338    26  126   21.74)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&518
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
ramon: poll                 wall=2.000s usage=1.866s mem=23208KiB load=0.99 rootload=0.99
ramon: poll                 wall=3.000s usage=2.866s mem=23208KiB load=1.00 rootload=1.00
(smt.stats   27   3459  69391 132912  3993/3590/332    3809/352    26  126   21.93)
(smt.stats   28   3560  71737 138086  4024/3734/344    3923/382    27  139   21.93)
(smt.stats   29   3671  76471 146357  4033/3747/344    4030/382    27  139   21.93)
(smt.stats   30   3793  80497 158765  4057/3766/344    4138/394    28  146   21.93)
(smt.stats   31   3927  82889 164667  4084/3781/344    4283/395    28  146   22.03)
(smt.stats   32   4074  85217 172090  4114/3802/344    4461/398    28  146   22.03)
(smt.stats   33   4235  90539 189807  4128/3835/344    4624/398    28  146   22.03)
(smt.stats   34   4412  98498 207795  4133/3844/345    4827/452    29  147   22.28)
(smt.stats   35   4606  99344 215884  4149/3860/345    5029/452    29  147   22.28)
(smt.stats   36   4707 104554 227583  4159/3861/345    5174/453    29  147   22.28)
(smt.stats   37   4818 111853 242136  4167/3874/345    5313/454    29  147   22.28)
(smt.stats   38   4940 114839 252060  4168/3879/345    5582/454    29  147   22.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 146)
(smt.stats   39   5074 121926 258554  4171/3882/347    5562/515    30  155   22.38)
(smt.stats   40   5221 126485 270337  4204/3905/350    5707/519    31  158   22.54)
(smt.stats   41   5382 135688 291966  4237/3938/350    5884/519    31  158   22.54)
(smt.stats   42   5559 138935 301917  4325/4004/353    6093/519    32  167   22.63)
ramon: poll                 wall=4.000s usage=3.866s mem=24036KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   43   5753 144521 322499  4328/4004/357    6303/535    33  173   22.63)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&8192
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 576460752303431680 := 0 << 13
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&8192
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 576460752303431680 := 0 << 13
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&8192
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 576460752303431680 := 0 << 13
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&8192
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 576460752303431680 := 0 << 13
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 1 := 0 << 14
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 1 := 0 << 14
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 1 := 0 << 14
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 1 := 0 << 14
(smt.stats   44   5966 150854 333703  4456/4023/357    6648/541    33  173   23.13)
(smt.stats   45   6067 152464 336858  4521/4191/372    6754/594    34  184   23.13)
ramon: poll                 wall=5.001s usage=4.849s mem=24800KiB load=0.98 rootload=0.98
(smt.stats   46   6178 160984 352128  4526/4199/372    6898/594    34  184   23.23)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 7&72057594037929984
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9439544818968561664 := 144115188075855872 << 3
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 7&72057594037929984
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9583660007044417536 := 144115188075855872 << 3
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 7&72057594037929984
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9583660007044417536 := 144115188075855872 << 3
(smt.stats   47   6300 166293 366196  4572/4241/378    7124/673    36  191   23.23)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&2048
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&2048
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&2048
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&4096
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&4096
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&8192
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&8192
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&8192
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&32768
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&32768
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&65536
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&65536
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&131072
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&65536
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&131072
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&262144
(smt.stats   48   6434 172002 382796  4727/4351/440    7363/722    37  205   23.54)
(smt.stats   49   6581 178963 394139  4784/4428/467    7617/803    38  212   23.83)
(smt.stats   50   6742 185814 410387  4874/4441/467    7825/806    38  212   23.83)
(smt.stats   51   6919 194637 430111  4987/4536/467    8135/811    38  212   23.93)
ramon: poll                 wall=6.000s usage=5.845s mem=25568KiB load=1.00 rootload=1.00
(smt.stats   52   7113 201477 451508  5023/4667/471    8642/893    39  214   24.21)
(smt.stats   53   7326 209442 481369  5257/4712/471    9239/1060    40  228   24.31)
(smt.stats   54   7560 218683 512099  5294/4945/480    9615/1215    41  230   24.40)
(smt.stats   55   7661 224877 526677  5416/5015/480    9726/1216    41  230   24.50)
(smt.stats   56   7772 229499 539982  5451/5070/480    9860/1309    42  254   24.50)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   57   7894 233724 553761  5477/5108/483   10030/1325    43  256   24.59)
ramon: poll                 wall=7.000s usage=6.845s mem=26312KiB load=1.00 rootload=1.00
(smt.stats   58   8028 236872 564049  5498/5119/484   10391/1325    43  256   24.69)
(smt.stats   59   8175 244906 591549  5637/5173/485   10628/1447    44  275   24.79)
(smt.stats   60   8336 253244 621023  5765/5264/485   10902/1490    45  275   24.88)
(smt.stats   61   8513 257876 640665  5797/5409/485   11372/1490    45  275   24.88)
ramon: poll                 wall=8.000s usage=7.845s mem=26568KiB load=1.00 rootload=1.00
(smt.stats   62   8707 270716 682360  5801/5422/486   11769/1565    46  280   24.98)
(smt.stats   63   8921 280115 714052  5820/5439/492   12191/1659    47  283   25.11)
(smt.stats   64   9155 289178 741532  5962/5566/497   12522/1671    48  336   25.30)
(smt.stats   65   9412 303408 769307  6094/5600/497   13089/1680    48  336   25.40)
ramon: poll                 wall=9.000s usage=8.845s mem=27080KiB load=1.00 rootload=1.00
(smt.stats   66   9513 306094 779338  6113/5726/499   13463/1774    49  346   25.49)
(smt.stats   67   9624 308083 790432  6131/5740/501   13590/1775    49  346   25.49)
(smt.stats   68   9746 312572 801430  6175/5759/501   13754/1777    49  346   25.49)
ramon: poll                 wall=10.001s usage=9.848s mem=27336KiB load=1.00 rootload=1.00
(smt.stats   69   9880 320179 814630  6413/5804/501   14009/1865    50  359   25.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 158)
(smt.stats   70  10027 326800 835437  6474/6087/503   14245/1948    51  371   25.88)
(smt.stats   71  10188 340042 867614  6483/6096/510   14514/1986    52  372   25.88)
(smt.stats   72  10365 350970 902126  6499/6110/511   14855/1986    52  372   25.88)
ramon: poll                 wall=11.000s usage=10.844s mem=27592KiB load=1.00 rootload=1.00
(smt.stats   73  10559 361640 929674  6522/6120/513   15191/2068    53  411   25.97)
(smt.stats   74  10772 371801 961342  6741/6145/513   15490/2070    53  411   25.97)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11006 383221 1004495  6824/6380/513   15784/2070    53  411   25.97)
ramon: poll                 wall=12.000s usage=11.844s mem=27848KiB load=1.00 rootload=1.00
(smt.stats   76  11263 397143 1073264  6876/6464/513   16184/2073    53  411   26.07)
(smt.stats   77  11545 407366 1104498  6971/6518/514   16695/2179    54  413   26.16)
(smt.stats   78  11646 411666 1115677  7002/6609/514   16894/2179    54  413   26.16)
(smt.stats   79  11757 418064 1138351  7041/6656/515   17225/2294    55  414   26.26)
ramon: poll                 wall=13.000s usage=12.844s mem=28104KiB load=1.00 rootload=1.00
(smt.stats   80  11879 427108 1161608  7122/6662/515   17435/2299    55  414   26.26)
(smt.stats   81  12013 431573 1178104  7144/6753/515   17866/2300    55  414   26.35)
(smt.stats   82  12160 437352 1212440  7160/6772/516   18110/2341    56  423   26.45)
(smt.stats   83  12321 440651 1223971  7315/6877/516   18295/2343    56  423   26.58)
(smt.stats   84  12498 443703 1247608  7329/6911/522   18814/2446    57  442   26.77)
(smt.stats   85  12692 449984 1280446  7347/6920/524   19110/2447    57  442   26.77)
ramon: poll                 wall=14.000s usage=13.844s mem=28528KiB load=1.00 rootload=1.00
(smt.stats   86  12906 466525 1344382  7356/6938/526   19527/2495    59  510   27.15)
(smt.stats   87  13140 478172 1386226  7362/6944/526   19847/2495    59  510   27.25)
(smt.stats   88  13397 500857 1477229  7369/6951/526   20176/2495    59  510   27.34)
ramon: poll                 wall=15.000s usage=14.844s mem=28908KiB load=1.00 rootload=0.99
(smt.stats   89  13679 510822 1513389  7378/6960/526   20605/2495    59  510   27.34)
(smt.stats   90  13989 514354 1542108  7389/6971/526   21019/2495    59  510   27.53)
(smt.stats   91  14090 516450 1551170  7390/6972/526   21143/2495    59  510   27.53)
(smt.stats   92  14201 519614 1563660  7414/6975/526   21302/2498    59  510   27.53)
ramon: poll                 wall=16.000s usage=15.843s mem=29420KiB load=1.00 rootload=1.00
(smt.stats   93  14323 524192 1588864  7510/7017/526   21531/2508    59  510   27.63)
(smt.stats   94  14457 527842 1609989  7616/7142/526   21773/2509    59  510   27.63)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   95  14604 533489 1638032  7635/7208/526   22233/2510    59  510   27.73)
(smt.stats   96  14765 544660 1674981  7642/7224/527   22571/2676    60  534   27.82)
(smt.stats   97  14942 551222 1705759  7648/7230/528   23010/2676    60  534   27.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 280)
ramon: poll                 wall=17.000s usage=16.843s mem=29676KiB load=1.00 rootload=1.00
(smt.stats   98  15136 560975 1752295  7657/7237/528   23025/2765    61  544   27.82)
(smt.stats   99  15349 572901 1825439  7694/7266/528   23413/2765    61  544   27.82)
(smt.stats  100  15583 586324 1873389  7706/7280/530   23892/2796    62  546   27.93)
(smt.stats  101  15840 604122 1951800  7716/7290/530   24224/2796    62  546   27.93)
ramon: poll                 wall=18.000s usage=17.843s mem=29676KiB load=1.00 rootload=1.00
(smt.stats  102  16122 615373 2000375  7721/7295/534   24578/2841    63  559   28.03)
(smt.stats  103  16432 631046 2070327  7760/7327/534   24978/2841    63  559   28.03)
(smt.stats  104  16772 647755 2155869  7795/7354/537   25479/2861    64  562   28.12)
(smt.stats  105  16873 652510 2174664  7797/7356/537   25590/2861    64  562   28.12)
(smt.stats  106  16984 655345 2194844  7803/7362/537   25720/2861    64  562   28.12)
ramon: poll                 wall=19.000s usage=18.843s mem=29932KiB load=1.00 rootload=1.00
(smt.stats  107  17106 660939 2212559  7807/7366/537   25912/2861    64  562   28.12)
(smt.stats  108  17240 665721 2247803  7836/7370/537   26124/2862    64  562   28.22)
(smt.stats  109  17387 668886 2271958  7908/7411/537   26295/2866    64  562   28.22)
(smt.stats  110  17548 671708 2286756  7925/7480/537   26514/2866    64  562   28.31)
ramon: poll                 wall=20.000s usage=19.843s mem=30188KiB load=1.00 rootload=1.00
(smt.stats  111  17725 677289 2325268  7943/7487/537   26818/2866    64  562   28.31)
ramon: end                  Tue Dec 24 14:32:15 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.010s
ramon: group.total          19.929s
ramon: group.utime          19.913s
ramon: group.stime          0.016s
ramon: group.mempeak        30444KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              0.99
