ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:49:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40798 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ksmjknqxqNDj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3064533
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3714   2812  1258/1125/90      98/4     3   13   19.06)
(smt.stats    1    202   5233   4484  1888/1691/93     192/3     5   16   19.16)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 5 := 1193140966113766&5
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 5 := 1193140966113766&5
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113766 := 1193140966113766&144115188075855871
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 144115188075855871 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1 := 1193140966113766&144115188075855871
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113766 := 1193140966113766&144115188075855871
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 144115188075855871 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 4 := 1193140966113766&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 5 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 4 := 1193140966113766&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 5 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113766 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 5 := 1193140966113766&5
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 4 := 1193140966113766&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 5 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113766 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113764 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855871 := 2 << 55
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 4 := 1193140966113766&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 5 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113764 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&5
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&5
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&11
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&5
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 8 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 72057594037927937 := 2 << 55
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&5
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 144115188075855872 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113762 := 1193140966113766&1193140966113769
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113762 := 1193140966113766&1193140966113770
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 1193140966113770 := 4 << 54
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113765 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113764 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113760 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1193140966113760 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 24 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 16 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 128 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 128 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 256 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 512 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 128 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855871 := 2 << 55
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 1 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 2 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 4 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 8 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 8 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 16 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 32 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 64 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 128 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 256 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 512 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 1024 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 2048 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 4096 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 8192 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 16384 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 32768 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 65536 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 131072 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 262144 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 524288 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 1048576 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 2097152 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 4194304 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 8388608 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 16777216 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 33554432 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 67108864 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 134217728 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 268435456 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 536870912 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 1073741824 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 2147483648 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 4294967296 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 8589934592 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 8589934592 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 17179869184 := 1193140966113766&72057594037927936
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 34359738368 := 1193140966113766&72057594037927936
(smt.stats    2    313   6160   5985  2548/1984/166     292/16     7   28   20.84)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 72057594037927935 := 2 << 55
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 1193140966113766&72057594037927936
band: (band[57] (if (or #575 #576 #577 #578) 0 (if #579 1 #729)) (shl[57] (bv2int %0) (+ 57 #741))) 268435456 := 1193140966113766&72057594037927936
(smt.stats    3    414   7910   8159  2469/2232/299     419/59    10   80   20.65)
(smt.stats    4    525  10174  10765  2502/2265/322     459/80    15  142   20.74)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 34 := 4772563864455066&35
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 26 := 4772563864455066&35
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 26 := 4772563864455066&35
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 2 := 4772563864455066&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 144115188075855875 := 0 << 56
(smt.stats    5    648  14324  12900  2554/2314/338     711/97    16  145   21.03)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 2 := 4772563864455066&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 144115188075855875 := 0 << 56
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 2 := 4772563864455066&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 144115188075855875 := 0 << 56
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    749  18396  16495  2589/2350/345     815/107    17  153   21.03)
(smt.stats    7    860  19983  17877  2697/2401/351     941/115    17  153   21.13)
(smt.stats    8    982  21696  20910  2736/2488/353    1114/166    19  167   21.22)
(smt.stats    9   1116  25698  25318  2825/2539/353    1282/169    19  167   21.22)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1 := 2386281932227533&144115188075855776
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1 := 2386281932227533&144115188075855792
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 1 := 2386281932227533&144115188075855792
(smt.stats   10   1217  27640  28513  2890/2592/354    1420/212    20  172   21.32)
(smt.stats   11   1328  32962  35714  2947/2670/363    1613/268    22  177   21.41)
ramon: poll                 wall=1.000s usage=0.936s mem=22780KiB load=0.94 rootload=0.91
(smt.stats   12   1450  35757  40466  3061/2795/364    1912/324    23  180   21.51)
(smt.stats   13   1584  38307  46877  3178/2805/365    2233/333    23  180   21.51)
(smt.stats   14   1731  41552  53258  3369/2926/365    2603/404    24  183   21.63)
(smt.stats   15   1832  44232  59999  3526/3116/365    2899/407    24  183   21.72)
(smt.stats   16   1943  46838  67691  3654/3268/365    3313/407    24  183   21.82)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855832
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855816
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855816
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855600
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855568
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855568
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855568
(smt.stats   17   2065  49540  73296  3724/3401/365    3725/412    24  183   21.92)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855600
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855600
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855600
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855600
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855600
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 72 := 2386281932227533&144115188075855592
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 24 := 2386281932227533&144115188075855560
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 24 := 2386281932227533&144115188075855560
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 24 := 2386281932227533&144115188075855560
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 24 := 2386281932227533&144115188075855560
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 24 := 2386281932227533&144115188075855560
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 24 := 2386281932227533&144115188075855560
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 24 := 2386281932227533&144115188075855560
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 40 := 2386281932227533&144115188075855576
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 40 := 2386281932227533&144115188075855576
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855728
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855728
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855632
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855664
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 64 := 2386281932227533&144115188075855824
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&144115188075855824
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 8 := 2386281932227533&144115188075855752
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 8 := 2386281932227533&144115188075855624
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&144115188075855632
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&144115188075855408
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&144115188075855408
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253115920
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253116432
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253115952
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253116464
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253116464
(smt.stats   18   2199  52209  81994  3904/3505/408    4115/596    26  199   22.20)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253117488
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253117488
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253246000
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253245488
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253245488
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253245488
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253507632
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772253507632
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772319043632
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772319045680
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906772319044656
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&80906764265979952
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&36028797019488304
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 12574050159618949168 := 144115188075861794 << 55
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&36028797153181744
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 0 := 2386281932227533&36028797153181744
(smt.stats   19   2346  54111  88240  4331/3714/438    4518/604    26  199   22.39)
(smt.stats   20   2507  56256  97636  4573/4309/502    5182/655    27  217   22.78)
ramon: poll                 wall=2.000s usage=1.935s mem=24076KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   21   2608  60292 108613  4785/4398/505    5969/868    28  230   22.87)
(smt.stats   22   2719  63133 116965  4990/4525/505    6379/1228    29  238   22.97)
(smt.stats   23   2841  64611 119950  5612/4857/505    6576/1228    29  238   23.16)
(smt.stats   24   2975  68829 127893  5761/5346/505    7453/1228    29  238   23.26)
(smt.stats   25   3122  76227 158027  5782/5500/505    7971/1228    29  238   23.35)
(smt.stats   26   3283  86156 223042  5791/5509/506    8312/1692    30  245   23.35)
(smt.stats   27   3460  94792 281675  5805/5522/507    8651/1776    31  246   23.45)
ramon: poll                 wall=3.000s usage=2.932s mem=24800KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3561 100618 309576  5810/5523/507    9189/1776    31  246   23.45)
(smt.stats   29   3672 105464 328678  5951/5527/507    9726/1779    31  246   23.54)
(smt.stats   30   3794 107950 341803  6331/5684/507   10049/1780    31  246   23.73)
ramon: poll                 wall=4.000s usage=3.929s mem=25352KiB load=1.00 rootload=0.99
(smt.stats   31   3928 111422 353867  6639/6054/507   10941/1788    31  246   23.83)
ramon: poll                 wall=5.000s usage=4.926s mem=25556KiB load=1.00 rootload=1.00
(smt.stats   32   4075 114198 366385  6823/6374/508   11552/2216    32  249   24.11)
ramon: poll                 wall=6.000s usage=5.923s mem=25672KiB load=1.00 rootload=0.99
(smt.stats   33   4236 116095 369278  7012/6552/508   11758/2218    32  249   24.21)
ramon: poll                 wall=7.000s usage=6.919s mem=25856KiB load=1.00 rootload=1.00
(smt.stats   34   4413 120905 388351  7302/6782/508   12361/2219    32  249   24.49)
(smt.stats   35   4607 130336 418548  7335/7052/509   12579/2586    33  256   24.49)
(smt.stats   36   4708 135970 452529  7347/7061/509   12816/2586    33  256   24.59)
(smt.stats   37   4819 143743 486938  7362/7070/510   13311/2598    34  265   24.59)
ramon: poll                 wall=8.000s usage=7.910s mem=26220KiB load=0.99 rootload=0.99
(smt.stats   38   4941 147431 502443  7535/7252/512   14061/2754    35  272   24.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 256)
(smt.stats   39   5075 152957 517166  7589/7260/512   14839/2759    35  272   24.88)
(smt.stats   40   5222 161469 546907  7662/7329/512   15222/2762    35  272   24.97)
ramon: poll                 wall=9.000s usage=8.908s mem=26680KiB load=1.00 rootload=1.00
(smt.stats   41   5383 168002 575723  7873/7433/514   16699/3188    36  275   25.16)
(smt.stats   42   5560 173370 603783  7988/7673/515   17932/3239    37  276   25.45)
ramon: poll                 wall=10.000s usage=9.905s mem=27032KiB load=1.00 rootload=0.99
(smt.stats   43   5754 179771 628989  8279/7716/515   18744/3243    37  276   25.55)
ramon: poll                 wall=11.000s usage=10.902s mem=27484KiB load=1.00 rootload=1.00
(smt.stats   44   5967 183673 651508  8779/8043/517   19492/3426    38  303   26.00)
(smt.stats   45   6068 187115 671562  8902/8546/517   20503/3427    38  303   26.09)
(smt.stats   46   6179 190786 687497  8980/8634/517   21203/3433    38  303   26.09)
(smt.stats   47   6301 194333 697935  9144/8732/517   21792/3441    38  303   26.19)
ramon: poll                 wall=12.000s usage=11.900s mem=27756KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6435 197449 714076  9431/8942/517   22702/3441    38  303   26.28)
(smt.stats   49   6582 200957 725879  9597/9168/518   23553/4013    39  305   26.47)
ramon: poll                 wall=13.000s usage=12.896s mem=28108KiB load=1.00 rootload=0.99
(smt.stats   50   6743 210198 769075  9733/9385/518   24055/4014    39  305   26.47)
(smt.stats   51   6920 216879 798292  9837/9474/518   25258/4018    39  305   26.67)
(smt.stats   52   7114 223140 818830  9901/9618/518   25906/4018    39  305   26.92)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 129 := 135&144115188075855847
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 129 := 135&144115188075855845
(smt.stats   53   7327 232810 850173  9936/9640/520   26365/4631    40  324   26.92)
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 133 := 135&144115188075855845
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 18446744073709551589 := 256705178760118362 << 11
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 133 := 135&144115188075855845
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 18446744073709551589 := 256705178760118362 << 11
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 133 := 135&144115188075855845
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 18446744073709551589 := 256705178760118362 << 11
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 133 := 135&144115188075855845
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 10664523917613334501 := 256705178760118362 << 11
band: (band[57] (if (or #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763) 0 (if #764 1 #868)) (shl[64] (* 2 #114) (mod #914 64))) 133 := 135&144115188075855845
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #911 #913) 64)) 10664523917613334501 := 256705178760118362 << 11
ramon: poll                 wall=14.000s usage=13.893s mem=28792KiB load=1.00 rootload=1.00
(smt.stats   54   7561 239352 870420 10054/9700/527   27357/4640    40  324   27.16)
(smt.stats   55   7662 243065 898957 10276/9849/528   27735/4643    40  324   27.35)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   56   7773 247960 918351 10473/10039/528   28174/4788    41  356   27.35)
(smt.stats   57   7895 254256 937270 10646/10235/528   28605/4788    41  356   27.45)
ramon: poll                 wall=15.000s usage=14.892s mem=29108KiB load=1.00 rootload=1.00
(smt.stats   58   8029 260416 967280 10710/10401/528   29458/4791    41  356   27.57)
(smt.stats   59   8176 269850 997427 10830/10434/528   30407/4795    41  356   27.76)
(smt.stats   60   8337 282235 1092458 10852/10553/528   31098/4795    41  356   27.76)
ramon: poll                 wall=16.000s usage=15.889s mem=29460KiB load=1.00 rootload=0.99
(smt.stats   61   8514 290878 1143265 10957/10610/528   32604/4797    41  356   27.95)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   62   8708 301469 1214249 11142/10680/528   33777/4797    41  356   28.14)
(smt.stats   63   8921 309957 1254556 11279/10994/529   34927/5473    42  356   28.24)
ramon: poll                 wall=17.000s usage=16.887s mem=29788KiB load=1.00 rootload=1.00
(smt.stats   64   9155 328064 1285382 11294/11009/529   36217/5473    42  356   28.34)
(smt.stats   65   9412 344106 1338730 11308/11014/529   36995/5474    42  356   28.43)
(smt.stats   66   9513 348084 1356376 11330/11028/529   37324/5477    42  356   28.43)
ramon: poll                 wall=18.000s usage=17.882s mem=30072KiB load=0.99 rootload=1.00
(smt.stats   67   9624 355677 1409736 11373/11058/529   37579/5479    42  356   28.53)
(smt.stats   68   9746 362647 1435235 11538/11101/529   37955/5484    42  356   28.53)
(smt.stats   69   9880 368556 1497703 11743/11333/529   38357/5486    42  356   28.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 1854)
(smt.stats   70  10027 373450 1539272 11782/11497/529   37291/5486    42  356   28.72)
ramon: poll                 wall=19.000s usage=18.878s mem=30296KiB load=1.00 rootload=0.99
(smt.stats   71  10188 382582 1633895 11823/11525/530   38070/6430    43  373   28.72)
(smt.stats   72  10365 390570 1695786 12120/11547/530   38746/6437    43  373   28.81)
(smt.stats   73  10559 397240 1746877 12241/11898/530   39255/6437    43  373   28.91)
ramon: poll                 wall=20.000s usage=19.875s mem=30496KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:50:18 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.040s
ramon: group.total          19.943s
ramon: group.utime          19.895s
ramon: group.stime          0.048s
ramon: group.mempeak        30752KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
