ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:45:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29253 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7avBCZQCilT6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             649487
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   69.9301     10000        49          0            1        2)
(sat.ddfw       1      1   35.7179     20001        98          1            1        3)
(sat.ddfw       1      1   37.6648     40001       196          2            1        5)
(smt.stats    0    101   4272    566  1157/1010/109     100/21     7   16   52.13)
(sat.ddfw       1      1   38.6598     70001       343          3            1        8)
(smt.stats    1    202   5785   1319  2106/1875/111     201/35     9   18   52.23)
ramon: poll                 wall=1.000s usage=0.941s mem=54524KiB load=0.94 rootload=0.93
(sat.ddfw       1      1    35.524    110001       539          4            1       12)
(smt.stats    2    313   7628   2673  2235/2012/121     304/47    12   28   52.36)
(smt.stats    3    415   9765   4417  2365/2156/128     412/60    13   34   52.46)
(smt.stats    4    526  11672   5383  2423/2187/130     518/94    14   43   52.55)
(smt.stats    5    648  15493   8106  2442/2227/130     635/94    14   43   52.65)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  16877  11088  2462/2233/130     734/94    14   43   52.75)
(smt.stats    7    860  20389  16350  2464/2250/131     845/107    15   43   52.75)
(sat.ddfw       1      1   28.5057    160000       784          5            1       17)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 634&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 633024028482732666 := 631 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 634&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 633024028482732666 := 631 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 1230550730754&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 1230550730754 := 631 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 1230550730754&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 1230550730754 := 631 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 1262&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4398046511103 := 631 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 1262&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 1263 := 631 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 1262&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 1263 := 631 << 1
(smt.stats    8    982  21717  19392  2523/2303/144     962/115    17   53   52.97)
ramon: poll                 wall=2.000s usage=1.884s mem=55040KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   24.7733    220001      1078          6            1       23)
(smt.stats    9   1116  23346  21458  2655/2337/144    1109/117    17   53   53.07)
ramon: poll                 wall=3.000s usage=2.882s mem=55200KiB load=1.00 rootload=1.00
(smt.stats   10   1217  24750  22601  2782/2446/144    1212/121    17   53   53.07)
(sat.ddfw       1      1   21.8682    290001      1421          7            1       30)
(smt.stats   11   1328  26280  25334  2922/2570/144    1332/125    17   53   53.16)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  28077  27316  2948/2708/146    1454/162    18   58   53.28)
ramon: poll                 wall=4.000s usage=3.879s mem=55428KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   19.5408    370001      1813          8            1       38)
(smt.stats   13   1584  30201  31171  2996/2761/151    1612/172    19   60   53.44)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510576&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4398046510576 := 4398046510833 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510576&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4398046510576 := 4398046510833 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510576&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 4398046510576 := 4398046510833 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510576&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 316659348798960 := 4398046510833 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046508936&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4398046508935 := 4398046510833 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046508936&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4398046508935 := 4398046510833 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046508936&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 1 := 4398046510833 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046508936&0
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4398046508935 := 4398046510833 << 3
(smt.stats   14   1731  32766  38754  3047/2779/151    1774/207    20   66   53.44)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 8995 := 4398046509049&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 8993 := 4398046509049&8995
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 30786325575673 := 4398046510847 << 17
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046509049&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510589&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510588&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510589&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510588&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510528&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510528&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510080&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046509049&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046509050&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046509052&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046509056&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510588&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510528&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510080&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 8192 := 4398046510080&8995
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 30786325576704 := 4398046510847 << 17
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 8993 := 4398046510588&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 8992 := 4398046510588&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 8192 := 4398046510588&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 8192 := 4398046510556&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 8192 := 4398046509056&8995
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 30786325575680 := 4398046510847 << 17
(smt.stats   15   1832  35218  41828  3114/2866/213    1905/230    22   78   53.73)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4398046510551 := 4398046510847 << 17
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 4398046510551 := 4398046510847 << 17
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 1 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 1 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 2 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 4 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 8 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 16 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 32 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 64 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 128 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 256 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 512 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 1024 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 2048 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 4096 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 8192 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 128 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 256 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 512 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 1024 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 2048 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 4096 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 8192 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 128 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 128 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 4096 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 4096 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 256 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 256 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 512 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 1024 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 2048 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 32 := 4398012825600&8995
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398012825600&8995
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (or #588 #589 #590) 0 (if #591 1 #699))) 64 := 4398012825600&8995
(smt.stats   16   1943  37051  46188  3225/2988/344    2009/247    24  120   54.13)
ramon: poll                 wall=5.000s usage=4.878s mem=56444KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   17.6783    460001      2254          9            1       47)
(smt.stats   17   2065  40125  50528  3305/3061/347    2140/268    25  129   54.32)
(smt.stats   18   2199  44979  56454  3313/3069/347    2279/268    25  129   54.55)
(smt.stats   19   2346  46578  60095  3315/3071/347    2434/278    26  132   54.55)
ramon: poll                 wall=6.000s usage=5.876s mem=56700KiB load=1.00 rootload=0.99
(smt.stats   20   2507  48698  66184  3319/3075/348    2588/281    27  140   54.69)
(sat.ddfw       1      1    16.116    560001      2745         10            1       57)
(smt.stats   21   2608  49739  69886  3319/3075/349    2690/281    27  140   54.69)
(smt.stats   22   2719  50989  74534  3321/3077/349    2803/281    28  145   54.69)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2302928 := 4398046510782&2302928
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2302848 := 4398046510782&2302928
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 0 := 4398046510782&2302928
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2302924 := 4398046510782&2302928
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2302912 := 4398046510782&2302928
(smt.stats   23   2841  53669  78008  3468/3090/351    2983/289    29  145   54.69)
(smt.stats   24   2975  55542  83657  3618/3371/364    3237/318    30  157   54.89)
ramon: poll                 wall=7.000s usage=6.873s mem=57144KiB load=1.00 rootload=1.00
(smt.stats   25   3122  58551  91339  3669/3387/366    3629/456    31  159   55.18)
(sat.ddfw       1      1   14.7949    670001      3284         11            1       68)
(smt.stats   26   3283  63316 103268  3814/3567/367    3823/459    31  159   55.37)
ramon: poll                 wall=8.000s usage=7.872s mem=57644KiB load=1.00 rootload=1.00
(smt.stats   27   3460  68477 114912  3831/3585/374    4223/592    33  184   55.37)
(smt.stats   28   3561  71375 119373  3843/3590/375    4343/592    33  184   55.47)
(smt.stats   29   3672  75105 131251  3855/3609/376    4482/680    34  185   55.47)
(smt.stats   30   3794  78604 138944  3941/3610/376    4732/693    35  190   55.47)
(sat.ddfw       1      1   13.6971    790001      3872         12            1       80)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2310144 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2310144 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2310144 := 4398046510254&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2314240 := 4398046510254&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2363392 := 4398046510254&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2363392 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2310144 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2314240 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2319976 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2310144 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2314240 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2310144 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2314240 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2310144 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2314240 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2363392 := 4398046510250&150924710209
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (or #724 #725 #726 #727) 0 (if #728 1 #866))) 2359296 := 4398046510250&150924710209
(smt.stats   31   3928  81005 146738  4222/3711/376    5072/700    35  190   55.77)
ramon: poll                 wall=9.000s usage=8.871s mem=58268KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  84580 156868  4226/3980/413    5343/781    36  197   55.86)
(smt.stats   33   4236  95255 180282  4229/3983/413    5529/852    37  201   56.18)
(smt.stats   34   4413 105722 201477  4238/3992/414    5778/871    38  207   56.18)
ramon: poll                 wall=10.000s usage=9.869s mem=58352KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7526    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.864s mem=58424KiB load=1.00 rootload=0.99
(smt.stats   35   4607 112604 214585  4433/4154/417    6116/978    39  215   56.27)
(smt.stats   36   4708 116067 219298  4537/4213/417    6332/986    39  215   56.27)
(sat.ddfw       1      1   11.8936   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.833s mem=58540KiB load=0.97 rootload=0.97
(smt.stats   37   4819 119608 231209  4677/4423/420    6824/1175    40  217   56.37)
ramon: poll                 wall=13.000s usage=12.802s mem=58728KiB load=0.97 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4941 123499 243525  4748/4449/420    7166/1178    40  217   56.56)
(sat.ddfw       1      1   11.1607   1210001      5931         15            1      123)
(smt.delete-inactive-clauses  :num-deleted-clauses 167)
ramon: poll                 wall=14.000s usage=13.800s mem=58868KiB load=1.00 rootload=1.00
(smt.stats   39   5075 128022 250983  4861/4557/420    7228/1180    40  217   56.56)
(smt.stats   40   5222 132268 268321  4902/4624/420    7487/1185    40  217   56.56)
ramon: poll                 wall=15.000s usage=14.800s mem=58920KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5346   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=15.799s mem=58952KiB load=1.00 rootload=1.00
(smt.stats   41   5383 137362 276677  5140/4670/420    8018/1189    40  217   56.75)
ramon: poll                 wall=17.000s usage=16.885s mem=59304KiB load=1.09 rootload=1.08
(sat.ddfw       1      1    9.9818   1540001      7549         17            1      156)
(smt.stats   42   5560 141587 288379  5263/4909/420    8346/1193    40  217   57.07)
(smt.stats   43   5754 148025 307616  5325/5065/420    8966/1193    40  217   57.35)
ramon: poll                 wall=18.000s usage=17.882s mem=59516KiB load=1.00 rootload=1.00
(smt.stats   44   5967 156901 346035  5339/5079/423    9313/1727    43  243   57.45)
(smt.stats   45   6068 161320 364699  5352/5092/424    9425/1727    43  243   57.45)
ramon: poll                 wall=19.000s usage=18.880s mem=59668KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.47867   1720001      8431         18            1      174)
(smt.stats   46   6179 167452 387291  5372/5106/425    9580/1747    45  249   57.45)
ramon: poll                 wall=20.000s usage=19.967s mem=59720KiB load=1.09 rootload=1.08
ramon: end                  Fri Nov  1 21:45:24 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.010s
ramon: group.utime          19.982s
ramon: group.stime          0.028s
ramon: group.mempeak        59976KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.047s
ramon: loadavg              1.00
