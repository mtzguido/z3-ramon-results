ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:18:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27114 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/y6dUHJ6zwjy1.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             965518
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   2235    444  1274/1142/90      95/0     2   14   51.95)
(smt.stats    1    202   3950   1581  2179/1968/91     181/1     4   14   52.05)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 118 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 118 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 144115188075855859&288230376151711742
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 115 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 114 := 144115188075855859&118
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 118 := 118 << 56
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 112 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 112 := 144115188075855859&118
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   75.7576     10000        49          0            1        2)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 11 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 10 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 18 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 8 := 144115188075855859&288230376151711738
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 10 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 10 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 3 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&234
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 3 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&118
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 3 := 144115188075855859&230
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 3 := 144115188075855859&230
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 3 := 144115188075855859&230
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&230
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&230
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&230
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&230
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&230
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&578
(smt.stats    2    313   5083   2982  2368/2130/156     293/14     7   27   52.54)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&578
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&578
(sat.ddfw       1      1   37.7396     20001        98          1            1        3)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&2434
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&578
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&578
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&578
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&2434
(smt.stats    3    414   5709   4059  2743/2499/190     400/25     9   39   52.83)
(smt.stats    4    525   7080   6006  2767/2523/197     548/51    11   56   52.83)
(smt.stats    5    647  11622  10270  2788/2537/205     694/75    13   63   52.92)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 8 := 15&5312
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&5056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 576460752303428544 := 288230376151716256 << 3
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&5056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 576460752303428544 := 288230376151716256 << 3
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&5056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 576460752303428544 := 288230376151716256 << 3
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&5056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 576460752303428544 := 288230376151716140 << 3
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&5184
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 576460752303428672 := 288230376151716256 << 3
(sat.ddfw       1      1   37.5235     40001       196          2            1        5)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&5312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365411008 := 288230376151716256 << 3
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 459 := 460 << 4
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 459 := 460 << 4
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 459 := 460 << 4
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 461 := 460 << 4
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 1 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 2 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 4 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 8 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 7358 := 460 << 4
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 12 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 8 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 4 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 1 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 2 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 15&7360
band: (band[58] (if (= #120 57) 1 (if #578 3 #741)) (shl[58] (bv2int %0) (+ 58 #744))) 8 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 15&7360
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 4 := 15&7360
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  13227  12789  2916/2661/259     820/103    15   78   53.23)
(smt.stats    7    859  15133  16426  2948/2676/271     962/102    16   83   53.42)
(smt.stats    8    981  18994  20288  3007/2749/275    1106/130    17   89   53.42)
(sat.ddfw       1      1   35.1288     70001       343          3            1        8)
(smt.stats    9   1115  24396  25691  3007/2749/275    1267/132    18   91   53.42)
ramon: poll                 wall=1.000s usage=0.811s mem=55628KiB load=0.81 rootload=0.79
(smt.stats   10   1216  28520  31270  3009/2751/275    1367/132    18   91   53.56)
(smt.stats   11   1327  33054  37122  3011/2751/275    1491/132    18   91   53.56)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 255&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 5120 := 912 << 7
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 255&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 5120 := 912 << 7
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 255&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 5120 := 1028 << 7
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 255&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 5120 := 288230376151712072 << 7
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 0 := 255&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 5120 := 288230376151712072 << 7
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 128 := 255&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 128 := 255&5120
(smt.stats   12   1449  36769  41998  3051/2791/286    1644/181    19   94   53.66)
(smt.stats   13   1583  42046  50329  3052/2792/286    1789/181    19   94   53.77)
(sat.ddfw       1      1   31.3972    110001       539          4            1       12)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 256 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 512 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 512 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1024 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 256 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 512 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1024 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 512 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1024 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 4096 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2048 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1024 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 3072 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 3072 := 536870911&5120
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5120 := 536870911&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2017612633061987328 := 288230376151711914 << 28
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5120 := 536870911&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2017612633061987328 := 288230376151711914 << 28
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5120 := 536870911&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2017612633061987328 := 288230376151711914 << 28
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5120 := 536870911&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365410816 := 288230376151711914 << 28
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5120 := 536870911&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365410816 := 288230376151711914 << 28
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   14   1730  47671  59449  3131/2863/344    2013/265    21  107   54.18)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5120 := 9007199254740991&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365410816 := 288230376151711866 << 52
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5120 := 9007199254740991&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365410816 := 288230376151711866 << 52
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5120 := 9007199254740991&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365410816 := 288230376151711866 << 52
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&8192
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&8320
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&8320
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&8448
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9216
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9216
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9472
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9216
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9472
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9728
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9984
(smt.stats   15   1831  49570  62230  3296/2874/344    2301/275    21  107   54.37)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9984
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9984
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9984
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 1280 := 9007199254740991&9472
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 5888 := 9007199254740991&144115188075857664
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 17664 := 9007199254740991&144115188075857152
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 34048 := 9007199254740991&144115188075857152
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 66816 := 9007199254740991&144115188075857152
(smt.stats   16   1942  51215  66197  3474/3206/405    2662/310    22  114   54.47)
(smt.stats   17   2064  56357  80216  3476/3213/408    3078/516    24  124   54.57)
(sat.ddfw       1      1    27.639    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.790s mem=56780KiB load=0.98 rootload=0.98
(smt.stats   18   2198  63594  98660  3481/3216/408    3255/517    24  124   54.76)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16384 := 137438953471&16768
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16512 := 137438953471&16768
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16512 := 137438953471&16768
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16768 := 137438953471&16768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365422464 := 308496574474879214 << 36
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16768 := 137438953471&16768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365422464 := 308496574474879214 << 36
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16768 := 137438953471&16768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2594073385365422464 := 308496574474879214 << 36
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16768 := 137438953471&16768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 8935141660703080832 := 358036170375970458 << 36
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16768 := 137438953471&16768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 8935141660703080832 := 358036170375970458 << 36
(smt.stats   19   2345  68642 114690  3590/3317/420    3721/617    25  127   54.97)
(sat.ddfw       1      1   23.9908    220001      1078          6            1       23)
(smt.stats   20   2506  73086 123437  3719/3448/421    4162/626    25  127   55.16)
(smt.stats   21   2607  77270 138141  3722/3457/421    4443/717    26  131   55.16)
ramon: poll                 wall=3.000s usage=2.763s mem=57456KiB load=0.97 rootload=0.96
(smt.stats   22   2718  83604 151991  3725/3460/422    4605/823    27  134   55.25)
(sat.ddfw       1      1    21.625    290001      1421          7            1       30)
(smt.stats   23   2840  86998 158874  3910/3598/424    4868/889    28  141   55.45)
(smt.stats   24   2974  93010 175088  3956/3663/425    5125/891    28  141   55.61)
(smt.stats   25   3121 101799 197386  3958/3693/427    5364/967    29  149   55.61)
ramon: poll                 wall=4.000s usage=3.725s mem=58404KiB load=0.96 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282 107798 212935  4055/3695/427    5776/1014    30  160   55.99)
(sat.ddfw       1      1   19.4316    370001      1813          8            1       38)
(smt.stats   27   3459 111594 222015  4384/3810/427    6336/1029    30  160   56.09)
(smt.stats   28   3560 115018 233166  4419/4154/429    6505/1205    31  164   56.09)
ramon: poll                 wall=5.000s usage=4.724s mem=58464KiB load=1.00 rootload=1.00
(smt.stats   29   3671 119105 247895  4446/4177/429    6685/1205    31  164   56.18)
(sat.ddfw       1      1   17.7515    460001      2254          9            1       47)
(smt.stats   30   3793 126083 267309  4447/4178/429    6860/1260    32  170   56.18)
(smt.stats   31   3927 130990 285266  4524/4255/430    7183/1396    33  174   56.47)
(smt.stats   32   4074 137043 304374  4531/4258/430    7410/1399    33  174   56.47)
(smt.stats   33   4235 143351 326217  4544/4275/430    7629/1399    33  174   56.79)
ramon: poll                 wall=6.000s usage=5.724s mem=58852KiB load=1.00 rootload=0.99
(smt.stats   34   4412 153511 368785  4561/4289/430    8030/1399    33  174   56.79)
(smt.stats   35   4606 154196 378190  4571/4294/431    8366/1639    34  175   56.89)
(sat.ddfw       1      1   16.3265    560001      2745         10            1       57)
(smt.stats   36   4707 154342 385287  4571/4299/432    8468/1639    34  175   56.89)
(smt.stats   37   4818 157296 401180  4571/4299/432    8597/1731    35  176   56.89)
(smt.stats   38   4940 162567 420904  4663/4303/432    8885/1739    35  176   56.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 8)
(smt.stats   39   5074 169731 438385  4689/4417/432    9081/1739    35  176   56.98)
ramon: poll                 wall=7.000s usage=6.723s mem=59172KiB load=1.00 rootload=1.00
(smt.stats   40   5221 178812 484884  4693/4419/432    9267/1740    35  176   56.98)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 34 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 20514 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 20514 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 4130 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 4130 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 36898 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 36898 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 36898 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 36898 := 144115188075855859&299050
(smt.stats   41   5382 183362 497293  4905/4462/433    9570/1899    36  181   57.27)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 102434 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 102434 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 102434 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 102434 := 144115188075855859&299050
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 102434 := 144115188075855859&299050
(sat.ddfw       1      1   15.1037    670001      3284         11            1       68)
(smt.stats   42   5559 189263 521789  5056/4695/459   10095/1903    36  181   57.37)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 50 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 50 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 50 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 50 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 50 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 50 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 50 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 546 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 514 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2050 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16386 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16386 := 288230376151711718&65538
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16386 := 288230376151711718&49154
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16386 := 288230376151711718&49154
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16386 := 288230376151711718&49154
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16386 := 288230376151711718&49154
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 16386 := 288230376151711718&49154
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 32770 := 288230376151711718&49154
(smt.stats   43   5753 194755 537376  5455/5178/476   10702/2159    37  189   57.46)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 8322 := 288230376151711718&139266
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 40962 := 288230376151711718&139266
ramon: poll                 wall=8.000s usage=7.723s mem=59732KiB load=1.00 rootload=0.99
(smt.stats   44   5966 198893 556330  5749/5438/490   11245/2478    38  265   57.56)
(smt.stats   45   6067 203454 585435  5769/5499/490   11548/2478    38  265   57.56)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178 207384 605702  5818/5505/490   11836/2480    38  265   58.10)
(sat.ddfw       1      1   14.0367    790001      3872         12            1       80)
(smt.stats   47   6300 211927 621759  6022/5568/490   12272/2486    38  265   58.20)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 270400 := 137438953471&1786706395136
(smt.stats   48   6435 215380 636018  6135/5760/490   13538/2493    38  265   58.29)
ramon: poll                 wall=9.000s usage=8.722s mem=60232KiB load=1.00 rootload=1.00
(smt.stats   49   6582 222537 678035  6165/5893/492   13876/3577    39  268   58.29)
(smt.stats   50   6743 231634 731374  6169/5899/492   14146/3772    40  269   58.39)
(smt.stats   51   6920 236586 748436  6281/5902/492   14720/3778    40  269   58.49)
(sat.ddfw       1      1   13.1048    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.722s mem=60484KiB load=1.00 rootload=1.00
(smt.stats   52   7114 242107 767612  6308/6033/495   15283/4049    41  274   58.49)
(smt.stats   53   7327 249232 816101  6343/6073/498   15583/4175    42  298   58.49)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2050 := 288230376151711718&2062
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2054 := 288230376151711718&2062
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 1152921504606849038 := 432345564227567900 << 57
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2054 := 288230376151711718&2062
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 1152921504606849038 := 432345564227567900 << 57
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2054 := 288230376151711718&2062
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 1152921504606849038 := 432345564227567900 << 57
(smt.stats   54   7561 253330 842143  6582/6125/499   16045/4187    42  298   58.58)
(smt.stats   55   7662 255794 849888  6678/6317/504   16234/4255    43  324   58.58)
ramon: poll                 wall=11.000s usage=10.721s mem=60776KiB load=1.00 rootload=0.99
(smt.stats   56   7773 257568 860430  6825/6416/504   16377/4259    43  324   58.68)
(sat.ddfw       1      1   12.2893   1060001      5196         14            1      108)
(smt.stats   57   7895 259565 870071  7159/6888/506   16612/4267    43  324   58.87)
(smt.stats   58   8029 264388 904071  7199/6927/507   17224/4728    44  341   58.87)
ramon: poll                 wall=12.000s usage=11.784s mem=61472KiB load=1.06 rootload=1.07
(smt.stats   59   8176 268002 919302  7349/7078/509   17612/4734    44  341   58.97)
band: (band[58] (if (or #756 #757 #758 #759 #760 #761) 0 (if #762 1 #876)) (shl[64] (* 2 #114) (mod #902 64))) 2 := 144115188075855859&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #899 #901) 64)) 2 := 2 << 56
(smt.stats   60   8337 274663 949290  7392/7079/509   18220/4825    45  343   59.39)
(smt.stats   61   8514 278558 965023  7622/7255/515   19390/4828    45  343   59.67)
(sat.ddfw       1      1   11.7915   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.987s mem=62120KiB load=1.20 rootload=1.20
(smt.stats   62   8708 282197 974681  8061/7678/516   19764/5056    46  346   59.96)
ramon: poll                 wall=14.000s usage=13.986s mem=62316KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    11.098   1370001      6715         16            1      139)
(smt.stats   63   8921 288400 992804  8502/7797/516   20331/5059    46  346   60.14)
ramon: poll                 wall=15.000s usage=14.985s mem=62900KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9155 297766 1048895  8601/8288/516   21453/5060    46  346   60.24)
ramon: poll                 wall=16.011s usage=15.998s mem=63156KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   10.4783   1540001      7549         17            1      156)
(smt.stats   65   9412 307598 1082293  8888/8323/517   22426/5336    47  353   60.51)
(smt.stats   66   9513 311052 1096277  8988/8689/518   23372/5336    47  353   60.61)
ramon: poll                 wall=17.000s usage=16.985s mem=63212KiB load=1.00 rootload=0.99
(smt.stats   67   9624 314549 1110112  9076/8692/518   23565/5534    48  356   61.36)
(smt.stats   68   9746 317348 1128133  9291/8850/518   24004/5536    48  356   61.45)
ramon: poll                 wall=18.003s usage=17.988s mem=63464KiB load=1.00 rootload=1.01
(smt.stats   69   9880 318665 1134807  9606/9022/518   24321/5539    48  356   61.45)
(sat.ddfw       1      1   9.93268   1720001      8431         18            1      174)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 321199 1140231  9912/9399/518   24525/5539    48  356   61.55)
(smt.stats   71  10188 324425 1145661 10089/9630/518   24794/5539    48  356   61.64)
ramon: poll                 wall=19.005s usage=19.089s mem=63612KiB load=1.10 rootload=1.10
(smt.stats   72  10365 333852 1201731 10144/9820/518   25411/5539    48  356   61.64)
(smt.stats   73  10559 340408 1235009 10170/9865/518   26494/5539    48  356   61.83)
(sat.ddfw       1      1    9.5916   1910001      9362         19            1      193)
ramon: poll                 wall=20.007s usage=20.280s mem=64108KiB load=1.19 rootload=1.18
ramon: end                  Fri Nov  1 23:19:17 2024
ramon: root.execname        z3
ramon: root.utime           20.280s
ramon: root.stime           0.050s
ramon: group.total          20.343s
ramon: group.utime          20.291s
ramon: group.stime          0.052s
ramon: group.mempeak        64364KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.01
