ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:28:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42828 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4mTtAKNMm2Dj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2789943
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5018   1286  1274/1132/90      95/9     3   13   19.06)
(smt.stats    1    202   7038   5136  2133/1831/93     176/20     5   15   19.25)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 262143 := 262143&262143
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188076118015 := 18 << 18
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 262143 := 262143&262143
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188076118015 := 18 << 18
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 262143 := 262143&262143
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188076118015 := 18 << 18
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2 := 262143&19
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 3 := 262143&20
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 4 := 262143&20
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 15 := 262143&32
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 16 := 262143&32
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 32 := 262143&32
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 32 := 18 << 18
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 30 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 4 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 16 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 16 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 16 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 12 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 12 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 12 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 262143&4718592
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 18 := 18 << 18
(smt.stats    2    313   9208   7860  2228/2008/158     279/28     8   34   19.66)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 262143&4718592
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 17 := 18 << 18
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 262143&4718592
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 17 := 18 << 18
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 32 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 64 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 128 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 256 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 512 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1024 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2048 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 4096 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 16384 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 32768 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 65536 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131072 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 16384 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 65536 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 32768 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131072 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 32 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 64 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 128 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 256 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 512 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1024 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2048 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 4096 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1024 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 512 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 512 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 512 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 256 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 256 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1024 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1024 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2048 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 32 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 64 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 128 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 64 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 128 := 262143&4718592
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 32 := 262143&4718592
(smt.stats    3    414  10075  10566  2366/2102/252     388/39     9   44   20.26)
(smt.stats    4    525  10471  12503  2654/2410/293     467/75    12   75   20.46)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 1&131329
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188075987201 := 70918770525232 << 1
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 1&131329
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188075987201 := 70918770525232 << 1
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 1&131329
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188075987201 := 70918770525232 << 1
(smt.stats    5    647  15483  18652  2694/2436/300     592/81    15   81   20.66)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  20995  23314  2723/2470/306     708/81    15   81   20.66)
(smt.stats    7    859  26251  28109  2746/2474/307     817/90    17   83   20.75)
(smt.stats    8    981  28224  31392  2791/2539/308     944/91    17   83   20.75)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&140737488355328
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 140737488355328 := 140737488355333 << 1
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&140737488355328
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 140737488355328 := 140737488355333 << 1
(smt.stats    9   1115  30963  35616  2822/2546/311    1114/136    19   87   20.97)
(smt.stats   10   1216  31672  36354  2963/2626/311    1280/148    20   87   21.06)
(smt.stats   11   1327  32639  38503  3240/2786/311    1515/149    20   87   21.15)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  35156  43130  3369/3042/311    1775/149    20   87   21.27)
(smt.stats   13   1583  39498  49011  3483/3226/314    2010/255    21   91   21.27)
ramon: poll                 wall=1.002s usage=0.904s mem=22536KiB load=0.90 rootload=0.89
(smt.stats   14   1730  44334  63023  3510/3250/314    2269/255    21   91   21.37)
(smt.stats   15   1831  47548  70138  3512/3255/317    2383/342    22   94   21.37)
(smt.stats   16   1942  51471  76386  3512/3255/317    2496/352    23   99   21.37)
(smt.stats   17   2064  54948  82803  3533/3270/322    2813/358    24   99   21.37)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&281474977411424
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 2 := 140737488705712 << 1
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&281474977411424
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 284848 := 140737488705712 << 1
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&281474977411424
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 281474977411425 := 140737488705712 << 1
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&281474977411424
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 281474977411425 := 140737488705712 << 1
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&281474977411424
band: (band[57] (shl[57] (bv2int %0) (mod #109 57)) (if (= #631 56) 1 (if #633 3 #792))) 1 := 281474977411424&1
(smt.stats   18   2198  58414  89310  3615/3353/338    3034/442    25  110   21.58)
(smt.stats   19   2345  62671  99775  3653/3383/340    3227/472    26  114   21.58)
(smt.stats   20   2506  68173 111369  3659/3394/340    3436/483    27  116   21.58)
(smt.stats   21   2607  72705 121786  3662/3397/340    3613/483    27  116   21.69)
(smt.stats   22   2718  76502 130428  3764/3401/341    3839/530    28  120   21.69)
(smt.stats   23   2840  78545 136065  3948/3504/341    4293/532    28  120   21.87)
(smt.stats   24   2974  81119 140166  4119/3715/341    4513/534    28  120   21.97)
ramon: poll                 wall=2.002s usage=1.904s mem=23560KiB load=1.00 rootload=1.00
(smt.stats   25   3121  83256 147963  4330/3857/342    4853/767    29  121   22.21)
(smt.stats   26   3282  85583 156158  4619/4124/342    5125/771    29  121   22.20)
(smt.stats   27   3459  88282 170314  4820/4555/349    5936/1045    30  137   22.41)
(smt.stats   28   3560  91192 185553  4825/4562/359    6479/1434    31  162   22.41)
(smt.stats   29   3671  97582 220658  4837/4562/359    6690/1434    31  162   22.51)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793 102180 244000  4844/4581/360    6826/1529    32  165   22.51)
(smt.stats   31   3927 105187 249217  4847/4584/360    6986/1529    32  165   22.51)
(smt.stats   32   4074 109019 264210  4859/4592/367    7303/1708    33  181   22.66)
(smt.stats   33   4235 113327 286798  4923/4610/368    7902/1708    33  181   22.66)
ramon: poll                 wall=3.000s usage=2.900s mem=24072KiB load=1.00 rootload=0.99
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 7&140738596438016
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 140738596438016 := 70369281052803 << 3
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 7&140738596438016
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 140738596438016 := 70369281052803 << 3
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 7&140738596438016
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 140738596438016 := 70369281052803 << 3
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 7&140738566553600
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 140738566553600 := 70369281052689 << 3
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 7&140738566553600
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 140738566553600 := 70369281052689 << 3
(smt.stats   34   4412 117302 310369  5116/4694/368    8413/1870    34  188   22.95)
(smt.stats   35   4606 124027 340144  5129/4858/376    8819/1960    35  189   22.95)
(smt.stats   36   4707 127530 354796  5193/4865/376    8989/2100    36  198   22.95)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 3&281474981560322
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 3&281474981560322
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2 := 3&281474981560322
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 281474981560322 := 140737488356018 << 2
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2 := 3&281474981560322
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 281474981560322 := 140737488356018 << 2
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2 := 3&281474981560322
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 281474981560322 := 140737488355391 << 2
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2 := 3&281474981560322
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 281474981560322 := 140737488355391 << 2
(smt.stats   37   4818 130231 363417  5285/4930/376    9206/2101    36  198   23.05)
(smt.stats   38   4940 133938 381619  5475/5206/388    9675/2123    37  200   23.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 151)
(smt.stats   39   5074 138552 398385  5479/5210/388    9971/2123    37  200   23.17)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 425984 := 18014398509481983&524296
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 425984 := 18014398509481983&524296
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 425992 := 18014398509481983&524296
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 458760 := 18014398509481983&524296
(smt.stats   40   5221 144184 405289  5600/5326/394   10201/2376    38  204   23.17)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 524296 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 524296 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 524296 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 393224 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 393224 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 393224 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 393224 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 393224 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 133128 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 133128 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 133128 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 135176 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 147464 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 147464 := 18014398509481983&655368
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 655368 := 18014398509481983&655368
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 655368 := 720876 << 54
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 655368 := 18014398509481983&655368
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 655368 := 655383 << 54
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 655368 := 18014398509481983&655368
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 655368 := 655383 << 54
(smt.stats   41   5382 148560 425508  5900/5362/394   10486/2392    38  204   23.50)
(smt.stats   42   5559 157312 441655  5927/5657/437   10889/2466    39  223   23.50)
ramon: poll                 wall=4.000s usage=3.899s mem=25096KiB load=1.00 rootload=1.00
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131072 := 72057594037927935&131080
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131072 := 72057594037927935&131080
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 72057594037927935&131080
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 131080 := 671744 << 56
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 72057594037927935&131080
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 131080 := 671744 << 56
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 72057594037927935&131080
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 131080 := 671744 << 56
(smt.stats   43   5753 164094 460400  6092/5808/443   11195/2568    40  228   23.72)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 72057594037927935&131082
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131080 := 72057594037927935&131082
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131082 := 72057594037927935&131082
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 131082 := 72127962782105654 << 56
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131082 := 72057594037927935&131082
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 131082 := 72127962782105654 << 56
(smt.stats   44   5966 171769 480756  6134/5836/443   11482/2642    41  232   23.72)
(smt.stats   45   6067 174111 489505  6212/5866/443   11833/2644    41  232   23.91)
(smt.stats   46   6178 176754 499211  6406/5953/443   12254/2645    41  232   24.01)
(smt.stats   47   6300 179438 511626  6610/6164/443   12676/2651    41  232   24.20)
ramon: poll                 wall=5.000s usage=4.899s mem=25608KiB load=1.00 rootload=1.00
(smt.stats   48   6434 183425 532594  6782/6377/443   13145/2657    41  232   24.20)
(smt.stats   49   6581 189091 573567  6799/6519/443   13654/2658    41  232   24.47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 195604 600273  7042/6574/443   14040/2660    41  232   24.56)
(smt.stats   51   6919 203721 625533  7151/6781/443   14354/2661    41  232   24.65)
(smt.stats   52   7113 213251 657863  7173/6893/445   14804/3472    42  234   24.65)
ramon: poll                 wall=6.000s usage=5.899s mem=26376KiB load=1.00 rootload=1.00
(smt.stats   53   7326 222094 706538  7214/6906/448   15166/3632    44  257   24.75)
(smt.stats   54   7560 227074 719792  7542/6971/448   15886/3634    44  257   24.94)
(smt.stats   55   7661 229575 741600  7569/7273/448   16419/3634    44  257   24.94)
(smt.stats   56   7772 234575 758234  7576/7296/448   16693/3634    44  257   25.05)
ramon: poll                 wall=7.000s usage=6.899s mem=26632KiB load=1.00 rootload=1.00
(smt.stats   57   7894 238078 767349  7653/7297/448   16929/3636    44  257   25.24)
(smt.stats   58   8028 240905 775959  7906/7545/448   17240/3636    44  257   25.15)
(smt.stats   59   8175 246222 810779  7911/7631/448   17733/3636    44  257   25.24)
(smt.stats   60   8336 256112 862574  7912/7632/448   18280/3636    44  257   25.37)
(smt.stats   61   8513 262780 885052  7961/7638/448   18582/3636    44  257   25.37)
ramon: poll                 wall=8.002s usage=7.903s mem=26888KiB load=1.00 rootload=1.00
(smt.stats   62   8707 266882 896743  7992/7691/450   18920/4153    45  275   25.46)
(smt.stats   63   8920 269692 908590  8181/7721/451   19269/4157    45  275   25.65)
(smt.stats   64   9154 278472 997887  8485/8201/451   19765/4157    45  275   25.65)
ramon: poll                 wall=9.000s usage=8.898s mem=27400KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9411 287440 1040505  8674/8215/451   20631/4281    46  295   25.75)
(smt.stats   66   9512 289756 1052883  8708/8428/451   21075/4281    46  295   25.75)
(smt.stats   67   9623 295053 1072380  8715/8435/455   21312/4716    47  309   25.86)
(smt.stats   68   9745 300504 1089096  8726/8446/455   21638/4716    47  309   25.86)
(smt.stats   69   9879 308945 1114782  8736/8456/455   21805/4716    47  309   25.86)
(smt.delete-inactive-clauses  :num-deleted-clauses 570)
(smt.stats   70  10026 316101 1139088  8739/8459/455   21388/4885    48  312   25.96)
(smt.stats   71  10187 326216 1166345  8739/8459/455   21570/4885    48  312   25.87)
ramon: poll                 wall=10.000s usage=9.898s mem=27400KiB load=1.00 rootload=1.00
(smt.stats   72  10364 334494 1206557  8768/8462/455   21754/4887    48  312   25.87)
(smt.stats   73  10558 342628 1229569  8775/8494/455   21977/4888    48  312   25.96)
(smt.stats   74  10771 353427 1256540  8861/8524/455   22205/4889    48  312   25.96)
(smt.stats   75  11005 364711 1299328  9004/8724/459   22557/4990    49  314   26.15)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131328 := 134217727&106116471103684608
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131200 := 134217727&106116471148773376
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131136 := 134217727&106116471148773376
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131136 := 134217727&106116471135141888
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131136 := 134217727&106116471135141888
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131136 := 134217727&106116471135141888
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131072 := 134217727&106116471135141888
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 134217727&106116471135141888
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 134217727&106116471224270848
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 134217727&106116471224270848
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 134217727&106116471224270848
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 134217727&106116471224270848
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8192 := 134217727&106116471224270848
ramon: poll                 wall=11.014s usage=10.914s mem=27912KiB load=1.00 rootload=1.01
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 8 := 134217727&106116471223222272
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 2 := 134217727&106116471223222272
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 134217727&106116471223222272
(smt.stats   76  11262 374420 1334457  9237/8729/459   22952/5000    49  314   26.36)
(smt.stats   77  11544 389245 1436090  9446/9099/475   23571/5034    51  360   26.46)
(smt.stats   78  11645 393413 1457144  9462/9180/476   23818/5062    52  361   26.46)
(smt.stats   79  11756 398989 1502243  9466/9184/476   24070/5062    52  361   26.55)
ramon: poll                 wall=12.000s usage=11.898s mem=28424KiB load=1.00 rootload=0.99
(smt.stats   80  11878 403449 1519287  9640/9184/476   24286/5067    52  361   26.65)
(smt.stats   81  12012 408079 1545664  9738/9392/476   24626/5069    52  361   26.65)
(smt.stats   82  12159 412796 1561847  9960/9460/476   25035/5070    52  361   26.65)
(smt.stats   83  12320 418316 1635180 10486/9786/476   25446/5073    52  361   26.88)
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 135168 := 1048575&6750212
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 135168 := 1048575&6750212
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 135168 := 1048575&6750212
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 135168 := 1048575&6750212
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 135172 := 1048575&6750212
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131076 := 1048575&6750212
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 131076 := 1048575&6750212
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 458756 := 1048575&6750212
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188082606084 := 141287244169289 << 20
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 458756 := 1048575&6750212
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188082606084 := 141287244169289 << 20
band: (band[57] (if (or #808 #809 #810 #811 #812 #813 #814 #815) 0 (if #816 1 #926)) (shl[64] (bv2int %0) (mod #955 64))) 458756 := 1048575&6750212
shl: (shl[64] (bv2int %0) (mod (+ #109 #954) 64)) 144115188082606084 := 141287244169289 << 20
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12497 424129 1665441 10653/10218/476   25920/5081    52  361   26.88)
ramon: poll                 wall=13.000s usage=12.898s mem=28760KiB load=1.00 rootload=1.00
(smt.stats   85  12691 438430 1784161 10665/10378/491   26610/5448    53  364   27.20)
(smt.stats   86  12904 444772 1829951 10985/10397/491   27222/5719    54  364   27.30)
(smt.stats   87  13138 452610 1912995 11004/10717/491   27738/5719    54  364   27.53)
ramon: poll                 wall=14.000s usage=13.898s mem=29264KiB load=1.00 rootload=1.00
(smt.stats   88  13395 464858 1937814 11138/10719/491   28353/5726    54  364   27.62)
(smt.stats   89  13677 472829 1989444 11584/10930/491   29454/5736    54  364   27.82)
ramon: poll                 wall=15.000s usage=14.897s mem=29776KiB load=1.00 rootload=1.00
(smt.stats   90  13987 482269 2043404 12086/11333/491   30167/5741    54  364   28.01)
(smt.stats   91  14088 485663 2062558 12129/11803/491   30659/5741    54  364   28.11)
(smt.stats   92  14199 489336 2079492 12288/11845/491   31308/5741    54  364   28.11)
(smt.stats   93  14321 495282 2120308 12330/12033/491   31925/5741    54  364   28.23)
ramon: poll                 wall=16.000s usage=15.897s mem=30032KiB load=1.00 rootload=1.00
(smt.stats   94  14455 499030 2137095 12528/12055/491   32237/5746    54  364   28.34)
(smt.stats   95  14602 505332 2186508 12557/12270/491   32592/5746    54  364   28.44)
(smt.stats   96  14763 514324 2278473 12640/12272/492   32867/6695    55  368   28.54)
ramon: poll                 wall=17.000s usage=16.897s mem=30288KiB load=1.00 rootload=1.00
(smt.stats   97  14940 520012 2324726 12838/12417/492   33330/6697    55  368   28.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 493)
(smt.stats   98  15134 528441 2386017 12941/12559/492   33219/6699    55  368   28.54)
(smt.stats   99  15347 533575 2456118 13416/12933/493   33805/6849    56  373   28.73)
ramon: poll                 wall=18.000s usage=17.897s mem=30288KiB load=1.00 rootload=1.00
(smt.stats  100  15581 542639 2559661 13435/13148/495   35250/6972    57  387   28.83)
(smt.stats  101  15838 552760 2627884 13734/13154/496   35980/6987    57  387   28.92)
(smt.stats  102  16120 564230 2723550 13900/13613/497   36850/7656    58  394   29.02)
ramon: poll                 wall=19.002s usage=18.901s mem=30800KiB load=1.00 rootload=1.01
(smt.stats  103  16430 580625 2924361 13920/13633/497   37614/7934    59  399   29.02)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  104  16770 600765 3026258 13928/13641/497   38405/7934    59  399   29.13)
(smt.stats  105  16871 607474 3072997 13930/13643/497   38638/7934    59  399   29.13)
(smt.stats  106  16982 611375 3108408 13936/13649/497   38817/7934    59  399   29.13)
(smt.stats  107  17104 616251 3160894 13945/13658/497   39569/7934    59  399   29.22)
ramon: poll                 wall=20.000s usage=19.897s mem=31056KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 14:28:33 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.967s
ramon: group.utime          19.947s
ramon: group.stime          0.020s
ramon: group.mempeak        31316KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
