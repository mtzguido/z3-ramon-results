ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:20:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27045 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/z7WIUt4PHBkd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             969342
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    101.01     10000        49          0            1        2)
(sat.ddfw       1      1   48.0817     20001        98          1            1        3)
(smt.stats    0    101   6250    616  1297/1148/112      93/6     8   17   52.07)
(smt.stats    1    202   9253   1408  1991/1782/117     191/12    11   20   52.26)
(smt.stats    2    313  11810   3376  2105/1903/117     302/11    12   23   52.36)
(sat.ddfw       1      1   46.1894     40001       196          2            1        5)
(smt.stats    3    414  13091   5857  2600/2371/121     410/20    13   24   52.55)
(smt.stats    4    525  13920   7975  2747/2375/124     532/33    13   24   52.65)
(smt.stats    5    647  14613  12727  2755/2511/126     644/40    15   33   52.65)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18005  13960  2755/2511/126     749/40    15   33   52.76)
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963977
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963977
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963978
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963980
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963975
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963976
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 4575657221408423944 := 0 << 54
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963975
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963976
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 4575657221408423944 := 0 << 54
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&1
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&136
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963967
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 4539628424389459968 := 254 << 54
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #111))) 36028797018963967 := 125 << 55
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #111))) 36028797018963967 := 125 << 55
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 1 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 2 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963957 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 36028797018963956 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #111))) 36028797018963967 := 639 << 55
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 36028797018963956 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 36028797018963952 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 36028797018963936 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963953 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963958 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963956 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963958 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963954 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963954 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963954 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963956 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963956 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963956 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963944 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 36028797018963952 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 36028797018963952 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 36028797018963952 := 36028797018963959&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 36028797018963959&36028797018963968
(sat.ddfw       1      1   38.7597     70001       343          3            1        8)
band: (band[56] (if (= #115 55) 1 (if #630 3 #787)) (shl[56] (bv2int %0) (+ 56 #790))) 36028797018963952 := 36028797018963959&36028797018963968
(smt.stats    7    859  19259  16357  2870/2620/235     869/66    17   60   53.15)
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 72057594037927919&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 72057594037927919&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 72057594037927919&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963952 := 72057594037927919&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 36028797018963952 := 72057594037927919&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&36028797018963960
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&9
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&16
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&9
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&16
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 4683743612465315864 := 2310 << 55
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&9
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&9
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&9
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&9
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 8 := 72057594037927919&12
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 12 := 72057594037927919&13
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 12 := 72057594037927919&13
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 12 := 72057594037927919&13
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 12 := 72057594037927919&13
(smt.stats    8    981  21339  19278  2923/2672/282    1005/79    18   77   53.35)
ramon: poll                 wall=1.000s usage=0.939s mem=55516KiB load=0.94 rootload=0.93
(smt.stats    9   1115  25238  23644  2997/2701/282    1158/83    18   77   53.47)
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 72057594037927919&36028797018963968
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 0 := 72057594037927919&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 16 := 36028797018964480 << 55
(smt.stats   10   1216  26640  26583  3091/2777/283    1282/111    19   80   53.57)
(smt.stats   11   1327  28420  31819  3115/2852/289    1413/156    21   86   53.67)
(sat.ddfw       1      1   32.6264    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30860  35892  3144/2875/290    1545/157    21   86   53.96)
(smt.stats   13   1583  34174  42489  3209/2897/299    1690/186    23   99   54.05)
(smt.stats   14   1730  39681  49490  3266/2989/301    1834/199    24  104   54.05)
(sat.ddfw       1      1   27.9793    160000       784          5            1       17)
(smt.stats   15   1831  43212  55603  3371/3032/301    1974/206    25  105   54.19)
ramon: poll                 wall=2.000s usage=1.939s mem=56280KiB load=1.00 rootload=1.00
(smt.stats   16   1942  44445  57544  3464/3124/301    2106/207    25  105   54.19)
(smt.stats   17   2064  46793  61014  3468/3195/302    2256/251    26  107   54.29)
(smt.stats   18   2198  49698  66394  3482/3200/302    2391/251    26  107   54.29)
(smt.stats   19   2345  52455  73272  3525/3215/302    2547/252    26  107   54.29)
(smt.stats   20   2506  54870  78738  3532/3259/302    2729/252    26  107   54.39)
(sat.ddfw       1      1   24.4006    220001      1078          6            1       23)
(smt.stats   21   2607  58272  87373  3536/3263/302    2871/252    26  107   54.39)
(smt.stats   22   2718  63729 100903  3540/3263/303    2980/317    27  116   54.55)
(smt.stats   23   2840  66717 105975  3572/3270/303    3116/322    27  116   54.65)
ramon: poll                 wall=3.000s usage=2.941s mem=56700KiB load=1.00 rootload=1.00
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 4 := 17179869183&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 4755801206503243780 := 72057594037936640 << 33
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 4 := 17179869183&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 4755801206503243780 := 72057594037936640 << 33
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 4 := 17179869183&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 4755801206503243780 := 72057594037936640 << 33
(smt.stats   24   2974  68124 111296  3637/3351/304    3255/331    28  118   54.77)
(sat.ddfw       1      1   21.6183    290001      1421          7            1       30)
(smt.stats   25   3121  71943 120007  3704/3385/311    3405/331    28  118   54.77)
(smt.stats   26   3282  77670 130441  3714/3438/311    3564/342    29  127   54.77)
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 4 := 33554431&6
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 6 := 33554431&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 72057594037927942 := 36028797027353092 << 24
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 6 := 33554431&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 72057594037927942 := 36028797027353092 << 24
(smt.stats   27   3459  80490 134857  3981/3445/311    3776/350    29  127   54.96)
ramon: poll                 wall=4.000s usage=3.942s mem=57256KiB load=1.00 rootload=0.99
(smt.stats   28   3560  82065 138648  4086/3793/319    3919/371    30  128   54.96)
(sat.ddfw       1      1   19.3752    370001      1813          8            1       38)
(smt.stats   29   3671  84441 148370  4166/3832/319    4034/373    30  128   54.96)
(smt.stats   30   3793  88527 157236  4177/3893/319    4181/438    31  136   55.08)
(smt.stats   31   3927  92643 167750  4214/3937/320    4329/443    32  143   55.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  96019 177872  4259/3950/320    4505/444    32  143   55.34)
ramon: poll                 wall=5.000s usage=4.943s mem=57380KiB load=1.00 rootload=1.01
(smt.stats   33   4235 102768 192149  4285/3996/320    4680/444    32  143   55.34)
(sat.ddfw       1      1   17.5029    460001      2254          9            1       47)
(smt.stats   34   4412 108729 208797  4317/4030/320    4889/445    32  143   55.34)
(smt.stats   35   4606 117461 223438  4337/4052/320    5094/445    32  143   55.59)
(smt.stats   36   4707 121798 232799  4348/4063/320    5191/445    32  143   55.59)
(smt.stats   37   4818 127390 244701  4354/4069/321    5304/497    33  145   55.59)
(smt.stats   38   4940 133674 257899  4368/4081/321    5442/497    33  145   55.59)
(smt.delete-inactive-clauses  :num-deleted-clauses 50)
(smt.stats   39   5074 139146 270402  4370/4083/321    5544/497    33  145   55.93)
ramon: poll                 wall=6.000s usage=6.045s mem=57900KiB load=1.10 rootload=1.10
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 5 := 562949953421311&36028797018963972
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 4 := 562949953421311&36028797018963972
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 108086391056891908 := 2147483138 << 48
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 4 := 562949953421311&36028797018963972
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 108086391056891908 := 2147483138 << 48
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 4 := 562949953421311&36028797018963972
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 108086391056891908 := 2147483138 << 48
(sat.ddfw       1      1   16.3106    560001      2745         10            1       57)
(smt.stats   40   5221 142420 278303  4451/4089/322    5741/516    34  152   56.05)
ramon: poll                 wall=7.000s usage=7.045s mem=58152KiB load=1.00 rootload=1.00
(smt.stats   41   5382 144276 285941  4877/4477/329    5913/522    34  152   56.15)
(smt.stats   42   5559 147975 295587  5019/4723/335    6161/556    35  156   56.15)
(sat.ddfw       1      1   14.9315    670001      3284         11            1       68)
(smt.stats   43   5753 152357 307447  5078/4741/335    6376/557    35  156   56.27)
(smt.stats   44   5966 154346 316364  5172/4860/336    6604/613    36  199   56.27)
(smt.stats   45   6067 157478 324089  5185/4892/336    6788/613    36  199   56.36)
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 66 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 66 := 562949953421311&72057594037927922
ramon: poll                 wall=8.000s usage=8.047s mem=58508KiB load=1.00 rootload=1.00
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 66 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 82 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 114 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 82 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 82 := 562949953421311&72057594037927922
(smt.stats   46   6178 163417 335945  5254/4897/336    6922/678    37  199   56.36)
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 50 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 50 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 50 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 50 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 50 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 50 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 114 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 114 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 242 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 242 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 114 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 114 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 114 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 370 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 498 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 498 := 562949953421311&72057594037927922
band: (band[56] (if (= #407 63) 1 (if #607 3 #866)) (shl[64] (* 2 #389) (mod #881 64))) 562949953421298 := 562949953421311&72057594037927922
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #873 #877) 64)) 18446744073709551602 := 2199023255172 << 48
(smt.stats   47   6300 165736 344320  5347/5019/393    7111/689    38  204   56.75)
(smt.stats   48   6434 168451 351503  5440/5147/396    7339/774    39  212   56.85)
(sat.ddfw       1      1   13.7773    790001      3872         12            1       80)
(smt.stats   49   6581 173147 367053  5520/5155/397    7583/777    39  212   56.94)
ramon: poll                 wall=9.000s usage=9.048s mem=59104KiB load=1.00 rootload=1.00
(smt.stats   50   6742 177427 374979  5730/5238/397    7807/813    40  230   56.94)
ramon: poll                 wall=10.000s usage=10.049s mem=59204KiB load=1.00 rootload=1.00
(smt.stats   51   6919 181810 390763  5823/5459/397    8042/814    40  230   57.04)
(sat.ddfw       1      1   12.7852    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 186204 403527  5839/5544/398    8345/860    41  234   57.13)
ramon: poll                 wall=11.000s usage=11.051s mem=59476KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.9444   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=12.052s mem=59872KiB load=1.00 rootload=1.01
(smt.stats   53   7326 191826 421127  6077/5555/398    8685/867    41  234   57.33)
ramon: poll                 wall=13.001s usage=13.055s mem=59928KiB load=1.00 rootload=1.00
(smt.stats   54   7560 196486 436495  6282/5841/398    9121/868    41  234   57.52)
(sat.ddfw       1      1   11.1965   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=14.055s mem=59964KiB load=1.00 rootload=1.00
(smt.stats   55   7661 200691 448738  6399/5995/398    9253/870    41  234   57.52)
(smt.stats   56   7772 204964 462254  6549/6162/398    9428/871    41  234   57.52)
ramon: poll                 wall=15.000s usage=15.053s mem=59992KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5374   1370001      6715         16            1      139)
(smt.stats   57   7894 208357 472651  6705/6265/399    9597/1016    42  236   57.95)
ramon: poll                 wall=16.000s usage=16.056s mem=60076KiB load=1.00 rootload=1.00
(smt.stats   58   8028 211201 481689  6749/6456/399    9895/1016    42  236   58.05)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8175 219118 509557  6787/6458/400   10085/1060    43  239   58.05)
ramon: poll                 wall=17.005s usage=17.065s mem=60132KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.96016   1540001      7549         17            1      156)
ramon: poll                 wall=18.001s usage=18.060s mem=60180KiB load=1.00 rootload=0.99
(smt.stats   60   8336 222915 525271  7072/6501/400   10366/1077    43  239   58.24)
ramon: poll                 wall=19.000s usage=19.055s mem=60320KiB load=1.00 rootload=1.00
(smt.stats   61   8513 227426 547952  7227/6909/401   11042/1161    44  248   58.24)
(sat.ddfw       1      1    9.4305   1720001      8431         18            1      174)
(smt.stats   62   8707 232037 562133  7415/6946/401   11685/1169    44  248   58.34)
ramon: poll                 wall=20.000s usage=20.057s mem=60552KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:20:33 2024
ramon: root.execname        z3
ramon: root.utime           20.100s
ramon: root.stime           0.010s
ramon: group.total          20.120s
ramon: group.utime          20.108s
ramon: group.stime          0.012s
ramon: group.mempeak        60816KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
