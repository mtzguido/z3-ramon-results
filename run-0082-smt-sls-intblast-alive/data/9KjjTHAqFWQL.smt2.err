ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:49:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29109 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9KjjTHAqFWQL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             665633
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   1965    419  1200/1085/111      91/4     6   17   51.95)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1 := 2 << 1
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1 := 2 << 1
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&0
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 562949953421311 := 562949953421312 << 1
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1 := 1&1125899906842622
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&0
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1 := 562949953421312 << 1
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&2
band: (band[50] (if (= #113 49) 1 (if #610 3 #749)) (shl[50] (bv2int %0) (+ 50 #752))) 1 := 1&2
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1 := 1&2
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1 := 1&2
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&2
band: (band[50] (if (= #113 49) 1 (if #610 3 #749)) (shl[50] (bv2int %0) (+ 50 #752))) 1 := 1&2
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1 := 1&2
(smt.stats    1    202   3380   1538  1416/1275/129     176/4     9   25   52.15)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&2
band: (band[50] (if (= #113 49) 1 (if #610 3 #749)) (shl[50] (bv2int %0) (+ 50 #752))) 1 := 1&2
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&2
band: (band[50] (if (= #113 49) 1 (if #610 3 #749)) (shl[50] (bv2int %0) (+ 50 #752))) 1 := 1&2
(smt.stats    2    313   4652   3379  1819/1632/138     274/6    11   29   52.34)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 0 := 1&2
band: (band[50] (if (= #113 49) 1 (if #610 3 #749)) (shl[50] (bv2int %0) (+ 50 #752))) 1 := 1&2
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   89.2857     10000        49          0            1        2)
(smt.stats    3    414   5946   5359  2371/2136/151     358/26    13   42   52.44)
(sat.ddfw       1      1   45.8761     20001        98          1            1        3)
(smt.stats    4    525   6495   6152  2513/2270/152     487/35    13   42   52.83)
(sat.ddfw       1      1   46.5116     40001       196          2            1        5)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&3
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&3
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 2251799813685250 := 1125899906842624 << 39
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 2251799813685250 := 1125899906842624 << 39
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 2251799813685250 := 1125899906842624 << 39
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&4100
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 4 := 1099511627775&4100
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 4 := 1099511627775&8192
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8 := 1099511627775&8192
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 16 := 1099511627775&8192
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 32 := 1099511627775&8192
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 64 := 1099511627775&8192
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 128 := 1099511627775&8192
(smt.stats    5    647   9428   8722  2569/2276/152     615/40    13   42   53.04)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&4098
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&4094
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&4094
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&4088
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8 := 1099511627775&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 2251799813685256 := 1125899906842626 << 39
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 6 := 1099511627775&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 2251799813685254 := 1125899906842628 << 39
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&6
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&4
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 4 := 1099511627775&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 2251799813685252 := 1125899906842626 << 39
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 4 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 16 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 32 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 64 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 32 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 32 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 64 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 128 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 256 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 512 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1024 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 256 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 512 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2048 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 4096 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8192 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 16384 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 32768 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 65536 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 131072 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 262144 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 524288 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1048576 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2097152 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 4194304 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 12582912 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8388608 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 16777216 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 33554432 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 67108864 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 67108864 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 134217728 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 268435456 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 536870912 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1073741824 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2147483648 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 4294967296 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8589934592 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 17179869184 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 34359738368 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 68719476736 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 137438953472 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 274877906944 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 549755813888 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1073741824 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1073741824 := 1099511627775&1099511627776
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 1073741824 := 1099511627775&1099511627776
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  10314   9863  2786/2498/354     875/73    14   47   54.07)
(sat.ddfw       1      1   40.2685     70001       343          3            1        8)
(smt.stats    7    859  13990  12700  2822/2518/359     990/73    14   47   54.16)
ramon: poll                 wall=1.000s usage=1.004s mem=56432KiB load=1.00 rootload=1.00
(smt.stats    8    981  18199  18652  2838/2593/369    1264/362    16   96   54.26)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&1073741824
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 54525952 := 4294967295&109027328
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 54525952 := 4294967295&100663296
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 54525952 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&100663296
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&109023224
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&109019136
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 54525952 := 4294967295&100663296
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 54525952 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 37748736 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&100663296
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&109023224
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&109019136
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&108986368
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 20971520 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 12582912 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 12582912 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 12582912 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 12582912 := 4294967295&109023224
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 12582912 := 4294967295&109019136
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 12582912 := 4294967295&108986368
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 12582912 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 71303168 := 4294967295&109019136
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 71303168 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 71303168 := 4294967295&104857600
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 104857600 := 4294967295&104857600
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18443366374093881344 := 100661250 << 31
(smt.stats    9   1115  23623  25527  2944/2600/371    1480/379    17  127   54.45)
(sat.ddfw       1      1   34.5423    110001       539          4            1       12)
(smt.stats   10   1216  24679  27376  3108/2710/441    1688/437    18  142   54.74)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 171966464 := 4294967295&813686784
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 173023232 := 4294967295&813686784
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 173023232 := 4294967295&813686784
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 173023232 := 4294967295&813686784
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 173023232 := 4294967295&813686784
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 173039616 := 4294967295&813686784
(smt.stats   11   1327  27701  33123  3246/2890/441    1880/443    18  142   54.83)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33475  42832  3296/3050/453    2342/572    20  145   55.12)
(sat.ddfw       1      1    29.673    160000       784          5            1       17)
(smt.stats   13   1583  40615  59594  3407/3115/455    2844/574    20  145   55.40)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&550191996944
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561473
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561473
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561473
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561475
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561477
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561479
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561477
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561477
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561485
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561487
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561485
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561479
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561487
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561503
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561479
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561485
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561487
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561567
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561599
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561599
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561663
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561727
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923561983
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923562495
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923563519
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 8992587775 := 17179869183&549923565567
ramon: poll                 wall=2.002s usage=2.006s mem=57748KiB load=1.00 rootload=1.00
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923565887
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923565951
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923566079
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923565887
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923565887
(smt.stats   14   1730  44846  75552  3611/3155/455    3222/1045    21  145   55.59)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923565887
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923565951
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923566079
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923566591
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923565951
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923566079
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923566335
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923566591
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923567615
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&549923569663
(smt.stats   15   1831  46248  81629  3802/3368/485    3438/1125    22  151   55.78)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&545964150911
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&545964150911
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&545964151039
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&545964151167
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 13153337343 := 17179869183&545964151295
(sat.ddfw       1      1   26.0082    220001      1078          6            1       23)
(smt.stats   16   1942  48295  91419  4220/3692/495    3711/1154    23  153   55.97)
(smt.stats   17   2064  51184 103705  4344/4076/500    4972/1721    25  164   56.07)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  56423 113667  4391/4086/500    5214/1721    25  164   56.16)
ramon: poll                 wall=3.000s usage=3.002s mem=58536KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   22.9961    290001      1421          7            1       30)
(smt.stats   19   2345  62925 147155  4470/4171/505    5763/2173    26  171   56.41)
(smt.stats   20   2506  72002 190462  4528/4257/506    6149/2484    28  191   56.41)
(smt.stats   21   2607  76821 214709  4548/4277/506    6708/2484    28  191   56.50)
(sat.ddfw       1      1   20.6079    370001      1813          8            1       38)
(smt.stats   22   2718  82626 234725  4571/4285/506    6867/2487    28  191   56.50)
ramon: poll                 wall=4.000s usage=4.002s mem=58768KiB load=1.00 rootload=1.00
(smt.stats   23   2840  85729 259519  4581/4307/506    7146/2487    28  191   56.50)
(smt.stats   24   2974  89578 278775  4599/4333/510    7351/2892    29  192   56.62)
(smt.stats   25   3121  91530 285708  4746/4333/510    7686/2899    29  192   56.72)
(smt.stats   26   3282  93383 296106  5253/4607/510    8030/2920    30  204   57.04)
(sat.ddfw       1      1   18.6645    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.002s mem=59352KiB load=1.00 rootload=1.00
(smt.stats   27   3459  96221 315489  5601/5335/515    8812/2957    31  219   57.23)
(smt.stats   28   3560  99882 351399  5603/5337/515    9446/2957    31  219   57.23)
(smt.stats   29   3671 106426 412656  5621/5355/516    9960/3329    32  265   57.33)
(smt.stats   30   3794 111254 462045  5704/5438/519   10440/3984    34  273   57.33)
(sat.ddfw       1      1   17.0416    560001      2745         10            1       57)
(smt.stats   31   3928 116123 506378  5721/5442/520   11475/3985    34  273   57.42)
ramon: poll                 wall=6.000s usage=6.001s mem=59744KiB load=1.00 rootload=1.00
(smt.stats   32   4075 122040 570936  5730/5460/521   12243/5020    36  294   57.65)
(smt.stats   33   4236 130297 638055  5731/5465/527   13043/5496    37  343   57.75)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 3&1125899906842622
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18445618173802708990 := 1124800395214846 << 1
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 3&1125899906842622
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18445618173802708990 := 1124800395214846 << 1
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 3&1125899906842622
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18445618173802708990 := 1124800395214842 << 1
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 2 := 3&1125899906842622
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18445618173802708990 := 1124800395214842 << 1
ramon: poll                 wall=7.000s usage=7.001s mem=60256KiB load=1.00 rootload=1.00
(smt.stats   34   4413 134751 667053  5872/5512/538   13322/5502    38  362   57.94)
(sat.ddfw       1      1   15.6762    670001      3284         11            1       68)
(smt.stats   35   4607 140434 684020  6127/5675/542   13880/5506    38  362   58.35)
ramon: poll                 wall=8.002s usage=8.002s mem=60652KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.5138    790001      3872         12            1       80)
(smt.stats   36   4708 142380 694153  6345/5917/542   14179/5595    39  382   58.55)
(smt.stats   37   4819 145504 709013  6665/6153/542   14528/5603    39  382   58.74)
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 271187967 := 562949953421311&271187967
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18443366374260211711 := 1125899973947394 << 48
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 271187967 := 562949953421311&271187967
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18443366374260211711 := 1125899973947394 << 48
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 271187967 := 562949953421311&271187967
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18443366374260211711 := 1125899973947394 << 48
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 271187967 := 562949953421311&271187967
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18443366374260211711 := 1125899940390914 << 48
band: (band[50] (if (= #375 63) 1 (if #587 3 #834)) (shl[64] (* 2 #357) (mod #849 64))) 271187967 := 562949953421311&271187967
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #841 #845) 64)) 18443366374260211711 := 1125899940397054 << 48
ramon: poll                 wall=9.000s usage=9.044s mem=60936KiB load=1.04 rootload=1.04
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 148267 725905  6745/6475/552   14736/5758    40  395   58.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 125)
(smt.stats   39   5075 153785 755152  6831/6483/554   15227/5760    40  395   58.74)
(sat.ddfw       1      1   13.6483    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=10.043s mem=61068KiB load=1.00 rootload=1.00
(smt.stats   40   5222 159697 791207  7095/6724/557   15594/6034    41  430   58.83)
(smt.stats   41   5383 164866 851321  7291/7017/559   16080/6213    43  443   58.93)
ramon: poll                 wall=11.000s usage=11.045s mem=61208KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7574   1060001      5196         14            1      108)
(smt.stats   42   5560 169806 881763  7403/7033/560   16762/6214    43  443   58.93)
(smt.stats   43   5754 175961 924133  7428/7158/566   16997/6594    45  485   59.24)
(smt.stats   44   5967 181019 976299  7595/7289/568   17614/6618    46  503   59.43)
ramon: poll                 wall=12.000s usage=12.044s mem=61820KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   45   6068 186764 1027509  7597/7291/568   18148/6618    46  503   59.43)
(smt.stats   46   6179 192848 1065974  7597/7291/569   19686/6982    47  505   59.65)
(smt.stats   47   6301 198206 1095936  7606/7291/571   20388/7133    48  519   59.76)
(sat.ddfw       1      1   11.9703   1210001      5931         15            1      123)
(smt.stats   48   6435 204436 1125686  7698/7317/571   20773/7138    48  519   59.85)
ramon: poll                 wall=13.002s usage=13.047s mem=62704KiB load=1.00 rootload=1.00
(smt.stats   49   6582 209873 1159455  7738/7420/571   21026/7316    49  541   60.26)
(smt.stats   50   6743 213418 1170144  7835/7442/573   21301/7320    49  541   60.35)
(smt.stats   51   6920 216676 1220180  7857/7551/574   21601/7381    50  573   60.45)
ramon: poll                 wall=14.000s usage=14.043s mem=62760KiB load=1.00 rootload=1.00
(smt.stats   52   7114 222590 1247055  7988/7557/574   22433/7383    50  573   60.55)
(sat.ddfw       1      1   11.2732   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=15.038s mem=63120KiB load=0.99 rootload=0.99
(smt.stats   53   7327 229174 1305472  8411/7714/574   23327/7618    51  589   60.74)
(smt.stats   54   7561 236147 1342988  8607/8154/574   24248/7621    51  589   60.93)
ramon: poll                 wall=16.000s usage=16.038s mem=63472KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.6403   1540001      7549         17            1      156)
(smt.stats   55   7662 240491 1376783  8802/8338/574   24527/7623    51  589   60.93)
(smt.stats   56   7773 247381 1423294  8815/8507/574   25933/7623    51  589   61.23)
ramon: poll                 wall=17.000s usage=17.037s mem=63520KiB load=1.00 rootload=1.00
(smt.stats   57   7895 257593 1455568  8836/8525/576   26540/8341    52  594   61.35)
(smt.stats   58   8029 262652 1478719  8847/8536/577   27349/8583    53  595   61.50)
ramon: poll                 wall=18.000s usage=17.972s mem=63676KiB load=0.93 rootload=0.94
(sat.ddfw       1      1   10.0262   1720001      8431         18            1      174)
(smt.stats   59   8176 274397 1590871  8860/8549/579   27987/8827    54  603   61.72)
ramon: poll                 wall=19.000s usage=18.885s mem=64204KiB load=0.91 rootload=0.91
(smt.stats   60   8337 284791 1708150  8861/8550/579   28758/8827    54  603   61.72)
(smt.stats   61   8514 293653 1763460  8866/8555/579   29444/8827    54  603   61.82)
ramon: poll                 wall=20.000s usage=19.872s mem=64376KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 21:49:55 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.000s
ramon: group.total          19.926s
ramon: group.utime          19.918s
ramon: group.stime          0.008s
ramon: group.mempeak        64400KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              0.99
