ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:36:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30852 MiB
ramon: sys.mem.avail        61766 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/69Rr7CkLnomy.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4065956
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 9223372036854775932 := 126 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 127 := 126 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 9223372036854775803 := 9223372036854775802 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388027 := 4611686018427388026 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388027 := 4611686018427388026 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388275 := 4611686018427388274 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388771 := 4611686018427388770 << 60
(smt.stats    0    101    338    401   156/80/55     110/8     6    9   18.19)
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 242 := 3458764513820541515 << 61
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 242 := 3458764513820541515 << 61
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 0 := 3458764513820541515 << 61
(smt.stats    1    202    716   1102   305/238/56     215/12     7   10   18.29)
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213693951 := 3458764513820541019 << 61
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694139 := 3458764513820541019 << 61
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694139 := 3458764513820541019 << 61
(smt.stats    2    313   1040   2017   403/311/56     334/15     7   10   18.39)
(smt.stats    3    414   1489   3531   524/448/61     468/17     8   11   18.39)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388391 := 4611686018427388388 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388391 := 4611686018427388388 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388391 := 4611686018427388388 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388387 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427386913 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427386912 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 2305843009213694285 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388388 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388388 << 3
(smt.stats    4    525   2150   4638   579/534/61     623/34     9   11   18.48)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387502 := 4611686018427388384 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387502 := 4611686018427388384 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387406 := 4611686018427388288 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387406 := 4611686018427388288 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388320 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388320 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387438 := 4611686018427388320 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387438 := 4611686018427388320 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387470 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387470 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387454 := 4611686018427388336 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387454 := 4611686018427388336 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387454 := 4611686018427388336 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387454 := 4611686018427388336 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387486 := 4611686018427388368 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387486 := 4611686018427388368 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387486 := 4611686018427388368 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387470 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387402 := 4611686018427388284 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387402 := 4611686018427388284 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387402 := 4611686018427388284 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388276 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388276 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388276 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387398 := 4611686018427388280 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388280 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388280 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387398 := 4611686018427388280 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387418 := 4611686018427388300 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387414 := 4611686018427388296 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387414 := 4611686018427388296 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387414 := 4611686018427388296 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387418 := 4611686018427388300 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387418 := 4611686018427388300 << 47
(smt.stats    5    647   2945   6691   811/589/72     771/62    10   15   18.86)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387494 := 4611686018427388376 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387494 := 4611686018427388376 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387494 := 4611686018427388376 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387494 := 4611686018427388376 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388392 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388392 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387414 := 4611686018427388296 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387462 := 4611686018427388344 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387462 := 4611686018427388344 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387466 := 4611686018427388348 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387466 := 4611686018427388348 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387462 := 4611686018427388344 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387462 := 4611686018427388344 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387482 := 4611686018427388364 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387482 := 4611686018427388364 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387446 := 4611686018427388328 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387446 := 4611686018427388328 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387450 := 4611686018427388332 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387450 := 4611686018427388332 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388328 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388328 << 33
(smt.stats :restarts  :decisions    :clauses/bin/units       :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas        :deletions    )
(smt.stats    6    748   3714   8302   974/799/127     880/99    11   26   19.15)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387410 := 4611686018427388292 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387410 := 4611686018427388292 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387410 := 4611686018427388292 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387410 := 4611686018427388292 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387426 := 4611686018427388308 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387426 := 4611686018427388308 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387426 := 4611686018427388308 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387490 := 4611686018427388372 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387490 := 4611686018427388372 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387490 := 4611686018427388372 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387442 := 4611686018427388324 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387442 := 4611686018427388324 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387442 := 4611686018427388324 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387422 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387422 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387422 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387424 := 4611686018427388306 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387440 := 4611686018427388322 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387440 := 4611686018427388322 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387440 := 4611686018427388322 << 36
(smt.stats    7    859   4715  10410  1091/964/177     988/122    12   36   19.41)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387456 := 4611686018427388338 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387472 := 4611686018427388354 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388370 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387488 := 4611686018427388370 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387488 := 4611686018427388370 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387500 := 4611686018427388382 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388378 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387492 := 4611686018427388374 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387508 := 4611686018427388390 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388342 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388342 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387468 := 4611686018427388350 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388346 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388346 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387476 := 4611686018427388358 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387480 := 4611686018427388362 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387484 := 4611686018427388366 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388362 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387452 := 4611686018427388334 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387448 := 4611686018427388330 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387498 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387498 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387502 := 4611686018427388384 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387502 := 4611686018427388384 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387492 := 4611686018427388374 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387510 := 4611686018427388392 << 1
(smt.stats    8    981   5963  12646  1235/1072/217    1129/125    13   44   19.91)
ramon: poll                 wall=1.003s usage=1.003s mem=21716KiB load=1.00 rootload=0.99
(smt.stats    9   1115   9022  14736  1325/1285/303    1257/166    15   59   20.49)
(smt.stats   10   1216  12203  16440  1395/1337/303    1351/171    16   60   20.68)
(smt.stats   11   1327  16188  18621  1471/1444/307    1443/176    17   62   20.68)
ramon: poll                 wall=2.000s usage=1.999s mem=22036KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  17592  19634  1726/1458/307    1556/183    18   75   20.96)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 16429131440647569408 := 4611686018427388530 << 56
(smt.stats   13   1583  20893  23190  1797/1747/308    1714/183    18   75   20.96)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 16429131440647569408 := 4611686018427388530 << 56
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 3602879701896396801 := 2305843009213694265 << 57
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 3602879701896396801 := 2305843009213694265 << 57
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 3602879701896396801 := 2305843009213694265 << 57
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694139 := 2305843009213694265 << 57
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694139 := 2305843009213694265 << 57
ramon: poll                 wall=3.000s usage=2.999s mem=22380KiB load=1.00 rootload=1.00
(smt.stats   14   1730  24508  26265  1893/1831/319    1867/213    20   84   21.15)
ramon: poll                 wall=4.000s usage=3.999s mem=22612KiB load=1.00 rootload=1.00
(smt.stats   15   1831  25832  27628  2130/1952/319    1975/218    20   84   21.35)
(smt.stats   16   1942  28242  30709  2156/2128/319    2082/218    20   84   21.35)
(smt.stats   17   2064  32184  35245  2197/2130/319    2203/218    20   84   21.35)
(smt.stats   18   2198  36884  38654  2307/2198/319    2336/225    20   84   21.54)
ramon: poll                 wall=5.003s usage=5.001s mem=23020KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.997s mem=23020KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.997s mem=23396KiB load=1.00 rootload=1.00
(smt.stats   19   2345  39049  40819  2577/2369/320    2484/240    21   87   21.83)
ramon: poll                 wall=8.000s usage=7.997s mem=23464KiB load=1.00 rootload=1.00
(smt.stats   20   2506  41710  43328  2826/2703/320    2647/249    21   87   21.92)
ramon: poll                 wall=9.000s usage=8.996s mem=23536KiB load=1.00 rootload=1.00
(smt.stats   21   2607  44723  47428  2942/2846/320    2745/253    21   87   22.02)
ramon: poll                 wall=10.000s usage=9.996s mem=23740KiB load=1.00 rootload=1.00
(smt.stats   22   2718  47177  49737  3189/2992/320    2886/266    21   87   22.11)
ramon: poll                 wall=11.000s usage=10.996s mem=24140KiB load=1.00 rootload=1.00
(smt.stats   23   2840  48236  51169  3504/3288/320    3009/291    21   87   22.49)
(smt.stats   24   2974  51293  56391  4006/3978/323    3144/307    22   93   22.49)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 1377 := 9223372036854775688 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 1377 := 9223372036854775688 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 1377 := 9223372036854775682 << 58
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 1 := 9223372036854775680 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 1 := 9223372036854775680 << 59
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 1152921504606847312 := 4611686018427387840 << 60
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 1152921504606847312 := 4611686018427387840 << 60
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 1152921504606847312 := 4611686018427387840 << 60
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 82197294723646093 := 4611686018427387840 << 60
(smt.stats   25   3121  56417  59505  4069/3984/323    3314/309    22   93   22.59)
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 82197294723646093 := 4611686018427387840 << 60
(smt.stats   26   3282  62874  66605  4146/4092/345    3681/565    24  117   22.99)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446744073709549600 := 9223372036854775682 << 58
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446744073709549600 := 9223372036854775682 << 58
(smt.stats   27   3459  70008  73949  4186/4120/345    3840/566    25  132   22.99)
(smt.stats   28   3560  74249  78238  4229/4193/348    3928/566    26  134   23.09)
ramon: poll                 wall=12.000s usage=11.996s mem=24652KiB load=1.00 rootload=1.00
(smt.stats   29   3671  81315  81593  4295/4200/348    4035/581    27  140   23.18)
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 1049413445606440515 := 2305843009213693946 << 4
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 1049413445606440515 := 2305843009213693946 << 4
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 139019122130464 := 2305843009213693946 << 4
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 82197294723646093 := 2305843009213693946 << 4
(smt.stats   30   3793  87793  87882  4373/4298/348    4171/582    27  140   23.18)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446744073709551536 := 4611686018427387894 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446744073709551536 := 4611686018427387894 << 2
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 4611686018427387823 := 2305843009213693947 << 3
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 4611686018427387823 := 2305843009213693947 << 3
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 4611686018427387823 := 2305843009213693947 << 3
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 4611686018427387823 := 2305843009213693947 << 3
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 4611686018427387824 := 2305843009213693947 << 3
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 4611686018427387857 := 2305843009213693949 << 1
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 4611686018427387857 := 2305843009213693949 << 1
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694140 := 2305843009213693949 << 1
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2310491744374095518 := 2305843009213693949 << 1
(smt.stats   31   3927  92109  94590  4443/4356/353    4350/589    28  141   23.28)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  97477 102023  4480/4439/363    4575/619    29  143   23.37)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388133 := 4611686018427388134 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388133 := 4611686018427388134 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388134 << 6
(smt.stats   33   4235 103732 105381  4529/4443/363    4739/710    30  143   23.80)
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 1007 := 2305843009213694015 << 59
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 1007 := 2305843009213694015 << 59
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 3458764513820540929 := 2305843009213694015 << 59
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 3458764513820540929 := 2305843009213694015 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446605054587421205 := 4611686018427388050 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446605054587421203 := 4611686018427388050 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446605054587421204 := 4611686018427388050 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446744073709551615 := 4611686018427388050 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446605054587421206 := 4611686018427388050 << 48
(smt.stats   34   4412 108903 110003  4630/4516/363    4916/713    30  143   23.90)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611546999305257427 := 4611686018427387914 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611546999305257425 := 4611686018427387914 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611546999305257426 := 4611686018427387914 << 54
(smt.stats   35   4606 112614 115490  4698/4621/374    5119/713    31  145   24.09)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 6917390008518951299 := 4611686018427387914 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 6917390008518951302 := 4611686018427387914 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427387918 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427387916 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427387916 << 53
(smt.stats   36   4707 115436 119123  4724/4660/379    5215/735    32  148   24.09)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388000 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388000 << 11
ramon: poll                 wall=13.000s usage=12.995s mem=25752KiB load=1.00 rootload=0.99
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388273 := 4611686018427387992 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427387992 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427387996 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388273 := 4611686018427387998 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427387994 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427387994 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388004 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388004 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388006 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388006 << 8
(smt.stats   37   4818 119147 122037  4779/4680/384    5328/737    32  148   24.18)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388002 << 10
(smt.stats   38   4940 122069 125283  4806/4743/384    5448/737    33  149   24.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   39   5074 125655 128562  4837/4761/384    5571/738    33  149   24.28)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 223 := 4611686018427387918 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 0 := 4611686018427387918 << 52
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 63189413905317502 := 2305843009213693959 << 53
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 63189413905317502 := 2305843009213693959 << 53
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 63189413905317502 := 2305843009213693959 << 53
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 63050394783186945 := 2305843009213693959 << 53
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 63050394783186945 := 2305843009213693959 << 53
(smt.stats   40   5221 129334 132765  4894/4796/384    5717/739    33  149   24.37)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 1377 := 4611686018427387900 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 1377 := 4611686018427387900 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446744073709551487 := 4611686018427387900 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446744073709551487 := 4611686018427387900 << 61
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 18446744073709551361 := 4611686018427387900 << 61
(smt.stats   41   5382 134355 144203  4969/4909/396    5847/755    35  159   24.37)
ramon: poll                 wall=14.000s usage=13.995s mem=26272KiB load=1.00 rootload=1.00
(smt.stats   42   5559 141027 150365  5023/4921/397    6011/761    35  159   24.47)
ramon: poll                 wall=15.000s usage=14.995s mem=26500KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.994s mem=26584KiB load=1.00 rootload=1.00
(smt.stats   43   5753 145677 155611  5442/5043/397    6206/788    36  161   24.76)
ramon: poll                 wall=17.000s usage=16.994s mem=26668KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.994s mem=26736KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.994s mem=26840KiB load=1.00 rootload=1.00
(smt.stats   44   5966 147958 161869  6184/5575/397    6415/809    36  161   25.04)
(smt.stats   45   6067 155895 171480  6211/6151/397    6496/809    36  161   25.04)
ramon: poll                 wall=20.000s usage=19.994s mem=26972KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:36:30 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.003s
ramon: group.utime          19.983s
ramon: group.stime          0.020s
ramon: group.mempeak        27228KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
