ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:22:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31231 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1288
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0rkpkGvZWGv9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4019632
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4786   2833  1242/1118/103      88/12     7   22   19.28)
(smt.stats    1    202   5528   3702  2026/1797/104     209/27     8   24   19.38)
(smt.stats    2    313   6481   6021  2124/1911/106     329/47     9   27   19.47)
(smt.stats    3    414   7941   7260  2184/1972/109     445/74    11   35   19.57)
(smt.stats    4    525   8491   8810  2827/2534/124     545/93    13   48   19.66)
(smt.stats    5    647  12752  10449  2871/2607/124     668/102    14   60   19.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14808  13670  2964/2668/124     775/104    14   60   19.85)
(smt.stats    7    859  16118  17841  2966/2719/124     895/104    14   60   19.85)
(smt.stats    8    981  17927  24887  2978/2721/124    1028/104    14   60   19.95)
(smt.stats    9   1115  18592  26096  3006/2741/131    1171/122    15   64   19.95)
(smt.stats   10   1216  19110  28125  3081/2776/131    1277/123    15   64   20.05)
(smt.stats   11   1327  19774  31021  3170/2853/131    1388/139    16   69   20.05)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370496 := 4503599627370496&4503599627370498
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 22517998136852482 := 2702 << 52
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370496 := 4503599627370496&4503599627370498
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 22517998136852482 := 2702 << 52
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370496 := 4503599627370496&4503599627370498
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 22517998136852482 := 2702 << 52
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370496 := 4503599627370496&18014398509481844
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 36028797018963828 := 2702 << 52
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370496 := 4503599627370496&18014398509481983
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 36028797018963967 := 2702 << 52
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370496 := 4503599627370496&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370495 := 4503599627370496&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370494 := 4503599627370496&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4503599627370494 := 4503599627370496&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 4503599627370496&9007199254740992
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 4503599627370497 := 1405 << 53
(smt.stats   12   1449  20545  32591  3253/3005/147    1501/147    17   73   20.15)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 9007199254740992&18014398509481843
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 9007199254740992&9007199254740991
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 27021597764222975 := 2808 << 53
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2586 := 9007199254740992&2587
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2584 := 9007199254740992&2585
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 9007199254740992&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 1 := 2808 << 53
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 9007199254740992&2587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 2587 := 2808 << 53
ramon: poll                 wall=1.000s usage=0.931s mem=21436KiB load=0.93 rootload=0.91
(smt.stats   13   1583  21541  34056  3369/3087/158    1640/152    18   75   20.24)
(smt.stats   14   1730  22565  37517  3463/3168/158    1790/153    18   75   20.24)
(smt.stats   15   1831  23806  41210  3516/3213/158    1894/153    18   75   20.24)
(smt.stats   16   1942  24872  45264  3584/3329/165    2005/167    19   77   20.34)
(smt.stats   17   2064  27800  47045  3605/3348/165    2115/183    20   79   20.48)
(smt.stats   18   2198  30779  49658  3612/3359/166    2245/183    21   80   20.71)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&18014398509480334
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421312 := 562949953421312&18014398509481983
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 18248585690105249791 := 36028797018963920 << 49
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421312 := 562949953421312&18014398509480334
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 18248585690105248142 := 36028797018963920 << 49
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&18014398509480334
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&18014398509480334
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&18014398509481983
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421312 := 562949953421312&18014398509480334
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 18248585690105248142 := 36028797018963920 << 49
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421312 := 562949953421312&18014398509480334
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 18248585690105248142 := 36028797018963920 << 49
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421310 := 562949953421312&562949953421311
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&562949953421311
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 18231134241549189119 := 36028797018963920 << 49
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421312 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421308 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481958 := 18014398509481960 << 50
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481958 := 18014398509481960 << 50
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 562949953421313 := 18014398509481960 << 50
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 1 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 2 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 4 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 562949953421312 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 1 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 562949953421312 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 562949953421308 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 562949953421304 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 1 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 4 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 8 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 16 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 32 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 64 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 128 := 562949953421312&9007199254740992
(smt.stats   19   2345  32760  53424  3799/3428/219    2434/191    22   85   21.13)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 64 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 512 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 516 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 516 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 520 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 528 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 544 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421248 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 562949953421312&9007199254740992
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 516 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421304 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953421296 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 32 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 64 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 128 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 64 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 128 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 256 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 512 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 562949953420480 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 1216 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 1216 := 562949953421312&9007199254740992
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 1216 := 562949953421312&9007199254740992
(smt.stats   20   2506  33773  58161  3997/3643/295    2852/194    22   85   21.33)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   21   2607  35915  64888  4046/3770/307    2999/292    23  111   21.33)
ramon: poll                 wall=2.000s usage=1.930s mem=22780KiB load=1.00 rootload=0.99
(smt.stats   22   2718  37587  68224  4184/3849/308    3129/326    24  113   21.85)
(smt.stats   23   2840  38046  69090  4440/4089/308    3261/329    24  113   21.85)
(smt.stats   24   2974  39000  72451  4827/4560/309    3432/340    25  115   21.95)
ramon: poll                 wall=3.000s usage=2.930s mem=23472KiB load=1.00 rootload=1.00
(smt.stats   25   3121  41819  79621  4867/4573/310    3592/345    25  115   22.14)
(smt.stats   26   3282  45940  87534  4911/4635/312    3792/382    26  120   22.14)
(smt.stats   27   3459  50907  99647  4941/4670/317    4062/431    28  132   22.14)
(smt.stats   28   3560  53387 103044  5000/4683/318    4195/493    29  134   22.24)
(smt.stats   29   3671  55309 106685  5058/4736/319    4332/494    29  134   22.24)
(smt.stats   30   3793  59460 115449  5070/4797/319    4455/537    30  136   22.24)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&14636698788954113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 4644337115725824001 := 22517998136853238 << 48
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&14636698788954113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 4644337115725824001 := 22517998136853238 << 48
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&14636698788954113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 4644337115725824001 := 22517998136853238 << 48
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&14636698788954113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 4644337115725824001 := 22517998136853238 << 48
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&14636698788954113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 6734007342825734145 := 22517998136853238 << 48
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&15199648742375424
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 5066549580791807 := 11258999068426619 << 49
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&15199648742375424
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 5066549580791807 := 11258999068426619 << 49
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&15199648742375424
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 4785074604081151 := 11258999068426619 << 49
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 281474976710656&15199648742375424
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 4503599627370497 := 11258999068426619 << 49
(smt.stats   31   3927  63111 124387  5149/4859/332    4638/572    31  140   22.34)
(smt.stats   32   4074  67495 134138  5167/4888/332    4799/583    32  142   22.34)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 7602076171001397248 := 22517998136853324 << 5
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 7602076171001397248 := 22517998136853324 << 5
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 7602076171001397248 := 22517998136853324 << 5
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 7602076171001397248 := 22517998136853324 << 5
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 1125899906869633 := 11258999068426662 << 6
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 1125899906869633 := 11258999068426662 << 6
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 1125899906869633 := 11258999068426662 << 6
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 1125899906869633 := 11258999068426662 << 6
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 1125899906869633 := 11258999068426662 << 6
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 1 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 32 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 16 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 8 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&27008
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 2 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 1 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 16 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 16 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 32 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 32 := 32&27008
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 32 := 32&27008
(smt.stats   33   4235  71357 141572  5313/5011/389    4965/605    33  156   22.86)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&18014398509481344
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 32 := 32&18014398509481344
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 32&18014398509481344
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 32 := 32&18014398509481344
(smt.stats   34   4412  75450 153074  5420/5112/408    5196/637    35  170   23.19)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 128&16888498602639455
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 128&16888498602639455
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 65 := 128&16888498602639455
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 65 := 128&16888498602639455
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 64 := 128&16888498602639455
(smt.stats   35   4606  81030 166858  5531/5172/408    5590/643    35  170   23.48)
ramon: poll                 wall=4.000s usage=3.930s mem=24768KiB load=1.00 rootload=0.99
(smt.stats   36   4707  83639 174609  5603/5249/410    5773/693    36  172   23.57)
(smt.stats   37   4818  84022 175446  5711/5367/410    5888/696    36  172   23.67)
ramon: poll                 wall=5.000s usage=4.929s mem=25060KiB load=1.00 rootload=1.00
(smt.stats   38   4940  85217 178610  6038/5681/411    6008/727    37  178   23.76)
(smt.delete-inactive-clauses  :num-deleted-clauses 412)
(smt.stats   39   5074  88188 186490  6371/5966/411    5769/729    37  178   23.76)
(smt.stats   40   5221  93525 198896  6444/6110/412    5970/775    38  179   23.86)
ramon: poll                 wall=6.000s usage=5.929s mem=25196KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   41   5382  97551 210962  6695/6178/414    6139/792    38  179   23.86)
(smt.stats   42   5559 100481 217488  6854/6475/414    6407/809    39  183   23.95)
(smt.stats   43   5753 104124 227291  7025/6610/414    6591/820    39  183   24.04)
(smt.stats   44   5966 108868 245400  7144/6745/414    6880/821    39  183   24.04)
ramon: poll                 wall=7.000s usage=6.928s mem=25636KiB load=1.00 rootload=1.00
(smt.stats   45   6067 112152 252544  7171/6837/414    7049/822    39  183   24.04)
(smt.stats   46   6178 114471 257283  7257/6873/414    7180/826    39  183   24.14)
(smt.stats   47   6300 117439 272624  7364/6982/414    7341/829    39  183   24.14)
(smt.stats   48   6434 119206 279620  7371/7053/415    7510/901    40  186   24.23)
(smt.stats   49   6581 121742 290294  7380/7062/416    7674/928    41  195   24.23)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 1&754
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 128 := 377 << 1
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 1&754
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 128 := 377 << 1
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 1&754
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 128 := 377 << 1
(smt.stats   50   6742 126602 305288  7410/7071/416    7837/930    41  195   24.23)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 1&754
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 1 := 1&754
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 1 := 1&754
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2 := 2&351
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 351 := 752 << 1
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2 := 2&351
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 351 := 752 << 1
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2 := 2&532
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2 := 2&534
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 534 := 752 << 1
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 2 := 2&1504
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 2&1504
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 1536 := 376 << 2
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 2&1504
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 1536 := 376 << 2
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 2&1504
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 1536 := 376 << 2
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 1 := 2&1504
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 2&1504
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 2 := 2&1504
(smt.stats   51   6919 130229 320831  7479/7104/421    8020/936    42  196   24.33)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 755478837491402504 := 100 << 3
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 755478837491402504 := 100 << 3
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 8 := 8&16888498602641160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 34902897112123144 := 100 << 3
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602643458
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602643415
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 34902897112125399 := 102 << 2
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602641156
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 755478837491402500 := 102 << 2
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 4 := 4&16888498602641172
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 755478837491402516 := 102 << 2
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 16 := 16&16888498602641153
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 16 := 16&16888498602641168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 34902897112123152 := 98 << 4
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 16 := 16&16888498602641153
ramon: poll                 wall=8.000s usage=7.928s mem=25932KiB load=1.00 rootload=1.00
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 16 := 16&16888498602641168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 34902897112123152 := 98 << 4
(smt.stats   52   7113 135008 336184  7566/7217/472    8257/948    43  202   24.52)
(smt.stats   53   7326 138092 346254  7610/7278/482    8489/960    44  211   24.62)
(smt.stats   54   7560 143254 366467  7742/7380/482    8821/960    44  211   24.81)
(smt.stats   55   7661 146717 379293  7746/7384/483    8925/996    45  213   24.81)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 1&106
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 1 := 1&106
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 1&106
band: (band[54] (if (= #108 53) 1 (if #611 2 #715)) (shl[54] (bv2int %0) (+ 54 #718))) 1 := 1&106
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 1 := 1&106
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 1 := 1&106
(smt.stats   56   7772 149049 391458  7769/7405/485    9058/998    46  216   24.91)
(smt.stats   57   7894 153267 403139  7808/7435/485    9213/998    46  216   24.91)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 70368744177664&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 1 := 14 << 46
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 70368744177664&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 0 := 14 << 46
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 70368744177664&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #794 #798) 64)) 0 := 14 << 46
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   58   8028 157183 413959  7831/7442/485    9461/1001    46  216   25.10)
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 70368744177664&985162418487296
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 6 := 7 << 47
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 70368744177664&985162418487296
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 6 := 7 << 47
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 70368744177664&985162418487296
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 6 := 7 << 47
band: (band[54] (if (= #387 63) 1 (if #591 2 #787)) (shl[64] (* 2 #102) (mod #802 64))) 0 := 70368744177664&985162418487296
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 6 := 7 << 47
(smt.stats   59   8175 161625 428528  8028/7617/496    9823/1075    47  217   25.79)
(smt.stats   60   8336 167603 445705  8053/7632/496   10164/1075    47  217   25.88)
ramon: poll                 wall=9.000s usage=8.928s mem=27556KiB load=1.00 rootload=1.00
(smt.stats   61   8513 174564 460827  8156/7741/506   10542/1127    48  220   26.07)
(smt.stats   62   8707 187536 490741  8184/7757/506   10795/1127    48  220   26.36)
ramon: poll                 wall=10.000s usage=9.927s mem=28304KiB load=1.00 rootload=1.00
(smt.stats   63   8920 200342 513185  8283/7776/506   11219/1162    49  246   26.55)
ramon: poll                 wall=11.000s usage=10.927s mem=28484KiB load=1.00 rootload=1.00
(smt.stats   64   9154 213382 538491  8451/7921/508   11780/1198    50  255   26.78)
ramon: poll                 wall=12.000s usage=11.927s mem=28684KiB load=1.00 rootload=0.99
(smt.stats   65   9411 225131 571351  8726/8056/508   12208/1298    51  256   26.97)
(smt.stats   66   9512 227316 583891  8740/8323/508   12523/1298    51  256   27.06)
ramon: poll                 wall=13.000s usage=12.926s mem=28792KiB load=1.00 rootload=1.00
(smt.stats   67   9623 234729 597195  8771/8326/508   12712/1298    51  256   27.16)
(smt.stats   68   9745 244686 617359  8896/8380/508   12965/1299    51  256   27.16)
ramon: poll                 wall=14.000s usage=13.926s mem=28904KiB load=1.00 rootload=1.00
(smt.stats   69   9879 253620 631655  9137/8504/508   13227/1302    51  256   27.35)
(smt.delete-inactive-clauses  :num-deleted-clauses 610)
(smt.stats   70  10026 258316 646930  9175/8746/509   13038/1502    52  259   27.35)
(smt.stats   71  10187 268934 675373  9210/8754/509   13412/1502    52  259   27.44)
ramon: poll                 wall=15.000s usage=14.926s mem=29172KiB load=1.00 rootload=1.00
(smt.stats   72  10364 278920 700889  9303/8790/509   14159/1508    52  259   27.63)
(smt.stats   73  10558 286692 724496  9349/8920/512   14717/1583    53  275   27.63)
ramon: poll                 wall=16.000s usage=15.925s mem=29424KiB load=1.00 rootload=1.00
(smt.stats   74  10771 298495 752568  9522/9019/513   14999/1614    54  279   27.82)
ramon: poll                 wall=17.000s usage=16.925s mem=29536KiB load=1.00 rootload=1.00
(smt.stats   75  11005 307023 771344  9639/9099/513   15387/1616    54  279   27.92)
ramon: poll                 wall=18.000s usage=17.925s mem=30360KiB load=1.00 rootload=1.00
(smt.stats   76  11262 321963 799426  9787/9226/513   15741/1616    54  279   28.51)
ramon: poll                 wall=19.000s usage=18.925s mem=30376KiB load=1.00 rootload=1.00
(smt.stats   77  11544 331563 824336  9994/9370/513   16165/1634    54  279   28.70)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   78  11645 334650 832947 10141/9595/513   16306/1638    54  279   28.80)
ramon: poll                 wall=20.000s usage=19.925s mem=30528KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:23:07 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.999s
ramon: group.utime          19.959s
ramon: group.stime          0.040s
ramon: group.mempeak        30816KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.00
