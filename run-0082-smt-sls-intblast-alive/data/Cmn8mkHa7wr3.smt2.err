ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:57:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28968 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Cmn8mkHa7wr3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             694021
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   121.951     10000        49          0            1        2)
(sat.ddfw       1      1   62.5063     20001        98          1            1        3)
(smt.stats    0    101   2681    962   697/601/112     113/13     5   19   51.66)
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 524288 := 524289&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 524289 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 524288 := 524289&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 524289 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 524288 := 524289&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 524289 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 20 := 21&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 19 := 21&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 21&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 21 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
shl: (shl[27] (bv2int %0) (mod (bv2int %0) 27)) 0 := 20 << 20
(smt.stats    1    202   4408   2997  1100/972/115     247/17     7   22   51.75)
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971521&524288
shl: (shl[32] (bv2int %0) (mod (+ #114 #268) 32)) 20971521 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
shl: (shl[27] (bv2int %0) (mod (bv2int %0) 27)) 1 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
shl: (shl[27] (bv2int %0) (mod (bv2int %0) 27)) 19 := 20 << 20
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 2 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524284 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524284 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524280 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524272 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 524284 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 16 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 128 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 512 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 2048 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32768 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 131072 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 262144 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32768 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 12 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 128 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 128 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 16 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 5 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 0 := 20971520&524288
band: (band[27] (shl[27] (bv2int %0) (mod #114 27)) (if (= #392 26) 1 (if #394 2 #444))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 32 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 128 := 20971520&524288
(sat.ddfw       1      1   63.6943     40001       196          2            1        5)
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 256 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 512 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2048 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 32768 := 20971520&524288
(smt.stats    2    313   5283   4792  1479/1176/263     409/56    10   52   53.05)
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 64 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 131072 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 262144 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 262144 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 524288 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 131072 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 16384 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 65536 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 98304 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 98304 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 8192 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 4096 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1792 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 512 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 1024 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 768 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2560 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2048 := 20971520&524288
band: (band[27] (shl[32] (bv2int %0) (mod #269 32)) (if (= #463 31) 0 (if #465 1 #525))) 2 := 20971520&524288
(smt.stats    3    414   6463   7461  1599/1407/403     707/101    13   91   53.15)
(sat.ddfw       1      1   55.6586     70001       343          3            1        8)
(sat.ddfw       1      1   47.4496    110001       539          4            1       12)
(smt.stats    4    525   8255   9534  1743/1551/464    1042/170    15  118   53.71)
ramon: poll                 wall=1.003s usage=0.933s mem=56216KiB load=0.93 rootload=0.92
(sat.ddfw       1      1   40.8489    160000       784          5            1       17)
(sat.ddfw       1      1   35.7788    220001      1078          6            1       23)
(smt.stats    5    647  10088  12186  1989/1829/466    1279/228    17  123   53.90)
ramon: poll                 wall=2.000s usage=1.933s mem=56220KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   31.5884    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  12101  15333  2171/1855/466    1425/230    17  123   54.09)
(sat.ddfw       1      1   28.3688    370001      1813          8            1       38)
ramon: poll                 wall=3.000s usage=2.934s mem=56596KiB load=1.00 rootload=1.00
(smt.stats    7    859  12694  16175  2385/2141/466    1576/231    17  123   54.09)
(sat.ddfw       1      1   25.6483    460001      2254          9            1       47)
ramon: poll                 wall=4.000s usage=4.128s mem=56596KiB load=1.19 rootload=1.19
(smt.stats    8    981  15768  21128  2573/2292/466    1785/232    17  123   54.28)
(sat.ddfw       1      1   23.4412    560001      2745         10            1       57)
(smt.stats    9   1115  19380  28019  2775/2542/476    2470/309    19  142   54.77)
(sat.ddfw       1      1   22.6898    670001      3284         11            1       68)
ramon: poll                 wall=5.003s usage=5.370s mem=57028KiB load=1.24 rootload=1.25
(smt.stats   10   1216  20197  29019  3062/2789/477    2624/321    20  151   54.88)
(sat.ddfw       1      1   21.4631    790001      3872         12            1       80)
(smt.stats   11   1327  21903  30647  3346/3041/477    2855/321    20  151   54.98)
ramon: poll                 wall=6.000s usage=6.650s mem=57140KiB load=1.28 rootload=1.27
(sat.ddfw       1      1   19.9142    920001      4509         13            1       93)
ramon: poll                 wall=7.000s usage=7.733s mem=57240KiB load=1.08 rootload=1.08
(smt.stats   12   1449  23608  39166  3567/3380/489    3368/384    22  188   55.07)
(sat.ddfw       1      1   18.3824   1060001      5196         14            1      108)
ramon: poll                 wall=8.000s usage=8.723s mem=57536KiB load=0.99 rootload=0.99
(smt.stats   13   1583  25534  48965  3752/3396/492    3887/384    22  188   55.36)
(sat.ddfw       1      1   17.0843   1210001      5931         15            1      123)
ramon: poll                 wall=9.000s usage=9.695s mem=57596KiB load=0.97 rootload=0.97
ramon: poll                 wall=10.000s usage=10.643s mem=57608KiB load=0.95 rootload=0.95
(sat.ddfw       1      1    15.941   1370001      6715         16            1      139)
(smt.stats   14   1730  27741  67665  4088/3847/493    4192/497    24  352   55.55)
(smt.stats   15   1831  29744  73656  4214/3937/494    4442/511    25  357   55.65)
ramon: poll                 wall=11.003s usage=11.649s mem=58084KiB load=1.00 rootload=1.01
(smt.stats   16   1942  33409  86547  4255/4048/503    4670/554    26  512   55.74)
(sat.ddfw       1      1   14.9569   1540001      7549         17            1      156)
(smt.stats   17   2064  37436  96276  4308/4075/508    5388/720    27  539   55.94)
ramon: poll                 wall=12.000s usage=12.646s mem=58584KiB load=1.00 rootload=1.00
(smt.stats   18   2198  41535 110685  4488/4129/508    5948/724    27  539   56.32)
(sat.ddfw       1      1   14.0933   1720001      8431         18            1      174)
ramon: poll                 wall=13.000s usage=13.644s mem=58824KiB load=1.00 rootload=0.99
(smt.stats   19   2345  45455 120789  4745/4463/512    6585/948    28  549   56.41)
ramon: poll                 wall=14.000s usage=14.644s mem=59068KiB load=1.00 rootload=1.00
(smt.stats   20   2506  48994 136874  4878/4559/512    7398/950    28  549   56.69)
(sat.ddfw       1      1    13.338   1910001      9362         19            1      193)
ramon: poll                 wall=15.003s usage=15.587s mem=59628KiB load=0.94 rootload=0.95
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2607  52050 150927  5024/4820/514    8192/1171    29  559   56.79)
(smt.stats   22   2718  55394 168398  5139/4820/514    8643/1174    29  559   56.88)
(sat.ddfw       1      1   12.6406   2110001     10343         20            1      214)
ramon: poll                 wall=16.000s usage=16.582s mem=59400KiB load=1.00 rootload=0.99
(smt.stats   23   2840  59514 195506  5360/4978/514    9096/1317    30  575   56.98)
(smt.stats   24   2974  63165 221165  5423/5201/517   10334/1429    32  597   57.24)
ramon: poll                 wall=17.003s usage=17.607s mem=59744KiB load=1.02 rootload=1.03
(smt.stats   25   3121  68287 237726  5569/5224/517   11044/1434    32  597   57.34)
(sat.ddfw       1      1   12.0185   2320001     11372         21            1      235)
ramon: poll                 wall=18.000s usage=18.602s mem=59952KiB load=1.00 rootload=0.99
(smt.stats   26   3282  74061 277749  5765/5408/517   11635/1440    32  597   57.59)
ramon: poll                 wall=19.003s usage=19.563s mem=60344KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   11.4506   2540001     12451         22            1      257)
ramon: poll                 wall=20.000s usage=20.520s mem=60352KiB load=0.96 rootload=0.96
ramon: end                  Fri Nov  1 21:58:15 2024
ramon: root.execname        z3
ramon: root.utime           20.540s
ramon: root.stime           0.010s
ramon: group.total          20.566s
ramon: group.utime          20.551s
ramon: group.stime          0.016s
ramon: group.mempeak        60608KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.03
