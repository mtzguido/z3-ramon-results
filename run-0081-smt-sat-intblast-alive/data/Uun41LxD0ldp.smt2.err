ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:36:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28673 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Uun41LxD0ldp.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             438648
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   218/218     0/0  63       0    18.52   0.00)
(sat.stats    101    905    0   218/218   101/28  63       0    18.81   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 746 :time 0.00)
(sat.stats    101    905    0   218/218   101/28  63       0    18.81   0.00)
(sat.stats    101    905    0   218/218   101/28  63       0    18.81   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 429018.81 :time 0.00)
(sat.stats    101    905    0   218/218   101/28  63       0    18.81   0.01)
(sat.stats    104    936    1   218/218   104/31  63       0    18.81   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    983    2   218/218   107/34  63       0    18.81   0.01)
(sat.stats    110   1036    3   218/218   110/37  63       0    18.81   0.01)
(sat.stats    113   1107    4   218/218   113/40  63       0    18.81   0.01)
(sat.stats    116   1202    5   218/218   116/43  63       0    18.81   0.01)
(sat.stats    127   1627    6   218/218   127/52  63       0    18.81   0.01)
(sat.stats    140   2060    7   218/218   140/60  63       0    18.81   0.01)
(sat.stats    143   2173    8   218/218   143/61  63       0    18.81   0.01)
(sat.stats    146   2231    9   218/218   146/62  63       0    18.81   0.01)
(sat.stats    149   2331   10   218/218   149/63  63       0    18.81   0.01)
(sat.stats    152   2402   11   218/218   152/64  63       0    18.81   0.01)
(sat.stats    155   2511   12   218/218   155/64  63       0    18.81   0.01)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    400   6817   20  1173/1173   405/129  63       0    19.76   0.28)
lshr: (lshr[43] (bv2int %1) (+ 43 (* 8796093022207 #64))) 0 := 8796093022207 >>l 33
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 0&2048
lshr: (lshr[64] (* 1048576 (bv2int %1)) (mod (+ 63 #544 #548) 64)) 9007199253692416 := 9007199253692416 >>l 53
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4672 :time 0.00)
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 1 := 1&2048
(sat.stats    714  14570   21  3339/3337   748/189  84       0    20.40   0.46)
(sat.stats    717  14627   22  3341/3339   751/189  84       0    20.40   0.46)
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 734 := 988&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 542 := 911&2048
(sat.stats    720  14742   23  3379/3377   753/189 101       0    20.49   0.47)
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 3&2048
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 3 := 2048&3
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 3&2048
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 2 := 2048&3
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 5529 :time 0.00)
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 4 := 4&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 8 := 8&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 16 := 16&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 32 := 32&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 64 := 64&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 128 := 128&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 256 := 256&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 512 := 512&2048
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 6296 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7291 :time 0.00)
(sat.stats   1163  31598   70  6733/6730  1254/285 177       0    21.46   0.89)
ramon: poll                 wall=1.000s usage=0.928s mem=22792KiB load=0.93 rootload=0.92
(sat.stats   2000  59416  121 10583/10580  2166/454 177       0    23.15   1.64)
ramon: poll                 wall=2.000s usage=1.927s mem=24592KiB load=1.00 rootload=0.99
lshr: (lshr[43] (bv2int %1) (+ 43 (* 8796093022207 #64))) 0 := 10216 >>l 2
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 0&4398046511104
lshr: (lshr[64] (* 1048576 (bv2int %1)) (mod (+ 63 #544 #548) 64)) 18206610734203273217 := 3145728 >>l 22
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   2903  78611  124 12714/12710  3091/480 177       0    24.64   2.39)
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 6&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 4 := 4398046511104&6
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 8&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 8 := 4398046511104&8
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 16&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 16 := 4398046511104&16
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 32&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 32 := 4398046511104&32
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 64&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 64 := 4398046511104&64
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 128&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 128 := 4398046511104&128
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 256&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 256 := 4398046511104&256
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 512&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 512 := 4398046511104&512
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 1024&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 1024 := 4398046511104&1024
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 2048&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 2048 := 4398046511104&2048
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 4096&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 4096 := 4398046511104&4096
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 8192&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 8192 := 4398046511104&8192
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 16384&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 16384 := 4398046511104&16384
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 32768&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 32768 := 4398046511104&32768
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 65536&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 65536 := 4398046511104&65536
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 131072&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 131072 := 4398046511104&131072
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 262144&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 262144 := 4398046511104&262144
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 524288&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 524288 := 4398046511104&524288
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 1048576&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 1048576 := 4398046511104&1048576
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 2097152&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 2097152 := 4398046511104&2097152
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 4194304&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 4194304 := 4398046511104&4194304
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 8388608&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 8388608 := 4398046511104&8388608
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 16777216&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 16777216 := 4398046511104&16777216
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 33554432&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 33554432 := 4398046511104&33554432
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 67108864&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 67108864 := 4398046511104&67108864
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 134217728&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 134217728 := 4398046511104&134217728
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 268435456&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 268435456 := 4398046511104&268435456
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 536870912&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 536870912 := 4398046511104&536870912
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 1073741824&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 1073741824 := 4398046511104&1073741824
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 2147483648&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 2147483648 := 4398046511104&2147483648
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 4294967296&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 4294967296 := 4398046511104&4294967296
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 8589934592&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 8589934592 := 4398046511104&8589934592
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 17179869184&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 17179869184 := 4398046511104&17179869184
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 34359738368&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 34359738368 := 4398046511104&34359738368
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 68719476736&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 68719476736 := 4398046511104&68719476736
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 137438953472&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 137438953472 := 4398046511104&137438953472
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 274877906944&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 274877906944 := 4398046511104&274877906944
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 549755813888&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 549755813888 := 4398046511104&549755813888
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 0 := 1099511627776&4398046511104
band: (band[43] (if (= #261 63) 18446744073709551616 (if #425 9223372036854775808 #422)) (lshr[64] (* 1048576 #61) (mod #551 64))) 1099511627776 := 4398046511104&1099511627776
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 17385472 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 1024 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 7221248 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 219422720 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 235896832 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 16384 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 1384185856 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 4148297728 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 104857600 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 3407872 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 2621440 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 2097152 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 1048576 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 238983053312 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 117339848704 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 16777216 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 705179942912 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 67108864 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 134217728 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 1598801575936 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 536870912 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 736586891264 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 450971566080 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 1503238553600 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 463856467968 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 2095944040448 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 137438953472 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 68719476736 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 824633720832 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 1099511627776 := 2199023255548&4398046511104
band: (band[43] (lshr[43] (bv2int %1) (+ 43 #447)) (if (= #84 42) 8796093022208 (if #451 4398046511104 #533))) 549755813888 := 2199023255548&4398046511104
ramon: poll                 wall=3.000s usage=2.927s mem=29132KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.927s mem=32228KiB load=1.00 rootload=0.99
(sat.stats   5658 138012  175 22762/22757  5223/669 177       0    34.55   4.85)
(sat.stats   5661 138084  176 22762/22757  5224/669 177       0    34.55   4.85)
ramon: poll                 wall=5.000s usage=4.926s mem=34580KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.926s mem=36616KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.926s mem=39788KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 37382 :time 0.00)
ramon: poll                 wall=8.000s usage=7.925s mem=40676KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.925s mem=40864KiB load=1.00 rootload=1.00
(sat.stats  10161 212497  257 41218/41213  7878/809 616       0    39.86   9.72)
ramon: poll                 wall=10.000s usage=9.925s mem=40956KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.925s mem=41016KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.924s mem=41392KiB load=1.00 rootload=1.00
(sat.stats  12296 243379  316 46000/45995  9115/840 616       0    40.65  12.19)
ramon: poll                 wall=13.000s usage=12.924s mem=41836KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.924s mem=41948KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.923s mem=42144KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.923s mem=42288KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.923s mem=43032KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.923s mem=43184KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.922s mem=43404KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.922s mem=43536KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:37:05 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.000s
ramon: group.utime          19.976s
ramon: group.stime          0.024s
ramon: group.mempeak        44052KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.00
