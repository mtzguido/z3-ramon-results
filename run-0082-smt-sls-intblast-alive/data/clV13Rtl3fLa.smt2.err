ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:48:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27740 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/clV13Rtl3fLa.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             869191
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3362    439  1209/1061/99      95/6     5   15   51.86)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   90.9091     10000        49          0            1        2)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&1
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 1 := 98304 >>l 18
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 262143 := 35184372088832&262143
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 262143 := 35184372088832&262143
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 262142 := 35184372088832&262143
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 35184372088832 := 35184372088832&281474976710655
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 562949953421311 := 562949953421312 >>l 18
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 35184372088832 := 35184372088832&281474976710655
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 562949953421311 := 562949953421312 >>l 18
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 281474976710656 := 9223372036854743040 >>l 18
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 1 := 35184372088832&1
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 2 := 35184372088832&2
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 2 := 8 >>l 3
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 1 := 35184372088832&1
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 2 := 35184372088832&2
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 2 := 8 >>l 3
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 2 := 8 >>l 3
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 2 := 8 >>l 3
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 2 := 35184372088832&2
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 4 := 35184372088832&4
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 8 := 35184372088832&8
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 16 := 35184372088832&16
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 32 := 35184372088832&32
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 64 := 35184372088832&64
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 128 := 35184372088832&128
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 256 := 35184372088832&256
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 512 := 35184372088832&512
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 1024 := 35184372088832&1024
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 2048 := 35184372088832&2048
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 4096 := 35184372088832&4096
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 8192 := 35184372088832&8192
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 16384 := 35184372088832&16384
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 32768 := 35184372088832&32768
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 65536 := 35184372088832&65536
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 16 := 35184372088832&16
(smt.stats    1    202   5288   2593  1782/1604/164     188/14     8   32   52.57)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 256 := 35184372088832&256
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 512 := 35184372088832&512
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 1024 := 35184372088832&1024
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 768 := 35184372088832&768
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 78 := 35184372088832&78
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 76 := 35184372088832&76
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 72 := 35184372088832&72
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 64 := 35184372088832&64
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 64 := 35184372088832&64
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 64 := 35184372088832&64
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 2 := 8 >>l 3
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&1
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 1 := 35184372088832&1
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&2
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 2 := 35184372088832&2
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&4
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 4 := 35184372088832&4
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&8
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 8 := 35184372088832&8
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&16
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 16 := 35184372088832&16
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&32
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 32 := 35184372088832&32
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&64
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 64 := 35184372088832&64
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&128
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 128 := 35184372088832&128
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&256
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 256 := 35184372088832&256
(sat.ddfw       1      1   45.6667     20001        98          1            1        3)
(smt.stats    2    313   6457   3898  1976/1677/169     313/18     8   32   52.89)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&89
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 88 := 712 >>l 3
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&88
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 88 := 35184372088832&88
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&88
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 88 := 35184372088832&88
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&88
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 88 := 35184372088832&88
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 35184372088832&88
band: (band[48] (if (= #113 47) 16967543452645768122402340864 (if #498 8483771726322884061201170432 #590)) (lshr[48] (bv2int %0) (+ 48 #593))) 88 := 35184372088832&88
(smt.stats    3    414   8838   7377  2096/1917/249     476/88    10   52   52.89)
(smt.stats    4    525  10826  12020  2432/2212/259     675/198    13   65   52.98)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 131072 := 190479719202816&131072
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 262144 := 190479719202816&262144
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 524288 := 190479719202816&524288
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 1048576 := 190479719202816&1048576
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 2097152 := 190479719202816&2097152
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 4194304 := 190479719202816&4194304
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 4194304 := 190479719202816&4194304
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 8388608 := 190479719202816&8388608
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 16777216 := 190479719202816&16777216
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 33554432 := 190479719202816&33554432
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 190479719202816&67108864
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 844424997240832 := 844424997240832 >>l 37
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 190479719202816&67108864
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 844424997240832 := 844424997240832 >>l 37
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 137438953472 := 190479719202816&137438953472
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 844562369085440 := 844562369085440 >>l 37
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 47619929800704&67108864
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 47619929800704&67108864
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 47619929800704&67108864
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 134217728 := 47619929800704&134217728
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 268435456 := 47619929800704&268435456
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 536870912 := 47619929800704&536870912
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 844425467002880 := 844425467002880 >>l 39
(sat.ddfw       1      1    42.735     40001       196          2            1        5)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 47619929800704&67108864
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 134217728 := 47619929800704&134217728
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 268435456 := 47619929800704&268435456
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 47619929800704&67108864
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 47619929800704&67108864
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 47619929800704&137438953472
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 47619929800704&67108864
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 134217728 := 47619929800704&134217728
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 134217728 := 47619929800704&134217728
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 536870912 := 47619929800704&536870912
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 844425467002880 := 844425467265024 >>l 39
(smt.stats    5    647  14368  19374  2811/2549/324     960/271    15   68   53.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  18190  27078  2830/2591/340    1119/312    16   86   53.57)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 241123294879426&67108864
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 844424997240832 := 2251868535750656 >>l 62
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 241123294879426&67108864
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 844424997240832 := 2251868536012800 >>l 62
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 67108864 := 241123294879426&67108864
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #604 #608) 64)) 844424997240832 := 9223372036854743040 >>l 62
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 241123294879426&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 114 := 281474976710655 >>l 47
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 241123294879426&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 114 := 281474976710655 >>l 47
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 241123294879426&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 114 := 281474976710655 >>l 47
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 241123294879426&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 50 := 140737488355328 >>l 47
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 241123294879426&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 18 := 140737488355328 >>l 47
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 241123294879426&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 20 := 281474976710655 >>l 47
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 0 := 241123294879426&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 20 := 281474976710655 >>l 47
(smt.stats    7    859  20367  32273  2906/2666/355    1344/509    18   94   53.66)
(smt.stats    8    981  22724  39383  2965/2720/362    1525/572    20  111   53.85)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 272629768 := 232242129907840&8590196735
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 272629768 := 232242129907840&8590196735
(sat.ddfw       1      1   39.0625     70001       343          3            1        8)
(smt.stats    9   1115  23806  43047  3090/2721/362    1736/575    20  111   54.14)
ramon: poll                 wall=1.000s usage=0.815s mem=56512KiB load=0.82 rootload=0.80
(smt.stats   10   1216  24191  43919  3303/2919/367    1944/611    21  112   54.14)
(smt.stats   11   1327  25791  52500  3697/3220/367    2222/615    21  112   54.14)
(sat.ddfw       1      1   35.1185    110001       539          4            1       12)
(smt.stats   12   1449  27736  64515  4002/3483/367    2585/627    22  112   54.46)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678339
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678339
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678340
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678339
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678340
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678339
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678340
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&281474976710655
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&281474976710654
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&281474976710654
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678339
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 273678338 := 120561647439713&273678340
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   13   1583  29792  72340  4249/3780/389    3452/1048    23  116   54.68)
(smt.stats   14   1730  31743  84198  4662/4043/389    3704/1128    24  160   54.77)
(sat.ddfw       1      1    30.413    160000       784          5            1       17)
(smt.stats   15   1831  33798  97465  4898/4593/390    4106/1231    25  169   54.77)
(smt.stats   16   1942  35630 107557  5113/4859/392    4692/1326    26  176   54.96)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 8388608 := 120561647439713&8388610
ramon: poll                 wall=2.002s usage=1.714s mem=57296KiB load=0.90 rootload=0.90
(smt.stats   17   2064  40334 114152  5136/4879/392    4899/1330    26  176   55.06)
(smt.stats   18   2198  42824 121657  5248/4908/397    5386/1467    27  178   55.17)
(sat.ddfw       1      1   26.3393    220001      1078          6            1       23)
(smt.stats   19   2345  46305 134745  5438/5098/398    5770/1664    28  186   55.46)
ramon: poll                 wall=3.000s usage=2.664s mem=57716KiB load=0.95 rootload=0.95
(smt.stats   20   2506  49274 150235  5601/5349/404    6271/1852    29  188   55.46)
(sat.ddfw       1      1   23.5373    290001      1421          7            1       30)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 18087936 := 145135534866432&18087936
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 18087936 := 145135534866432&18087936
(smt.stats   21   2607  51414 164619  5651/5351/404    6426/1857    29  188   55.46)
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 18087936 := 106652627894272&18087936
band: (band[48] (if (= #321 63) 1111984927712593059669759810863104 (if #475 555992463856296529834879905431552 #472)) (lshr[64] (* 32768 #304) (mod #611 64))) 18087936 := 106652627894272&18087936
(smt.stats   22   2718  54574 174488  5670/5415/409    6561/1904    30  190   55.56)
(smt.stats   23   2840  59043 203847  5690/5428/409    7507/1905    30  190   55.66)
(smt.stats   24   2974  64910 243673  5708/5446/409    8669/2308    31  190   56.13)
(sat.ddfw       1      1   21.5575    370001      1813          8            1       38)
(smt.stats   25   3122  69344 275905  5858/5534/410    9025/2917    32  192   56.13)
ramon: poll                 wall=4.000s usage=3.628s mem=58296KiB load=0.96 rootload=0.97
(smt.stats   26   3283  73425 296015  6019/5679/411    9349/2996    33  192   56.23)
(smt.stats   27   3460  79357 350510  6204/5900/412   10122/3005    33  192   56.32)
(sat.ddfw       1      1   19.5567    460001      2254          9            1       47)
(smt.stats   28   3561  81383 371896  6288/6023/414   10299/3396    34  192   56.45)
(smt.stats   29   3672  84112 406976  6407/6102/415   10503/3475    35  205   56.45)
ramon: poll                 wall=5.000s usage=4.608s mem=59268KiB load=0.98 rootload=0.98
(smt.stats   30   3794  87134 430276  6592/6188/415   10738/3477    35  205   56.63)
(smt.stats   31   3928  90586 464313  6696/6375/415   11320/3479    35  205   56.63)
(sat.ddfw       1      1   17.9953    560001      2745         10            1       57)
(smt.stats   32   4075  95976 495630  6783/6495/417   11872/3527    36  211   56.87)
ramon: poll                 wall=6.000s usage=5.583s mem=59572KiB load=0.97 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4236 101045 519713  6884/6634/418   12255/3710    37  221   56.97)
(smt.stats   34   4413 106670 554600  6968/6718/419   12911/4039    39  233   57.06)
(smt.stats   35   4607 112271 582144  7000/6724/419   13619/4039    39  233   57.16)
(smt.stats   36   4708 114943 592341  7051/6761/419   13756/4039    39  233   57.16)
(sat.ddfw       1      1   16.6768    670001      3284         11            1       68)
(smt.stats   37   4819 117823 609310  7159/6835/419   13964/4039    39  233   57.16)
(smt.stats   38   4941 120725 619044  7189/6919/419   14145/4040    39  233   57.25)
(smt.delete-inactive-clauses  :num-deleted-clauses 5)
(smt.stats   39   5075 125743 638961  7264/6985/419   14701/4045    39  233   57.35)
ramon: poll                 wall=7.000s usage=6.731s mem=59744KiB load=1.15 rootload=1.15
(smt.stats   40   5222 130393 661268  7383/7132/420   15158/4476    40  237   57.35)
(smt.stats   41   5383 137785 699519  7397/7140/420   15590/4477    40  237   57.44)
(sat.ddfw       1      1   15.5541    790001      3872         12            1       80)
(smt.stats   42   5560 146464 736503  7402/7152/420   15957/4477    40  237   57.76)
ramon: poll                 wall=8.000s usage=7.750s mem=59968KiB load=1.02 rootload=1.02
(smt.stats   43   5754 154644 805814  7410/7160/420   16850/4477    40  237   58.02)
(smt.stats   44   5967 162606 856366  7508/7167/420   17277/4477    40  237   58.02)
ramon: poll                 wall=9.000s usage=8.750s mem=60448KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.5479    920001      4509         13            1       93)
(smt.stats   45   6068 166930 883271  7516/7266/420   17559/4477    40  237   58.02)
(smt.stats   46   6179 171401 900353  7586/7326/421   17708/5106    41  237   58.02)
(smt.stats   47   6301 177906 952387  7607/7357/421   17901/5106    41  237   58.12)
ramon: poll                 wall=10.000s usage=9.748s mem=60548KiB load=1.00 rootload=1.00
(smt.stats   48   6435 183021 974284  7654/7357/421   18279/5107    41  237   58.24)
(smt.stats   49   6582 188474 993894  7662/7412/421   18965/5107    41  237   58.24)
(sat.ddfw       1      1   13.6599   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.732s mem=60800KiB load=0.98 rootload=0.98
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   50   6743 193867 1020116  7746/7413/421   19220/5118    41  237   58.43)
(smt.stats   51   6920 197945 1057282  7880/7587/421   19934/5120    41  237   58.53)
(sat.ddfw       1      1   12.8678   1210001      5931         15            1      123)
(smt.stats   52   7114 206314 1099665  7916/7639/422   20233/5346    42  242   58.53)
ramon: poll                 wall=12.000s usage=11.724s mem=60880KiB load=0.99 rootload=0.99
(smt.stats   53   7327 215149 1147279  8039/7671/422   20722/5347    42  242   58.93)
(smt.stats   54   7561 221234 1193419  8131/7795/422   21623/5352    42  242   59.03)
ramon: poll                 wall=13.000s usage=12.839s mem=61300KiB load=1.12 rootload=1.12
(smt.stats   55   7662 225296 1225585  8170/7898/423   21873/5638    43  242   59.12)
(sat.ddfw       1      1   12.3191   1370001      6715         16            1      139)
(smt.stats   56   7773 227502 1251944  8329/7931/423   22037/5641    43  242   59.12)
(smt.stats   57   7895 229564 1274538  8512/8100/423   22322/5647    43  242   59.22)
(smt.stats   58   8029 232425 1287408  8655/8289/423   22606/5648    43  242   59.32)
ramon: poll                 wall=14.000s usage=13.795s mem=61376KiB load=0.96 rootload=0.95
(smt.stats   59   8176 237508 1324760  8757/8415/423   22882/5651    43  242   59.41)
(sat.ddfw       1      1    11.545   1540001      7549         17            1      156)
(smt.stats   60   8337 242478 1343232  8850/8557/423   23189/5651    43  242   59.41)
ramon: poll                 wall=15.000s usage=14.766s mem=61544KiB load=0.97 rootload=0.97
(smt.stats   61   8514 247155 1365104  8998/8637/423   23570/5652    43  242   59.51)
ramon: poll                 wall=16.000s usage=15.764s mem=61676KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.9602   1720001      8431         18            1      174)
(smt.stats   62   8708 253280 1387219  9271/8758/423   24088/5656    43  242   59.85)
ramon: poll                 wall=17.000s usage=16.764s mem=62404KiB load=1.00 rootload=1.00
(smt.stats   63   8921 257999 1412849  9715/9078/423   24618/5657    43  242   59.94)
ramon: poll                 wall=18.000s usage=17.690s mem=62684KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   10.4333   1910001      9362         19            1      193)
(smt.stats   64   9155 268081 1466556  9827/9482/424   25529/6141    44  248   59.94)
ramon: poll                 wall=19.000s usage=18.668s mem=62752KiB load=0.98 rootload=0.98
(smt.stats   65   9412 277688 1570213 10078/9590/424   26228/6148    44  248   60.13)
(smt.stats   66   9513 281517 1581558 10082/9832/426   27514/6493    45  264   60.33)
ramon: poll                 wall=20.000s usage=19.644s mem=62616KiB load=0.98 rootload=0.97
(smt.stats   67   9624 287073 1638596 10088/9836/426   27889/6493    45  264   60.33)
ramon: end                  Fri Nov  1 22:49:16 2024
ramon: root.execname        z3
ramon: root.utime           19.690s
ramon: root.stime           0.000s
ramon: group.total          19.706s
ramon: group.utime          19.698s
ramon: group.stime          0.008s
ramon: group.mempeak        63128KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              0.98
