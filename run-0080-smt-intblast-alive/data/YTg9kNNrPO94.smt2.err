ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:35:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25348 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YTg9kNNrPO94.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             74612
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1942    516  1110/994/113      90/6     9   19   18.99)
(smt.stats    1    202   3617   1153  1272/1144/116     185/9    11   22   19.09)
(smt.stats    2    313   4576   1918  1303/1170/116     301/9    11   22   19.19)
(smt.stats    3    414   6168   3640  1431/1283/118     392/14    12   27   19.41)
(smt.stats    4    525   7112   5027  1433/1285/120     500/20    13   30   19.41)
(smt.stats    5    647   8510   7397  1442/1294/122     621/24    14   31   19.61)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   9922   9093  1462/1309/125     728/26    15   32   19.61)
(smt.stats    7    859  10280   9916  1461/1309/125     841/30    16   34   19.61)
(smt.stats    8    981  11024  11965  1468/1316/125     957/30    16   34   19.61)
(smt.stats    9   1115  12644  13955  1476/1322/125    1094/30    16   34   19.71)
(smt.stats   10   1216  13991  16019  1478/1324/125    1195/30    16   34   19.71)
(smt.stats   11   1327  14795  17119  1529/1326/125    1309/32    16   34   19.80)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1449  15841  18816  1644/1489/128    1432/48    17   38   19.80)
(smt.stats   13   1583  17575  21285  1662/1504/129    1573/55    18   39   19.80)
(smt.stats   14   1730  19102  24698  1731/1517/129    1728/60    18   39   19.80)
(smt.stats   15   1831  19825  26698  1738/1584/129    1828/60    18   39   19.80)
(smt.stats   16   1942  20864  29049  1738/1584/130    1939/82    19   39   19.80)
(smt.stats   17   2064  21938  31685  1742/1588/130    2063/82    19   39   19.90)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 70368744177665 := 2 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 70368744177665 := 2 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 2&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 35184372088834 := 35184372088833 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 140737488355328 := 70368744177662 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 70368744177663 := 35184372088832 << 1
(smt.stats   18   2198  22600  32878  1770/1601/141    2193/88    20   42   20.17)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 35184372088833&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 35184372088833 := 35184372088833 << 3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 35184372088833&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 35184372088833 := 35184372088833 << 3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 35184372088833&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 35184372088833 := 35184372088833 << 3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3 := 35184372088833 << 3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3 := 35184372088833 << 3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 16&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 3 := 2 << 3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 8&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 7 := 1 << 3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 8&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 9 := 1 << 3
(smt.stats   19   2345  23839  36925  1824/1662/158    2328/99    22   53   20.27)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 23456248059221&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 23456248059221 := 11728124029611 << 11
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3 := 2 << 11
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3 := 2 << 11
(smt.stats   20   2506  25133  39953  1868/1690/166    2487/99    22   53   20.27)
ramon: poll                 wall=1.000s usage=0.944s mem=21460KiB load=0.94 rootload=0.94
(smt.stats   21   2607  25944  41622  1965/1737/166    2613/105    23   57   20.37)
(smt.stats   22   2718  26966  45799  2035/1826/166    2741/105    23   57   20.37)
(smt.stats   23   2840  28781  51361  2074/1866/166    2886/105    23   57   20.47)
(smt.stats   24   2974  30412  56478  2088/1908/166    3040/105    23   57   20.47)
(smt.stats   25   3121  32338  62242  2088/1908/168    3188/156    24   59   20.47)
(smt.stats   26   3282  35985  69801  2091/1911/168    3347/156    24   59   20.56)
(smt.stats   27   3459  40413  77432  2093/1913/168    3522/156    24   59   20.56)
(smt.stats   28   3560  41850  82042  2096/1917/175    3612/167    25   72   20.56)
(smt.stats   29   3671  43889  88521  2113/1930/175    3734/167    25   72   20.56)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 8796093022208&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 8796093022208 := 8796093022208 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 8796093022208&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 8796093022208 := 8796093022208 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 17592186044416&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 17592186044416 := 17592186044416 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 17592186044416&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 17592186044416 := 17592186044416 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 18764998447392&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 0 := 18764998447378 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 46912496118432&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 1 := 38116403096234 << 4
(smt.stats   30   3793  45203  91592  2177/1942/183    3853/175    26   86   20.76)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316066438000&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 482528531503984 := 30158033218999 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316066438000&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 482528531503984 := 30158033218999 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316066438000&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 482528531503984 := 30158033218999 << 40
(smt.stats   31   3927  47582  93839  2213/2011/188    3990/175    26   86   20.86)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 6 := 51603745730289&6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 6 := 51603745730289&6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 5 := 51603745730289&6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 6 := 51603745730289&6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 51603745730303&6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 51603745730301&6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 51603745730304&6
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 105745457500581632 := 51603745730289 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 51603745730304&6
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 105745457500581632 := 51603745730289 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 51603745730304&6
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 105745457500581632 := 51603745730289 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 51603745730289&6
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 105745457500581617 := 51603745730288 << 44
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  49424  97477  2354/2096/201    4174/187    27   90   21.05)
ramon: poll                 wall=2.000s usage=1.942s mem=22236KiB load=1.00 rootload=0.99
(smt.stats   33   4235  51357 103391  2384/2191/223    4337/197    28  104   20.96)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104792939&3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104792939&3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104792938&3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104792938&3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104792937&3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 1 := 60316104792937&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689212098363005801 := 60316071232365 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104792921&3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 1 := 60316104792921&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689282467107183449 := 60316071232363 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104792921&3
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 1 := 60316104792921&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689282467107183449 := 60316071232363 << 43
(smt.stats   34   4413  53710 107698  2591/2393/246    4562/223    29  109   21.25)
(smt.stats   35   4607  56600 115154  2616/2426/264    4739/239    30  136   21.25)
(smt.stats   36   4708  59061 119232  2624/2431/264    4840/239    30  136   21.25)
(smt.stats   37   4819  63239 125604  2632/2440/265    4937/260    31  145   21.34)
(smt.stats   38   4941  66153 130563  2643/2452/265    5081/261    32  152   21.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 32)
(smt.stats   39   5075  69782 136371  2653/2459/266    5184/263    32  152   21.34)
ramon: poll                 wall=3.000s usage=2.940s mem=22696KiB load=1.00 rootload=1.00
(smt.stats   40   5222  75073 144295  2705/2469/266    5343/289    33  153   21.54)
(smt.stats   41   5383  77763 150793  2869/2593/266    5507/292    33  153   21.63)
(smt.stats   42   5560  80771 158790  2922/2713/266    5716/292    33  153   21.73)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 61572657866864&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 694891355465840 := 43430709716615 << 8
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 61572657866864&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 694891355465840 := 43430709716615 << 8
(smt.stats   43   5754  85877 170048  2995/2751/270    5962/322    34  156   21.82)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 61572718265600&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 694891415864576 := 43430713491536 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 61572718265600&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 694891415864576 := 43430713491536 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 61572684709872&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 694891382308848 := 43430711394303 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 61572684711168&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 694891382310144 := 43430711394384 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 61572684711168&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 694891382310144 := 43430711394384 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316138340368&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 693634835939344 := 43352177246209 << 6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104785936&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 693634802384912 := 43352175149057 << 6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316104785936&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 693634802384912 := 43352175149057 << 6
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60316406775824&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 693635104374800 := 43352194023425 << 42
ramon: poll                 wall=4.000s usage=3.940s mem=23372KiB load=1.00 rootload=1.00
(smt.stats   44   5967  89238 176841  3220/3003/291    6225/377    35  158   22.11)
(smt.stats   45   6068  91798 180593  3239/3017/291    6368/378    35  158   22.11)
(smt.stats   46   6179  94257 186417  3246/3031/291    6481/431    36  162   22.11)
(smt.stats   47   6301  98287 197537  3250/3035/291    6600/431    36  162   22.11)
(smt.stats   48   6435 102073 209334  3268/3053/297    6718/431    37  179   22.11)
(smt.stats   49   6582 104812 216942  3276/3061/305    6883/431    37  179   22.11)
(smt.stats   50   6743 107171 226322  3304/3068/305    7011/430    38  228   22.20)
(smt.stats   51   6920 109310 245070  3357/3130/305    7197/430    38  228   22.20)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7114 111216 253245  3359/3132/310    7422/447    39  230   22.40)
ramon: poll                 wall=5.000s usage=4.940s mem=23740KiB load=1.00 rootload=1.00
(smt.stats   53   7327 115969 263017  3397/3140/310    7681/449    39  230   22.49)
ramon: poll                 wall=6.000s usage=5.940s mem=24024KiB load=1.00 rootload=1.00
(smt.stats   54   7561 120026 275293  3494/3267/311    7948/503    40  235   22.59)
(smt.stats   55   7662 122958 284207  3499/3270/311    8059/516    41  237   22.59)
(smt.stats   56   7773 126392 292232  3507/3280/322    8149/513    42  254   22.59)
(smt.stats   57   7895 128396 303856  3507/3280/322    8308/513    42  254   22.79)
(smt.stats   58   8029 129429 309693  3536/3305/325    8456/514    43  267   22.90)
(smt.stats   59   8176 132950 317971  3540/3309/325    8628/514    43  267   23.00)
(smt.stats   60   8337 135775 330170  3593/3330/325    8830/543    44  271   23.43)
ramon: poll                 wall=7.000s usage=6.940s mem=24940KiB load=1.00 rootload=1.00
(smt.stats   61   8514 139185 337742  3662/3409/327    9075/543    44  271   23.53)
(smt.stats   62   8708 143072 347903  3704/3437/327    9292/592    45  273   23.53)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 40&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 70368744177704 := 8796093022214 << 26
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 268435480&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 70369012613144 := 8796109799429 << 26
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 268435480&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 70369012613144 := 8796109799429 << 26
ramon: poll                 wall=8.000s usage=7.940s mem=25024KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.939s mem=25224KiB load=1.00 rootload=1.00
(smt.stats   63   8921 146560 354189  3843/3480/327    9573/597    45  273   23.82)
(smt.stats   64   9155 152277 363646  3981/3737/332    9831/633    46  274   23.72)
(smt.stats   65   9412 161800 390214  4004/3750/332   10114/633    46  274   23.72)
(smt.stats   66   9513 165962 397865  4030/3784/332   10236/675    47  274   23.82)
(smt.stats   67   9624 173140 414923  4030/3784/333   10359/675    47  274   23.82)
(smt.stats   68   9746 180579 429610  4032/3786/333   10486/683    48  275   23.92)
(smt.stats   69   9880 186937 446365  4035/3789/333   10667/683    48  275   23.92)
ramon: poll                 wall=10.000s usage=9.939s mem=25412KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 38)
(smt.stats   70  10027 190559 454265  4048/3802/333   10787/683    48  275   23.92)
(smt.stats   71  10188 198271 464407  4048/3802/333   10953/683    48  275   23.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10365 208045 490979  4051/3805/333   11127/683    48  275   23.92)
(smt.stats   73  10559 213974 506886  4055/3809/335   11321/703    49  279   23.92)
(smt.stats   74  10772 217828 523764  4091/3818/338   11650/703    49  279   24.01)
(smt.stats   75  11006 220934 549902  4136/3874/338   11892/729    50  289   24.11)
ramon: poll                 wall=11.000s usage=10.939s mem=25676KiB load=1.00 rootload=1.00
(smt.stats   76  11263 230700 570448  4182/3920/349   12158/744    52  319   24.11)
(smt.stats   77  11545 237992 590035  4212/3935/351   12480/748    52  319   24.20)
(smt.stats   78  11646 242986 611333  4240/3968/352   12603/776    53  323   24.20)
(smt.stats   79  11757 246867 629408  4268/3991/353   12706/776    54  329   24.20)
(smt.stats   80  11879 250494 646062  4298/4022/353   12829/776    54  329   24.20)
(smt.stats   81  12013 253376 659489  4317/4042/353   12990/783    55  337   24.30)
ramon: poll                 wall=12.000s usage=11.938s mem=25792KiB load=1.00 rootload=1.00
(smt.stats   82  12160 260239 678671  4326/4061/353   13151/783    55  337   24.30)
(smt.stats   83  12321 265990 695013  4340/4070/353   13319/783    55  337   24.30)
(smt.stats   84  12498 267795 710630  4407/4139/355   13511/823    56  340   24.39)
(smt.stats   85  12692 274144 728875  4445/4168/355   13729/823    56  340   24.39)
(smt.stats   86  12905 277992 744779  4462/4174/358   13976/824    56  340   24.49)
(smt.stats   87  13139 289085 780259  4487/4204/361   14218/854    57  349   24.49)
ramon: poll                 wall=13.000s usage=12.938s mem=26016KiB load=1.00 rootload=1.00
(smt.stats   88  13396 297231 807825  4495/4216/361   14476/863    58  350   24.58)
(smt.stats   89  13678 303215 828386  4575/4217/361   14785/863    58  350   24.58)
(smt.stats   90  13988 314685 875685  4675/4354/361   15123/864    58  350   24.68)
(smt.stats   91  14089 316821 881198  4683/4404/361   15232/864    58  350   24.68)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   92  14200 320147 886868  4704/4416/361   15339/864    58  350   24.68)
ramon: poll                 wall=14.000s usage=13.938s mem=26184KiB load=1.00 rootload=1.00
(smt.stats   93  14322 326272 902163  4734/4439/361   15461/864    58  350   24.68)
(smt.stats   94  14456 330482 919753  4752/4455/361   15603/864    58  350   24.68)
(smt.stats   95  14603 335155 936022  4777/4481/361   15766/864    58  350   24.68)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 32671287738368&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 32671287738369 := 8167821934592 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 32671287738368&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 32671287738369 := 8167821934592 << 2
(smt.stats   96  14764 339656 952881  4806/4509/361   15944/864    58  350   24.77)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 4 := 8167821934592 << 8
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 4 := 8167821934592 << 8
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 50268834103296&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 60316073748099 := 8167821934592 << 8
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 50268834103296&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 60316073748099 := 8167821934592 << 8
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689785100955811840 := 8167821934592 << 7
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 6148750497500102656 := 8167821934592 << 7
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689925838444167168 := 8167821934592 << 7
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689925838444167168 := 8167821934592 << 5
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689925838444167168 := 8167821934592 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689925838444167168 := 8167821934592 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689925838444167168 := 8167821934592 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 6148750497500102656 := 8167821934592 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 6148750497500102656 := 8167821934592 << 34
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 6148750497500102656 := 8167821934592 << 32
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 6148750497500102656 := 8167821934592 << 30
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 6148750497500102656 := 8167821934592 << 28
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 6148750497500102656 := 8167821934592 << 24
(smt.stats   97  14941 343926 965061  4913/4543/366   16175/919    59  351   25.09)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 65677566148682&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 3689850778521960522 := 43352194023424 << 10
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 70368744177658&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 2305913377957871610 := 43352194023424 << 10
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 70368744177658&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #351) 64)) 2305913377957871610 := 43352194023424 << 10
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60337848057856&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 60316073748099 := 43352194023424 << 10
band: (band[46] (shl[64] (bv2int %0) (mod #352 64)) (if (or #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 ...) 0 (if #871 1 #928))) 0 := 60337848057856&0
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 60316073748099 := 43352194023424 << 10
(smt.stats   98  15135 349810 976726  5050/4712/416   16441/919    59  351   25.18)
(smt.stats   99  15348 357707 984651  5081/4779/426   16650/982    60  363   25.18)
ramon: poll                 wall=15.002s usage=14.940s mem=27004KiB load=1.00 rootload=1.00
(smt.stats  100  15582 363708 999699  5110/4790/427   16911/985    60  363   25.57)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions     )
(smt.stats  101  15839 370749 1025981  5205/4827/427   17198/992    60  363   25.57)
ramon: poll                 wall=16.000s usage=15.938s mem=27184KiB load=1.00 rootload=1.00
(smt.stats  102  16121 379172 1046111  5303/4936/427   17502/1035    61  364   25.76)
ramon: poll                 wall=17.000s usage=16.938s mem=27420KiB load=1.00 rootload=1.00
(smt.stats  103  16431 389855 1084157  5365/5038/427   17805/1038    61  364   25.76)
(smt.stats  104  16771 395505 1109268  5382/5080/432   18146/1048    62  367   25.95)
(smt.stats  105  16872 402706 1134939  5386/5084/432   18246/1048    62  367   25.95)
(smt.stats  106  16983 404537 1143007  5393/5091/434   17261/1078    63 1467   26.04)
(smt.stats  107  17105 407798 1149732  5397/5094/434   17390/1078    63 1467   26.04)
ramon: poll                 wall=18.000s usage=17.937s mem=27636KiB load=1.00 rootload=1.00
(smt.stats  108  17239 411725 1162580  5481/5137/437   17553/1087    63 1467   26.04)
(smt.stats  109  17386 417140 1174026  5589/5235/437   17724/1094    64 1481   26.14)
(smt.stats  110  17547 419793 1182585  5618/5315/446   17924/1094    64 1481   26.14)
(smt.stats  111  17724 425312 1195964  5622/5318/446   18122/1094    64 1481   26.14)
ramon: poll                 wall=19.000s usage=18.937s mem=27748KiB load=1.00 rootload=1.00
(smt.stats  112  17918 432125 1225830  5627/5323/446   18300/1148    65 1511   26.14)
(smt.stats  113  18131 436854 1250955  5629/5325/446   18517/1148    65 1511   26.14)
(smt.stats  114  18365 443039 1276092  5658/5333/446   18794/1152    65 1511   26.23)
ramon: poll                 wall=20.000s usage=19.937s mem=27824KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:35:43 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.997s
ramon: group.utime          19.993s
ramon: group.stime          0.004s
ramon: group.mempeak        28084KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.00
