ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:40:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42500 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9e16krcsPOL9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2830901
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 396 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 102 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 394 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 390 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 374 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 375 := 376 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 391 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 387 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 355 := 384 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 323 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 339 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 381 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 381 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 377 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 379 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 379 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 377 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 383 := 384 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 391 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 389 := 390 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 385 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 391 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 387 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 383 := 384 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 384 << 7
(smt.stats    0    101    549    556   199/191/128      82/15    10   32   18.56)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 374 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 373 := 374 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 393 := 394 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 395 := 396 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 396 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 396 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 376 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 376 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 376 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 390 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 304 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 372 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 304 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 304 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 304 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
(smt.stats    1    202   2078   2809   473/254/142     210/32    12   41   19.66)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
ramon: poll                 wall=1.006s usage=0.923s mem=21772KiB load=0.92 rootload=0.88
(smt.stats    2    313   3441   4406   680/644/319     317/87    15   81   20.40)
(smt.stats    3    414   3938   4709   850/705/319     418/103    15   81   20.78)
ramon: poll                 wall=2.000s usage=1.917s mem=22184KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.917s mem=22580KiB load=1.00 rootload=1.00
(smt.stats    4    525   5605   5494  1021/920/324     504/119    17   86   21.26)
ramon: poll                 wall=4.000s usage=3.916s mem=22752KiB load=1.00 rootload=1.00
(smt.stats    5    647   8074   7092  1300/1049/324     625/133    17   86   21.45)
ramon: poll                 wall=5.000s usage=4.916s mem=23252KiB load=1.00 rootload=1.00
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748   9699   7831  1424/1271/324     730/158    17   86   21.64)
ramon: poll                 wall=6.000s usage=5.916s mem=23252KiB load=1.00 rootload=1.00
(smt.stats    7    859  11006   9235  1615/1419/324     838/183    17   86   21.73)
ramon: poll                 wall=7.000s usage=6.916s mem=23252KiB load=1.00 rootload=1.00
(smt.stats    8    981  14011  12691  1731/1599/324     945/199    17   86   21.83)
ramon: poll                 wall=8.000s usage=7.916s mem=23632KiB load=1.00 rootload=1.00
(smt.stats    9   1115  16927  16486  1906/1842/330    1070/223    20   90   21.93)
ramon: poll                 wall=9.000s usage=8.916s mem=23632KiB load=1.00 rootload=1.00
(smt.stats   10   1216  19646  19796  2023/1953/333    1161/238    22   91   22.02)
ramon: poll                 wall=10.000s usage=9.915s mem=23632KiB load=1.00 rootload=1.00
(smt.stats   11   1327  22149  21728  2161/1989/333    1281/255    22   91   22.22)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 22517998673723273 := 2250700637601800 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 22517998673723273 := 2250700637601800 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 4398046511103 := 2250700637601800 << 49
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26736  25181  2232/2167/334    1401/263    23   92   22.12)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18410726271810535425 := 2250700637601904 << 47
(smt.stats   13   1583  30368  28722  2311/2240/339    1613/269    24   94   22.22)
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645186 := 1125350318800952 << 48
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645186 := 1125350318800952 << 48
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645186 := 1125350318800952 << 48
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645187 := 1125350318800952 << 48
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125350318800951 := 1125350318800952 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 16325548649218049 := 2250700637601908 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 16044073672507393 := 2250700637601906 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 16887949014597689 := 2250700637601910 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18005605100815295 := 2250700637601912 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18005605100815327 := 2250700637601916 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 19139748828282942 := 2250700637601920 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 19139748828282942 := 2250700637601920 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18577348462903297 := 2250700637601924 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968194 := 2250700637601928 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968196 := 2250700637601932 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968198 := 2250700637601936 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968200 := 2250700637601940 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21392098230009857 := 2250700637601944 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968199 := 2250700637601938 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968201 := 2250700637601942 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 19139748828282943 := 2250700637601922 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 19139748828282939 := 2250700637601914 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18005605100815345 := 2250700637601918 << 40
(smt.stats   14   1731  34069  32457  2458/2278/339    1760/337    25   94   22.53)
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645187 := 1125350318800954 << 46
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645187 := 1125350318800954 << 46
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645187 := 1125350318800954 << 46
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125350318800953 := 1125350318800954 << 46
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125350318800953 := 1125350318800954 << 46
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 703687441776639 := 1125350318800954 << 46
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 703687441776639 := 1125350318800954 << 46
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 844424930131967 := 1125350318800951 << 49
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1 := 1125350318800953 << 47
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1 := 1125350318800953 << 47
(smt.stats   15   1832  37261  34619  2520/2401/344    1863/339    26   95   22.63)
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 844424930131968 := 1125350318800951 << 49
(smt.stats   16   1943  40254  37654  2553/2466/359    1973/341    27   98   22.72)
ramon: poll                 wall=11.000s usage=10.915s mem=24196KiB load=1.00 rootload=1.00
(smt.stats   17   2065  43072  40388  2577/2495/359    2089/348    28   98   22.72)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18446321861244485633 := 2250700637601866 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18445899648779419649 := 2250700637601860 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18428735172759257089 := 2250700637601856 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18445618173802708993 := 2250700637601872 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18445618173802708991 := 2250700637601872 << 13
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800936 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18437739623234535425 := 2250700637601872 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18437739623234535425 := 2250700637601872 << 13
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800936 << 14
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800936 << 14
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800936 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18445618173802708993 := 2250700637601882 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18445618173802708993 := 2250700637601868 << 15
(smt.stats   18   2199  47225  43989  2657/2517/359    2225/352    28   98   22.82)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18445618173802708993 := 2250700637601830 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18445618173802708993 := 2250700637601896 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18445618173802708993 := 2250700637601890 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18446744073709551614 := 2250700637601890 << 4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1 := 1125350318800935 << 15
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 2748779708415 := 1125350318800935 << 15
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 2748779708415 := 1125350318800935 << 15
(smt.stats   19   2346  49978  47150  2709/2591/369    2369/355    29  100   22.82)
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 281474976710657 := 1125350318800949 << 1
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 281474976710657 := 1125350318800949 << 1
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645187 := 1125350318800949 << 1
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125350318800948 := 1125350318800949 << 1
(smt.stats   20   2507  53333  50119  2737/2632/374    2530/357    30  101   23.33)
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800910 << 40
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800910 << 40
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800910 << 40
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800910 << 40
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 14293651161088 := 1125350318800909 << 41
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 14293651161088 := 1125350318800909 << 41
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 28587302322175 := 1125350318800909 << 41
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 28587302322175 := 1125350318800909 << 41
(smt.stats   21   2608  58434  53793  2800/2660/379    2631/359    31  102   23.42)
(smt.stats   22   2719  60250  55807  2809/2721/389    2742/361    32  104   23.42)
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125899906842623 := 1125350318800912 << 38
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125899906842622 := 1125350318800912 << 38
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125350318800914 := 1125350318800912 << 38
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125350318800914 := 1125350318800912 << 38
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125350318800914 := 1125350318800912 << 38
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645187 := 1125350318800912 << 38
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645187 := 1125350318800912 << 38
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800914 << 36
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800914 << 36
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800914 << 36
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 0 := 1125350318800914 << 36
(smt.stats   23   2841  63162  58481  2855/2722/389    2864/362    32  104   23.52)
(smt.stats   24   2975  66699  61692  2893/2782/399    2994/363    33  106   23.52)
ramon: poll                 wall=12.000s usage=11.915s mem=25264KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.915s mem=25344KiB load=1.00 rootload=1.00
(smt.stats   25   3122  71862  65070  2976/2823/408    3083/368    34  147   23.71)
ramon: poll                 wall=14.000s usage=13.915s mem=25376KiB load=1.00 rootload=1.00
(smt.stats   26   3283  78437  72409  3173/3082/409    3210/381    36  152   23.80)
ramon: poll                 wall=15.000s usage=14.914s mem=25476KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.914s mem=25624KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.914s mem=25656KiB load=1.00 rootload=1.00
(smt.stats   27   3460  88595  80343  3410/3104/409    3390/412    36  152   24.02)
(smt.stats   28   3561  94744  84622  3506/3409/409    3480/412    36  152   24.12)
(smt.stats   29   3672 100947  92398  3587/3430/409    3583/424    36  152   24.12)
ramon: poll                 wall=18.000s usage=17.913s mem=25744KiB load=1.00 rootload=1.00
(smt.stats   30   3794 107243 101789  3673/3510/409    3707/435    36  152   24.22)
ramon: poll                 wall=19.002s usage=18.915s mem=25848KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.913s mem=25888KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:40:29 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.040s
ramon: group.total          20.001s
ramon: group.utime          19.961s
ramon: group.stime          0.040s
ramon: group.mempeak        26404KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.089s
ramon: loadavg              1.00
