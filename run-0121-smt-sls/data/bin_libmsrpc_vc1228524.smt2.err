ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:22:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         23126 MiB
ramon: sys.mem.avail        62136 MiB
ramon: sys.nprocs           1212
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1228524.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1334243
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
tabu (if (= (extract[1:1] v507139948) bv[0:1]) (if (and #26392 #26393) bv[0:64] (if #26397 #16811 #20233)) (concat (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) (extract[7:7] v663015728) ...))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw     133      1   81.4797     10022         0          0          260      324)
(sat.ddfw      97     19   68.3425     20000         0          1          155      483)
(sat.ddfw      55     25   99.1881     40036         0          2          168      716)
(sat.ddfw      55    134   107.384     70211         0          3          236     1068)
(sat.ddfw      46     20   100.732    110000         0          4           62     1512)
(sat.ddfw      42     94    95.057    160000         0          5           91     1968)
(sat.ddfw      36    175   87.4636    220000         1          6           74     2796)
(sat.ddfw      36    467   79.5244    290061         1          7          129     3353)
ramon: poll                 wall=1.000s usage=0.924s mem=24028KiB load=0.92 rootload=0.91
(sat.ddfw      28    249    71.479    370046         2          8          126     4445)
(sat.ddfw      28    643   65.7309    460163         3          9          190     5363)
(sat.ddfw      27    290   60.1904    560079         3         10          138     6772)
ramon: poll                 wall=2.000s usage=1.924s mem=24060KiB load=1.00 rootload=1.00
(sat.ddfw      27    803    55.628    670000         4         11           91     7837)
(sat.ddfw      27   1025   51.7788    790075         5         12          168     9125)
(sat.ddfw      27   1025   48.2813    920000         6         13          172    10447)
ramon: poll                 wall=3.000s usage=2.924s mem=24060KiB load=1.00 rootload=1.00
(sat.ddfw      22    118   45.0016   1060045         7         14          126    12311)
(sat.ddfw      21    137    41.939   1210019         7         15          145    13184)
ramon: poll                 wall=4.000s usage=3.924s mem=24060KiB load=1.00 rootload=1.00
(sat.ddfw      21    979   39.1892   1370107         7         16          126    14386)
(sat.ddfw      19    875   36.6781   1540000         9         17          144    15661)
ramon: poll                 wall=5.000s usage=4.923s mem=24060KiB load=1.00 rootload=1.00
(sat.ddfw      19   1025    34.877   1720035        10         18          102    17627)
(sat.ddfw      19   1025   33.0967   1910010        12         19          134    19111)
ramon: poll                 wall=6.000s usage=5.923s mem=24060KiB load=1.00 rootload=1.00
(sat.ddfw      19   1025   31.6992   2110000        13         20           93    22003)
ramon: poll                 wall=7.000s usage=6.923s mem=24060KiB load=1.00 rootload=1.00
(sat.ddfw      19   1025   30.0043   2320000        14         21           13    23597)
(sat.ddfw      14    231   28.4371   2540103        14         22           79    25885)
ramon: poll                 wall=8.000s usage=7.922s mem=24060KiB load=1.00 rootload=1.00
(sat.ddfw      14   1025   27.0244   2770081        15         23          161    27691)
ramon: poll                 wall=9.000s usage=8.922s mem=24060KiB load=1.00 rootload=1.00
(sat.ddfw      14   1025   25.9765   3010000        15         24           53    30204)
ramon: poll                 wall=10.000s usage=9.913s mem=24316KiB load=0.99 rootload=0.99
(sat.ddfw       7   1025   24.7858   3260039        15         25          110    32346)
ramon: poll                 wall=11.000s usage=10.912s mem=24072KiB load=1.00 rootload=1.00
(sat.ddfw       7   1025   23.5564   3520102        17         26          107    34915)
ramon: poll                 wall=12.000s usage=11.910s mem=24072KiB load=1.00 rootload=1.00
(sat.ddfw       7   1025   22.6691   3790000        18         27           61    37544)
(sat.ddfw       7   1025   21.9519   4070128        21         28          126    40849)
ramon: poll                 wall=13.000s usage=12.908s mem=24072KiB load=1.00 rootload=1.00
(sat.ddfw       7   1025   21.2754   4360027        22         29          103    43352)
ramon: poll                 wall=14.000s usage=13.906s mem=24072KiB load=1.00 rootload=0.99
(sat.ddfw       7   1025   20.5107   4660140        23         30          161    46331)
ramon: poll                 wall=15.000s usage=14.906s mem=24072KiB load=1.00 rootload=1.00
(sat.ddfw       7   1025   19.9408   4970000        25         31           11    53749)
ramon: poll                 wall=16.000s usage=15.906s mem=24072KiB load=1.00 rootload=1.00
(sat.ddfw       7   1025   19.2902   5290044        28         32           77    56207)
ramon: poll                 wall=17.000s usage=16.906s mem=24072KiB load=1.00 rootload=1.00
(sat.ddfw       3    561   18.5099   5620001        29         33           56    58567)
ramon: poll                 wall=18.000s usage=17.906s mem=24072KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.002s usage=18.903s mem=24072KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   17.7716   5960078        30         34          102    61485)
ramon: poll                 wall=20.000s usage=19.903s mem=24072KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:22:27 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.000s
ramon: group.total          19.984s
ramon: group.utime          19.976s
ramon: group.stime          0.008s
ramon: group.mempeak        24328KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              1.00
