ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:47:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28561 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1271
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/AcQRf5wOG1Vz.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4104161
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4332   1081  1071/965/94      93/9     5   15   19.18)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&69
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&69
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 274877906929 := 274877906943&274877906930
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 274877906898 := 274877906943&274877906930
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 3 := 274877906943&69
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 5 := 274877906943&69
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&69
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&68
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&68
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&224
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&1473
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&1472
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&3968
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&8960
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&8
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 3 := 274877906943&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 274877906943&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&16
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&16
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&32
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&64
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&128
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&512
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&16
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 16 := 274877906943&17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 274877906943&16
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 16 := 274877906943&17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 16 := 274877906943&18
(smt.stats    1    202   5411   3256  1859/1672/202     190/22    10   40   19.57)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 18 := 274877906943&22
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 18 := 274877906943&22
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 18 := 274877906943&22
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 18 := 274877906943&22
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 18 := 274877906943&19
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 18 := 274877906943&19
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 35 := 274877906943&67
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 67 := 274877906943&515
(smt.stats    2    313   5941   3969  2105/1782/214     357/54    12   47   19.86)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 35 := 274877906943&579
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 35 := 274877906943&579
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 75 := 274877906943&579
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 75 := 274877906943&579
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 75 := 274877906943&579
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 519 := 274877906943&579
(smt.stats    3    414   6541   5887  2270/1962/230     599/101    13   51   19.95)
(smt.stats    4    549   7422  10072  2487/2294/241    1033/147    15   54   19.95)
(smt.stats    5    671  10268  16433  2520/2326/246    1264/236    18   73   20.09)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    772  11066  17296  2665/2365/247    1418/283    19   73   20.40)
(smt.stats    7    883  12264  20313  2842/2518/247    1779/283    19   73   20.50)
(smt.stats    8   1005  14381  27347  2892/2701/255    2395/576    21   96   20.50)
(smt.stats    9   1139  18654  38033  2905/2707/255    2676/576    21   96   20.50)
(smt.stats   10   1240  21058  48743  2953/2720/256    2937/660    23  146   20.62)
(smt.stats   11   1351  22915  52877  3065/2837/257    3208/742    24  147   20.62)
(smt.stats   12   1473  26564  62678  3113/2881/257    3413/743    24  147   20.62)
(smt.stats   13   1607  28822  70656  3191/2987/264    3947/813    25  156   20.74)
(smt.stats   14   1754  31163  87837  3345/3008/264    4423/927    26  172   20.83)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 7 := 7&18070
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 6 := 7&18070
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18070 := 549755813950 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 6 := 7&18070
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18070 := 549755813950 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 6 := 7&18070
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18070 := 549755813950 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 6 := 7&18582
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18582 := 549755813950 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 6 := 7&18582
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18582 := 549755813950 << 3
(smt.stats   15   1855  33964  97387  3388/3168/264    4563/928    26  172   20.95)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   16   1966  35205 103656  3398/3206/269    4949/979    27  173   20.95)
(smt.stats   17   2088  36430 112387  3564/3215/274    5246/983    27  173   21.05)
ramon: poll                 wall=1.000s usage=0.999s mem=22268KiB load=1.00 rootload=0.99
(smt.stats   18   2222  37388 116793  3756/3451/275    5510/1071    28  206   21.14)
(smt.stats   19   2369  37736 117315  3806/3615/275    5660/1071    28  206   21.34)
(smt.stats   20   2530  40256 129545  4345/4132/280    6082/1075    28  206   21.46)
(smt.stats   21   2631  41684 139019  4585/4196/282    6474/1296    29  220   21.46)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 6 := 68719476735&25668
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 4 := 68719476735&25668
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&25668
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&25668
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&25668
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&25668
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&26692
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&26692
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&28740
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&28740
(smt.stats   22   2742  42980 151985  4941/4417/282    6793/1397    30  222   21.67)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&23108
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&23108
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&23108
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&23108
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&23108
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&23108
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 68 := 68719476735&23108
(smt.stats   23   2864  47447 157850  4976/4756/308    7030/1436    31  227   21.78)
(smt.stats   24   2998  49304 169938  5015/4811/319    7634/1496    32  233   21.88)
(smt.stats   25   3145  53820 184027  5025/4834/319    7987/1734    33  234   21.88)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 176 := 137438953471&11312
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 144 := 137438953471&11312
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 48 := 137438953471&11312
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 48 := 137438953471&11312
(smt.stats   26   3306  57098 197701  5159/4962/325    8618/1969    34  236   21.97)
(smt.stats   27   3483  59893 214515  5301/4996/326    9307/1974    34  236   22.07)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 3616 := 34359738367&7712
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 3616 := 34359738367&7712
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 3872 := 34359738367&7712
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 3616 := 34359738367&7712
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 3616 := 34359738367&7712
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 5664 := 34359738367&7712
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 5792 := 34359738367&7712
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 5920 := 34359738367&7712
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 7712 := 34359738367&7712
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755821600 := 1099511624724 << 35
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 5920 := 34359738367&7712
(smt.stats   28   3584  61247 226802  5377/5114/326    9544/2191    35  237   22.17)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 7712 := 34359738367&7712
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755821600 := 1099511624256 << 35
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 7712 := 34359738367&7712
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 7712 := 1176 << 35
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 7712 := 34359738367&7712
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 7712 := 1020 << 35
(smt.stats   29   3695  62706 232313  5451/5222/346    9700/2194    35  237   22.26)
(smt.stats   30   3817  65875 242396  5459/5259/351    9891/2265    36  242   22.26)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   31   3951  69226 262521  5479/5286/354   10384/2424    37  250   22.36)
(smt.stats   32   4098  71236 277554  5495/5302/354   11185/2424    37  250   22.36)
ramon: poll                 wall=2.002s usage=1.993s mem=23728KiB load=0.99 rootload=0.99
(smt.stats   33   4259  76622 298194  5498/5305/356   11667/2762    39  263   22.47)
(smt.stats   34   4436  81101 312939  5529/5323/356   12149/2767    39  263   22.58)
(smt.stats   35   4630  87375 334021  5551/5345/356   12624/2996    40  266   22.58)
(smt.stats   36   4731  90955 357057  5559/5366/356   12965/2996    40  266   22.70)
(smt.stats   37   4842  94171 383733  5561/5368/357   13684/3097    41  269   22.70)
(smt.stats   38   4964  96014 395877  5668/5411/358   14126/3248    42  269   22.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5098  98259 409614  5724/5531/359   14407/3248    42  269   22.98)
(smt.stats   40   5245  99871 413647  5895/5532/359   14764/3252    42  269   22.98)
(smt.stats   41   5406 101719 421732  6246/5785/359   15373/3353    43  270   23.09)
(smt.stats   42   5583 105865 454052  6313/6120/359   16084/3353    43  270   23.20)
ramon: poll                 wall=3.000s usage=2.990s mem=24568KiB load=1.00 rootload=0.99
(smt.stats   43   5777 111475 502307  6466/6127/359   16755/3358    43  270   23.36)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 4262 := 137438953471&536909862
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 4262 := 137438953471&536909862
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 4646 := 137438953471&536909862
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 4134 := 137438953471&536909862
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 536907814 := 137438953471&536909862
(smt.stats   44   5990 115909 517622  6639/6338/359   17035/3367    43  270   23.36)
(smt.stats   45   6091 119474 527549  6685/6492/359   17615/3367    43  270   23.48)
(smt.stats   46   6202 121621 535415  6823/6495/359   18177/3373    43  270   23.58)
(smt.stats   47   6324 123405 553236  6922/6639/359   19277/3375    43  270   23.77)
(smt.stats   48   6458 126632 561505  6947/6747/359   19428/3375    43  270   23.77)
(smt.stats   49   6605 130101 580965  6968/6771/360   19639/4336    44  275   23.87)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 97 := 17179869183&105
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 105 := 17179869183&105
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18446640169860726889 := 1099511624726 << 34
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 105 := 17179869183&105
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18446639620104913001 := 1099511624726 << 34
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 105 := 17179869183&105
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18446642368883982441 := 1099511624726 << 34
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 105 := 17179869183&105
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 18446691846907232361 := 1099511624726 << 34
(smt.stats   50   6766 133436 606682  7074/6879/368   19885/4391    45  292   23.87)
ramon: poll                 wall=4.000s usage=3.990s mem=25160KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6943 139768 696490  7075/6880/369   20136/4410    46  305   23.87)
(smt.stats   52   7137 141943 725106  7082/6887/371   21044/4410    46  305   23.97)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 549755780385 := 549755812316 << 4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 549755780385 := 549755812316 << 4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 549755780385 := 549755812316 << 4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 549755780385 := 549755812316 << 4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 549755780385 := 549755812316 << 4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 7 := 7&549755788736
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 6 := 7&549755788736
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 4 := 7&549755788736
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 7&549755788736
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 7&549755788736
(smt.stats   53   7350 146651 734159  7161/6890/371   21277/4412    46  305   24.07)
(smt.stats   54   7584 149810 756396  7194/6984/402   21922/4462    47  336   24.37)
(smt.stats   55   7685 150558 759848  7484/7060/402   22077/4465    47  336   24.46)
(smt.stats   56   7796 153420 772088  7707/7362/402   22286/4466    47  336   24.46)
ramon: poll                 wall=5.000s usage=4.990s mem=25916KiB load=1.00 rootload=1.00
(smt.stats   57   7918 155215 786248  7877/7510/402   22926/4469    47  336   24.46)
(smt.stats   58   8052 158119 801962  7972/7707/403   23234/4702    48  336   24.56)
(smt.stats   59   8199 161172 831639  8202/7790/403   24079/4705    48  336   24.56)
(smt.stats   60   8360 165215 868456  8253/8016/403   24557/4811    49  337   24.79)
(smt.stats   61   8537 171521 909777  8335/8103/405   25737/4880    50  338   24.89)
(smt.stats   62   8731 179812 949310  8346/8122/405   26461/4880    50  338   24.99)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8944 188147 1019485  8359/8134/406   27360/5506    51  340   25.20)
ramon: poll                 wall=6.000s usage=5.990s mem=26448KiB load=1.00 rootload=1.00
(smt.stats   64   9178 199073 1104440  8375/8150/407   28009/5633    52  349   25.20)
(smt.stats   65   9435 207831 1118665  8386/8159/409   28436/5742    53  357   25.34)
(smt.stats   66   9536 210455 1133136  8397/8160/409   28684/5743    53  357   25.34)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 9 := 8589934591&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813897 := 549755816620 << 33
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 9 := 8589934591&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813897 := 549755814280 << 33
(smt.stats   67   9647 214109 1179894  8439/8183/409   28848/5744    53  357   25.34)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 9 := 8589934591&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 7146825580553 := 962072674378 << 33
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 9 := 8589934591&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 7146825580553 := 962072674456 << 33
(smt.stats   68   9769 217480 1188080  8464/8226/415   28959/5882    54  372   25.45)
(smt.stats   69   9903 221388 1216009  8472/8242/417   29226/5882    54  372   25.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 96)
(smt.stats   70  10050 222021 1221164  8473/8243/417   29327/5882    54  372   25.55)
(smt.stats   71  10211 228722 1248293  8475/8245/418   29505/5882    54  372   25.55)
(smt.stats   72  10388 239182 1350648  8478/8246/418   29744/5959    55  381   25.55)
ramon: poll                 wall=7.000s usage=6.989s mem=26924KiB load=1.00 rootload=1.00
(smt.stats   73  10582 245812 1378950  8526/8284/419   29976/5999    56  385   25.64)
(smt.stats   74  10795 251345 1432481  8935/8284/419   30498/6006    56  385   25.86)
(smt.stats   75  11029 255993 1471045  9221/8758/419   31111/6007    56  385   25.95)
(smt.stats   76  11286 264953 1583303  9239/8991/419   31688/6007    56  385   25.95)
ramon: poll                 wall=8.000s usage=7.987s mem=27588KiB load=1.00 rootload=0.99
(smt.stats   77  11568 275489 1649989  9242/9000/419   32494/6007    56  385   26.22)
(smt.stats   78  11669 278948 1675597  9245/9003/419   32741/6007    56  385   26.31)
(smt.stats   79  11780 284959 1725836  9249/9007/419   33217/6007    56  385   26.31)
(smt.stats   80  11903 290080 1743830  9252/9010/420   33356/6520    57  392   26.31)
(smt.stats   81  12037 292296 1763683  9299/9047/422   34061/6521    57  392   26.51)
(smt.stats   82  12184 293328 1767805  9586/9065/422   34230/6529    57  392   26.70)
ramon: poll                 wall=9.000s usage=8.987s mem=28100KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12345 294488 1777005  9930/9555/422   34472/6540    57  392   26.70)
(smt.stats   84  12522 297549 1808926 10027/9733/422   35264/6542    57  392   26.70)
(smt.stats   85  12716 304007 1890370 10035/9792/422   35842/6542    57  392   26.83)
(smt.stats   86  12929 308817 1943847 10075/9832/423   36835/6911    58  412   27.02)
ramon: poll                 wall=10.000s usage=9.987s mem=28972KiB load=1.00 rootload=1.00
(smt.stats   87  13163 314052 1987633 10298/9838/423   37976/6919    58  412   27.31)
(smt.stats   88  13420 320034 2027280 10450/10060/423   38677/7157    59  421   27.40)
ramon: poll                 wall=11.000s usage=10.987s mem=29096KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   89  13702 328577 2054443 10576/10240/424   39338/7160    59  421   27.50)
(smt.stats   90  14012 336423 2108816 10761/10518/425   40493/7556    60  424   27.59)
(smt.stats   91  14113 338580 2130006 10763/10520/425   40802/7556    60  424   27.71)
(smt.stats   92  14224 339771 2142686 10765/10522/425   41193/7556    60  424   27.85)
ramon: poll                 wall=12.000s usage=11.986s mem=29276KiB load=1.00 rootload=1.00
(smt.stats   93  14346 344053 2180388 10769/10526/425   41793/7556    60  424   27.94)
(smt.stats   94  14480 346905 2206487 10783/10532/425   42135/7557    60  424   27.94)
(smt.stats   95  14627 350043 2251206 10786/10543/425   42452/7557    60  424   27.94)
(smt.stats   96  14788 358220 2340270 10804/10557/425   43158/7557    60  424   28.05)
(smt.stats   97  14965 363269 2368245 10869/10564/425   43679/7562    60  424   28.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 559)
ramon: poll                 wall=13.000s usage=12.986s mem=29544KiB load=1.00 rootload=1.00
(smt.stats   98  15159 369942 2412493 11137/10631/427   43740/8175    61  451   28.17)
(smt.stats   99  15372 375719 2453047 11196/10915/427   44378/8177    61  451   28.29)
(smt.stats  100  15606 379827 2493516 11262/10975/428   45009/8314    62  451   28.38)
(smt.stats  101  15863 384611 2542461 11577/11040/428   45834/8324    62  451   28.48)
(smt.stats  102  16145 388315 2573271 11616/11369/430   46658/8326    62  451   28.60)
ramon: poll                 wall=14.000s usage=13.985s mem=30072KiB load=1.00 rootload=1.00
(smt.stats  103  16455 394642 2601095 11625/11374/430   48148/8658    63  462   28.79)
(smt.stats  104  16795 407911 2793360 11674/11392/430   49315/8663    63  462   28.79)
(smt.stats  105  16896 410081 2816443 11706/11428/430   49819/8665    63  462   28.89)
(smt.stats  106  17007 412155 2837089 11725/11474/430   50052/8665    63  462   28.89)
ramon: poll                 wall=15.000s usage=14.985s mem=30356KiB load=1.00 rootload=1.00
(smt.stats  107  17129 414792 2849295 11727/11480/430   50208/8665    63  462   28.98)
(smt.stats  108  17263 422724 2922506 11729/11482/430   50366/8665    63  462   28.98)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  109  17410 427696 2946593 11734/11487/430   50587/8665    63  462   28.98)
(smt.stats  110  17571 430370 2970516 11773/11496/430   51111/8668    63  462   29.09)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 63&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813954 := 969588867142 << 6
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 63&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813954 := 969588867142 << 6
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 63&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813954 := 969588867142 << 6
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 63&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813954 := 969588867142 << 6
(smt.stats  111  17748 435207 3011457 11894/11536/430   51664/8673    63  462   29.09)
ramon: poll                 wall=16.000s usage=15.985s mem=30668KiB load=1.00 rootload=1.00
(smt.stats  112  17942 442824 3103803 11913/11656/436   53466/9123    64  463   29.32)
(smt.stats  113  18155 450614 3167381 11927/11670/436   53814/9124    64  463   29.42)
(smt.stats  114  18389 456422 3237043 11942/11687/436   54758/9235    65  466   29.52)
(smt.stats  115  18646 464294 3332525 12008/11740/436   55426/9235    65  466   29.62)
(smt.stats  116  18928 470741 3398269 12022/11754/436   57018/9235    65  466   29.71)
ramon: poll                 wall=17.002s usage=16.987s mem=31284KiB load=1.00 rootload=1.00
(smt.stats  117  19238 480679 3497180 12061/11784/436   57641/9235    65  466   29.83)
(smt.stats  118  19578 489244 3615682 12103/11822/439   58786/9511    66  484   29.93)
ramon: poll                 wall=18.000s usage=17.985s mem=31564KiB load=1.00 rootload=1.00
(smt.stats  119  19951 500673 3736013 12114/11837/439   59663/9511    66  484   30.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 486)
(smt.stats  120  20052 504173 3766811 12116/11839/439   59446/9594    67  540   30.16)
(smt.stats  121  20163 507539 3825161 12119/11840/439   59590/9594    67  540   30.16)
(smt.stats  122  20285 511917 3915856 12120/11843/439   60014/9594    67  540   30.16)
(smt.stats  123  20419 514782 3934370 12143/11848/439   60214/9594    67  540   30.16)
ramon: poll                 wall=19.000s usage=18.984s mem=31804KiB load=1.00 rootload=1.00
(smt.stats  124  20566 518659 3958486 12169/11878/439   60669/9598    67  540   30.25)
(smt.stats  125  20727 524936 3992803 12189/11900/439   60937/9599    67  540   30.25)
(smt.stats  126  20904 530954 4017675 12243/11916/439   61385/9602    67  540   30.25)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2048 := 4294967295&32768
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2048 := 4294967295&34816
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2048 := 4294967295&34816
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2048 := 4294967295&34816
(smt.stats  127  21098 534720 4058053 12352/11983/440   62073/9742    68  553   30.66)
(smt.stats  128  21311 538812 4090791 12443/12149/461   62560/9745    68  553   30.79)
ramon: poll                 wall=20.000s usage=19.984s mem=32220KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:47:26 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.988s
ramon: group.utime          19.960s
ramon: group.stime          0.028s
ramon: group.mempeak        32476KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.004s
ramon: loadavg              1.00
