ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:04:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28785 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FhJadvzPAZWh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             716771
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   105.263     10000        49          0            1        2)
(smt.stats    0    101   5386    996  1230/1110/90      97/4     3   13   51.87)
(smt.stats    1    202   7839   2044  1872/1687/96     176/8     6   20   52.08)
(sat.ddfw       1      1   51.5515     20001        98          1            1        3)
(smt.stats    2    313  10315   4271  1999/1769/98     286/16     8   20   52.27)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8191&18014398509481915
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8191&18014398509481915
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8191 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8188 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 9 := 8191&8275
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8191&8329
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8191&8329
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&8545
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&8545
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&9409
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&11137
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&9409
(smt.stats    3    414  11333   5489  2112/1834/146     388/25    10   40   52.66)
(smt.stats    4    526  11671   8686  2471/2236/186     485/108    12   50   52.77)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 18014398509482112 := 61 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 18014398509482112 := 61 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 18014398509482112 := 61 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 64 := 127&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797018964032 := 61 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 64 := 127&7808
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8 := 127&14720
(sat.ddfw       1      1   51.9481     40001       196          2            1        5)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 4 := 127&49280
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2 := 127&49280
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 385 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 126 := 439 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 127 := 385 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 127 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 126 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 124 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 16 := 49280&127
(smt.stats    5    648  13638  11567  2608/2318/219     665/148    14   58   53.16)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 32 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 64 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 32 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 64 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 32 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 32 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 27 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 26 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 24 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 16 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 11 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 10 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 1 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 2 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 2 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 2 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&146048
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 4 := 146048&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&152960
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 4 := 152960&127
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  16181  17388  2650/2410/286     770/194    16   78   53.26)
(sat.ddfw       1      1   44.9775     70001       343          3            1        8)
(smt.stats    7    860  17975  19660  2750/2411/286     951/195    16   78   53.45)
ramon: poll                 wall=1.000s usage=0.904s mem=55920KiB load=0.90 rootload=0.89
(smt.stats    8    982  19789  23704  2805/2550/292    1112/253    18   87   53.54)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 1&140737488356737
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 140737488356737 := 140737488356737 << 1
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 1&281474976713473
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 281474976713473 := 281474976713473 << 1
(sat.ddfw       1      1   38.2409    110001       539          4            1       12)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 1&140737488356737
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 140737488356737 := 140737488356737 << 1
(smt.stats    9   1116  25054  31266  2859/2576/307    1183/236    19  154   53.74)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 1&140737488356737
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 140737488356737 := 140737488356737 << 1
(smt.stats   10   1217  26514  33971  3059/2679/309    1329/237    19  154   54.12)
(smt.stats   11   1328  29622  40165  3137/2844/309    1477/255    20  157   54.12)
(sat.ddfw       1      1   34.0361    160000       784          5            1       17)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 1&2
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 1 << 1
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 1&2
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 1 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  32087  47621  3164/2909/319    1677/279    22  173   54.22)
(smt.stats   13   1584  38907  56098  3219/2954/320    1874/279    22  173   54.33)
(smt.stats   14   1731  44116  65115  3250/2959/320    2116/320    23  176   54.42)
(sat.ddfw       1      1   32.9495    220001      1078          6            1       23)
ramon: poll                 wall=2.000s usage=2.036s mem=56544KiB load=1.13 rootload=1.13
(smt.stats   15   1832  46690  70652  3441/3009/320    2297/322    23  176   54.42)
(smt.stats   16   1943  50224  80828  3509/3244/323    2657/398    24  187   54.52)
(smt.stats   17   2065  54840  92457  3512/3247/324    2854/504    25  199   54.52)
(smt.stats   18   2199  60744 105846  3591/3262/325    3099/551    26  201   54.61)
(sat.ddfw       1      1    28.363    290001      1421          7            1       30)
(smt.stats   19   2346  66730 120963  3616/3349/326    3252/573    27  202   54.74)
(smt.stats   20   2507  71839 135423  3634/3365/330    3472/601    28  211   54.74)
(smt.stats   21   2608  76227 147389  3697/3394/331    3617/600    29  235   54.83)
ramon: poll                 wall=3.000s usage=3.035s mem=57212KiB load=1.00 rootload=1.00
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423940864
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423940864
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423942656
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423942656
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423942656
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423941120
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423941120
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423941120
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423941632
(smt.stats   22   2719  78183 156873  3862/3537/362    4123/608    30  241   55.02)
(smt.stats   23   2841  81561 176956  4070/3607/382    4508/614    30  241   55.15)
(sat.ddfw       1      1   24.5927    370001      1813          8            1       38)
(smt.stats   24   2975  85458 192318  4168/3897/383    4956/790    32  246   55.25)
(smt.stats   25   3122  88659 203270  4361/3921/383    5259/792    32  246   55.25)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16 := 9007199254740991&49344
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 256 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 320 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 576 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1088 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1088 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 320 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 576 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2112 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2112 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 3136 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 5184 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 9280 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17472 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16448 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17472 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33856 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33856 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33856 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25824 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
(smt.stats   26   3283  92820 218878  4637/4102/383    5658/814    32  246   55.97)
ramon: poll                 wall=4.000s usage=4.016s mem=58072KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   21.9941    460001      2254          9            1       47)
(smt.stats   27   3460  96952 230240  4749/4480/464    6348/932    33  262   56.26)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3561 101017 241696  4778/4509/464    6585/1144    34  264   56.36)
(smt.stats   29   3672 104310 255567  4905/4513/464    6887/1145    34  264   56.55)
ramon: poll                 wall=5.000s usage=4.960s mem=58868KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   19.1828    560001      2745         10            1       57)
(smt.stats   30   3794 108542 270332  5036/4645/464    7448/1147    34  264   56.64)
(smt.stats   31   3928 113734 290160  5124/4776/464    8078/1155    34  264   56.74)
ramon: poll                 wall=6.000s usage=5.923s mem=59096KiB load=0.96 rootload=0.97
(smt.stats   32   4075 120075 312280  5237/4929/464    8707/1155    34  264   56.84)
(sat.ddfw       1      1   17.6254    670001      3284         11            1       68)
(smt.stats   33   4237 126576 342625  5278/5009/465    9087/1777    35  265   56.93)
(smt.stats   34   4414 130921 360486  5392/5123/470    9636/1787    35  265   57.03)
ramon: poll                 wall=7.000s usage=6.911s mem=59372KiB load=0.99 rootload=0.98
(smt.stats   35   4608 138587 397713  5421/5145/472   10191/2039    37  281   57.37)
(smt.stats   36   4709 143288 421450  5451/5174/472   10512/2039    37  281   57.37)
(smt.stats   37   4820 146117 435461  5465/5187/472   10864/2039    37  281   57.46)
(sat.ddfw       1      1   16.2162    790001      3872         12            1       80)
(smt.stats   38   4942 149838 450720  5470/5192/472   11287/2039    37  281   57.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 151)
(smt.stats   39   5076 154464 462779  5516/5196/472   11535/2040    37  281   57.56)
ramon: poll                 wall=8.000s usage=7.914s mem=59728KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   15.1057    920001      4509         13            1       93)
(smt.stats   40   5223 158769 483230  5626/5318/473   11991/2259    38  287   57.65)
ramon: poll                 wall=9.000s usage=8.914s mem=60004KiB load=1.00 rootload=1.00
(smt.stats   41   5384 165190 523291  5661/5359/475   12636/2263    38  287   57.79)
(smt.stats   42   5561 169740 545907  5817/5506/477   12968/2328    39  299   57.89)
(smt.stats   43   5755 179530 582221  5960/5642/479   13573/2404    40  319   58.08)
ramon: poll                 wall=10.000s usage=9.850s mem=60372KiB load=0.94 rootload=0.93
(smt.stats   44   5968 186485 600740  5982/5664/480   14084/2404    40  319   58.18)
(sat.ddfw       1      1   13.9082   1060001      5196         14            1      108)
(smt.stats   45   6069 189164 610699  5989/5671/481   14398/2430    41  324   58.18)
(smt.stats   46   6180 192780 629517  6003/5685/482   14727/2430    41  324   58.18)
(smt.stats   47   6302 196498 648750  6022/5703/483   14917/2531    42  345   58.45)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 17179869183&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 180143985094819840 := 9007199254741012 << 34
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 17179869183&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 180143985094819840 := 9007199254741012 << 34
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 17179869183&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 198158383604301824 := 9007199254741012 << 34
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 17179869183&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 198158383604301824 := 9007199254741012 << 34
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6436 201133 682039  6051/5731/492   15246/2549    43  365   58.45)
(smt.stats   49   6583 208934 701662  6055/5733/492   15549/2551    43  365   58.87)
ramon: poll                 wall=11.000s usage=10.896s mem=60872KiB load=1.05 rootload=1.05
(sat.ddfw       1      1   13.2404   1210001      5931         15            1      123)
(smt.stats   50   6744 215288 726695  6199/5739/492   16060/2556    43  365   58.96)
ramon: poll                 wall=12.000s usage=11.887s mem=61104KiB load=0.99 rootload=0.99
(smt.stats   51   6921 221168 754329  6394/5912/492   16699/2606    44  389   59.06)
(smt.stats   52   7115 224891 768701  6417/6097/492   17435/2606    44  389   59.15)
(sat.ddfw       1      1    12.498   1370001      6715         16            1      139)
(smt.stats   53   7328 233202 805414  6455/6129/495   18202/2669    45  391   59.25)
ramon: poll                 wall=13.000s usage=12.878s mem=61684KiB load=0.99 rootload=0.98
(smt.stats   54   7562 241343 831450  6520/6141/495   19390/2674    45  391   59.65)
ramon: poll                 wall=14.000s usage=13.877s mem=62100KiB load=1.00 rootload=1.00
(smt.stats   55   7663 244276 843135  6660/6225/495   19675/2840    46  396   59.65)
(sat.ddfw       1      1   11.8351   1540001      7549         17            1      156)
(smt.stats   56   7774 246530 852851  6834/6375/495   19953/2844    46  396   59.75)
ramon: poll                 wall=15.000s usage=14.869s mem=61976KiB load=0.99 rootload=0.99
(smt.stats   57   7896 249247 869064  7233/6657/495   20330/2847    46  396   59.85)
(smt.stats   58   8030 252066 883975  7261/6928/496   21478/2962    47  398   59.94)
ramon: poll                 wall=16.000s usage=15.867s mem=62520KiB load=1.00 rootload=1.00
(smt.stats   59   8177 255069 890696  7309/6948/496   21804/2965    47  398   60.04)
(sat.ddfw       1      1   11.2374   1720001      8431         18            1      174)
(smt.stats   60   8338 258573 903543  7484/7091/497   22320/2970    47  398   60.14)
(smt.stats   61   8515 264862 962087  7573/7237/497   22764/2971    47  398   60.36)
ramon: poll                 wall=17.000s usage=16.864s mem=62680KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.6341   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=17.810s mem=62856KiB load=0.95 rootload=0.95
(smt.stats   62   8709 268419 976984  7928/7248/497   23256/3370    48  401   60.55)
ramon: poll                 wall=19.000s usage=18.793s mem=63304KiB load=0.98 rootload=0.98
(smt.stats   63   8922 273031 996927  8362/7625/498   23965/3374    48  401   60.92)
(sat.ddfw       1      1   10.0888   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=19.787s mem=63380KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 22:04:43 2024
ramon: root.execname        z3
ramon: root.utime           19.830s
ramon: root.stime           0.020s
ramon: group.total          19.853s
ramon: group.utime          19.833s
ramon: group.stime          0.020s
ramon: group.mempeak        63900KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.071s
ramon: loadavg              0.99
