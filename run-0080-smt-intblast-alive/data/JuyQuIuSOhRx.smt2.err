ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:07:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28109 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1271
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JuyQuIuSOhRx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4174283
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4427   3307  1077/976/101      92/8     7   17   19.06)
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 134217727&19327352832
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 412451078143 := 412451078144 >>l 35
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 134217727&19327352832
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 412451078143 := 412451078144 >>l 35
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&19327352832
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 274877906945 := 2594073385365405696 >>l 35
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&19327352832
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 274877906945 := 275012124672 >>l 35
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&19327352832
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 274877906945 := 275012124672 >>l 35
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 137438953471&19327352832
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&19327352832
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 274877906945 := 275012124672 >>l 35
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&19327352832
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 274877906945 := 275012124672 >>l 35
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&19327352832
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 274877906945 := 2594073385365405696 >>l 35
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 1 := 1&19327352832
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&19327352832
lshr: (lshr[37] (bv2int %0) (mod (bv2int %1) 37)) 256 := 256 >>l 8
(smt.stats    1    202   6411   5621  1597/1445/123     190/25     9   22   19.35)
(smt.stats    2    313   7812   8528  2215/2004/125     298/56    10   25   19.54)
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 137438953473 := 134217728 >>l 63
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 134217728&72
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 137573171200 := 137573171200 >>l 63
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 134217727&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 134217727&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 134217712&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 137438953473 := 137573171200 >>l 63
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 137438953473 := 18446744073575333888 >>l 63
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
lshr: (lshr[37] (bv2int %0) (mod (bv2int %1) 37)) 0 := 68719476736 >>l 36
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
lshr: (lshr[37] (bv2int %0) (mod (bv2int %1) 37)) 137438953471 := 68719476736 >>l 36
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
lshr: (lshr[37] (bv2int %0) (mod (bv2int %1) 37)) 68719476737 := 68719476736 >>l 36
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
band: (band[37] (lshr[37] (bv2int %0) (mod #100 37)) (if (= #472 36) 2473901162496 (if #474 1236950581248 #544))) 1 := 1&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
band: (band[37] (lshr[37] (bv2int %0) (mod #100 37)) (if (= #472 36) 2473901162496 (if #474 1236950581248 #544))) 1 := 1&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
band: (band[37] (lshr[37] (bv2int %0) (mod #100 37)) (if (= #472 36) 2473901162496 (if #474 1236950581248 #544))) 1 := 1&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 1&72
band: (band[37] (lshr[37] (bv2int %0) (mod #100 37)) (if (= #472 36) 2473901162496 (if #474 1236950581248 #544))) 1 := 1&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 1 := 1&72
(smt.stats    3    414   9352  10270  2283/2068/167     384/57    13   41   19.74)
(smt.stats    4    525  10071  12922  2348/2121/177     458/68    15   56   19.74)
(smt.stats    5    647  11748  16482  2412/2187/182     525/95    18  108   20.04)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748  13153  18834  2436/2211/182     627/97    18  108   20.04)
(smt.stats    7    859  15030  23868  2458/2227/182     728/100    18  108   20.04)
(smt.stats    8    981  17614  28785  2474/2249/185     847/110    19  111   20.04)
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 2303 := 137438953447&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 2303 := 137438953447&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 2302 := 137438953446&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 2302 := 137438953440&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 16 := 16&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 32 := 32&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 64 := 64&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 128 := 128&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 256 := 256&2304
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2748779069696 := 18446744068877713408 >>l 58
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 256 := 256&2304
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2748779069696 := 18446744068877713408 >>l 58
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 64 := 64&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 64 := 64&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 128 := 128&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 256 := 256&2304
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2611340116224 := 18446744068877713408 >>l 58
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 64 := 64&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 128 := 128&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 256 := 256&2304
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2611340116224 := 18446744072501592064 >>l 58
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 32 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 32 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 32 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 32 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 30 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 28 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 24 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 16 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 8 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 16 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 4 := 63&2304
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 2 := 63&2304
(smt.stats    9   1115  20468  33495  2547/2308/238     990/143    21  119   20.27)
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 79&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 71&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 71&72
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 128&72
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2473901162624 := 18446744069548802048 >>l 63
(smt.stats   10   1216  23692  39296  2567/2331/250    1108/161    22  132   20.46)
(smt.stats   11   1327  25437  42990  2595/2354/268    1227/173    23  138   20.46)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27531  47687  2675/2442/270    1369/177    24  142   20.56)
(smt.stats   13   1583  30623  54092  2706/2470/271    1521/209    26  146   20.56)
(smt.stats   14   1730  33085  60136  2744/2510/272    1685/222    27  148   20.56)
(smt.stats   15   1831  34504  62714  2812/2522/272    1800/224    27  148   20.75)
ramon: poll                 wall=1.000s usage=0.965s mem=21904KiB load=0.97 rootload=0.96
(smt.stats   16   1942  36147  66775  2903/2658/273    1950/234    28  150   20.75)
(smt.stats   17   2064  38094  72218  2965/2685/277    2128/248    29  163   20.84)
(smt.stats   18   2198  40595  77427  3032/2755/277    2258/249    29  163   20.84)
(smt.stats   19   2345  42784  85791  3072/2817/278    2432/259    30  164   20.95)
(smt.stats   20   2506  46258  92078  3107/2837/278    2611/259    30  164   20.95)
(smt.stats   21   2607  49876  99202  3157/2882/278    2727/261    30  164   20.95)
(smt.stats   22   2718  52121 103537  3195/2916/278    2838/261    30  164   21.14)
(smt.stats   23   2840  54849 108638  3205/2953/278    2991/261    30  164   21.14)
(smt.stats   24   2974  57620 116901  3218/2963/282    3176/293    31  169   21.14)
(smt.stats   25   3121  59686 123673  3221/2972/282    3333/293    31  169   21.14)
(smt.stats   26   3282  62791 139205  3224/2975/282    3487/299    32  177   21.14)
(smt.stats   27   3459  66493 151461  3236/2987/282    3722/299    32  177   21.24)
(smt.stats   28   3560  68248 155043  3253/3001/284    3869/315    33  178   21.36)
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 65&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2611340116033 := 18446744073441116160 >>l 28
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 65&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2611340116033 := 18446744069817237504 >>l 28
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 65&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2611340116033 := 18446744069817237504 >>l 28
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 71&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2611340116039 := 18446744069817237504 >>l 28
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 71&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 2611340116039 := 18446744069817237504 >>l 28
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 65&0
lshr: (lshr[37] (bv2int %0) (mod (bv2int %1) 37)) 130 := 130 >>l 1
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 64&0
lshr: (lshr[37] (bv2int %0) (mod (bv2int %1) 37)) 128 := 128 >>l 1
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 64&0
lshr: (lshr[37] (bv2int %0) (mod (bv2int %1) 37)) 128 := 128 >>l 1
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 64&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 64 := 17045651456 >>l 27
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 64&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 64 := 939524096 >>l 27
band: (band[37] (lshr[64] (* 134217728 #99) (mod #266 64)) (if (= #567 63) 664082786653543858176 (if #569 332041393326771929088 #693))) 0 := 64&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 27 #100 #265) 64)) 64 := 939524096 >>l 27
(smt.stats   29   3671  69250 158647  3307/3047/301    3992/321    33  178   21.36)
ramon: poll                 wall=2.000s usage=1.965s mem=22676KiB load=1.00 rootload=1.00
(smt.stats   30   3793  70120 160455  3432/3078/301    4106/331    34  188   21.65)
(smt.stats   31   3927  71171 163026  3638/3369/303    4281/331    34  188   21.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  75710 173569  3712/3457/304    4462/332    34  188   21.74)
(smt.stats   33   4235  80866 193398  3728/3461/304    4662/350    35  193   21.74)
(smt.stats   34   4412  84935 205154  3795/3518/305    4946/388    36  194   21.84)
ramon: poll                 wall=3.000s usage=2.965s mem=23144KiB load=1.00 rootload=1.00
(smt.stats   35   4606  87141 211459  4015/3546/306    5215/389    36  194   21.93)
(smt.stats   36   4707  87903 214899  4229/3840/307    5333/390    36  194   22.12)
ramon: poll                 wall=4.000s usage=3.964s mem=23372KiB load=1.00 rootload=1.00
(smt.stats   37   4818  88762 219761  4424/4006/307    5451/390    36  194   22.22)
(smt.stats   38   4940  89634 222789  4563/4203/307    5609/411    37  200   22.22)
(smt.delete-inactive-clauses  :num-deleted-clauses 133)
(smt.stats   39   5074  91052 229041  4676/4354/308    5751/413    37  200   22.33)
ramon: poll                 wall=5.000s usage=4.964s mem=23664KiB load=1.00 rootload=1.00
(smt.stats   40   5221  92461 230925  5006/4581/308    5911/413    37  200   22.33)
(smt.stats   41   5382  94276 235319  5412/4892/308    6120/415    37  200   22.52)
(smt.stats   42   5559  96135 241996  5593/5314/309    6395/492    38  205   22.52)
ramon: poll                 wall=6.001s usage=5.965s mem=23868KiB load=1.00 rootload=1.00
(smt.stats   43   5753  99326 252773  5753/5350/309    6686/496    38  205   22.62)
(smt.stats   44   5966 102163 262555  5969/5507/309    7050/561    39  207   22.71)
(smt.stats   45   6067 103602 267803  6016/5723/309    7268/562    39  207   22.71)
ramon: poll                 wall=7.000s usage=6.964s mem=24220KiB load=1.00 rootload=0.99
(smt.stats   46   6178 105239 276793  6068/5771/309    7480/562    39  207   22.71)
(smt.stats   47   6300 107286 285032  6170/5847/309    7654/565    39  207   22.80)
(smt.stats   48   6434 110055 302366  6277/5973/309    7914/568    39  207   22.80)
(smt.stats   49   6581 111364 306759  6345/6079/311    8250/649    40  210   22.90)
ramon: poll                 wall=8.000s usage=7.963s mem=24304KiB load=1.00 rootload=1.00
(smt.stats   50   6742 113552 317556  6362/6098/312    8476/649    40  210   23.00)
(smt.stats   51   6919 116338 326936  6510/6116/312    8864/652    40  210   23.00)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 121525 345706  6544/6289/314    9269/718    41  214   23.09)
ramon: poll                 wall=9.000s usage=8.963s mem=24456KiB load=1.00 rootload=1.00
(smt.stats   53   7326 127337 380614  6564/6297/314    9836/811    42  219   23.09)
(smt.stats   54   7560 132768 399291  6703/6312/315   10529/833    43  226   23.19)
(smt.stats   55   7661 135918 412658  6796/6449/315   10701/833    43  226   23.28)
(smt.stats   56   7772 138252 419408  6978/6594/315   10849/833    43  226   23.38)
(smt.stats   57   7894 141423 430617  7101/6725/315   11054/834    43  226   23.38)
ramon: poll                 wall=10.000s usage=9.963s mem=24856KiB load=1.00 rootload=1.00
(smt.stats   58   8028 143877 436781  7252/6906/315   11273/837    43  226   23.47)
(smt.stats   59   8175 147484 450234  7389/7017/315   11489/838    43  226   23.47)
(smt.stats   60   8336 151700 477456  7570/7170/315   11711/841    43  226   23.57)
(smt.stats   61   8513 155190 493428  7685/7330/315   12130/844    43  226   23.57)
(smt.stats   62   8707 158869 514069  7964/7461/315   12474/845    43  226   23.69)
ramon: poll                 wall=11.000s usage=10.963s mem=25108KiB load=1.00 rootload=1.00
(smt.stats   63   8920 162120 535842  8071/7735/315   12803/845    43  226   23.79)
(smt.stats   64   9154 167555 549431  8272/7820/315   13240/845    43  226   23.88)
(smt.stats   65   9411 174368 588638  8440/8045/315   13839/847    43  226   23.88)
(smt.stats   66   9512 176396 595003  8455/8194/315   14239/847    43  226   23.98)
(smt.stats   67   9623 179513 611274  8523/8217/315   14473/848    43  226   23.98)
(smt.stats   68   9745 182368 626799  8647/8267/315   14720/849    43  226   23.98)
(smt.stats   69   9879 185439 641031  8782/8420/315   14864/849    43  226   24.08)
ramon: poll                 wall=12.000s usage=11.963s mem=25492KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 187750 648278  8906/8566/315   15067/849    43  226   24.17)
(smt.stats   71  10187 190434 666040  9091/8728/315   15271/852    43  226   24.17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 192724 675952  9263/8862/315   15474/852    43  226   24.27)
(smt.stats   73  10558 196199 699514  9454/9052/315   15836/852    43  226   24.48)
(smt.stats   74  10771 199687 720211  9724/9215/315   16155/853    43  226   24.48)
(smt.stats   75  11005 202398 737852  9898/9467/315   16402/853    43  226   24.57)
ramon: poll                 wall=13.000s usage=12.962s mem=26080KiB load=1.00 rootload=1.00
(smt.stats   76  11262 206202 757257 10161/9676/315   16730/854    43  226   24.76)
(smt.stats   77  11544 210504 781402 10357/9939/315   17487/858    43  226   24.95)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions     )
(smt.stats   78  11645 212109 796245 10378/10121/315   17638/858    43  226   24.95)
(smt.stats   79  11756 213269 806387 10395/10128/315   17818/858    43  226   25.04)
(smt.stats   80  11878 214526 815900 10455/10140/315   17994/858    43  226   25.04)
(smt.stats   81  12012 216019 827309 10529/10232/315   18280/858    43  226   25.24)
(smt.stats   82  12159 217424 836619 10641/10312/315   18443/858    43  226   25.24)
ramon: poll                 wall=14.000s usage=13.959s mem=26848KiB load=1.00 rootload=1.00
(smt.stats   83  12320 218438 840868 10743/10407/315   18616/858    43  226   25.24)
(smt.stats   84  12497 220641 856680 10822/10483/315   18809/858    43  226   25.24)
(smt.stats   85  12691 223554 866455 10926/10585/315   19206/860    43  226   25.33)
(smt.stats   86  12904 228224 895980 11155/10688/315   19601/860    43  226   25.52)
(smt.stats   87  13138 232623 917391 11299/10911/315   20213/865    43  226   25.52)
ramon: poll                 wall=15.000s usage=14.959s mem=27360KiB load=1.00 rootload=1.00
(smt.stats   88  13395 238463 963837 11489/11083/315   20878/870    43  226   25.62)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas          :deletions     )
(smt.stats   89  13677 243912 1007639 11722/11248/315   21684/876    43  226   25.71)
(smt.stats   90  13987 248450 1032415 12048/11491/315   22142/887    43  226   25.95)
(smt.stats   91  14088 250877 1052732 12132/11863/315   22362/887    43  226   25.95)
(smt.stats   92  14199 252059 1056048 12157/11892/315   22497/887    43  226   26.05)
(smt.stats   93  14321 252612 1057758 12434/12107/315   22641/887    43  226   26.14)
ramon: poll                 wall=16.000s usage=15.959s mem=27872KiB load=1.00 rootload=1.00
(smt.stats   94  14455 253210 1064948 12799/12446/315   22779/887    43  226   26.14)
(smt.stats   95  14602 256333 1077153 13107/12831/317   23498/1909    44  261   26.24)
(smt.stats   96  14763 259543 1097773 13163/12850/317   23739/1909    44  261   26.33)
(smt.stats   97  14940 261874 1124324 13199/12911/317   24248/1910    44  261   26.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   98  15134 265457 1139867 13202/12937/317   24684/1910    44  261   26.43)
(smt.stats   99  15347 268113 1161214 13208/12943/318   24966/2099    45  263   26.43)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  100  15581 272132 1188394 13327/12947/318   25495/2100    45  263   26.53)
ramon: poll                 wall=17.000s usage=16.959s mem=28128KiB load=1.00 rootload=0.99
(smt.stats  101  15838 279026 1228819 13405/13086/318   26108/2104    45  263   26.62)
(smt.stats  102  16120 284570 1263051 13422/13157/318   26736/2104    45  263   26.62)
(smt.stats  103  16430 290117 1288756 13462/13160/318   27272/2104    45  263   26.72)
(smt.stats  104  16770 295029 1344399 13517/13211/318   27800/2104    45  263   26.94)
(smt.stats  105  16871 296672 1367316 13598/13270/318   28025/2104    45  263   26.94)
(smt.stats  106  16982 298202 1379606 13671/13355/318   28249/2104    45  263   27.04)
ramon: poll                 wall=18.000s usage=17.959s mem=28640KiB load=1.00 rootload=1.00
(smt.stats  107  17104 300102 1388485 13722/13429/318   28474/2104    45  263   27.04)
(smt.stats  108  17238 303364 1410001 13812/13469/318   28704/2105    45  263   27.04)
(smt.stats  109  17385 306744 1438843 13894/13570/318   28871/2105    45  263   27.13)
(smt.stats  110  17546 309479 1462191 13969/13655/318   29207/2105    45  263   27.13)
(smt.stats  111  17723 313160 1502493 14052/13718/318   29659/2106    45  263   27.23)
ramon: poll                 wall=19.000s usage=18.959s mem=28896KiB load=1.00 rootload=1.00
(smt.stats  112  17917 316140 1532028 14187/13802/318   29925/2107    45  263   27.23)
(smt.stats  113  18130 319388 1562256 14287/13936/318   30408/2109    45  263   27.32)
ramon: poll                 wall=20.000s usage=19.959s mem=29152KiB load=1.00 rootload=1.00
(smt.stats  114  18364 323628 1592431 14425/14050/318   30911/2111    45  263   27.51)
ramon: end                  Fri Nov  1 18:07:47 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.989s
ramon: group.stime          0.012s
ramon: group.mempeak        29408KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.039s
ramon: loadavg              1.00
