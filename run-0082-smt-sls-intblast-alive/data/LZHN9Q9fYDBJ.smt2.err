ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:17:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28503 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LZHN9Q9fYDBJ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             761604
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    78.125     10000        49          0            1        2)
(sat.ddfw       1      1   39.0664     20001        98          1            1        3)
(smt.stats    0    101   5174    379  1343/1214/103      87/11    10   19   52.15)
(smt.stats    1    202   7247   1396  2179/1986/106     189/18    12   23   52.24)
(sat.ddfw       1      1   39.5257     40001       196          2            1        5)
(smt.stats    2    313   9777   4573  2279/1991/106     299/27    12   23   52.55)
(smt.stats    3    414  10822   5836  2721/2476/114     400/34    13   23   52.64)
(smt.stats    4    525  11806   7962  2757/2500/116     507/40    14   30   52.64)
(smt.stats    5    647  17138  11010  2761/2514/116     629/48    15   31   52.75)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  19377  12085  2761/2514/120     737/57    16   31   52.85)
(smt.stats    7    859  22099  14618  2761/2514/121     848/57    16   31   52.85)
(smt.stats    8    981  23244  16458  2763/2516/121     967/61    17   32   52.94)
(sat.ddfw       1      1   33.7838     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.943s mem=54960KiB load=0.94 rootload=0.93
(smt.stats    9   1115  25678  18088  2806/2516/121    1112/65    17   32   53.10)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 211106232534083&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 432556670460101699 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 211106232534083&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 432556670460101699 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 211106232534085&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 288441482384245829 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 211106232534085&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 288441482384245829 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 288230376151711746 := 27021597764362880 >>l 11
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 13194139533380&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232534085 >>l 4
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 13194139533380&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232534085 >>l 4
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 13194139533380&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 13194139533379 := 211106232534085 >>l 4
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 13194139533380&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 13194139533381 := 211106232534085 >>l 4
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764362368 >>l 7
(smt.stats   10   1216  26524  19453  2880/2594/121    1227/67    17   32   53.10)
(smt.stats   11   1327  28569  21796  2916/2659/138    1389/119    19   37   53.19)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1454  30378  28200  2918/2661/138    1518/119    19   37   53.19)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 1873497444986126338 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 1873497444986126338 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 2 >>l 2
(sat.ddfw       1      1   28.6738    110001       539          4            1       12)
(smt.stats   13   1588  31670  30251  3040/2691/138    1650/125    19   37   53.48)
ramon: poll                 wall=2.000s usage=1.942s mem=55668KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   24.6179    160000       784          5            1       17)
(smt.stats   14   1735  32349  31479  3212/2814/148    1817/138    20   39   53.58)
(sat.ddfw       1      1   21.4673    220001      1078          6            1       23)
(smt.stats   15   1836  33583  35028  3356/3070/148    1927/138    20   39   53.58)
ramon: poll                 wall=3.000s usage=2.944s mem=55856KiB load=1.00 rootload=1.01
(smt.stats   16   1947  35877  41285  3386/3122/159    2053/180    22   45   53.58)
(smt.stats   17   2069  38720  44033  3410/3128/159    2190/181    22   45   53.69)
(smt.stats   18   2203  42687  47631  3414/3152/159    2314/187    23   62   53.69)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 144115188075855871&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 4179340454199820287 := 27021597764326016 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 7649&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 3891110078048116193 := 27021597764326016 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 335&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 3891110078048108879 := 27021597764326016 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 105553116266898&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 0 := 211106232533797 >>l 1
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 105553116266898&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232533797 >>l 1
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 105553116266898&0
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 13194139533361 := 211106232533797 >>l 1
(smt.stats   19   2350  46594  52784  3445/3159/159    2471/187    23   62   53.78)
(smt.stats   20   2511  49644  59649  3473/3207/169    2631/192    24   64   54.05)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 192 := 13194139533311&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 13194139533311 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 192 := 13194139533311&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 13194139533311 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 192 := 13194139533311&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 13194139533311 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 192 := 13194139533311&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 13194139533311 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 13194139533312 := 211106232532996 >>l 55
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 191 := 211106232532996 >>l 55
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764223488 >>l 62
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232532996 >>l 55
(smt.stats   21   2612  50555  62748  3495/3209/169    2732/195    25   64   54.05)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&96
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 0 := 27021597764223616 >>l 63
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&96
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232532997 >>l 56
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 427&96
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 427&96
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 427&96
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 384&96
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 3891110078048108928 := 27021597764223616 >>l 63
(smt.stats   22   2723  53645  65905  3541/3269/195    2844/200    26   66   54.05)
(sat.ddfw       1      1   19.0166    290001      1421          7            1       30)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6773413839565225986 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6773413839565225986 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6917529027641081856 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 2&1536
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 6773413839565225986 := 27021597764223104 >>l 59
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1537 := 211106232532993 >>l 52
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1535 := 211106232532993 >>l 52
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&1536
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 211106232532993 >>l 52
(smt.stats   23   2845  55775  69609  3583/3290/197    2965/204    27   73   54.05)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 718&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 718&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 717&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 383 := 717&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 717&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 718&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 718&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 511&384
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 4467570830351532543 := 27021597764223360 >>l 61
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 384 := 511&384
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 4467570830351532543 := 27021597764223360 >>l 61
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 255 := 589&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 254 := 588&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 254 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 252 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 248 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 240 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 224 := 558&384
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 224 := 558&384
ramon: poll                 wall=4.000s usage=3.943s mem=56652KiB load=1.00 rootload=0.99
(smt.stats   24   2979  57269  72763  3668/3388/245    3118/217    28   75   54.43)
(smt.stats   25   3126  61220  77683  3754/3404/245    3291/221    28   75   54.43)
(sat.ddfw       1      1   17.0213    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.984s mem=56740KiB load=1.04 rootload=1.04
(smt.stats   26   3287  62647  79547  4110/3547/245    3472/242    29   87   54.91)
(smt.stats   27   3464  64719  83792  4362/4088/249    3712/246    29   87   54.91)
(sat.ddfw       1      1   15.3846    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=5.983s mem=57348KiB load=1.00 rootload=1.00
(smt.stats   28   3565  67277  86899  4370/4096/249    3829/246    29   87   54.91)
(smt.stats   29   3676  69418  95569  4403/4129/250    3944/300    30  103   54.91)
ramon: poll                 wall=7.000s usage=6.982s mem=57364KiB load=1.00 rootload=1.00
(smt.stats   30   3798  71019  98049  4584/4130/250    4109/312    31  104   55.01)
(sat.ddfw       1      1   14.0174    560001      2745         10            1       57)
(smt.stats   31   3932  72753 102043  4648/4374/251    4247/312    31  104   55.01)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4079  77025 107114  4690/4383/252    4423/347    32  104   55.12)
(smt.stats   33   4240  83469 118314  4704/4424/252    4592/347    32  104   55.12)
(smt.stats   34   4417  87062 127095  4708/4434/252    4772/347    32  104   55.12)
ramon: poll                 wall=8.000s usage=8.008s mem=57644KiB load=1.03 rootload=1.03
(smt.stats   35   4611  89847 133584  4711/4437/252    4994/347    32  104   55.22)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&201326592
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352256 >>l 42
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 352&402653184
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 352 := 27021597764352128 >>l 41
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 352&402653184
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 352 := 27021597764352128 >>l 41
(smt.stats   36   4712  91758 136983  4752/4438/252    5199/348    32  104   55.22)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&402653184
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352128 >>l 41
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&402653184
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 353 := 27021597764352128 >>l 41
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 353&25165824
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856225 := 27021597764352640 >>l 45
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 352&25165824
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856224 := 27021597764352640 >>l 45
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 335&25165824
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856207 := 27021597764352640 >>l 45
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 335&100663296
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856207 := 27021597764352384 >>l 43
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&100663296
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075855872 := 27021597764352384 >>l 43
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&100663296
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075855872 := 27021597764352384 >>l 43
(smt.stats   37   4823  93972 141696  4804/4495/262    5314/424    33  106   55.50)
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 335&50331648
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856207 := 27021597764352512 >>l 44
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 255&50331648
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075856127 := 27021597764352512 >>l 44
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 0&50331648
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #343) 64)) 144115188075855872 := 27021597764352512 >>l 44
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1024 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1024 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1152 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1024 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 1024 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 732 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 728 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 720 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 704 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 640 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 512 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 512 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 732 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 704 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 512 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 512 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 14847805021488317 := 211106232534004 >>l 37
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 14847805021488316 := 211106232534004 >>l 37
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 927987813842985 := 211106232534004 >>l 37
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 4 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 8 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1534 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1536 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1535 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1534 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 1532 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 8 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 16 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 32 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 64 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 128 := 1536&50331648
band: (band[57] (lshr[64] (* 128 #98) (mod #344 64)) (if (= #643 63) 885443715538058477568 (if #645 442721857769029238784 #769))) 0 := 1536&50331648
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #508 56) 3458764513820540928 (if #510 1729382256910270464 #620))) 256 := 1536&50331648
(smt.stats   38   4945  96662 146381  4958/4652/374    5484/430    33  106   56.00)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(sat.ddfw       1      1    12.873    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=9.006s mem=58268KiB load=1.00 rootload=0.99
(smt.stats   39   5079  99896 151044  5033/4720/377    5650/484    34  131   56.19)
ramon: poll                 wall=10.000s usage=10.004s mem=58544KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.8965    790001      3872         12            1       80)
ramon: poll                 wall=11.000s usage=11.007s mem=58560KiB load=1.00 rootload=1.00
(smt.stats   40   5226 102694 152982  5177/4789/378    5840/492    34  131   56.38)
(sat.ddfw       1      1   11.0582    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=12.005s mem=58816KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=13.004s mem=59140KiB load=1.00 rootload=1.00
(smt.stats   41   5387 105360 155250  5453/5068/379    6047/504    34  131   56.67)
(sat.ddfw       1      1   10.3245   1060001      5196         14            1      108)
ramon: poll                 wall=14.000s usage=14.004s mem=59372KiB load=1.00 rootload=1.00
(smt.stats   42   5564 110237 162501  5515/5213/383    6267/540    35  136   56.77)
(smt.stats   43   5758 116959 175241  5625/5296/385    6533/568    36  146   56.77)
(smt.stats   44   5971 124082 188301  5759/5465/388    6859/605    37  151   56.86)
ramon: poll                 wall=15.000s usage=15.003s mem=59400KiB load=1.00 rootload=1.00
(smt.stats   45   6072 126083 194069  5763/5469/388    6983/634    38  163   56.96)
(smt.stats   46   6183 130792 205641  5770/5474/389    7139/634    38  163   57.14)
(smt.stats   47   6305 133807 213904  5791/5492/390    7264/688    39  163   57.14)
(smt.stats   48   6439 137562 220660  5811/5513/393    7436/715    40  168   57.23)
(smt.stats   49   6586 143394 228560  5818/5520/394    7641/715    40  168   57.47)
(sat.ddfw       1      1    9.6893   1210001      5931         15            1      123)
(smt.stats   50   6747 149988 244330  5858/5527/394    7932/719    40  168   57.56)
(smt.stats   51   6924 153282 250919  6028/5594/396    8209/757    41  177   57.56)
ramon: poll                 wall=16.000s usage=16.001s mem=59756KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7118 160494 259150  6075/5739/398    8472/759    41  177   57.66)
ramon: poll                 wall=17.000s usage=17.007s mem=60008KiB load=1.01 rootload=1.00
(sat.ddfw       1      1   9.12149   1370001      6715         16            1      139)
ramon: poll                 wall=18.000s usage=18.004s mem=60100KiB load=1.00 rootload=1.00
(smt.stats   53   7331 168255 287321  6380/5854/398    8927/769    41  177   57.75)
(smt.stats   54   7565 172941 307943  6496/6198/401    9482/1022    43  200   57.85)
(smt.stats   55   7666 174926 311220  6521/6199/401    9642/1022    43  200   57.85)
ramon: poll                 wall=19.006s usage=19.008s mem=60232KiB load=1.00 rootload=1.00
(smt.stats   56   7777 177434 318868  6574/6236/401    9803/1022    43  200   57.94)
(smt.stats   57   7899 179663 324737  6658/6277/401    9968/1025    43  200   57.94)
(sat.ddfw       1      1   8.63032   1540001      7549         17            1      156)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8033 183187 337432  6731/6389/401   10175/1032    43  200   58.04)
ramon: poll                 wall=20.002s usage=20.081s mem=60536KiB load=1.08 rootload=1.07
ramon: end                  Fri Nov  1 22:17:28 2024
ramon: root.execname        z3
ramon: root.utime           20.140s
ramon: root.stime           0.000s
ramon: group.total          20.151s
ramon: group.utime          20.143s
ramon: group.stime          0.008s
ramon: group.mempeak        60796KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.00
