ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:00:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42035 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1261
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/IdwTkyd6G7Yv.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2899785
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   4119    596  1286/1107/104     124/19     2   16   19.14)
(smt.stats    1    202   6414   1267  1427/1288/110     237/44     4   17   19.44)
ramon: poll                 wall=1.000s usage=0.931s mem=20608KiB load=0.93 rootload=0.92
(smt.stats    2    313   6800   1494  1884/1683/110     358/46     5   25   19.63)
(smt.stats    3    414   8422   1876  2354/2133/110     484/47     5   25   19.83)
(smt.stats    4    525   9971   3305  3006/2757/122     555/86     8   47   19.93)
(smt.stats    5    647  13681   5092  3016/2771/122     671/86     8   47   20.05)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  16073   6480  3056/2786/122     781/88     8   47   20.05)
(smt.stats    7    859  18803   8470  3073/2829/124     896/102     9   54   20.23)
(smt.stats    8    981  20304  10427  3109/2864/132     987/102    11   70   20.23)
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 3 := 53&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 5 := 53&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 7 := 57&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 8 := 57&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 8 := 57&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 7 := 57&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 8 := 57&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 8 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 6 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 9 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 8 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 16 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 8 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 16 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 6 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 8 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 16 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 56 := 56&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 56 := 52 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 5 := 53&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 5 := 53&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 5 := 53&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 48 := 53&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 49 := 53&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 32 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 40 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 48 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 56 := 56&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 56 := 52 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 48 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 56 := 56&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 56 := 52 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 56 := 56&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 56 := 52 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 48 := 56&4503599627370495
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 56 := 56&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 56 := 52 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 0&4503599627370495
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 51 := 52 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 0&4503599627370495
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 1 := 52 << 52
(smt.stats    9   1115  24228  13794  3207/2953/201    1118/107    13   84   20.43)
ramon: poll                 wall=2.000s usage=1.931s mem=21700KiB load=1.00 rootload=1.00
(smt.stats   10   1216  26654  15869  3242/2970/201    1250/110    14   87   20.53)
(smt.stats   11   1327  29000  18237  3358/3096/203    1399/133    15   92   20.72)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  33026  22169  3380/3118/207    1520/167    17   95   20.84)
ramon: poll                 wall=3.000s usage=2.931s mem=22216KiB load=1.00 rootload=1.00
(smt.stats   13   1583  37282  25960  3496/3125/212    1680/175    17   95   21.03)
ramon: poll                 wall=4.000s usage=3.930s mem=22460KiB load=1.00 rootload=1.00
(smt.stats   14   1730  41125  28775  3624/3246/212    1843/217    18  104   21.23)
ramon: poll                 wall=5.000s usage=4.930s mem=22656KiB load=1.00 rootload=1.00
(smt.stats   15   1831  42692  30695  3802/3419/212    1977/217    18  104   21.23)
(smt.stats   16   1942  44466  32678  3948/3545/212    2134/219    18  104   21.32)
ramon: poll                 wall=6.000s usage=5.930s mem=22720KiB load=1.00 rootload=1.00
(smt.stats   17   2064  47913  35864  4031/3705/212    2315/224    18  104   21.42)
(smt.stats   18   2198  52227  39005  4253/3814/212    2521/224    18  104   21.51)
ramon: poll                 wall=7.000s usage=6.930s mem=22816KiB load=1.00 rootload=1.00
(smt.stats   19   2345  55708  42991  4446/4004/212    2689/227    18  104   21.61)
ramon: poll                 wall=8.000s usage=7.930s mem=23060KiB load=1.00 rootload=1.00
(smt.stats   20   2506  59925  48170  4670/4406/213    2959/317    19  108   21.70)
(smt.stats   21   2607  63716  53185  4728/4412/213    3070/320    19  108   21.70)
ramon: poll                 wall=9.000s usage=8.929s mem=23164KiB load=1.00 rootload=1.00
(smt.stats   22   2718  67959  58524  4851/4477/213    3239/323    19  108   21.80)
(smt.stats   23   2840  71263  62072  5089/4615/213    3385/323    19  108   21.80)
(smt.stats   24   2974  74688  67810  5154/4828/213    3639/324    19  108   21.89)
ramon: poll                 wall=10.000s usage=9.929s mem=23304KiB load=1.00 rootload=1.00
(smt.stats   25   3121  80186  77206  5164/4900/213    4006/324    19  108   21.89)
(smt.stats   26   3282  83293  86449  5221/4953/216    4249/584    20  116   21.99)
ramon: poll                 wall=11.000s usage=10.929s mem=23448KiB load=1.00 rootload=1.00
(smt.stats   27   3459  86476  93191  5350/4969/216    4678/596    20  116   22.09)
ramon: poll                 wall=12.000s usage=11.929s mem=23632KiB load=1.00 rootload=1.00
(smt.stats   28   3560  88809  97215  5409/5129/216    4874/596    20  116   22.09)
(smt.stats   29   3671  91800  99894  5521/5142/216    5005/598    20  116   22.18)
ramon: poll                 wall=13.000s usage=12.928s mem=23652KiB load=1.00 rootload=1.00
(smt.stats   30   3793  96255 106267  5720/5435/217    5208/813    21  121   22.28)
ramon: poll                 wall=14.000s usage=13.928s mem=23756KiB load=1.00 rootload=1.00
(smt.stats   31   3927 100092 112684  5786/5468/217    5380/815    21  121   22.28)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 104762 119021  5815/5547/222    5569/894    22  125   22.52)
(smt.stats   33   4235 113984 136285  5828/5560/222    5831/894    22  125   22.61)
(smt.stats   34   4412 122179 155069  5832/5564/222    6091/894    22  125   22.61)
(smt.stats   35   4606 127482 169357  5838/5570/224    6390/943    23  129   22.71)
(smt.stats   36   4707 131443 180783  5856/5584/224    6561/983    24  130   22.71)
(smt.stats   37   4818 135480 194051  5866/5586/224    6731/983    24  130   22.71)
(smt.stats   38   4940 138790 204510  5871/5599/225    6859/1043    25  134   22.71)
(smt.delete-inactive-clauses  :num-deleted-clauses 127)
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 19&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 19&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 22&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 20&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 20&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 24&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 16&15
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 16 := 1753 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 16&15
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 16 := 1753 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 16&15
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 16 := 1753 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 16&15
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 9007199254741008 := 1753 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 16&15
shl: (shl[64] (bv2int %0) (mod (+ #113 #788) 64)) 9007199254741008 := 1753 << 4
(smt.stats   39   5074 142960 216513  5910/5602/225    6957/1045    25  134   22.81)
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 3 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 6 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 4 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 8 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 597 := 1753 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 0 := 1753 << 4
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 15 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 14 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 12 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 1 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 2 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 12 := 28048&15
(smt.stats   40   5221 147667 229029  5960/5639/250    7242/1067    26  139   22.90)
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 1 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 2 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 8 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 8 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 1 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 2 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 8 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 8 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 4 := 28048&15
band: (band[53] (shl[64] (bv2int %0) (mod #789 64)) (if (= #803 63) 0 (if #805 1 #938))) 0 := 28048&15
band: (band[53] (shl[53] (bv2int %0) (mod #113 53)) (if (= #628 52) 1 (if #630 3 #778))) 4 := 28048&15
(smt.stats   41   5382 153355 242636  5993/5706/286    7415/1085    27  148   23.00)
(smt.stats   42   5559 159123 257540  6025/5741/293    7710/1106    28  156   23.09)
(smt.stats   43   5753 167341 281721  6059/5762/294    8097/1108    28  156   23.19)
ramon: poll                 wall=15.000s usage=14.928s mem=24676KiB load=1.00 rootload=0.99
(smt.stats   44   5966 176745 309944  6099/5803/295    8554/1187    30  180   23.28)
(smt.stats   45   6067 179035 317453  6118/5810/295    8712/1188    30  180   23.28)
(smt.stats   46   6178 185215 332012  6132/5835/295    8940/1188    30  180   23.73)
(smt.stats   47   6300 191004 348459  6145/5836/295    9191/1188    30  180   23.83)
(smt.stats   48   6434 194735 358402  6296/5879/295    9657/1191    30  180   23.92)
(smt.stats   49   6581 198260 367862  6305/5996/300    9887/1285    31  182   24.02)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 204452 384925  6333/6017/300   10281/1286    31  182   24.02)
(smt.stats   51   6919 210347 396871  6367/6034/300   10553/1349    32  186   24.12)
ramon: poll                 wall=16.000s usage=15.928s mem=25588KiB load=1.00 rootload=1.00
(smt.stats   52   7113 215458 417387  6397/6069/301   10847/1362    33  200   24.21)
(smt.stats   53   7326 222955 440142  6406/6094/301   11153/1362    33  200   24.31)
(smt.stats   54   7560 230599 470786  6410/6098/301   11663/1362    33  200   24.40)
(smt.stats   55   7661 232935 483094  6420/6108/301   12002/1362    33  200   24.50)
(smt.stats   56   7772 236376 498348  6422/6110/301   12234/1362    33  200   24.50)
(smt.stats   57   7894 241530 518029  6429/6117/301   12471/1362    33  200   24.50)
(smt.stats   58   8028 245965 537050  6472/6119/301   12740/1362    33  200   24.60)
(smt.stats   59   8175 251240 551447  6476/6164/301   12983/1362    33  200   24.60)
(smt.stats   60   8336 259454 584396  6476/6164/301   13391/1362    33  200   24.60)
ramon: poll                 wall=17.000s usage=16.928s mem=26100KiB load=1.00 rootload=1.00
(smt.stats   61   8513 264005 602713  6487/6167/301   13679/1362    33  200   24.69)
ramon: poll                 wall=18.000s usage=17.927s mem=26292KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.927s mem=26292KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.927s mem=26292KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:00:21 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.985s
ramon: group.stime          0.016s
ramon: group.mempeak        26292KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.00
