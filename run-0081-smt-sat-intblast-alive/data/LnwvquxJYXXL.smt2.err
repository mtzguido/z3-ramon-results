ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:16:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29230 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LnwvquxJYXXL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             379700
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   223/222     0/0  61       0    18.52   0.00)
(sat.stats    107    666    0   223/222   107/33  61       0    18.82   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 377 :time 0.00)
(sat.stats    107    666    0   223/222   107/33  61       0    18.82   0.00)
(sat.stats    107    666    0   223/222   107/33  61       0    18.82   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 384818.82 :time 0.00)
(sat.stats    107    666    0   223/222    65/33  61       0    18.82   0.01)
(sat.stats    154   2165    1   223/222   112/65  61       0    18.92   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    157   2292    2   223/222   115/65  61       0    18.92   0.01)
(sat.stats    160   2378    3   223/222   118/66  61       0    18.92   0.01)
(sat.stats    163   2480    4   223/222   121/66  61       0    18.92   0.01)
(sat.stats    166   2562    5   223/222   124/66  61       0    18.92   0.01)
(sat.stats    169   2647    6   223/222   127/66  61       0    18.92   0.01)
(sat.stats    172   2741    7   223/222   130/66  61       0    18.92   0.01)
(sat.stats    175   2842    8   223/222   133/66  61       0    18.92   0.01)
(sat.stats    178   2935    9   223/222   136/66  61       0    18.92   0.01)
(sat.stats    181   3028   10   223/222   139/66  61       0    18.92   0.01)
(sat.stats    184   3112   11   223/222   142/66  61       0    18.92   0.01)
(sat.stats    187   3218   12   223/222   145/67  61       0    18.92   0.01)
(sat.stats    211   4142   20   223/222   169/89  61       0    18.92   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2234 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    320   8016   23   265/264   276/139  69       0    19.48   0.43)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2982 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5331 :time 0.00)
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 17623 := 35184372088746 << 21
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 5368 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 5367 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 94592 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 112 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
shl: (shl[64] (bv2int %0) (mod (+ #54 #303) 64)) 1047473941456617467 := 35184372088746 << 21
(sat.stats    626  16784   48  1425/1423   592/219  74       0    20.22   0.72)
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 302592 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 212992 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 786432 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 524288 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 1048575 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 2 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 32768 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 65536 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 131072 := 1048575&35184191733760
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5687 :time 0.00)
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 34528 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 4 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 459544 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 111296 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 936960 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 623360 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 190464 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 114688 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 856064 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 131072 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 819200 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 262144 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 524288 := 35184191733760&1048575
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5861 :time 0.00)
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 66048 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 65536 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 8192 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 128 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 16 := 35184191733760&1048575
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 1048575&35184191733760
band: (band[45] (shl[64] (bv2int %0) (mod #304 64)) (if (or #701 #702) 0 (if #703 1 #842))) 2 := 35184191733760&1048575
(sat.stats    711  22051   61  1975/1972   676/242 238       0    21.50   0.81)
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 1028 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 96 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 64 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 256 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 1024 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 4096 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 2048 := 1048575&35184191733760
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 8192 := 1048575&35184191733760
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7134 :time 0.00)
 (sat-cleaner :elim-literals 11 :elim-clauses 0 :cost 7381 :time 0.00)
ramon: poll                 wall=1.000s usage=0.997s mem=26780KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 9 :elim-clauses 0 :cost 9378 :time 0.00)
 (sat-cleaner :elim-literals 27 :elim-clauses 0 :cost 9834 :time 0.00)
(sat.stats   1064  35352  121 58512/58507  1479/760 329       0    30.27   1.84)
ramon: poll                 wall=2.000s usage=1.997s mem=31548KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.997s mem=31684KiB load=1.00 rootload=1.00
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 35184281911294 := 35184372088789 << 19
ramon: poll                 wall=4.000s usage=3.996s mem=40596KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.996s mem=42372KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.996s mem=42924KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.995s mem=43488KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.995s mem=44048KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.995s mem=44644KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 11883 :time 0.00)
band: (band[45] (if (= #555 44) 0 (if #557 1 #680)) (shl[45] (bv2int %0) (mod #54 45))) 0 := 262143&35184349544448
shl: (shl[64] (bv2int %0) (mod (+ #54 #303) 64)) 18446744073619374080 := 35184372088789 << 19
ramon: poll                 wall=10.000s usage=9.995s mem=46020KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.995s mem=46024KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 7 :elim-clauses 2 :cost 12141 :time 0.00)
ramon: poll                 wall=12.000s usage=11.994s mem=46292KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.994s mem=46292KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=46296KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.994s mem=46300KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.994s mem=46300KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 31 :elim-clauses 0 :cost 12592 :time 0.00)
ramon: poll                 wall=17.000s usage=16.993s mem=46304KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.993s mem=46308KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.993s mem=46308KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.993s mem=46320KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:17:19 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.030s
ramon: group.total          20.003s
ramon: group.utime          19.971s
ramon: group.stime          0.032s
ramon: group.mempeak        46576KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
