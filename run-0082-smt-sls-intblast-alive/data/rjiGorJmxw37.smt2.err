ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:11:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27386 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1378
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rjiGorJmxw37.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             941052
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 127 := 72057594037927935&127
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 127 := 126 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 247 := 72057594037927935&247
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 247 := 246 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&367
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&367
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&368
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&367
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&368
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 1152921504606846976 := 366 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 17293822569102704640 := 486 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 1152921504606846976 := 1086 << 56
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   56.1798     10000        49          0            1        2)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&432345564227567616
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 603 << 57
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&432345564227567616
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 603 << 57
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&1008806316530991104
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 903 << 57
(sat.ddfw       1      1   30.1235     20001        98          1            1        3)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927935 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927934 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927932 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927928 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927920 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927904 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927872 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927808 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927680 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927832 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927828 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927824 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927808 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&1008806316530991104
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 126 := 1023 << 57
(smt.stats    0    101   3415    691  1390/1246/153      93/14     9   34   52.63)
(sat.ddfw       1      1   34.4234     40001       196          2            1        5)
(smt.stats    1    202   5708   2155  2678/2424/155     189/22    10   35   52.73)
ramon: poll                 wall=1.000s usage=0.815s mem=54932KiB load=0.82 rootload=0.80
(sat.ddfw       1      1   32.1543     70001       343          3            1        8)
(smt.stats    2    313   6701   3321  2808/2436/156     311/30    11   36   52.85)
(smt.stats    3    414   8087   5402  2905/2649/161     411/46    14   44   52.95)
(sat.ddfw       1      1   28.0308    110001       539          4            1       12)
(smt.stats    4    525  10957   6964  2954/2683/168     475/52    19   64   52.95)
(smt.stats    5    647  14802   9151  3124/2705/168     610/64    19   64   53.05)
ramon: poll                 wall=2.000s usage=1.786s mem=55380KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   24.8628    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16089  11741  3264/2879/168     720/73    19   64   53.05)
(smt.stats    7    859  16626  12815  3353/3024/168     833/83    19   64   53.35)
(sat.ddfw       1      1   21.5212    220001      1078          6            1       23)
(smt.stats    8    981  18222  15445  3723/3465/170    1064/146    20   64   53.35)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081121
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081152
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081122
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081122
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081920
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081920
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840082432
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840082432
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840082944
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081920
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840082432
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840088576
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840087776
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840087552
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840083968
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084480
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084138
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084136
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840083968
band: (band[60] (if (= #418 63) 0 ramon: poll                 (ifwall=3.000s usage=2.720s mem=55788KiB load=0.93 rootload=0.93 
#610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084480
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084480
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1408 := 576460752303423487&108086391056893100
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1408 := 576460752303423487&99079191802148012
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1444 := 576460752303423487&99079191802148012
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1444 := 576460752303423487&99079191802148064
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1408 := 576460752303423487&99079191802148032
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1408 := 576460752303423487&99079191802148032
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1472 := 576460752303423487&99079191802148032
(smt.stats    9   1115  20659  18550  3885/3575/271    1258/248    22   85   53.66)
(smt.stats   10   1216  20982  19136  4078/3640/296    1483/251    22   85   53.77)
(smt.stats   11   1327  22692  26505  4388/3957/296    1815/252    22   85   53.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28818  33996  4450/4161/296    2031/321    23   90   54.12)
(smt.stats   13   1583  33352  41616  4528/4255/300    2368/476    26  100   54.21)
(sat.ddfw       1      1   19.2044    290001      1421          7            1       30)
(smt.stats   14   1730  38528  52982  4654/4299/301    2642/586    27  100   54.50)
(smt.stats   15   1831  41112  68940  4834/4398/301    3064/591    27  100   54.61)
ramon: poll                 wall=4.000s usage=3.716s mem=56808KiB load=1.00 rootload=1.00
(smt.stats   16   1942  42844  78087  5169/4906/305    3431/737    28  108   54.71)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1 := 3&108086391056941448
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&108086391056941448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 108086391056941448 := 114 << 2
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&108086391056941448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 108086391056941448 := 114 << 2
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&108086391056941448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 108086391056941448 := 114 << 2
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 392 := 114 << 2
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 392 := 114 << 2
(smt.stats   17   2065  47325  86123  5255/4991/312    3794/803    29  120   54.81)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 4 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 4 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 4 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 2 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 2 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 3 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 1 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 2 := 3&456
(smt.stats   18   2199  53937  91314  5351/5048/350    4086/997    30  135   55.11)
(sat.ddfw       1      1    17.116    370001      1813          8            1       38)
(smt.stats   19   2346  61109  98891  5409/5097/350    4423/998    30  135   55.11)
ramon: poll                 wall=5.000s usage=4.633s mem=57596KiB load=0.92 rootload=0.91
(smt.stats   20   2507  68905 110980  5533/5252/352    4758/1160    32  138   55.40)
(smt.stats   21   2608  74545 125039  5608/5315/355    4892/1225    33  146   55.50)
(smt.stats   22   2719  80993 145789  5620/5318/357    5092/1229    35  158   55.67)
(sat.ddfw       1      1   15.7041    460001      2254          9            1       47)
(smt.stats   23   2841  84297 152464  5789/5426/359    5369/1237    35  158   55.76)
ramon: poll                 wall=6.000s usage=5.618s mem=58364KiB load=0.98 rootload=0.99
(smt.stats   24   2975  89788 169642  5836/5501/359    6074/1357    36  166   55.96)
(sat.ddfw       1      1    14.476    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=6.605s mem=58504KiB load=0.99 rootload=0.98
(smt.stats   25   3122  94878 188614  6024/5568/360    6493/1517    37  168   56.37)
ramon: poll                 wall=8.000s usage=7.582s mem=58784KiB load=0.98 rootload=0.98
(smt.stats   26   3283  99237 205996  6361/5783/360    6900/1526    37  168   56.47)
(sat.ddfw       1      1   13.4114    670001      3284         11            1       68)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3460 103159 230038  6514/6150/362    7526/1689    38  170   56.58)
(smt.stats   28   3561 108451 248596  6558/6257/363    7753/1775    39  257   56.67)
(smt.stats   29   3672 113853 272322  6558/6261/364    8090/1920    40  267   56.85)
ramon: poll                 wall=9.009s usage=8.559s mem=59356KiB load=0.97 rootload=0.97
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 4 := 288230376151711743&180143985094871042
(smt.stats   30   3794 116452 284971  6796/6262/364    8448/1928    40  267   56.94)
(smt.stats   31   3928 120358 314565  7059/6557/364    9126/1931    40  267   57.04)
(smt.stats   32   4075 126027 339571  7084/6788/372    9624/2360    41  278   57.15)
(sat.ddfw       1      1   12.4159    790001      3872         12            1       80)
(smt.stats   33   4236 134976 370542  7089/6793/372    9882/2360    41  278   57.15)
ramon: poll                 wall=10.000s usage=9.530s mem=59816KiB load=0.98 rootload=0.98
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 1&684547143360353802
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 684547143360353802 := 171136785840079436 << 1
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 1&684547143360345610
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 4143311657180886538 := 171136785840079436 << 1
(smt.stats   34   4413 139844 391031  7290/6814/373   10860/2576    42  278   57.60)
(smt.stats   35   4607 146224 426198  7350/7022/380   11671/2772    43  281   57.71)
(smt.stats   36   4708 148998 436661  7487/7090/380   12021/2794    44  303   57.92)
ramon: poll                 wall=11.000s usage=10.513s mem=60232KiB load=0.98 rootload=0.98
(smt.stats   37   4819 150989 444639  7645/7189/380   12258/2797    44  303   58.14)
(smt.stats   38   4941 154480 476192  7831/7523/382   13006/2875    45  305   58.23)
(sat.ddfw       1      1     11.57    920001      4509         13            1       93)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 161584 495032  7911/7531/382   13318/2882    45  305   58.46)
ramon: poll                 wall=12.000s usage=11.512s mem=60848KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.416s mem=60656KiB load=0.90 rootload=0.90
(sat.ddfw       1      1   10.7337   1060001      5196         14            1      108)
(smt.stats   40   5222 167231 512721  8063/7627/384   13579/3095    46  312   58.46)
(smt.stats   41   5383 175473 538576  8210/7795/390   13797/3180    47  323   58.55)
ramon: poll                 wall=14.000s usage=13.384s mem=61116KiB load=0.97 rootload=0.97
(smt.stats   42   5560 180772 559936  8293/7971/391   14387/3200    48  326   58.65)
(sat.ddfw       1      1   10.1221   1210001      5931         15            1      123)
ramon: poll                 wall=15.000s usage=14.364s mem=61216KiB load=0.98 rootload=0.98
(smt.stats   43   5754 187342 581942  8392/8002/391   15315/3201    48  326   58.74)
ramon: poll                 wall=16.000s usage=15.350s mem=61424KiB load=0.99 rootload=0.99
(smt.stats   44   5967 193724 621310  8502/8193/395   16134/3504    49  333   58.84)
(sat.ddfw       1      1   9.58428   1370001      6715         16            1      139)
(smt.stats   45   6068 197032 628358  8582/8206/396   16285/3505    49  333   58.84)
ramon: poll                 wall=17.000s usage=16.348s mem=61284KiB load=1.00 rootload=0.99
(smt.stats   46   6179 201643 648487  8672/8315/396   16553/3510    49  333   58.84)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6301 205795 662964  8736/8373/396   16939/3624    50  342   59.00)
ramon: poll                 wall=18.000s usage=17.428s mem=61608KiB load=1.08 rootload=1.08
(smt.stats   48   6435 209969 686795  8905/8464/396   17273/3628    50  342   59.68)
(sat.ddfw       1      1   9.21309   1540001      7549         17            1      156)
(smt.stats   49   6582 216172 726730  8930/8617/396   17672/3628    50  342   59.68)
ramon: poll                 wall=19.000s usage=18.450s mem=61840KiB load=1.02 rootload=1.02
(smt.stats   50   6743 221861 756450  9054/8630/397   18461/3834    51  344   59.90)
ramon: poll                 wall=20.000s usage=19.468s mem=61936KiB load=1.02 rootload=1.02
ramon: end                  Fri Nov  1 23:11:26 2024
ramon: root.execname        z3
ramon: root.utime           19.510s
ramon: root.stime           0.020s
ramon: group.total          19.533s
ramon: group.utime          19.513s
ramon: group.stime          0.020s
ramon: group.mempeak        62448KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              0.97
