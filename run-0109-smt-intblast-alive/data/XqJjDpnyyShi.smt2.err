ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:29:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41325 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1248
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/XqJjDpnyyShi.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2998495
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3074    595  1048/944/89      95/2     2   13   19.06)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 34359738367&2
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 34359738367&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 274877906944 := 549755813886 << 34
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 34359738367&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 274877906944 := 549755813886 << 34
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 34359738367&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 274877906944 := 549755813886 << 34
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1 := 34359738367&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1 := 6 << 34
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1 := 34359738367&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1 := 82 << 34
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 5 := 34359738367&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 5 := 6 << 34
(smt.stats    1    202   3604   1467  1778/1594/94     193/5     5   14   19.55)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352831
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352831
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352830
(smt.stats    2    313   7091   4396  2054/1854/101     305/15     7   17   19.55)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352831
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352830
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352828
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352831
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352830
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352831
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&19327352830
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&1
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&2
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&1
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&1
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&1
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1 := 274877906943&4
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 2 := 274877906943&4
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&4
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&8
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&4
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&16
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&16
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&32
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&32
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&16
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&64
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&16
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&64
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&128
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&64
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&128
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&256
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&64
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&128
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&256
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&512
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&512
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&128
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&1028
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 274877906943&1040
(smt.stats    3    414   7954   5171  2226/1935/133     442/21     8   19   19.85)
(smt.stats    4    525   9031   8547  2335/2147/233     552/59    12   78   19.85)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1374389534720 := 70 << 2
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1374389534720 := 70 << 2
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1374389534720 := 70 << 2
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1374389534720 := 70 << 2
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1374389534720 := 70 << 2
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1374389534720 := 70 << 2
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 37 #857 #859) 64)) 1374389534720 := 70 << 2
(smt.stats    5    647  11924  14309  2395/2206/241     944/152    16   87   20.15)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  15048  19262  2426/2236/242    1095/159    17   88   20.15)
(smt.stats    7    859  19511  27214  2445/2242/244    1198/215    18   92   20.15)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1073741823 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1073741823 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1073741823 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 128 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 128 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 128 := 1073741823&146028890240
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 128 := 1073741823&146028890240
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 1073741823&146028889728
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 128 := 1073741823&146028889728
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 128 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 3200 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 5248 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1073739774 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 5248 := 1073741823&146028889216
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1073739776 := 1073741823&146028889728
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1073739776 := 1073741823&146028889728
(smt.stats    8    981  22827  33582  2542/2344/298    1478/253    19   96   20.45)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 8320 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 8320 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 8832 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 49792 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 50156 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 50154 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 50154 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 50154 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 50152 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 50144 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 50048 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 50154 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 14584 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 14576 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 14560 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 14528 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 14552 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 24768 := 137438953471&146028888704
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 24768 := 137438953471&146028888704
(smt.stats    9   1115  24765  36796  2690/2344/298    1692/375    20  108   20.54)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 14720 := 137438953471&146028888704
(smt.stats   10   1216  26649  41923  2892/2550/333    1882/399    21  115   20.66)
(smt.stats   11   1327  28281  48607  3165/2804/333    2159/440    22  115   20.94)
(smt.stats   12   1449  28859  49865  3514/3067/333    2487/443    22  115   21.04)
(smt.stats   13   1583  33715  72401  3540/3347/336    3317/529    23  118   21.29)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 4 := 7&141733921784
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #115))) 137438953460 := 155155693695 << 3
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #115))) 137438953460 := 155155693695 << 3
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #115))) 141733921785 := 155155693695 << 3
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
band: (band[38] (if (= #119 37) 1 (if #536 3 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 7 := 7&141733921784
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
band: (band[38] (if (= #119 37) 1 (if #536 3 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 6 := 7&141733921784
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
band: (band[38] (if (= #119 37) 1 (if #536 3 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 4 := 7&141733921784
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #115))) 141733921777 := 155155693695 << 3
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
shl: (shl[38] (bv2int %0) (+ 38 (* 274877906943 #115))) 141733921777 := 155155693695 << 3
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
band: (band[38] (if (= #119 37) 1 (if #536 3 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1 := 7&141733921784
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
band: (band[38] (if (= #119 37) 1 (if #536 3 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 1 := 7&141733921784
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
band: (band[38] (if (= #119 37) 1 (if #536 3 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 2 := 7&141733921784
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 7&141733921784
band: (band[38] (if (= #119 37) 1 (if #536 3 #639)) (shl[38] (bv2int %0) (+ 38 #642))) 4 := 7&141733921784
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   14   1730  38640  86838  3626/3386/339    3504/1060    25  121   21.39)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 1 := 7&141733921784
(smt.stats   15   1831  40826  97155  3645/3432/376    3716/1062    25  121   21.49)
ramon: poll                 wall=1.000s usage=0.942s mem=22820KiB load=0.94 rootload=0.92
(smt.stats   16   1942  45863 123798  3749/3530/382    4249/1237    27  141   21.59)
(smt.stats   17   2064  49365 132473  3819/3540/384    4554/1246    27  141   21.78)
(smt.stats   18   2198  53838 140079  3909/3623/384    4966/1446    28  169   21.78)
(smt.stats   19   2345  60804 165587  3965/3712/385    5452/1575    29  171   21.97)
(smt.stats   20   2508  64169 190462  4003/3784/386    5745/1749    30  177   21.97)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 68719476735&146028896329
(smt.stats   21   2609  66914 198351  4107/3828/386    5896/1752    30  177   22.22)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 68719476735&146028904522
(smt.stats   22   2720  68286 202396  4305/3894/386    6265/1752    30  177   22.22)
(smt.stats   23   2842  72561 223288  4320/4077/387    7226/1813    31  181   22.41)
(smt.stats   24   2976  77861 245650  4350/4109/387    7543/1813    31  181   22.51)
ramon: poll                 wall=2.000s usage=1.942s mem=24324KiB load=1.00 rootload=1.00
(smt.stats   25   3123  81906 266718  4362/4121/392    8513/2072    33  206   22.70)
(smt.stats   26   3284  88952 284717  4375/4132/393    8744/2129    34  240   22.82)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 0 := 65535&141733921376
(smt.stats   27   3461  94541 306753  4403/4135/393    9064/2133    34  240   23.04)
(smt.stats   28   3562  97671 316450  4406/4161/399    9200/2141    35  241   23.04)
(smt.stats   29   3673 101208 330690  4418/4173/399    9412/2142    35  241   23.15)
(smt.stats   30   3795 105778 354004  4456/4190/400    9797/2225    36  242   23.15)
(smt.stats   31   3929 109397 364096  4636/4219/400   10310/2229    36  242   23.25)
(smt.stats   32   4076 112735 374818  4824/4406/400   11019/2312    37  252   23.34)
(smt.stats   33   4237 117647 391083  4972/4612/400   11685/2317    37  252   23.54)
ramon: poll                 wall=3.000s usage=2.941s mem=24984KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   34   4414 124922 437231  5022/4777/404   13013/2592    38  280   23.63)
(smt.stats   35   4608 131791 462860  5056/4798/404   14592/2597    38  280   23.92)
(smt.stats   36   4709 137119 495523  5097/4819/405   14759/2789    39  292   23.92)
(smt.stats   37   4820 140508 512500  5265/4857/407   15333/2793    39  292   24.13)
ramon: poll                 wall=4.000s usage=3.941s mem=25752KiB load=1.00 rootload=1.00
(smt.stats   38   4942 143436 528723  5450/5037/407   15912/2841    40  300   24.13)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076 148610 549186  5523/5222/408   16970/2842    40  300   24.33)
(smt.stats   40   5223 153863 566687  5612/5289/408   17379/3002    41  303   24.43)
(smt.stats   41   5384 157922 573546  5786/5397/408   17869/3004    41  303   24.52)
ramon: poll                 wall=5.004s usage=4.945s mem=26024KiB load=1.00 rootload=1.00
(smt.stats   42   5561 161327 585784  5955/5625/408   18505/3011    41  303   24.73)
(smt.stats   43   5755 166897 608684  6217/5740/408   19774/3017    41  303   24.91)
(smt.stats   44   5968 172381 625356  6331/5999/408   20225/3020    41  303   25.01)
ramon: poll                 wall=6.000s usage=5.940s mem=26612KiB load=1.00 rootload=1.00
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 606903 := 274877906943&150323832327
(smt.stats   45   6069 174499 634441  6416/6120/408   20875/3022    41  303   25.01)
(smt.stats   46   6180 176735 647946  6598/6222/413   21330/3629    42  304   25.14)
(smt.stats   47   6302 179863 666330  6823/6410/413   21799/3629    42  304   25.23)
(smt.stats   48   6436 183620 683331  7084/6644/413   22288/3631    42  304   25.33)
(smt.stats   49   6583 187139 711402  7128/6881/414   23010/3724    43  304   25.52)
(smt.stats   50   6744 192403 740265  7184/6899/415   23300/3724    43  304   25.61)
ramon: poll                 wall=7.000s usage=6.928s mem=27280KiB load=0.99 rootload=0.99
(smt.stats   51   6921 195175 754576  7509/6940/415   23765/4085    44  332   25.71)
(smt.stats   52   7115 199415 774822  7747/7289/415   24645/4094    44  332   25.80)
(smt.stats   53   7328 203940 791306  7870/7574/415   24994/4094    44  332   26.00)
ramon: poll                 wall=8.000s usage=7.927s mem=27480KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   54   7562 208954 800942  7947/7644/415   25392/4097    44  332   26.00)
(smt.stats   55   7663 211757 819851  8035/7742/415   25844/4098    44  332   26.09)
(smt.stats   56   7774 216386 847214  8079/7790/415   26447/4099    44  332   26.09)
(smt.stats   57   7896 220795 855532  8234/7847/415   26850/4102    44  332   26.19)
(smt.stats   58   8030 226241 896273  8275/8000/415   27553/4105    44  332   26.34)
ramon: poll                 wall=9.004s usage=8.931s mem=27736KiB load=1.00 rootload=1.00
(smt.stats   59   8177 233196 944636  8385/8035/415   28117/4109    44  332   26.34)
(smt.stats   60   8338 238468 988647  8681/8154/415   28742/4111    44  332   26.55)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   61   8515 242504 1019966  8860/8568/417   30119/4907    45  336   26.74)
ramon: poll                 wall=10.000s usage=9.925s mem=28384KiB load=1.00 rootload=0.99
(smt.stats   62   8709 245838 1040030  9300/8640/417   31063/4910    45  336   27.03)
(smt.stats   63   8922 249173 1071975  9749/9097/417   32109/4917    45  336   27.12)
ramon: poll                 wall=11.000s usage=10.925s mem=28808KiB load=1.00 rootload=1.00
(smt.stats   64   9156 254576 1099701  9964/9519/417   33265/5221    46  341   27.33)
(smt.stats   65   9413 263563 1159353 10460/9756/417   34585/5222    46  341   27.53)
(smt.stats   66   9514 265386 1168257 10491/10243/417   34932/5222    46  341   27.62)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   67   9625 269485 1206836 10495/10248/418   35306/5617    47  345   27.62)
ramon: poll                 wall=12.004s usage=11.928s mem=29308KiB load=1.00 rootload=1.01
(smt.stats   68   9747 275629 1267350 10520/10255/419   35915/5619    47  345   27.72)
(smt.stats   69   9881 279876 1313652 10547/10297/419   36361/5857    48  349   27.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 2633)
(smt.stats   70  10028 284326 1365491 10553/10306/419   35461/5857    48  349   27.81)
(smt.stats   71  10189 288854 1396965 10757/10310/419   35879/5861    48  349   27.92)
(smt.stats   72  10366 294351 1456256 10826/10532/419   36294/5862    48  349   28.01)
ramon: poll                 wall=13.000s usage=12.924s mem=29760KiB load=1.00 rootload=0.99
(smt.stats   73  10560 300007 1534338 10904/10588/419   37325/5864    48  349   28.01)
(smt.stats   74  10773 303669 1543179 10951/10670/419   37567/5864    48  349   28.12)
(smt.stats   75  11007 306884 1572271 10959/10712/419   38161/5864    48  349   28.21)
(smt.stats   76  11264 313687 1614576 10989/10726/419   38855/5864    48  349   28.21)
(smt.stats   77  11546 321606 1699433 11002/10755/419   39848/5864    48  349   28.31)
(smt.stats   78  11647 323474 1709161 11005/10758/419   40140/5864    48  349   28.31)
(smt.stats   79  11758 326825 1765165 11010/10763/419   40695/5864    48  349   28.40)
ramon: poll                 wall=14.000s usage=13.924s mem=30080KiB load=1.00 rootload=1.00
(smt.stats   80  11880 331922 1801066 11014/10767/419   41571/5864    48  349   28.55)
(smt.stats   81  12014 334808 1826125 11026/10775/419   42220/5866    48  349   28.64)
(smt.stats   82  12161 340187 1857936 11104/10793/419   42776/5870    48  349   28.64)
(smt.stats   83  12322 348307 1887960 11174/10898/419   43051/5875    48  349   28.74)
(smt.stats   84  12499 354536 1934604 11331/10968/419   43934/5879    48  349   28.83)
ramon: poll                 wall=15.000s usage=14.923s mem=30436KiB load=1.00 rootload=1.00
(smt.stats   85  12693 362168 1990019 11394/11093/419   44887/5880    48  349   28.83)
(smt.stats   86  12906 369245 2042984 11527/11159/419   45836/5882    48  349   29.03)
ramon: poll                 wall=16.004s usage=15.927s mem=30828KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   87  13140 373777 2084404 11679/11310/421   47908/7871    49  366   29.22)
(smt.stats   88  13397 380559 2162160 12147/11520/421   50070/7875    49  366   29.52)
ramon: poll                 wall=17.004s usage=16.927s mem=31516KiB load=1.00 rootload=1.00
(smt.stats   89  13679 386252 2229268 12309/11965/423   51798/8120    50  386   29.80)
(smt.stats   90  13989 393471 2309917 12525/12123/423   53299/8124    50  386   30.00)
(smt.stats   91  14090 395911 2340153 12538/12290/423   53706/8494    51  391   30.00)
(smt.stats   92  14201 397816 2349192 12591/12303/423   53996/8495    51  391   30.09)
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 388336 := 17179869183&467192
band: (band[38] (if (or #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 ...) 0 (if #680 1 #754)) (shl[64] (* 2 #113) (mod #860 64))) 388344 := 17179869183&467192
(smt.stats   93  14323 399748 2366868 12766/12363/423   54960/8496    51  391   30.09)
ramon: poll                 wall=18.000s usage=17.922s mem=31840KiB load=1.00 rootload=0.99
(smt.stats   94  14457 403422 2407903 12932/12575/424   55799/8497    51  391   30.28)
(smt.stats   95  14604 407219 2450751 13053/12703/424   56934/8497    51  391   30.28)
(smt.stats   96  14765 412120 2478686 13277/12818/424   57982/8784    52  396   30.50)
ramon: poll                 wall=19.000s usage=18.922s mem=32244KiB load=1.00 rootload=1.00
(smt.stats   97  14942 416944 2530222 13554/13063/424   58898/8785    52  396   30.69)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15136 421748 2579062 13866/13362/424   59811/8786    52  396   30.88)
ramon: poll                 wall=20.000s usage=19.918s mem=32852KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:29:49 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.978s
ramon: group.utime          19.954s
ramon: group.stime          0.024s
ramon: group.mempeak        34876KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.00
