ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:33:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41189 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/a14cauCZrwu1.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3010770
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4544    978  1091/982/92      95/7     5   13   18.96)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&29
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&29
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 5 := 15&5
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 5 := 4 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 5 := 15&5
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 5 := 4 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 5 := 15&5
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 5 := 4 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&1
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&2
(smt.stats    1    202   6003   1504  1600/1419/101     181/10     7   23   19.15)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&1
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 15&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 1 := 4398046511086 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 15&2
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 15&2
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 2 := 4398046511086 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&2
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&2
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&8
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 16 := 46 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&736
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 45 := 46 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&736
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 45 := 46 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&736
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 45 := 46 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&736
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 45 := 46 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 15&736
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 45 := 46 << 4
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 15 := 15&736
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 14 := 15&736
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 4 := 15&736
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 8 := 15&736
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 9 := 15&736
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 12 := 15&736
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 15&736
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 8 := 15&736
(smt.stats    2    313   7723   3747  2017/1602/164     289/39     9   38   19.54)
(smt.stats    3    414   8951   5807  2034/1835/185     378/57    14   50   19.64)
(smt.stats    4    525  10430   9000  2096/1885/188     492/64    16   76   19.73)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 2199023255551&2199023255558
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 20 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 36 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 132 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 20 := 2199023255551&2199023255558
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 20 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 20 := 2199023255551&2199023255572
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 2199023255572 := 83 << 41
(smt.stats    5    647  13435  13938  2233/1964/203     574/81    18  132   20.03)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 100 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 132 := 2199023255551&2199023255558
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 260 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 580 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 644 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 1028 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 1028 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 132 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 132 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 132 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 196 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 196 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 196 := 2199023255551&2199023255558
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 196 := 2199023255551&2199023255558
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 132 := 2199023255551&2199023255556
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 4 := 2199023255551&2199023255556
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 2199023255556 := 16777235 << 41
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 4 := 2199023255551&2199023255556
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 2199023255556 := 16777235 << 41
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748  14744  15574  2395/2102/246     733/89    19  143   20.32)
(smt.stats    7    859  18624  21637  2428/2183/256     885/102    20  155   20.32)
(smt.stats    8    981  20818  26751  2449/2223/267    1110/174    23  172   20.41)
(smt.stats    9   1115  24357  30991  2469/2242/269    1293/188    24  173   20.51)
(smt.stats   10   1216  27265  36782  2477/2250/269    1399/188    24  173   20.51)
(smt.stats   11   1327  30966  41885  2492/2255/270    1504/202    25  182   20.61)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  32982  44991  2600/2365/274    1744/212    26  182   20.70)
(smt.stats   13   1583  35418  49221  2694/2368/276    2009/287    27  194   20.80)
(smt.stats   14   1730  37926  56879  2815/2476/276    2256/290    27  194   20.89)
ramon: poll                 wall=1.000s usage=0.991s mem=22264KiB load=0.99 rootload=0.97
(smt.stats   15   1831  39245  60906  2914/2589/277    2455/352    28  196   20.99)
(smt.stats   16   1942  40534  65635  2954/2719/284    2669/409    29  199   20.99)
(smt.stats   17   2064  41398  69547  2961/2726/289    2844/409    29  199   20.99)
(smt.stats   18   2198  42567  74975  2963/2731/289    3016/460    30  221   20.99)
(smt.stats   19   2345  45009  81087  2979/2747/290    3186/478    31  229   20.99)
(smt.stats   20   2506  46480  88134  3006/2774/290    3394/478    31  229   21.09)
(smt.stats   21   2607  48828  95272  3056/2788/292    3495/511    32  230   21.09)
(smt.stats   22   2718  51146 104567  3102/2843/292    3625/514    32  230   21.19)
(smt.stats   23   2840  52746 112988  3123/2891/292    3743/531    33  230   21.33)
(smt.stats   24   2974  55794 121103  3154/2922/297    3858/535    34  237   21.33)
(smt.stats   25   3121  60084 132800  3177/2945/297    3992/535    34  237   21.33)
(smt.stats   26   3282  63308 138266  3417/2945/297    4032/569    35  467   21.43)
(smt.stats   27   3459  67922 158276  3528/3266/297    4312/569    35  467   21.43)
(smt.stats   28   3560  70735 165119  3532/3300/297    4438/569    35  467   21.43)
(smt.stats   29   3671  72342 169264  3592/3300/297    4648/571    35  467   21.54)
(smt.stats   30   3793  73638 172514  3908/3462/297    4926/572    35  467   21.54)
(smt.stats   31   3927  76505 188060  4104/3696/297    5409/575    35  467   21.63)
ramon: poll                 wall=2.000s usage=1.990s mem=23132KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  79166 200099  4142/3880/298    6012/899    36  477   21.73)
(smt.stats   33   4235  82305 211865  4335/3928/298    6526/902    36  477   21.92)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 18704 := 524287&2932031009712
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 18704 := 524287&2932031011728
(smt.stats   34   4412  84452 224612  4587/4124/298    6900/903    36  477   22.02)
(smt.stats   35   4606  88874 237856  4688/4377/303    7332/1177    37  478   22.02)
(smt.stats   36   4707  92254 249045  4755/4499/303    7497/1313    38  478   22.11)
ramon: poll                 wall=3.000s usage=2.990s mem=23616KiB load=1.00 rootload=1.00
(smt.stats   37   4818  95937 267043  4865/4524/303    7670/1314    38  478   22.30)
(smt.stats   38   4940  98509 279146  5096/4864/305    7956/1456    39  484   22.30)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   39   5074 100362 284619  5218/4872/305    8239/1463    39  484   22.49)
(smt.stats   40   5221 103922 301509  5479/5051/305    8708/1463    39  484   22.59)
(smt.stats   41   5382 108751 334829  5669/5270/305    9120/1464    39  484   22.68)
(smt.stats   42   5559 113646 360900  5720/5453/305    9429/1468    39  484   22.68)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 1024 := 4095&4217
(smt.stats   43   5753 116867 376889  5928/5494/305    9958/1472    39  484   22.68)
(smt.stats   44   5966 120021 402585  6094/5761/305   10471/1473    39  484   22.78)
(smt.stats   45   6067 121682 413199  6113/5881/305   10875/1473    39  484   22.78)
ramon: poll                 wall=4.000s usage=3.989s mem=24260KiB load=1.00 rootload=1.00
(smt.stats   46   6178 123948 420325  6161/5882/305   11032/1475    39  484   22.88)
(smt.stats   47   6300 125581 433235  6385/5997/305   11248/1483    39  484   22.97)
(smt.stats   48   6434 128344 448694  6492/6156/305   11677/1484    39  484   22.97)
(smt.stats   49   6581 131605 461557  6555/6284/305   11979/1486    39  484   22.97)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 274877906816 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 274877906816 := 274877906943&3811640310656
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 274877906816 := 274877906943&3811640310144
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 274877906816 := 274877906943&3811640310144
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 274877906816 := 274877906943&3811640310400
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 274877906816 := 274877906943&3811640310400
(smt.stats   50   6742 134879 475331  6724/6329/305   12366/1498    39  484   23.16)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147484800 := 274877906943&3811640310144
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147484800 := 274877906943&3811640310144
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147484800 := 274877906943&3811640310144
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147484800 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147484800 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147488896 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147486848 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147486848 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147484800 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147486848 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147486848 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147482752 := 274877906943&3811640310912
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 2147290240 := 274877906943&3811640310912
(smt.stats   51   6919 137145 491631  7123/6658/361   12775/2087    40  487   23.37)
(smt.stats   52   7113 141250 512984  7193/6953/363   13239/2087    40  487   23.46)
(smt.stats   53   7326 145958 528733  7350/6960/363   13589/2278    41  503   23.56)
ramon: poll                 wall=5.000s usage=4.989s mem=25140KiB load=1.00 rootload=1.00
(smt.stats   54   7560 150522 552168  7569/7325/364   14456/2502    42  509   23.66)
(smt.stats   55   7661 151317 556384  7583/7338/364   14583/2503    42  509   24.13)
(smt.stats   56   7772 152054 559050  8069/7736/364   14712/2503    42  509   24.13)
(smt.stats   57   7894 152323 560007  8192/7955/364   14835/2503    42  509   24.42)
(smt.stats   58   8028 153805 569644  8764/8532/366   15051/2574    43  517   24.32)
ramon: poll                 wall=6.000s usage=5.988s mem=25952KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8175 158857 599879  8804/8548/366   15505/2577    43  517   24.32)
(smt.stats   60   8336 162927 621136  8878/8621/366   15915/2578    43  517   24.42)
(smt.stats   61   8513 166412 634771  9141/8901/367   16821/2979    44  524   24.51)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 127&2186
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 1565704557955210 := 183425302669 << 7
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 127&2186
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 1565704557955210 := 183425302669 << 7
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 127&2186
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 1565704557955210 := 183425302669 << 7
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 127&3210
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 1565704557956234 := 183425302711 << 7
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 127&3210
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 1477743627734154 := 183425302711 << 7
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 127&3210
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 1477743627734154 := 183484022785 << 7
(smt.stats   62   8707 171297 652237  9351/9075/373   17750/2984    44  524   24.85)
(smt.stats   63   8920 177644 695287  9372/9130/376   18525/3895    45  550   24.95)
(smt.stats   64   9154 182629 729809  9390/9137/376   18795/3895    45  550   24.95)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 26 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 24 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 24 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 24 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 88 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 88 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 280 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 280 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 536 := 68719476735&792
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 792 := 68719476735&792
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 792 := 792 << 36
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 792 := 68719476735&792
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 792 := 792 << 36
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 792 := 68719476735&792
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 792 := 792 << 36
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 792 := 68719476735&792
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 792 := 792 << 36
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 792 := 68719476735&792
shl: (shl[64] (bv2int %0) (mod (+ #109 #909) 64)) 792 := 792 << 36
(smt.stats   65   9411 188981 766170  9465/9157/376   19231/3939    46  558   25.14)
(smt.stats   66   9512 190706 776799  9494/9248/386   19650/4012    47  560   25.14)
ramon: poll                 wall=7.000s usage=6.988s mem=26596KiB load=1.00 rootload=0.99
(smt.stats   67   9623 195378 808494  9502/9256/386   20311/4012    47  560   25.14)
(smt.stats   68   9745 198914 831546  9503/9257/386   20564/4412    48  560   25.40)
(smt.stats   69   9879 203756 853742  9504/9258/386   20798/4412    48  560   25.40)
(smt.delete-inactive-clauses  :num-deleted-clauses 681)
(smt.stats   70  10026 207242 888967  9519/9269/386   20531/4412    48  560   25.40)
(smt.stats   71  10187 211782 910164  9790/9276/386   21109/4412    48  560   25.49)
(smt.stats   72  10364 214538 931509 10289/9568/386   22311/4413    48  560   25.68)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10558 217818 959754 10452/10204/387   23010/4978    49  564   25.88)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 2199023255551&2199023255552
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 2895411937349 := 167 << 41
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 2895403548620 := 167 << 41
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8388607 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8388608 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 16777216 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 16777216 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 33554432 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 67108864 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 134217728 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 134217728 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 268435456 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 536870912 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 1073741824 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 2147483648 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 4294967296 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8589934592 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 17179869184 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 34359738368 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 68719476736 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 137438953472 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 274877906944 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 549755813888 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 1099511627776 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 549755813888 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 1099511627776 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 134217728 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 268435456 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 1073741824 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 2147483648 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 268435456 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 268435456 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 1073741824 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 1073741824 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 268435456 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 268435456 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 268435456 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 536870912 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 4294967296 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 17179869184 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8589934592 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 274877906944 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 68719476736 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 34359738368 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 137438953472 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 67108862 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 67108860 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 33554432 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8388608 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 16777216 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 16777216 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 16777216 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8388608 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8388607 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 67108868 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 67108864 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 1099511627776 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 549755813888 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 2 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8388600 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 8388592 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 32 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 64 := 2199023255552&2199023255551
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 128 := 2199023255552&2199023255551
(smt.stats   74  10771 221060 978921 10799/10350/484   23399/4994    49  564   26.86)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2199023255551&2199023255552
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #586 41) 1 (if #588 3 #702))) 1560 := 2199023255552&2199023255551
ramon: poll                 wall=8.000s usage=7.988s mem=28524KiB load=1.00 rootload=0.99
(smt.stats   75  11005 224865 1023603 11001/10737/646   24306/5225    50  620   26.95)
(smt.stats   76  11262 235363 1073096 11086/10810/652   25199/5657    51  665   27.26)
(smt.stats   77  11544 250412 1107633 11152/10858/655   26299/5808    52  673   27.45)
ramon: poll                 wall=9.000s usage=8.987s mem=29376KiB load=1.00 rootload=1.00
(smt.stats   78  11645 253052 1114683 11407/10925/655   26482/5810    52  673   27.64)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   79  11756 255717 1125692 11570/11154/655   26843/5811    52  673   27.95)
(smt.stats   80  11878 261206 1145328 11622/11321/655   27167/5811    52  673   28.04)
(smt.stats   81  12012 265033 1168189 11656/11352/657   27939/6135    53  678   28.36)
(smt.stats   82  12159 273487 1194579 11661/11357/657   28505/6135    53  678   28.36)
ramon: poll                 wall=10.000s usage=9.987s mem=30120KiB load=1.00 rootload=1.00
(smt.stats   83  12320 280532 1236137 11669/11364/658   29074/6315    54  687   28.47)
(smt.stats   84  12497 288581 1267731 11693/11380/658   29448/6315    54  687   28.66)
(smt.stats   85  12691 302228 1318419 11701/11392/658   29850/6424    55  696   28.66)
(smt.stats   86  12904 315693 1376588 11740/11408/658   30560/6429    55  696   28.75)
ramon: poll                 wall=11.000s usage=10.985s mem=30808KiB load=1.00 rootload=1.00
(smt.stats   87  13138 328060 1439909 11820/11443/659   31623/6493    56  707   29.04)
(smt.stats   88  13395 345124 1514820 11909/11584/660   32668/6592    57  708   29.13)
(smt.stats   89  13677 353606 1568173 11948/11639/666   33896/6834    58  725   29.23)
ramon: poll                 wall=12.000s usage=11.985s mem=31092KiB load=1.00 rootload=1.00
(smt.stats   90  13987 365442 1638503 11964/11655/667   34789/7035    59  776   30.02)
(smt.stats   91  14088 371248 1669578 12150/11794/667   35911/7035    59  776   30.41)
(smt.stats   92  14199 380341 1713896 12160/11807/668   36596/7035    59  776   30.41)
(smt.stats   93  14321 393044 1771617 12183/11809/668   37128/7035    59  776   30.50)
ramon: poll                 wall=13.000s usage=12.984s mem=32384KiB load=1.00 rootload=1.00
(smt.stats   94  14455 403592 1815106 12241/11888/671   37776/7152    60  777   30.60)
(smt.stats   95  14602 408318 1847193 12305/11931/673   38585/7154    60  777   30.79)
band: (band[42] (if (or #718 #719 #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733 ...) 0 (if #741 1 #821)) (shl[64] (bv2int %0) (mod #910 64))) 32 := 2199023255551&2199023255552
(smt.stats   96  14763 414934 1889306 12346/11991/676   39615/7238    61  809   30.89)
(smt.stats   97  14940 420677 1929902 12384/12029/677   40834/7238    61  809   31.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 61)
ramon: poll                 wall=14.000s usage=13.984s mem=33324KiB load=1.00 rootload=1.00
(smt.stats   98  15134 430159 1988015 12404/12047/679   41613/7238    61  809   31.49)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   99  15347 446833 2070528 12451/12050/679   42405/7637    62  830   31.49)
ramon: poll                 wall=15.002s usage=14.984s mem=33468KiB load=1.00 rootload=1.00
(smt.stats  100  15581 460301 2129757 12506/12126/680   43860/7771    63  834   31.68)
(smt.stats  101  15838 475326 2177784 12569/12170/680   44990/7773    63  834   31.78)
(smt.stats  102  16120 491927 2236474 12614/12248/680   45937/7773    63  834   31.87)
ramon: poll                 wall=16.000s usage=15.983s mem=33780KiB load=1.00 rootload=1.00
(smt.stats  103  16430 509216 2321203 12877/12283/681   46902/8170    64  834   32.26)
ramon: poll                 wall=17.000s usage=16.983s mem=34328KiB load=1.00 rootload=1.00
(smt.stats  104  16770 529834 2430496 12907/12537/681   48005/8170    64  834   32.35)
(smt.stats  105  16871 535083 2453270 12991/12543/681   48403/8172    64  834   32.45)
ramon: poll                 wall=18.000s usage=17.983s mem=34456KiB load=1.00 rootload=1.00
(smt.stats  106  16982 539641 2470155 13114/12668/681   48903/8177    64  834   32.54)
(smt.stats  107  17104 547300 2493909 13167/12763/681   49389/8179    64  834   32.54)
(smt.stats  108  17238 559147 2556045 13285/12815/681   49744/8181    64  834   32.64)
ramon: poll                 wall=19.000s usage=18.983s mem=34592KiB load=1.00 rootload=1.00
(smt.stats  109  17385 571030 2605786 13481/13058/682   50228/8499    65  835   32.84)
(smt.stats  110  17546 576815 2635592 13544/13174/684   51218/8499    65  835   32.94)
(smt.stats  111  17723 586361 2665343 13635/13184/684   51560/8507    65  835   33.03)
ramon: poll                 wall=20.000s usage=19.983s mem=34880KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:33:32 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.997s
ramon: group.utime          19.961s
ramon: group.stime          0.036s
ramon: group.mempeak        35136KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
