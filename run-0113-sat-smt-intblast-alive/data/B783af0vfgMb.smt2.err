ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:15:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41072 MiB
ramon: sys.mem.avail        61383 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/B783af0vfgMb.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3727948
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   256/256     0/0  67       0    18.62   0.01)
(sat.stats    115    860    0   256/256   115/42  67       0    18.91   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 310 :time 0.00)
(sat.stats    115    860    0   256/256   115/42  67       0    18.91   0.01)
(sat.stats    115    860    0   256/256   115/42  67       0    18.91   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 417818.91 :time 0.00)
(sat.stats    115    860    0   258/258    51/41  67       0    18.91   0.01)
(sat.stats    304   2053    1   258/258   240/160  67       0    19.21   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    308   2057    2   258/258   244/160  67       0    19.21   0.02)
(sat.stats    311   2063    3   258/258   247/163  67       0    19.21   0.02)
(sat.stats    314   2074    4   258/258   250/166  67       0    19.21   0.02)
(sat.stats    317   2100    5   258/258   253/169  67       0    19.21   0.02)
(sat.stats    320   2141    6   258/258   256/172  67       0    19.21   0.02)
(sat.stats    344   2534    7   258/258   280/187  67       0    19.21   0.02)
(sat.stats    347   2570    8   258/258   283/189  67       0    19.21   0.02)
(sat.stats    350   2630    9   258/258   286/190  67       0    19.21   0.02)
(sat.stats    354   2704   10   258/258   290/191  67       0    19.21   0.02)
(sat.stats    357   2750   11   258/258   293/192  67       0    19.21   0.02)
(sat.stats    360   2806   12   258/258   296/193  67       0    19.21   0.02)
(sat.stats    363   2829   13   258/258   299/196  67       0    19.21   0.02)
(sat.stats    366   2847   14   258/258   302/198  67       0    19.21   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3288 :time 0.00)
(sat.stats    501   4120   26   281/281   434/266  76       0    19.79   0.07)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4356 :time 0.00)
lshr: (lshr[62] (bv2int %0) (mod (bv2int %0) 62)) 0 := 94 >>l 32
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 0&187379984933847040
lshr: (lshr[64] (* 4 (bv2int %0)) (mod (+ 2 #59 #339) 64)) 376 := 376 >>l 34
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4616 :time 0.00)
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 1&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 1 := 1&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 1 := 2&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 1 := 3&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 3&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 2 := 3&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 5&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 4 := 5&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 9&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 8 := 9&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 2 := 19&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 19&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 16 := 19&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 35&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 32 := 35&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 67&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 64 := 67&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 131&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 128 := 131&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 269&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 256 := 269&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 533&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 512 := 533&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 1029&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 1024 := 1029&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 2053&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 2048 := 2053&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 4099&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 4096 := 4099&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 8207&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 8192 := 8207&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 16391&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 16384 := 16391&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 32775&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 32768 := 32775&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 65557&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 65536 := 65557&187379984933847040
band: (band[62] (lshr[62] (bv2int %0) (mod #59 62)) (if (= #496 61) 10507911847345967123698114538428694528 (if #498 5253955923672983561849057269214347264 #618))) 0 := 131091&187379984933847040
band: (band[62] (lshr[64] (* 4 #59) (mod #340 64)) (if (= #641 63) 84063294778767736989584916307429556224 (if #643 42031647389383868494792458153714778112 #767))) 131072 := 131091&187379984933847040
ramon: poll                 wall=1.000s usage=0.907s mem=24668KiB load=0.91 rootload=0.89
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1200  18515   37  9056/9055  1405/625  91       0    23.61   0.94)
(sat.stats   1203  18525   38  9209/9208  1409/626  91       0    23.71   0.94)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 24233 :time 0.00)
(sat.stats   1629  25485  131 50388/50387  1904/810 216       0    26.78   1.78)
ramon: poll                 wall=2.000s usage=1.905s mem=28208KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 28419 :time 0.00)
ramon: poll                 wall=3.000s usage=2.902s mem=28424KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.899s mem=44768KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.899s mem=61676KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.899s mem=67864KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.898s mem=73196KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.898s mem=95464KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.898s mem=98796KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.898s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.897s mem=103MiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.897s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.897s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.897s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.896s mem=112MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.896s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.896s mem=116MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.896s mem=117MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.895s mem=119MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.895s mem=120MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:16:17 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.050s
ramon: group.total          19.987s
ramon: group.utime          19.927s
ramon: group.stime          0.060s
ramon: group.mempeak        121MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.092s
ramon: loadavg              0.99
