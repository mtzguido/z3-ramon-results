ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:14:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28629 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1378
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KOOgcsMws9tm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             752762
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&76
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&76
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&72
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 72 := 78 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 67 := 160468094503&68
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 66 := 160468094503&68
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813896 := 549755813958 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813896 := 549755813958 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813896 := 549755813958 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 8 := 160468094503&16
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 16 := 160468094503&64
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 32 := 160468094503&64
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 35 := 160468094503&64
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   99.0099     10000        49          0            1        2)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 32 := 160468094503&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813928 := 549755813958 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 35 := 160468094503&40
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 32 := 160468094503&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813928 := 549755814036 << 38
(smt.stats    0    101   3021    597  1142/1022/140      89/15     8   27   52.16)
(smt.stats    1    202   4257   2363  1975/1780/148     199/33    12   33   52.25)
(smt.stats    2    313   6210   4209  1999/1803/154     315/32    14   42   52.36)
(sat.ddfw       1      1   51.0255     20001        98          1            1        3)
(smt.stats    3    417   7937   7203  2003/1807/155     421/36    15   43   52.46)
(smt.stats    4    528   9916   8736  2025/1827/163     520/42    17   49   52.46)
(smt.stats    5    650  13680  11831  2027/1830/167     646/60    19   58   52.46)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    751  15849  14673  2051/1834/169     753/66    20   62   52.56)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 274877906947 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 1 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 274877906947 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 274877906947 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 274877906947 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 601 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 601 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 1 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 2&277025390592
(sat.ddfw       1      1   51.4139     40001       196          2            1        5)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 2&277025390592
(smt.stats    7    862  17512  17556  2140/1923/212     888/75    21   63   52.84)
(sat.ddfw       1      1   44.7094     70001       343          3            1        8)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 1 := 2&274877907048
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2199023255552 := 204078055424 << 1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 1649267441664 := 204078055424 << 1
(smt.stats    8    984  19257  19743  2251/2039/226    1048/90    23   78   53.03)
(smt.stats    9   1118  24001  25502  2322/2097/228    1224/114    24   95   53.14)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 76516 := 76517&392682724442
ramon: poll                 wall=1.000s usage=0.937s mem=55232KiB load=0.94 rootload=0.93
(smt.stats   10   1219  27345  30185  2391/2162/231    1373/143    26   97   53.14)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948531880
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2514971787432 := 1041059807232 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179392
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179392
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179424
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146181120
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146181152
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146181216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2513169436768 := 962542436352 << 17
(sat.ddfw       1      1   37.9867    110001       539          4            1       12)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948531880
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2514971787432 := 1041059807232 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948532000
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948532000
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948532000
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948532000
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948536224
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2514971791776 := 1041059807232 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 288 := 76517&315948535968
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 288 := 76517&315948535840
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948535840
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948535840
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948536096
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948536096
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948536352
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2514971791904 := 1040925589512 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 8 := 76517&315950891008
(smt.stats   11   1330  29339  34337  2541/2301/294    1554/162    27  103   53.65)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 8 := 76517&315950891008
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 8 := 76517&315950891008
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315961114624
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 315961114402 := 9593904 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315961114624
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 315961114402 := 9593904 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315961114624
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 315961114402 := 9593904 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315971338240
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 314337919018 := 9593943 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315961114624
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 315961114406 := 9593904 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&262144
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 76517&262144
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  31437  39217  2586/2357/317    1818/203    29  123   53.75)
(sat.ddfw       1      1   35.2354    160000       784          5            1       17)
(smt.stats   13   1586  37061  46498  2607/2367/318    1972/203    29  123   53.85)
(smt.stats   14   1733  43000  55697  2639/2382/318    2152/226    30  129   53.95)
ramon: poll                 wall=2.000s usage=1.984s mem=56068KiB load=1.05 rootload=1.03
(sat.ddfw       1      1   30.0757    220001      1078          6            1       23)
(smt.stats   15   1834  44428  57155  2749/2407/318    2303/227    30  129   54.24)
(smt.stats   16   1945  46086  60841  2943/2640/318    2526/227    30  129   54.34)
(sat.ddfw       1      1   26.3653    290001      1421          7            1       30)
(smt.stats   17   2067  48932  67468  2971/2739/318    2759/227    30  129   54.34)
ramon: poll                 wall=3.000s usage=2.980s mem=56624KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.4192    370001      1813          8            1       38)
(smt.stats   18   2201  53195  78712  3069/2782/321    2972/331    32  131   54.53)
ramon: poll                 wall=4.000s usage=3.983s mem=56764KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.0526    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.981s mem=57132KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.1608    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.979s mem=57140KiB load=1.00 rootload=0.99
(smt.stats   19   2348  55676  82132  3441/2991/321    3145/341    32  131   54.62)
(sat.ddfw       1      1   17.5887    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.973s mem=57144KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   16.2338    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.973s mem=57144KiB load=1.00 rootload=1.00
(smt.stats   20   2509  56439  83272  3761/3315/321    3324/366    33  132   54.72)
(sat.ddfw       1      1   15.0742    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.973s mem=57152KiB load=1.00 rootload=0.99
(smt.stats   21   2610  57736  84885  3908/3610/321    3499/369    33  132   54.81)
ramon: poll                 wall=10.000s usage=9.973s mem=57224KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.0788   1060001      5196         14            1      108)
(smt.stats   22   2721  59174  90914  4024/3698/321    3640/372    33  132   55.10)
ramon: poll                 wall=11.000s usage=10.967s mem=57408KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   13.2054   1210001      5931         15            1      123)
(smt.stats   23   2843  61467  95639  4524/4002/321    3829/390    33  132   55.23)
ramon: poll                 wall=12.000s usage=11.966s mem=57484KiB load=1.00 rootload=1.00
(smt.stats   24   2977  63871 102667  4688/4317/321    4105/397    33  132   55.32)
(smt.stats   25   3124  68649 114523  4723/4469/322    4402/565    34  137   55.42)
(smt.stats   26   3285  72919 127996  4749/4495/322    4674/566    34  137   55.42)
(sat.ddfw       1      1   12.4291   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=12.967s mem=57704KiB load=1.00 rootload=1.00
(smt.stats   27   3462  76901 139495  4845/4514/323    4917/628    35  144   55.52)
(smt.stats   28   3563  79308 145143  4868/4624/323    5106/628    35  144   55.52)
(smt.stats   29   3674  83146 152387  4985/4628/323    5297/630    35  144   55.52)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755032359
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755032359
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755032871
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755033143
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755032871
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755033127
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755033127
(smt.stats   30   3796  85887 161169  5241/4768/323    5554/636    35  144   55.71)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&208305742071
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&208305742063
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233970691 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626752515 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626752515 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626752515 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626753539 := 80234047251&208305746151
ramon: poll                 wall=14.000s usage=13.963s mem=58064KiB load=1.00 rootload=1.00
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626755587 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626757635 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626757635 := 80234047251&208305746151
(smt.stats   31   3930  88562 171665  5548/5228/364    5987/722    37  152   55.90)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  92530 183231  5587/5334/366    6558/722    37  152   56.22)
(sat.ddfw       1      1   11.7436   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=14.966s mem=58660KiB load=1.00 rootload=1.00
(smt.stats   33   4238  96811 196987  5773/5508/368    7180/848    38  165   56.31)
(smt.stats   34   4415 100997 204178  5897/5539/369    7558/1037    39  168   56.41)
ramon: poll                 wall=16.000s usage=15.962s mem=58756KiB load=1.00 rootload=0.99
(smt.stats   35   4609 107643 226766  6058/5810/375    8221/1267    41  198   56.50)
(sat.ddfw       1      1    11.131   1720001      8431         18            1      174)
(smt.stats   36   4710 110561 240440  6098/5843/375    8410/1267    41  198   56.60)
(smt.stats   37   4821 115059 259354  6114/5859/375    8715/1267    41  198   56.60)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4943 117929 272335  6137/5882/381    9064/1455    42  210   56.83)
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   39   5077 124062 281296  6148/5889/381    9320/1455    42  210   56.83)
(smt.stats   40   5224 130638 308068  6157/5901/381    9651/1455    42  210   56.83)
(smt.stats   41   5385 136723 333071  6167/5909/381    9915/1636    43  227   56.93)
ramon: poll                 wall=17.000s usage=17.211s mem=59452KiB load=1.25 rootload=1.26
(smt.stats   42   5562 141924 354665  6187/5931/385   10371/1684    44  233   57.16)
(smt.stats   43   5756 149454 380146  6197/5941/385   10654/1684    44  233   57.16)
(sat.ddfw       1      1   10.7759   1910001      9362         19            1      193)
ramon: poll                 wall=18.024s usage=18.436s mem=59604KiB load=1.20 rootload=1.19
(smt.stats   44   5969 155593 402167  6308/5945/385   11150/1777    45  249   57.37)
(smt.stats   45   6070 159587 413969  6328/6072/386   11540/1884    46  254   57.37)
(smt.stats   46   6181 164360 436251  6334/6078/387   11764/1893    47  270   57.37)
(smt.stats   47   6303 167066 446627  6477/6080/387   12120/1898    47  270   57.37)
(smt.stats   48   6437 167909 453396  6949/6292/387   12482/1900    47  270   57.69)
(smt.stats   49   6584 171307 461887  6968/6712/389   12887/1900    47  270   57.78)
ramon: poll                 wall=19.000s usage=19.408s mem=60044KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   10.2918   2110001     10343         20            1      214)
(smt.stats   50   6745 178304 489051  7044/6720/389   13163/2054    48  310   57.88)
(smt.stats   51   6922 183714 520109  7149/6828/389   13518/2058    48  310   57.88)
ramon: poll                 wall=20.004s usage=20.409s mem=60224KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:14:56 2024
ramon: root.execname        z3
ramon: root.utime           20.430s
ramon: root.stime           0.020s
ramon: group.total          20.458s
ramon: group.utime          20.434s
ramon: group.stime          0.024s
ramon: group.mempeak        60736KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              1.02
