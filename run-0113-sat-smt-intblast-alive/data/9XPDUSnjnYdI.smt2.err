ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:11:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41517 MiB
ramon: sys.mem.avail        61384 MiB
ramon: sys.nprocs           1323
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9XPDUSnjnYdI.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3714834
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   234/234     0/0  63       0    18.52   0.00)
(sat.stats    107    598    0   234/234   107/36  63       0    18.84   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 279 :time 0.00)
(sat.stats    107    598    0   234/234   107/36  63       0    18.84   0.01)
(sat.stats    107    598    0   234/234   107/36  63       0    18.84   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 379218.84 :time 0.00)
(sat.stats    107    598    0   236/236    46/35  63       0    18.84   0.01)
(sat.stats    116    680    1   236/236    55/42  63       0    18.84   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    119    732    2   236/236    58/42  63       0    18.84   0.01)
(sat.stats    143   1882    3   236/236    82/63  63       0    18.94   0.03)
(sat.stats    146   2054    4   236/236    85/63  63       0    18.94   0.03)
(sat.stats    149   2195    5   236/236    88/64  63       0    18.94   0.03)
(sat.stats    152   2336    6   236/236    91/65  63       0    18.94   0.03)
(sat.stats    155   2513    7   236/236    94/65  63       0    18.94   0.03)
(sat.stats    158   2595    8   236/236    97/66  63       0    18.94   0.03)
(sat.stats    161   2724    9   236/236   100/66  63       0    18.94   0.03)
(sat.stats    164   2844   10   236/236   103/66  63       0    18.94   0.03)
(sat.stats    167   2978   11   236/236   106/66  63       0    18.94   0.03)
(sat.stats    170   3092   12   236/236   109/66  63       0    18.94   0.04)
(sat.stats    209   4668   25   236/236   148/93  63       0    18.94   0.06)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2045 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    345   9375   28   369/369   284/130  64       0    19.71   0.26)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3402 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3863 :time 0.00)
 (sat-cleaner :elim-literals 96 :elim-clauses 1 :cost 4246 :time 0.00)
(sat.stats    503  12102   34  1430/1430   461/165  75       0    20.10   0.53)
lshr: (lshr[51] (bv2int %1) (mod (bv2int %0) 51)) 2251799813685247 := 2251799813685247 >>l 45
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 1&821795017214016
lshr: (lshr[64] (* 8192 (bv2int %1)) (mod (+ 13 #53 #292) 64)) 0 := 288230376151711744 >>l 58
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 1&821795017214016
band: (band[51] (lshr[64] (* 8192 #61) (mod #293 64)) (if (= #596 63) 13217608433268267330748305211654144 (if #598 6608804216634133665374152605827072 #722))) 1 := 1&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 1 := 2&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 2&821795017214016
band: (band[51] (lshr[64] (* 8192 #61) (mod #293 64)) (if (= #596 63) 13217608433268267330748305211654144 (if #598 6608804216634133665374152605827072 #722))) 2 := 2&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 2 := 4&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 2 := 6&821795017214016
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 5323 :time 0.00)
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 11&821795017214016
band: (band[51] (lshr[64] (* 8192 #61) (mod #293 64)) (if (= #596 63) 13217608433268267330748305211654144 (if #598 6608804216634133665374152605827072 #722))) 4 := 11&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 4 := 11&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 11&821795017214016
band: (band[51] (lshr[64] (* 8192 #61) (mod #293 64)) (if (= #596 63) 13217608433268267330748305211654144 (if #598 6608804216634133665374152605827072 #722))) 8 := 11&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 4 := 6&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 6&821795017214016
band: (band[51] (lshr[64] (* 8192 #61) (mod #293 64)) (if (= #596 63) 13217608433268267330748305211654144 (if #598 6608804216634133665374152605827072 #722))) 4 := 6&821795017214016
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6887 :time 0.00)
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 38&821795017214016
band: (band[51] (lshr[64] (* 8192 #61) (mod #293 64)) (if (= #596 63) 13217608433268267330748305211654144 (if #598 6608804216634133665374152605827072 #722))) 16 := 38&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 16&821795017214016
band: (band[51] (lshr[64] (* 8192 #61) (mod #293 64)) (if (= #596 63) 13217608433268267330748305211654144 (if #598 6608804216634133665374152605827072 #722))) 16 := 16&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 0 := 32&821795017214016
band: (band[51] (lshr[64] (* 8192 #61) (mod #293 64)) (if (= #596 63) 13217608433268267330748305211654144 (if #598 6608804216634133665374152605827072 #722))) 32 := 32&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 8 := 10&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 16 := 16&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 32 := 50&821795017214016
band: (band[51] (lshr[51] (bv2int %1) (mod #53 51)) (if (= #473 50) 806738795975846394698993238016 (if #475 403369397987923197349496619008 #573))) 1 := 31&821795017214016
ramon: poll                 wall=1.000s usage=0.869s mem=23100KiB load=0.87 rootload=0.85
(sat.stats   1127  32966   83  6432/6431  1161/257 140       0    22.19   1.08)
(sat.stats   1130  33151   84  6432/6431  1168/262 140       0    22.19   1.08)
ramon: poll                 wall=2.000s usage=1.869s mem=27200KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.869s mem=29396KiB load=1.00 rootload=1.00
(sat.stats   1605  51661  138 36576/36575  1738/370 140       0    30.12   3.74)
ramon: poll                 wall=4.000s usage=3.868s mem=30832KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.868s mem=32168KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.868s mem=33712KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.867s mem=47132KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.867s mem=64364KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.867s mem=68848KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.867s mem=72544KiB load=1.00 rootload=1.00
(sat.stats   2397  63793  382 100811/100810  3625/1515 140       0    71.48  10.00)
ramon: poll                 wall=11.000s usage=10.867s mem=91700KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.866s mem=93964KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.866s mem=96196KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.866s mem=99072KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.866s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.857s mem=101MiB load=0.99 rootload=0.99
ramon: poll                 wall=17.000s usage=16.857s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.857s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.856s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.856s mem=108MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:11:49 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.050s
ramon: group.total          19.957s
ramon: group.utime          19.901s
ramon: group.stime          0.056s
ramon: group.mempeak        108MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.101s
ramon: loadavg              0.99
