ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:47:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39864 MiB
ramon: sys.mem.avail        61376 MiB
ramon: sys.nprocs           1317
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xENp9qWtPW6u.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             4000468
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   238/238     0/0  69       0    18.52   0.00)
(sat.stats    102    609    0   238/238   102/31  69       0    18.86   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 269 :time 0.00)
(sat.stats    102    609    0   238/238   102/31  69       0    18.86   0.01)
(sat.stats    102    609    0   238/238   102/31  69       0    18.86   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 372018.86 :time 0.00)
(sat.stats    102    609    0   240/240    38/30  69       0    18.86   0.01)
(sat.stats    168   1703    1   240/240   104/84  69       0    18.95   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    171   1771    2   240/240   107/84  69       0    18.95   0.01)
(sat.stats    174   1836    3   240/240   110/84  69       0    18.95   0.01)
(sat.stats    177   1912    4   240/240   113/84  69       0    18.95   0.01)
(sat.stats    180   1981    5   240/240   116/84  69       0    18.95   0.01)
(sat.stats    183   2047    6   240/240   119/84  69       0    18.95   0.01)
(sat.stats    186   2114    7   240/240   122/84  69       0    18.95   0.01)
(sat.stats    189   2181    8   240/240   125/84  69       0    18.95   0.01)
(sat.stats    192   2250    9   240/240   128/84  69       0    18.95   0.01)
(sat.stats    195   2291   10   240/240   131/87  69       0    18.95   0.01)
(sat.stats    198   2325   11   240/240   134/90  69       0    18.95   0.01)
(sat.stats    201   2381   12   240/240   137/93  69       0    18.95   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    210   2601   15   240/240   146/101  69       0    18.95   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2430 :time 0.00)
(sat.stats    323   4801   21   296/296   259/144  75       0    19.82   0.12)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2908 :time 0.00)
(sat.stats    588   8868   46  2033/2033   542/182  80       0    20.23   0.83)
ramon: poll                 wall=1.000s usage=0.937s mem=21532KiB load=0.94 rootload=0.92
(sat.stats    759  14809   75  3251/3251   719/193  80       0    20.42   1.08)
ramon: poll                 wall=2.000s usage=1.936s mem=22812KiB load=1.00 rootload=1.00
(sat.stats   1157  47634  110  6450/6450  1210/269  80       0    21.29   2.23)
(sat.stats   1599  61939  156  7192/7192  1696/493  80       0    21.62   2.47)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 13585 :time 0.00)
ramon: poll                 wall=3.000s usage=2.936s mem=23324KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.936s mem=24092KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.936s mem=25432KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units        :memory       )
(sat.stats   3509 132434  218 15945/15945  3672/674  83       0    25.60   5.39)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 23339 :time 0.00)
(sat.stats   3774 138104  226 17126/17126  3939/839  83       0    25.69   5.50)
ramon: poll                 wall=6.000s usage=5.936s mem=26756KiB load=1.00 rootload=1.00
(sat.stats   5394 178527  475 19398/19398  5017/1166  83       0    26.32   6.72)
ramon: poll                 wall=7.000s usage=6.936s mem=27268KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.936s mem=28160KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.935s mem=28416KiB load=1.00 rootload=1.00
(sat.stats   8122 289132  892 24538/24538  6763/1482  83       0    27.62   9.04)
 (sat-cleaner :elim-literals 16 :elim-clauses 4 :cost 46701 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 48157 :time 0.00)
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 0&47
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #610 #614) 64)) 9007199248936960 := 9007199248936960 >>l 63
 (sat-cleaner :elim-literals 31 :elim-clauses 8 :cost 48783 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 49228 :time 0.00)
ramon: poll                 wall=10.000s usage=9.935s mem=28928KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 53958 :time 0.00)
ramon: poll                 wall=11.003s usage=10.939s mem=29440KiB load=1.00 rootload=1.01
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 55916 :time 0.00)
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #74))) 807453859824 := 807453859824 >>l 19
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 0&807453851648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #610 #614) 64)) 9007199254722473 := 0 >>l 29
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 1 := 1&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 2 := 2&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 4 := 4&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 8 := 8&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 16 := 16&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 32 := 32&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 64 := 64&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 128 := 128&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 256 := 256&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 512 := 512&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 1024 := 1024&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 2048 := 2048&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 4096 := 4096&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 8192 := 8192&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 16384 := 16384&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 32768 := 32768&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 65536 := 65536&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 131072 := 131072&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 262144 := 262144&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 524288 := 524288&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 1048576 := 1048576&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 2097152 := 2097152&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 4194304 := 4194304&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 8388608 := 8388608&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 16777216 := 16777216&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 33554432 := 33554432&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 67108864 := 67108864&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 134217728 := 134217728&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 268435456 := 268435456&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 536870912 := 536870912&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 1073741824 := 1073741824&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 2147483648 := 2147483648&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 4294967296 := 4294967296&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 8589934592 := 8589934592&807453851648
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 25917 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 65464 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 225686 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 477300 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 16 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 621408 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 1273600 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 128 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 64 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 13242368 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 512 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 3072 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 2048 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 76455936 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 199376896 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 57147392 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 425984 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 458752 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 262144 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 131072 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 13187940352 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 1767899136 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 771751936 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 12582912 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 25165824 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 16777216 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 7247757312 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 201326592 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 134217728 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 15569256448 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 15032385536 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 1073741824 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 8589934592 := 807453851648&17179869183
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #493)) (if (= #97 52) 211669182486413312 (if #497 105834591243206656 #599))) 0 := 17179869183&807453851648
band: (band[53] (if (= #325 63) 433498485732174462976 (if #469 216749242866087231488 #466)) (lshr[64] (* 1024 #72) (mod #617 64))) 4294967296 := 807453851648&17179869183
ramon: poll                 wall=12.000s usage=11.935s mem=33024KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.935s mem=34044KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.935s mem=34392KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.934s mem=34648KiB load=1.00 rootload=1.00
(sat.stats  13178 419123 1197 50680/50677  9688/1980 520       0    34.26  15.49)
ramon: poll                 wall=16.000s usage=15.934s mem=40024KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.922s mem=41848KiB load=0.99 rootload=0.98
ramon: poll                 wall=18.000s usage=17.922s mem=43124KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.003s usage=18.926s mem=44404KiB load=1.00 rootload=1.01
ramon: poll                 wall=20.000s usage=19.921s mem=45940KiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 16:47:53 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.989s
ramon: group.utime          19.953s
ramon: group.stime          0.036s
ramon: group.mempeak        46196KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.067s
ramon: loadavg              1.00
