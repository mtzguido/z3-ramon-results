ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:24:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         16163 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1183
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1228474.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1353590
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
tabu (if (and (bvsle bv[4294967295:32] #20155) (not #23406)) (bvadd bv[1:32] (if #20153 bv[0:32] v511944940)) (if (and #10482 #12689) bv[0:32] v511944940))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      91      3   99.0099     10000         0          0           91      351)
(sat.ddfw      56     41    78.186     20086         0          1          175      453)
(sat.ddfw      56    123   110.619     40108         0          2          142      727)
(sat.ddfw      49     82   114.324     70061         0          3          114     1131)
(sat.ddfw      40    113    106.88    110034         0          4          152     1837)
(sat.ddfw      38     13   96.2736    160000         0          5            6     2414)
(sat.ddfw      32    114   87.0261    220048         1          6           84     3429)
(sat.ddfw      25    109   78.7596    290144         1          7          117     4306)
ramon: poll                 wall=1.000s usage=0.992s mem=23476KiB load=0.99 rootload=0.99
(sat.ddfw      25    542   70.7943    370000         2          8           35     5077)
(sat.ddfw      24    329   64.7482    460000         3          9           23     5955)
(sat.ddfw      23    458   58.1739    560001         3         10          142     6556)
ramon: poll                 wall=2.000s usage=1.992s mem=23524KiB load=1.00 rootload=1.00
(sat.ddfw      14     23   53.7044    670095         4         11          116     7632)
(sat.ddfw      14    805   48.9099    790022         5         12           91     8681)
(sat.ddfw      14   1025   45.6063    920000         6         13           54     9892)
ramon: poll                 wall=3.000s usage=2.991s mem=23524KiB load=1.00 rootload=1.00
(sat.ddfw      14   1025   42.4193   1060026         7         14           88    10732)
(sat.ddfw      14   1025   39.3426   1210000         7         15           65    12007)
ramon: poll                 wall=4.000s usage=3.991s mem=23588KiB load=1.00 rootload=1.00
(sat.ddfw      14   1025   36.9089   1370000         7         16           20    14008)
(sat.ddfw       8   1009   34.7783   1540031         9         17           90    15287)
ramon: poll                 wall=5.000s usage=4.990s mem=23588KiB load=1.00 rootload=1.00
(sat.ddfw       8   1025   33.3029   1720000        10         18          109    20774)
ramon: poll                 wall=6.000s usage=5.990s mem=23588KiB load=1.00 rootload=0.99
(sat.ddfw       8   1025   31.6391   1910088        12         19          122    22809)
(sat.ddfw       8   1025   29.9353   2110026        13         20           39    24773)
ramon: poll                 wall=7.000s usage=6.989s mem=23588KiB load=1.00 rootload=1.00
(sat.ddfw       8   1025   28.5459   2320010        14         21          114    27318)
ramon: poll                 wall=8.000s usage=7.989s mem=23588KiB load=1.00 rootload=1.00
(sat.ddfw       8   1025   27.0123   2540079        14         22           60    28513)
(sat.ddfw       8   1025   25.9714   2770082        15         23           94    30944)
ramon: poll                 wall=9.000s usage=8.980s mem=23588KiB load=0.99 rootload=0.99
(sat.ddfw       8   1025   25.9076   3010012        15         24          183    52101)
(sat.ddfw       3    493   25.4934   3260000        15         25           36    59831)
ramon: poll                 wall=10.000s usage=9.979s mem=23588KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   24.7879   3520000        17         26           29    63990)
ramon: poll                 wall=11.000s usage=10.979s mem=23604KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   23.6186   3790008        18         27           74    65922)
ramon: poll                 wall=12.000s usage=11.978s mem=23604KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   22.6861   4070000        21         28           13    69434)
ramon: poll                 wall=13.000s usage=12.978s mem=23604KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   21.9521   4360141        22         29          159    83179)
ramon: poll                 wall=14.000s usage=13.974s mem=23604KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025    21.099   4660000        23         30           57    86264)
ramon: poll                 wall=15.000s usage=14.974s mem=23604KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   20.1587   4970000        25         31           33    88741)
ramon: poll                 wall=16.000s usage=15.974s mem=23604KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025    19.426   5290063        28         32           62    92144)
ramon: poll                 wall=17.000s usage=16.973s mem=23604KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   18.6344   5620022        29         33           70    94897)
ramon: poll                 wall=18.000s usage=17.973s mem=23604KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.973s mem=23604KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   17.8688   5960154        30         34          133    98360)
ramon: poll                 wall=20.000s usage=19.973s mem=23604KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:25:04 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.986s
ramon: group.utime          19.986s
ramon: group.stime          0.000s
ramon: group.mempeak        23864KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
