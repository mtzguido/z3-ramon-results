ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:40:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28017 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Xci09FA8ZAfM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             840925
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    70.922     10000        49          0            1        2)
(sat.ddfw       1      1   36.1047     20001        98          1            1        3)
(smt.stats    0    101   3461    447  1246/1071/105     110/17     3   16   51.98)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2475 := 2476&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2474 := 2476&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2464 := 2468&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2468 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2464 := 2468&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2468 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2464 := 2468&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2468 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421310&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421310&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421308&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421296&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421279&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421280&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421248&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421056&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421310&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 0&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421312 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 49152 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 0&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 18446181123756130304 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 0&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421312 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
(smt.stats    1    202   7163   1879  1573/1422/147     212/56     6   33   52.28)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 4094&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 4094 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 4094&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 4094 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 4&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 4&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 4 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 2&1
(sat.ddfw       1      1   36.9004     40001       196          2            1        5)
(smt.stats    2    313  10302   3203  1792/1625/185     323/68    10   51   52.48)
(smt.stats    3    414  10949   3846  2270/2041/196     420/124    13   63   52.87)
(smt.stats    4    525  13757   5764  2344/2106/198     525/131    15   70   52.96)
ramon: poll                 wall=1.000s usage=0.941s mem=55252KiB load=0.94 rootload=0.93
(sat.ddfw       1      1   31.7797     70001       343          3            1        8)
(smt.stats    5    647  17751   7697  2416/2167/199     659/137    16   70   53.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  21567   9908  2798/2465/199     799/144    16   70   53.35)
(smt.stats    7    859  27161  13057  2836/2562/202     920/163    18   75   53.35)
(smt.stats    8    981  29822  16549  2866/2589/211    1063/190    20   93   53.44)
(smt.stats    9   1115  33874  21551  2877/2596/211    1212/190    20   93   53.54)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421288&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421288 := 562949953421284 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421284&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421284 := 562949953421284 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421284&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421284 := 562949953421284 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421200&2
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421311 := 562949953421284 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421200&2
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421311 := 562949953421284 << 2
(smt.stats   10   1216  38469  24499  2909/2599/211    1331/191    20   93   53.54)
(sat.ddfw       1      1   27.0088    110001       539          4            1       12)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2 := 562949953421200&2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2 := 562949953421200&2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421200&2
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 2 := 562949953421200&2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421200&2
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 562949953421200&2
(smt.stats   11   1327  41610  27935  2969/2680/242    1455/208    21   95   53.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  47961  34236  2991/2703/243    1586/216    23  102   53.80)
(smt.stats   13   1583  54145  38536  3024/2730/245    1804/226    24  108   54.09)
(smt.stats   14   1730  58996  44208  3065/2744/245    1978/226    24  108   54.09)
ramon: poll                 wall=2.000s usage=1.903s mem=56272KiB load=0.96 rootload=0.96
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 3 := 81102443&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 3 := 162204859&162204825
(smt.stats   15   1831  62440  48379  3095/2800/246    2095/231    25  111   54.27)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 324409675&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409675&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409687&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409687&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409699&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409699&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324410247&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324410215&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324411395&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324411395&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324411395&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324534275&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 325058563&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 325058563&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 325320707&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 325320707&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 327155715&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 335548419&162204825
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2251800149233667 := 562949953421310 << 28
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 562949950795779&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 336592903&162204825
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2305843009550286855 := 562949953421310 << 28
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949416550400&162204825
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953413125 := 562949953421310 << 28
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949416550400&162204825
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421305 := 562949953421310 << 28
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949416550400&162204825
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421305 := 562949953421310 << 28
(smt.stats   16   1942  65962  53073  3211/2915/328    2276/264    26  129   54.66)
(sat.ddfw       1      1   22.9669    160000       784          5            1       17)
(smt.stats   17   2064  68673  58314  3280/2977/335    2451/265    26  129   54.75)
(smt.stats   18   2198  72349  65538  3290/2991/336    2588/290    27  170   54.85)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 562949953302531&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2814749766987779 := 562949953421283 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421254&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 562949953421254&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421254&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 562949953421254&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421296&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421296 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421296&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421296 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421296&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421296 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421292&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421288&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421288 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421292&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421288&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421288 := 562949953421285 << 3
(smt.stats   19   2345  78427  73577  3339/3030/345    2809/339    29  173   54.85)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562942705664004 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562942705664004 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 3 := 562949953421096&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 2 := 562949953421096&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 4 := 562949953421096&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 4 := 562949953421096&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 4 := 562949953421096&4
(smt.stats   20   2506  83943  80587  3420/3112/369    3085/362    30  199   55.04)
(smt.stats   21   2607  89420  87407  3438/3129/370    3315/364    30  199   55.04)
(smt.stats   22   2718  95379  94947  3465/3131/370    3535/411    31  204   55.45)
(smt.stats   23   2840 101509 102830  3541/3216/370    3720/411    31  204   55.55)
ramon: poll                 wall=3.000s usage=2.903s mem=57840KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.2706    220001      1078          6            1       23)
(smt.stats   24   2974 108444 111539  3550/3217/371    3941/460    32  212   55.81)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 16 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 32 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 64 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 16 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 16 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1608 := 1640&81102412
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 1640 := 562949953421309 << 27
(smt.stats   25   3121 113928 121595  3702/3356/403    4229/502    33  221   55.90)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 328 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 584 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 200 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 200 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1608 := 1640&81102412
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 3940649673950824 := 562949953421309 << 27
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1608 := 1640&81102412
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 3940649673950824 := 562949953421309 << 27
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1608 := 1640&81102412
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 3940649673950824 := 562949953421309 << 27
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1536 := 1642&324409650
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1570 := 1642&324409650
(smt.stats   26   3282 122982 132077  3869/3453/466    4546/513    33  221   56.27)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1058 := 1642&324409650
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1058 := 1642&324409650
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1058 := 1642&324409650
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 34 := 1642&324409650
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 3940649673950826 := 562949953421311 << 29
(smt.stats   27   3459 133787 149351  3923/3548/466    4896/566    34  235   56.45)
(sat.ddfw       1      1   18.0505    290001      1421          7            1       30)
(smt.stats   28   3560 138124 158064  3987/3610/479    5243/603    35  237   56.45)
ramon: poll                 wall=4.000s usage=3.902s mem=59096KiB load=1.00 rootload=1.00
(smt.stats   29   3671 142572 167791  4022/3663/479    5675/605    35  237   56.85)
(smt.stats   30   3793 150319 181413  4103/3734/479    5802/712    36  255   56.94)
(smt.stats   31   3927 157547 195566  4120/3770/479    6065/712    36  255   57.14)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 167841 206086  4213/3848/482    6331/749    37  264   57.23)
(smt.stats   33   4236 176136 223524  4241/3875/484    6750/767    38  277   57.43)
(sat.ddfw       1      1   16.2107    370001      1813          8            1       38)
ramon: poll                 wall=5.003s usage=4.905s mem=59628KiB load=1.00 rootload=1.00
(smt.stats   34   4413 184737 241554  4268/3902/485    7416/880    39  292   57.43)
(smt.stats   35   4607 192931 254219  4327/3905/485    7852/880    39  292   57.62)
(smt.stats   36   4708 201910 277188  4338/3972/485    8022/880    39  292   57.62)
(smt.stats   37   4819 206754 290316  4368/3996/485    8193/880    39  292   57.62)
ramon: poll                 wall=6.000s usage=5.849s mem=59948KiB load=0.95 rootload=0.94
(smt.stats   38   4941 214910 310085  4374/4002/486    8459/977    40  296   58.11)
(sat.ddfw       1      1   14.6341    460001      2254          9            1       47)
(smt.delete-inactive-clauses  :num-deleted-clauses 37)
ramon: poll                 wall=7.000s usage=6.849s mem=60376KiB load=1.00 rootload=1.00
(smt.stats   39   5075 220935 321275  4447/4062/487    8943/1026    41  296   58.40)
(sat.ddfw       1      1   13.4138    560001      2745         10            1       57)
ramon: poll                 wall=8.000s usage=7.849s mem=60492KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.3776    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=8.849s mem=60592KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.849s mem=60756KiB load=1.00 rootload=1.00
(smt.stats   40   5222 228727 335966  4723/4099/487    9253/1032    41  296   58.59)
(sat.ddfw       1      1   11.4943    790001      3872         12            1       80)
ramon: poll                 wall=11.000s usage=10.848s mem=60916KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.003s usage=11.830s mem=61160KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   10.6427    920001      4509         13            1       93)
ramon: poll                 wall=13.000s usage=12.778s mem=61240KiB load=0.95 rootload=0.95
ramon: poll                 wall=14.000s usage=13.777s mem=61496KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.97862   1060001      5196         14            1      108)
ramon: poll                 wall=15.003s usage=14.781s mem=61516KiB load=1.00 rootload=1.00
(smt.stats   41   5383 235810 351268  5137/4753/490    9838/1056    42  301   58.97)
ramon: poll                 wall=16.000s usage=15.776s mem=61564KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.38321   1210001      5931         15            1      123)
ramon: poll                 wall=17.000s usage=16.776s mem=61780KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5560 243012 365723  5250/4762/490   10606/1058    42  301   59.16)
ramon: poll                 wall=18.000s usage=17.775s mem=61828KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   8.85544   1370001      6715         16            1      139)
ramon: poll                 wall=19.000s usage=18.913s mem=61668KiB load=1.14 rootload=1.14
ramon: poll                 wall=20.000s usage=19.912s mem=61740KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:40:47 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.954s
ramon: group.utime          19.942s
ramon: group.stime          0.012s
ramon: group.mempeak        61996KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.045s
ramon: loadavg              1.00
