ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:28:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25483 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/UNfWaAH8kgF4.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             51276
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 335007449088 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 35184372088831 := 8589934563 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 35184372088831 := 8589934518 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 79 := 78 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 79 := 78 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 34 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 34 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 8589934608 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 8589934608 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 8589934608 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371900416
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 8589934653 >>l 33
(smt.stats    0    101   6330   1060  1207/1085/103      92/13     6   18   19.29)
(smt.stats    1    202  10851   3898  2352/2121/106     191/26     8   20   19.58)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371994624
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 79 >>l 34
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371994624
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 79 >>l 34
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371994624
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 1 := 79 >>l 34
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371994624
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 1 := 79 >>l 34
(smt.stats    2    313  13270   5927  2437/2200/119     301/37    10   24   19.78)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372082944
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 8589934703 >>l 38
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372082944
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 8589934703 >>l 38
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372082944
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 8589934592 := 8589934703 >>l 38
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372082944
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 274877906978 >>l 38
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372082944
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 274877906978 >>l 38
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372082944
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 274877906978 >>l 38
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372082944
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 274877906978 >>l 38
(smt.stats    3    414  14762   7504  2539/2296/129     396/43    11   28   19.88)
(smt.stats    4    525  17568   8730  2573/2322/130     508/51    12   31   20.01)
(smt.stats    5    647  22395  15299  2615/2354/130     627/55    12   31   20.01)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 1&35184372088464
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 140737488355329 := 283467841467 >>l 42
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 1&35184372088464
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 140737488355329 := 283467841467 >>l 42
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 1&35184372088464
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 140737488355329 := 283467841467 >>l 42
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 1&35184372088464
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 140737488355329 := 274877907207 >>l 42
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 1&35184372088464
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 140737488355329 := 274877907207 >>l 42
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 1&35184372088464
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 140737488355329 := 274877907252 >>l 42
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 1&35184372088464
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 140737488355329 := 283467841467 >>l 42
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  24444  17881  2710/2375/131     733/67    13   33   20.11)
(smt.stats    7    859  25900  20577  2733/2483/139     846/73    14   36   20.24)
(smt.stats    8    981  27662  25513  2741/2491/139     963/75    15   40   20.24)
(smt.stats    9   1115  30758  28281  2778/2508/144    1082/80    16   43   20.34)
(smt.stats   10   1216  32917  30233  2812/2556/144    1185/83    17   45   20.34)
(smt.stats   11   1327  35951  36939  2823/2574/147    1285/91    19   59   20.34)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372087361&35184372087360
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 35184372087360 := 35184372087361&35184372087360
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 9007199254739521 := 8589934615 >>l 40
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372087361&35184372087360
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372087361&35184372087360
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372087424&35184372087360
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 35184372087360 := 35184372087361&35184372087360
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 8972014882650689 := 8589934615 >>l 40
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 35184372087360 := 35184372087361&35184372087360
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 1161084278929985 := 8589934615 >>l 40
(smt.stats   12   1449  38474  43447  2849/2580/147    1404/92    19   59   20.44)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 35184372088740 := 35184372088741&35184372088740
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 9007199254740901 := 314 >>l 44
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 35184372088740 := 35184372088741&35184372088740
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 9007199254740901 := 314 >>l 44
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 35184372088740 := 35184372088741&35184372088740
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 9007199254740901 := 314 >>l 44
(smt.stats   13   1583  40725  47790  2905/2610/162    1551/99    20   62   20.44)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 35184372088740 := 35184372088741&35184372088740
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 9007199254740901 := 359 >>l 44
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 35184372088740 := 35184372088741&35184372088740
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 9007199254740901 := 8589934574 >>l 44
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   14   1730  43937  53846  2944/2691/170    1689/114    21   63   20.56)
(smt.stats   15   1831  47310  62526  2960/2706/185    1781/114    22   74   20.56)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088831&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 34900904246226 := 35184372088097&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 34900904246229 := 35184372088097&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088097&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088128&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088128&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088575&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088097&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088159&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088128&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088575&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088575&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088543&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 3072 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 3072 := 35184372088512&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1024 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1024 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1024 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1024 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1024 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1024 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 3072 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 3072 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 7168 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 7168 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 3072 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 3072 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 7168 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 7168 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 15360 := 35184372088320&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 3072 := 35184372088320&35184372088096
ramon: poll                 wall=1.000s usage=0.934s mem=22164KiB load=0.93 rootload=0.92
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 7168 := 35184372088512&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 15360 := 35184372088320&35184372088096
(smt.stats   16   1942  49882  67807  3061/2795/282    1910/178    24  107   20.94)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 8589935104&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 8589935104&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179901952&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179901952&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179901952&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179934720&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179901952&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179869184&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179869184&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179836416&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 8589935104&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179869184&35184372088096
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 17179869184&35184372088096
(smt.stats   17   2064  53659  75373  3135/2878/328    2044/181    24  107   21.24)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372088464
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 8589934978 := 8589934977 >>l 42
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184372088464
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 8589934978 := 8589934977 >>l 42
(smt.stats   18   2198  57287  81849  3247/2949/330    2226/201    25  116   21.33)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 0&35184371994624
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 0 := 420906795019 >>l 34
(smt.stats   19   2345  64104  92057  3354/2992/341    2408/209    26  123   21.44)
(smt.stats   20   2506  68345  98625  3515/3244/347    2609/254    28  134   21.84)
(smt.stats   21   2607  71492 105027  3669/3252/347    2760/262    28  134   21.84)
ramon: poll                 wall=2.000s usage=1.932s mem=23264KiB load=1.00 rootload=1.00
(smt.stats   22   2718  73925 110759  3830/3510/348    2887/275    29  134   21.93)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 24 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 23 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 7 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 6 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 4 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 2 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 4 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 23 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 16 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 2 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 4 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 16 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 2 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 6 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 6 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 6 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 4 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 8 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 8 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 8 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 24&35184371994624
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 8 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 4 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 8 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 16 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 16 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 16 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 16 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 4 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 8 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 12 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 12 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 1 := 24&35184371994624
(smt.stats   23   2840  76154 118587  4019/3729/430    3012/291    30  166   22.67)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 2 := 24&35184371994624
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 2 := 24&35184371994624
(smt.stats   24   2974  78980 124746  4051/3762/446    3219/292    30  166   22.80)
(smt.stats   25   3121  89357 136727  4074/3795/453    3448/334    31  173   22.80)
(smt.stats   26   3293  97382 150636  4119/3836/455    3648/365    32  176   22.90)
ramon: poll                 wall=3.000s usage=2.930s mem=24384KiB load=1.00 rootload=0.99
(smt.stats   27   3470 103982 162960  4308/4015/458    3920/412    34  182   23.30)
(smt.stats   28   3571 108039 172483  4334/4030/458    4120/412    34  182   23.30)
(smt.stats   29   3682 116827 191144  4362/4063/459    4305/490    36  194   23.30)
(smt.stats   30   3804 123513 202655  4444/4083/459    4542/493    36  194   23.41)
ramon: poll                 wall=4.000s usage=3.928s mem=25264KiB load=1.00 rootload=1.00
(smt.stats   31   3938 129020 210297  4458/4165/461    4759/518    37  199   23.41)
(smt.stats   32   4085 134866 223716  4548/4170/461    5022/525    37  199   23.60)
ramon: poll                 wall=5.000s usage=4.926s mem=25524KiB load=1.00 rootload=1.00
(smt.stats   33   4246 139124 231793  4812/4264/461    5246/601    38  201   23.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   34   4423 143373 242047  5091/4541/461    5515/608    38  201   23.78)
(smt.stats   35   4617 154222 275965  5098/4805/462    5987/671    39  203   23.78)
(smt.stats   36   4718 157442 282771  5120/4812/462    6122/672    39  203   23.91)
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 3 := 3&35184372088464
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 2 := 3&35184372088464
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 2 := 3&35184372088464
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 2 := 3&35184372088464
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 3&35184372088464
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 1 := 3&35184372088464
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 3&35184372088464
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 2 := 3&35184372088464
band: (band[45] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 324518553657578176555765381201920 (if #647 162259276828789088277882690600960 #771))) 0 := 3&35184372088464
band: (band[45] (lshr[45] (bv2int %0) (mod #109 45)) (if (= #538 44) 618970019641880896891518976 (if #540 309485009820940448445759488 #626))) 2 := 3&35184372088464
(smt.stats   37   4829 159565 289543  5264/4971/483    6249/770    40  223   23.91)
(smt.stats   38   4951 164203 301709  5286/4989/484    6433/770    40  223   23.91)
ramon: poll                 wall=6.000s usage=5.926s mem=25780KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5085 172373 320991  5292/4995/488    6657/791    41  224   23.91)
(smt.stats   40   5232 180319 339063  5419/5052/489    6983/830    42  256   24.01)
(smt.stats   41   5393 187326 357837  5654/5127/489    7374/884    43  257   24.20)
(smt.stats   42   5570 192176 374423  5722/5374/492    7801/945    44  260   24.30)
ramon: poll                 wall=7.000s usage=6.926s mem=25780KiB load=1.00 rootload=1.00
(smt.stats   43   5764 196903 393751  6007/5648/494    8214/999    45  281   24.39)
(smt.stats   44   5977 203104 427145  6197/5702/494    8975/1044    46  282   24.58)
(smt.stats   45   6078 210016 449778  6211/5891/495    9195/1178    47  289   24.68)
(smt.stats   46   6189 214560 470663  6229/5907/499    9515/1233    48  291   24.68)
(smt.stats   47   6311 221887 495537  6262/5934/500    9984/1281    50  328   24.81)
ramon: poll                 wall=8.000s usage=7.926s mem=26548KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6445 227568 513574  6313/5951/500   10482/1283    50  328   24.92)
(smt.stats   49   6592 236094 536672  6317/5989/502   10681/1425    51  332   24.92)
(smt.stats   50   6753 247763 562582  6363/5998/502   11018/1448    52  334   25.04)
(smt.stats   51   6930 257525 598615  6386/6057/502   11642/1448    52  334   25.04)
ramon: poll                 wall=9.000s usage=8.926s mem=26804KiB load=1.00 rootload=0.99
(smt.stats   52   7124 268485 640172  6452/6111/505   12088/1568    53  353   25.14)
(smt.stats   53   7337 281755 695637  6485/6128/505   12470/1600    54  368   25.23)
(smt.stats   54   7571 289613 717290  6613/6268/511   13072/1797    55  375   25.42)
(smt.stats   55   7672 297516 734326  6618/6273/511   13268/1797    55  375   25.42)
ramon: poll                 wall=10.000s usage=9.926s mem=27316KiB load=1.00 rootload=1.00
(smt.stats   56   7783 303519 746038  6687/6274/511   13546/1846    56  382   25.71)
(smt.stats   57   7905 308739 759217  6836/6478/512   13955/1853    56  382   25.62)
(smt.stats   58   8039 315493 778520  6849/6504/513   14334/1901    57  382   25.72)
ramon: poll                 wall=11.000s usage=10.926s mem=27572KiB load=1.00 rootload=1.00
(smt.stats   59   8186 326343 813253  6850/6505/513   14579/1901    57  382   25.76)
(smt.stats   60   8347 331502 833882  6921/6512/514   15096/1965    58  386   25.86)
(smt.stats   61   8524 334739 846212  6947/6594/515   15477/1965    58  386   25.86)
(smt.stats   62   8718 344444 875122  6962/6607/515   15927/1966    58  386   25.86)
ramon: poll                 wall=12.000s usage=11.926s mem=27828KiB load=1.00 rootload=1.00
(smt.stats   63   8931 351889 908641  7052/6705/516   16409/2066    59  389   25.98)
(smt.stats   64   9165 364132 970307  7074/6727/517   17257/2187    60  394   26.08)
ramon: poll                 wall=13.000s usage=12.926s mem=28084KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9422 385666 1047518  7179/6747/518   17955/2190    60  394   26.27)
(smt.stats   66   9523 390110 1059060  7193/6846/518   18368/2314    61  394   26.36)
(smt.stats   67   9634 396354 1088699  7194/6847/518   18729/2314    61  394   26.46)
(smt.stats   68   9756 407193 1130955  7208/6848/518   19041/2316    61  394   26.46)
ramon: poll                 wall=14.000s usage=13.926s mem=28340KiB load=1.00 rootload=1.00
(smt.stats   69   9890 413994 1168693  7312/6868/518   19272/2318    61  394   26.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 44)
(smt.stats   70  10037 418128 1187739  7317/6970/520   19730/2460    62  435   26.58)
(smt.stats   71  10198 428972 1221842  7332/6981/520   20075/2461    62  435   26.58)
(smt.stats   72  10375 439817 1263967  7341/6989/520   20293/2461    62  435   26.58)
ramon: poll                 wall=15.000s usage=14.926s mem=28340KiB load=1.00 rootload=1.00
(smt.stats   73  10569 446333 1292953  7377/7030/521   20794/2554    63  437   26.67)
(smt.stats   74  10782 463388 1354762  7422/7033/521   21097/2554    63  437   26.77)
(smt.stats   75  11016 474600 1404321  7463/7087/521   21746/2558    63  437   26.82)
ramon: poll                 wall=16.000s usage=15.926s mem=28852KiB load=1.00 rootload=1.00
(smt.stats   76  11273 489378 1459448  7750/7118/521   22480/2572    63  437   27.02)
ramon: poll                 wall=17.000s usage=16.926s mem=28852KiB load=1.00 rootload=1.00
(smt.stats   77  11555 500211 1510152  7917/7570/522   23412/2769    64  438   27.22)
(smt.stats   78  11657 508533 1554862  7926/7579/522   23634/2769    64  438   27.22)
ramon: poll                 wall=18.000s usage=17.926s mem=28852KiB load=1.00 rootload=1.00
(smt.stats   79  11768 513185 1568618  8023/7581/522   24005/2771    64  438   27.32)
(smt.stats   80  11890 519199 1597029  8214/7698/522   24377/2772    64  438   27.32)
(smt.stats   81  12024 522138 1609101  8285/7878/522   24848/2772    64  438   27.46)
(smt.stats   82  12171 532498 1668416  8295/7942/522   25423/2772    64  438   27.55)
ramon: poll                 wall=19.000s usage=18.926s mem=29364KiB load=1.00 rootload=1.00
(smt.stats   83  12332 541851 1725386  8330/7959/522   26046/2772    64  438   27.65)
(smt.stats   84  12509 548320 1765439  8401/8008/522   26466/2773    64  438   27.65)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   85  12703 554318 1789399  8488/8128/523   26975/3177    65  455   27.85)
ramon: poll                 wall=20.000s usage=19.926s mem=29620KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:28:49 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.996s
ramon: group.utime          19.976s
ramon: group.stime          0.020s
ramon: group.mempeak        29876KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
