ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:48:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42367 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DEMSbEo1zHaG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2858738
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4316    394  1190/1075/97     102/19     5   16   19.07)
(smt.stats    1    203   7982    971  1836/1673/99     210/30     6   19   19.17)
(smt.stats    2    314  12198   2510  1939/1678/99     345/31     6   19   19.26)
(smt.stats    3    415  15295   3038  2016/1787/99     457/32     6   19   19.36)
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 33 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 34 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 34 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 36 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 122 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 120 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 32 := 128&123
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&91
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088923 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&91
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088923 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&90
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088922 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 128 := 128&17592186065152
(smt.stats    4    526  17720   4593  2383/2177/111     547/73     8   27   19.56)
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 126 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 124 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 124 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 8 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 68719476818 := 68719476817 << 8
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 68719476818 := 68719476817 << 8
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 127 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 127 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 126 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 124 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 4 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 8 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 17592186065151 := 68719476817 << 8
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 8 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 8 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 2 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 2 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 4 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 4 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 1 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 2 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 2 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 2 := 128&17592186065152
(smt.stats    5    648  20972   7820  2514/2321/256     671/97    11   60   19.96)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    749  24467   9612  2746/2475/256     795/101    11   60   20.16)
ramon: poll                 wall=1.000s usage=0.921s mem=21468KiB load=0.92 rootload=0.91
(smt.stats    7    860  29451  13017  2930/2670/259     967/121    13   68   20.35)
(smt.stats    8    982  33372  18749  3152/2906/266    1219/181    16   74   20.54)
(smt.stats    9   1116  40478  24119  3339/3000/267    1457/184    17   78   20.93)
(smt.stats   10   1217  43657  26147  3508/3228/269    1614/201    18   84   21.02)
ramon: poll                 wall=2.000s usage=1.920s mem=22324KiB load=1.00 rootload=1.00
(smt.stats   11   1328  47244  30612  3771/3307/269    1934/212    19   86   21.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  49487  34447  3966/3710/272    2164/271    20   90   21.22)
(smt.stats   13   1584  55959  40005  4001/3718/274    2593/279    20   90   21.31)
(smt.stats   14   1731  61652  47687  4086/3809/275    2852/372    22  104   21.31)
(smt.stats   15   1832  65887  54030  4211/3844/275    3139/375    22  104   21.51)
(smt.stats   16   1943  70761  62913  4344/4082/278    3474/441    24  109   21.51)
ramon: poll                 wall=3.000s usage=2.920s mem=22908KiB load=1.00 rootload=1.00
(smt.stats   17   2065  75844  69511  4447/4086/278    3902/448    24  109   21.60)
(smt.stats   18   2199  80032  77551  4569/4224/279    4151/565    25  111   21.70)
(smt.stats   19   2346  87403  89254  4825/4335/279    4591/565    25  111   21.79)
(smt.stats   20   2507  93023  98417  4986/4580/279    5271/569    25  111   21.98)
ramon: poll                 wall=4.002s usage=3.921s mem=23208KiB load=1.00 rootload=1.00
(smt.stats   21   2608  97261 108861  5071/4751/279    5615/569    25  111   21.98)
(smt.stats   22   2719 102938 118952  5172/4824/280    5923/674    26  118   22.08)
(smt.stats   23   2841 109016 128797  5376/4939/280    6210/677    26  118   22.17)
(smt.stats   24   2975 112466 135323  5600/5157/280    6537/679    26  118   22.27)
ramon: poll                 wall=5.000s usage=4.918s mem=23632KiB load=1.00 rootload=1.00
(smt.stats   25   3122 118779 148076  5751/5347/280    6802/686    26  118   22.37)
(smt.stats   26   3283 122034 156227  5871/5526/280    7056/697    26  118   22.56)
(smt.stats   27   3460 125072 162445  6173/5909/284    7580/825    27  123   22.56)
(smt.stats   28   3561 130036 167661  6246/5911/284    7749/825    27  123   22.56)
(smt.stats   29   3672 134749 174886  6362/6022/284    7998/987    28  139   22.65)
ramon: poll                 wall=6.000s usage=5.918s mem=23932KiB load=1.00 rootload=1.00
(smt.stats   30   3794 140289 185568  6436/6103/284    8161/988    28  139   22.65)
(smt.stats   31   3928 145368 194409  6595/6215/284    8554/988    28  139   22.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 148995 205580  6633/6339/284    8830/988    28  139   22.84)
(smt.stats   33   4236 155870 213957  6784/6395/284    9130/992    28  139   22.94)
ramon: poll                 wall=7.000s usage=6.914s mem=24248KiB load=1.00 rootload=0.99
(smt.stats   34   4413 161763 224020  6998/6537/284    9359/996    28  139   23.03)
(smt.stats   35   4607 168486 240980  7091/6788/290    9914/1269    29  143   23.13)
(smt.stats   36   4708 172982 247703  7274/6906/291   10480/1333    30  148   23.22)
ramon: poll                 wall=8.000s usage=7.913s mem=24648KiB load=1.00 rootload=1.00
(smt.stats   37   4819 177454 257485  7480/7024/291   10819/1337    30  148   23.32)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 181326 275859  7654/7246/291   11144/1377    31  148   23.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 782)
(smt.stats   39   5075 186197 291778  7709/7402/291   11334/1378    31  148   23.41)
(smt.stats   40   5222 192279 306140  7921/7470/291   11894/1387    31  148   23.61)
ramon: poll                 wall=9.000s usage=8.913s mem=25024KiB load=1.00 rootload=1.00
(smt.stats   41   5383 199144 319962  8070/7680/291   12208/1389    31  148   23.70)
(smt.stats   42   5560 204165 335035  8244/7905/291   12827/1389    31  148   23.80)
ramon: poll                 wall=10.000s usage=9.912s mem=25208KiB load=1.00 rootload=1.00
(smt.stats   43   5754 211930 363502  8399/8018/291   13413/1391    31  148   23.89)
(smt.stats   44   5967 218499 372621  8504/8153/292   13937/1796    32  151   24.09)
(smt.stats   45   6068 221835 378612  8575/8271/292   14461/1797    32  151   24.18)
ramon: poll                 wall=11.000s usage=10.912s mem=25556KiB load=1.00 rootload=1.00
(smt.stats   46   6179 225711 397825  8752/8365/292   14705/1798    32  151   24.18)
(smt.stats   47   6301 229604 408458  8947/8500/292   14980/1800    32  151   24.18)
(smt.stats   48   6435 233524 427399  9206/8727/292   15335/1800    32  151   24.28)
ramon: poll                 wall=12.000s usage=11.912s mem=25660KiB load=1.00 rootload=1.00
(smt.stats   49   6582 237647 442957  9288/8950/292   16013/1801    32  151   24.37)
(smt.stats   50   6743 245132 495914  9394/9075/292   16332/1810    32  151   24.37)
ramon: poll                 wall=13.002s usage=12.909s mem=25924KiB load=1.00 rootload=0.99
(smt.stats   51   6920 251550 530305  9491/9138/292   16844/1811    32  151   24.56)
(smt.stats   52   7114 258793 575080  9525/9243/292   18095/1811    32  151   24.56)
(smt.stats   53   7327 270115 618711  9571/9304/295   18797/2416    33  160   24.68)
ramon: poll                 wall=14.000s usage=13.905s mem=26364KiB load=1.00 rootload=1.00
(smt.stats   54   7561 276977 655659  9655/9318/295   19415/2504    34  162   24.78)
(smt.stats   55   7662 280131 676852  9758/9415/295   19636/2504    34  162   24.78)
(smt.stats   56   7773 283005 687771  9957/9501/295   19884/2507    34  162   25.13)
ramon: poll                 wall=15.000s usage=14.905s mem=26936KiB load=1.00 rootload=1.00
(smt.stats   57   7895 285450 697144 10187/9728/295   20144/2507    34  162   25.27)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8029 288170 712445 10266/9955/295   20580/2507    34  162   25.37)
(smt.stats   59   8176 291661 721219 10387/10028/295   20770/2509    34  162   25.37)
(smt.stats   60   8337 296282 739117 10531/10166/295   21025/2509    34  162   25.37)
ramon: poll                 wall=16.002s usage=15.908s mem=27020KiB load=1.00 rootload=1.00
(smt.stats   61   8514 300713 769979 10613/10305/295   21704/2509    34  162   25.47)
(smt.stats   62   8708 305885 791761 10860/10363/295   22009/2511    34  162   25.56)
ramon: poll                 wall=17.000s usage=16.903s mem=27312KiB load=1.00 rootload=1.00
(smt.stats   63   8921 312482 832500 11171/10609/295   22624/2512    34  162   25.66)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9155 320175 840305 11380/10985/295   22899/2515    34  162   25.75)
(smt.stats   65   9412 325734 854383 11877/11183/295   23179/2525    34  162   26.04)
ramon: poll                 wall=18.002s usage=17.906s mem=27864KiB load=1.00 rootload=1.00
(smt.stats   66   9513 327862 860120 11976/11666/295   23315/2525    34  162   26.04)
(smt.stats   67   9624 330905 867864 12063/11717/295   23441/2527    34  162   26.04)
(smt.stats   68   9746 334310 874260 12150/11876/295   23635/2528    34  162   26.13)
(smt.stats   69   9880 337381 881703 12236/11898/295   23804/2529    34  162   26.13)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 340869 887448 12285/11982/295   24041/2529    34  162   26.13)
(smt.stats   71  10188 343419 899547 12375/12042/295   24307/2530    34  162   26.13)
ramon: poll                 wall=19.000s usage=18.901s mem=27880KiB load=1.00 rootload=0.99
(smt.stats   72  10365 348013 916986 12692/12131/295   24507/2536    34  162   26.23)
(smt.stats   73  10559 352478 938934 12848/12472/295   24760/2538    34  162   26.32)
ramon: poll                 wall=20.000s usage=19.901s mem=28028KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:48:41 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.986s
ramon: group.utime          19.970s
ramon: group.stime          0.016s
ramon: group.mempeak        28284KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.083s
ramon: loadavg              1.00
