ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:26:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28336 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QDqZgd2bkwnT.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             794523
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 115 := 114 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 115 := 114 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 72057594037927936 := 1134 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 360287970189639680 := 1132 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 360287970189639680 := 1130 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 360287970189639680 := 1128 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 180143985094819839 := 1034 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 72057594037927936 := 1032 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 72057594037927936 := 1030 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36028797018963968 := 1028 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1035 := 1034 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1033 := 1032 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1031 := 1030 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1029 := 1028 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1031 := 1030 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1033 := 1032 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 4547580092481535 := 1034 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 4538783999459327 := 1032 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 4529987906437119 := 1030 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 4547580092481535 := 1034 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 4538783999459327 := 1032 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 18190320369926143 := 1034 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 18190320369926143 := 1034 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 9077567998918657 := 1032 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 9095160184963071 := 1034 << 42
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 1 := 517 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 4547580092481536 := 1034 << 42
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 1 := 517 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 4547580092481536 := 1034 << 42
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 0 := 517 << 43
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 1 := 515 << 45
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 1 := 515 << 45
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 1 := 515 << 45
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 515 := 516 << 44
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 0 := 515 << 45
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 0 := 515 << 45
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 0 := 516 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 9042383626829825 := 1028 << 45
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 513 := 514 << 46
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 513 := 514 << 46
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #91))) 0 := 514 << 46
(smt.stats    0    101    418    527   155/81/74     104/11     5   12   51.16)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36028797018963968 := 1024 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36028797018963968 := 1024 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36099165763141632 := 1026 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35536215809720320 := 1010 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35606584553897984 := 1012 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35606584553897984 := 1012 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35958428274786304 := 1022 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35888059530608640 := 1020 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35676953298075648 := 1014 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35958428274786304 := 1022 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35606584553897984 := 1012 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35606584553897984 := 1012 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35676953298075648 := 1014 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35747322042253312 := 1016 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35817690786430976 := 1018 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35888059530608640 := 1020 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35817690786430976 := 1018 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35676953298075648 := 1014 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35747322042253312 := 1016 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35817690786430976 := 1018 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35747322042253312 := 1016 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35676953298075648 := 1014 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 35465847065542656 := 1008 << 55
(smt.stats    1    203   1342   1499   268/255/137     203/24     7   23   51.36)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   72.9927     10000        49          0            1        2)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36451009484029952 := 1036 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36521378228207616 := 1038 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36521378228207616 := 1038 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36591746972385280 := 1040 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36591746972385280 := 1040 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36591746972385280 := 1040 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36662115716562944 := 1042 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36732484460740608 := 1044 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36802853204918272 := 1046 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36873221949095936 := 1048 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 39265759251136512 := 1116 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 39195390506958848 := 1114 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36662115716562944 := 1042 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36732484460740608 := 1044 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36802853204918272 := 1046 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36873221949095936 := 1048 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36943590693273600 := 1050 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37013959437451264 := 1052 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37084328181628928 := 1054 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37154696925806592 := 1056 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36943590693273600 := 1050 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37013959437451264 := 1052 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37084328181628928 := 1054 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37154696925806592 := 1056 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37084328181628928 := 1054 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37084328181628928 := 1054 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37225065669984256 := 1058 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37295434414161920 := 1060 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37365803158339584 := 1062 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37436171902517248 := 1064 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37506540646694912 := 1066 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37576909390872576 := 1068 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37647278135050240 := 1070 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 39265759251136512 := 1116 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37225065669984256 := 1058 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37295434414161920 := 1060 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37365803158339584 := 1062 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37365803158339584 := 1062 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37436171902517248 := 1064 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37506540646694912 := 1066 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37647278135050240 := 1070 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37717646879227904 := 1072 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37225065669984256 := 1058 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37225065669984256 := 1058 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37295434414161920 := 1060 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37365803158339584 := 1062 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37436171902517248 := 1064 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37506540646694912 := 1066 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37576909390872576 := 1068 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37365803158339584 := 1062 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37436171902517248 := 1064 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37365803158339584 := 1062 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37506540646694912 := 1066 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37506540646694912 := 1066 << 26
(sat.ddfw       1      1   36.7684     20001        98          1            1        3)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37788015623405568 := 1074 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37858384367583232 := 1076 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 39195390506958848 := 1114 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37788015623405568 := 1074 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37858384367583232 := 1076 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37928753111760896 := 1078 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37999121855938560 := 1080 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 39195390506958848 := 1114 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 39125021762781184 := 1112 << 3
(smt.stats    2    314   2495   3352   470/450/235     303/42     9   52   51.95)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36732484460740608 := 1044 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36732484460740608 := 1044 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36732484460740608 := 1044 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36802853204918272 := 1046 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36873221949095936 := 1048 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36873221949095936 := 1048 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36873221949095936 := 1048 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36802853204918272 := 1046 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 36802853204918272 := 1046 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37647278135050240 := 1070 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37647278135050240 := 1070 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37788015623405568 := 1074 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37858384367583232 := 1076 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37928753111760896 := 1078 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37999121855938560 := 1080 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38069490600116224 := 1082 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38069490600116224 := 1082 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37999121855938560 := 1080 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37999121855938560 := 1080 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37999121855938560 := 1080 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37788015623405568 := 1074 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37858384367583232 := 1076 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37928753111760896 := 1078 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37928753111760896 := 1078 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37928753111760896 := 1078 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37858384367583232 := 1076 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37858384367583232 := 1076 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37788015623405568 := 1074 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37788015623405568 := 1074 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 37788015623405568 := 1074 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38139859344293888 := 1084 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38210228088471552 := 1086 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38280596832649216 := 1088 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38350965576826880 := 1090 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38350965576826880 := 1090 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38421334321004544 := 1092 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38350965576826880 := 1090 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38491703065182208 := 1094 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 39125021762781184 := 1112 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 39054653018603520 := 1110 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38984284274425856 := 1108 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38210228088471552 := 1086 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38280596832649216 := 1088 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38210228088471552 := 1086 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38139859344293888 := 1084 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38139859344293888 := 1084 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38491703065182208 := 1094 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38562071809359872 := 1096 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38632440553537536 := 1098 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38702809297715200 := 1100 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38773178041892864 := 1102 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38843546786070528 := 1104 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38913915530248192 := 1106 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 38843546786070528 := 1104 << 7
(smt.stats    3    415   3523   5179   661/613/287     400/56    10   62   52.64)
(sat.ddfw       1      1   37.2439     40001       196          2            1        5)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 550 := 1104 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 550 := 1104 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 550 := 1104 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 550 := 1104 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1106 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1100 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 547 := 1098 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1100 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 548 := 1100 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 549 := 1102 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 518 := 1040 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1040 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 516 := 1036 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 516 := 1036 << 41
(smt.stats    4    526   5750   7089   777/686/302     495/61    10   62   52.74)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 517 := 1038 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1096 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1096 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1094 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1094 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 543 := 1090 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 543 := 1090 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 541 := 1086 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1088 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 540 := 1084 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 540 := 1084 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 539 := 1082 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 528 := 1060 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1056 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 524 := 1052 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 524 := 1052 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 523 := 1050 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 523 := 1050 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 520 := 1044 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1044 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 521 := 1046 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 521 := 1046 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 519 := 1042 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 530 := 1064 << 27
(smt.stats    5    648   8278   8808   889/754/333     610/70    11   72   52.93)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1068 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 509 := 1022 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 509 := 1022 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1026 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 511 := 1026 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1024 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1024 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1024 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 508 := 1020 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 508 := 1020 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 506 := 1016 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 507 := 1018 << 50
(smt.stats :restarts :decisions     :clauses/bin/units       :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas        :deletions    )
(smt.stats    6    751  10564  11765   961/869/348     684/76    12   77   53.12)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 534 := 1072 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 556 := 1116 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1116 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 1 := 1114 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 554 := 1112 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 552 := 1108 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 552 := 1108 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 553 := 1110 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 553 := 1110 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 544 := 1092 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1116 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1082 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1082 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1068 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1036 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1022 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1022 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1038 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1038 << 40
(smt.stats    7    862  13570  15037  1043/911/353     792/89    13   78   53.33)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #122 #124) 64)) 0 := 1034 << 42
(sat.ddfw       1      1   32.0856     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.949s mem=55704KiB load=0.95 rootload=0.92
(smt.stats    8    984  15375  17174  1063/990/355     908/92    15   82   53.43)
(smt.stats    9   1118  23133  18341  1084/1010/356    1027/92    15   82   53.63)
(sat.ddfw       1      1   27.3038    110001       539          4            1       12)
(smt.stats   10   1219  26623  22071  1093/1019/373    1054/89    18  131   53.83)
(smt.stats   11   1330  29146  25784  1097/1023/374    1157/88    19  135   53.92)
ramon: poll                 wall=2.004s usage=1.951s mem=56284KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1452  31206  28682  1113/1035/374    1283/88    19  135   54.02)
(sat.ddfw       1      1   23.4737    160000       784          5            1       17)
(smt.stats   13   1586  38721  31114  1140/1047/375    1426/94    20  136   54.02)
(sat.ddfw       1      1   20.5272    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.943s mem=56460KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   18.1488    290001      1421          7            1       30)
ramon: poll                 wall=4.004s usage=3.949s mem=56876KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   16.2668    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.941s mem=57068KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.938s mem=56976KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.7227    460001      2254          9            1       47)
(smt.stats   14   1733  45120  35819  1231/1065/375    1579/100    20  136   54.84)
ramon: poll                 wall=7.000s usage=6.937s mem=57488KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.4427    560001      2745         10            1       57)
ramon: poll                 wall=8.004s usage=7.941s mem=57588KiB load=1.00 rootload=1.00
(smt.stats   15   1834  48874  37947  1295/1181/375    1663/106    20  136   55.03)
(sat.ddfw       1      1    12.354    670001      3284         11            1       68)
ramon: poll                 wall=9.001s usage=8.934s mem=57336KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.004s usage=9.938s mem=57600KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.4329    790001      3872         12            1       80)
ramon: poll                 wall=11.004s usage=10.970s mem=57736KiB load=1.03 rootload=1.03
ramon: poll                 wall=12.000s usage=11.961s mem=57772KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   10.6435    920001      4509         13            1       93)
ramon: poll                 wall=13.000s usage=13.001s mem=57796KiB load=1.04 rootload=1.04
(smt.stats   16   1945  50115  39007  1549/1273/375    1772/113    20  136   55.22)
(smt.stats   17   2067  54120  42206  1619/1532/375    1875/114    20  136   55.31)
ramon: poll                 wall=14.000s usage=13.993s mem=57864KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   9.99429   1060001      5196         14            1      108)
(smt.stats   18   2201  57874  48447  1637/1557/375    2003/114    20  136   55.31)
(smt.stats   19   2348  65311  53017  1660/1580/375    2130/114    20  136   55.41)
ramon: poll                 wall=15.000s usage=14.973s mem=57696KiB load=0.98 rootload=0.98
ramon: poll                 wall=16.004s usage=15.905s mem=57960KiB load=0.93 rootload=0.94
(sat.ddfw       1      1   9.29829   1210001      5931         15            1      123)
(smt.stats   20   2509  71211  57369  1710/1585/375    2289/125    20  136   55.50)
ramon: poll                 wall=17.000s usage=16.847s mem=57964KiB load=0.95 rootload=0.94
ramon: poll                 wall=18.004s usage=17.807s mem=58144KiB load=0.96 rootload=0.96
(smt.stats   21   2610  72932  58516  1857/1667/375    2395/138    20  136   55.70)
(sat.ddfw       1      1   8.75034   1370001      6715         16            1      139)
ramon: poll                 wall=19.004s usage=18.782s mem=58220KiB load=0.97 rootload=0.97
ramon: poll                 wall=20.000s usage=19.694s mem=58300KiB load=0.92 rootload=0.92
ramon: end                  Fri Nov  1 22:27:16 2024
ramon: root.execname        z3
ramon: root.utime           19.720s
ramon: root.stime           0.020s
ramon: group.total          19.744s
ramon: group.utime          19.720s
ramon: group.stime          0.024s
ramon: group.mempeak        58312KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              0.98
