ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:35:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25384 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YM2pYVy79yiB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             73738
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3153    606  1096/976/100      88/10     7   16   18.97)
(smt.stats    1    202   4561   1245  1835/1650/100     230/14     7   16   19.08)
(smt.stats    2    313   6334   3555  1894/1692/100     379/14     7   16   19.17)
(smt.stats    3    414   7933   5220  2012/1752/100     511/17     7   16   19.17)
(smt.stats    4    527   8929   6560  2123/1913/112     679/63    10   34   19.27)
(smt.stats    5    649  11025   7542  2182/1951/112     821/63    10   34   19.37)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions    )
(smt.stats    6    750  12547  11319  2211/2000/115    1075/76    11   59   19.46)
ramon: poll                 wall=1.003s usage=0.912s mem=20528KiB load=0.91 rootload=0.90
(smt.stats    7    861  14415  13290  2246/2016/129    1229/91    12   62   19.46)
(smt.stats    8    983  14824  13913  2364/2103/129    1356/252    13   86   19.65)
(smt.stats    9   1117  17259  17060  2514/2313/129    1601/252    13   86   19.65)
(smt.stats   10   1218  18286  18169  2533/2319/130    1737/324    14   88   19.89)
(smt.stats   11   1329  19626  20489  2708/2396/130    1885/334    14   88   19.89)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  21934  27181  2731/2518/130    2124/334    14   88   20.01)
(smt.stats   13   1585  24184  31907  2744/2531/130    2374/335    14   88   20.01)
(smt.stats   14   1732  26488  37180  2752/2538/132    2593/365    15  102   20.11)
(smt.stats   15   1833  27846  41024  2767/2555/132    2809/365    15  102   20.11)
(smt.stats   16   1944  28637  47106  2771/2555/132    3005/365    15  102   20.20)
(smt.stats   17   2066  29738  51367  2778/2562/132    3333/365    15  102   20.20)
(smt.stats   18   2200  30798  56578  2829/2574/132    3644/370    15  102   20.20)
ramon: poll                 wall=2.000s usage=1.908s mem=21424KiB load=1.00 rootload=1.00
(smt.stats   19   2347  32238  60772  3070/2627/132    3949/372    15  102   20.31)
(smt.stats   20   2508  33434  64596  3090/2861/132    4290/372    15  102   20.31)
(smt.stats   21   2609  34045  67707  3184/2880/132    4424/373    15  102   20.59)
(smt.stats   22   2720  34668  71490  3215/2999/132    4618/373    15  102   20.59)
(smt.stats   23   2842  35416  77641  3221/3008/132    4813/373    15  102   20.69)
(smt.stats   24   2976  36555  85118  3230/3009/132    4989/373    15  102   20.69)
(smt.stats   25   3123  37425  90412  3241/3019/132    5216/375    15  102   20.69)
(smt.stats   26   3284  38566  96895  3254/3038/135    5451/549    16  106   20.80)
(smt.stats   27   3461  39988 101255  3255/3042/135    5634/549    16  106   20.80)
(smt.stats   28   3562  40297 104040  3258/3045/135    5808/549    16  106   20.80)
ramon: poll                 wall=3.000s usage=2.908s mem=21984KiB load=1.00 rootload=1.00
(smt.stats   29   3673  40981 108167  3261/3048/135    5943/549    16  106   20.80)
(smt.stats   30   3795  42013 114873  3277/3049/135    6094/549    16  106   20.89)
(smt.stats   31   3929  42594 119272  3302/3073/135    6274/550    16  106   20.89)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  43502 123034  3305/3092/135    6437/550    16  106   20.99)
(smt.stats   33   4237  44603 130177  3305/3092/135    6645/550    16  106   21.38)
(smt.stats   34   4414  45553 136693  3311/3092/135    6874/551    16  106   21.38)
(smt.stats   35   4608  47039 145912  3316/3103/135    7118/551    16  106   21.48)
(smt.stats   36   4709  47693 148494  3318/3105/135    7234/551    16  106   21.48)
(smt.stats   37   4820  48310 152484  3366/3105/135    7363/552    16  106   21.58)
(smt.stats   38   4942  48622 153142  3487/3237/135    7504/554    16  106   21.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 165)
ramon: poll                 wall=4.000s usage=3.908s mem=23068KiB load=1.00 rootload=1.00
(smt.stats   39   5076  50086 160955  3747/3534/135    7613/554    16  106   21.77)
(smt.stats   40   5223  51291 169891  3790/3538/135    7827/555    16  106   21.77)
(smt.stats   41   5384  53747 179069  3826/3606/135    8071/556    16  106   21.87)
(smt.stats   42   5561  54961 184680  3840/3622/135    8294/556    16  106   21.96)
(smt.stats   43   5755  57523 199897  3848/3635/135    8591/556    16  106   21.96)
(smt.stats   44   5968  59217 209003  3864/3643/135    8859/556    16  106   22.06)
(smt.stats   45   6069  59775 211229  3866/3652/135    8965/556    16  106   22.06)
(smt.stats   46   6180  60899 216994  3873/3657/135    9186/556    16  106   22.06)
(smt.stats   47   6302  62266 221566  3872/3661/140    9314/793    17  134   22.17)
(smt.stats   48   6436  63452 227167  3904/3661/140    9472/793    17  134   22.17)
(smt.stats   49   6583  65106 234604  3927/3701/140    9896/793    17  134   22.26)
(smt.stats   50   6744  66390 243421  4011/3726/140   10354/795    17  134   22.26)
ramon: poll                 wall=5.000s usage=4.908s mem=23596KiB load=1.00 rootload=1.00
(smt.stats   51   6921  67370 253235  4100/3808/140   10650/796    17  134   22.36)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7115  68966 261249  4130/3903/140   11038/797    17  134   22.36)
(smt.stats   53   7328  69928 267894  4231/3928/140   11336/798    17  134   22.45)
(smt.stats   54   7562  71050 273296  4465/4048/140   11786/801    17  134   22.55)
(smt.stats   55   7663  71500 277480  4664/4343/140   11951/803    17  134   22.68)
(smt.stats   56   7774  72008 281508  4717/4465/140   12086/804    17  134   22.68)
(smt.stats   57   7896  72681 284614  4899/4516/140   12239/806    17  134   22.77)
ramon: poll                 wall=6.000s usage=5.907s mem=25664KiB load=1.00 rootload=0.99
(smt.stats   58   8030  73524 292261  4963/4744/140   12448/806    17  134   23.56)
(smt.stats   59   8177  74139 298963  5060/4752/140   12636/807    17  134   23.56)
(smt.stats   60   8338  74679 302323  5171/4857/140   12807/809    17  134   23.65)
(smt.stats   61   8515  75530 308862  5291/5027/140   13089/810    17  134   23.65)
(smt.stats   62   8709  76340 316435  5375/5096/140   13327/810    17  134   23.75)
(smt.stats   63   8922  77509 323263  5440/5191/140   13567/810    17  134   23.84)
(smt.stats   64   9156  78318 331431  5449/5230/140   13828/810    17  134   23.84)
(smt.stats   65   9413  79340 340347  5632/5239/140   14118/813    17  134   23.94)
(smt.stats   66   9514  79878 344543  5667/5426/140   14261/813    17  134   23.94)
ramon: poll                 wall=7.000s usage=6.907s mem=25420KiB load=1.00 rootload=1.00
(smt.stats   67   9625  80380 350508  5760/5461/140   14379/813    17  134   24.05)
(smt.stats   68   9747  80973 354275  5843/5577/140   14545/813    17  134   24.05)
(smt.stats   69   9881  81457 357671  6019/5704/140   14689/817    17  134   24.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028  82033 361295  6164/5810/140   14865/819    17  134   24.14)
(smt.stats   71  10189  82561 365855  6315/6005/140   15065/821    17  134   24.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10366  83153 369290  6527/6121/140   15260/823    17  134   24.33)
ramon: poll                 wall=8.000s usage=7.907s mem=25756KiB load=1.00 rootload=1.00
(smt.stats   73  10773  84661 379494  6930/6372/140   15810/825    17  134   24.43)
(smt.stats   74  11007  85849 391583  7218/6745/140   16138/826    17  134   24.52)
(smt.stats   75  11264  87824 400623  7278/7012/140   16559/827    17  134   24.62)
(smt.stats   76  11546  89738 413188  7457/7246/144   16956/1251    18  155   24.72)
(smt.stats   77  11647  90599 423926  7486/7249/144   17081/1251    18  155   24.72)
(smt.stats   78  11758  91331 432913  7533/7300/144   17482/1251    18  155   24.81)
ramon: poll                 wall=9.003s usage=8.909s mem=26324KiB load=1.00 rootload=1.01
(smt.stats   79  11880  92016 445389  7540/7322/144   17729/1251    18  155   24.81)
(smt.stats   80  12014  92511 450998  7626/7334/144   17938/1251    18  155   24.91)
(smt.stats   81  12161  93085 457119  7770/7485/144   18125/1251    18  155   24.91)
(smt.stats   82  12322  93730 465194  7893/7612/144   18353/1251    18  155   25.03)
(smt.stats   83  12499  94430 476233  7967/7703/144   18647/1251    18  155   25.03)
(smt.stats   84  12693  95419 486805  8052/7768/144   18932/1251    18  155   25.13)
(smt.stats   85  12906  96162 491335  8178/7881/144   19200/1252    18  155   25.28)
(smt.stats   86  13140  97237 502281  8215/7986/144   19583/1252    18  155   25.28)
ramon: poll                 wall=10.000s usage=9.905s mem=26832KiB load=1.00 rootload=0.99
(smt.stats   87  13397  98306 518252  8379/8023/144   19892/1254    18  155   25.37)
(smt.stats   88  13679  99465 550300  8561/8227/144   20218/1254    18  155   25.37)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   89  13989 100781 575478  8667/8359/144   20565/1255    18  155   25.47)
(smt.stats   90  14090 101307 592007  8700/8463/144   20681/1255    18  155   25.47)
(smt.stats   91  14201 101682 604248  8764/8511/144   20810/1255    18  155   25.56)
(smt.stats   92  14323 102033 609064  8860/8575/144   20944/1255    18  155   25.56)
(smt.stats   93  14457 102483 622211  8996/8697/144   21102/1255    18  155   25.56)
(smt.stats   94  14604 103091 629706  9024/8792/144   21333/1255    18  155   25.66)
(smt.stats   95  14765 103772 658791  9070/8832/144   21596/1255    18  155   25.66)
(smt.stats   96  14942 104503 684051  9106/8865/144   21814/1255    18  155   25.75)
(smt.delete-inactive-clauses  :num-deleted-clauses 241)
ramon: poll                 wall=11.000s usage=10.905s mem=27348KiB load=1.00 rootload=1.00
(smt.stats   97  15136 110405 701410  9116/8905/144   21785/1255    18  155   25.75)
(smt.stats   98  15349 119252 729275  9117/8906/144   22272/1255    18  155   25.85)
(smt.stats   99  15583 121561 748143  9136/8908/144   22725/1255    18  155   25.85)
(smt.stats  100  15840 123295 763949  9177/8925/144   23079/1255    18  155   27.42)
(smt.stats  101  16122 125762 789938  9258/8995/144   23502/1255    18  155   27.52)
(smt.stats  102  16432 128459 833238  9306/9052/144   23928/1255    18  155   27.61)
(smt.stats  103  16772 131501 848927  9434/9105/144   24393/1255    18  155   27.61)
(smt.stats  104  16873 132407 855639  9472/9229/144   24524/1255    18  155   27.61)
(smt.stats  105  16984 133349 861572  9511/9272/144   24670/1255    18  155   27.61)
ramon: poll                 wall=12.000s usage=11.905s mem=29384KiB load=1.00 rootload=1.00
(smt.stats  106  17106 134579 874660  9578/9308/144   24870/1255    18  155   27.72)
(smt.stats  107  17240 135805 892045  9628/9368/144   25057/1255    18  155   27.72)
(smt.stats  108  17387 136614 904336  9649/9420/144   25226/1255    18  155   27.72)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats  109  17548 137740 912534  9714/9440/144   25463/1256    18  155   27.81)
(smt.stats  110  17725 139212 922346  9719/9506/144   25722/1256    18  155   27.81)
(smt.stats  111  17919 140908 961712  9755/9508/144   26073/1256    18  155   27.91)
(smt.stats  112  18132 142512 976137  9759/9548/144   26352/1256    18  155   27.91)
(smt.stats  113  18366 144874 1011465  9781/9549/144   27280/1257    18  155   28.01)
(smt.stats  114  18623 146632 1025032  9802/9583/145   27567/2060    19  158   28.21)
ramon: poll                 wall=13.003s usage=12.908s mem=30084KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  115  18905 148672 1041222  9968/9591/145   28085/2060    19  158   28.40)
(smt.stats  116  19215 154049 1110804 10050/9813/145   28659/2060    19  158   28.51)
(smt.stats  117  19555 156952 1148187 10124/9846/145   29397/2061    19  158   28.60)
(smt.stats  118  19928 160818 1183081 10133/9922/145   30092/2061    19  158   28.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 12)
(smt.stats  119  20029 161285 1188233 10141/9922/145   30249/2061    19  158   28.70)
(smt.stats  120  20140 162262 1202444 10141/9930/145   30380/2061    19  158   28.79)
(smt.stats  121  20262 163028 1210026 10156/9931/145   30672/2063    19  158   28.79)
(smt.stats  122  20396 164407 1223276 10171/9957/145   30926/2063    19  158   28.79)
(smt.stats  123  20543 165195 1241833 10175/9962/145   31325/2063    19  158   28.89)
ramon: poll                 wall=14.000s usage=13.904s mem=30660KiB load=1.00 rootload=0.99
(smt.stats  124  20704 166461 1270077 10201/9982/145   31569/2063    19  158   28.89)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  125  20881 167153 1297499 10380/10012/145   31834/2063    19  158   28.99)
(smt.stats  126  21075 168493 1309189 10410/10194/145   32180/2065    19  158   28.99)
(smt.stats  127  21288 171082 1324832 10427/10204/145   32412/2066    19  158   28.99)
(smt.stats  128  21522 172857 1335573 10427/10216/145   32672/2066    19  158   28.99)
ramon: poll                 wall=15.000s usage=14.903s mem=30864KiB load=1.00 rootload=1.00
(smt.stats  129  21779 174114 1349699 10516/10258/145   33071/2070    19  158   29.08)
(smt.stats  130  22061 176179 1368477 10552/10312/145   33501/2071    19  158   29.08)
(smt.stats  131  22371 177122 1380279 10572/10361/145   33830/2071    19  158   29.19)
(smt.stats  132  22711 178491 1404758 10741/10365/145   34295/2071    19  158   29.28)
(smt.stats  133  23084 180035 1432058 10926/10557/145   34786/2071    19  158   29.38)
ramon: poll                 wall=16.000s usage=15.902s mem=31252KiB load=1.00 rootload=1.00
(smt.stats  134  23494 181487 1449836 11136/10760/145   35427/2071    19  158   29.47)
(smt.stats  135  23595 182687 1457391 11154/10934/145   35727/2071    19  158   29.58)
(smt.stats  136  23706 183519 1461200 11163/10952/145   35886/2071    19  158   29.58)
(smt.stats  137  23828 184321 1464828 11165/10954/145   36031/2071    19  158   29.58)
(smt.stats  138  23962 185440 1470896 11165/10954/145   36240/2071    19  158   29.58)
(smt.stats  139  24109 187302 1484414 11204/10955/145   36652/2071    19  158   29.68)
(smt.stats  140  24270 188534 1503703 11230/11009/145   37393/2071    19  158   29.78)
(smt.stats  141  24447 189092 1518711 11248/11031/145   38000/2071    19  158   29.78)
(smt.stats  142  24641 191423 1527545 11252/11041/145   38258/2071    19  158   29.90)
(smt.stats  143  24854 194895 1542225 11252/11041/145   38627/2071    19  158   29.90)
(smt.delete-inactive-clauses  :num-deleted-clauses 136)
(smt.stats  144  25088 196934 1552129 11253/11042/145   38753/2071    19  158   29.90)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  145  25345 199657 1560146 11254/11043/145   39042/2071    19  158   29.90)
ramon: poll                 wall=17.000s usage=16.902s mem=31864KiB load=1.00 rootload=1.00
(smt.stats  146  25627 201805 1573144 11266/11055/145   39440/2071    19  158   29.90)
(smt.stats  147  25937 204093 1588165 11266/11055/145   39780/2072    19  158   29.99)
(smt.stats  148  26277 207846 1609953 11269/11058/145   40198/2072    19  158   29.99)
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 1&2097148
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 1 := 2097148&1
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 254 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 252 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 248 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 254 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 252 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 248 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 240 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 224 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 192 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 128 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 8 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 2 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 255 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 254 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 252 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 248 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 255 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 254 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 252 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 248 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 240 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 224 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 255 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 254 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 252 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 248 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 240 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 224 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 192 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 128 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 2 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 4 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 16 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 128 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 192 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 192 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 192 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 160 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 160 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 144 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 14 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 14 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 12 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 8 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 8 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 8 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 4 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 128 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 1 := 255&2096640
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 65 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 76 := 2096640&255
(smt.stats  149  26650 211249 1662276 11430/11131/219   40777/2740    20  160   30.49)
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 68 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 72 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 64 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 64 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 32 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 32 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 8 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 16 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 136 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 136 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 128 := 2096640&255
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 255&2096640
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 128 := 2096640&255
(smt.stats  150  27060 218159 1731281 11465/11248/314   42255/2828    21  209   31.00)
(smt.stats  151  27510 232119 1769115 11560/11321/315   43271/2828    21  209   31.10)
ramon: poll                 wall=18.000s usage=17.902s mem=33044KiB load=1.00 rootload=0.99
(smt.stats  152  27611 236433 1800685 11560/11321/315   43639/2828    21  209   31.21)
(smt.stats  153  27722 241921 1823811 11560/11321/315   43883/2828    21  209   31.21)
(smt.stats  154  27844 247283 1846958 11560/11321/315   44113/2991    22  220   31.21)
(smt.stats  155  27978 253821 1874323 11560/11321/315   44313/2991    22  220   31.21)
(smt.stats  156  28125 260323 1889684 11564/11325/315   44662/2991    22  220   31.31)
(smt.stats  157  28286 266067 1943746 11564/11325/315   44958/2991    22  220   31.31)
(smt.stats  158  28463 270738 1980805 11569/11326/315   45533/2992    22  220   31.40)
(smt.stats  159  28657 278331 2009380 11629/11374/315   45866/2992    22  220   31.40)
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 31&2097088
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 18 := 2097088&31
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 31&2097088
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 18 := 2097088&31
(smt.stats  160  28870 282215 2025764 11648/11383/317   46149/3140    23  220   31.50)
ramon: poll                 wall=19.000s usage=18.902s mem=33416KiB load=1.00 rootload=1.00
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 1 := 31&2097088
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 1 := 31&2097088
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 31&2097088
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 1 := 2097088&31
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 31&2097088
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 1 := 2097088&31
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 18 := 31&2097088
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 18 := 31&2097088
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 20 := 31&2097088
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 20 := 31&2097088
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 16 := 31&2097088
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 16 := 31&2097088
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 31&2097088
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 16 := 2097088&31
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 31&2097088
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 16 := 2097088&31
(smt.stats  161  29104 285999 2045865 11688/11420/319   46803/3146    23  220   31.60)
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 1 := 15&2097120
(smt.stats  162  29361 297181 2105445 11697/11438/321   47255/3148    23  220   31.69)
(smt.stats  163  29643 302892 2149660 11718/11457/324   47999/3243    24  239   31.79)
(smt.stats  164  29953 314825 2242041 11728/11463/324   51568/3243    24  239   31.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 127&2096896
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 16 := 2096896&127
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 127&2096896
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 32 := 2096896&127
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 0 := 127&2096896
band: (band[21] (if (= #142 20) 1099510579200 (if #532 549755289600 #570)) (if (= #578 20) 0 (if #580 1 #631))) 32 := 2096896&127
ramon: poll                 wall=20.000s usage=19.902s mem=34196KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  165  30293 321009 2317669 11772/11476/324   52448/3246    24  239   32.18)
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 32 := 127&2096896
band: (band[21] (if (or #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 #657) 0 (if #658 1 #694)) (if (= #447 31) 2251797666201600 (if #518 1125898833100800 #516))) 32 := 127&2096896
ramon: end                  Fri Nov  1 18:35:28 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.987s
ramon: group.utime          19.971s
ramon: group.stime          0.016s
ramon: group.mempeak        34568KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.086s
ramon: loadavg              1.00
