ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:12:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40501 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aDBmbw03unyX.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3897046
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   226/226     0/0  58       0    18.53   0.00)
(sat.stats    103    589    0   226/226   103/31  58       0    18.88   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 283 :time 0.00)
(sat.stats    103    589    0   226/226   103/31  58       0    18.88   0.01)
(sat.stats    103    589    0   226/226   103/31  58       0    18.88   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 357418.88 :time 0.00)
(sat.stats    103    589    0   228/228    39/30  58       0    18.88   0.01)
(sat.stats    106    596    1   228/228    42/33  58       0    18.88   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    170   1671    2   228/228   106/83  58       0    18.97   0.01)
(sat.stats    173   1730    3   228/228   109/83  58       0    18.97   0.01)
(sat.stats    176   1795    4   228/228   112/83  58       0    18.97   0.01)
(sat.stats    179   1842    5   228/228   115/84  58       0    18.97   0.01)
(sat.stats    182   1903    6   228/228   118/84  58       0    18.97   0.01)
(sat.stats    185   1982    7   228/228   121/84  58       0    18.97   0.01)
(sat.stats    188   2036    8   228/228   124/85  58       0    18.97   0.01)
(sat.stats    191   2113    9   228/228   127/86  58       0    18.97   0.01)
(sat.stats    194   2215   10   228/228   130/88  58       0    18.97   0.01)
(sat.stats    197   2340   11   228/228   133/91  58       0    18.97   0.01)
(sat.stats    200   2439   12   228/228   136/94  58       0    19.07   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    209   2721   15   228/228   145/102  58       0    19.07   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2093 :time 0.00)
(sat.stats    316   4970   28   228/228   252/140  61       0    19.27   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2621 :time 0.00)
(sat.stats    497  10163   51   231/231   432/255  63       0    19.76   0.07)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5199 :time 0.00)
lshr: (lshr[47] (bv2int %0) (mod (bv2int %0) 47)) 0 := 13 >>l 13
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 0&140720308486144
lshr: (lshr[64] (bv2int %0) (mod (+ #64 #738) 64)) 13 := 13 >>l 13
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 5436 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 5934 :time 0.00)
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 8522 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 8525 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 17179860516 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 14056 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 84864 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 32 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 16 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 64 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 4360704 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 256 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 23855104 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 1024 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 233472 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 2048 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 188416 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 49152 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 32768 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 65536 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 131072 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 16705388544 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 3296722944 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 1048576 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 6291456 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 4194304 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 13203668992 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 4328521728 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 7381975040 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 67108864 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 5368709120 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 268435456 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 536870912 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 10737418240 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 4294967296 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 8589934592 := 17179869183&140720308486144
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 6085 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 53354 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 48248 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 4 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 104784 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 392448 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 32 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 64 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 128 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 5087232 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 512 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 7168 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 2048 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 4096 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 514998272 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 73826304 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 444071936 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 393216 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 65536 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 262144 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 2444230656 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 3883925504 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 6291456 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 4194304 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 3791650816 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 16777216 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 13153337344 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 67108864 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 134217728 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 6979321856 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 1073741824 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 4294967296 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 2147483648 := 140720308486144&17179869183
band: (band[47] (lshr[47] (bv2int %0) (mod #64 47)) (if (= #502 46) 9903520314282971830448816128 (if #504 4951760157141485915224408064 #594))) 0 := 17179869183&140720308486144
band: (band[47] (if (= #609 63) 1298074214633688460388550372753408 (if #611 649037107316844230194275186376704 #735)) (lshr[64] (bv2int %0) (mod #739 64))) 8589934592 := 140720308486144&17179869183
 (sat-cleaner :elim-literals 17 :elim-clauses 12 :cost 8159 :time 0.00)
(sat.stats    868  25233   73 31283/31280   832/385 530       0    26.64   0.53)
 (sat-cleaner :elim-literals 2 :elim-clauses 94 :cost 8960 :time 0.00)
ramon: poll                 wall=1.000s usage=0.986s mem=29340KiB load=0.99 rootload=0.96
ramon: poll                 wall=2.000s usage=1.985s mem=39952KiB load=1.00 rootload=1.00
(sat.stats   1201  44081  113 97323/97319  1105/469 564       0    51.55   2.72)
ramon: poll                 wall=3.000s usage=2.984s mem=56928KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.984s mem=62164KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.983s mem=66688KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.983s mem=68548KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.003s usage=6.984s mem=71996KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.981s mem=73204KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.980s mem=92876KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.980s mem=94560KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.979s mem=94628KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.979s mem=98516KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.979s mem=99948KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.977s mem=97MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.977s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.977s mem=102MiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.976s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.976s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.976s mem=107MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.975s mem=108MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:12:55 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.000s
ramon: group.utime          19.944s
ramon: group.stime          0.056s
ramon: group.mempeak        108MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.023s
ramon: loadavg              1.00
