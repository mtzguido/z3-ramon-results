ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:51:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28545 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CSQYEeXoUoy2.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4118476
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4123   1525  1137/1025/100      92/11     6   15   19.07)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 1&65535
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 1&65535
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 1&65535
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 1&65535
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 1&65535
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 1&65535
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 1&65535
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 17592186044414&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 1&65535
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 65535 := 131072&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 131072&65535
shl: (shl[44] (bv2int %0) (mod (bv2int %1) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 131072&65535
shl: (shl[44] (bv2int %0) (mod (bv2int %1) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 65534 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 65532 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 65534 := 131072&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 65534 := 131072&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 131072&65535
shl: (shl[44] (bv2int %0) (mod (bv2int %1) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 32 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 64 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 128 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1024 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 2048 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 4096 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8192 := 65536&65535
(smt.stats    1    202   5314   3126  1938/1652/124     191/18     8   16   19.65)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 1 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 2 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 2 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 8 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 16 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 65504 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 64 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 128 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 1024 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 2048 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 4096 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 8192 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 16384 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 32768 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 16400 := 65536&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 16512 := 65536&65535
(smt.stats    2    313   6014   4312  1952/1765/245     309/19    11   49   20.81)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 6684672&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 24576 := 6684672&65535
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 6684672&65535
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 24576 := 6684672&65535
(smt.stats    3    415   8082   8544  2452/2259/263     456/89    14   61   20.43)
(smt.stats    4    526   9018  10196  2712/2492/269     593/148    16   66   20.53)
(smt.stats    5    648  10433  12301  2857/2522/269     720/156    16   66   20.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  12075  16904  2940/2719/271     835/173    18   71   20.72)
(smt.stats    7    860  15611  23565  2972/2748/273     969/178    19   73   20.82)
(smt.stats    8    982  16936  27328  3079/2849/282    1099/219    21   81   20.82)
(smt.stats    9   1116  20864  34670  3100/2861/282    1223/220    21   81   21.01)
(smt.stats   10   1217  22719  38281  3116/2884/282    1326/220    21   81   21.01)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 39582002485&1
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 39582002485&1
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 39582002484&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 88000512224564 := 268439553 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 39582002484&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 105592698268980 := 1342781253 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 2684436482&1
shl: (shl[44] (bv2int %0) (mod (bv2int %1) 44)) 9240576 := 1342218241 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 2684395522&1
shl: (shl[44] (bv2int %0) (mod (bv2int %1) 44)) 9240576 := 1342197761 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 2684403712&1
band: (band[44] (shl[44] (bv2int %0) (mod #103 44)) (if (= #588 43) 1 (if #590 3 #711))) 1 := 2684403712&1
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 1 := 2684403712&1
(smt.stats   11   1328  24666  42207  3168/2913/309    1463/231    22   85   21.10)
(smt.stats   12   1450  26665  46285  3300/3040/311    1694/249    24   91   21.20)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1584  31195  53540  3331/3058/313    1997/285    25  103   21.30)
(smt.stats   14   1731  33224  60986  3380/3117/315    2233/325    27  106   21.39)
(smt.stats   15   1832  35390  66287  3412/3132/315    2355/326    27  106   21.39)
(smt.stats   16   1943  37324  69870  3432/3170/316    2488/362    28  114   21.39)
(smt.stats   17   2065  39434  74175  3474/3195/319    2646/362    28  114   21.59)
(smt.stats   18   2199  41284  79591  3491/3215/319    2800/372    29  116   21.59)
ramon: poll                 wall=1.000s usage=0.999s mem=22820KiB load=1.00 rootload=0.99
(smt.stats   19   2346  44150  88148  3553/3235/319    2975/373    29  116   21.59)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 28&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 28&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 32&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 48&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 28&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 32&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 48&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 48&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 64&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 28&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 80&63
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 80 := 268439565 << 6
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 32&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 16 := 48&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8 := 64&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8 := 136&63
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 136 := 268439565 << 6
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8 := 136&63
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 136 := 268439565 << 6
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8 := 30&63
(smt.stats   20   2507  47149  99560  3652/3382/353    3256/392    30  117   21.69)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 40 := 65536&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 36 := 65536&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 32 := 65536&63
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 65536&63
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 52776558198784 := 805306369 << 6
(smt.stats   21   2608  50293 110407  3679/3393/354    3389/420    31  137   21.69)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 0&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 105553116266496 := 1610612736 << 35
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 0&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 87960930222080 := 1342177280 << 35
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 0 := 0&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 87960930222080 := 1342177280 << 35
(smt.stats   22   2719  54055 126539  3707/3435/370    3570/435    33  142   21.78)
(smt.stats   23   2841  58484 146923  3785/3469/370    3797/442    33  142   21.88)
(smt.stats   24   2975  60600 155081  3878/3602/374    4158/490    34  147   22.07)
(smt.stats   25   3122  65619 173595  3887/3611/375    4351/679    35  155   22.29)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8192 := 2147502736&68719476735
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8192 := 2147502980&68719476735
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8192 := 2147502980&68719476735
(smt.stats   26   3283  68136 178867  4066/3612/375    4622/684    35  155   22.48)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 8192 := 2147483914&68719476735
(smt.stats   27   3460  70068 186624  4421/4144/386    5153/691    36  156   22.57)
(smt.stats   28   3561  72603 196045  4429/4153/388    5532/741    37  171   22.68)
(smt.stats   29   3672  75425 203533  4434/4158/388    5665/741    37  171   22.68)
(smt.stats   30   3794  79357 218885  4451/4167/388    5947/741    37  171   22.78)
(smt.stats   31   3928  83027 233630  4479/4195/388    6251/741    37  171   22.78)
(smt.stats   32   4075  88665 250677  4487/4203/391    6968/905    38  173   22.87)
ramon: poll                 wall=2.000s usage=1.998s mem=24244KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   33   4236  92440 258683  4790/4203/391    7416/932    39  175   23.06)
(smt.stats   34   4413  96097 277477  5210/4524/392    7930/935    39  175   23.26)
(smt.stats   35   4607 101330 309561  5340/4934/392    9136/1003    40  177   23.45)
(smt.stats   36   4708 105146 341457  5381/5064/392    9421/1003    40  177   23.45)
(smt.stats   37   4819 108337 367066  5444/5117/392    9821/1005    40  177   23.45)
(smt.stats   38   4941 111040 390045  5500/5185/393   10578/1302    41  177   23.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 676)
ramon: poll                 wall=3.000s usage=2.997s mem=24992KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   39   5075 114203 405034  5545/5222/393   10576/1302    41  177   23.65)
(smt.stats   40   5222 117925 427996  5763/5289/393   10937/1304    41  177   23.65)
(smt.stats   41   5383 121743 453125  5859/5485/393   11281/1304    41  177   23.74)
(smt.stats   42   5560 125591 480423  5934/5643/394   12175/1634    42  182   23.84)
(smt.stats   43   5754 130120 508999  6002/5666/394   12598/1637    42  182   23.93)
(smt.stats   44   5967 134580 536312  6229/5751/394   13278/1646    42  182   24.12)
(smt.stats   45   6068 138446 552914  6242/5953/397   13557/1808    43  189   24.12)
ramon: poll                 wall=4.000s usage=3.997s mem=25808KiB load=1.00 rootload=1.00
(smt.stats   46   6179 141637 584162  6270/5974/398   13702/1835    44  189   24.34)
(smt.stats   47   6301 144742 616333  6288/5982/398   13912/1835    44  189   24.34)
(smt.stats   48   6435 148789 635936  6405/6107/400   14713/1928    45  196   24.44)
(smt.stats   49   6582 151681 654380  6458/6118/400   15138/1932    45  196   24.53)
(smt.stats   50   6743 155797 696464  6497/6171/400   15733/1933    45  196   24.53)
(smt.stats   51   6920 161861 743462  6635/6212/400   16342/1940    45  196   24.63)
ramon: poll                 wall=5.000s usage=4.997s mem=26004KiB load=1.00 rootload=1.00
(smt.stats   52   7114 167374 781656  6645/6354/400   17198/1940    45  196   24.72)
(smt.stats   53   7327 178795 891384  6649/6360/400   17495/1940    45  196   24.72)
(smt.stats   54   7561 188484 990190  6667/6378/403   18090/2573    46  200   24.82)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7662 193280 1040782  6671/6380/403   18203/2614    47  210   24.82)
(smt.stats   56   7773 196261 1075861  6691/6388/403   18330/2614    47  210   24.93)
ramon: poll                 wall=6.000s usage=5.996s mem=26244KiB load=1.00 rootload=1.00
(smt.stats   57   7895 199062 1104408  6694/6405/403   18532/2614    47  210   24.93)
(smt.stats   58   8029 199857 1114761  6696/6407/403   18749/2614    47  210   24.93)
(smt.stats   59   8176 200234 1121183  6698/6409/403   19095/2614    47  210   24.93)
(smt.stats   60   8337 207503 1161349  6792/6503/404   19626/2754    48  210   25.02)
(smt.stats   61   8514 209602 1178217  6800/6509/404   20193/2754    48  210   25.12)
(smt.stats   62   8708 213164 1219604  6801/6512/404   20403/2754    48  210   25.12)
(smt.stats   63   8921 222478 1274367  7045/6519/404   21084/2763    48  210   25.21)
ramon: poll                 wall=7.000s usage=6.996s mem=26636KiB load=1.00 rootload=1.00
(smt.stats   64   9155 228793 1306575  7340/6799/405   22171/3013    49  212   25.41)
(smt.stats   65   9412 235114 1350793  7798/7088/406   23494/3017    49  212   25.79)
ramon: poll                 wall=8.003s usage=7.997s mem=27228KiB load=1.00 rootload=1.00
(smt.stats   66   9513 241005 1379877  7828/7531/406   24062/3122    50  215   25.79)
(smt.stats   67   9624 248286 1453756  7828/7531/406   24578/3122    50  215   25.89)
(smt.stats   68   9746 254560 1513684  7839/7532/406   24806/3122    50  215   25.98)
(smt.stats   69   9880 258317 1543098  8006/7597/406   25407/3130    50  215   25.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 441)
(smt.stats   70  10027 262140 1556217  8076/7747/406   25455/3132    50  215   26.08)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147507417&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147507418&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147507416&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147507416&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147517520&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147517440&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147517440&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147517568&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147521344&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147521536&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147521472&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147521408&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147521408&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147521344&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147521536&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147507072&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506944&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506944&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506816&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506688&32767
(smt.stats   71  10188 267088 1592029  8291/7812/406   26725/3137    50  215   26.27)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506688&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506816&32767
ramon: poll                 wall=9.000s usage=8.994s mem=27736KiB load=1.00 rootload=0.99
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506176&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506176&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506176&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506176&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 2147506176&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 31232&32767
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 30720&32767
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 30720 := 8796093022208 << 15
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 30720&32767
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 30720 := 2684354560 << 15
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 30720&32767
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 30720 := 2684354560 << 15
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 30720&32767
shl: (shl[64] (bv2int %0) (mod (+ #103 #333) 64)) 30720 := 2684354560 << 15
(smt.stats   72  10365 271052 1613984  8405/8000/456   27467/3366    51  225   26.68)
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 40960&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 40960&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 43008&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 47104&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 57344&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 59392&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 45056&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 47104&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 47104&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 45056&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 47104&8388607
band: (band[44] (shl[64] (bv2int %0) (mod #334 64)) (if (= #730 63) 0 (if #732 1 #874))) 30720 := 63488&8388607
(smt.stats   73  10559 278162 1648996  8564/8197/497   28536/3374    51  225   26.96)
(smt.stats   74  10772 286097 1690594  8745/8286/498   29423/3757    52  233   27.15)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11006 293911 1750355  8841/8503/500   30801/3842    53  236   27.34)
ramon: poll                 wall=10.000s usage=9.993s mem=28852KiB load=1.00 rootload=0.99
(smt.stats   76  11263 306603 1823594  8908/8552/500   31886/3843    53  236   27.53)
(smt.stats   77  11545 318660 1878527  9064/8732/504   34074/4291    54  247   28.01)
(smt.stats   78  11646 320518 1887245  9080/8751/504   34240/4291    54  247   28.34)
(smt.stats   79  11757 325077 1920711  9097/8768/506   35197/4291    54  247   28.44)
ramon: poll                 wall=11.000s usage=10.992s mem=30036KiB load=1.00 rootload=1.00
(smt.stats   80  11879 331541 1951571  9117/8771/506   35526/4487    55  282   28.44)
(smt.stats   81  12013 336695 1975157  9196/8849/507   36222/4488    55  282   28.44)
(smt.stats   82  12160 342928 2031022  9314/8889/508   36602/4491    55  282   28.54)
(smt.stats   83  12321 346826 2074040  9396/8990/508   37230/4669    56  284   28.63)
ramon: poll                 wall=12.000s usage=11.992s mem=30628KiB load=1.00 rootload=1.00
(smt.stats   84  12498 352121 2114848  9505/9092/508   38489/4670    56  284   28.72)
(smt.stats   85  12692 360934 2154880  9602/9181/508   39227/4675    56  284   28.92)
(smt.stats   86  12905 369283 2239427  9796/9373/508   40116/4678    56  284   29.11)
ramon: poll                 wall=13.000s usage=12.991s mem=30792KiB load=1.00 rootload=1.00
(smt.stats   87  13139 378056 2360337  9815/9481/508   42432/4678    56  284   29.50)
(smt.stats   88  13396 384784 2452133  9859/9514/509   42857/5440    57  300   29.59)
(smt.stats   89  13678 398003 2626692  9948/9587/513   43850/5440    57  300   29.79)
ramon: poll                 wall=14.000s usage=13.991s mem=31308KiB load=1.00 rootload=1.00
(smt.stats   90  13988 411811 2763762  9994/9593/513   45735/5604    58  320   30.08)
ramon: poll                 wall=15.000s usage=14.986s mem=31848KiB load=0.99 rootload=1.00
(smt.stats   91  14089 416216 2774572 10045/9642/514   46154/5868    59  322   30.27)
ramon: poll                 wall=16.000s usage=15.985s mem=32360KiB load=1.00 rootload=1.00
(smt.stats   92  14200 420490 2818087 10207/9731/514   46574/5872    59  322   30.46)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   93  14322 425114 2861178 10409/10047/515   47292/5873    59  322   30.55)
ramon: poll                 wall=17.000s usage=16.984s mem=32468KiB load=1.00 rootload=0.99
(smt.stats   94  14456 428793 2900011 10461/10066/515   48255/5877    59  322   30.65)
(smt.stats   95  14603 433182 2950401 10524/10105/516   49011/6066    60  339   30.74)
ramon: poll                 wall=18.000s usage=17.984s mem=32724KiB load=1.00 rootload=1.00
(smt.stats   96  14764 438665 3007255 10711/10184/516   49783/6066    60  339   31.03)
(smt.stats   97  14941 441953 3046028 10797/10436/517   50753/6212    61  345   31.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 284)
(smt.stats   98  15135 446833 3088447 10904/10440/517   51081/6214    61  345   31.13)
ramon: poll                 wall=19.003s usage=18.988s mem=32980KiB load=1.00 rootload=1.00
(smt.stats   99  15348 458381 3168550 10940/10579/517   52262/6214    61  345   31.32)
ramon: poll                 wall=20.000s usage=19.983s mem=33236KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:51:45 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.990s
ramon: group.utime          19.962s
ramon: group.stime          0.028s
ramon: group.mempeak        33496KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
