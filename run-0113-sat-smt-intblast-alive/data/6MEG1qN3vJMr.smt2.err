ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:02:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41383 MiB
ramon: sys.mem.avail        61385 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6MEG1qN3vJMr.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3686990
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  69       0    18.51   0.00)
(sat.stats    112    523    0   224/224   112/35  69       0    18.83   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 426 :time 0.00)
(sat.stats    112    523    0   224/224   112/35  69       0    18.83   0.00)
(sat.stats    112    523    0   224/224   112/35  69       0    18.83   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 376418.83 :time 0.00)
(sat.stats    112    523    0   224/224    58/35  69       0    18.83   0.00)
(sat.stats    175   2122    1   224/224   121/83  69       0    18.92   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    178   2163    2   224/224   124/84  69       0    18.92   0.01)
(sat.stats    181   2204    3   224/224   127/84  69       0    18.92   0.01)
(sat.stats    184   2247    4   224/224   130/84  69       0    18.92   0.01)
(sat.stats    187   2296    5   224/224   133/84  69       0    18.92   0.01)
(sat.stats    190   2358    6   224/224   136/84  69       0    18.92   0.01)
(sat.stats    193   2420    7   224/224   139/84  69       0    18.92   0.01)
(sat.stats    196   2491    8   224/224   142/84  69       0    18.92   0.01)
(sat.stats    199   2537    9   224/224   145/86  69       0    18.92   0.01)
(sat.stats    202   2546   10   224/224   148/89  69       0    18.92   0.01)
(sat.stats    205   2554   11   224/224   151/92  69       0    18.92   0.01)
(sat.stats    208   2561   12   224/224   154/95  69       0    18.92   0.01)
(sat.stats    211   2569   13   224/224   157/98  69       0    18.92   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    314   3530   26   510/510   260/130  69       0    20.09   0.27)
ramon: poll                 wall=1.000s usage=0.992s mem=21864KiB load=0.99 rootload=0.98
ramon: poll                 wall=2.000s usage=1.981s mem=22284KiB load=0.99 rootload=0.99
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 7120 :time 0.00)
 (sat-cleaner :elim-literals 466 :elim-clauses 0 :cost 8020 :time 0.00)
(sat.stats   1200  20130   53 10615/10615  1213/180  80       0    21.54   2.45)
(sat.stats   1203  20300   54 10696/10696  1217/180  80       0    21.54   2.45)
(sat.stats   1206  20317   55 10773/10773  1222/180  80       0    21.45   2.46)
(sat.stats   1634  30603  101 10955/10955  1666/394  80       0    21.64   2.60)
 (sat-cleaner :elim-literals 715 :elim-clauses 0 :cost 14438 :time 0.00)
ramon: poll                 wall=3.000s usage=2.980s mem=23288KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.980s mem=23764KiB load=1.00 rootload=1.00
(sat.stats   3203  59118  165 17765/17765  3301/648  81       0    22.94   4.15)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 20473 :time 0.00)
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units        :memory       )
(sat.stats   3643  69058  184 21244/21244  3761/748  82       0    23.51   4.58)
ramon: poll                 wall=5.000s usage=4.980s mem=24672KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.980s mem=25176KiB load=1.00 rootload=1.00
(sat.stats   5501  96483  300 26715/26715  4962/960  82       0    24.29   6.08)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 31261 :time 0.00)
lshr: (lshr[46] (bv2int %0) (mod (bv2int %1) 46)) 0 := 268430524 >>l 31
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 0&44834437398528
lshr: (lshr[64] (* 262144 (bv2int %0)) (mod (+ 18 #59 #278) 64)) 70361078300672 := 70361078300672 >>l 49
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 32767 := 32767&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 9290 := 32767&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 16228 := 32766&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 20488 := 32766&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 26320 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 17600 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 32 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 22784 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 128 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 4096 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 1024 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 512 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 2048 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 24576 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 16384 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 32765&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 11430 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 32765&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 8133 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 32765&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 4 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 32765&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 6648 := 32765&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 16&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 16 := 16&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 33&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 32 := 33&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 64&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 64 := 64&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 32763&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 2 := 32763&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 32762&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 19584 := 32762&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 259&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 256 := 259&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 515&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 512 := 515&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 1026&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 1024 := 1026&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 2050&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 2048 := 2050&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 4098&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 4096 := 4098&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 8194&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 8192 := 8194&44834437398528
band: (band[46] (lshr[46] (bv2int %0) (mod #59 46)) (if (= #469 45) 1253477541959783020469682176 (if #471 626738770979891510234841088 #559))) 0 := 16387&44834437398528
band: (band[46] (lshr[64] (* 262144 #54) (mod #279 64)) (if (= #582 63) 657183233519010720236008728690688 (if #584 328591616759505360118004364345344 #708))) 16384 := 16387&44834437398528
 (sat-cleaner :elim-literals 15 :elim-clauses 3 :cost 36137 :time 0.00)
ramon: poll                 wall=7.000s usage=6.979s mem=27232KiB load=1.00 rootload=0.99
(sat.stats   8931 139785  471 31914/31914  6840/1098 282       0    26.39   7.91)
ramon: poll                 wall=8.000s usage=7.979s mem=27700KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 43848 :time 0.00)
ramon: poll                 wall=9.000s usage=8.979s mem=28168KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.979s mem=28492KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.978s mem=30116KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.978s mem=31196KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.978s mem=32968KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.977s mem=33644KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.977s mem=35140KiB load=1.00 rootload=1.00
(sat.stats  15480 371349  576 53514/53514 10470/1187 297       0    35.29  15.79)
ramon: poll                 wall=16.000s usage=15.977s mem=36668KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.977s mem=38156KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.004s usage=17.980s mem=39740KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.976s mem=42528KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 69329 :time 0.00)
ramon: poll                 wall=20.000s usage=19.976s mem=42728KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:02:36 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.991s
ramon: group.utime          19.955s
ramon: group.stime          0.036s
ramon: group.mempeak        42984KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
