ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:10:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41736 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/NQREAPlzjeYw.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2933344
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3284    355  1259/1142/114     101/22     9   22   19.05)
(smt.stats    1    202   6621   1266  1412/1285/120     198/25    13   26   19.15)
(smt.stats    2    313   9073   5036  1440/1304/120     309/25    13   26   19.34)
(smt.stats    3    414  11778   7336  1944/1761/122     403/31    14   27   19.44)
(smt.stats    4    525  14332   8397  2468/2215/124     533/34    14   27   19.54)
(smt.stats    5    647  16666   9079  2498/2266/124     649/57    15   32   19.54)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1 := 281474976710656&1
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 1 := 2251799813685246 << 48
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421313 := 1125899906809859 << 49
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 1125899906842624 := 1125899906842626 << 48
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&0
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 1 := 562949953421314 << 49
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&0
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 1 := 562949953421314 << 49
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 2 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 8 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 16 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 32 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 64 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 281474976710656 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 1125899906842624 := 1125899906908166 << 48
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&0
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953454081 := 562949953454082 << 49
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 2 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 8 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 64 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 128 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 256 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 512 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1024 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 2048 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4096 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 8192 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16384 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32768 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 65536 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 131072 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 262144 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 524288 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1048576 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 2097152 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4194304 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 8388608 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16777216 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 33554432 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 67108864 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 134217728 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 268435456 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 536870912 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1073741824 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 2147483648 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4294967296 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 8589934592 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 17179869184 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 34359738368 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 68719476736 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 137438953472 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 274877906944 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 549755813888 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1099511627776 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 2199023255552 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4398046511104 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 8796093022208 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 17592186044416 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 35184372088832 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 70368744177664 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 140737488355328 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 281474976710656 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 281474976710656 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 281474976710655 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 281474976710654 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 281474976710652 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 281474976710648 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 16 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 32 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 64 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 128 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 256 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 512 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1024 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2048 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4096 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 8192 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 16384 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4096 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 8192 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 16384 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 32768 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2048 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4096 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2048 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2048 := 281474976710656&562949953421312
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  17735  11210  2723/2445/300     754/74    17   72   20.88)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 65536 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 131072 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 262144 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 524288 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1048576 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2097152 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4194304 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2097152 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4194304 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 8388608 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 16777216 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 33554432 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 67108864 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 134217728 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 268435456 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 536870912 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1073741824 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2147483648 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4294967296 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 8589934592 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 17179869184 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 34359738368 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 34359738368 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 68719476736 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 137438953472 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 274877906944 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 549755813888 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1099511627776 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2199023255552 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4398046511104 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1099511627776 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2199023255552 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 8796093022208 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 17592186044416 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 17592186044416 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 35184372088832 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 70368744177664 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 140737488355328 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 281474976710656 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 67108864 := 281474976710656&562949953421312
(smt.stats    7    859  20026  15862  2845/2599/476     883/86    19  114   21.12)
(smt.stats    8    982  23161  21671  2883/2639/500    1075/151    25  142   21.32)
(smt.stats    9   1116  28473  28070  2886/2640/500    1223/151    25  142   21.32)
(smt.stats   10   1217  30696  31942  2912/2648/500    1332/151    25  142   21.32)
(smt.stats   11   1328  33854  36214  2927/2678/500    1459/151    25  142   21.41)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421311
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421311
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 2251799813685250 := 2251799813685246 << 48
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 64 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 64 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 256 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 128 := 281474976710656&562949953421312
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  36362  41903  3011/2760/558    1620/184    26  147   21.60)
(smt.stats   13   1585  38676  46366  3075/2773/560    1726/216    27  183   21.60)
ramon: poll                 wall=1.000s usage=0.923s mem=22924KiB load=0.92 rootload=0.89
(smt.stats   14   1732  41525  52948  3147/2849/560    1873/228    28  189   21.60)
(smt.stats   15   1833  42807  56568  3177/2926/561    1971/240    29  190   21.60)
(smt.stats   16   1944  47014  63660  3209/2953/564    2094/249    31  193   21.76)
(smt.stats   17   2066  50676  69755  3210/2954/564    2240/249    31  193   21.76)
(smt.stats   18   2200  54589  74351  3270/2955/564    2417/256    31  193   21.96)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1024 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1024 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1024 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 1024 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 256 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 256 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 128 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 128 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 32 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 64 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 64 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 64 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 64 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 1024&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 1024&562949953421312
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 2814749767106560 := 65546 << 10
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 1024&562949953421312
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 2814749767106560 := 65546 << 10
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 1024&562949953421312
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 2814749767106560 := 65546 << 10
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 1024&562949953421312
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 2814749767106560 := 65546 << 10
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 1024&562949953421312
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 2814749767106560 := 65546 << 10
(smt.stats   19   2347  58744  84464  3336/3043/571    2581/313    32  196   22.12)
(smt.stats   20   2508  62578  90217  3480/3219/584    2764/336    33  199   22.12)
(smt.stats   21   2609  68026  97814  3501/3234/585    2869/348    34  203   22.12)
ramon: poll                 wall=2.000s usage=1.922s mem=23496KiB load=1.00 rootload=1.00
(smt.stats   22   2720  73390 108961  3594/3270/585    3026/356    35  204   22.22)
(smt.stats   23   2842  77440 117277  3637/3372/589    3156/381    36  204   22.22)
(smt.stats   24   2976  80077 124838  3681/3420/591    3308/387    37  215   22.22)
(smt.stats   25   3123  84073 134218  3730/3426/592    3459/423    38  220   22.22)
(smt.stats   26   3284  88115 145593  3803/3541/593    3628/429    39  221   22.80)
(smt.stats   27   3461  90922 154664  3861/3555/593    3818/429    39  221   22.80)
(smt.stats   28   3562  92045 158277  3869/3609/593    3920/429    39  221   22.89)
(smt.stats   29   3673  93423 161373  3900/3613/595    4031/460    40  224   23.08)
ramon: poll                 wall=3.000s usage=2.922s mem=24432KiB load=1.00 rootload=1.00
(smt.stats   30   3795  95877 170826  4202/3905/595    4242/460    40  224   23.08)
(smt.stats   31   3929 100412 180958  4213/3953/596    4381/524    41  224   23.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076 102787 187047  4242/3981/597    4522/524    41  224   23.18)
(smt.stats   33   4237 108107 199700  4251/3990/597    4761/524    41  224   23.30)
(smt.stats   34   4414 110380 209855  4256/3994/597    4937/625    42  226   23.30)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&47
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&47
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 21392098230009857 := 1125899906318416 << 1
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 21392098230009857 := 1125899904548944 << 1
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&47
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 21392098230009900 := 1125899904614396 << 1
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&1125899902386204
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421360 := 562949952307207 << 2
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&1125899902386204
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421360 := 562949952307207 << 2
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&1125899902386204
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421360 := 562949952307207 << 2
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 2&1125899902386204
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421360 := 562949952307207 << 2
(smt.stats   35   4608 115547 221301  4310/4016/598    5271/633    43  228   23.40)
(smt.stats   36   4709 120261 231620  4325/4061/608    5382/708    44  230   23.49)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 16&1125899904614413
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 1125899904614413 := 1125899904614412 << 4
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 16&44
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 44 := 36 << 4
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 16&32
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421328 := 1 << 5
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 16&32
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421328 := 1 << 5
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 16&32
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421328 := 1 << 5
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 16&61572652204128
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421358 := 1924145381379 << 5
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 16&61572652204192
shl: (shl[50] (bv2int %1) (+ 50 (* 1125899906842623 #110))) 562949953421358 := 1924145381381 << 5
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 2 := 16&562949953421344
(smt.stats   37   4820 123209 237473  4386/4089/616    5503/726    45  233   23.59)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 16 := 16&562949953421313
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 8 := 16&562949953421313
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4 := 16&562949953421313
(smt.stats   38   4942 125359 245592  4429/4157/637    5635/728    45  233   23.59)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=4.000s usage=3.922s mem=24988KiB load=1.00 rootload=1.00
(smt.stats   39   5076 128066 254996  4454/4165/639    5770/753    46  243   23.68)
(smt.stats   40   5223 133488 265451  4547/4227/639    5930/765    47  245   23.78)
ramon: poll                 wall=5.000s usage=4.921s mem=25152KiB load=1.00 rootload=1.00
(smt.stats   41   5384 137615 275442  4667/4303/640    6097/787    48  249   23.78)
(smt.stats   42   5561 141688 293643  4716/4414/640    6272/787    48  249   23.87)
(smt.stats   43   5755 147816 311335  4764/4466/640    6475/788    48  249   23.87)
(smt.stats   44   5968 152120 324064  4812/4519/640    6683/789    48  249   23.87)
(smt.stats   45   6069 155947 333020  4841/4563/642    6840/853    49  250   23.87)
(smt.stats   46   6180 158332 343129  4859/4583/642    6952/853    49  250   23.97)
ramon: poll                 wall=6.000s usage=5.921s mem=25384KiB load=1.00 rootload=1.00
(smt.stats   47   6302 161454 352960  4979/4666/644    7106/896    50  251   24.07)
(smt.stats   48   6436 164272 362422  5165/4717/644    7254/897    50  251   24.07)
(smt.stats   49   6583 174140 381572  5172/4884/646    7416/904    51  258   24.16)
(smt.stats   50   6744 178695 393162  5332/5045/647    7576/917    52  263   24.16)
ramon: poll                 wall=7.000s usage=6.921s mem=25708KiB load=1.00 rootload=1.00
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 128 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 256 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 512 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 256 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 32 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 2 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 4 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 12 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 8 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 8 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 36 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 34 := 281474976710656&562949953421312
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 281474976710656&562949953421312
band: (band[50] (if (= #114 49) 1 (if #610 2 #706)) (shl[50] (bv2int %1) (+ 50 #709))) 1 := 281474976710656&562949953421312
(smt.stats   51   6921 182384 406203  5409/5118/712    7795/943    53  283   24.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7115 190872 424730  5493/5175/714    8018/944    53  283   25.04)
(smt.stats   53   7328 198034 442999  5524/5202/714    8288/960    54  284   25.13)
ramon: poll                 wall=8.000s usage=7.920s mem=26624KiB load=1.00 rootload=0.99
(smt.stats   54   7562 208674 461034  5536/5235/716    8645/1020    55  287   25.23)
(smt.stats   55   7663 214246 474558  5542/5240/717    8765/1065    56  293   25.23)
(smt.stats   56   7774 219519 483541  5548/5246/718    8914/1095    57  302   25.32)
(smt.stats   57   7896 225017 498845  5555/5253/718    9041/1095    57  302   25.32)
(smt.stats   58   8030 230558 514108  5586/5280/719    9211/1121    58  303   25.51)
(smt.stats   59   8177 235495 525653  5599/5285/720    9374/1122    58  303   25.51)
(smt.stats   60   8338 242300 541091  5658/5299/720    9569/1124    58  303   25.60)
ramon: poll                 wall=9.000s usage=8.920s mem=27028KiB load=1.00 rootload=1.00
(smt.stats   61   8515 246523 555662  5770/5466/723    9811/1141    59  308   25.70)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8709 252381 573614  5850/5469/723   10023/1142    59  308   25.70)
(smt.stats   63   8922 256321 603300  5898/5594/726   10231/1197    61  321   25.70)
(smt.stats   64   9156 269578 636864  5923/5619/728   10542/1212    62  342   25.70)
(smt.stats   65   9413 280469 671292  5946/5642/730   10856/1236    63  345   25.80)
(smt.stats   66   9514 283598 683815  5950/5646/732   10977/1240    64  357   25.80)
ramon: poll                 wall=10.000s usage=9.920s mem=27244KiB load=1.00 rootload=1.00
(smt.stats   67   9625 287158 700545  5963/5657/732   11099/1241    64  357   25.80)
(smt.stats   68   9747 294245 722104  5976/5665/732   11270/1260    65  364   25.92)
(smt.stats   69   9881 296565 724693  6127/5688/732   11424/1277    65  364   26.01)
(smt.delete-inactive-clauses  :num-deleted-clauses 337)
(smt.stats   70  10028 298692 734400  6356/6048/736   11272/1310    66  365   26.11)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 64 := 64&1125899906840576
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4 := 64&1125899902355456
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 4 := 64&1125899902355456
(smt.stats   71  10189 304668 753540  6408/6087/738   11459/1316    66  365   26.11)
band: (band[50] (if (= #376 63) 1 (if #588 2 #778)) (shl[64] (* 2 #357) (mod #793 64))) 0 := 16&1125899906840576
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 49 #785 #789) 64)) 2303591209400006656 := 562949951127590 << 4
(smt.stats   72  10366 306231 759781  6425/6102/743   11602/1346    67  410   26.11)
ramon: poll                 wall=11.000s usage=10.920s mem=27580KiB load=1.00 rootload=1.00
(smt.stats   73  10560 312692 781614  6492/6132/743   11941/1346    67  410   26.21)
(smt.stats   74  10773 319701 797214  6609/6211/743   12174/1389    68  410   26.30)
ramon: poll                 wall=12.005s usage=11.925s mem=27856KiB load=1.00 rootload=1.00
(smt.stats   75  11007 329086 820526  6863/6547/744   12438/1410    69  416   26.40)
(smt.stats   76  11264 339070 862757  7015/6580/744   12761/1412    69  416   26.49)
ramon: poll                 wall=13.000s usage=12.919s mem=28036KiB load=1.00 rootload=0.99
(smt.stats   77  11546 349382 908226  7190/6735/744   13114/1415    69  416   26.59)
ramon: poll                 wall=14.000s usage=13.919s mem=28164KiB load=1.00 rootload=1.00
(smt.stats   78  11647 353233 917796  7324/6914/744   13223/1417    69  416   26.68)
(smt.stats   79  11758 355419 927489  7349/7026/744   13350/1418    69  416   26.68)
(smt.stats   80  11880 358990 945309  7407/7046/744   13515/1421    69  416   26.68)
ramon: poll                 wall=15.000s usage=14.919s mem=28276KiB load=1.00 rootload=1.00
(smt.stats   81  12014 361607 958097  7450/7120/745   13697/1560    70  421   26.78)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   82  12161 365206 975337  7519/7162/745   13857/1561    70  421   26.78)
(smt.stats   83  12322 368386 993638  7658/7230/745   14039/1562    70  421   26.78)
ramon: poll                 wall=16.000s usage=15.919s mem=28336KiB load=1.00 rootload=1.00
(smt.stats   84  12499 370769 1001400  7867/7451/745   14230/1564    70  421   26.87)
ramon: poll                 wall=17.000s usage=16.919s mem=28520KiB load=1.00 rootload=1.00
(smt.stats   85  12693 379585 1023453  8001/7645/746   14531/1644    71  421   27.06)
(smt.stats   86  12906 388151 1054766  8008/7698/746   14788/1644    71  421   27.06)
(smt.stats   87  13140 395337 1081007  8016/7706/746   15068/1644    71  421   27.16)
ramon: poll                 wall=18.000s usage=17.918s mem=28928KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   88  13397 403511 1107461  8083/7722/746   15354/1647    71  421   27.26)
(smt.stats   89  13679 410725 1143982  8122/7804/746   15699/1647    71  421   27.26)
(smt.stats   90  13989 418369 1179870  8148/7828/746   16028/1649    71  421   27.26)
(smt.stats   91  14090 419733 1189032  8152/7842/746   16167/1649    71  421   27.26)
(smt.stats   92  14201 419977 1195749  8153/7843/746   16285/1649    71  421   27.71)
(smt.stats   93  14323 420797 1206910  8153/7843/746   16420/1649    71  421   27.71)
(smt.stats   94  14457 423705 1226500  8163/7848/746   16583/1649    71  421   27.71)
(smt.stats   95  14604 428466 1242612  8199/7864/746   16847/1649    71  421   27.90)
ramon: poll                 wall=19.000s usage=18.918s mem=29584KiB load=1.00 rootload=1.00
(smt.stats   96  14765 435418 1279891  8229/7891/746   17032/1649    71  421   28.05)
(smt.stats   97  14942 439903 1310709  8237/7923/746   17225/1649    71  421   28.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 235)
(smt.stats   98  15136 443954 1330967  8270/7954/746   17303/1649    71  421   28.05)
ramon: poll                 wall=20.000s usage=19.918s mem=29784KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:10:22 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.977s
ramon: group.utime          19.945s
ramon: group.stime          0.032s
ramon: group.mempeak        30040KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.059s
ramon: loadavg              1.00
