ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:34:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25335 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Y6YxLH1hukpW.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             72250
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&1
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 3 << 2
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 268435453&1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 268435452&1
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 268435452 := 268435454 << 2
(smt.stats    0    101   2163   1023   710/636/130      94/19    10   22   18.78)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 1 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 1 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 1 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 1 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 268435456 := 134479873 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 268435455 := 134479872 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 268435455 := 134479872 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 134479873 := 134479872 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 134479873 := 134479872 << 10
(smt.stats    1    202   3139   2339  1131/1012/149     196/21    15   38   18.98)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 390 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 389 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 25740288&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 268435455 := 147087921 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 390 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 1 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 4 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 8 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 16 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 32 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 64 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 128 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 256 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 25740288&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 64 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8267776&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 64 := 8267776&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 32 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 64 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 128 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 128 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 25740288&390
(smt.stats    2    313   3945   3764  1380/1262/244     341/38    17   60   19.56)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 512 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1024 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2048 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4096 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4096 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8192 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 524288 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 524288 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 32768 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 49152 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 540672 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 540672 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 540672 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 507904 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1064960 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1589248 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2637824 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4734976 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2113536 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4182646 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4182628 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4182624 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 3686400 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4186112 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4186112 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4186112 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183040 := 25740288&51208387
(smt.stats    3    414   5489   6893  1570/1411/343     560/66    20   80   20.04)
(smt.stats    4    525   7829  10005  1705/1558/366     911/227    24  100   20.23)
(smt.stats    5    647  10436  14720  1747/1606/370    1346/259    26  105   20.42)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  13389  22911  1833/1668/371    1488/265    27  105   20.52)
(smt.stats    7    859  13871  23761  2001/1740/371    1630/269    27  105   20.81)
(smt.stats    8    981  16675  30389  2097/1925/378    2019/284    29  111   20.81)
(smt.stats    9   1115  19357  36696  2123/1939/378    2442/319    30  116   20.91)
(smt.stats   10   1216  22481  43594  2133/1964/378    2819/321    30  116   20.91)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 3&3125
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 3&3125
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&3125
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 1 := 0 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&3125
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 1 := 0 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&50008
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 17
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&50008
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 3 << 17
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&50008
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 17
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&800131
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&800131
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&800131
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1 := 1&800131
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 21
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&800131
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 2 << 21
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&800131
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 2 << 21
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&800131
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 21
(smt.stats   11   1327  25419  50079  2221/1983/385    3167/337    31  119   21.20)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&12802096
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 25
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&12802096
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 25
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&195
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&195
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&195
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 8134531 << 9
(smt.stats   12   1449  27370  55454  2335/2106/425    3532/366    32  124   21.39)
ramon: poll                 wall=1.000s usage=0.924s mem=22552KiB load=0.92 rootload=0.92
(smt.stats   13   1583  29873  61293  2449/2204/431    4122/382    33  146   21.69)
(smt.stats   14   1730  33452  66975  2579/2383/432    4326/439    34  208   21.79)
(smt.stats   15   1831  36071  71223  2643/2392/434    4545/447    35  217   21.88)
(smt.stats   16   1942  38914  78219  2799/2611/435    4971/475    36  218   21.98)
(smt.stats   17   2064  44329  91936  2813/2613/437    5271/476    36  218   21.98)
ramon: poll                 wall=2.000s usage=1.922s mem=23388KiB load=1.00 rootload=0.99
(smt.stats   18   2198  48387 100026  2888/2690/440    5589/697    38  233   22.20)
(smt.stats   19   2345  53682 112745  2894/2706/440    5908/697    38  233   22.20)
(smt.stats   20   2506  56339 119717  2961/2773/441    6426/810    39  235   22.30)
(smt.stats   21   2607  59856 124891  3086/2775/442    6719/818    39  235   22.39)
(smt.stats   22   2718  63166 134102  3231/2929/443    7150/825    39  235   22.50)
(smt.stats   23   2840  65823 147374  3320/3064/443    7418/965    40  239   22.63)
(smt.stats   24   2974  68839 163136  3342/3154/444    8159/996    41  240   22.63)
ramon: poll                 wall=3.000s usage=2.919s mem=23936KiB load=1.00 rootload=1.00
(smt.stats   25   3121  73433 181833  3372/3173/445    8703/998    41  240   22.72)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282  77115 202577  3400/3212/451    9065/1244    42  241   23.01)
(smt.stats   27   3459  81666 217981  3499/3216/452    9498/1295    43  263   23.01)
(smt.stats   28   3560  83290 226923  3525/3334/453    9704/1295    43  263   23.01)
(smt.stats   29   3671  84994 237362  3527/3336/453    9933/1341    44  269   23.01)
(smt.stats   30   3793  86696 248094  3542/3351/454   10266/1341    44  269   23.01)
(smt.stats   31   3927  88237 268519  3591/3356/454   10606/1375    45  269   23.10)
ramon: poll                 wall=4.000s usage=3.918s mem=24508KiB load=1.00 rootload=1.00
(smt.stats   32   4074  91628 278204  3720/3443/454   10850/1383    45  269   23.20)
(smt.stats   33   4235  98013 307074  3734/3522/456   11475/1442    46  270   23.30)
(smt.stats   34   4412 101252 330882  3765/3556/457   11993/1530    47  275   23.39)
ramon: poll                 wall=5.000s usage=4.917s mem=24852KiB load=1.00 rootload=0.99
(smt.stats   35   4606 103982 345975  3818/3596/458   12484/1530    47  275   23.52)
(smt.stats   36   4707 107190 362160  3821/3609/459   12592/1639    48  297   23.52)
(smt.stats   37   4818 109221 378642  3825/3611/461   12755/1658    49  330   23.52)
(smt.stats   38   4940 110637 390627  3834/3622/463   13123/1658    49  330   23.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 56)
(smt.stats   39   5074 112311 400888  3857/3622/463   13352/1659    49  330   23.71)
(smt.stats   40   5221 114913 413818  3903/3648/463   13659/1746    50  334   23.71)
(smt.stats   41   5382 121946 440944  3980/3694/465   14398/1746    50  334   23.81)
ramon: poll                 wall=6.000s usage=5.917s mem=25180KiB load=1.00 rootload=1.00
(smt.stats   42   5559 127523 466455  4006/3794/469   15253/1853    51  355   23.90)
(smt.stats   43   5753 133778 502365  4017/3800/469   15562/1853    51  355   24.00)
(smt.stats   44   5966 139170 532228  4030/3815/469   16107/2033    52  366   24.19)
(smt.stats   45   6067 142251 544187  4043/3821/469   16362/2034    52  366   24.29)
ramon: poll                 wall=7.000s usage=6.914s mem=25572KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178 145819 556622  4122/3847/470   16640/2147    53  368   24.29)
(smt.stats   47   6300 148527 569400  4175/3950/470   16843/2147    53  368   24.29)
(smt.stats   48   6434 153826 602651  4185/3973/471   17252/2223    54  371   24.29)
ramon: poll                 wall=8.000s usage=7.913s mem=25696KiB load=1.00 rootload=1.00
(smt.stats   49   6581 159055 631170  4196/3979/471   17555/2223    54  371   24.38)
(smt.stats   50   6742 163523 654792  4234/3985/471   17772/2224    54  371   24.38)
(smt.stats   51   6919 169275 688904  4359/4023/471   18259/2228    54  371   24.58)
(smt.stats   52   7113 173963 712338  4425/4170/471   18773/2230    54  371   24.68)
ramon: poll                 wall=9.000s usage=8.913s mem=25996KiB load=1.00 rootload=1.00
(smt.stats   53   7326 180039 740787  4640/4268/471   19104/2232    54  371   24.77)
(smt.stats   54   7560 186320 790952  4702/4490/472   20038/2567    55  372   24.77)
(smt.stats   55   7661 188650 805170  4898/4623/473   20432/2576    55  372   24.87)
(smt.stats   56   7772 190517 814620  5041/4707/473   20668/2579    55  372   24.96)
ramon: poll                 wall=10.004s usage=9.914s mem=26372KiB load=1.00 rootload=1.00
(smt.stats   57   7894 193576 834176  5295/4894/473   21127/2587    55  372   25.06)
(smt.stats   58   8028 197327 860475  5362/5084/473   21675/2795    56  372   25.15)
(smt.stats   59   8175 199937 887769  5364/5150/474   22004/2795    56  372   25.15)
(smt.stats   60   8336 205052 921361  5417/5194/475   22963/2884    57  375   25.25)
(smt.stats   61   8513 208480 951032  5439/5212/478   24410/2944    58  439   25.44)
ramon: poll                 wall=11.000s usage=10.910s mem=26888KiB load=1.00 rootload=1.00
(smt.stats   62   8707 212558 981195  5503/5245/480   24803/2946    58  439   25.54)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 215782 1029162  5573/5317/480   25198/2947    58  439   25.63)
(smt.stats   64   9154 219283 1057104  5709/5339/485   25717/3177    59  455   25.82)
(smt.stats   65   9411 224432 1109790  5723/5476/486   26149/3177    59  455   25.82)
(smt.stats   66   9512 226117 1122449  5724/5485/486   26289/3254    60  467   25.82)
ramon: poll                 wall=12.000s usage=11.909s mem=27372KiB load=1.00 rootload=1.00
(smt.stats   67   9623 229298 1149701  5783/5485/486   26449/3254    60  467   25.92)
(smt.stats   68   9745 232141 1172771  5832/5545/486   26720/3256    60  467   25.92)
(smt.stats   69   9879 236896 1219381  5842/5599/486   26937/3256    60  467   25.92)
(smt.delete-inactive-clauses  :num-deleted-clauses 3673)
(smt.stats   70  10026 238980 1238413  5853/5614/486   24014/3256    60  467   26.11)
(smt.stats   71  10187 242559 1272043  5856/5617/486   24462/3256    60  467   26.11)
(smt.stats   72  10364 246693 1311720  5885/5617/486   24855/3258    60  467   26.21)
ramon: poll                 wall=13.000s usage=12.908s mem=27528KiB load=1.00 rootload=1.00
(smt.stats   73  10558 249528 1338999  5934/5667/486   25331/3258    60  467   26.21)
(smt.stats   74  10771 254633 1380862  5972/5695/486   25717/3258    60  467   26.21)
(smt.stats   75  11005 261429 1409956  6096/5738/486   26365/3262    60  467   26.30)
ramon: poll                 wall=14.000s usage=13.907s mem=27656KiB load=1.00 rootload=1.00
(smt.stats   76  11262 267908 1449561  6172/5881/487   26910/3628    61  472   26.30)
(smt.stats   77  11544 274443 1502282  6202/5942/487   27986/3630    61  472   26.49)
(smt.stats   78  11645 275367 1513255  6204/5961/487   28242/3630    61  472   26.49)
(smt.stats   79  11756 278072 1551990  6204/5961/487   28450/3630    61  472   26.49)
(smt.stats   80  11878 282965 1605650  6205/5962/487   28707/3630    61  472   26.49)
(smt.stats   81  12012 285534 1626039  6219/5976/487   29268/3630    61  472   26.59)
ramon: poll                 wall=15.000s usage=14.906s mem=27972KiB load=1.00 rootload=1.00
(smt.stats   82  12159 288890 1664602  6224/5977/487   29581/3630    61  472   26.59)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12320 293661 1698353  6313/5982/487   29849/3632    61  472   26.59)
(smt.stats   84  12497 298449 1740665  6322/6079/487   30469/3632    61  472   26.68)
(smt.stats   85  12691 306417 1790168  6353/6084/487   31206/3633    61  472   26.68)
ramon: poll                 wall=16.000s usage=15.903s mem=28156KiB load=1.00 rootload=0.99
(smt.stats   86  12904 314689 1867272  6355/6112/487   31701/3633    61  472   26.78)
(smt.stats   87  13138 316777 1904003  6361/6118/487   32156/3633    61  472   26.78)
(smt.stats   88  13395 321341 1971383  6363/6120/487   32484/3633    61  472   26.78)
(smt.stats   89  13677 325231 2024923  6370/6127/487   33034/3633    61  472   26.87)
ramon: poll                 wall=17.000s usage=16.901s mem=28296KiB load=1.00 rootload=1.00
(smt.stats   90  13987 330566 2090802  6374/6131/487   33915/3633    61  472   26.87)
(smt.stats   91  14088 333211 2120746  6375/6132/487   34090/3633    61  472   26.97)
(smt.stats   92  14199 336454 2150601  6423/6136/487   34351/3637    61  472   26.97)
(smt.stats   93  14321 339453 2164580  6432/6186/487   34535/3637    61  472   26.97)
(smt.stats   94  14455 344985 2219327  6443/6192/487   34979/3638    61  472   27.07)
(smt.stats   95  14602 349655 2246200  6509/6216/487   35573/3638    61  472   27.07)
ramon: poll                 wall=18.000s usage=17.901s mem=28964KiB load=1.00 rootload=1.00
(smt.stats   96  14763 351802 2271628  6526/6271/487   35964/3638    61  472   27.52)
(smt.stats   97  14940 359157 2334088  6529/6286/487   36450/3638    61  472   27.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 983040&0
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 0 := 491520 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 983040&0
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 0 := 491520 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 590434&1
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 269025890 := 134905856 << 2
(smt.stats   98  15134 363180 2358947  6669/6288/487   37151/3643    61  472   27.81)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 263680&1
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 67174913 := 67174784 << 2
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 263680&1
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 67174913 := 67174784 << 2
(smt.stats   99  15347 366364 2374179  6786/6451/492   37549/4479    62  473   27.90)
ramon: poll                 wall=19.000s usage=18.900s mem=29448KiB load=1.00 rootload=1.00
(smt.stats  100  15581 370056 2390745  7028/6617/497   38775/4482    62  473   27.99)
ramon: poll                 wall=20.000s usage=19.899s mem=29856KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 18:35:01 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.977s
ramon: group.utime          19.957s
ramon: group.stime          0.020s
ramon: group.mempeak        30112KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              0.99
