ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:17:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         36557 MiB
ramon: sys.mem.avail        62136 MiB
ramon: sys.nprocs           1125
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libsmbclient_vc1225231.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1303608
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
tabu (if (and (bvsle bv[4294967295:32] #18977) (not #21865)) (bvadd bv[1:32] (if #18975 bv[0:32] v423200028)) (if (and #9875 #12080) bv[0:32] v423200028))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      78      1   116.674     10034         0          0          160      605)
(sat.ddfw      28     20   84.4576     20000         0          1           81      831)
(sat.ddfw      28    130   114.943     40000         0          2            4     1372)
(sat.ddfw      11     80   104.219     70015         0          3          108     1571)
(sat.ddfw       5    241   85.0042    110052         0          4           61     1857)
(sat.ddfw       5    694   78.6583    160000         0          5           51     2218)
ramon: poll                 wall=1.000s usage=0.991s mem=23476KiB load=0.99 rootload=0.97
(sat.ddfw       2    337   48.9324    220089         1          6          111     2547)
(sat.ddfw       2   1025   45.1978    290010         1          7           13     2946)
(sat.ddfw       2   1025   42.2592    370049         2          8           61     3656)
ramon: poll                 wall=2.000s usage=1.991s mem=23476KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   38.1689    460013         3          9           30     4098)
ramon: poll                 wall=3.000s usage=2.991s mem=23476KiB load=1.00 rootload=1.00
(sat.ddfw       1    536   31.9492    560078         5         10           71     5139)
(sat.ddfw       1   1025   28.9347    670030         6         11           30     5532)
ramon: poll                 wall=4.000s usage=3.991s mem=23476KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   26.4861    790065         6         12           50     6513)
ramon: poll                 wall=5.000s usage=4.991s mem=23476KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.991s mem=23476KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   21.1758    920000         7         13           10     7100)
ramon: poll                 wall=7.000s usage=6.991s mem=23476KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.991s mem=23476KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   17.0154   1060003         7         14            4     7684)
ramon: poll                 wall=9.000s usage=8.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.990s mem=23276KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.990s mem=23276KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   7.68123   1210002         8         15            2     7832)
ramon: poll                 wall=20.000s usage=19.990s mem=23276KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:18:13 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.002s
ramon: group.utime          19.990s
ramon: group.stime          0.012s
ramon: group.mempeak        23532KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
