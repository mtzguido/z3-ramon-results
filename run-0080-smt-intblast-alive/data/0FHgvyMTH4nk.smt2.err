ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:21:24 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31222 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0FHgvyMTH4nk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4014826
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1421   1072   691/615/99     100/12     6   14   18.86)
(smt.stats    1    202   3214   3117  1168/1040/102     238/14     8   22   18.86)
(smt.stats    2    315   4831   5917  1292/1173/115     390/41    11   40   18.96)
(smt.stats    3    418   5640   8109  1444/1314/121     595/69    13   51   19.05)
(smt.stats    4    529   5968   9000  1542/1337/121     765/71    13   51   19.15)
(smt.stats    5    651   6759  12569  1632/1433/121     949/123    14   52   19.24)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    752   7049  13761  1733/1532/121    1077/123    14   52   19.24)
(smt.stats    7    863   7386  15494  1937/1667/121    1273/134    14   52   19.34)
(smt.stats    8    985   7756  16934  2097/1852/121    1436/136    14   52   19.34)
(smt.stats    9   1119   8194  17716  2247/1987/121    1743/136    14   52   19.63)
ramon: poll                 wall=1.000s usage=0.896s mem=20776KiB load=0.90 rootload=0.89
(smt.stats   10   1220   8810  19258  2602/2315/121    1910/136    14   52   19.63)
(smt.stats   11   1331   9150  20604  2904/2526/122    2044/166    15   55   19.72)
(smt.stats   12   1453  10132  25371  3088/2835/122    2269/166    15   55   19.82)
(smt.stats   13   1587  11195  27175  3173/2966/122    2578/167    15   55   19.82)
(smt.stats   14   1734  12535  30174  3316/3055/122    2798/169    15   55   19.92)
(smt.stats   15   1835  13224  33574  3466/3295/122    2977/169    15   55   19.92)
(smt.stats   16   1946  14009  37565  3537/3360/122    3190/169    15   55   19.92)
(smt.stats   17   2068  14845  43266  3590/3410/122    3400/169    15   55   20.02)
(smt.stats   18   2202  16025  52143  3676/3478/122    3607/169    15   55   20.02)
(smt.stats   19   2349  17245  61755  3813/3554/122    3820/170    15   55   20.02)
ramon: poll                 wall=2.000s usage=1.896s mem=21500KiB load=1.00 rootload=1.00
(smt.stats   20   2510  19000  77521  3844/3681/122    4290/170    15   55   20.12)
(smt.stats   21   2611  19863  85912  3916/3707/122    4666/170    15   55   20.31)
(smt.stats   22   2722  20658  94012  3977/3785/122    4812/170    15   55   20.31)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   23   2844  21476 104263  4037/3845/122    5025/170    15   55   20.31)
(smt.stats   24   2978  22257 108290  4167/3924/122    5228/173    15   55   20.41)
(smt.stats   25   3125  23447 114485  4294/4051/122    5463/173    15   55   20.50)
(smt.stats   26   3286  25091 126089  4443/4176/122    5746/173    15   55   20.50)
(smt.stats   27   3463  26471 134794  4585/4319/122    6130/174    15   55   20.50)
(smt.stats   28   3564  26938 142786  4600/4449/122    6348/174    15   55   20.60)
(smt.stats   29   3675  27700 146947  4679/4465/122    6561/176    15   55   20.60)
ramon: poll                 wall=3.000s usage=2.896s mem=22020KiB load=1.00 rootload=1.00
(smt.stats   30   3797  29013 160503  4750/4571/122    6804/176    15   55   20.60)
(smt.stats   31   3931  30023 168099  4822/4635/122    7093/176    15   55   20.70)
(smt.stats   32   4078  30745 179425  4905/4691/122    7416/176    15   55   20.70)
(smt.stats   33   4239  31921 191787  5051/4772/122    7654/176    15   55   20.79)
(smt.stats   34   4416  33336 205777  5078/4916/122    7924/176    15   55   20.79)
(smt.stats   35   4610  34080 213673  5165/4949/122    8327/176    15   55   20.89)
(smt.stats   36   4711  34457 218701  5213/5043/122    8597/176    15   55   21.06)
(smt.stats   37   4822  35065 225260  5274/5081/122    8800/176    15   55   21.06)
(smt.stats   38   4944  35683 232848  5339/5143/122    9000/176    15   55   21.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5078  36428 237799  5354/5205/122    9345/176    15   55   21.29)
ramon: poll                 wall=4.000s usage=3.896s mem=22652KiB load=1.00 rootload=1.00
(smt.stats   40   5225  38074 244522  5398/5246/123    9872/782    16   60   21.29)
(smt.stats   41   5386  39495 261271  5526/5270/124   10171/782    16   60   21.29)
(smt.stats   42   5563  40484 278998  5709/5411/124   10453/883    17   63   21.29)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions    )
(smt.stats   43   5757  41743 289423  5821/5583/124   10707/883    17   63   21.39)
(smt.stats   44   5970  43084 313482  5901/5744/125   11476/900    18   64   21.48)
(smt.stats   45   6071  43823 316744  5927/5770/125   11667/900    18   64   21.48)
(smt.stats   46   6182  44708 322227  5977/5799/125   11891/900    18   64   21.48)
(smt.stats   47   6304  45331 331203  6087/5887/125   12111/900    18   64   21.58)
(smt.stats   48   6438  46403 339613  6193/5971/125   12400/900    18   64   21.67)
(smt.stats   49   6585  47340 353491  6292/6077/125   12692/900    18   64   21.67)
ramon: poll                 wall=5.000s usage=4.895s mem=22960KiB load=1.00 rootload=1.00
(smt.stats   50   6746  48473 373465  6423/6178/125   12972/900    18   64   21.67)
(smt.stats   51   6923  49847 391156  6523/6300/125   13310/900    18   64   21.77)
(smt.stats   52   7117  50672 403113  6606/6398/125   13780/900    18   64   21.87)
(smt.stats   53   7330  52216 418421  6661/6481/125   14083/900    18   64   21.87)
(smt.stats   54   7564  53556 434583  6834/6554/125   14546/901    18   64   21.87)
(smt.stats   55   7665  54524 444376  6860/6702/125   14773/901    18   64   21.87)
(smt.stats   56   7776  55171 460044  6918/6727/125   15000/901    18   64   21.96)
(smt.stats   57   7898  56019 463270  6996/6800/125   15163/904    18   64   21.96)
(smt.stats   58   8032  56495 470975  7118/6941/125   15418/905    18   64   22.06)
(smt.stats   59   8179  57151 492345  7181/6994/125   15672/906    18   64   22.06)
ramon: poll                 wall=6.000s usage=5.895s mem=23380KiB load=1.00 rootload=1.00
(smt.stats   60   8340  58015 513129  7260/7049/127   15977/1301    19   66   22.15)
(smt.stats   61   8517  59026 535169  7347/7123/127   16380/1302    19   66   22.25)
(smt.stats   62   8711  60557 553351  7413/7226/127   16882/1302    19   66   22.25)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas            :deletions    )
(smt.stats   63   8924  63609 561666  7436/7281/127   17176/1302    19   66   22.35)
(smt.stats   64   9158  65728 569777  7488/7333/127   17703/1302    19   66   22.58)
(smt.stats   65   9415  69111 581836  7505/7356/127   18106/1302    19   66   22.67)
(smt.stats   66   9516  69766 590614  7533/7372/127   18371/1302    19   66   22.82)
(smt.stats   67   9627  70776 604597  7552/7396/127   18541/1302    19   66   22.82)
(smt.stats   68   9749  71852 618061  7665/7432/127   18728/1302    19   66   22.92)
(smt.stats   69   9883  73113 637115  7694/7531/127   18954/1302    19   66   22.92)
ramon: poll                 wall=7.000s usage=6.895s mem=24384KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 702)
(smt.stats   70  10030  74206 652710  7747/7562/127   18558/1302    19   66   22.92)
(smt.stats   71  10191  75556 668164  7747/7608/128   18873/1459    20   72   22.92)
(smt.stats   72  10368  77407 687118  7774/7608/128   19165/1459    20   72   23.01)
(smt.stats   73  10775  80385 767062  7914/7646/128   19761/1459    20   72   23.11)
(smt.stats   74  11266  83989 824451  7924/7778/128   20736/1459    20   72   23.60)
(smt.stats   75  11548  86394 841926  7927/7785/128   21224/1459    20   72   23.60)
(smt.stats   76  11649  87159 846410  7927/7788/128   21355/1459    20   72   23.60)
(smt.stats   77  11760  88954 856721  7931/7789/128   21537/1459    20   72   23.70)
(smt.stats   78  11882  89815 866511  7940/7797/128   21780/1459    20   72   23.70)
ramon: poll                 wall=8.000s usage=7.895s mem=25292KiB load=1.00 rootload=1.00
(smt.stats   79  12163  91844 909710  7997/7802/128   22403/1459    20   72   23.80)
(smt.stats   80  12324  92451 926484  8004/7865/128   22700/1459    20   72   23.80)
(smt.stats   81  12501  93175 941984  8008/7865/128   22981/1459    20   72   23.80)
(smt.stats   82  12695  94354 951214  8008/7869/128   23469/1459    20   72   23.90)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas            :deletions    )
(smt.stats   83  12908  95873 972592  8051/7870/128   23756/1459    20   72   23.90)
(smt.stats   84  13142  96853 1011300  8058/7915/128   24175/1459    20   72   23.99)
(smt.stats   85  13399  98725 1071921  8066/7919/128   24649/1459    20   72   24.09)
(smt.stats   86  13681 100422 1138944  8094/7927/128   25103/1459    20   72   24.09)
ramon: poll                 wall=9.000s usage=8.895s mem=25652KiB load=1.00 rootload=1.00
(smt.stats   87  14092 105677 1221930  8127/7956/128   25702/1459    20   72   24.18)
(smt.stats   88  14203 106508 1252820  8133/7988/128   25898/1459    20   72   24.28)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas            :deletions    )
(smt.stats   89  14325 107773 1273879  8135/7996/128   26058/1459    20   72   24.28)
(smt.stats   90  14606 109404 1327992  8140/7997/128   26524/1459    20   72   24.37)
(smt.stats   91  14767 110688 1375812  8141/8002/128   26742/1459    20   72   25.15)
(smt.stats   92  14944 111758 1421611  8141/8002/128   26977/1459    20   72   25.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   93  15138 113044 1436159  8141/8002/128   27427/1459    20   72   25.32)
(smt.stats   94  15351 114103 1484412  8142/8003/128   27768/1459    20   72   25.42)
(smt.stats   95  15585 116191 1511914  8145/8006/128   28239/1459    20   72   25.42)
(smt.stats   96  15842 117565 1569416  8145/8006/128   28614/1459    20   72   25.42)
ramon: poll                 wall=10.000s usage=9.895s mem=27176KiB load=1.00 rootload=1.00
(smt.stats   97  16124 119691 1602214  8369/8010/128   29075/1459    20   72   25.51)
(smt.stats   98  16434 121579 1619482  8669/8247/128   29477/1459    20   72   25.61)
(smt.stats   99  16774 125237 1648341  8936/8549/128   30094/1459    20   72   25.70)
(smt.stats  100  16875 126500 1672560  9003/8822/128   30301/1460    20   72   25.70)
(smt.stats  101  16986 127077 1681806  9045/8876/128   30885/1460    20   72   25.80)
(smt.stats  102  17108 127873 1697941  9115/8914/128   31118/1460    20   72   25.90)
(smt.stats  103  17242 128611 1714802  9165/8992/128   31277/1460    20   72   25.90)
(smt.stats  104  17389 129228 1722039  9212/9044/128   31455/1460    20   72   25.90)
ramon: poll                 wall=11.000s usage=10.894s mem=27380KiB load=1.00 rootload=1.00
(smt.stats  105  17550 130373 1750054  9326/9080/128   31738/1460    20   72   25.90)
(smt.stats  106  17727 131324 1770041  9510/9190/128   32108/1460    20   72   25.99)
(smt.stats  107  17921 133336 1790053  9841/9429/128   32483/1461    20   72   26.09)
(smt.stats  108  18134 134888 1808637  9916/9731/128   33158/1461    20   72   26.18)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas            :deletions    )
(smt.stats  109  18368 136807 1837145 10054/9795/128   33568/1461    20   72   26.28)
ramon: poll                 wall=12.000s usage=11.894s mem=27824KiB load=1.00 rootload=1.00
(smt.stats  110  18625 138708 1857227 10255/9921/128   34030/1461    20   72   26.28)
(smt.stats  111  18907 140981 1902997 10399/10145/128   34682/1461    20   72   26.37)
(smt.stats  112  19217 143383 1915575 10550/10285/128   35166/1461    20   72   26.47)
(smt.stats  113  19557 144598 1936314 10769/10437/128   35819/1461    20   72   26.58)
(smt.stats  114  19930 146947 1978941 10963/10665/128   36511/1462    20   72   26.67)
(smt.delete-inactive-clauses  :num-deleted-clauses 39)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions    )
(smt.stats  115  20031 147919 1984610 10993/10853/128   36685/1462    20   72   26.67)
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4194304 := 1073727603&4194304
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 3221211251 := 268419563 << 23
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4194304 := 1073741823&4194304
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 3221225471 := 268419563 << 23
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4194304 := 1073741818&4194304
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 3221225466 := 268419563 << 23
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 897581056 := 268419563 << 23
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 1 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 897581056 := 268419563 << 23
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 1 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 897515399 := 268419563 << 23
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 1 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 897581057 := 268419563 << 23
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 2 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4194301 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4194300 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4194298 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4194296 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 16 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 64 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 128 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 256 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 512 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1024 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 2048 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1024 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 2048 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4096 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 8192 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 16384 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 65536 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 131072 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 8192 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 16384 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 65536 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 131072 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 262144 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 524288 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1048576 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 2097152 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1047 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1040 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1040 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1040 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1030 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1028 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1028 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1028 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1028 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1026 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1024 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 512 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 256 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 256 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 256 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 256 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 256 := 897581056&4194304
(smt.stats  116  20142 149333 1991397 11135/10948/236   36867/2057    21   94   27.43)
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 64 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 64 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 128 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1048576 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 2097152 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 3145728 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 524288 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 524288 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 524288 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 524288 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 40960 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 49152 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 49152 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 49152 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 49152 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 40960 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 8192 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 2049 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 4096 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 2048 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 897515400 := 268419563 << 23
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 2 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 2 := 897581056&4194304
(smt.stats  117  20264 151140 1998352 11305/10997/276   37111/2068    21   94   27.52)
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 2 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 4 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 8 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 16 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 32 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 64 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 128 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 256 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 512 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 16 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 32 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 64 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 128 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 256 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 512 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 1024 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 2048 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 4096 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 8192 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 16384 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 65536 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 65536 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 4 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 5 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 5 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 20 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 16 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 32 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 64 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 128 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 64 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 64 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 16 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 16 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 16 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 32 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 32 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 32 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 512 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 1024 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 2048 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 4096 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 8192 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 8192 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 3584 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 1024 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 2048 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 1024 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 512 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 256 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 8 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 32768 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 16384 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 65536 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 262144 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 262144 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 131584 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 131584 := 897581056&4194304
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 897581056&4194304
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 131584 := 897581056&4194304
(smt.stats  118  20398 152701 2004135 11509/11145/351   37379/2085    21   94   28.02)
ramon: poll                 wall=13.000s usage=12.894s mem=30140KiB load=1.00 rootload=0.99
(smt.stats  119  20545 154760 2021232 11519/11325/500   38177/2086    21   94   28.32)
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 939524096&268435456
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 939524096&268435456
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 939524096&268435456
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 939524096&1
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 939524096 := 268419541 << 1
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 939524096&1
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 2013265920 := 268419541 << 1
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 939510784&4
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 2013252608 := 268419543 << 3
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 939510784&4
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 3086994432 := 268419543 << 3
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073614520&4
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 268419543 := 268419543 << 3
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073614520&4
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 268419543 := 268419543 << 3
(smt.stats  120  20706 159370 2041973 11759/11442/518   38498/2097    21   94   28.61)
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073614520&4
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 4 := 1073614520&4
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073614520&4
band: (band[30] (shl[30] (bv2int %0) (mod #101 30)) (if (= #382 29) 1 (if #384 2 #440))) 4 := 1073614520&4
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1 := 1073614520&4
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1 := 1073614520&4
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 2 := 1073614520&4
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 2 := 1073614520&4
(smt.stats  121  20883 166310 2075018 11819/11604/543   39445/2435    22  204   29.30)
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 1 := 1073741811&2
(smt.stats  122  21077 170526 2100064 11883/11650/555   40102/2437    22  204   29.59)
ramon: poll                 wall=14.000s usage=13.894s mem=31768KiB load=1.00 rootload=0.99
(smt.stats  123  21290 176103 2142248 12018/11773/556   40702/2438    22  204   29.78)
(smt.stats  124  21524 181379 2166848 12087/11846/558   41383/2748    23  251   30.03)
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073741790&65536
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073741790&65536
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 2&65536
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 3221225474 := 1073725697 << 17
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 2&65536
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 3221225474 := 1073725697 << 17
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 2&65536
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 3221225474 := 1073725787 << 17
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 2&65536
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 3221225474 := 1073725787 << 17
(smt.stats  125  21781 185487 2212938 12257/11961/577   42308/2751    23  251   30.31)
ramon: poll                 wall=15.000s usage=14.894s mem=32316KiB load=1.00 rootload=1.00
(smt.stats  126  22063 191771 2266908 12397/12017/582   43062/2753    23  251   30.70)
ramon: poll                 wall=16.000s usage=15.894s mem=32724KiB load=1.00 rootload=1.00
(smt.stats  127  22373 199469 2314497 12734/12142/582   44472/3004    24  335   31.17)
ramon: poll                 wall=17.000s usage=16.892s mem=33744KiB load=1.00 rootload=0.99
(smt.stats  128  22713 209586 2360497 13112/12686/594   46811/3013    24  335   31.85)
ramon: poll                 wall=18.005s usage=17.898s mem=33764KiB load=1.00 rootload=1.01
(smt.stats  129  23086 219798 2419225 13433/13091/596   48300/3594    25  423   32.04)
ramon: poll                 wall=19.000s usage=18.890s mem=34020KiB load=1.00 rootload=0.99
(smt.stats  130  23496 236661 2497410 13508/13177/596   50002/3597    25  423   32.23)
(smt.stats  131  23597 240065 2510596 13553/13254/596   50648/3994    26  429   32.32)
(smt.stats  132  23708 243221 2537442 13634/13301/596   50964/3997    26  429   32.42)
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073741799&8388608
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073741799&8388608
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073741799&8388608
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073741799&8388608
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073741799&8388608
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1073741799&8388608
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 8388608 := 1073741799&8388608
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 2147483623 := 564 << 24
band: (band[30] (shl[32] (bv2int %0) (mod #263 32)) (if (= #459 31) 0 (if #461 1 #521))) 8388608 := 1073741799&8388608
shl: (shl[32] (bv2int %0) (mod (+ #101 #262) 32)) 2147483623 := 564 << 24
ramon: poll                 wall=20.000s usage=19.890s mem=34532KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:21:44 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.972s
ramon: group.utime          19.940s
ramon: group.stime          0.032s
ramon: group.mempeak        34788KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              0.99
