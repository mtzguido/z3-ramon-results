ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:47:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39786 MiB
ramon: sys.mem.avail        61376 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xRR7lUP2ZHpe.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             4001233
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   238/238     0/0  64       0    18.52   0.00)
(sat.stats    102    609    0   238/238   102/31  64       0    18.85   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 269 :time 0.00)
(sat.stats    102    609    0   238/238   102/31  64       0    18.85   0.01)
(sat.stats    102    609    0   238/238   102/31  64       0    18.85   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 372418.85 :time 0.00)
(sat.stats    102    609    0   240/240    38/30  64       0    18.85   0.01)
(sat.stats    170   1622    1   240/240   106/84  64       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    173   1685    2   240/240   109/84  64       0    18.94   0.01)
(sat.stats    176   1751    3   240/240   112/84  64       0    18.94   0.01)
(sat.stats    179   1825    4   240/240   115/84  64       0    18.94   0.01)
(sat.stats    182   1891    5   240/240   118/84  64       0    18.94   0.01)
(sat.stats    185   1961    6   240/240   121/84  64       0    18.94   0.01)
(sat.stats    188   2038    7   240/240   124/84  64       0    18.94   0.01)
(sat.stats    191   2107    8   240/240   127/86  64       0    18.94   0.01)
(sat.stats    194   2119    9   240/240   130/89  64       0    18.94   0.01)
(sat.stats    197   2131   10   240/240   133/92  64       0    18.94   0.01)
(sat.stats    200   2157   11   240/240   136/95  64       0    18.94   0.01)
(sat.stats    203   2192   12   240/240   139/98  64       0    19.04   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    209   2263   14   240/240   145/104  64       0    19.04   0.01)
(sat.stats    357   4012   15   241/241   293/207  64       0    19.17   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1926 :time 0.00)
(sat.stats    510   6564   29   240/240   446/279  67       0    19.27   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4327 :time 0.00)
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #51))) 0 := 16 >>l 37
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 0&901457687937024
lshr: (lshr[64] (mod (div #81 2) 4503599627370496) (mod (+ 52 #722 #724) 64)) 12637100554401611777 := 8 >>l 36
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 1 := 12&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 1 := 1&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 35938 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 29616 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 12 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 8 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 50272 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 32768 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 64 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 3072 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 128 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 256 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 512 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 12288 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 2048 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 24576 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 16384 := 65535&901457687937024
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 6936 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 42791 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 65238 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 4 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 51248 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 32 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 40192 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 64 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 128 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 58880 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 24576 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 7168 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 6144 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 4096 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 32768 := 901457687937024&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 29913645056992543639331038822400 (if #478 14956822528496271819665519411200 #580))) 0 := 65535&901457687937024
band: (band[53] (if (= #591 63) 61263145076720729373349967508275200 (if #593 30631572538360364686674983754137600 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 16384 := 901457687937024&65535
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 6051 :time 0.00)
(sat.stats    713  12959   51  7564/7561   657/322 288       0    22.56   0.23)
ramon: poll                 wall=1.000s usage=0.912s mem=37936KiB load=0.91 rootload=0.87
(sat.stats   1065  15985  166 60740/60737  2578/1895 288       0    52.73   1.81)
ramon: poll                 wall=2.000s usage=1.910s mem=55088KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.910s mem=60528KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.910s mem=65552KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.909s mem=86044KiB load=1.00 rootload=0.98
ramon: poll                 wall=6.000s usage=5.908s mem=89380KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.908s mem=93152KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.908s mem=96956KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.907s mem=99424KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.907s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.906s mem=101MiB load=1.00 rootload=0.99
(sat.stats   1597  20250  343 145419/145416  5601/4386 288       0   102.78  11.77)
ramon: poll                 wall=12.000s usage=11.906s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.905s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.892s mem=107MiB load=0.99 rootload=0.98
ramon: poll                 wall=15.004s usage=14.891s mem=109MiB load=0.99 rootload=0.99
ramon: poll                 wall=16.000s usage=15.886s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.885s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.878s mem=115MiB load=0.99 rootload=0.99
ramon: poll                 wall=19.000s usage=18.877s mem=118MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.877s mem=119MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:48:08 2024
ramon: root.execname        z3
ramon: root.utime           19.860s
ramon: root.stime           0.110s
ramon: group.total          19.978s
ramon: group.utime          19.866s
ramon: group.stime          0.112s
ramon: group.mempeak        119MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.102s
ramon: loadavg              0.99
