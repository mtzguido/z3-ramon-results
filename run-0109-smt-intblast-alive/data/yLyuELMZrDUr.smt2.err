ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:07:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40408 MiB
ramon: sys.mem.avail        61704 MiB
ramon: sys.nprocs           1251
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/yLyuELMZrDUr.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3118840
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2599    457   724/608/94     132/25     2   14   18.95)
(smt.stats    1    202   3693   1301  1343/1136/97     270/47     3   18   19.04)
(smt.stats    2    313   4314   2130  1493/1298/97     410/64     4   19   19.14)
(smt.stats    3    414   5147   3156  1668/1528/97     556/65     4   19   19.42)
(smt.stats    4    525   6472   5926  2061/1938/116     845/196     8   42   19.42)
(smt.stats    5    647   7298  10145  2130/1978/118    1207/202     8   42   19.42)
(smt.stats :restarts  :decisions   :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748   8175  11841  2241/2052/118    1401/342     9   44   19.61)
(smt.stats    7    859   8766  14356  2408/2179/119    1605/389    10   45   19.61)
ramon: poll                 wall=1.000s usage=0.930s mem=20764KiB load=0.93 rootload=0.92
(smt.stats    8    981   9771  18103  2572/2393/122    1810/425    11   49   19.61)
(smt.stats    9   1115  11089  24555  2702/2476/122    2118/434    11   49   19.71)
(smt.stats   10   1216  12805  35315  2749/2615/123    2381/591    12   49   19.81)
(smt.stats   11   1327  13887  39352  2869/2631/123    2531/595    12   49   19.81)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  14916  43297  2943/2749/124    2734/630    13   49   19.91)
(smt.stats   13   1583  16169  48466  3014/2842/126    3088/662    14   50   19.91)
(smt.stats   14   1730  18048  54265  3117/2893/126    3322/670    15   52   19.91)
(smt.stats   15   1831  18921  57332  3187/3009/126    3453/673    15   52   20.03)
(smt.stats   16   1942  19597  63673  3224/3064/126    3635/673    15   52   20.03)
(smt.stats   17   2064  21195  72504  3334/3101/126    3897/679    15   52   20.03)
ramon: poll                 wall=2.000s usage=1.851s mem=21492KiB load=0.92 rootload=0.92
(smt.stats   18   2198  22225  78758  3402/3208/126    4143/680    15   52   20.14)
(smt.stats   19   2345  23114  84417  3519/3296/126    4388/684    15   52   20.14)
(smt.stats   20   2506  23799  96308  3627/3423/126    4671/686    15   52   20.24)
(smt.stats   21   2607  24224 104161  3705/3511/126    4832/687    15   52   20.34)
(smt.stats   22   2718  24939 111877  3804/3578/126    4986/689    15   52   20.34)
(smt.stats   23   2840  25593 116307  3976/3686/126    5139/690    15   52   20.34)
(smt.stats   24   2974  26677 125615  4085/3926/140    5377/927    16   70   20.44)
(smt.stats   25   3121  28982 131024  4311/3971/140    5828/930    16   70   20.53)
ramon: poll                 wall=3.000s usage=2.842s mem=21988KiB load=0.99 rootload=0.99
(smt.stats   26   3282  31868 141104  4468/4190/140    6122/933    16   70   20.63)
(smt.stats   27   3459  33749 152594  4556/4355/140    6397/955    17  112   20.63)
(smt.stats   28   3560  34772 159190  4650/4447/140    6606/956    17  112   20.63)
(smt.stats   29   3671  35609 164627  4744/4528/140    6810/957    17  112   20.73)
(smt.stats   30   3793  36186 171794  4840/4652/140    6967/959    17  112   20.73)
(smt.stats   31   3927  37048 179979  4916/4723/140    7150/960    17  112   20.73)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  38049 184128  5010/4801/140    7712/961    17  112   20.84)
(smt.stats   33   4235  39053 189823  5087/4909/140    8008/963    17  112   21.10)
(smt.stats   34   4412  40238 193758  5131/4985/140    8298/966    17  112   21.10)
(smt.stats   35   4606  41393 206269  5246/5057/140    8738/972    17  112   21.21)
ramon: poll                 wall=4.000s usage=3.828s mem=22592KiB load=0.99 rootload=0.99
(smt.stats   36   4707  42236 211400  5312/5122/140    8883/972    17  112   21.21)
(smt.stats   37   4818  43404 220363  5364/5187/140    9112/972    17  112   21.21)
(smt.stats   38   4940  44384 229566  5425/5246/140    9331/976    17  112   21.21)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  44944 237467  5532/5330/140    9580/984    17  112   21.21)
(smt.stats   40   5221  45881 254079  5621/5424/140    9788/988    17  112   21.30)
(smt.stats   41   5382  47429 272099  5705/5504/140    9986/991    17  112   21.30)
(smt.stats   42   5559  48643 290222  5809/5602/140   10251/994    17  112   21.30)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5753  50553 303477  6015/5680/140   10544/1007    17  112   21.41)
ramon: poll                 wall=5.000s usage=4.825s mem=22868KiB load=1.00 rootload=1.00
(smt.stats   44   5966  52440 319422  6212/5912/140   10914/1013    17  112   21.51)
(smt.stats   45   6067  53506 323812  6274/6104/140   11091/1013    17  112   21.60)
(smt.stats   46   6178  54320 329786  6449/6195/140   11333/1015    17  112   21.60)
(smt.stats   47   6300  54932 338113  6512/6341/140   11507/1016    17  112   21.60)
(smt.stats   48   6434  55643 354937  6641/6396/140   11710/1019    17  112   21.70)
(smt.stats   49   6581  56696 363422  6785/6550/141   11948/1410    18  115   21.70)
(smt.stats   50   6742  57881 375708  6920/6669/141   12198/1411    18  115   21.80)
ramon: poll                 wall=6.000s usage=5.823s mem=23280KiB load=1.00 rootload=0.99
(smt.stats   51   6919  58896 401548  7005/6795/141   12407/1412    18  115   21.80)
(smt.stats   52   7113  60106 428722  7131/6914/141   12694/1416    18  115   21.80)
(smt.stats   53   7326  61647 447286  7244/7023/141   12958/1418    18  115   21.89)
(smt.stats   54   7560  63027 484851  7408/7136/141   13271/1421    18  115   21.89)
(smt.stats   55   7661  63664 494990  7452/7295/141   13396/1421    18  115   21.89)
(smt.stats   56   7772  64312 513077  7545/7331/141   13573/1425    18  115   21.99)
(smt.stats   57   7894  64991 520496  7590/7421/141   13799/1427    18  115   22.08)
(smt.stats   58   8028  65552 535609  7641/7473/141   14016/1427    18  115   22.08)
(smt.stats   59   8175  66069 546951  7702/7523/141   14222/1427    18  115   22.08)
(smt.stats   60   8336  66542 555165  7799/7577/141   14407/1428    18  115   22.18)
ramon: poll                 wall=7.000s usage=6.822s mem=23604KiB load=1.00 rootload=1.00
(smt.stats   61   8707  69542 612659  8007/7679/141   15126/1432    18  115   22.46)
(smt.stats   62   8920  71509 638398  8101/7883/141   15409/1432    18  115   22.46)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   9154  73319 685605  8217/7972/141   15786/1432    18  115   22.55)
(smt.stats   64   9411  75659 717705  8339/8089/141   16264/1432    18  115   22.55)
(smt.stats   65   9512  76365 736370  8387/8222/141   16413/1432    18  115   22.55)
(smt.stats   66   9623  77316 748674  8424/8266/141   16571/1433    18  115   22.66)
ramon: poll                 wall=8.000s usage=7.821s mem=24016KiB load=1.00 rootload=1.00
(smt.stats   67   9745  77721 759676  8462/8302/141   16702/1433    18  115   22.66)
(smt.stats   68   9879  78643 769847  8568/8335/141   16890/1433    18  115   22.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   69  10187  79784 804701  8768/8462/141   17382/1434    18  115   22.76)
(smt.stats   70  10364  80928 830681  8838/8652/141   17662/1434    18  115   22.76)
(smt.stats   71  10558  82045 847223  8950/8720/141   18182/1435    18  115   22.86)
(smt.stats   72  10771  83260 863335  9189/8850/141   18537/1438    18  115   22.99)
(smt.stats   73  11005  84537 874606  9331/9120/141   18956/1438    18  115   23.08)
ramon: poll                 wall=9.000s usage=8.820s mem=24584KiB load=1.00 rootload=1.00
(smt.stats   74  11262  86784 900536  9546/9230/141   19536/1442    18  115   23.08)
(smt.stats   75  11544  88028 913297  9737/9453/141   20292/1442    18  115   23.19)
(smt.stats   76  11645  88691 922819  9942/9717/141   20438/1444    18  115   23.29)
(smt.stats   77  11756  89519 927897 10027/9817/141   20747/1445    18  115   23.29)
(smt.stats   78  11878  90136 936278 10164/9963/141   21041/1445    18  115   23.39)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  12012  91024 951085 10236/10064/142   21567/1768    19  117   23.49)
(smt.stats   80  12159  92521 964103 10308/10111/142   21829/1768    19  117   23.59)
(smt.stats   81  12320  93417 986575 10360/10187/142   22085/1768    19  117   23.59)
ramon: poll                 wall=10.000s usage=9.820s mem=25096KiB load=1.00 rootload=1.00
(smt.stats   82  12497  94834 1003267 10458/10236/142   22419/1768    19  117   23.59)
(smt.stats   83  12691  96114 1031044 10611/10352/142   22755/1768    19  117   23.68)
(smt.stats   84  12904  97478 1051831 10828/10496/142   23070/1768    19  117   23.68)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   85  13138  99071 1084119 10922/10712/142   23493/1770    19  117   23.78)
(smt.stats   86  13395 100973 1106974 10963/10802/142   23976/1771    19  117   23.78)
ramon: poll                 wall=11.000s usage=10.818s mem=25372KiB load=1.00 rootload=1.00
(smt.stats   87  13677 102564 1135391 11085/10873/142   24460/1772    19  117   23.87)
(smt.stats   88  13987 104656 1172152 11152/10958/142   25058/1772    19  117   23.97)
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 20 := 5316020&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 16 := 5316020&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 32 := 5316036&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1 := 5316032&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316096&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 128 := 5316224&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 256 := 5316352&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 512 := 5316608&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 47 := 5316224&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 46 := 5316224&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 32 := 5316224&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 4 := 5316224&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 8 := 5316224&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 12 := 5316224&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 8 := 5316224&608
(smt.stats   89  14088 105833 1180155 11243/11027/142   25277/1776    19  117   24.29)
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316225&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316319&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316289&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316303&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316673&608
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3226542145 := 79719733 << 13
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316673&608
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3226542145 := 79719733 << 13
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316674&608
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3226542146 := 79719733 << 13
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316802&608
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3226542274 := 79719733 << 13
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 128 := 229023744&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 128 := 229023744&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 128 := 229023744&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 256 := 229023744&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 512 := 229023744&608
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 128 := 5316224&304
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316288&304
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316288&304
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316288&304
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 64 := 5316288&304
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 256 := 5316288&304
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 256 := 5316288&304
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 256 := 5316544&304
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3226542016 := 79719732 << 12
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 256 := 5316544&304
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 1079058368 := 79719732 << 12
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 128 := 5316800&152
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3226542272 := 79719731 << 11
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 128 := 5316800&152
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3226542272 := 79719731 << 11
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 128 := 5316800&152
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3226542272 := 79719731 << 11
(smt.stats   90  14200 107387 1189932 11331/11122/217   25696/2024    20  132   24.49)
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 512 := 5317184&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 5317184&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 5317184&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 5317184&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 5317184&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 8389184&4982336
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3229614656 := 79719746 << 26
(smt.stats   91  14322 108311 1196083 11387/11209/258   25876/2027    20  132   24.60)
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7847488&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7847488&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7847488&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7848512&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7847488&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7850560&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7864896&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7864896&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7864896&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7864896&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7864896&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7864896&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 7862848&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 5319232&4982336
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 576 := 1049152&4982336
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3222274624 := 79719746 << 26
(smt.stats   92  14456 110050 1211983 11619/11310/279   26243/2035    20  132   24.90)
(smt.stats   93  14603 111846 1229237 11661/11485/320   26887/2329    21  160   25.00)
(smt.stats   94  14764 114275 1240521 11776/11521/320   27401/2336    21  160   25.60)
ramon: poll                 wall=12.000s usage=11.817s mem=27032KiB load=1.00 rootload=0.99
(smt.stats   95  14941 118359 1268523 11920/11688/320   28380/2340    21  160   25.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 111)
(smt.stats   96  15135 121006 1280040 12116/11806/321   28730/2720    22  166   26.18)
ramon: poll                 wall=13.000s usage=12.814s mem=28032KiB load=1.00 rootload=1.00
(smt.stats   97  15348 124057 1304822 12344/12038/321   29368/2728    22  166   26.28)
(smt.stats   98  15582 126419 1340090 12497/12350/323   29962/2728    22  166   26.37)
(smt.stats   99  15839 130401 1378630 12609/12359/323   30395/2951    23  183   26.47)
ramon: poll                 wall=14.000s usage=13.809s mem=27996KiB load=1.00 rootload=0.99
(smt.stats  100  16121 134910 1407186 12983/12707/326   31363/2960    23  183   26.76)
ramon: poll                 wall=15.000s usage=14.808s mem=28476KiB load=1.00 rootload=1.00
(smt.stats  101  16771 147064 1497678 13501/13266/328   33491/3569    25  211   27.04)
(smt.stats  102  16872 149732 1517683 13596/13364/329   33728/3569    25  211   27.04)
ramon: poll                 wall=16.000s usage=15.807s mem=28768KiB load=1.00 rootload=1.00
(smt.stats  103  16983 151756 1530813 13749/13458/329   34156/3575    25  211   27.14)
(smt.stats  104  17105 154300 1548244 13861/13649/329   34600/3575    25  211   27.23)
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1048576 := 6293503&9964672
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  105  17239 156889 1565098 14029/13723/329   35004/3581    25  211   27.34)
(smt.stats  106  17386 158802 1616559 14340/13894/329   35440/3804    26  213   27.44)
(smt.stats  107  17547 160445 1648473 14517/14333/329   36045/3805    26  213   27.53)
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 44953 := 606079872&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 44952 := 606079872&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45848 := 606080776&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45848 := 606080776&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45840 := 603987714&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45840 := 604241682&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45840 := 603991810&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45840 := 603989762&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45840 := 603989762&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45840 := 603989778&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45840 := 603991826&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45828 := 603991826&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45828 := 603991828&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45826 := 603991826&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45824 := 603991810&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45824 := 603991810&9964672
(smt.stats  108  17724 163836 1684261 14857/14380/330   36624/3965    27  218   27.63)
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45824 := 603989762&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45824 := 603989762&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45824 := 603989762&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45568 := 603989762&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45056 := 603989762&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1024 := 603989762&9964672
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3825215234 := 77817 << 27
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1024 := 603989762&9964672
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3825215234 := 77817 << 27
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1024 := 603989762&9964672
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 3825215234 := 77817 << 27
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1024 := 603989768&9964672
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 2751473416 := 77817 << 27
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1024 := 603989774&9964672
shl: (shl[32] (bv2int %0) (mod (+ #101 #263) 32)) 2751473422 := 77817 << 27
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1024 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 1024 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 32 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 0 := 134217728&9964672
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 1073741656 := 77817 << 27
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 0 := 134217728&9964672
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 1073741823 := 77817 << 27
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 0 := 134217728&9964672
shl: (shl[30] (bv2int %0) (mod (bv2int %0) 30)) 1073741822 := 77817 << 27
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45056 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 45056 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 2048 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 2048 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 2048 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 2048 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 2048 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 32768 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 24576 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 8192 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 16384 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 8192 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 16384 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 8192 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 8192 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 8192 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 32768 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 65536 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 131072 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 262144 := 134217728&9964672
band: (band[30] (shl[32] (bv2int %0) (mod #264 32)) (if (or #486 #487 #488 #489) 0 (if #490 1 #544))) 65536 := 134217728&9964672
(smt.stats  109  17918 167124 1716985 15037/14713/360   37538/3976    27  218   28.04)
ramon: poll                 wall=17.000s usage=16.806s mem=29744KiB load=1.00 rootload=1.00
(smt.stats  110  18131 171520 1756385 15186/14885/432   39519/4247    28  242   28.42)
ramon: poll                 wall=18.000s usage=17.803s mem=30468KiB load=1.00 rootload=0.99
(smt.stats  111  18365 175921 1800752 15469/15162/433   41144/4254    28  242   28.86)
(smt.stats  112  18622 181783 1861351 15769/15420/433   42655/4779    29  248   29.05)
ramon: poll                 wall=19.000s usage=18.797s mem=30828KiB load=0.99 rootload=0.99
(smt.stats  113  18904 189508 1932769 16210/15644/434   43659/4791    29  248   29.24)
(smt.stats  114  19214 195834 1959588 16452/16083/434   44231/5160    30  250   29.34)
(smt.stats  115  19554 198179 1986043 16616/16463/436   44909/5160    30  250   29.53)
ramon: poll                 wall=20.000s usage=19.794s mem=31016KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:07:57 2024
ramon: root.execname        z3
ramon: root.utime           19.840s
ramon: root.stime           0.020s
ramon: group.total          19.869s
ramon: group.utime          19.849s
ramon: group.stime          0.020s
ramon: group.mempeak        31272KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.071s
ramon: loadavg              0.99
