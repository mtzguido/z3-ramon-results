ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:24:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28995 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1406
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/OykGU1VR4lI5.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             401320
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   228/228     0/0  61       0    18.53   0.00)
(sat.stats    101    765    0   228/228   101/28  61       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 310 :time 0.00)
(sat.stats    101    765    0   228/228   101/28  61       0    18.83   0.01)
(sat.stats    101    765    0   228/228   101/28  61       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 358218.83 :time 0.00)
(sat.stats    101    765    0   230/230    37/27  61       0    18.83   0.01)
(sat.stats    300   4203    1   230/230   236/167  61       0    19.03   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    303   4240    2   230/230   239/170  61       0    19.03   0.02)
(sat.stats    383   5582    3   231/231   319/213  61       0    19.51   0.04)
(sat.stats    386   5655    4   231/231   322/214  61       0    19.51   0.04)
(sat.stats    389   5757    5   231/231   325/215  61       0    19.51   0.04)
(sat.stats    392   5853    6   231/231   328/216  61       0    19.51   0.04)
(sat.stats    395   5974    7   231/231   331/216  61       0    19.51   0.04)
(sat.stats    398   6103    8   231/231   334/216  61       0    19.51   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 2128 :time 0.00)
(sat.stats    497   8430    9   256/256   429/234  69       0    19.61   0.07)
(sat.stats    500   8647   10   263/263   432/235  69       0    19.61   0.08)
(sat.stats    503   8716   11   293/293   436/236  69       0    19.80   0.09)
(sat.stats    506   8752   12   315/315   441/238  69       0    19.80   0.09)
(sat.stats    509   8779   13   350/350   444/239  69       0    19.80   0.10)
(sat.stats    512   8786   14   371/371   447/239  69       0    19.80   0.10)
(sat.stats    515   8797   15   415/415   450/240  69       0    19.80   0.10)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    711  10518   41  2368/2368   686/279  69       0    20.18   0.32)
 (sat-cleaner :elim-literals 17 :elim-clauses 1 :cost 8098 :time 0.00)
 (sat-cleaner :elim-literals 31 :elim-clauses 1 :cost 8121 :time 0.00)
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 0&37929437875031
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #569 #573) 64)) 14205304 := 7864320 >>l 63
 (sat-cleaner :elim-literals 137 :elim-clauses 2 :cost 8664 :time 0.00)
(sat.stats   1200  29017   69  6001/6001  1222/422  83       0    20.87   0.79)
ramon: poll                 wall=1.000s usage=0.961s mem=22112KiB load=0.96 rootload=0.95
(sat.stats   1774  46806  144  6209/6209  1801/707  83       0    21.07   0.98)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 13483 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 14574 :time 0.00)
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #63))) 0 := 1656 >>l 24
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 0&188889826328576
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #569 #573) 64)) 281474976682030 := 54263808 >>l 39
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 1 := 1&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 2 := 2&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 4 := 4&188889826328576
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 18800 :time 0.00)
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 8 := 8&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 16 := 16&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 32 := 32&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 64 := 64&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 128 := 128&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 256 := 256&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 512 := 512&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 1024 := 1024&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 2048 := 2048&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 4096 := 4096&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 8192 := 8192&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 16384 := 16384&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 10027008 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 10780672 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 15335424 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 4718592 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 262144 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 1048576 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 6291456 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 8388608 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 4194304 := 16777215&188889826328576
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 15657 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 4892 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 139186 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 8 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 168832 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 16 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 96 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 64 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 1871616 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 1946112 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 1828864 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 1024 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 2519040 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 835584 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 8192 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 98304 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 1441792 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 65536 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 524288 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 262144 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 1048576 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 2097152 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 4194304 := 188889826328576&16777215
band: (band[48] (lshr[48] (bv2int %0) (+ 48 #462)) (if (= #82 47) 5338093821261312163387015168 (if #466 2669046910630656081693507584 #558))) 0 := 16777215&188889826328576
band: (band[48] (if (= #286 63) 349837316670181353939731426050048 (if #440 174918658335090676969865713025024 #437)) (lshr[64] (* 32768 #56) (mod #576 64))) 8388608 := 188889826328576&16777215
 (sat-cleaner :elim-literals 45 :elim-clauses 3 :cost 20548 :time 0.00)
(sat.stats   2813  69833  154  9251/9248  2896/832 387       0    23.72   1.60)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 22907 :time 0.00)
ramon: poll                 wall=2.000s usage=1.959s mem=27268KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.957s mem=28760KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.957s mem=29680KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.957s mem=31096KiB load=1.00 rootload=1.00
(sat.stats   3653  91865  226 35458/35455  3948/1055 413       0    30.18   5.40)
ramon: poll                 wall=6.000s usage=5.957s mem=32820KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 8 :elim-clauses 3 :cost 33473 :time 0.00)
ramon: poll                 wall=7.000s usage=6.957s mem=34796KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.956s mem=35348KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.956s mem=35712KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.956s mem=36256KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.956s mem=37068KiB load=1.00 rootload=1.00
(sat.stats   7081 210183  337 72065/72062  6263/1609 463       0    36.85  11.58)
ramon: poll                 wall=12.000s usage=11.955s mem=37548KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.955s mem=38028KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   8092 237048  534 77057/77054  6993/1853 463       0    37.28  12.97)
ramon: poll                 wall=14.000s usage=13.955s mem=38160KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.955s mem=39196KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.955s mem=40460KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.954s mem=41480KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.954s mem=42528KiB load=1.00 rootload=1.00
(sat.stats  12460 312913 1002 94027/94024  9654/2534 463       0    45.44  18.39)
ramon: poll                 wall=19.000s usage=18.954s mem=56336KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.954s mem=74016KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:24:38 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.999s
ramon: group.utime          19.975s
ramon: group.stime          0.024s
ramon: group.mempeak        76048KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.046s
ramon: loadavg              1.00
