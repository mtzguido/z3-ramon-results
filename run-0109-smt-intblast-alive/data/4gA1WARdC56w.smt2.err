ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:27:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42797 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4gA1WARdC56w.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2789044
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   3882    315  1393/1191/113     105/18     4   18   19.24)
(smt.stats    1    202   7094   1189  2043/1771/113     252/20     4   18   19.34)
ramon: poll                 wall=1.000s usage=0.990s mem=20492KiB load=0.99 rootload=0.98
(smt.stats    2    313   9769   2772  2359/2133/114     366/39     5   19   19.44)
(smt.stats    3    414  11758   4207  2409/2206/114     474/39     5   19   19.54)
(smt.stats    4    525  12877   5539  2800/2554/116     601/66     7   21   19.67)
(smt.stats    5    647  14561   7982  3009/2714/116     732/66     7   21   19.77)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  17078   9317  3026/2762/117     840/72     8   22   19.86)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&2
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&2
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843009213693956 := 0 << 60
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843009213693956 := 0 << 60
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843009213693956 := 0 << 60
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3 := 730483956308953259&4
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 2 := 730483956308953259&4
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 730483956308953259&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843009213693956 := 0 << 60
(smt.stats    7    859  18334  11409  3112/2845/144     985/85     9   33   20.06)
(smt.stats    8    981  21323  14730  3179/2902/151    1128/93    10   33   20.17)
(smt.stats    9   1115  22742  18938  3207/2924/164    1252/125    12   60   20.17)
(smt.stats   10   1216  24340  20830  3222/2937/164    1364/125    12   60   20.27)
(smt.stats   11   1327  27701  29532  3247/2971/164    1490/125    12   60   20.27)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30250  32742  3297/3014/168    1649/152    13   71   20.36)
(smt.stats   13   1583  31877  37707  3314/3032/169    1802/160    14   73   20.46)
(smt.stats   14   1730  35473  44534  3318/3036/169    1963/162    14   73   20.69)
(smt.stats   15   1831  38644  48581  3321/3039/169    2062/162    14   73   20.69)
(smt.stats   16   1942  41153  52767  3327/3044/169    2184/162    14   73   20.69)
(smt.stats   17   2064  46017  58469  3334/3049/169    2320/162    14   73   20.98)
(smt.stats   18   2198  48760  64776  3341/3055/169    2492/162    14   73   20.98)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 0&48
shl: (shl[61] (bv2int %1) (+ 61 (* 2305843009213693951 #118))) 47 := 1152921504606847000 << 1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 0&48
shl: (shl[61] (bv2int %1) (+ 61 (* 2305843009213693951 #118))) 47 := 1152921504606847000 << 1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 0&32
shl: (shl[61] (bv2int %1) (+ 61 (* 2305843009213693951 #118))) 31 := 1152921504606846992 << 1
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 0 := 0&32
shl: (shl[61] (bv2int %1) (+ 61 (* 2305843009213693951 #118))) 31 := 1152921504606846992 << 1
ramon: poll                 wall=2.000s usage=1.989s mem=22288KiB load=1.00 rootload=1.00
(smt.stats   19   2345  51297  71713  3378/3065/169    2651/166    14   73   21.17)
(smt.stats   20   2506  53499  78115  3384/3099/175    2823/180    15   76   21.17)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236729 := 43540236729&43540236734
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236728 := 43540236729&43540236734
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843052753930686 := 2305843052753930688 << 36
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236729 := 43540236729&43540236734
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236728 := 43540236729&43540236734
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 60 #909 #913) 64)) 2305843052753930686 := 2305843052753930688 << 36
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236729 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236728 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236720 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 43540236704 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 16 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 32 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 8 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 16 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 32 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 64 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 190 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 512 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236814
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236798
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236738
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236930
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43754978818
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 128 := 43540236729&43540236930
(smt.stats   21   2607  55294  82059  3500/3152/213    2944/194    16   76   21.55)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 4096 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 4096 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 4096 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 6144 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 10240 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 18432 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 132608 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 8192 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 10240 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 18432 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 34816 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 34816 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 34816 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 51200 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 51200 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 83968 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 83968 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 83968 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 151102 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 151040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 149504 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 215040 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3229696 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3229696 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3229696 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3622912 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3622912 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 4147200 := 43540236729&43540236802
(smt.stats   22   2718  58329  93817  3722/3375/348    3127/225    18  115   21.95)
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3885056 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3886592 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3886592 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3885056 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3885056 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5458944 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 5457920 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3361792 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 3360768 := 43540236729&43540236802
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 2312192 := 43540236729&2621442
band: (band[61] (if (= #445 63) 0 (if #635 1 #902)) (shl[64] (* 2 #421) (mod #917 64))) 2312192 := 43540236729&6293506
(smt.stats   23   2840  61088 104168  3976/3508/389    3436/273    19  126   22.19)
(smt.stats   24   2974  64974 116625  4025/3732/408    3921/324    20  128   22.28)
(smt.stats   25   3121  70361 132000  4064/3737/408    4159/583    21  157   22.67)
(smt.stats   26   3282  77573 153410  4074/3776/408    4364/583    21  157   22.77)
(smt.stats   27   3459  82934 168428  4095/3803/409    4791/709    22  161   22.88)
(smt.stats   28   3560  85218 174385  4179/3867/409    4978/709    22  161   22.97)
ramon: poll                 wall=3.000s usage=2.989s mem=24336KiB load=1.00 rootload=1.00
(smt.stats   29   3671  90828 189297  4185/3873/411    5195/879    24  174   23.07)
(smt.stats   30   3793  96955 201702  4203/3879/417    5440/880    24  174   23.16)
(smt.stats   31   3927 100573 208796  4280/3968/420    5554/887    25  208   23.16)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 104976 227157  4289/3977/421    5745/887    25  208   23.26)
(smt.stats   33   4235 109885 242353  4421/3986/421    6032/900    26  218   23.35)
ramon: poll                 wall=4.000s usage=3.989s mem=24768KiB load=1.00 rootload=0.99
(smt.stats   34   4412 114112 252702  4763/4171/424    6336/976    27  220   23.74)
ramon: poll                 wall=5.000s usage=4.988s mem=25092KiB load=1.00 rootload=1.00
(smt.stats   35   4606 119876 268959  4979/4487/424    6706/980    27  220   23.74)
(smt.stats   36   4707 124208 285982  4995/4668/424    6835/1088    28  226   24.20)
(smt.stats   37   4818 127880 299703  5079/4725/424    6964/1088    28  226   24.20)
ramon: poll                 wall=6.000s usage=5.988s mem=25636KiB load=1.00 rootload=0.99
(smt.stats   38   4940 131162 311476  5198/4779/424    7192/1088    28  226   24.29)
(smt.delete-inactive-clauses  :num-deleted-clauses 86)
(smt.stats   39   5074 135096 327116  5250/4914/424    7323/1090    28  226   24.29)
ramon: poll                 wall=7.000s usage=6.988s mem=25708KiB load=1.00 rootload=1.00
(smt.stats   40   5221 139386 338315  5539/4937/424    7569/1095    28  226   24.39)
(smt.stats   41   5382 143576 361686  5607/5259/424    7860/1096    28  226   24.39)
(smt.stats   42   5559 147665 380601  5801/5339/424    8191/1097    28  226   24.58)
ramon: poll                 wall=8.000s usage=7.988s mem=26000KiB load=1.00 rootload=1.00
(smt.stats   43   5753 152931 408922  6011/5514/424    8468/1100    28  226   24.68)
(smt.stats   44   5966 159011 427457  6106/5761/424    8763/1104    28  226   24.68)
(smt.stats   45   6067 161512 435799  6114/5795/424    9046/1104    28  226   24.77)
(smt.stats   46   6178 165163 446984  6210/5799/424    9241/1104    28  226   24.77)
(smt.stats   47   6300 170471 464855  6311/5911/424    9412/1107    28  226   24.87)
(smt.stats   48   6434 174710 481377  6335/6016/424    9583/1107    28  226   24.87)
(smt.stats   49   6581 180490 512823  6342/6023/424    9874/1107    28  226   24.87)
ramon: poll                 wall=9.000s usage=8.987s mem=26312KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 185295 535141  6377/6035/424   10124/1109    28  226   24.96)
(smt.stats   51   6919 190080 556578  6386/6069/424   10433/1109    28  226   25.06)
ramon: poll                 wall=10.000s usage=9.987s mem=26760KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.986s mem=26760KiB load=1.00 rootload=1.00
(smt.stats   52   7113 196909 576058  6458/6074/425   10841/1555    29  231   25.15)
ramon: poll                 wall=12.000s usage=11.986s mem=26800KiB load=1.00 rootload=1.00
(smt.stats   53   7326 203005 592300  6548/6168/425   11402/1556    29  231   25.25)
ramon: poll                 wall=13.000s usage=12.986s mem=26820KiB load=1.00 rootload=1.00
(smt.stats   54   7560 209728 616319  6747/6348/427   11859/1874    30  255   25.34)
ramon: poll                 wall=14.000s usage=13.986s mem=26936KiB load=1.00 rootload=1.00
(smt.stats   55   7661 211770 623842  6927/6464/427   11993/1874    30  255   25.34)
ramon: poll                 wall=15.000s usage=14.986s mem=26960KiB load=1.00 rootload=1.00
(smt.stats   56   7772 213769 626409  7017/6642/427   12130/1874    30  255   25.44)
(smt.stats   57   7894 215117 631087  7084/6761/427   12269/1874    30  255   25.44)
(smt.stats   58   8028 218349 644617  7128/6772/427   12530/1875    30  255   25.53)
ramon: poll                 wall=16.000s usage=15.985s mem=27072KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.985s mem=27104KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.985s mem=27104KiB load=1.00 rootload=1.00
(smt.stats   59   8175 221269 651093  7386/6854/427   12813/1878    30  255   25.73)
ramon: poll                 wall=19.000s usage=18.985s mem=27176KiB load=1.00 rootload=1.00
(smt.stats   60   8336 224055 659947  7686/7147/427   13000/1878    30  255   25.73)
ramon: poll                 wall=20.000s usage=19.985s mem=27260KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:28:18 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.000s
ramon: group.utime          19.980s
ramon: group.stime          0.020s
ramon: group.mempeak        27516KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.00
