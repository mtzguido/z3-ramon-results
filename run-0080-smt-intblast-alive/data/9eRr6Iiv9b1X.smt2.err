ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:44:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28803 MiB
ramon: sys.mem.avail        61765 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9eRr6Iiv9b1X.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4096450
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4236    376  1340/1199/110      93/6     6   18   19.36)
(smt.stats    1    202   7314   4439  2088/1882/112     191/8     7   20   19.46)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 3 := 3&2047
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 3 := 2 << 11
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 3 := 3&2047
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 3 := 2 << 11
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 3 := 3&2047
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 3 := 2 << 11
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2047 := 9011599449786368&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2046 := 9011599449786368&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 45057997248925696&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2040 := 45057997248925696&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2032 := 81104395048065024&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2016 := 81104395048065024&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 81104395048065024&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1408 := 90115994497849344&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1796 := 9011599449786368&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2045 := 9011599449784944&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784944&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784948&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784944&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784948&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784944&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784948&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784944&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784948&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784944&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784948&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784972&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784972&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784944&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784948&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784972&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 2044 := 9011599449784952&2047
(smt.stats    2    313   8767   6922  2232/1934/113     323/26     9   21   19.86)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784936&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784936&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784928&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784928&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784896&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784896&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784864&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784864&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784840&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784840&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1984 := 9011599449784836&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1992 := 9011599449784840&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1992 := 9011599449784840&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1992 := 9011599449784840&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1992 := 9011599449784840&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1864 := 9011599449784896&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1864 := 9011599449784904&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1864 := 9011599449784904&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1640 := 9011599449784904&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1608 := 9011599449784904&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1608 := 9011599449784904&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1608 := 9011599449784904&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1608 := 9011599449784904&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1608 := 9011599449784904&2047
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 584 := 9011599449784904&2047
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 9011599449784904 := 9011599449784833 << 11
(smt.stats    3    473  11626  14662  2765/2507/246     557/169    13   57   20.17)
(smt.stats    4    584  13465  17942  2841/2545/252     690/192    15   74   20.46)
(smt.stats    5    706  16986  23398  2982/2636/252     835/200    16   75   20.46)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    807  19837  29074  3136/2859/254     953/225    18   78   20.46)
(smt.stats    7    918  21811  34273  3187/2880/255    1145/256    19   80   20.58)
(smt.stats    8   1040  23026  37643  3207/2944/256    1277/290    20   82   20.58)
(smt.stats    9   1174  26000  43349  3249/2962/258    1459/318    21   84   20.68)
(smt.stats   10   1275  28052  47979  3317/2994/258    1576/322    22   87   20.78)
(smt.stats   11   1386  29763  51434  3410/3067/258    1705/322    22   87   20.78)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 9011599449784320&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 9011599449784320&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 9011599449784320&4398046511103
ramon: poll                 wall=1.000s usage=0.998s mem=21996KiB load=1.00 rootload=0.97
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 9011599449784320&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 9011599449784320&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 9011599449783040&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 9011599449782912&4398046511103
(smt.stats   12   1509  31341  56091  3465/3155/258    1862/325    22   87   20.78)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 128 := 9011599449782912&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 128 := 9011599449782912&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 128 := 9011599449782912&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 128 := 9011599449782912&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 128 := 9011599449782912&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 128 := 9011599449782912&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 640 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 640 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 644 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 660 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 692 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 756 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 756 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 756 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 8948 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 10996 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 10996 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 10996 := 9011599449783028&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 20724&4398046511103
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1643  34037  64760  3658/3337/339    2135/434    24  103   20.98)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 20724&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 20724&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 20724&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 20724&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 2134260&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 2109684&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 2109684&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 2109684&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 2109684&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 2109684&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 2109684&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 2109684&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 4206836&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 4206836&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 8417524&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 8417524&4398046511103
(smt.stats   14   1790  35059  68807  4156/3425/344    2382/463    25  104   21.26)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 8401140&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 8401140&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 8401140&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 8401140&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 8401140&4398046511103
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 12532 := 995572&4398046511103
(smt.stats   15   1891  36021  73841  4422/4101/410    2591/483    26  112   21.35)
(smt.stats   16   2002  37372  80639  4528/4266/417    3198/563    28  130   21.67)
(smt.stats   17   2124  40732  94133  4578/4275/418    3535/737    29  144   21.67)
(smt.stats   18   2258  44675 116345  4678/4315/418    3735/934    30  144   22.15)
(smt.stats   19   2405  47680 134261  4733/4421/418    3999/934    30  144   22.24)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2566  52599 152595  4859/4495/421    4643/1038    31  146   22.43)
(smt.stats   21   2667  55046 161368  4989/4654/421    4907/1274    32  149   22.43)
(smt.stats   22   2778  57880 172126  5009/4701/421    5207/1275    32  149   22.55)
(smt.stats   23   2900  60322 185498  5035/4722/421    5385/1275    32  149   22.55)
(smt.stats   24   3034  62488 197499  5055/4765/430    5831/1656    34  173   22.78)
ramon: poll                 wall=2.000s usage=1.998s mem=23996KiB load=1.00 rootload=1.00
(smt.stats   25   3181  65912 212314  5099/4785/430    6166/1658    34  173   22.78)
(smt.stats   26   3342  68035 229440  5140/4836/430    6356/1812    35  184   22.78)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 0&4398046511103
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018427387904 := 9011599449784832 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 0&4398046511103
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387903 := 9011599449784320 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 0&4398046511103
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018427387904 := 9007199254740992 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 0&4398046511103
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387903 := 9007199255789568 << 42
(smt.stats   27   3520  72282 256051  5191/4901/443    6711/1998    37  200   22.87)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 0&4398046511103
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018427387904 := 9007199271520257 << 42
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 0&4398046511103
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 9007199276761089 := 9007199276761088 << 42
(smt.stats   28   3621  74739 262161  5303/4919/443    7140/2006    37  200   22.97)
(smt.stats   29   3732  78308 269347  5378/5085/447    7358/2126    38  204   22.97)
(smt.stats   30   3854  79675 273441  5550/5085/447    7577/2136    38  204   23.11)
(smt.stats   31   3988  82060 281458  5642/5264/447    7862/2138    38  204   23.20)
(smt.stats   32   4135  86376 296089  5803/5390/449    8134/2239    39  209   23.30)
(smt.stats   33   4296  88457 307110  6456/5726/449    8601/2242    39  209   23.40)
(smt.stats   34   4473  91040 325037  6923/6226/449    9063/2246    39  209   23.49)
ramon: poll                 wall=3.000s usage=2.998s mem=24816KiB load=1.00 rootload=1.00
(smt.stats   35   4667  98020 370906  7010/6643/449   10083/2248    39  209   23.59)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 4718592&1
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018432106496 := 29273397580012033 << 1
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 4718592&1
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018432106496 := 54043195528445951 << 1
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 4718592&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2305843009216053250 := 2305843009216053248 << 1
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 0 := 4718592&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2305843009216053250 := 2305843009216053248 << 1
(smt.stats   36   4768 100357 378806  7071/6776/460   10235/2827    40  213   23.69)
(smt.stats   37   4879 106822 401777  7169/6856/464   10736/3006    41  214   23.87)
(smt.stats   38   5001 110588 418784  7276/6961/467   11152/3125    42  220   23.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 335)
(smt.stats   39   5136 123032 444713  7302/6987/467   11015/3267    43  229   23.94)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5283 128950 475927  7413/7023/467   11277/3271    43  229   24.03)
(smt.stats   41   5444 134691 497637  7469/7170/471   11515/3375    44  241   24.03)
(smt.stats   42   5621 142649 555309  7484/7181/476   12237/3440    45  251   24.17)
ramon: poll                 wall=4.000s usage=3.997s mem=25608KiB load=1.00 rootload=1.00
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 145 := 145&4095
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018427388049 := 31525197392649217 << 12
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 145 := 145&4095
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018427388049 := 31525197392649217 << 12
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 201 := 217&4095
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 201 := 217&4095
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 217 := 217&4095
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018427388121 := 31525197393697793 << 12
(smt.stats   43   5815 149213 587541  7694/7189/476   13151/3534    46  263   24.26)
(smt.stats   44   6028 155477 622245  7932/7622/488   13863/3891    48  268   24.37)
(smt.stats   45   6129 162067 672213  7934/7633/489   14077/4057    49  293   24.47)
(smt.stats   46   6240 166812 693153  8135/7635/489   14319/4158    50  301   24.47)
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1966080 := 1966080&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 4611686018429353984 := 9007199254740991 << 52
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1966080 := 1966080&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 9223372036856741888 := 9007199254736896 << 52
band: (band[62] (shl[64] (bv2int %0) (mod #431 64)) (if (= #845 63) 0 (if #847 1 #971))) 1966080 := 1966080&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #108 #430) 64)) 9223372036856741888 := 6755399443163137 << 52
(smt.stats   47   6362 171136 714541  8260/7893/493   14745/4214    51  319   24.56)
(smt.stats   48   6496 177007 739156  8449/8102/500   15333/4354    52  335   24.77)
(smt.stats   49   6643 187849 765636  8462/8125/500   15489/4482    53  337   24.88)
(smt.stats   50   6804 195753 821310  8471/8133/500   15808/4482    53  337   24.98)
ramon: poll                 wall=5.000s usage=4.997s mem=26332KiB load=1.00 rootload=1.00
(smt.stats   51   6981 204506 847975  8525/8185/500   16039/4482    53  337   25.07)
(smt.stats   52   7175 209249 869720  8683/8192/500   16428/4485    53  337   25.62)
ramon: poll                 wall=6.000s usage=5.997s mem=27344KiB load=1.00 rootload=1.00
(smt.stats   53   7388 213013 909334  9328/8531/500   17243/4487    53  337   25.91)
(smt.stats   54   7622 218536 952334  9368/9031/511   17781/4875    54  342   25.91)
(smt.stats   55   7723 222035 988692  9381/9038/511   17846/4991    55  400   25.91)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   56   7834 225239 1012537  9488/9053/511   18262/4995    55  400   26.00)
ramon: poll                 wall=7.000s usage=6.996s mem=27684KiB load=1.00 rootload=1.00
(smt.stats   57   7956 228445 1052070  9520/9185/512   18791/5078    56  404   26.00)
(smt.stats   58   8090 231590 1061671  9529/9188/513   19099/5078    56  404   26.11)
(smt.stats   59   8237 238019 1100310  9569/9199/513   19300/5083    56  404   26.11)
(smt.stats   60   8398 242053 1137457  9607/9247/513   19528/5208    57  407   26.33)
(smt.stats   61   8575 246923 1186112  9625/9290/515   20395/5250    58  416   26.43)
(smt.stats   62   8769 256001 1210760  9628/9293/515   21271/5487    59  422   26.53)
(smt.stats   63   8982 260382 1246664  9643/9308/519   22043/5687    60  454   26.62)
ramon: poll                 wall=8.005s usage=8.001s mem=28104KiB load=1.00 rootload=1.00
(smt.stats   64   9216 271435 1342432  9752/9313/519   22625/5696    60  454   26.62)
(smt.stats   65   9473 280888 1412449  9863/9431/520   23275/5886    61  463   26.83)
(smt.stats   66   9574 281781 1417482  9871/9536/521   23371/6050    62  468   26.83)
(smt.stats   67   9685 286467 1473329  9879/9544/521   23484/6050    62  468   26.83)
(smt.stats   68   9807 292769 1531888  9879/9544/521   23730/6050    62  468   26.93)
(smt.stats   69   9941 297130 1543507  9880/9545/521   23865/6050    62  468   26.93)
ramon: poll                 wall=9.000s usage=8.996s mem=28380KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 102)
(smt.stats   70  10088 302757 1584187  9896/9561/521   24046/6050    62  468   26.93)
(smt.stats   71  10249 311268 1663244  9912/9567/521   24357/6051    62  468   27.02)
(smt.stats   72  10426 317705 1712844 10173/9597/521   25111/6056    62  468   27.12)
ramon: poll                 wall=10.000s usage=9.995s mem=28688KiB load=1.00 rootload=1.00
(smt.stats   73  10620 327646 1746874 10279/9840/521   25749/6058    62  468   27.21)
(smt.stats   74  10833 339619 1798618 10629/9971/521   26461/6070    62  468   27.49)
ramon: poll                 wall=11.000s usage=10.992s mem=29388KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   75  11067 345931 1823984 10742/10324/521   27306/6073    62  468   27.49)
(smt.stats   76  11324 358906 1960465 10773/10436/521   28579/6073    62  468   27.78)
(smt.stats   77  11606 364028 2032044 10784/10447/522   29672/7040    63  470   27.78)
(smt.stats   78  11707 370571 2102586 10784/10447/522   29839/7040    63  470   27.90)
(smt.stats   79  11818 371397 2124373 10784/10447/522   29967/7040    63  470   27.90)
ramon: poll                 wall=12.000s usage=11.992s mem=29412KiB load=1.00 rootload=1.00
(smt.stats   80  11940 373749 2160019 10788/10451/522   30231/7040    63  470   27.90)
(smt.stats   81  12074 377008 2186720 10792/10451/522   30457/7040    63  470   28.01)
(smt.stats   82  12221 379500 2260791 10805/10455/522   30618/7040    63  470   28.01)
(smt.stats   83  12382 382538 2374933 10853/10502/522   30799/7040    63  470   28.01)
(smt.stats   84  12559 392545 2480420 10857/10506/524   31532/7252    64  472   28.11)
ramon: poll                 wall=13.000s usage=12.991s mem=29588KiB load=1.00 rootload=0.99
(smt.stats   85  12753 404496 2613912 10859/10508/524   31837/7252    64  472   28.11)
(smt.stats   86  12966 413373 2712470 10861/10510/526   32150/7554    65  496   28.30)
ramon: poll                 wall=14.000s usage=13.991s mem=29816KiB load=1.00 rootload=1.00
(smt.stats   87  13200 431476 2912829 10877/10526/529   32719/7721    66  533   28.30)
(smt.stats   88  13457 450290 3129680 10883/10532/531   33395/7842    67  551   28.30)
ramon: poll                 wall=15.000s usage=14.990s mem=29864KiB load=1.00 rootload=1.00
(smt.stats   89  13739 478965 3399475 10883/10532/531   33745/7842    67  551   28.73)
ramon: poll                 wall=16.000s usage=15.990s mem=30328KiB load=1.00 rootload=1.00
(smt.stats   90  14049 490715 3497818 11075/10532/531   34529/7870    68  558   28.82)
(smt.stats   91  14150 490900 3518161 11076/10725/531   34657/7870    68  558   28.82)
(smt.stats   92  14261 491432 3537148 11077/10726/531   34822/7870    68  558   28.93)
(smt.stats   93  14383 493236 3588866 11147/10776/531   35016/7870    68  558   28.93)
(smt.stats   94  14517 494859 3609740 11161/10781/531   35227/7870    68  558   29.02)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   95  14664 496933 3619956 11169/10795/531   35383/7871    68  558   29.02)
(smt.stats   96  14825 500038 3654970 11196/10827/534   35636/7978    69  560   29.12)
(smt.stats   97  15002 503662 3678565 11293/10869/535   36098/7979    69  560   29.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 3730)
ramon: poll                 wall=17.000s usage=16.989s mem=30724KiB load=1.00 rootload=1.00
(smt.stats   98  15196 512192 3708088 11317/10939/535   32735/7979    69  560   29.12)
(smt.stats   99  15409 523533 3777729 11392/10955/535   33210/7985    69  560   29.21)
(smt.stats  100  15643 534424 3818828 11422/11041/535   33694/8053    70  570   29.21)
ramon: poll                 wall=18.000s usage=17.989s mem=30876KiB load=1.00 rootload=1.00
(smt.stats  101  15900 550530 3908020 11829/11462/536   34285/8314    71  591   29.40)
(smt.stats  102  16182 559420 3983878 11921/11488/537   34594/8314    71  591   29.40)
ramon: poll                 wall=19.000s usage=18.988s mem=31068KiB load=1.00 rootload=1.00
(smt.stats  103  16492 569959 4123880 11940/11569/538   35692/8374    73  607   29.40)
(smt.stats  104  16832 581379 4258184 11969/11571/538   36140/8374    73  607   29.50)
ramon: poll                 wall=20.000s usage=19.988s mem=31232KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:45:19 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.995s
ramon: group.utime          19.963s
ramon: group.stime          0.032s
ramon: group.mempeak        31492KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
