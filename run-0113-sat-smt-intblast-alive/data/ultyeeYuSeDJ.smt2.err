ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:44:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39947 MiB
ramon: sys.mem.avail        61376 MiB
ramon: sys.nprocs           1321
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ultyeeYuSeDJ.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3991838
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   256/256     0/0  58       0    18.51   0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.76   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 339 :time 0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.76   0.00)
(sat.stats    101    278    0   256/256   101/16  58       0    18.76   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 378218.86 :time 0.00)
(sat.stats    101    278    0   260/260    21/14  58       0    18.86   0.00)
(sat.stats    400   2698    1   260/260   320/241  58       0    19.15   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    490   3546    2   260/260   410/284  58       0    19.15   0.02)
(sat.stats    493   3547    3   260/260   413/284  58       0    19.15   0.02)
(sat.stats    496   3623    4   260/260   416/285  58       0    19.25   0.02)
(sat.stats    500   3692    5   260/260   420/286  58       0    19.25   0.02)
(sat.stats    629   5222    6   261/261   549/339  58       0    19.35   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3694 :time 0.00)
lshr: (lshr[62] (bv2int %0) (mod (bv2int %0) 62)) 49 := 49 >>l 49
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 0&127476081409441792
lshr: (lshr[64] (bv2int %0) (mod (+ #58 #754) 64)) 127476081409441132 := 49 >>l 49
(sat.stats    731   9582    7   302/300   646/388  79       0    20.12   0.09)
(sat.stats    734   9591    8   302/300   649/388  79       0    20.12   0.09)
(sat.stats    738   9632    9   302/300   653/389  79       0    20.12   0.09)
(sat.stats    743   9643   10   302/300   658/389  79       0    20.12   0.09)
(sat.stats    746   9647   11   302/300   661/389  79       0    20.12   0.09)
(sat.stats    761   9959   12   302/300   676/400  79       0    20.12   0.10)
 (sat-cleaner :elim-literals 3 :elim-clauses 2 :cost 6131 :time 0.00)
(sat.stats    764  10229   13   301/299   675/400  84       0    20.12   0.10)
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 1 := 1&127476081409441792
(sat.stats    767  10391   14   326/324   678/400  84       0    20.12   0.11)
(sat.stats    772  10588   15   346/344   683/401  84       0    20.12   0.11)
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 2 := 2&127476081409441792
(sat.stats    776  10748   16   392/390   689/403  84       0    20.22   0.11)
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 4 := 5&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 8 := 8&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 16 := 16&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 32 := 32&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 64 := 64&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 128 := 128&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 256 := 256&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 512 := 512&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 1024 := 1024&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 2048 := 2048&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 4096 := 4096&127476081409441792
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 6012 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 4267 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 6930 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 5960 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 496 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 288 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 6464 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 8064 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 4352 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 3072 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 512 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 6144 := 127476081409441792&8191
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 0 := 8191&127476081409441792
band: (band[62] (if (= #625 63) 39378666425744499841308777802870292480 (if #627 19689333212872249920654388901435146240 #751)) (lshr[64] (bv2int %0) (mod #755 64))) 4096 := 127476081409441792&8191
 (sat-cleaner :elim-literals 69 :elim-clauses 2 :cost 14735 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   1137  36906   50 12985/12982  1173/567 260       0    23.20   0.38)
 (sat-cleaner :elim-literals 130 :elim-clauses 108 :cost 19530 :time 0.00)
 (sat-cleaner :elim-literals 67 :elim-clauses 128 :cost 12998 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9452 :time 0.00)
ramon: poll                 wall=1.002s usage=0.990s mem=25688KiB load=0.99 rootload=0.99
lshr: (lshr[62] (bv2int %0) (mod (bv2int %0) 62)) 1125899906842687 := 1125899906842687 >>l 33
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 65536 := 65536&2509091877177786368
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 17839 :time 0.00)
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 131072 := 131072&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 262144 := 262144&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 524288 := 524288&2509091877177786368
(sat.stats   1598  58132  111 41360/41301  1468/729 320       0    27.72   1.34)
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 1048576 := 1048576&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 2097152 := 2097152&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 4194304 := 4194304&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 8388608 := 8388608&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 16777216 := 16777216&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 33554432 := 33554432&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 67108864 := 67108864&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 134217728 := 134217728&2509091877177786368
band: (band[62] (lshr[62] (bv2int %0) (mod #58 62)) (if (= #488 61) 4922333303218062480163597225358786560 (if #490 2461166651609031240081798612679393280 #610))) 268435456 := 268435456&2509091877177786368
 (sat-cleaner :elim-literals 131 :elim-clauses 3 :cost 19147 :time 0.00)
ramon: poll                 wall=2.000s usage=1.987s mem=30144KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 19629 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 19640 :time 0.00)
ramon: poll                 wall=3.000s usage=2.984s mem=37220KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.980s mem=45140KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.002s usage=4.977s mem=59472KiB load=0.99 rootload=1.00
ramon: poll                 wall=6.000s usage=5.973s mem=63712KiB load=1.00 rootload=0.98
ramon: poll                 wall=7.000s usage=6.966s mem=67576KiB load=0.99 rootload=1.00
ramon: poll                 wall=8.000s usage=7.964s mem=71604KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.964s mem=90800KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.960s mem=93704KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.959s mem=97024KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.959s mem=99328KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.959s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.959s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.959s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.959s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.959s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.002s usage=17.963s mem=108MiB load=1.00 rootload=1.01
ramon: poll                 wall=19.000s usage=18.959s mem=110MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.959s mem=111MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:44:54 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.040s
ramon: group.total          19.980s
ramon: group.utime          19.932s
ramon: group.stime          0.048s
ramon: group.mempeak        111MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.020s
ramon: loadavg              1.00
