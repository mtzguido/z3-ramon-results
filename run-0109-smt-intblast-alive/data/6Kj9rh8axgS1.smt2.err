ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:31:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42718 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6Kj9rh8axgS1.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2801726
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 57 := 56 << 1
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 57 := 56 << 1
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 0&112
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 55 := 56 << 1
(smt.stats    0    101   4076    518  1330/1182/100      88/18     6   19   19.15)
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&95
(smt.stats    1    202   7010   1575  2213/1992/106     186/41     8   22   19.44)
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&95
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&94
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&92
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&95
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&94
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&4
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 8 := 96 << 8
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&1
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&4
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 8 := 96 << 8
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 8 := 96 << 8
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&4
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&1
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 1 := 119&5
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 4 := 119&5
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 1 := 119&2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 1 := 119&2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 1 := 119&2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 1 := 119&3
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 2 := 119&3
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 11 := 119&99
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 19 := 119&99
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 35 := 119&99
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 35 := 119&99
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 35 := 119&99
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 67 := 119&99
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 35 := 119&107
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 67 := 119&107
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 67 := 119&107
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 67 := 119&107
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 107 := 119&115
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 99 := 119&107
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 107 := 96 << 8
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 99 := 119&114
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 82 := 119&98
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 82 := 119&98
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 82 := 119&98
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 98 := 119&98
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 98 := 96 << 8
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 98 := 119&98
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 98 := 96 << 8
(smt.stats    2    313  10951   3727  2767/2492/204     343/68    11   43   19.93)
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 68 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 64 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 32 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 24577 := 48 << 9
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 24577 := 48 << 9
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 24577 := 48 << 9
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 24694 := 48 << 9
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 1 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 118 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 116 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 4 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 8 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 16 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 32 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 64 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 24450 := 48 << 9
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 2 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 24577 := 48 << 9
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 4 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 8 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 16 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 32 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 2 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 64 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 64 := 119&24576
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 119&24576
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 17 := 119&24576
(smt.stats    3    414  14158   6488  2869/2587/261     530/115    13   56   20.31)
(smt.stats    4    525  15784   9608  2918/2642/284     666/174    16   86   20.41)
(smt.stats    5    647  18936  12751  3009/2691/286     815/189    17   90   20.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  22822  16586  3081/2790/292     931/213    19  114   20.80)
(smt.stats    7    859  25384  20825  3099/2827/293    1056/215    20  119   20.89)
(smt.stats    8    981  28400  25831  3163/2879/302    1185/228    23  141   20.99)
ramon: poll                 wall=1.000s usage=0.900s mem=22172KiB load=0.90 rootload=0.88
(smt.stats    9   1115  32708  28682  3220/2881/302    1344/251    24  167   21.18)
(smt.stats   10   1216  37083  32184  3477/3099/302    1495/252    24  167   21.27)
(smt.stats   11   1327  41882  36094  3562/3203/302    1649/253    24  167   21.27)
ramon: poll                 wall=2.000s usage=1.900s mem=22716KiB load=1.00 rootload=1.00
(smt.stats   12   1449  46028  39446  3729/3431/303    1862/333    25  170   21.37)
(smt.stats   13   1583  49672  44970  3847/3488/303    2182/337    25  170   21.56)
(smt.stats   14   1730  55402  54459  3915/3585/306    2499/373    26  178   21.56)
ramon: poll                 wall=3.002s usage=2.900s mem=22884KiB load=1.00 rootload=1.00
(smt.stats   15   1831  59825  58541  4021/3642/306    2684/406    27  180   21.65)
(smt.stats   16   1942  65243  68327  4154/3765/306    3056/415    27  180   21.80)
(smt.stats   17   2064  69745  76372  4172/3877/306    3347/415    27  180   21.80)
(smt.stats   18   2198  76386  88913  4178/3885/306    3530/415    27  180   21.90)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2345  84182 103291  4202/3894/306    3806/416    27  180   22.00)
(smt.stats   20   2506  89727 115726  4260/3921/307    4292/527    28  181   22.00)
(smt.stats   21   2607  92147 120710  4436/3983/307    4544/527    28  181   22.09)
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 264 := 122014&373632
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 264 := 122014&373696
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 264 := 122014&373696
(smt.stats   22   2718  95209 129535  4591/4168/307    4804/533    28  181   22.09)
(smt.stats   23   2840 100579 149370  4894/4417/312    5266/621    29  182   22.28)
ramon: poll                 wall=4.000s usage=3.898s mem=23704KiB load=1.00 rootload=1.00
(smt.stats   24   2974 103353 159462  5081/4788/313    5845/712    31  185   22.47)
(smt.stats   25   3121 106461 168929  5184/4891/314    6375/751    32  187   22.57)
(smt.stats   26   3282 109790 186606  5221/4928/318    6706/837    33  198   22.69)
(smt.stats   27   3459 112027 199715  5239/4944/318    7098/837    33  198   22.78)
(smt.stats   28   3560 114140 208983  5242/4947/318    7522/837    33  198   22.78)
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 0&961186
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 144115188076817058 := 110 << 1
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 0&961186
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 144115188076817058 := 110 << 1
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   29   3671 115773 214173  5360/4992/319    7743/1057    34  202   22.88)
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 0&961442
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 144115188076817314 := 224 << 1
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&222
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 222 := 222 << 2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&222
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 222 := 222 << 2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&214
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 214 := 222 << 2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&212
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 212 := 222 << 2
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&212
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #867 #871) 64)) 212 := 222 << 2
(smt.stats   30   3793 118488 223821  5477/5115/324    8046/1062    34  202   22.98)
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&888
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 119 := 111 << 3
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&888
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #104))) 119 := 111 << 3
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&888
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 1 := 1&888
band: (band[57] (if (or #601 #606) 0 (if #596 1 #857)) (shl[64] (* 2 #102) (mod #875 64))) 0 := 1&888
band: (band[57] (if (or #621 #622) 0 (if #623 1 #779)) (shl[57] (bv2int %0) (+ 57 #781))) 1 := 1&888
(smt.stats   31   3928 121532 238983  5537/5234/336    8541/1216    36  218   23.07)
ramon: poll                 wall=5.000s usage=4.896s mem=24456KiB load=1.00 rootload=1.00
(smt.stats   32   4075 125013 250942  5637/5262/338    8985/1217    36  218   23.26)
ramon: poll                 wall=6.000s usage=5.896s mem=24704KiB load=1.00 rootload=1.00
(smt.stats   33   4236 131610 269750  5948/5364/338    9469/1223    36  218   23.36)
(smt.stats   34   4413 134962 277982  6141/5654/339   10049/1368    37  228   23.55)
ramon: poll                 wall=7.000s usage=6.896s mem=24960KiB load=1.00 rootload=0.99
(smt.stats   35   4607 143843 308459  6163/5853/342   10789/1370    37  228   23.80)
(smt.stats   36   4708 150584 336646  6187/5875/342   10978/1477    38  241   23.80)
(smt.stats   37   4819 154185 353113  6201/5898/344   11503/1535    39  255   23.80)
(smt.stats   38   4941 158821 377756  6258/5916/345   11799/1535    39  255   23.80)
(smt.delete-inactive-clauses  :num-deleted-clauses 79)
(smt.stats   39   5075 162214 389664  6317/5988/345   12086/1706    40  267   23.90)
(smt.stats   40   5222 165871 403443  6501/6024/345   12493/1706    40  267   24.00)
ramon: poll                 wall=8.000s usage=7.895s mem=25696KiB load=1.00 rootload=1.00
(smt.stats   41   5383 169966 415948  6734/6214/345   12911/1708    40  267   24.19)
(smt.stats   42   5560 174313 433820  6945/6480/345   13402/1710    40  267   24.19)
ramon: poll                 wall=9.000s usage=8.894s mem=25712KiB load=1.00 rootload=1.00
(smt.stats   43   5754 180499 472323  7156/6837/347   14635/1980    41  269   24.38)
ramon: poll                 wall=10.000s usage=9.892s mem=26044KiB load=1.00 rootload=1.00
(smt.stats   44   5967 187186 502628  7383/6884/348   15352/1982    41  269   24.69)
(smt.stats   45   6068 190331 511850  7505/7109/348   15648/2091    42  271   24.78)
(smt.stats   46   6179 193434 524721  7679/7208/348   16069/2094    42  271   24.88)
ramon: poll                 wall=11.000s usage=10.892s mem=26276KiB load=1.00 rootload=1.00
(smt.stats   47   6301 197185 538039  7921/7416/348   16511/2094    42  271   24.98)
(smt.stats   48   6435 201086 561369  8123/7656/348   17179/2098    42  271   25.08)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   49   6582 203874 574749  8165/7806/349   17690/2183    43  276   25.27)
ramon: poll                 wall=12.002s usage=11.894s mem=26696KiB load=1.00 rootload=1.00
(smt.stats   50   6743 210204 609211  8273/7862/349   18006/2185    43  276   25.27)
(smt.stats   51   6920 216129 654228  8375/7968/350   18504/2267    44  279   25.46)
ramon: poll                 wall=13.000s usage=12.892s mem=26924KiB load=1.00 rootload=1.00
(smt.stats   52   7114 223156 681319  8584/8068/350   19670/2270    44  279   25.55)
(smt.stats   53   7327 231673 718913  8904/8296/350   20463/2274    44  279   25.92)
ramon: poll                 wall=14.006s usage=13.896s mem=27336KiB load=1.00 rootload=1.00
(smt.stats   54   7561 241584 787281  9029/8614/351   21599/2445    45  281   26.01)
(smt.stats   55   7662 248119 837207  9055/8717/351   22046/2445    45  281   26.11)
(smt.stats   56   7773 251666 862263  9101/8780/352   22718/2817    46  284   26.11)
ramon: poll                 wall=15.000s usage=14.890s mem=27604KiB load=1.00 rootload=1.00
(smt.stats   57   7895 255216 884772  9156/8816/353   22986/2821    46  284   26.21)
(smt.stats   58   8029 258086 897994  9280/8891/353   23527/2824    46  284   26.30)
ramon: poll                 wall=16.000s usage=15.889s mem=27904KiB load=1.00 rootload=1.00
(smt.stats   59   8176 261401 913068  9426/9044/357   23914/2825    46  284   26.40)
ramon: poll                 wall=17.000s usage=16.889s mem=27992KiB load=1.00 rootload=1.00
(smt.stats   60   8337 264615 939801  9545/9113/357   24128/3022    47  293   26.51)
(smt.stats   61   8514 267783 966897  9655/9221/357   24708/3022    47  293   26.51)
ramon: poll                 wall=18.000s usage=17.889s mem=28072KiB load=1.00 rootload=1.00
(smt.stats   62   8708 271167 975145  9818/9364/357   25099/3023    47  293   26.80)
ramon: poll                 wall=19.000s usage=18.888s mem=28444KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8921 276649 1009902 10016/9562/357   25659/3027    47  293   26.99)
ramon: poll                 wall=20.000s usage=19.888s mem=28628KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:32:02 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.976s
ramon: group.utime          19.960s
ramon: group.stime          0.016s
ramon: group.mempeak        28900KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.088s
ramon: loadavg              0.99
