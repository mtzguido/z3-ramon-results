ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:10:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24500 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/x39H1H5kBrow.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             186754
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3651    422  1111/941/99     104/22     5   15   19.08)
(smt.stats    1    202   4777   1206  1791/1637/101     214/47     7   17   19.18)
(smt.stats    2    313   7053   2843  1817/1653/104     358/76     9   20   19.28)
(smt.stats    3    414  10413   4701  1985/1803/107     455/87    11   23   19.37)
(smt.stats    4    525  12150   6573  2262/2060/111     571/112    12   29   19.47)
(smt.stats    5    647  15461  11010  2291/2079/111     693/129    13   29   19.59)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16957  13797  2324/2106/115     799/140    14   30   19.59)
(smt.stats    7    859  17422  15356  2417/2123/115     923/161    15   37   19.78)
(smt.stats    8    981  17912  17960  2667/2420/115    1082/168    15   37   19.78)
(smt.stats    9   1115  19778  24260  2710/2477/116    1250/216    16   38   19.90)
(smt.stats   10   1216  21051  26460  2768/2511/116    1352/218    16   38   19.90)
(smt.stats   11   1327  22318  29825  2794/2574/116    1475/220    16   38   19.90)
(smt.stats   12   1449  24544  32389  2809/2608/117    1595/263    17   40   19.90)
(smt.stats   13   1583  26852  35802  2820/2616/117    1773/263    17   40   20.00)
(smt.stats   14   1730  29158  45088  2854/2640/120    1906/312    18   44   20.00)
(smt.stats   15   1831  30212  49354  2882/2670/120    1994/314    18   44   20.00)
(smt.stats   16   1942  31230  51806  2894/2687/120    2107/314    18   44   20.00)
(smt.stats   17   2064  32710  53691  2916/2696/124    2240/329    19   44   20.13)
(smt.stats   18   2198  35259  56888  2916/2716/124    2374/329    19   44   20.13)
(smt.stats   19   2345  37557  59315  2917/2717/125    2518/332    20   45   20.13)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 17179869183&1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 17179869183&1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 17179869182&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 34359738366 := 17179869181 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 17179869188 := 2 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 17179869188 := 2 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472059317 := 17179869182&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4 := 4&2472059317
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 17179869188 := 3 << 32
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472059317 := 4294967296&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 6&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4 := 6&2472059317
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 17179869190 := 5 << 32
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472059317 := 12884901888&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472059316 := 12884901888&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472059312 := 12884901888&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472059296 := 12884901888&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 30 := 8589934592&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472059392 := 2472059392&4944118635
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472067072 := 2472067072&4944118635
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472083456 := 2472083456&4944118635
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2472542208 := 2472542208&4944118635
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2474639360 := 2474639360&4944118635
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2483027968 := 2483027968&4944118635
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2684354560 := 2684354560&4944118635
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2684354560 := 2684354560&4944118635
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4294967296 := 4294967296&4944118635
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 21474836480 := 4 << 33
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   20   2506  38692  63703  3002/2788/219    2265/328    21  474   20.52)
(smt.stats   21   2607  40078  66724  3063/2837/219    2359/333    22  503   20.52)
(smt.stats   22   2718  40967  69361  3090/2879/220    2471/333    22  503   20.52)
ramon: poll                 wall=1.000s usage=0.948s mem=21684KiB load=0.95 rootload=0.94
(smt.stats   23   2840  42599  73462  3121/2889/220    2614/340    23  504   20.61)
(smt.stats   24   2974  44763  79084  3138/2927/227    2775/353    25  508   20.61)
(smt.stats   25   3121  45789  83886  3156/2928/227    2921/366    26  522   20.61)
(smt.stats   26   3282  48333  89040  3158/2948/228    3106/386    27  524   20.61)
(smt.stats   27   3459  53381  95844  3166/2955/228    3308/386    27  524   20.86)
(smt.stats   28   3560  54704  99580  3183/2958/228    3416/387    27  524   20.86)
(smt.stats   29   3671  56717 104982  3184/2973/228    3538/387    27  524   20.86)
(smt.stats   30   3793  59529 113033  3186/2975/229    3652/399    28  530   20.86)
(smt.stats   31   3927  62966 119450  3189/2978/229    3801/399    28  530   20.86)
(smt.stats   32   4074  65796 123116  3207/2983/229    3969/399    28  530   20.86)
(smt.stats   33   4235  67374 127707  3236/3005/229    4157/400    28  530   20.86)
(smt.stats   34   4412  68906 132603  3413/3028/229    4356/403    28  530   20.86)
(smt.stats   35   4606  72139 138488  3501/3214/229    4565/405    28  530   20.98)
(smt.stats   36   4707  74052 144714  3524/3297/229    4688/405    28  530   20.98)
(smt.stats   37   4818  75084 148333  3540/3315/229    4818/405    28  530   21.18)
(smt.stats   38   4940  76897 152218  3563/3350/230    4943/446    29  530   21.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(smt.stats   39   5074  77308 157993  3591/3380/230    5062/446    29  530   21.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5221  79142 163485  3638/3417/230    5197/449    29  530   21.18)
(smt.stats   41   5382  80544 172138  3659/3448/230    5352/449    29  530   21.28)
(smt.stats   42   5559  82737 179978  3674/3460/230    5556/449    29  530   21.28)
(smt.stats   43   5753  84906 188101  3694/3471/231    5755/494    30  530   21.38)
ramon: poll                 wall=2.000s usage=1.948s mem=22496KiB load=1.00 rootload=1.00
(smt.stats   44   5966  86618 197585  3764/3522/232    6000/495    30  530   21.38)
(smt.stats   45   6067  87204 201294  3834/3590/234    6099/508    31  531   21.57)
(smt.stats   46   6178  88769 205681  3862/3639/234    6196/509    31  531   21.57)
(smt.stats   47   6300  89668 211085  3925/3665/237    6322/511    32  537   21.57)
(smt.stats   48   6434  90030 211712  4189/3951/237    6461/513    32  537   21.99)
(smt.stats   49   6581  91158 216643  4848/4587/237    6708/516    32  537   21.99)
(smt.stats   50   6742  94424 224641  4859/4641/237    6894/516    32  537   21.99)
(smt.stats   51   6919  95992 230141  4925/4651/237    7108/517    32  537   22.08)
(smt.stats   52   7113  97255 241010  4976/4750/237    7311/518    32  537   22.08)
(smt.stats   53   7326  99371 248193  5054/4786/237    7538/521    32  537   22.08)
(smt.stats   54   7560 102593 260977  5102/4865/237    7775/523    32  537   22.08)
(smt.stats   55   7661 104273 264410  5166/4909/238    7972/678    33  539   22.08)
ramon: poll                 wall=3.000s usage=2.947s mem=23484KiB load=1.00 rootload=0.99
(smt.stats   56   7772 105874 269321  5264/4973/238    8125/679    33  539   22.19)
(smt.stats   57   7894 107852 274063  5389/5082/238    8281/684    33  539   22.19)
(smt.stats   58   8028 109248 281789  5438/5179/238    8417/686    33  539   22.19)
(smt.stats   59   8175 112081 288693  5468/5227/238    8574/688    33  539   22.19)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   60   8336 114765 298784  5486/5264/239    8732/778    34  547   22.28)
(smt.stats   61   8513 116203 308595  5515/5276/239    8950/779    34  547   22.28)
(smt.stats   62   8707 118996 323463  5611/5305/239    9159/782    34  547   22.28)
(smt.stats   63   8920 122352 335076  5635/5402/239    9411/783    34  547   22.28)
(smt.stats   64   9154 127703 350299  5644/5429/239    9644/783    34  547   22.38)
(smt.stats   65   9411 130621 366357  5647/5432/239    9904/783    34  547   22.38)
(smt.stats   66   9512 131799 371762  5647/5432/239   10008/783    34  547   22.38)
(smt.stats   67   9623 133698 379026  5648/5433/239   10172/783    34  547   22.38)
(smt.stats   68   9745 134684 387348  5684/5437/239   10296/789    34  547   22.38)
(smt.stats   69   9879 137438 400525  5690/5470/239   10440/790    34  547   22.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 104)
(smt.stats   70  10026 141036 410255  5690/5475/239   10488/790    34  547   22.38)
(smt.stats   71  10187 144929 421708  5692/5477/239   10653/790    34  547   22.79)
(smt.stats   72  10364 146751 432249  5708/5481/239   10869/791    34  547   22.79)
ramon: poll                 wall=4.000s usage=3.947s mem=24048KiB load=1.00 rootload=1.00
(smt.stats   73  10558 149884 446914  5749/5494/239   11069/793    34  547   22.79)
(smt.stats   74  10771 154175 466903  5776/5539/239   11288/794    34  547   22.79)
(smt.stats   75  11005 160003 484836  5779/5564/239   11529/794    34  547   22.91)
(smt.stats   76  11262 167047 497421  5779/5564/239   11788/794    34  547   22.91)
(smt.stats   77  11544 171930 516364  5818/5595/239   12058/794    34  547   22.91)
(smt.stats   78  11645 174203 522189  5818/5603/239   12164/794    34  547   22.91)
(smt.stats   79  11756 175840 531387  5840/5605/239   12281/796    34  547   23.02)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   80  11878 178744 540508  5841/5626/239   12402/796    34  547   23.02)
(smt.stats   81  12012 181494 548724  5842/5627/239   12538/796    34  547   23.02)
(smt.stats   82  12159 183954 561280  5844/5629/239   12683/796    34  547   23.02)
(smt.stats   83  12320 187904 572729  5844/5629/239   12846/796    34  547   23.02)
(smt.stats   84  12497 190761 586328  5868/5642/239   13016/797    34  547   23.02)
(smt.stats   85  12691 194864 596702  5881/5664/239   13210/797    34  547   23.02)
(smt.stats   86  12904 199578 611446  5882/5665/239   13430/797    34  547   23.13)
(smt.stats   87  13138 205018 628724  5886/5668/239   13695/797    34  547   23.13)
ramon: poll                 wall=5.000s usage=4.946s mem=24352KiB load=1.00 rootload=1.00
(smt.stats   88  13395 212275 650030  5893/5674/240   13971/1010    35  549   23.13)
(smt.stats   89  13677 220795 674189  5893/5674/240   14269/1010    35  549   23.13)
(smt.stats   90  13987 228964 704657  5896/5677/240   14579/1010    35  549   23.22)
(smt.stats   91  14088 230827 710597  5896/5677/240   14682/1010    35  549   23.22)
(smt.stats   92  14199 234273 721603  5897/5678/240   14799/1010    35  549   23.22)
(smt.stats   93  14321 236170 732412  5898/5679/240   14920/1010    35  549   23.22)
(smt.stats   94  14455 239295 740035  5898/5679/240   15060/1010    35  549   23.22)
(smt.stats   95  14602 242478 751931  5898/5679/240   15213/1010    35  549   23.22)
(smt.stats   96  14763 246025 764628  5898/5679/240   15374/1010    35  549   23.22)
(smt.stats   97  14940 248883 773154  5899/5680/240   15558/1010    35  549   23.22)
(smt.delete-inactive-clauses  :num-deleted-clauses 118)
(smt.stats   98  15134 251988 783633  5901/5682/240   15634/1010    35  549   23.32)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 16386 := 8589934592&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 16386 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32770 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 65538 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131074 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32770 := 8589934592&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32770 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32770 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32770 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32770 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 65538 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131074 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131074 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131074 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131074 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131074 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131074 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131138 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131138 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131138 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131074 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 65538 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 130 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 258 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 514 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 142 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 130 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1026 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2050 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4098 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4610 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4610 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4610 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 514 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4162 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4098 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4098 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4098 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4098 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4098 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4098 := 8589934594&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4098 := 12884905986&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 514 := 12884910598&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 514 := 12884910598&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 514 := 12885164806&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 514 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 514 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 258 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 258 := 12885164586&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 258 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 258 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 258 := 12885164566&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2050 := 12885164586&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2050 := 12885164586&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2050 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1026 := 12885164586&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1026 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1026 := 12885164586&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1026 := 12885164578&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 14 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 10 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 12885164570&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 6 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 10 := 12885164574&150882
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 10 := 12885164574&150882
(smt.stats   99  15347 255859 800054  6275/6019/378   16049/1059    36  553   23.61)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats  100  15581 266232 825843  6292/6073/390   16790/1391    37  591   23.83)
ramon: poll                 wall=6.000s usage=5.946s mem=25148KiB load=1.00 rootload=1.00
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 9826111644&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 9826111644&2472059317
(smt.stats  101  15838 272966 846129  6600/6088/394   17677/1405    37  591   24.03)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4 := 9826114204&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4 := 9826114204&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4 := 9826114204&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4 := 9826114460&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 20 := 9826114460&2472059317
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 148 := 9826114460&2472059317
(smt.stats  102  16120 278680 880089  6836/6549/415   18337/1620    38  598   24.35)
(smt.stats  103  16430 285310 918670  6889/6624/416   18871/1620    38  598   24.35)
ramon: poll                 wall=7.000s usage=6.946s mem=26264KiB load=1.00 rootload=1.00
(smt.stats  104  16770 289012 945492  6952/6679/419   19401/1837    39  600   25.14)
(smt.stats  105  16871 289961 951206  8209/7857/419   19547/1840    39  600   25.04)
(smt.stats  106  16982 291517 963155  8336/8016/419   19763/1845    39  600   25.14)
(smt.stats  107  17104 293786 973932  8396/8106/420   20271/2008    40  627   25.24)
(smt.stats  108  17238 295926 981982  8491/8169/420   20421/2009    40  627   25.24)
(smt.stats  109  17385 300129 998603  8557/8255/420   20592/2009    40  627   25.36)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  110  17546 303458 1015857  8639/8351/421   20897/2009    40  627   25.36)
(smt.stats  111  17723 307234 1035133  8723/8395/421   21116/2340    41  638   25.36)
ramon: poll                 wall=8.000s usage=7.945s mem=26836KiB load=1.00 rootload=0.99
(smt.stats  112  17917 313425 1060738  8873/8481/422   21542/2340    41  638   25.47)
(smt.stats  113  18130 318656 1087036  8935/8628/422   21790/2340    41  638   25.47)
(smt.stats  114  18364 327103 1122793  9121/8700/422   22164/2413    42  643   25.57)
(smt.stats  115  18621 330715 1157478  9166/8886/422   22616/2415    42  643   25.57)
(smt.stats  116  18903 336831 1181539  9221/8929/422   23663/2415    42  643   25.68)
ramon: poll                 wall=9.000s usage=8.945s mem=27164KiB load=1.00 rootload=1.00
(smt.stats  117  19213 345131 1224824  9550/9001/424   24181/2682    43  648   25.80)
(smt.stats  118  19553 350780 1276423  9828/9384/424   24729/2686    43  648   26.02)
(smt.stats  119  19926 360267 1361441  9873/9580/424   25324/2854    44  657   26.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 18)
(smt.stats  120  20027 363115 1376051  9876/9625/425   25909/3003    45  669   26.12)
ramon: poll                 wall=10.000s usage=9.944s mem=27796KiB load=1.00 rootload=1.00
(smt.stats  121  20138 366490 1388101 10010/9630/425   26583/3008    45  669   26.41)
(smt.stats  122  20260 368736 1406610 10328/9768/426   26919/3016    45  669   26.41)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2464171008 := 15356816456&2472059317
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  123  20394 370289 1420105 10605/10112/426   27183/3024    45  669   26.60)
(smt.stats  124  20541 371290 1438196 10818/10538/432   27416/3169    46  687   26.70)
(smt.stats  125  20702 372888 1461558 10854/10603/433   27579/3169    46  687   26.70)
(smt.stats  126  20879 376919 1495157 10874/10612/433   27880/3169    46  687   26.70)
(smt.stats  127  21073 381675 1532308 10899/10642/434   28791/3222    47  693   26.80)
ramon: poll                 wall=11.000s usage=10.944s mem=28308KiB load=1.00 rootload=1.00
(smt.stats  128  21286 386036 1551729 11288/10664/434   29576/3225    47  693   26.99)
(smt.stats  129  21520 388740 1576506 11677/11070/435   30282/3229    47  693   27.24)
(smt.stats  130  21777 391276 1607297 11689/11430/435   30621/3618    48  696   27.24)
(smt.stats  131  22059 396249 1663329 11728/11459/436   31267/3636    49  706   27.24)
(smt.stats  132  22369 400209 1686811 11806/11482/436   31782/3636    49  706   27.35)
(smt.stats  133  22709 407896 1754620 11846/11593/439   34621/4330    50  738   27.64)
ramon: poll                 wall=12.000s usage=11.944s mem=29080KiB load=1.00 rootload=1.00
(smt.stats  134  23082 416153 1843675 11857/11604/443   37341/4330    50  738   28.54)
(smt.stats  135  23492 441995 2032350 11862/11609/443   39565/5013    51  778   28.75)
(smt.stats  136  23593 444104 2062282 11862/11609/443   39954/5013    51  778   28.75)
(smt.stats  137  23704 448046 2101697 11864/11611/443   40631/5013    51  778   28.87)
ramon: poll                 wall=13.000s usage=12.943s mem=30432KiB load=1.00 rootload=1.00
(smt.stats  138  23826 448722 2117318 11868/11615/443   40780/5013    51  778   28.87)
(smt.stats  139  23960 450662 2149097 11870/11617/443   41405/5013    51  778   29.09)
(smt.stats  140  24107 452434 2172258 11872/11619/443   41803/5013    51  778   29.09)
(smt.stats  141  24268 453700 2193918 11883/11627/445   35513/5882    52 7332   29.19)
(smt.stats  142  24445 457524 2232589 11899/11639/446   36089/5883    52 7332   29.19)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas          :deletions      )
(smt.stats  143  24639 462893 2258510 11905/11648/446   37291/5883    52 7332   29.19)
(smt.stats  144  24852 468449 2301169 11975/11657/446   37911/6185    53 7350   29.19)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
(smt.stats  145  25086 473065 2347737 12034/11743/446   38314/6185    53 7350   29.30)
ramon: poll                 wall=14.000s usage=13.943s mem=30820KiB load=1.00 rootload=1.00
(smt.stats  146  25343 477665 2412906 12048/11785/446   38670/6185    53 7350   29.30)
(smt.stats  147  25625 484985 2482558 12052/11799/447   39203/6571    54 7369   29.30)
(smt.stats  148  25935 493354 2543457 12058/11805/449   39613/6571    54 7369   29.30)
(smt.stats  149  26275 504063 2628098 12066/11809/449   39987/6572    54 7369   29.41)
ramon: poll                 wall=15.000s usage=14.942s mem=30900KiB load=1.00 rootload=1.00
(smt.stats  150  26648 517238 2748603 12353/11816/449   40556/6586    55 7422   29.41)
(smt.stats  151  27058 527226 2868209 13153/12140/449   42403/6597    55 7422   29.89)
ramon: poll                 wall=16.000s usage=15.942s mem=31476KiB load=1.00 rootload=1.00
(smt.stats  152  27508 534409 2978141 13689/12931/449   43508/6601    55 7422   30.08)
(smt.stats  153  27609 536112 3003431 13703/13444/449   43777/6601    55 7422   30.08)
(smt.stats  154  27720 538188 3023410 13748/13458/449   43940/6601    55 7422   30.08)
(smt.stats  155  27842 540522 3062053 13755/13497/449   44062/6601    55 7422   30.37)
(smt.stats  156  27976 542694 3084117 13770/13512/449   44297/6601    55 7422   30.37)
(smt.stats  157  28123 545016 3126400 13783/13526/449   44672/6601    55 7422   30.37)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 16 := 129&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 128 := 17179869183 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 128 := 17179869183 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 128 := 17179869183 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 128 := 12884901888 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 0 := 1 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 129 := 1 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 15032385539 := 1 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 1 := 128&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 2 := 128&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 72 := 128&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 64 := 128&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 4 := 128&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 16 := 128&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 32 := 128&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 33 := 128&73
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&73
band: (band[34] (shl[34] (bv2int %1) (mod #104 34)) (if (= #560 33) 1 (if #562 2 #653))) 32 := 128&73
(smt.stats  158  28284 548375 3163922 13913/13645/520   45261/7109    56 7437   30.69)
(smt.stats  159  28461 550356 3189088 14012/13685/520   45638/7109    56 7437   30.88)
(smt.stats  160  28655 556079 3234750 14042/13759/522   46008/7109    56 7437   30.88)
(smt.stats  161  28868 558604 3259304 14067/13780/522   46249/7112    56 7437   30.88)
ramon: poll                 wall=17.000s usage=16.941s mem=32452KiB load=1.00 rootload=1.00
(smt.stats  162  29102 564619 3319383 14110/13810/522   46813/7264    57 7443   30.88)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas          :deletions      )
(smt.stats  163  29359 575978 3429186 14134/13865/523   48038/7264    57 7443   31.07)
(smt.stats  164  29641 583596 3492812 14145/13873/526   49652/7606    58 7444   31.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 8)
ramon: poll                 wall=18.000s usage=17.941s mem=32876KiB load=1.00 rootload=1.00
(smt.stats  165  30291 616585 3828918 14179/13882/526   50610/7606    58 7444   31.37)
(smt.stats  166  30664 624758 3925059 14302/13917/526   51390/7989    59 7453   31.37)
(smt.stats  167  31074 629888 4046543 14325/14034/526   52064/7990    59 7453   31.46)
ramon: poll                 wall=19.000s usage=18.941s mem=33100KiB load=1.00 rootload=1.00
(smt.stats  168  31524 640520 4148609 14440/14171/527   53872/8098    60 7455   31.66)
ramon: poll                 wall=20.000s usage=19.941s mem=33596KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:11:15 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.997s
ramon: group.utime          19.977s
ramon: group.stime          0.020s
ramon: group.mempeak        34108KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.00
