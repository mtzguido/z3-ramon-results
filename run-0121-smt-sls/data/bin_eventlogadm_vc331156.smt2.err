ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:25:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         13031 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1172
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_eventlogadm_vc331156.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1359697
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
tabu (if (and (bvsle bv[4294967295:32] #8595) (not #18411)) (bvadd bv[1:32] (if #14284 #8631 v202720572)) (if (and #8606 #14283) (bvadd bv[1:32] v202720572) v202720572))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      40      9   149.269     10001         0          0           95      470)
(sat.ddfw      37     29   110.674     20183         0          1          236      576)
(sat.ddfw      37    142   142.193     40090         0          2          101      770)
(sat.ddfw      20    100   130.187     70033         0          3           79      920)
(sat.ddfw       8     38   96.3108    110002         0          4           23     1006)
(sat.ddfw       6    894   73.6436    160006         0          5           38     1021)
(sat.ddfw       6   1025   64.3895    220017         1          6           26     1197)
ramon: poll                 wall=1.000s usage=0.997s mem=22608KiB load=1.00 rootload=0.99
(sat.ddfw       5    749   54.2084    290000         1          7           17     1222)
(sat.ddfw       5   1025   47.4392    370030         2          8           32     1316)
ramon: poll                 wall=2.000s usage=1.997s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       5   1025   42.0579    460034         3          9           23     1360)
(sat.ddfw       4   1025   35.3737    560000         3         10            7     1406)
ramon: poll                 wall=3.000s usage=2.997s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       4   1025   30.6091    670009         4         11           22     1496)
ramon: poll                 wall=4.001s usage=3.997s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       4   1025   27.9392    790008         5         12           15     1835)
ramon: poll                 wall=5.000s usage=4.990s mem=22608KiB load=0.99 rootload=1.00
(sat.ddfw       2    461   25.1095    920000         7         13            4     2012)
ramon: poll                 wall=6.000s usage=5.990s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   22.1142   1060005         7         14           18     2067)
ramon: poll                 wall=7.000s usage=6.990s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   19.9872   1210009         9         15           17     2191)
ramon: poll                 wall=8.000s usage=7.988s mem=22608KiB load=1.00 rootload=0.99
(sat.ddfw       2   1025    18.659   1370010        10         16           17     2289)
ramon: poll                 wall=9.000s usage=8.987s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   17.4137   1540020        11         17           62     2766)
ramon: poll                 wall=10.000s usage=9.987s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   17.1368   1720025        13         18           52     3409)
ramon: poll                 wall=11.000s usage=10.987s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   16.9251   1910009        14         19           33     4307)
ramon: poll                 wall=12.000s usage=11.986s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   16.5902   2110020        14         20           96     5681)
ramon: poll                 wall=13.000s usage=12.978s mem=22608KiB load=0.99 rootload=0.99
(sat.ddfw       2   1025   15.1731   2320000        15         21           37     6049)
ramon: poll                 wall=14.000s usage=13.977s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   15.1548   2540017        15         22           43     6788)
ramon: poll                 wall=15.000s usage=14.977s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   15.0428   2770051        15         23           37     7513)
ramon: poll                 wall=16.000s usage=15.976s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.7844   3010032        15         24           22     8370)
ramon: poll                 wall=17.000s usage=16.976s mem=22608KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.2586   3260000        17         25           22     9051)
ramon: poll                 wall=18.000s usage=17.976s mem=22864KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.1737   3520003        19         26           43    10279)
ramon: poll                 wall=19.001s usage=18.980s mem=22864KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025    14.105   3790000        21         27           32    11141)
(sat.ddfw       2   1025   14.1414   4070000        22         28           37    12600)
ramon: poll                 wall=20.000s usage=19.976s mem=22616KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:25:54 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.985s
ramon: group.utime          19.985s
ramon: group.stime          0.000s
ramon: group.mempeak        22872KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
