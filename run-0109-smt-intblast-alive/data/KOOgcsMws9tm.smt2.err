ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:03:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41966 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KOOgcsMws9tm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2912238
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&76
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&76
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&72
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 72 := 78 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 67 := 160468094503&68
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 66 := 160468094503&68
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813896 := 549755813958 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813896 := 549755813958 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813896 := 549755813958 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 160468094503&4
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 8 := 160468094503&16
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 16 := 160468094503&64
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 32 := 160468094503&64
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 35 := 160468094503&64
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 32 := 160468094503&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813928 := 549755813958 << 38
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 35 := 160468094503&40
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 32 := 160468094503&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 549755813928 := 549755814036 << 38
(smt.stats    0    101   3021    597  1142/1022/140      89/15     8   27   19.34)
(smt.stats    1    202   4257   2363  1975/1780/148     199/33    12   33   19.43)
(smt.stats    2    313   6210   4209  1999/1803/154     315/32    14   42   19.54)
(smt.stats    3    417   7937   7203  2003/1807/155     421/36    15   43   19.54)
(smt.stats    4    528   9916   8736  2025/1827/163     520/42    17   49   19.54)
(smt.stats    5    650  13680  11831  2027/1830/167     646/60    19   58   19.54)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 0 := 549755813952 << 2
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    751  15849  14673  2051/1834/169     753/66    20   62   19.66)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 274877906947 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 1 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 274877906947 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 274877906947 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 274877906947 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 601 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&600
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 601 := 75 << 3
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 1 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 2 := 2&600
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 2 := 2&277025390592
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 2&277025390592
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 2&277025390592
(smt.stats    7    862  17512  17556  2140/1923/212     888/75    21   63   19.94)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 1 := 2&274877907048
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2199023255552 := 204078055424 << 1
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 1649267441664 := 204078055424 << 1
(smt.stats    8    984  19257  19743  2251/2039/226    1048/90    23   78   20.04)
(smt.stats    9   1118  24001  25502  2322/2097/228    1224/114    24   95   20.14)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 76516 := 76517&392682724442
(smt.stats   10   1219  27345  30185  2391/2162/231    1373/143    26   97   20.24)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948531880
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2514971787432 := 1041059807232 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179392
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179376
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179392
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146179424
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146181120
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146181152
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 96 := 76517&314146181216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2513169436768 := 962542436352 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948531880
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2514971787432 := 1041059807232 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948532000
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948532000
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948532000
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948532000
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 160 := 76517&315948536224
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2514971791776 := 1041059807232 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 288 := 76517&315948535968
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 288 := 76517&315948535840
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948535840
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948535840
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948536096
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948536096
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 544 := 76517&315948536352
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #863 #865) 64)) 2514971791904 := 1040925589512 << 17
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 8 := 76517&315950891008
(smt.stats   11   1330  29339  34337  2541/2301/294    1554/162    27  103   20.63)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 8 := 76517&315950891008
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 8 := 76517&315950891008
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315961114624
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 315961114402 := 9593904 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315961114624
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 315961114402 := 9593904 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315961114624
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 315961114402 := 9593904 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315971338240
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 314337919018 := 9593943 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&315961114624
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #116))) 315961114406 := 9593904 << 18
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 76517&262144
band: (band[39] (if (= #120 38) 0 (if #540 1 #645)) (shl[39] (bv2int %0) (+ 39 #648))) 1 := 76517&262144
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  31437  39217  2586/2357/317    1818/203    29  123   20.82)
(smt.stats   13   1586  37061  46498  2607/2367/318    1972/203    29  123   20.82)
(smt.stats   14   1733  43000  55697  2639/2382/318    2152/226    30  129   20.91)
ramon: poll                 wall=1.000s usage=0.930s mem=22348KiB load=0.93 rootload=0.92
(smt.stats   15   1834  44428  57155  2749/2407/318    2303/227    30  129   21.20)
(smt.stats   16   1945  46086  60841  2943/2640/318    2526/227    30  129   21.20)
(smt.stats   17   2067  48932  67468  2971/2739/318    2759/227    30  129   21.30)
(smt.stats   18   2201  53195  78712  3069/2782/321    2972/331    32  131   21.49)
ramon: poll                 wall=2.000s usage=1.929s mem=22868KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.926s mem=23128KiB load=1.00 rootload=0.99
(smt.stats   19   2348  55676  82132  3441/2991/321    3145/341    32  131   21.58)
ramon: poll                 wall=4.000s usage=3.909s mem=23132KiB load=0.98 rootload=0.98
(smt.stats   20   2509  56439  83272  3761/3315/321    3324/366    33  132   21.68)
(smt.stats   21   2610  57736  84885  3908/3610/321    3499/369    33  132   21.77)
ramon: poll                 wall=5.000s usage=4.906s mem=23396KiB load=1.00 rootload=1.00
(smt.stats   22   2721  59174  90914  4024/3698/321    3640/372    33  132   22.06)
ramon: poll                 wall=6.000s usage=5.846s mem=23416KiB load=0.94 rootload=0.94
(smt.stats   23   2843  61467  95639  4524/4002/321    3829/390    33  132   22.06)
(smt.stats   24   2977  63871 102667  4688/4317/321    4105/397    33  132   22.15)
(smt.stats   25   3124  68649 114523  4723/4469/322    4402/565    34  137   22.25)
(smt.stats   26   3285  72919 127996  4749/4495/322    4674/566    34  137   22.25)
(smt.stats   27   3462  76901 139495  4845/4514/323    4917/628    35  144   22.25)
(smt.stats   28   3563  79308 145143  4868/4624/323    5106/628    35  144   22.36)
ramon: poll                 wall=7.000s usage=6.818s mem=23852KiB load=0.97 rootload=0.97
(smt.stats   29   3674  83146 152387  4985/4628/323    5297/630    35  144   22.36)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755032359
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755032359
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755032871
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755033143
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755032871
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755033127
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&549755033127
(smt.stats   30   3796  85887 161169  5241/4768/323    5554/636    35  144   22.46)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&208305742071
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&208305742063
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233971715 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 80233970691 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626752515 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626752515 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626752515 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626753539 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626755587 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626757635 := 80234047251&208305746151
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626757635 := 80234047251&208305746151
(smt.stats   31   3930  88562 171665  5548/5228/364    5987/722    37  152   22.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  92530 183231  5587/5334/366    6558/722    37  152   22.84)
(smt.stats   33   4238  96811 196987  5773/5508/368    7180/848    38  165   22.94)
ramon: poll                 wall=8.000s usage=7.807s mem=24776KiB load=0.99 rootload=0.98
(smt.stats   34   4415 100997 204178  5897/5539/369    7558/1037    39  168   23.03)
(smt.stats   35   4609 107643 226766  6058/5810/375    8221/1267    41  198   23.13)
(smt.stats   36   4710 110561 240440  6098/5843/375    8410/1267    41  198   23.24)
(smt.stats   37   4821 115059 259354  6114/5859/375    8715/1267    41  198   23.24)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4943 117929 272335  6137/5882/381    9064/1455    42  210   23.47)
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   39   5077 124062 281296  6148/5889/381    9320/1455    42  210   23.47)
(smt.stats   40   5224 130638 308068  6157/5901/381    9651/1455    42  210   23.47)
ramon: poll                 wall=9.000s usage=8.781s mem=25048KiB load=0.97 rootload=0.98
(smt.stats   41   5385 136723 333071  6167/5909/381    9915/1636    43  227   23.56)
(smt.stats   42   5562 141924 354665  6187/5931/385   10371/1684    44  233   23.56)
(smt.stats   43   5756 149454 380146  6197/5941/385   10654/1684    44  233   23.56)
(smt.stats   44   5969 155593 402167  6308/5945/385   11150/1777    45  249   23.75)
(smt.stats   45   6070 159587 413969  6328/6072/386   11540/1884    46  254   23.75)
(smt.stats   46   6181 164360 436251  6334/6078/387   11764/1893    47  270   23.75)
(smt.stats   47   6303 167066 446627  6477/6080/387   12120/1898    47  270   23.75)
ramon: poll                 wall=10.002s usage=9.783s mem=25760KiB load=1.00 rootload=1.00
(smt.stats   48   6437 167909 453396  6949/6292/387   12482/1900    47  270   24.06)
(smt.stats   49   6584 171307 461887  6968/6712/389   12887/1900    47  270   24.16)
(smt.stats   50   6745 178304 489051  7044/6720/389   13163/2054    48  310   24.26)
(smt.stats   51   6922 183714 520109  7149/6828/389   13518/2058    48  310   24.26)
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 0 := 37&81067507977
(smt.stats   52   7116 188861 533572  7249/6929/389   13886/2059    48  310   24.26)
ramon: poll                 wall=11.000s usage=10.745s mem=25736KiB load=0.96 rootload=0.96
(smt.stats   53   7329 196236 571953  7328/7058/389   14206/2059    48  310   24.26)
(smt.stats   54   7563 204265 609359  7371/7086/391   14605/2173    49  318   24.47)
(smt.stats   55   7664 207752 625249  7443/7144/391   14861/2174    49  318   24.56)
(smt.stats   56   7775 212602 633437  7445/7184/391   15011/2174    49  318   24.56)
(smt.stats   57   7897 220340 658415  7449/7190/391   15159/2174    49  318   24.56)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8031 224239 668580  7482/7196/391   15523/2174    49  318   24.66)
ramon: poll                 wall=12.000s usage=11.742s mem=26272KiB load=1.00 rootload=1.00
(smt.stats   59   8178 229947 684845  7571/7235/391   15854/2175    49  318   24.66)
(smt.stats   60   8339 235216 704736  7892/7355/391   16239/2185    49  318   24.75)
(smt.stats   61   8516 240026 728527  8132/7804/391   17317/2193    49  318   24.85)
(smt.stats   62   8710 247907 770636  8181/7886/391   18132/2198    49  318   24.95)
ramon: poll                 wall=13.000s usage=12.685s mem=26572KiB load=0.94 rootload=0.94
(smt.stats   63   8923 254309 811722  8479/7947/392   18911/2946    50  321   25.17)
(smt.stats   64   9157 259399 834861  8841/8250/392   19573/2949    50  321   25.45)
ramon: poll                 wall=14.000s usage=13.680s mem=27388KiB load=0.99 rootload=1.00
band: (band[39] (if (or #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 #675 ...) 0 (if #686 1 #760)) (shl[64] (* 2 #114) (mod #866 64))) 626724864 := 5014627953&5014628088
(smt.stats   65   9414 265151 877376  9337/8673/392   20441/2952    50  321   25.58)
(smt.stats   66   9515 268336 896176  9358/9093/399   20987/3294    51  328   25.68)
(smt.stats   67   9626 271358 916704  9469/9100/399   21343/3295    51  328   25.77)
(smt.stats   68   9748 274759 946759  9559/9277/399   21790/3295    51  328   25.77)
(smt.stats   69   9882 279420 978044  9620/9303/400   22028/3471    52  333   25.96)
ramon: poll                 wall=15.000s usage=14.677s mem=27664KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10029 282793 997394  9850/9458/400   22498/3472    52  333   26.06)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   71  10190 286238 1024459 10201/9608/400   22960/3473    52  333   26.15)
ramon: poll                 wall=16.000s usage=15.674s mem=27680KiB load=1.00 rootload=1.00
(smt.stats   72  10367 292458 1117587 10544/9980/400   23337/3474    52  333   26.25)
(smt.stats   73  10561 296591 1162413 10620/10294/400   24466/3474    52  333   26.45)
(smt.stats   74  10774 301313 1211556 11122/10373/400   24953/3475    52  333   26.54)
ramon: poll                 wall=17.000s usage=16.668s mem=28396KiB load=0.99 rootload=0.99
(smt.stats   75  11008 304959 1239278 11434/10931/400   25550/3476    52  333   26.77)
(smt.stats   76  11265 307304 1255561 12028/11308/400   25999/3478    52  333   26.96)
ramon: poll                 wall=18.000s usage=17.667s mem=28664KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   77  11547 311509 1303685 12592/11929/400   26928/3482    52  333   27.15)
(smt.stats   78  11648 313622 1329261 12743/12401/400   27115/3484    52  333   27.43)
ramon: poll                 wall=19.000s usage=18.666s mem=29088KiB load=1.00 rootload=1.00
(smt.stats   79  11759 315341 1355065 12968/12532/400   27383/3487    52  333   27.62)
(smt.stats   80  11881 317742 1375231 13172/12808/400   27749/3489    52  333   27.81)
ramon: poll                 wall=20.000s usage=19.665s mem=29392KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:04:03 2024
ramon: root.execname        z3
ramon: root.utime           19.710s
ramon: root.stime           0.010s
ramon: group.total          19.735s
ramon: group.utime          19.715s
ramon: group.stime          0.020s
ramon: group.mempeak        29648KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              0.98
