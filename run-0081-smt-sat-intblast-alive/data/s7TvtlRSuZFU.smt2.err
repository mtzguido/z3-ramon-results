ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:15:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28085 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1352
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/s7TvtlRSuZFU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             553100
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts     :learned/bin    :gc          :time)
(sat.stats          :decisions   :clauses/bin :units       :memory       )
(sat.stats      0      0    0     8/8     0/0  76       0    17.93   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3 :time 0.00)
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #66))) 0 := 1 >>l 57
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 2 := 2 << 1
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 27 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 27 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #72 #129) 64)) 1 := 0 << 1
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 169 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 214 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 241 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 271 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 0&0
lshr: (lshr[64] (mod (div #72 2) 144115188075855872) (mod (+ 57 #135 #137) 64)) 1 := 0 >>l 56
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 412 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 1&2
band: (band[58] (shl[64] (bv2int %1) (mod #130 64)) (lshr[64] (mod #96 144115188075855872) (mod #138 64))) 1 := 2&1
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 1 := 1&288230376151711742
(sat.stats    118   1132    0   218/215   111/20 114       0    18.76   0.06)
(sat.stats    118   1132    0   224/221   111/20 128       0    18.76   0.06)
(sat.stats    118   1132    0   224/221   111/20 128       0    18.76   0.06)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 9 :elim-bin 40 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 480 :time 0.00)
 (sat-probing :cost 246618.76 :time 0.00)
(sat.stats    118   1132    0    73/70   102/21 128       0    18.76   0.06)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 0&144115188075855872
lshr: (lshr[64] (mod (div #72 2) 144115188075855872) (mod (+ 57 #135 #137) 64)) 1 := 72057594037927993 >>l 57
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 604 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 793 :time 0.00)
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #66))) 144115188077376057 := 144115188077376057 >>l 51
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #66))) 146366987889194509 := 146366987889194509 >>l 49
 (sat-cleaner :elim-literals 29 :elim-clauses 58 :cost 1050 :time 0.00)
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 2 := 22106 << 7
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 12 := 64&1371392
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 40 := 64&128
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 48 := 64&682496
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 32 := 64&1285504
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 64&1842432
shl: (shl[64] (bv2int %1) (mod (+ #72 #129) 64)) 1842432 := 67553994410571834 << 7
(sat.stats    299   4110    1  1181/1172   236/49 147       0    19.34   0.17)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 64&256
lshr: (lshr[64] (mod (div #72 2) 144115188075855872) (mod (+ 57 #135 #137) 64)) 42 := 72057594037928286 >>l 50
(sat.stats :conflicts    :restarts      :learned/bin       :gc          :time)
(sat.stats       :decisions   :clauses/bin      :units         :memory       )
(sat.stats    303   4189    2  1239/1229   242/51 147       0    19.44   0.18)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 2 := 64&256
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 64 := 64&128
(sat.stats    306   4354    3  1300/1289   245/51 147       0    19.53   0.18)
(sat.stats    309   4427    4  1318/1307   248/51 147       0    19.53   0.19)
(sat.stats    312   4572    5  1329/1318   252/52 147       0    19.53   0.19)
(sat.stats    315   4641    6  1339/1328   255/52 147       0    19.53   0.19)
(sat.stats    319   4734    7  1342/1331   259/52 147       0    19.53   0.19)
(sat.stats    322   4828    8  1342/1331   262/52 147       0    19.53   0.19)
(sat.stats    325   4884    9  1347/1336   265/52 147       0    19.63   0.19)
(sat.stats    328   4896   10  1355/1344   268/52 147       0    19.63   0.19)
(sat.stats    331   4992   11  1386/1375   271/52 147       0    19.63   0.19)
(sat.stats    334   4996   12  1386/1375   274/52 147       0    19.63   0.19)
(sat.stats    337   5084   13  1388/1377   277/52 147       0    19.63   0.20)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 64&128
band: (band[58] (shl[64] (bv2int %1) (mod #130 64)) (lshr[64] (mod #96 144115188075855872) (mod #138 64))) 34 := 128&64
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 64&128
band: (band[58] (shl[64] (bv2int %1) (mod #130 64)) (lshr[64] (mod #96 144115188075855872) (mod #138 64))) 20 := 128&64
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 64&128
band: (band[58] (shl[64] (bv2int %1) (mod #130 64)) (lshr[64] (mod #96 144115188075855872) (mod #138 64))) 56 := 128&64
(sat.stats    340   5216   14  1456/1445   282/54 147       0    19.72   0.20)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 64&128
band: (band[58] (shl[64] (bv2int %1) (mod #130 64)) (lshr[64] (mod #96 144115188075855872) (mod #138 64))) 64 := 128&64
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 64&128
band: (band[58] (shl[64] (bv2int %1) (mod #130 64)) (lshr[64] (mod #96 144115188075855872) (mod #138 64))) 48 := 128&64
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #120)) (shl[58] (bv2int %1) (mod #72 58))) 0 := 64&128
band: (band[58] (shl[64] (bv2int %1) (mod #130 64)) (lshr[64] (mod #96 144115188075855872) (mod #138 64))) 32 := 128&64
ramon: poll                 wall=1.003s usage=1.002s mem=36800KiB load=1.00 rootload=0.98
ramon: poll                 wall=2.000s usage=1.999s mem=44928KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.999s mem=58716KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.999s mem=63724KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.998s mem=67200KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.998s mem=70768KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.998s mem=73612KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.998s mem=76968KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=96200KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.997s mem=99040KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.997s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.997s mem=101MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.996s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.996s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.996s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.003s usage=15.998s mem=109MiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.995s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.003s usage=17.996s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.993s mem=114MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.993s mem=115MiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:15:51 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.080s
ramon: group.total          20.003s
ramon: group.utime          19.915s
ramon: group.stime          0.088s
ramon: group.mempeak        116MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
