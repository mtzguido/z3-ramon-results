ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:15:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28481 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1350
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/s0qkfw04zYFj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             552747
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   218/218     0/0  61       0    18.53   0.00)
(sat.stats    230   1594    0   218/218   230/132  61       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 606 :time 0.00)
(sat.stats    230   1594    0   218/218   230/132  61       0    18.83   0.01)
(sat.stats    230   1594    0   218/218   230/132  61       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 651418.83 :time 0.00)
(sat.stats    230   1594    0   220/220   214/131  61       0    18.83   0.01)
(sat.stats    248   1833    1   220/220   232/141  61       0    18.83   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    251   1921    2   220/220   235/143  61       0    18.83   0.01)
(sat.stats    256   2041    3   220/220   240/146  61       0    18.83   0.01)
(sat.stats    259   2111    4   220/220   243/146  61       0    18.83   0.01)
(sat.stats    262   2164    5   220/220   246/148  61       0    18.92   0.01)
(sat.stats    265   2224    6   220/220   249/151  61       0    18.92   0.01)
(sat.stats    268   2314    7   220/220   252/154  61       0    18.92   0.01)
(sat.stats    378   5106    8   220/220   362/218  61       0    19.02   0.03)
(sat.stats    381   5293    9   220/220   365/218  61       0    19.02   0.03)
(sat.stats    384   5373   10   220/220   368/218  61       0    19.02   0.03)
(sat.stats    387   5542   11   220/220   371/218  61       0    19.02   0.03)
(sat.stats    390   5697   12   220/220   374/219  61       0    19.02   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1625 :time 0.00)
(sat.stats    393   5983   13   220/220   375/219  66       0    19.41   0.14)
(sat.stats    396   6213   14   224/224   377/219  67       0    19.41   0.15)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1678 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2078 :time 0.00)
lshr: (lshr[43] (bv2int %0) (+ 43 (* 8796093022207 #62))) 31890 := 28 >>l 15
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 0&8795824586752
lshr: (lshr[64] (* 1048576 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 18354349912604293079 := 29360128 >>l 35
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 268419431 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 61296 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 268435424 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 237800256 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 268435328 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 7367942 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 772 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 7438848 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 1280 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 24727552 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 2048 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 151543808 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 160382976 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 263323648 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 65536 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 32768 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 137887744 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 262144 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 119537664 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 1048576 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 83886080 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 4194304 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 8388608 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 167772160 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 201326592 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 134217728 := 268435455&8795824586752
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 1&8795824586752
band: (band[43] (if (= #264 63) 81129638414597458323752150368256 (if #428 40564819207298729161876075184128 #425)) (lshr[64] (* 1048576 #55) (mod #554 64))) 1 := 8795824586752&1
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 2&8795824586752
band: (band[43] (if (= #264 63) 81129638414597458323752150368256 (if #428 40564819207298729161876075184128 #425)) (lshr[64] (* 1048576 #55) (mod #554 64))) 2 := 8795824586752&2
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 4&8795824586752
band: (band[43] (if (= #264 63) 81129638414597458323752150368256 (if #428 40564819207298729161876075184128 #425)) (lshr[64] (* 1048576 #55) (mod #554 64))) 4 := 8795824586752&4
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 8&8795824586752
band: (band[43] (if (= #264 63) 81129638414597458323752150368256 (if #428 40564819207298729161876075184128 #425)) (lshr[64] (* 1048576 #55) (mod #554 64))) 8 := 8795824586752&8
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 16&8795824586752
band: (band[43] (if (= #264 63) 81129638414597458323752150368256 (if #428 40564819207298729161876075184128 #425)) (lshr[64] (* 1048576 #55) (mod #554 64))) 16 := 8795824586752&16
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 32&8795824586752
band: (band[43] (if (= #264 63) 81129638414597458323752150368256 (if #428 40564819207298729161876075184128 #425)) (lshr[64] (* 1048576 #55) (mod #554 64))) 32 := 8795824586752&32
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 64&8795824586752
band: (band[43] (if (= #264 63) 81129638414597458323752150368256 (if #428 40564819207298729161876075184128 #425)) (lshr[64] (* 1048576 #55) (mod #554 64))) 64 := 8795824586752&64
band: (band[43] (lshr[43] (bv2int %0) (+ 43 #450)) (if (= #50 42) 38685626227663735544086528 (if #454 19342813113831867772043264 #536))) 0 := 134&8795824586752
band: (band[43] (if (= #264 63) 81129638414597458323752150368256 (if #428 40564819207298729161876075184128 #425)) (lshr[64] (* 1048576 #55) (mod #554 64))) 128 := 8795824586752&134
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    682  15397   16  2785/2782   704/288  86       0    21.85   0.48)
(sat.stats    710  15567   25  3275/3272   738/294  86       0    21.95   0.51)
ramon: poll                 wall=1.000s usage=0.999s mem=25208KiB load=1.00 rootload=0.97
(sat.stats   1065  17648  128 15366/15363  1252/457  86       0    24.27   1.05)
ramon: poll                 wall=2.000s usage=1.998s mem=28340KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.998s mem=32100KiB load=1.00 rootload=1.00
(sat.stats   1902  31651  201 58090/58087  2304/681  86       0    32.21   3.19)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 16047 :time 0.00)
ramon: poll                 wall=4.000s usage=3.997s mem=33712KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.997s mem=34344KiB load=1.00 rootload=1.00
(sat.stats   2400  42321  300 74668/74665  2903/860 292       0    34.24   5.65)
ramon: poll                 wall=6.000s usage=5.996s mem=34528KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.996s mem=35156KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.996s mem=37000KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.995s mem=39432KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.995s mem=39800KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.995s mem=40920KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.995s mem=41704KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.994s mem=42500KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=43324KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34113 :time 0.00)
ramon: poll                 wall=15.000s usage=14.994s mem=44656KiB load=1.00 rootload=0.99
(sat.stats   3604  84896  479 151930/151927  4702/1557 339       0    43.83  15.49)
ramon: poll                 wall=16.000s usage=15.994s mem=46296KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.994s mem=48092KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.993s mem=49464KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.002s usage=18.991s mem=50192KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.991s mem=50448KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:15:43 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.040s
ramon: group.total          19.999s
ramon: group.utime          19.955s
ramon: group.stime          0.044s
ramon: group.mempeak        50704KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
