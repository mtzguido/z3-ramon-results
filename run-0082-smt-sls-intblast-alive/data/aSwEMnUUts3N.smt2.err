ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:45:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27848 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aSwEMnUUts3N.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             856964
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   116.279     10000        49          0            1        2)
(smt.stats    0    101   4503    740  1189/1065/114      88/12    10   20   51.96)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368744177664 := 70368744177666 << 18
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368744177664 := 70368744177666 << 18
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368744177664 := 70368744177666 << 18
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 35184506306561 := 35184506306560 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368744177664 := 70368744177666 << 18
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 35184506306561 := 35184506306560 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 35184506306561 := 35184506306560 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 35184506306561 := 35184506306560 << 19
(sat.ddfw       1      1   64.9416     20001        98          1            1        3)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 524287 := 35184506306561 << 19
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 2 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 2 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 524284 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 8 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 16 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524287 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524286 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524284 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524280 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 524272 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 8 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 32 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 64 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 128 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 256 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 512 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1024 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 2048 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 512 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 1024 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 2048 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 4096 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 8192 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 2048 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 4096 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 8192 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 16384 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 32768 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 65536 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 131072 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 15 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 14 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 8 := 524287&524288
(smt.stats    1    202   6987   3383  1584/1410/213     178/14    14   46   52.66)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 8 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 8 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 4 := 524287&24641536
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 65536 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 65536 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 65536 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1048576
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 131072 := 524287&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1048576
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 131072 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 131072 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&524288
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1048576
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 524287&1048576
band: (band[46] (if (= #113 45) 1 (if #598 3 #725)) (shl[46] (bv2int %0) (+ 46 #728))) 262144 := 524287&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&1048576
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
(smt.stats    2    313   9250   5966  1895/1704/290     315/59    18   66   52.96)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&2097152
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&4194304
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&4194304
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&4194304
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&17301504
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&16777216
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&8388608
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&8388608
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&524288
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 8796093022207&524288
(smt.stats    3    416  11562   9240  2190/2003/372     451/92    23   87   53.15)
(smt.stats    4    527  12801  11645  2543/2306/380     517/93    25  108   53.35)
(sat.ddfw       1      1   70.1754     40001       196          2            1        5)
(smt.stats    5    649  15817  15307  2651/2395/382     738/158    26  109   53.54)
(sat.ddfw       1      1   61.4754     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    750  18947  20829  2769/2531/382     942/160    26  109   53.64)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 35184372088831&35184372088834
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 35184372088831&35184405643266
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 35184372088831&35184372088833
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088833
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 175921860444161 := 536870912 << 44
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184439197697
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184439197697
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184439197697
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184439197697
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088897
(smt.stats    7    861  21217  25415  2898/2650/420    1109/195    28  112   53.95)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088849
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088849
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088865
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372088961
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 35184372088831&35184372089217
(smt.stats    8    983  24722  33184  2984/2740/459    1358/329    30  144   54.24)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 17592186044415&35184405643268
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 17592186044415&35184405643268
(smt.stats    9   1117  31644  46542  3014/2754/460    1502/335    32  154   54.43)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554436 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554500 := 17592186044415&35184405644044
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554500 := 17592186044415&35184405643788
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554500 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554437 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 33554436 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 67108868 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 67109380 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104858628 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104858629 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104858628 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 138412548 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 167772676 := 17592186044415&35184405643780
(smt.stats   10   1218  32911  49229  3216/2844/486    1773/396    33  159   54.81)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104859140 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860164 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104859140 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860164 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104862212 := 17592186044415&35184405643780
ramon: poll                 wall=1.000s usage=1.168s mem=57296KiB load=1.17 rootload=1.16
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104866308 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104862212 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860420 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860421 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860421 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860420 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860420 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860420 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860165 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104860164 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 104858116 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171717 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
(sat.ddfw       1      1   40.6091    110001       539          4            1       12)
(smt.stats   11   1329  34251  52780  3460/2972/506    2047/404    33  159   55.10)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 101171716 := 17592186044415&35184405643780
(smt.stats   12   1451  36266  59300  3764/3520/562    2673/557    35  175   55.36)
(smt.stats   13   1585  42921  76456  3783/3536/568    2965/911    36  193   55.56)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 127&25233410
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 127&25233410
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 127&25233410
(sat.ddfw       1      1   32.7219    160000       784          5            1       17)
(smt.stats   14   1732  45545  81436  4149/3543/568    3301/917    36  193   55.74)
(smt.stats   15   1833  47972  94753  4410/3935/568    3724/921    36  193   55.84)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   16   1945  49055  98429  4625/4381/569    4086/1160    37  204   55.94)
ramon: poll                 wall=2.000s usage=2.146s mem=58468KiB load=0.98 rootload=0.98
(smt.stats   17   2069  53665 111403  4658/4414/573    4512/1427    38  221   56.03)
(sat.ddfw       1      1   27.9595    220001      1078          6            1       23)
(smt.stats   18   2203  58374 142223  4721/4477/578    5047/1705    40  230   56.14)
(smt.stats   19   2350  65702 185049  4734/4490/580    5271/1727    41  236   56.31)
(smt.stats   20   2511  70103 206476  4876/4606/583    5658/1785    42  239   56.50)
(smt.stats   21   2612  73287 233790  4892/4620/587    5814/1856    44  279   56.50)
(sat.ddfw       1      1   24.3733    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=3.144s mem=59116KiB load=1.00 rootload=1.00
(smt.stats   22   2723  77750 251638  4933/4623/587    6153/1859    44  279   56.60)
(smt.stats   23   2845  81365 266456  5349/4776/587    6959/1861    44  279   56.79)
(smt.stats   24   2979  84319 279562  5567/5295/588    7597/2240    45  280   56.98)
(sat.ddfw       1      1    21.645    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.146s mem=59752KiB load=1.00 rootload=1.00
(smt.stats   25   3126  91006 299499  5654/5379/593    8538/2593    46  319   57.08)
(smt.stats   26   3287  97757 324653  5684/5412/597    9486/2779    47  351   57.43)
(smt.stats   27   3464 107707 376864  5711/5421/599   10841/2781    47  351   57.67)
(sat.ddfw       1      1   19.2843    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.082s mem=60064KiB load=0.94 rootload=0.93
(smt.stats   28   3565 111672 401190  5826/5445/599   11553/3222    48  383   57.86)
(smt.stats   29   3676 114564 420412  6099/5593/599   11886/3225    48  383   57.95)
(sat.ddfw       1      1   17.5285    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.084s mem=60784KiB load=1.00 rootload=1.01
(smt.stats   30   3798 117010 434980  6386/5876/599   12358/3227    48  383   58.14)
(sat.ddfw       1      1   16.1007    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.220s mem=61044KiB load=1.14 rootload=1.13
(smt.stats   31   3932 119465 443463  6856/6259/599   12967/3231    48  383   58.24)
(smt.stats   32   4079 127207 497895  6907/6607/599   13776/3233    48  383   58.33)
(smt.stats   33   4240 132315 545868  6929/6655/601   14312/4457    49  385   58.45)
ramon: poll                 wall=8.000s usage=8.223s mem=61012KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.1057    790001      3872         12            1       80)
(smt.stats   34   4417 137398 589863  7066/6768/609   15313/4802    51  434   58.64)
ramon: poll                 wall=9.000s usage=9.224s mem=61596KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   14.0252    920001      4509         13            1       93)
(smt.stats   35   4611 145365 617609  7336/6907/611   15888/4809    51  434   59.22)
ramon: poll                 wall=10.000s usage=10.230s mem=61544KiB load=1.01 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   36   4712 149126 631444  7540/7070/611   16164/5234    52  464   59.32)
(smt.stats   37   4823 155122 684927  7619/7280/611   16543/5235    52  464   59.32)
(sat.ddfw       1      1   13.2651   1060001      5196         14            1      108)
(smt.stats   38   4945 161189 742260  7626/7312/611   17233/5235    52  464   59.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5079 166702 763999  7639/7317/612   17600/5454    53  476   59.41)
ramon: poll                 wall=11.000s usage=11.523s mem=62316KiB load=1.29 rootload=1.29
(smt.stats   40   5226 174607 804833  7753/7361/615   18141/5529    54  529   59.65)
(smt.stats   41   5387 181051 830107  7989/7458/615   18566/5546    54  529   59.87)
ramon: poll                 wall=12.000s usage=12.669s mem=62772KiB load=1.15 rootload=1.15
(sat.ddfw       1      1   12.5439   1210001      5931         15            1      123)
(smt.stats   42   5564 189049 895293  8030/7712/618   19810/5676    55  568   59.96)
(smt.stats   43   5758 196915 954147  8070/7727/619   20337/5965    56  572   60.06)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 1&229440
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 272367617 := 35184372203552 << 1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 1&229440
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 272367617 := 35184372203552 << 1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 1&229440
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 272367617 := 35184372203552 << 1
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 1&229440
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 272367617 := 35184372203552 << 1
ramon: poll                 wall=13.000s usage=13.665s mem=63028KiB load=1.00 rootload=1.00
(smt.stats   44   5971 200583 981918  8469/8149/620   21647/6121    57  589   60.25)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   45   6072 203652 1006607  8530/8175/620   23223/6123    57  589   60.44)
(smt.stats   46   6183 206905 1072395  8836/8261/620   23582/6658    58  602   60.78)
(sat.ddfw       1      1   11.7803   1370001      6715         16            1      139)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 1 := 7&54730754
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 0 := 7&54697986
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 2 := 7&54697986
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #821 #825) 64)) 70368798875650 := 70368799752192 << 2
(smt.stats   47   6305 209585 1106032  8934/8535/620   23907/6659    58  602   61.20)
band: (band[46] (if (= #355 63) 1 (if #575 3 #814)) (shl[64] (* 2 #337) (mod #829 64))) 10 := 15&54697986
ramon: poll                 wall=14.000s usage=14.665s mem=63856KiB load=1.00 rootload=0.99
(smt.stats   48   6439 213244 1137949  9081/8632/625   24478/6698    59  603   61.40)
(smt.stats   49   6586 219290 1173706  9202/8761/625   25517/6712    59  603   61.49)
ramon: poll                 wall=15.000s usage=15.665s mem=64112KiB load=1.00 rootload=1.00
(smt.stats   50   6747 226758 1207559  9458/8909/625   26597/6951    60  603   61.74)
(sat.ddfw       1      1   11.1031   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=16.665s mem=64368KiB load=1.00 rootload=1.00
(smt.stats   51   6924 232342 1257797  9728/9163/625   27947/6954    60  603   61.93)
(smt.stats   52   7118 241022 1320147  9747/9423/627   28700/7291    61  605   62.12)
ramon: poll                 wall=17.000s usage=17.664s mem=64880KiB load=1.00 rootload=1.00
(smt.stats   53   7331 249223 1369582  9875/9519/628   29761/7542    62  606   62.32)
(sat.ddfw       1      1   10.4962   1720001      8431         18            1      174)
(smt.stats   54   7565 257722 1399171 10042/9578/628   31072/7545    62  606   62.51)
ramon: poll                 wall=18.000s usage=18.664s mem=65136KiB load=1.00 rootload=1.00
(smt.stats   55   7666 262488 1433797 10124/9745/630   31473/7813    63  608   62.60)
(smt.stats   56   7777 268082 1472969 10261/9817/630   31827/7822    63  608   62.60)
ramon: poll                 wall=19.000s usage=19.663s mem=65648KiB load=1.00 rootload=1.00
(smt.stats   57   7899 272107 1512301 10397/9993/631   32327/7825    63  608   62.60)
(sat.ddfw       1      1   9.95859   1910001      9362         19            1      193)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   58   8033 275121 1548063 10417/10089/634   34125/8113    64  611   62.70)
ramon: poll                 wall=20.000s usage=20.660s mem=65560KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:45:34 2024
ramon: root.execname        z3
ramon: root.utime           20.710s
ramon: root.stime           0.000s
ramon: group.total          20.726s
ramon: group.utime          20.718s
ramon: group.stime          0.008s
ramon: group.mempeak        65816KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.03
