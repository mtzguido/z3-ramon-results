ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:00:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42039 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/IrDd0FItc5PJ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2901410
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3817   1136  1257/1134/92      92/1     4   14   19.05)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 3&111
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 3&111
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 3 := 3&144115188075855861
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 3 := 3&111
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 111 := 110 << 1
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 3 := 3&111
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 111 := 110 << 1
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 3 := 3&220
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 3&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 144115188075855871 := 55 << 2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 3&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 144115188075855871 := 55 << 2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 3&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 144115188075855870 := 55 << 2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 3 := 3&144115188075855856
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 2 := 3&144115188075855856
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 1 := 3&220
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 2 := 3&220
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 3&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 223 := 55 << 2
(smt.stats    1    202   5705   3085  1910/1725/135     177/6     8   26   19.45)
(smt.stats    2    313  10354   6499  2388/2145/136     276/7     9   29   19.65)
(smt.stats    3    414  12869   8534  2409/2161/136     378/9    10   30   19.65)
(smt.stats    4    525  14047   9332  2450/2202/136     463/9    10   30   19.65)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 4 := 4398046511103&250
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 4 := 4398046511103&250
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 4 := 4398046511103&592
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&592
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&592
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 16 := 4398046511103&592
(smt.stats    5    647  17261  12441  2499/2211/137     592/11    11   31   19.85)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 4 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 4 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 12 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 12 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 12 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 12 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 8 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 12 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 108 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 88 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 92 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 76 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 44 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 44 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 108 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 108 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 44 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 44 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 44 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 236 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 236 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 236 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 364 := 4398046511103&364
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 144115188075856236 := 144115188075856236 << 41
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 108 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 108 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 108 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 108 := 4398046511103&364
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 364 := 4398046511103&364
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 144115188075856236 := 144115188075856236 << 41
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 364 := 4398046511103&364
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 144115188075856236 := 144115188075856236 << 41
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18817  15233  2580/2325/239     705/27    13   61   20.05)
(smt.stats    7    859  20980  18318  2608/2359/243     842/60    15   65   20.15)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 1&72057594037935104
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 0 := 108086391056895488 << 1
(smt.stats    8    981  21677  20226  2761/2364/243    1018/70    15   65   20.54)
(smt.stats    9   1115  24864  26190  2807/2548/259    1215/161    17  133   20.54)
(smt.stats   10   1216  28538  32492  2826/2572/261    1317/190    18  135   20.54)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 72 := 17592186044415&72057594046317761
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 73 := 17592186044415&72057594046317761
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 73 := 17592186044415&72057594046317761
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 73 := 17592186044415&72057594046317761
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 65 := 17592186044415&72057594046317761
(smt.stats   11   1327  30043  34240  2905/2578/261    1443/204    19  138   20.74)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 65 := 17592186044415&72057594046323905
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  30564  35344  3087/2778/271    1613/204    19  138   20.93)
(smt.stats   13   1583  33765  44087  3421/3170/273    1919/258    21  146   21.03)
(smt.stats   14   1730  36290  49072  3645/3328/273    2109/258    21  146   21.23)
(smt.stats   15   1831  37927  56632  3660/3359/278    2443/285    22  146   21.32)
(smt.stats   16   1942  42256  67369  3689/3383/281    2786/293    23  164   21.42)
(smt.stats   17   2064  45288  81757  3698/3392/283    3081/331    24  178   21.42)
(smt.stats   18   2198  48211  95399  3738/3421/286    3419/357    25  186   21.51)
ramon: poll                 wall=1.000s usage=0.932s mem=22804KiB load=0.93 rootload=0.91
(smt.stats   19   2345  53083 112102  3808/3431/287    3922/456    26  196   21.61)
(smt.stats   20   2506  55996 126182  3929/3619/299    4770/666    28  203   21.93)
(smt.stats   21   2607  58403 135583  3960/3640/300    5399/667    28  203   22.04)
(smt.stats   22   2718  61371 150915  3995/3667/300    5676/860    29  264   22.04)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 4 := 67108863&67108352
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 67108863&67108352
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 67108863&67108352
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 67108863&67108352
(smt.stats   23   2840  64101 161749  4046/3691/300    6366/869    29  264   22.13)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 436 := 67108863&67108360
(smt.stats   24   2974  67281 172230  4097/3747/315    6706/932    30  267   22.23)
(smt.stats   25   3121  69114 186486  4120/3793/325    7159/967    31  267   22.33)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 6 := 31&28
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 14 := 31&30
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 14 := 31&30
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 14 := 31&30
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 14 := 31&30
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 10 := 31&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 10 := 144115188075856082 << 4
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 10 := 31&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 10 := 144115188075856082 << 4
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 10 := 31&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 10 := 144115188075856082 << 4
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 10 := 31&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 144115188075855882 := 144115188075856082 << 4
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 10 := 31&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #895 #897) 64)) 144115188075855882 := 144115188075856082 << 4
(smt.stats   26   3282  71380 196091  4209/3820/325    7481/970    31  267   22.52)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3459  74672 204771  4279/3970/345    7734/1050    32  290   22.62)
(smt.stats   28   3560  76431 215159  4307/3990/347    7950/1050    32  290   22.62)
(smt.stats   29   3671  79381 234439  4329/4012/348    8122/1102    33  370   22.73)
(smt.stats   30   3793  83140 256722  4337/4020/349    8302/1122    34  378   22.73)
ramon: poll                 wall=2.000s usage=1.931s mem=24100KiB load=1.00 rootload=0.99
(smt.stats   31   3927  85357 267211  4506/4025/351    8777/1128    34  378   22.92)
(smt.stats   32   4074  87998 284150  4601/4204/351    9424/1144    35  378   23.02)
(smt.stats   33   4235  92842 310328  4619/4302/351    9701/1144    35  378   23.02)
(smt.stats   34   4412  94472 318523  4870/4303/351   10190/1147    35  378   23.30)
(smt.stats   35   4606  99992 348863  4909/4592/353   11075/1238    36  382   23.30)
(smt.stats   36   4707 103619 370486  4964/4600/355   11252/1395    37  394   23.40)
(smt.stats   37   4818 107794 386948  5011/4669/355   11454/1398    37  394   23.40)
(smt.stats   38   4940 110817 397936  5082/4698/355   11777/1404    37  394   23.40)
(smt.delete-inactive-clauses  :num-deleted-clauses 20)
ramon: poll                 wall=3.000s usage=2.931s mem=24928KiB load=1.00 rootload=1.00
(smt.stats   39   5074 113362 407127  5111/4790/357   12464/1480    38  400   23.59)
(smt.stats   40   5221 120996 434671  5132/4815/357   12782/1480    38  400   23.59)
(smt.stats   41   5382 129478 482283  5204/4822/358   13168/1553    39  428   23.68)
(smt.stats   42   5559 133083 504714  5264/4905/358   13718/1554    39  428   23.81)
(smt.stats   43   5753 136173 517578  5335/4949/358   14459/1558    39  428   23.91)
(smt.stats   44   5966 140298 533102  5514/5197/359   15167/1794    40  428   24.00)
(smt.stats   45   6067 142086 542567  5587/5198/359   15475/1797    40  428   24.10)
ramon: poll                 wall=4.000s usage=3.931s mem=25528KiB load=1.00 rootload=1.00
(smt.stats   46   6178 143914 559325  5839/5342/359   16043/1800    40  428   24.19)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6300 146191 577463  5948/5577/359   16715/1804    40  428   24.29)
(smt.stats   48   6434 147438 583424  6179/5637/359   17038/1804    40  428   24.38)
(smt.stats   49   6581 152301 594582  6188/5871/359   17499/1804    40  428   24.48)
ramon: poll                 wall=5.000s usage=4.930s mem=25888KiB load=1.00 rootload=1.00
(smt.stats   50   6742 160518 634120  6306/5881/359   17888/1809    40  428   24.58)
(smt.stats   51   6919 164288 657600  6606/6014/359   18951/1812    40  428   24.77)
(smt.stats   52   7113 170502 684048  6619/6302/359   19886/1812    40  428   24.87)
(smt.stats   53   7326 177228 707101  6700/6308/359   21032/1812    40  428   24.96)
ramon: poll                 wall=6.000s usage=5.930s mem=26448KiB load=1.00 rootload=1.00
(smt.stats   54   7560 183434 729049  6803/6435/359   22127/1813    40  428   25.06)
(smt.stats   55   7661 187856 760668  6808/6490/359   22466/1813    40  428   25.06)
(smt.stats   56   7772 191750 800926  6824/6506/359   23659/1813    40  428   25.15)
(smt.stats   57   7894 195797 829283  6838/6520/359   24402/1813    40  428   25.27)
(smt.stats   58   8028 199792 849740  6845/6527/359   25081/1813    40  428   25.27)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 3&6376
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 3 := 3&6376
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 3&6376
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 2 := 3&6376
(smt.stats   59   8175 203340 874354  6895/6528/359   25447/1813    40  428   25.51)
(smt.stats   60   8336 206926 887755  7027/6628/374   25979/3460    41  431   25.60)
(smt.stats   61   8513 211635 917724  7061/6739/374   26741/3460    41  431   25.70)
ramon: poll                 wall=7.000s usage=6.930s mem=27216KiB load=1.00 rootload=1.00
(smt.stats   62   8707 217992 946289  7165/6742/374   27428/3467    41  431   25.94)
(smt.stats   63   8920 224714 977292  7364/6872/374   28408/3647    42  431   26.13)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9154 233343 1013781  7388/7065/374   28856/3647    42  431   26.36)
(smt.stats   65   9411 239685 1077501  7559/7075/374   29650/3650    42  431   26.46)
(smt.stats   66   9512 242455 1094967  7596/7273/374   30068/3650    42  431   26.55)
(smt.stats   67   9623 245426 1118223  7601/7278/374   31010/3650    42  431   26.65)
ramon: poll                 wall=8.002s usage=7.930s mem=28032KiB load=1.00 rootload=1.00
(smt.stats   68   9745 248404 1141768  7635/7280/374   31655/3650    42  431   26.65)
(smt.stats   69   9879 252201 1157169  7642/7319/374   31826/3650    42  431   26.65)
(smt.delete-inactive-clauses  :num-deleted-clauses 2877)
(smt.stats   70  10026 255123 1193294  7671/7344/374   29601/3650    42  431   26.74)
(smt.stats   71  10187 261986 1248560  7683/7356/374   30140/3650    42  431   26.74)
(smt.stats   72  10364 269473 1317339  7690/7363/374   30606/3650    42  431   26.74)
(smt.stats   73  10558 275938 1351614  7699/7372/374   31283/3650    42  431   26.84)
(smt.stats   74  10771 281842 1407158  7807/7390/375   31996/4591    43  431   27.04)
ramon: poll                 wall=9.000s usage=8.928s mem=28484KiB load=1.00 rootload=0.99
(smt.stats   75  11005 286524 1447953  8046/7712/377   33218/4592    43  431   27.14)
(smt.stats   76  11262 295176 1485971  8143/7721/377   34052/4594    43  431   27.14)
(smt.stats   77  11544 306735 1510813  8204/7852/377   34558/4745    44  435   27.25)
(smt.stats   78  11645 308791 1524603  8293/7930/377   34847/4745    44  435   27.25)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 16376 := 16383&16424
(smt.stats   79  11756 311516 1549667  8351/8002/378   35407/4833    45  452   27.25)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 16376 := 16383&8405000
ramon: poll                 wall=10.000s usage=9.927s mem=28784KiB load=1.00 rootload=1.00
(smt.stats   80  11878 315300 1567582  8405/8045/378   35928/4834    45  452   27.35)
(smt.stats   81  12012 318399 1576383  8483/8104/378   36276/4834    45  452   27.45)
(smt.stats   82  12159 323312 1604842  8663/8185/378   36687/4835    45  452   27.45)
(smt.stats   83  12320 328702 1641875  8673/8347/381   36971/4875    46  457   27.54)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12497 332814 1681660  8692/8359/381   37761/4877    46  457   27.64)
(smt.stats   85  12691 342405 1704426  8754/8375/381   38219/4881    46  457   27.77)
(smt.stats   86  12904 351243 1751733  8784/8456/381   38925/5092    47  506   27.77)
ramon: poll                 wall=11.000s usage=10.927s mem=29360KiB load=1.00 rootload=1.00
(smt.stats   87  13138 356991 1830445  8823/8467/381   39642/5093    47  506   27.88)
(smt.stats   88  13395 365458 1932039  8874/8500/381   40484/5097    47  506   28.07)
(smt.stats   89  13677 373003 2015374  8982/8558/381   41662/5101    47  506   28.27)
ramon: poll                 wall=12.000s usage=11.927s mem=29796KiB load=1.00 rootload=1.00
(smt.stats   90  13987 380207 2080862  9382/8663/381   42615/5107    47  506   28.47)
(smt.stats   91  14088 383785 2099172  9390/9062/381   43070/5107    47  506   28.47)
(smt.stats   92  14199 389140 2129861  9398/9066/381   43485/5108    47  506   28.58)
(smt.stats   93  14322 392997 2148494  9453/9079/381   43895/5110    47  506   28.58)
(smt.stats   94  14456 395764 2168862  9527/9132/381   44951/5112    47  506   28.68)
(smt.stats   95  14603 397994 2187966  9656/9201/381   45489/5112    47  506   28.78)
(smt.stats   96  14764 400236 2223948 10117/9362/382   46046/5647    48  514   28.88)
ramon: poll                 wall=13.000s usage=12.926s mem=30368KiB load=1.00 rootload=1.00
(smt.stats   97  14941 405427 2273563 10131/9803/382   46546/5647    48  514   28.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 211)
(smt.stats   98  15135 411937 2335627 10162/9813/382   47371/5648    48  514   29.08)
(smt.stats   99  15348 419749 2391856 10310/9865/382   48578/5651    48  514   29.17)
ramon: poll                 wall=14.006s usage=13.930s mem=30832KiB load=1.00 rootload=0.99
(smt.stats  100  15582 427817 2469719 10402/9992/382   49780/5655    48  514   29.36)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  101  15839 435625 2503941 10492/10096/383   50342/5952    49  516   29.87)
(smt.stats  102  16121 446468 2571727 10514/10186/383   52133/5952    49  516   29.96)
ramon: poll                 wall=15.006s usage=14.928s mem=31740KiB load=1.00 rootload=1.00
(smt.stats  103  16431 458859 2693620 10685/10193/383   54057/5957    49  516   30.25)
(smt.stats  104  16771 469341 2716949 10708/10370/383   54875/5957    49  516   30.35)
(smt.stats  105  16872 473187 2729000 10764/10392/383   55116/5957    49  516   30.35)
(smt.stats  106  16983 475372 2742853 10782/10454/386   55614/6425    50  564   30.45)
(smt.stats  107  17105 480485 2773094 10828/10459/386   56018/6426    50  564   30.45)
(smt.stats  108  17239 485550 2806079 10919/10512/386   56403/6426    50  564   30.54)
ramon: poll                 wall=16.000s usage=15.904s mem=32096KiB load=0.98 rootload=0.98
(smt.stats  109  17386 494413 2942134 10929/10601/386   56778/6426    50  564   30.54)
(smt.stats  110  17547 498650 2976550 10950/10603/386   57274/6591    51  614   30.64)
(smt.stats  111  17724 503651 3016812 11010/10626/386   57943/6592    51  614   30.64)
(smt.stats  112  17918 508503 3050260 11162/10696/386   58608/6595    51  614   30.74)
(smt.stats  113  18131 515241 3102885 11169/10841/386   59793/6595    51  614   30.83)
ramon: poll                 wall=17.002s usage=16.908s mem=32608KiB load=1.00 rootload=1.01
(smt.stats  114  18365 525549 3225973 11172/10844/386   60697/6595    51  614   30.93)
(smt.stats  115  18622 530727 3262887 11372/10850/386   62461/6598    51  614   31.43)
(smt.stats  116  18904 537205 3311796 11609/11066/386   63931/6601    51  614   31.62)
ramon: poll                 wall=18.000s usage=17.902s mem=33104KiB load=1.00 rootload=0.99
(smt.stats  117  19214 548558 3375154 11678/11318/386   66756/6602    51  614   31.81)
(smt.stats  118  19554 563726 3491040 11753/11371/386   67863/6603    51  614   31.91)
ramon: poll                 wall=19.000s usage=18.902s mem=33616KiB load=1.00 rootload=1.00
(smt.stats  119  19927 576039 3660570 11783/11455/387   68998/7886    52  635   32.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 498)
(smt.stats  120  20028 578127 3703363 11784/11456/387   68791/7886    52  635   32.10)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 72057594042122332 := 72057594042122329 << 5
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 72057594042122332 := 72057594042122329 << 5
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 72057594042122332 := 72057594042122329 << 5
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #115))) 72057594042122332 := 72057594042122329 << 5
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  121  20139 581083 3724978 11831/11457/387   69001/7888    52  635   32.20)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 1 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 2 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 2 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 4 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 8 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 16 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 8 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 4 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 4 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 16 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 16 := 31&134220576
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755) 0 (if #756 1 #868)) (shl[64] (* 2 #113) (mod #898 64))) 0 := 31&134220576
band: (band[57] (if (= #119 56) 1 (if #574 3 #734)) (shl[57] (bv2int %0) (+ 57 #737))) 2 := 31&134220576
(smt.stats  122  20261 585104 3761900 11896/11550/428   69230/7967    53  636   32.29)
(smt.stats  123  20395 590784 3791736 11924/11576/428   69618/7967    53  636   32.29)
(smt.stats  124  20542 597914 3838061 11927/11582/428   69948/7967    53  636   32.40)
(smt.stats  125  20703 603411 3896962 11932/11583/428   70622/7968    53  636   32.40)
ramon: poll                 wall=20.000s usage=19.902s mem=34128KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:00:51 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.030s
ramon: group.total          19.968s
ramon: group.utime          19.928s
ramon: group.stime          0.040s
ramon: group.mempeak        34128KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
