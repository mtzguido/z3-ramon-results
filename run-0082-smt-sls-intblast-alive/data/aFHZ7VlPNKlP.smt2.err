ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:44:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27840 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aFHZ7VlPNKlP.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             855746
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   72.9927     10000        49          0            1        2)
(sat.ddfw       1      1   39.2196     20001        98          1            1        3)
(smt.stats    0    101   3744    650  1297/1093/96     116/14     4   14   52.05)
(smt.stats    1    202   6031   1559  2061/1859/101     228/37     7   28   52.14)
(sat.ddfw       1      1   39.5257     40001       196          2            1        5)
(smt.stats    2    313   7833   4711  2182/1961/102     337/47     8   29   52.24)
(smt.stats    3    414   9210   6244  2244/2047/106     423/48    12   34   52.34)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&412929
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 412929 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&412929
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 412929 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&412929
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 412929 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&412929
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 412929 := 4503599628048384 >>l 12
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&1099511627941
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627942 := 2199023255883 >>l 1
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&1099511627941
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 2199023255882 := 2199023255883 >>l 1
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 0&1099511627941
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627942 := 2199023255883 >>l 1
(smt.stats    4    525   9911   7842  2312/2109/118     533/66    14   38   52.43)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 131072 := 131072&1099511627925
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 131071 := 131072&1099511627925
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&1099511627925
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1099511627925 := 4503599627976704 >>l 47
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&131071
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 131071 := 4503599627976704 >>l 47
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&33
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 33 := 4503599627976704 >>l 47
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627923 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 14 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 12 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 6 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627923 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627923 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 33 := 2199023255848 >>l 36
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 1 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 1 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 24 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 31 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 30 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 28 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 24 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 31 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 30 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 8 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 2 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 32 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 16 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 1 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 4 := 131072&32
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 131072&32
band: (band[52] (if (= #112 51) 4503599627370496 (if #493 2251799813685248 #593)) (lshr[52] (bv2int %0) (+ 52 #596))) 4 := 131072&32
(smt.stats    5    647  11883  11814  2600/2312/182     658/82    16   54   53.16)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1 := 4503599628027904 >>l 22
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1099511627937
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1099511627937 := 4503599628027904 >>l 22
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1099511627937
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #607 #611) 64)) 1099511627937 := 4503599628027904 >>l 22
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 2199023255872 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627937 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627937 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627937 := 2199023255873 >>l 11
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 0 := 4398046511104&1073741824
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1099511627937 := 2199023255873 >>l 11
(sat.ddfw       1      1   37.3599     70001       343          3            1        8)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 4 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 8 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 8 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 64 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 64 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 128 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 256 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 512 := 4398046511104&1073741824
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 1024 := 4398046511104&1073741824
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14254  14540  2949/2611/252     768/85    17   68   53.45)
(smt.stats    7    859  15585  16299  3172/2727/282     969/91    18   74   53.84)
ramon: poll                 wall=1.008s usage=0.824s mem=56136KiB load=0.82 rootload=0.81
(smt.stats    8    981  17011  20830  3302/3029/298    1256/136    21   92   53.93)
(sat.ddfw       1      1   33.2226    110001       539          4            1       12)
(smt.stats    9   1115  19357  26876  3397/3053/301    1463/211    22   98   54.03)
(sat.ddfw       1      1   29.2392    160000       784          5            1       17)
ramon: poll                 wall=2.004s usage=1.774s mem=56616KiB load=0.95 rootload=0.95
(smt.stats   10   1216  20095  27832  3482/3160/301    1565/248    23  100   54.22)
(sat.ddfw       1      1   25.5759    220001      1078          6            1       23)
(smt.stats   11   1327  21497  30446  3645/3271/301    1700/255    23  100   54.34)
ramon: poll                 wall=3.000s usage=2.718s mem=56880KiB load=0.95 rootload=0.94
(sat.ddfw       1      1   22.5734    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  22721  33398  3889/3395/301    1828/258    23  100   54.43)
ramon: poll                 wall=4.000s usage=3.577s mem=56896KiB load=0.86 rootload=0.86
(sat.ddfw       1      1   20.1157    370001      1813          8            1       38)
(smt.stats   13   1583  27385  44130  3969/3635/301    1996/262    23  100   54.53)
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 32768&4503599627108351
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 32768&4503599627108351
band: (band[52] (if (= #328 63) 18446744073709551616 (if #474 9223372036854775808 #471)) (lshr[64] (* 2048 #106) (mod #614 64))) 2 := 32768&4503599627108351
(smt.stats   14   1730  29131  49293  4179/3696/301    2222/265    23  100   54.67)
(smt.stats   15   1831  31722  57831  4349/3953/301    2462/265    23  100   54.67)
(smt.stats   16   1942  34621  65985  4404/4092/301    2964/265    23  100   54.77)
(smt.stats   17   2064  38455  72306  4467/4141/305    3478/511    24  102   54.77)
(sat.ddfw       1      1   18.4919    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.580s mem=57580KiB load=1.00 rootload=1.00
(smt.stats   18   2198  43402  83852  4625/4212/305    3854/561    25  110   54.88)
(smt.stats   19   2345  49286  96003  4724/4382/305    4144/564    25  110   54.99)
(sat.ddfw       1      1   17.0736    560001      2745         10            1       57)
(smt.stats   20   2506  53741 107908  4797/4518/307    4732/851    26  116   55.09)
ramon: poll                 wall=6.000s usage=5.579s mem=57636KiB load=1.00 rootload=1.00
(smt.stats   21   2607  57454 119958  4806/4524/307    5049/851    26  116   55.09)
(smt.stats   22   2718  61230 130274  4901/4569/307    5248/948    27  120   55.39)
(smt.stats   23   2840  64634 138663  5063/4615/307    5410/952    27  120   55.49)
ramon: poll                 wall=7.004s usage=6.576s mem=57704KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   15.8251    670001      3284         11            1       68)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   24   2974  67839 146818  5196/4909/312    5678/1006    28  126   55.49)
(smt.stats   25   3121  71677 163714  5343/4932/313    6163/1072    29  147   55.69)
ramon: poll                 wall=8.004s usage=7.574s mem=57972KiB load=1.00 rootload=1.00
(smt.stats   26   3282  76041 179920  5469/5082/313    6850/1076    29  147   55.80)
(sat.ddfw       1      1   14.7077    790001      3872         12            1       80)
(smt.stats   27   3459  84351 196680  5561/5201/314    7130/1276    30  147   55.89)
(smt.stats   28   3560  87246 205748  5599/5295/315    7328/1305    31  148   55.89)
(smt.stats   29   3671  89504 217433  5626/5324/315    7533/1306    31  148   55.89)
ramon: poll                 wall=9.016s usage=8.546s mem=58396KiB load=0.96 rootload=0.95
(smt.stats   30   3793  91755 226377  5690/5343/316    7744/1338    32  155   55.99)
(sat.ddfw       1      1   13.6713    920001      4509         13            1       93)
(smt.stats   31   3927  94240 236519  5875/5460/316    8262/1339    32  155   56.31)
(smt.stats   32   4074  97776 246438  5899/5580/319    8603/1414    33  163   56.34)
ramon: poll                 wall=10.000s usage=9.504s mem=58688KiB load=0.97 rootload=0.98
(smt.stats   33   4235 102191 257318  6037/5630/319    8793/1414    33  163   56.44)
(smt.stats   34   4412 107581 292244  6158/5773/319    9151/1442    34  168   56.44)
(smt.stats   35   4606 109579 308045  6240/5869/319    9493/1444    34  168   56.64)
(sat.ddfw       1      1   12.8535   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.592s mem=58768KiB load=1.09 rootload=1.09
(smt.stats   36   4707 110895 312787  6321/5936/320    9617/1500    35  172   56.74)
ramon: poll                 wall=12.000s usage=11.591s mem=58876KiB load=1.00 rootload=1.00
(smt.stats   37   4818 111990 316507  6659/6155/320    9769/1500    35  172   56.74)
(smt.stats   38   4940 113429 334104  6728/6391/320    9929/1502    35  172   56.74)
(sat.ddfw       1      1   12.1163   1210001      5931         15            1      123)
(smt.delete-inactive-clauses  :num-deleted-clauses 136)
(smt.stats   39   5074 117275 342090  6733/6423/320   10090/1502    35  172   56.83)
(smt.stats   40   5221 124420 360472  6780/6434/320   10560/1504    35  172   56.83)
ramon: poll                 wall=13.000s usage=12.588s mem=59128KiB load=1.00 rootload=1.00
(smt.stats   41   5382 136007 395311  6873/6482/320   11216/1507    35  172   57.02)
(smt.stats   42   5559 140855 413426  6922/6584/320   11894/1507    35  172   57.27)
(smt.stats   43   5753 147525 444157  6993/6682/321   12434/1767    36  173   57.38)
ramon: poll                 wall=14.000s usage=13.591s mem=59936KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.4515   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5966 155693 478112  7035/6700/321   12879/1767    36  173   57.48)
(smt.stats   45   6067 157660 488347  7070/6735/321   13155/1768    36  173   57.48)
(smt.stats   46   6178 165746 509654  7100/6763/321   13337/1768    36  173   57.48)
(smt.stats   47   6300 173419 535380  7201/6808/322   13806/1876    37  174   57.57)
ramon: poll                 wall=15.000s usage=14.591s mem=59812KiB load=1.00 rootload=1.00
(smt.stats   48   6434 178472 557718  7297/6989/324   14208/1978    38  180   57.67)
(sat.ddfw       1      1   10.8605   1540001      7549         17            1      156)
(smt.stats   49   6581 182130 564766  7426/6996/324   14420/1979    38  180   57.76)
ramon: poll                 wall=16.000s usage=15.591s mem=60252KiB load=1.00 rootload=1.00
(smt.stats   50   6742 188095 573864  7631/7189/324   14662/1981    38  180   57.76)
(smt.stats   51   6919 193046 584960  7748/7346/325   15119/1981    38  180   57.86)
ramon: poll                 wall=17.004s usage=16.690s mem=60404KiB load=1.09 rootload=1.10
(sat.ddfw       1      1   10.5097   1720001      8431         18            1      174)
(smt.stats   52   7113 200870 616549  7877/7445/327   15694/2027    39  182   58.05)
ramon: poll                 wall=18.000s usage=17.757s mem=60572KiB load=1.07 rootload=1.07
(smt.stats   53   7326 208944 648210  8064/7594/327   16100/2076    40  199   58.61)
(smt.stats   54   7560 218655 690758  8238/7796/327   16650/2077    40  199   58.61)
ramon: poll                 wall=19.000s usage=18.864s mem=60736KiB load=1.11 rootload=1.10
(sat.ddfw       1      1   9.99737   1910001      9362         19            1      193)
(smt.stats   55   7661 224786 714552  8309/7927/327   16876/2077    40  199   58.70)
(smt.stats   56   7772 227761 725476  8440/8015/327   17052/2077    40  199   58.70)
ramon: poll                 wall=20.000s usage=20.000s mem=61092KiB load=1.14 rootload=1.14
ramon: end                  Fri Nov  1 22:45:14 2024
ramon: root.execname        z3
ramon: root.utime           20.060s
ramon: root.stime           0.010s
ramon: group.total          20.082s
ramon: group.utime          20.066s
ramon: group.stime          0.016s
ramon: group.mempeak        61348KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              1.00
