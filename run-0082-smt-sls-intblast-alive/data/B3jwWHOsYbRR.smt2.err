ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:53:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29097 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/B3jwWHOsYbRR.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             680352
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   81.3008     10000        49          0            1        2)
(sat.ddfw       1      1   36.9041     20001        98          1            1        3)
(smt.stats    0    101   1429    167  1319/1159/101      94/6     7   15   52.04)
(smt.stats    1    202   4485   1070  1659/1462/103     218/12     8   17   52.04)
(smt.stats    2    313   7418   3161  1759/1524/103     340/21     8   17   52.14)
(sat.ddfw       1      1   36.9004     40001       196          2            1        5)
(smt.stats    3    414  10089   6462  1834/1662/105     454/59    10   20   52.24)
(smt.stats    4    528  10213   9180  1950/1784/106     459/85    11  108   52.33)
(smt.stats    5    650  11670  10784  2305/2081/106     593/85    11  108   52.43)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    751  13231  13305  2338/2135/108     686/97    12  114   52.65)
(smt.stats    7    862  14666  15622  2945/2692/113     777/99    13  133   52.74)
(sat.ddfw       1      1   34.1686     70001       343          3            1        8)
(smt.stats    8    984  16253  18337  2982/2698/113     903/100    13  133   52.74)
(smt.stats    9   1118  17200  21205  3011/2744/116    1039/103    14  134   52.74)
ramon: poll                 wall=1.003s usage=0.946s mem=54952KiB load=0.94 rootload=0.93
(smt.stats   10   1219  18459  23528  3031/2779/118    1130/120    16  140   52.85)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&54
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&1
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&1
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 56 := 1152921504606846974 << 1
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 56 := 1152921504606846974 << 1
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 56 := 1152921504606846974 << 1
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 3 := 3&238
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2 := 3&238
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 238 := 118 << 1
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 3 := 3&236
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2 := 3&236
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2 := 3&236
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&236
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 58 := 59 << 2
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&236
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 58 := 59 << 2
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2 := 3&236
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&236
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 58 := 59 << 2
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&236
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 58 := 59 << 2
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&576460752303423484
band: (band[59] (if (= #109 58) 1 (if #632 3 #798)) (shl[59] (bv2int %0) (+ 59 #801))) 1 := 3&576460752303423484
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2 := 3&576460752303423484
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 432345564227567615 := 432345564227567616 << 2
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&384307168202282324
band: (band[59] (if (= #109 58) 1 (if #632 3 #798)) (shl[59] (bv2int %0) (+ 59 #801))) 3 := 3&384307168202282324
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&384307168202282324
band: (band[59] (if (= #109 58) 1 (if #632 3 #798)) (shl[59] (bv2int %0) (+ 59 #801))) 2 := 3&384307168202282324
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2 := 3&60
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&576460752303423484
band: (band[59] (if (= #109 58) 1 (if #632 3 #798)) (shl[59] (bv2int %0) (+ 59 #801))) 2 := 3&576460752303423484
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 3&576460752303423484
band: (band[59] (if (= #109 58) 1 (if #632 3 #798)) (shl[59] (bv2int %0) (+ 59 #801))) 1 := 3&576460752303423484
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 1 := 3&576460752303423484
(smt.stats   11   1330  20583  27551  3119/2860/185    1229/123    18  159   53.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  23529  31286  3157/2894/186    1369/122    19  162   53.29)
(smt.stats   13   1586  26901  33840  3178/2906/189    1511/128    20  164   53.29)
(sat.ddfw       1      1   30.1432    110001       539          4            1       12)
(smt.stats   14   1733  28658  36855  3253/2964/196    1690/129    20  164   53.29)
(smt.stats   15   1834  29541  38996  3268/2993/196    1785/151    21  174   53.29)
(smt.stats   16   1945  32409  42859  3283/3011/201    1878/148    22  187   53.48)
(smt.stats   17   2067  35916  46324  3290/3023/201    1999/148    22  187   53.48)
(smt.stats   18   2201  39914  51067  3297/3030/201    2129/148    22  187   53.69)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4 := 65535&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 4 := 2 << 15
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4 := 65535&44
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4 := 65535&44
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4 := 65535&44
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 64 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 128 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 256 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 512 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 1024 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2048 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4096 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 8192 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16384 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32768 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32768 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32768 := 65535&1125899906842624
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32768 := 65535&32768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 32768 := 16384 << 15
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32768 := 65535&288230376151711744
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32768 := 65535&288230376151744512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 288230376151744512 := 144115188075872256 << 15
(smt.stats   19   2348  42065  55232  3380/3111/276    2308/187    24  219   54.11)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 0 := 2 << 16
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 0 := 2 << 16
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 131071&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 0 := 2 << 16
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 131071&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 3 := 140737488355328 << 17
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 131071&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 3 := 140737488355328 << 17
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 131071&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 3 := 140737488355328 << 17
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 131071&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 43 := 140737488355328 << 17
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 131071&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 43 := 140737488355328 << 17
(smt.stats   20   2509  47413  59177  3443/3168/291    2475/197    25  233   54.11)
(sat.ddfw       1      1   26.4126    160000       784          5            1       17)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16384 := 65535&65536
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16384 := 65535&65536
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16384 := 65535&65536
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16384 := 65535&65536
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32 := 65535&196608
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 64 := 65535&196608
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 128 := 65535&196608
(smt.stats   21   2610  50140  62416  3523/3194/292    2605/234    26  233   54.21)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 128 := 65535&3377802803019776
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32 := 65535&3377802803019776
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32 := 65535&3377802803019776
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32 := 65535&3377802803019776
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 32 := 65535&3377802803019776
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 64 := 65535&3377802803019776
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 64 := 65535&3377802803019776
ramon: poll                 wall=2.000s usage=1.942s mem=57044KiB load=1.00 rootload=0.99
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 64 := 65535&3377802803019776
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 1024 := 65535&3377802803150848
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 1024 := 65535&3377802803150848
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2048 := 65535&3377802803150848
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2048 := 65535&3940769937031168
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2048 := 65535&3940769937031168
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2048 := 65535&4503737070845952
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2048 := 65535&3940769937031168
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 2048 := 65535&3940769937031168
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4096 := 65535&5066704204988416
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4096 := 65535&5066704204988416
(smt.stats   22   2721  51560  68273  3698/3286/333    2755/260    27  242   54.69)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4096 := 65535&4503771433533440
(sat.ddfw       1      1    23.374    220001      1078          6            1       23)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16 := 65535&143835907860725760
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16 := 65535&143835907860725760
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 65535&143835907860725760
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 0 := 143835907860922876 << 16
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 65535&143835907860725760
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 0 := 143835907860922876 << 16
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 65535&143835907860725760
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 0 := 143835907860922876 << 16
(smt.stats   23   2843  52991  74740  3951/3422/343    2887/267    27  242   54.99)
(smt.stats   24   2977  57153  80654  3971/3686/353    3038/289    28  246   54.99)
(smt.stats   25   3124  66280  93257  3991/3709/353    3311/293    29  246   55.20)
ramon: poll                 wall=3.000s usage=2.944s mem=57392KiB load=1.00 rootload=1.00
(smt.stats   26   3285  77100 107993  4000/3718/353    3469/293    29  246   55.20)
(smt.stats   27   3462  85712 122053  4006/3724/353    3734/293    29  246   55.30)
(smt.stats   28   3563  91521 135230  4006/3724/353    3840/293    29  246   55.30)
(sat.ddfw       1      1   20.8644    290001      1421          7            1       30)
(smt.stats   29   3674 100176 153261  4006/3724/353    3951/293    29  246   55.50)
(smt.stats   30   3796 107396 177178  4006/3724/353    4079/293    29  246   55.50)
(smt.stats   31   3930 112926 197995  4011/3729/353    4221/293    29  246   55.50)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077 124012 222323  4011/3729/353    4371/293    29  246   55.50)
ramon: poll                 wall=4.000s usage=3.887s mem=57772KiB load=0.94 rootload=0.95
(smt.stats   33   4238 135067 251767  4011/3729/353    4532/293    29  246   55.79)
(smt.stats   34   4415 146914 279859  4014/3732/353    4771/293    29  246   56.04)
(sat.ddfw       1      1    18.797    370001      1813          8            1       38)
(smt.stats   35   4609 155919 302226  4015/3733/353    5063/293    29  246   56.04)
(smt.stats   36   4710 163040 317016  4016/3734/353    5171/293    29  246   56.04)
(smt.stats   37   4821 170961 336100  4016/3734/353    5282/293    29  246   56.04)
(smt.stats   38   4943 178491 354291  4018/3736/353    5402/293    29  246   56.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 113)
ramon: poll                 wall=5.000s usage=4.768s mem=58500KiB load=0.88 rootload=0.88
(smt.stats   39   5077 182462 368999  4019/3737/355    5442/605    30  254   56.14)
(smt.stats   40   5224 190130 392570  4075/3779/355    5613/605    30  254   56.24)
(smt.stats   41   5385 200836 431566  4091/3791/360    5779/637    31  259   56.24)
(sat.ddfw       1      1   16.5776    460001      2254          9            1       47)
(smt.stats   42   5562 204261 445251  4100/3800/362    5961/643    32  260   56.24)
(smt.stats   43   5756 215253 480299  4100/3800/362    6155/643    32  260   56.70)
(smt.stats   44   5969 221958 502549  4104/3804/362    6375/646    33  263   56.70)
ramon: poll                 wall=6.000s usage=5.710s mem=58776KiB load=0.94 rootload=0.94
(smt.stats   45   6070 225099 513839  4105/3805/362    6481/646    33  263   56.79)
(smt.stats   46   6181 232076 535765  4106/3806/362    6608/646    33  263   56.79)
(smt.stats   47   6303 239687 560386  4106/3806/362    6730/646    33  263   56.79)
(smt.stats   48   6437 246531 582754  4107/3807/362    6878/646    33  263   56.79)
(smt.stats   49   6584 252840 597161  4107/3807/362    7060/646    33  263   56.79)
(sat.ddfw       1      1    14.912    560001      2745         10            1       57)
(smt.stats   50   6745 260949 619773  4107/3807/362    7227/646    33  263   56.79)
ramon: poll                 wall=7.003s usage=6.673s mem=59148KiB load=0.96 rootload=0.96
(smt.stats   51   6922 269234 645798  4112/3812/362    7449/646    33  263   56.79)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7116 274499 656333  4239/3814/362    7666/659    33  263   56.89)
(sat.ddfw       1      1   13.8295    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.682s mem=59476KiB load=1.01 rootload=1.01
ramon: poll                 wall=9.000s usage=8.635s mem=59644KiB load=0.95 rootload=0.95
(sat.ddfw       1      1    12.785    790001      3872         12            1       80)
(smt.stats   53   7329 275285 658233  4533/3943/362    7908/666    33  263   57.41)
ramon: poll                 wall=10.000s usage=9.590s mem=59900KiB load=0.96 rootload=0.96
(smt.stats   54   7563 278081 668314  5081/4693/362    8244/670    33  263   57.41)
(smt.stats   55   7664 281727 681514  5124/4784/363    8397/876    34  266   57.50)
(smt.stats   56   7775 285899 697776  5148/4841/363    8514/876    34  266   57.50)
(smt.stats   57   7897 289593 717987  5161/4854/363    8649/876    34  266   57.50)
(smt.stats   58   8031 292416 733471  5185/4881/363    8823/876    34  266   57.50)
(smt.stats   59   8178 295174 754277  5194/4886/365    8980/965    35  268   57.50)
ramon: poll                 wall=11.003s usage=10.546s mem=60056KiB load=0.95 rootload=0.96
(sat.ddfw       1      1   11.8203    920001      4509         13            1       93)
(smt.stats   60   8339 302333 793528  5234/4908/365    9165/965    35  268   57.60)
(smt.stats   61   8516 308411 816214  5303/4993/368    9423/1033    36  280   57.79)
ramon: poll                 wall=12.003s usage=11.482s mem=60064KiB load=0.94 rootload=0.93
(smt.stats   62   8710 314438 838368  5326/5003/368    9684/1033    36  280   58.31)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 4 := 7&1125899906973699
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 5 := 7&1125899906842627
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 5 := 7&1125899906908161
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 5 := 7&1125899907039233
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 5 := 7&1125899907104769
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 1 := 7&1125899906973697
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 1125899906973697 := 562949953421312 << 2
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 1 := 7&1125899907039233
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 1125899907039233 := 562949953421312 << 2
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 1 := 7&1125899907104769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 1125899907104769 := 562949953421312 << 2
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 1 := 7&1125899907104769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #881 #885) 64)) 1125899907104769 := 562949953421312 << 2
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8923 318235 851785  5605/5028/368   10118/1050    36  280   58.59)
(smt.stats   64   9157 328769 884178  5624/5309/379   10454/1154    37  282   58.59)
(sat.ddfw       1      1   11.0926   1060001      5196         14            1      108)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 8 := 288230376151711712&143835907861930114
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 16 := 288230376151711712&143835907861921794
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 256 := 288230376151711712&143835907861921794
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 256 := 288230376151711712&143835907861856258
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 256 := 288230376151711712&143835907861858178
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 256 := 288230376151711712&143835907861889282
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 82176 := 288230376151711712&143835907861889794
(smt.stats   65   9414 332445 904414  6014/5315/379   10968/1201    38  286   58.88)
ramon: poll                 wall=13.000s usage=12.479s mem=60996KiB load=1.00 rootload=1.00
(smt.stats   66   9515 335366 910374  6086/5765/401   11251/1201    38  286   58.97)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860996224
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860996224
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860996224
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860996224
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860996096
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860996096
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860996096
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860996096
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860988416
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860988416
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860988416
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 0 := 576460752303423425&143835907860989440
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 512 := 576460752303423425&143835907860989440
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 512 := 576460752303423425&143835907860989440
(smt.stats   67   9626 340210 930902  6198/5765/401   11799/1207    38  286   58.97)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 329233 := 576460752303423425&143835907860987977
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 329233 := 576460752303423425&143835907860987977
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 329233 := 576460752303423425&143835907860987977
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 329281 := 576460752303423425&143835907860987977
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 140289 := 576460752303423425&143835907860987971
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 140289 := 576460752303423425&143835907860987971
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 140353 := 576460752303423425&143835907860987971
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 139329 := 576460752303423425&143835907860987971
(smt.stats   68   9748 343128 947319  6442/5903/427   12343/1625    39  300   59.17)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 139329 := 576460752303423425&1125899907752005
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 139329 := 576460752303423425&1125899907723333
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 110657 := 576460752303423425&1125899907723333
(smt.stats   69   9882 345979 964596  6869/6136/432   12802/1630    39  300   59.26)
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 110657 := 576460752303423425&1125899907739717
band: (band[59] (if (= #415 63) 1 (if #609 3 #874)) (shl[64] (* 2 #398) (mod #889 64))) 110657 := 576460752303423425&1125899907739717
(smt.delete-inactive-clauses  :num-deleted-clauses 192)
ramon: poll                 wall=14.000s usage=13.481s mem=61700KiB load=1.00 rootload=1.00
(smt.stats   70  10029 350002 985980  7007/6685/445   13673/1821    40  302   59.46)
(sat.ddfw       1      1   10.4793   1210001      5931         15            1      123)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   71  10190 362325 1059519  7014/6694/449   14137/2281    41  311   59.55)
(smt.stats   72  10367 375903 1143864  7028/6696/450   14669/2412    42  320   59.55)
ramon: poll                 wall=15.000s usage=14.533s mem=61636KiB load=1.05 rootload=1.05
(smt.stats   73  10561 384150 1190742  7158/6715/450   15571/2416    42  320   59.74)
(sat.ddfw       1      1   10.0826   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=15.602s mem=62312KiB load=1.07 rootload=1.07
ramon: poll                 wall=17.000s usage=16.601s mem=62084KiB load=1.00 rootload=1.00
(smt.stats   74  10774 387444 1213106  7514/6846/450   16182/2421    42  320   59.93)
(smt.stats   75  11008 392738 1240480  7568/7241/451   16616/3036    43  321   59.93)
(sat.ddfw       1      1   9.56184   1540001      7549         17            1      156)
ramon: poll                 wall=18.000s usage=17.603s mem=62176KiB load=1.00 rootload=1.00
(smt.stats   76  11265 402902 1300486  7647/7252/451   17095/3036    43  321   60.12)
(smt.stats   77  11547 416011 1376159  7652/7332/453   17495/3266    44  324   60.12)
ramon: poll                 wall=19.000s usage=18.545s mem=62920KiB load=0.94 rootload=0.94
(smt.stats   78  11648 418734 1396096  7656/7336/453   17726/3266    44  324   60.22)
(smt.stats   79  11759 421769 1412707  7699/7340/453   17887/3266    44  324   60.22)
(sat.ddfw       1      1   9.06755   1720001      8431         18            1      174)
ramon: poll                 wall=20.000s usage=19.528s mem=63432KiB load=0.98 rootload=0.98
ramon: end                  Fri Nov  1 21:54:14 2024
ramon: root.execname        z3
ramon: root.utime           19.520s
ramon: root.stime           0.020s
ramon: group.total          19.546s
ramon: group.utime          19.526s
ramon: group.stime          0.020s
ramon: group.mempeak        63436KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              0.98
