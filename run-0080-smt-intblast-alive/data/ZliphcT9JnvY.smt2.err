ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:37:28 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25272 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ZliphcT9JnvY.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             81377
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1721    519  1097/981/102      86/8     9   21   18.99)
(smt.stats    1    204   2787   1188  1343/1209/106     184/23    12   25   19.08)
(smt.stats    2    315   4437   2279  1398/1262/119     290/28    14   36   19.08)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 222&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 222 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 118648471552&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 1 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 118648471552&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 118648471552 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 222&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 222 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 222&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 222 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 222&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 222 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 222&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 222 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 222&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 222 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 118648471552&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 118648471553&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 118648471553 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 118648471552&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 222 := 221 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 118648471552&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 118648471551 := 221 << 29
(smt.stats    3    416   5285   3556  1490/1348/156     382/42    17   43   19.18)
(smt.stats    4    527   6326   4608  1527/1381/160     269/62    18  268   19.37)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 3 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 3 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 3 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 4 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 4 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 4 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 31 << 31
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 29&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 29 := 30 << 30
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 45 << 45
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 44 << 44
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 31&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 31 := 32 << 32
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 33 << 33
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 35&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 35 := 36 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 38 << 38
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 36&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 36 := 37 << 37
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 35 << 35
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 34 << 34
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 45&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 45 := 46 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 45&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 45 := 46 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 43 << 43
(smt.stats    5    650   7304   5915  1615/1449/227     383/70    21  290   19.86)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 41&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 41 := 42 << 42
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 41 << 41
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 40 << 40
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 39 << 39
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 6&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 6 := 7 << 7
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 8 << 8
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 8&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 8 := 9 << 9
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 5 := 6 << 6
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 11 << 11
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 11 << 11
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 11&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 11 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 11&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 11 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 9&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 9 := 10 << 10
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 28 << 28
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 22&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 22 := 23 << 23
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 24&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 24 := 25 << 25
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 26 << 26
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 27 << 27
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 23&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 23 := 24 << 24
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 21&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 21 := 22 << 22
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas       :deletions     )
(smt.stats    6    751   8260   7187  1864/1638/263     480/75    23  300   20.64)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 20&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 20 := 21 << 21
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 20&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 20 := 21 << 21
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 20 << 20
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 19 << 19
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 17&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 17 := 18 << 18
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 17 << 17
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 17 << 17
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 17 << 17
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 17 << 17
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 17 << 17
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 17 << 17
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 16&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 16 := 17 << 17
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 16 << 16
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 14&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 14 := 15 << 15
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 14 << 14
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 12&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 12 := 13 << 13
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 15 << 15
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 15 << 15
(smt.stats    7    862  10157   9858  2125/1935/400     545/77    29  362   20.83)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 32769&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 32769 := 16 << 16
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 32769&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 32769 := 16 << 16
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 753663&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 753663 := 23 << 23
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 720895&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 720895 := 22 << 22
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 45057&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 45057 := 22 << 22
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 40961&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 40961 := 20 << 20
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 40961&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 40961 := 20 << 20
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 589823&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 589823 := 18 << 18
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 786431&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 786431 := 24 << 24
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 51201&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 51201 := 25 << 25
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 819199&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 819199 := 25 << 25
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 851967&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 851967 := 26 << 26
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 57345&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 57345 := 28 << 28
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 917503&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 917503 := 28 << 28
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 884735&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 884735 := 27 << 27
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 61441&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 61441 := 30 << 30
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 983039&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 983039 := 30 << 30
(smt.stats    8    985  12272  12461  2303/2076/403     650/88    31  366   21.20)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 65537&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 65537 := 32 << 32
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1048575&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1048575 := 32 << 32
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1081343&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1081343 := 33 << 33
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1245183&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1245183 := 38 << 38
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 77825&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 77825 := 38 << 38
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1277951&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1277951 := 39 << 39
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1277951&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1277951 := 39 << 39
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 90113&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 90113 := 44 << 44
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1441791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1441791 := 44 << 44
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1474559&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1474559 := 45 << 45
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 92161&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 92161 := 45 << 45
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 88065&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 88065 := 43 << 43
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1409023&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1409023 := 43 << 43
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1376255&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1376255 := 42 << 42
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1376255&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1376255 := 42 << 42
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 94209&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 94209 := 46 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1507327&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1507327 := 46 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1540095&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1540095 := 47 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 367&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 367 := 46 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 45 << 45
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 1343487&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1343487 := 41 << 41
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 1 << 1
(smt.stats    9   1126  15358  17430  2360/2134/409     786/119    34  384   21.39)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 6 << 6
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 6 << 6
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 7 << 7
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 11 << 11
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 11 << 11
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 13 << 13
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 13 << 13
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 40 << 40
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 14 << 14
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 14 << 14
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 16 << 16
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 25 << 25
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 32 << 32
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 33 << 33
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 38 << 38
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 37 << 37
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 37 << 37
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 36 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 36 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 35 << 35
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 34 << 34
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 34 << 34
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 31 << 31
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 31 << 31
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 24 << 24
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 22 << 22
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 20 << 20
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 19 << 19
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 19 << 19
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 10 << 10
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 10 << 10
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 18 << 18
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 8 << 8
(smt.stats   10   1227  18150  20978  2446/2158/414     882/137    35  385   21.39)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 8 << 8
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 9 << 9
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 0 := 9 << 9
(smt.stats   11   1338  23919  24228  2482/2237/415     978/141    36  385   21.81)
ramon: poll                 wall=1.000s usage=0.935s mem=23244KiB load=0.93 rootload=0.91
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1461  28021  27467  2607/2363/423    1086/174    39  405   22.37)
ramon: poll                 wall=2.000s usage=1.935s mem=23920KiB load=1.00 rootload=1.00
(smt.stats   13   1595  34056  30847  2728/2373/431    1232/184    40  412   22.75)
ramon: poll                 wall=3.000s usage=2.934s mem=24140KiB load=1.00 rootload=1.00
(smt.stats   14   1742  37543  32898  2867/2531/431    1381/219    41  412   22.94)
ramon: poll                 wall=4.000s usage=3.933s mem=24348KiB load=1.00 rootload=0.99
(smt.stats   15   1843  38386  33841  3074/2723/431    1479/235    41  412   23.03)
ramon: poll                 wall=5.000s usage=4.933s mem=24420KiB load=1.00 rootload=1.00
(smt.stats   16   1954  41797  37626  3175/2926/436    1566/246    42  426   23.03)
(smt.stats   17   2076  47906  43903  3233/2984/445    1663/243    43  436   23.13)
(smt.stats   18   2210  53233  52677  3240/2997/445    1797/243    43  436   23.13)
(smt.stats   19   2357  55917  56806  3253/3008/445    1941/243    43  436   23.13)
(smt.stats   20   2518  59802  61195  3271/3032/445    2097/243    43  436   23.13)
(smt.stats   21   2619  63974  65527  3273/3032/445    2198/243    43  436   23.37)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 1 := 36284970109007 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 1 := 36284970109007 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 35734127969281 := 36284970109007 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 35734127969281 := 36284970109007 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 35734127969281 := 36284970109007 << 47
(smt.stats   22   2730  67427  72896  3327/3087/453    2302/247    44  444   23.37)
ramon: poll                 wall=6.000s usage=5.933s mem=24808KiB load=1.00 rootload=1.00
(smt.stats   23   2852  72045  75611  3332/3089/454    2422/248    44  444   23.56)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 6632503771136&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 577030334760615936 := 36284970108929 << 17
(smt.stats   24   2986  77768  79786  3370/3130/455    2533/248    46  449   23.56)
(smt.stats   25   3133  83749  86196  3375/3135/455    2675/248    46  449   24.02)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 36325759647745 := 36284970109006 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 36325759647745 := 36284970109006 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 36284970109006 << 46
(smt.stats   26   3294  90686  91619  3389/3137/455    2835/248    46  449   24.12)
(smt.stats   27   3471  98050  98044  3424/3173/463    2997/250    48  454   24.21)
(smt.stats   28   3572 103865 101717  3465/3187/463    3103/258    48  454   24.41)
ramon: poll                 wall=7.000s usage=6.932s mem=25900KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.931s mem=26024KiB load=1.00 rootload=1.00
(smt.stats   29   3683 110670 107932  3621/3249/463    3219/268    48  454   24.40)
ramon: poll                 wall=9.000s usage=8.931s mem=26076KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.931s mem=26236KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.931s mem=26236KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.930s mem=26236KiB load=1.00 rootload=1.00
(smt.stats   30   3805 114460 110755  3901/3420/463    3337/274    48  454   24.60)
ramon: poll                 wall=13.000s usage=12.929s mem=26240KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.929s mem=26244KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.929s mem=26244KiB load=1.00 rootload=1.00
(smt.stats   31   3939 118073 115499  4123/3765/463    3459/281    48  454   24.60)
ramon: poll                 wall=16.000s usage=15.928s mem=26256KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4086 121448 119382  4295/3897/464    3594/304    49  458   24.69)
ramon: poll                 wall=17.000s usage=16.927s mem=26320KiB load=1.00 rootload=0.99
(smt.stats   33   4247 124570 121987  4532/4134/464    3750/312    49  458   24.79)
ramon: poll                 wall=18.000s usage=17.927s mem=26504KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.927s mem=26576KiB load=1.00 rootload=1.00
(smt.stats   34   4424 132164 130439  4788/4546/473    3911/333    51  467   24.88)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 35734127939942&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 317209104650598 := 35734127939761 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #848 #849 #850 #851 #852 #853 #854 #855 #856 #857 #858 #859 #860 #861 #862 #863 ...) 0 (if #896 1 #926))) 0 := 35734127939942&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 317209104650598 := 35734127939761 << 1
(smt.stats   35   4618 142988 140050  4871/4629/474    4087/350    52  469   24.98)
ramon: poll                 wall=20.003s usage=19.927s mem=26848KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:37:48 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.992s
ramon: group.utime          19.964s
ramon: group.stime          0.028s
ramon: group.mempeak        28936KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
