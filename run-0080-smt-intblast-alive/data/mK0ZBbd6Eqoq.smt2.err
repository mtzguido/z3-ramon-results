ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:56:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24817 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mK0ZBbd6Eqoq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             143969
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1 := 5527&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1 := 4 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&1
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&1
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&1
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&2
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&4
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&1
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&2
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&2
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&4
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&1
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 2305843009213693950 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&1152921504606846971
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 2305843009213693950 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 2305843009213693950 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 2305843009213693950 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 1152921504606846978 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 1152921504606846978 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 1 := 576601489791778816 << 13
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 1152921504606846978 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 1 := 576601489791778816 << 13
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 1152921504606846978 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 1 := 576601489791778816 << 13
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606846976 := 1152921504606846978 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 1 := 576601489791778816 << 13
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&1
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&2
(smt.stats    0    101   2353    500  1337/1189/116      94/9     5   20   19.27)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606847008 := 1152921504606847010 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 32 := 1152640029630136354 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&24
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&24
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&24
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&24
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&24
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 16 := 5527&24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606847000 := 1153202979583557634 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 16 := 5527&24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606847000 := 1153202979583557634 << 12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 1 := 576601489791778816 << 13
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 5527&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 1150810442281517055 := 1150810442281517056 << 13
(smt.stats    1    202   5028   1146  1697/1532/147     206/22     6   27   19.36)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 23184672862&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 0 := 1157425104234217472 << 34
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 23184672862&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 0 := 1157425104234217472 << 34
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 23184672862&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 578712552117108737 := 578712552117108736 << 35
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 23184672862&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 578712552117108737 := 578712552117108736 << 35
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 23184672862&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 578712552117108737 := 578712552117108736 << 35
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 23184672862&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 1152921504606846975 := 583216151744479232 << 35
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 23184672862&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 1152921504606846975 := 583216151744479232 << 35
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 23184672862&0
shl: (shl[60] (bv2int %1) (+ 60 (* 1152921504606846975 #105))) 583216151744479233 := 583216151744479232 << 35
(smt.stats    2    313   8480   2635  1899/1713/160     327/32     8   34   19.56)
(smt.stats    3    414  11501   3761  2191/1963/161     431/50     9   37   19.84)
(smt.stats    4    525  15928   5723  2280/2045/168     556/73    11   51   19.96)
(smt.stats    5    647  19977   7771  2448/2203/171     684/93    12   51   20.06)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  24226  11648  2734/2460/171     784/97    13   54   20.06)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 11 := 759715360365506&12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 10 := 759715360365506&12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 8 := 759715360365506&12
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 759715360365506&12
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 12 := 12 << 49
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 759715360365506&12
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 12 := 12 << 49
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 759715360365506&12
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 12 := 12 << 49
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 759715360365506&12
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 12 := 14 << 49
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 759715360365506&12
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 12 := 14 << 49
(smt.stats    7    859  26220  13286  2921/2549/177     914/105    14   56   20.16)
(smt.stats    8    981  27065  15249  3180/2888/182    1060/119    15   58   20.45)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 48621783063392426&45
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 48621783063392426&301
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 48621783063392426&301
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 48621783063392426&333
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 8 := 48621783063392426&333
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606847309 := 563019880873988 << 55
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 48621783063392426&397
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 8 := 48621783063392426&397
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 48621783063392426&397
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 8 := 48621783063392426&397
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 48621783063392426&281509370011661
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 8 := 48621783063392426&281509370011661
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 16 := 48621783063392426&281509370011725
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 24 := 48621783063392426&281509370011725
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 16392 := 48621783063392426&281509370011757
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 24 := 48621783063392426&281509370011789
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 47 := 48621783063392426&281509370011789
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 46 := 48621783063392426&281509370011789
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 44 := 48621783063392426&281509370011789
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 40 := 48621783063392426&281509370011789
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 72 := 48621783063392426&281509370011789
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 136 := 48621783063392426&281509370011789
(smt.stats    9   1115  29245  18857  3481/3205/253    1244/147    17   94   20.84)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 344 := 48621783063392426&281509370011781
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 344 := 48621783063392426&281509370011789
(smt.stats   10   1216  31859  26382  3620/3261/253    1495/151    17   94   20.84)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 408 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 400 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 400 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 400 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 400 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 400 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 400 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 464 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 848 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2640 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2640 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2640 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 3088 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 592 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 592 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 592 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 592 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&759717773181021
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&17437
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&15837
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&15837
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&1117
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606848093 := 563019947968514 << 21
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&33885
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606880861 := 563019947968514 << 21
(smt.stats   11   1327  35618  33368  3843/3553/316    1760/236    19  107   21.03)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1104 := 2830160&17501
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606864477 := 563019947968514 << 21
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  37035  37729  4157/3878/320    2114/413    21  124   21.13)
ramon: poll                 wall=1.000s usage=1.000s mem=22476KiB load=1.00 rootload=0.97
(smt.stats   13   1583  42675  45805  4217/3919/322    2289/459    22  134   21.23)
(smt.stats   14   1730  48625  56905  4229/3947/322    2486/459    22  134   21.32)
(smt.stats   15   1831  51886  70225  4239/3957/323    2589/488    23  136   21.44)
(smt.stats   16   1942  54717  77919  4279/4000/325    3002/578    24  138   21.54)
(smt.stats   17   2064  59434  89480  4307/4002/325    3303/580    24  138   21.82)
(smt.stats   18   2198  63191 102235  4355/4064/326    3614/678    25  140   21.82)
(smt.stats   19   2345  68050 113267  4396/4108/326    3779/773    26  144   21.82)
(smt.stats   20   2506  72967 126256  4411/4132/328    4034/793    27  150   21.82)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 128 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 128 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 130 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 512 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 512 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 512 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 514 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 768 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 770 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 770 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 770 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 770 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 770 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 770 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 1282 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16259
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&18311
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&18311
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&18327
(smt.stats   21   2607  75510 136325  4573/4185/334    4270/892    28  156   21.92)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16775
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2306 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 258 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 258 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 258 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 258 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 258 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 258 := 88442&16647
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 16642 := 88442&16647
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606863623 := 281510477301760 << 16
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 16642 := 88442&16647
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 1152921504606863623 := 281510477301760 << 16
(smt.stats   22   2718  78414 145745  4685/4355/376    4452/972    29  164   22.01)
(smt.stats   23   2840  81987 160630  4752/4459/392    4597/991    30  168   22.11)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   24   2974  84460 168624  4791/4510/394    5123/1138    32  174   22.11)
(smt.stats   25   3121  90112 181448  4875/4511/394    5293/1145    32  174   22.21)
ramon: poll                 wall=2.000s usage=1.999s mem=23552KiB load=1.00 rootload=1.00
(smt.stats   26   3284  94515 199472  4943/4651/396    5489/1281    33  178   22.31)
(smt.stats   27   3461  99703 213948  5013/4673/396    5816/1291    33  178   22.31)
(smt.stats   28   3562 105841 226153  5029/4748/397    6027/1380    34  183   22.59)
(smt.stats   29   3673 111559 247286  5053/4772/399    6229/1551    35  185   22.59)
(smt.stats   30   3795 113487 253158  5289/4772/399    6418/1558    35  185   22.78)
(smt.stats   31   3929 115907 262014  5458/5024/399    6628/1558    35  185   22.78)
(smt.stats   32   4076 120002 272874  5629/5200/400    7001/1660    36  192   22.99)
ramon: poll                 wall=3.000s usage=2.998s mem=24304KiB load=1.00 rootload=0.99
(smt.stats   33   4237 124470 284291  5862/5432/400    7305/1661    36  192   23.09)
(smt.stats   34   4414 128767 300671  6075/5571/401    7724/1850    37  196   23.29)
(smt.stats   35   4608 136162 321849  6268/5943/401    8100/1850    37  196   23.48)
(smt.stats   36   4709 139957 339209  6331/6017/402    8501/2207    38  201   23.39)
(smt.stats   37   4820 142692 353635  6421/6050/402    8748/2211    38  201   23.48)
(smt.stats   38   4942 145506 372392  6588/6166/402    9051/2220    38  201   23.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 16)
(smt.stats   39   5076 150239 389644  6652/6339/402    9423/2222    38  201   23.48)
(smt.stats   40   5223 154141 404641  6670/6355/402    9577/2222    38  201   23.58)
ramon: poll                 wall=4.000s usage=3.998s mem=24904KiB load=1.00 rootload=1.00
(smt.stats   41   5384 158676 426190  6995/6372/402   10145/2228    38  201   23.68)
(smt.stats   42   5561 162454 444056  7132/6752/402   10508/2231    38  201   23.77)
(smt.stats   43   5755 169524 481887  7147/6836/402   10814/2231    38  201   23.77)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5968 178533 528387  7210/6907/403   11291/2943    39  205   23.88)
(smt.stats   45   6069 179580 541774  7217/6914/403   11569/2943    39  205   23.88)
(smt.stats   46   6180 180561 553162  7222/6919/403   11689/2943    39  205   23.88)
(smt.stats   47   6302 183737 567227  7451/6924/403   11999/2945    39  205   23.98)
(smt.stats   48   6436 185696 578232  7909/7191/403   12346/2945    39  205   24.18)
ramon: poll                 wall=5.000s usage=4.997s mem=25576KiB load=1.00 rootload=1.00
(smt.stats   49   6583 188075 598832  7965/7660/406   12836/3215    40  218   24.18)
(smt.stats   50   6744 193063 619743  8009/7673/406   13088/3220    40  218   24.27)
(smt.stats   51   6921 195840 631058  8170/7718/406   13414/3237    40  218   24.37)
(smt.stats   52   7115 204135 675164  8197/7895/406   13852/3237    40  218   24.57)
(smt.stats   53   7328 211238 717417  8497/7951/410   14881/3706    41  223   24.85)
(smt.stats   54   7562 218402 746924  8738/8432/411   15411/4082    42  251   24.85)
ramon: poll                 wall=6.000s usage=5.997s mem=26432KiB load=1.00 rootload=1.00
(smt.stats   55   7663 227759 803035  8741/8439/411   15621/4178    43  252   24.85)
(smt.stats   56   7774 235066 833743  8749/8443/411   15888/4178    43  252   24.85)
(smt.stats   57   7896 240095 862486  8943/8452/411   16280/4181    43  252   24.95)
(smt.stats   58   8030 243347 878073  9094/8651/411   16625/4183    43  252   25.31)
(smt.stats   59   8177 247396 901405  9433/8821/411   16899/4185    43  252   25.31)
ramon: poll                 wall=7.000s usage=6.997s mem=26788KiB load=1.00 rootload=1.00
(smt.stats   60   8338 251170 928689  9709/9135/411   17312/4188    43  252   25.31)
(smt.stats   61   8515 255487 948391 10121/9489/411   17789/4191    43  252   25.41)
(smt.stats   62   8709 259098 972450 10380/9835/411   18544/4200    43  252   25.70)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8922 261361 980044 11230/10356/411   18762/4203    43  252   25.83)
ramon: poll                 wall=8.000s usage=7.997s mem=27652KiB load=1.00 rootload=1.00
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 4 := 777948529014278818&16385
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 4 := 777948529014278818&16385
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 4 := 777948529014278818&16385
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 3 := 777948529014278818&16385
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 2 := 777948529014278818&16385
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 777948529014278818&16385
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 4611686018427404289 := 1125935474540544 << 59
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 777948529014278818&16385
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 4611686018427404289 := 1125935407499266 << 59
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 777948529014278818&16385
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 4611686018427404289 := 1125935407499266 << 59
(smt.stats   64   9156 265926 1002971 11469/10943/412   19762/4916    44  254   26.02)
(smt.stats   65   9413 268079 1012260 11984/11678/423   20122/4920    44  254   26.11)
(smt.stats   66   9514 270503 1032289 11990/11684/423   20423/4920    44  254   26.21)
(smt.stats   67   9625 274461 1052658 12035/11691/423   20706/5129    45  263   26.21)
(smt.stats   68   9747 280305 1076383 12122/11735/424   20898/5130    45  263   26.21)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9881 285023 1089357 12291/11840/424   21115/5190    46  267   26.30)
(smt.delete-inactive-clauses  :num-deleted-clauses 32)
(smt.stats   70  10028 288673 1116023 12368/12032/424   21558/5191    46  267   26.40)
ramon: poll                 wall=9.000s usage=8.996s mem=28004KiB load=1.00 rootload=1.00
(smt.stats   71  10189 293946 1150145 12726/12088/424   21917/5199    46  267   26.49)
(smt.stats   72  10366 298522 1180816 13095/12439/424   22502/5202    46  267   26.69)
(smt.stats   73  10560 304808 1235170 13310/12882/424   23690/5203    46  267   26.78)
(smt.stats   74  10773 312230 1296170 13599/13030/424   24388/5209    46  267   26.88)
ramon: poll                 wall=10.003s usage=9.999s mem=28372KiB load=1.00 rootload=1.01
(smt.stats   75  11007 318607 1378227 13679/13341/424   25216/5211    46  267   26.88)
(smt.stats   76  11264 329954 1502846 13722/13405/424   26111/5211    46  267   27.07)
(smt.stats   77  11546 337432 1592118 13858/13548/426   26841/6541    47  269   27.17)
(smt.stats   78  11647 337882 1614798 13858/13548/426   26942/6541    47  269   27.17)
(smt.stats   79  11758 339742 1623238 13895/13548/426   27172/6598    48  274   27.26)
ramon: poll                 wall=11.000s usage=10.996s mem=28788KiB load=1.00 rootload=0.99
(smt.stats   80  11880 343736 1654559 14000/13660/426   27392/6599    48  274   27.40)
(smt.stats   81  12014 348747 1708190 14087/13757/426   27999/6600    48  274   27.49)
(smt.stats   82  12161 356498 1774860 14096/13786/426   28273/6600    48  274   27.49)
(smt.stats   83  12322 369216 1885403 14097/13787/426   28990/6600    48  274   27.49)
(smt.stats   84  12499 376487 1956128 14125/13815/426   29767/6600    48  274   27.59)
ramon: poll                 wall=12.000s usage=11.996s mem=29064KiB load=1.00 rootload=1.00
(smt.stats   85  12693 385897 2028965 14149/13829/426   30762/6602    48  274   27.68)
(smt.stats   86  12906 395629 2089877 14458/13846/426   31183/6609    48  274   27.78)
(smt.stats   87  13140 403645 2129493 14650/14173/428   32522/7664    49  291   27.97)
ramon: poll                 wall=13.000s usage=12.996s mem=29492KiB load=1.00 rootload=1.00
(smt.stats   88  13397 414408 2199790 15009/14692/429   33444/7921    50  304   28.07)
ramon: poll                 wall=14.003s usage=13.997s mem=29844KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   89  13679 423431 2249819 15269/14738/430   34233/7922    50  304   28.26)
(smt.stats   90  13989 431674 2343777 15521/14987/430   35097/8102    51  324   28.35)
(smt.stats   91  14090 436533 2371546 15534/15215/430   35293/8102    51  324   28.35)
ramon: poll                 wall=15.000s usage=14.994s mem=30056KiB load=1.00 rootload=1.00
(smt.stats   92  14201 441202 2401283 15640/15233/430   35506/8105    51  324   28.45)
(smt.stats   93  14324 446269 2447614 15669/15359/431   35644/8337    52  325   28.45)
(smt.stats   94  14458 448456 2487525 15670/15360/431   35907/8337    52  325   28.45)
(smt.stats   95  14605 449310 2513245 15674/15364/431   36140/8337    52  325   28.45)
(smt.stats   96  14766 452328 2533432 15994/15365/432   36761/8406    53  344   28.75)
ramon: poll                 wall=16.000s usage=15.993s mem=30472KiB load=1.00 rootload=1.00
(smt.stats   97  14943 455141 2556183 16515/15786/432   37335/8410    53  344   28.85)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
(smt.stats   98  15137 462666 2609220 16760/16252/432   38446/8417    53  344   28.95)
(smt.stats   99  15350 481046 2828640 16774/16464/432   38834/8417    53  344   29.43)
ramon: poll                 wall=17.000s usage=16.993s mem=31100KiB load=1.00 rootload=1.00
(smt.stats  100  15584 487483 2894093 17127/16482/432   40907/8429    53  344   29.71)
ramon: poll                 wall=18.000s usage=17.993s mem=31436KiB load=1.00 rootload=1.00
(smt.stats  101  15841 489493 2905068 17764/16876/432   41184/8444    53  344   29.96)
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 12155445765848106&356152796905406464
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 12155445765848106&356152796905406464
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 12155445765848106&356152796905406464
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 12155445765848106&356152796905406464
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 12155445765848106&356152796905406464
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 12155445765848106&356152796905406464
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 2763&356152796905406464
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 356152796905406464 := 630503983332556800 << 11
band: (band[60] (if (= #420 63) 1 (if #612 2 #879)) (shl[64] (* 2 #403) (mod #894 64))) 0 := 2763&356152796905406464
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 59 #886 #890) 64)) 356152796905406464 := 630503983332556800 << 11
(smt.stats  102  16123 497074 2962339 18075/17521/432   42538/8456    53  344   30.15)
ramon: poll                 wall=19.000s usage=18.993s mem=31904KiB load=1.00 rootload=1.00
(smt.stats  103  16433 505159 3024246 18503/17846/452   43197/9768    54  348   30.45)
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions     )
(smt.stats  104  16773 514160 3161994 18827/18473/453   44827/10228    56  348   30.74)
ramon: poll                 wall=20.000s usage=19.993s mem=32420KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:57:18 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          20.002s
ramon: group.utime          19.970s
ramon: group.stime          0.032s
ramon: group.mempeak        32680KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
