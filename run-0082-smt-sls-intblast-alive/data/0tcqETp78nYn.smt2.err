ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:28:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29845 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1372
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0tcqETp78nYn.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             589502
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   97.0874     10000        49          0            1        2)
(smt.stats    0    101   4591   2107  1290/1160/99      94/7     5   17   52.07)
(sat.ddfw       1      1   49.5099     20001        98          1            1        3)
(smt.stats    1    202   5217   2518  1934/1698/99     201/19     5   17   52.27)
(sat.ddfw       1      1    52.356     40001       196          2            1        5)
(smt.stats    2    313   6407   4558  2105/1874/101     317/26     6   18   52.37)
(smt.stats    3    414   7857   7151  2155/1966/108     416/50     9   24   52.37)
(smt.stats    4    525   8369   8983  2504/2013/109     526/95    10   27   52.47)
(smt.stats    5    647   9640  10694  2543/2292/109     641/95    10   27   52.47)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  10826  11696  2551/2328/109     748/95    10   27   52.58)
(smt.stats    7    859  13873  19561  2839/2342/109     858/123    10   27   52.67)
(sat.ddfw       1      1   45.3172     70001       343          3            1        8)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 1&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 1&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 576460752303423485&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 576460752303423484&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 576460752303423484&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 576460752303423484&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 576460752303423480&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 1&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 2&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 1&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 2&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 4&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 1&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 2&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 2&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 2 := 2&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 2 := 3 << 5
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 1&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 1 := 2 << 5
(smt.stats    8    981  15773  23743  2910/2657/164     967/142    12   43   52.87)
(smt.stats    9   1115  16859  26467  2961/2673/166    1093/148    13   46   52.87)
(smt.stats   10   1216  18028  28848  2990/2719/166    1148/144    14   93   52.97)
(smt.stats   11   1327  20091  33488  3044/2773/166    1286/144    14   93   53.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  22625  37412  3084/2805/173    1415/160    16   99   53.18)
ramon: poll                 wall=1.003s usage=1.022s mem=55452KiB load=1.02 rootload=1.02
(sat.ddfw       1      1   38.5728    110001       539          4            1       12)
(smt.stats   13   1583  25166  42757  3100/2826/178    1563/170    17  107   53.18)
(smt.stats   14   1730  32233  50878  3118/2839/178    1706/171    17  107   53.28)
(smt.stats   15   1831  35757  56167  3129/2858/179    1797/174    18  111   53.54)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 4 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 5 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 5 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 61 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 52 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 49 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 4 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 9 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 13 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 21 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 37 := 101&63
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 101 := 101 << 6
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 16 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 17 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 21 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 21 := 101&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 37 := 101&63
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 101 := 100 << 6
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 37 := 288230376151711749&63
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 37 := 288230376151711781&63
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 288230376151711781 := 288230376151711744 << 6
(smt.stats   16   1942  38391  60824  3197/2921/227    1942/183    19  118   53.64)
(smt.stats   17   2064  44690  66352  3201/2927/227    2065/183    19  118   53.74)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 2 := 12&3
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 2 := 14&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 14 := 1 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 2 := 14&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 14 := 1 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 2 := 14&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 14 := 1 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 2 := 14&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 14 := 3 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711776&3
shl: (shl[59] (bv2int %0) (mod (bv2int %1) 59)) 1 := 72057594037927944 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711760&3
shl: (shl[59] (bv2int %0) (mod (bv2int %1) 59)) 72057594037927939 := 72057594037927940 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711760&3
shl: (shl[59] (bv2int %0) (mod (bv2int %1) 59)) 72057594037927939 := 72057594037927940 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711760&3
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 1 := 288230376151711760&3
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711760&3
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 2 := 288230376151711760&3
(smt.stats   18   2198  48550  70581  3285/2941/233    2230/202    21  127   53.93)
(smt.stats   19   2345  54087  78742  3338/3029/258    2410/202    21  127   53.93)
(sat.ddfw       1      1   33.3105    160000       784          5            1       17)
(smt.stats   20   2506  58951  83685  3355/3072/259    2601/228    22  132   54.02)
(smt.stats   21   2607  62037  89375  3360/3084/259    2708/228    22  132   54.49)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 292805461487453200&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711808&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 288230376151711808 := 288230376151711808 << 5
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711744&31
shl: (shl[59] (bv2int %0) (mod (bv2int %1) 59)) 4 := 495395959010754560 << 5
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711744&31
shl: (shl[59] (bv2int %0) (mod (bv2int %1) 59)) 4 := 441352763482308608 << 5
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151711744&31
shl: (shl[59] (bv2int %0) (mod (bv2int %1) 59)) 4 := 441352763482308608 << 5
(smt.stats   22   2718  64972  96417  3430/3138/273    2849/248    24  138   54.59)
(smt.stats   23   2840  69853 103760  3466/3178/273    3000/248    24  138   54.59)
ramon: poll                 wall=2.003s usage=2.021s mem=56960KiB load=1.00 rootload=1.00
(smt.stats   24   2974  72607 109277  3469/3180/277    3181/303    26  145   54.68)
(sat.ddfw       1      1   29.1692    220001      1078          6            1       23)
(smt.stats   25   3121  77601 116549  3487/3187/278    3331/305    26  145   54.68)
(smt.stats   26   3282  79825 125693  3526/3209/279    3542/312    27  146   54.78)
(smt.stats   27   3459  81600 134836  3572/3262/279    3782/334    28  147   54.87)
(smt.stats   28   3560  84206 139113  3615/3308/279    3942/334    28  147   54.87)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 1 := 160&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 2 := 160&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 4 := 160&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 8 := 160&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 16 := 160&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 8 := 160&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 8 := 160&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 4 := 160&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 160&31
band: (band[59] (shl[59] (bv2int %0) (mod #103 59)) (if (= #634 58) 1 (if #636 3 #802))) 16 := 160&31
(smt.stats   29   3671  85928 144873  3665/3314/280    4121/362    29  148   54.97)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 12 := 292733975779082272&31
(smt.stats   30   3793  87468 149406  3722/3373/311    4301/363    29  148   55.07)
(sat.ddfw       1      1   26.0611    290001      1421          7            1       30)
(smt.stats   31   3927  89328 158654  3758/3423/314    4507/390    30  158   55.36)
ramon: poll                 wall=3.003s usage=3.071s mem=57836KiB load=1.05 rootload=1.05
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  93178 166138  3813/3467/318    4773/393    30  158   55.57)
(smt.stats   33   4235  96348 177416  3853/3526/320    5033/423    31  167   55.67)
(sat.ddfw       1      1   23.9449    370001      1813          8            1       38)
(smt.stats   34   4412 101904 191348  3899/3533/320    5278/426    31  167   55.77)
(smt.stats   35   4606 106179 206198  3975/3630/320    5667/465    32  174   55.77)
(smt.stats   36   4707 108521 215105  3983/3654/321    5872/465    32  174   55.86)
(smt.stats   37   4818 111798 224373  4014/3661/321    6081/508    33  180   55.86)
ramon: poll                 wall=4.000s usage=4.070s mem=58236KiB load=1.00 rootload=0.99
(smt.stats   38   4940 117175 237610  4015/3688/324    6333/508    33  180   55.86)
(smt.delete-inactive-clauses  :num-deleted-clauses 919)
(sat.ddfw       1      1   21.5466    460001      2254          9            1       47)
(smt.stats   39   5074 121187 247093  4028/3689/324    5540/550    34  201   55.86)
(smt.stats   40   5221 125955 259893  4047/3705/324    5707/551    34  201   55.86)
(smt.stats   41   5382 130056 272465  4096/3760/324    5860/553    34  201   55.86)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 64 := 64&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 64 := 162129586585337856 << 8
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 64 := 64&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 64 := 198158383604301824 << 8
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 64 := 64&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #409) 64)) 64 := 198158383604301824 << 8
(smt.stats   42   5559 133939 281108  4153/3782/326    6182/577    35  211   56.09)
(smt.stats   43   5753 139486 289951  4207/3826/331    6458/579    35  211   56.38)
ramon: poll                 wall=5.000s usage=5.070s mem=58500KiB load=1.00 rootload=1.00
(smt.stats   44   5966 145384 305312  4216/3886/333    6705/596    37  213   56.38)
(smt.stats   45   6067 147785 312522  4229/3899/335    6910/596    37  213   56.50)
(sat.ddfw       1      1    19.604    560001      2745         10            1       57)
(smt.stats   46   6178 150516 324084  4283/3903/335    7107/634    38  246   56.50)
(smt.stats   47   6300 154032 334758  4337/3954/335    7344/634    38  246   56.59)
(smt.stats   48   6434 157274 347892  4343/4013/335    7698/634    38  246   56.59)
(smt.stats   49   6581 161011 358478  4345/4015/335    7933/634    38  246   56.59)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 24 := 102275294763510752&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 16 := 102275294763510752&31
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 16 := 102275294763510624&31
ramon: poll                 wall=6.000s usage=6.073s mem=58920KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.9915    670001      3284         11            1       68)
(smt.stats   50   6742 165134 370544  4434/4016/335    8209/634    38  246   56.70)
(smt.stats   51   6919 169024 382217  4574/4155/335    8501/640    38  246   56.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 174520 399838  4611/4275/336    8841/734    39  248   56.80)
(smt.stats   53   7326 183913 433309  4625/4291/336    9214/734    39  248   56.80)
ramon: poll                 wall=7.000s usage=7.069s mem=59304KiB load=1.00 rootload=1.00
(smt.stats   54   7560 189289 453059  4654/4306/337    9725/875    40  256   56.90)
(sat.ddfw       1      1   16.6113    790001      3872         12            1       80)
(smt.stats   55   7661 193610 463530  4694/4347/338    9835/875    40  256   56.90)
(smt.stats   56   7772 196917 479404  4704/4371/339   10071/922    41  259   56.90)
(smt.stats   57   7894 200226 494947  4723/4382/339   10266/924    41  259   57.01)
(smt.stats   58   8028 202731 503315  4727/4395/340   10596/972    42  269   57.01)
(smt.stats   59   8175 210165 529740  4753/4413/340   10794/973    42  269   57.86)
ramon: poll                 wall=8.000s usage=8.074s mem=59892KiB load=1.00 rootload=1.00
(smt.stats   60   8336 214231 549739  4768/4425/341   11019/996    43  270   57.86)
(smt.stats   61   8513 216651 566419  4817/4446/341   11286/997    43  270   57.86)
(sat.ddfw       1      1   15.5577    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 222173 582990  4876/4535/342   11538/1011    44  292   57.96)
(smt.stats   63   8920 228392 607156  5031/4541/342   11904/1011    44  292   58.16)
ramon: poll                 wall=9.000s usage=9.177s mem=60124KiB load=1.10 rootload=1.10
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 20 := 144115188075855852&144115188075855856
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 16 := 144115188075855852&144115188075855856
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 144115188075855852&144115188075855856
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 144115188075855852&144115188075855856
(smt.stats   64   9154 231796 627366  5075/4710/342   12372/1013    44  292   58.25)
(smt.stats   65   9411 237969 668297  5085/4747/342   12796/1013    44  292   58.35)
(sat.ddfw       1      1   14.5349   1060001      5196         14            1      108)
(smt.stats   66   9512 239674 677272  5089/4751/342   13084/1013    44  292   58.35)
(smt.stats   67   9623 244050 698653  5090/4752/342   13326/1013    44  292   58.35)
ramon: poll                 wall=10.000s usage=10.177s mem=60388KiB load=1.00 rootload=1.00
(smt.stats   68   9745 246781 708596  5213/4752/342   13612/1018    44  292   58.45)
(smt.stats   69   9879 249481 721886  5305/4882/342   13823/1021    44  292   58.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 31)
(smt.stats   70  10026 253080 739169  5343/5005/343   14218/1144    45  293   58.54)
ramon: poll                 wall=11.000s usage=11.116s mem=60928KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   13.4433   1210001      5931         15            1      123)
(smt.stats   71  10187 257557 758561  5431/5059/344   14560/1145    45  293   58.64)
(smt.stats   72  10364 260552 772392  5459/5103/344   14833/1146    45  293   58.73)
ramon: poll                 wall=12.000s usage=12.113s mem=60948KiB load=1.00 rootload=1.00
(smt.stats   73  10558 263721 786481  5527/5153/344   15252/1179    46  293   58.73)
(smt.stats   74  10771 266581 810643  5582/5228/345   15644/1179    46  293   58.83)
(smt.stats   75  11005 271704 823505  5590/5247/345   15948/1237    47  309   58.83)
(smt.stats   76  11262 277146 861030  5619/5275/345   16235/1238    47  309   58.93)
(sat.ddfw       1      1   12.6472   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.112s mem=61396KiB load=1.00 rootload=1.00
(smt.stats   77  11544 282957 899903  5695/5293/345   16660/1239    47  309   59.04)
(smt.stats   78  11645 284890 915056  5770/5409/346   16782/1273    48  310   59.04)
(smt.stats   79  11756 287604 932454  5773/5432/346   16982/1273    48  310   59.04)
(smt.stats   80  11878 292262 960933  5787/5442/346   17124/1273    48  310   59.15)
(smt.stats   81  12012 296740 974303  5791/5450/346   17670/1273    48  310   59.15)
ramon: poll                 wall=14.000s usage=14.113s mem=61812KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   82  12159 303926 995346  5814/5452/346   18217/1273    48  310   59.34)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 16 := 360287970189639664&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713696&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 360287970189639616&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713920&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713920&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714048&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713920&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714048&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713920&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714048&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713920&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714048&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714304&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714048&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714304&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714816&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714304&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714304&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151714304&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151715840&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151715840&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151715840&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151719936&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151719936&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151728128&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151728128&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151744512&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151728128&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151719936&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151744512&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151777280&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151777280&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151842816&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151842816&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151777280&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151973888&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151777280&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151842816&288230376151711712
(sat.ddfw       1      1   11.9365   1540001      7549         17            1      156)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151842816&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376152236032&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376152236032&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376152760320&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713792&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713792&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713792&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713792&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713792&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713792&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713792&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151713792&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151716928&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151716864&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151716864&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151716864&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151715840&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151744512&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151777280&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376152760320&288230376151711712
(smt.stats   83  12320 309061 1037948  6102/5501/346   18801/1278    48  310   59.75)
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151973888&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151973888&288230376151711712
band: (band[59] (shl[64] (bv2int %0) (mod #410 64)) (if (= #821 63) 0 (if #823 1 #950))) 0 := 288230376151973888&288230376151711712
(smt.stats   84  12497 313394 1055477  6142/5733/536   19317/1449    49  348   60.70)
ramon: poll                 wall=15.000s usage=15.114s mem=62700KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.2994   1720001      8431         18            1      174)
(smt.stats   85  12691 319430 1076730  6623/5859/541   20062/1452    49  348   60.79)
ramon: poll                 wall=16.000s usage=16.109s mem=63000KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=17.109s mem=63140KiB load=1.00 rootload=1.00
(smt.stats   86  12904 325482 1104643  7211/6300/541   21202/1613    50  349   61.18)
(smt.stats   87  13138 331054 1130191  7245/6898/541   21917/1613    50  349   61.28)
(sat.ddfw       1      1   10.7333   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.107s mem=63500KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   88  13395 342123 1204820  7527/6925/541   23144/1621    50  349   61.47)
ramon: poll                 wall=19.000s usage=19.107s mem=63872KiB load=1.00 rootload=1.00
(smt.stats   89  13677 350408 1256825  7588/7207/541   24098/1623    50  349   61.76)
(sat.ddfw       1      1   10.2249   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.107s mem=64072KiB load=1.00 rootload=1.00
(smt.stats   90  13987 360688 1273726  7598/7253/541   24958/1623    50  349   61.76)
ramon: end                  Fri Nov  1 21:28:26 2024
ramon: root.execname        z3
ramon: root.utime           20.100s
ramon: root.stime           0.010s
ramon: group.total          20.125s
ramon: group.utime          20.109s
ramon: group.stime          0.016s
ramon: group.mempeak        64332KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.021s
ramon: loadavg              1.01
