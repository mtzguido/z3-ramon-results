ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:25:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42884 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1252
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3reQoQK063FR.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2781265
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3951    683  1156/1029/100      96/14     6   17   19.04)
(smt.stats    1    202   4609   1288  1653/1424/100     213/21     6   17   19.23)
(smt.stats    2    313   6688   2834  1779/1580/101     332/30     7   19   19.23)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 2 << 4
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 2 << 4
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 2 << 4
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 2 << 4
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044415 := 0 << 5
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044415 := 0 << 5
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044415 := 0 << 5
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044415 := 0 << 5
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044414 := 0 << 5
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 15&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 1 := 0 << 5
(smt.stats    3    414   8144   4821  2064/1668/113     429/62     8   21   19.42)
(smt.stats    4    525  10315   7228  2246/2054/122     566/115    12   31   19.52)
(smt.stats    5    647  14733  10012  2346/2072/122     689/122    12   31   19.52)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  18230  12659  2376/2177/124     805/129    13   32   19.65)
(smt.stats    7    859  21143  14400  2429/2198/125     924/133    14   33   19.65)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&1099511627778
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&567489872415
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&567489872415
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&567489872414
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&17592186044413
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&17592186044414
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&1099511627780
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&1099511627780
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&1134979744832
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&1134979744804
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&567489872408
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&567489872404
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&567489872404
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&567489872404
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 33554431&567489872408
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 2 := 33554431&567489872416
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4 := 33554431&567489872416
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 8 := 33554431&567489872416
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 16 := 33554431&567489872416
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 32 := 33554431&567489872416
(smt.stats    8    981  23727  17437  2536/2305/187    1038/146    15   48   19.93)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 0&567489872416
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044415 := 9079837958416 << 1
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 0&567489872416
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044414 := 9079837958416 << 1
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 0&567489872416
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 9079837958417 := 9079837958416 << 1
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 0&567489872400
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044415 := 9079837958408 << 1
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 0&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 17592186044415 := 8796093022208 << 1
(smt.stats    9   1115  27841  21582  2572/2361/194    1173/161    17   52   19.93)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 2 << 8
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 2 << 8
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 2 << 8
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 4 << 8
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 0 := 33554430 << 8
(smt.stats   10   1216  31123  24304  2609/2390/200    1269/167    18   57   20.04)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 1 := 0 << 9
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 1 := 0 << 9
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 1 := 0 << 9
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 255&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 1 := 0 << 9
(smt.stats   11   1327  32954  25857  2787/2486/208    1405/177    19   62   20.34)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 63&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 17592186044416 := 17592186044418 << 6
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 63&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 17592186044416 := 17592186044418 << 6
(smt.stats   12   1449  37482  31262  2819/2587/218    1541/183    20   69   20.34)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 11 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 10 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 8 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 16 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 16 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 32 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 32 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 32 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 32 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 48 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 64 := 127&80
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 80 := 127&80
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 52776558133328 := 1099511627782 << 7
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 80 := 127&80
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 70368744177744 := 1099511627782 << 7
(smt.stats   13   1583  42190  36094  2909/2670/256    1675/204    21   76   20.62)
(smt.stats   14   1730  52853  42123  2916/2682/257    1823/204    22   85   20.62)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 3 := 31&567489872175
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4 := 31&567489872175
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4 := 31&567489872175
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 5 := 31&567489872175
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 7 := 31&567489872175
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 15 := 31&567489872175
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 88528420094255 := 1099511627776 << 5
(smt.stats   15   1831  56392  44926  2997/2691/257    1949/210    23   87   20.82)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 15 := 31&567489872399
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 1196836140892687 := 18691697672192 << 5
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 15 := 31&567489872399
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 1390350187381263 := 18691697672192 << 5
(smt.stats   16   1942  58358  48649  3030/2783/268    2096/227    25   91   20.82)
(smt.stats   17   2064  62309  52253  3230/2973/270    2216/228    25   91   20.91)
ramon: poll                 wall=1.000s usage=0.923s mem=22044KiB load=0.92 rootload=0.91
(smt.stats   18   2198  66159  57953  3282/3015/271    2360/272    26   98   20.91)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   19   2345  70834  65622  3315/3060/272    2513/283    28  103   21.14)
(smt.stats   20   2506  75300  72599  3352/3073/282    2716/300    29  105   21.14)
(smt.stats   21   2607  77316  76918  3405/3113/282    2850/302    29  105   21.14)
(smt.stats   22   2718  79574  82984  3423/3156/282    2950/340    30  135   21.14)
(smt.stats   23   2840  83243  90807  3448/3193/284    3094/353    31  144   21.14)
(smt.stats   24   2974  85149  95973  3464/3206/286    3242/359    32  150   21.24)
(smt.stats   25   3121  87563 101484  3501/3227/287    3415/363    32  150   21.24)
(smt.stats   26   3282  89528 107264  3594/3333/288    3576/374    33  156   21.24)
(smt.stats   27   3459  93120 117246  3620/3346/288    3774/375    33  156   21.33)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 40 := 4095&4040
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 40 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 42 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 42 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 75 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 72 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 74 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 74 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 72 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 74 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 72 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 74 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 72 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 74 := 4095&4042
(smt.stats   28   3560  96048 121841  3685/3376/288    3933/406    34  157   21.33)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 72 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 74 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 136 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 138 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 200 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 200 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 202 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 200 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 202 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 200 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 202 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 200 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 202 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 203 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 202 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 712 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 714 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 968 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 987 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 986 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 970 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 728 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 730 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 731 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 730 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 459 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 458 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 458 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 458 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 458 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 458 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 970 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 970 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 970 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 970 := 4095&4042
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 3786 := 4095&4043
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 3787 := 4095&4043
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 3787 := 4095&4043
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 1995 := 4095&4043
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4043 := 4095&4043
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 87960930226123 := 1099511627776 << 12
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4043 := 4095&4043
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 87960930226123 := 1099511627776 << 12
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4043 := 4095&4043
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 87960930226123 := 1099511627776 << 12
(smt.stats   29   3671  98964 131358  3893/3513/347    4109/437    35  166   21.74)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4043 := 4095&4043
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 105553116270539 := 2199023255806 << 12
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 4043 := 4095&4043
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 105553116270539 := 2199023255806 << 12
(smt.stats   30   3793 100412 135940  3940/3633/367    4246/460    36  174   21.83)
(smt.stats   31   3927 103972 141843  4048/3693/367    4658/463    36  174   21.83)
ramon: poll                 wall=2.002s usage=1.922s mem=23212KiB load=1.00 rootload=1.00
(smt.stats   32   4074 107759 154247  4096/3791/367    4894/627    37  174   21.94)
(smt.stats   33   4235 113655 168915  4114/3841/370    5193/708    38  181   21.94)
(smt.stats   34   4412 117911 179681  4125/3854/371    5399/708    38  181   22.05)
(smt.stats   35   4606 123189 194645  4135/3868/373    5729/801    40  196   22.05)
(smt.stats   36   4707 125296 199686  4204/3870/373    5876/803    40  196   22.24)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 7&1099511627808
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 124244813938720 := 24120536334336 << 3
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 7&1099511627808
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 106652627894304 := 23227183136768 << 3
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 7&1099511627808
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 106652627894304 := 23227183136768 << 3
(smt.stats   37   4818 127225 204235  4339/4015/375    6109/808    40  196   22.24)
(smt.stats   38   4940 129567 213220  4342/4073/381    6419/841    41  201   22.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 204)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   39   5074 133210 222838  4369/4097/382    6532/844    41  201   22.35)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 75 := 127&75
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #805 #809) 64)) 4591560557592651 := 3367254360064 << 7
(smt.stats   40   5221 138382 243745  4404/4136/387    6750/1070    43  224   22.35)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 127&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 8933531975682 := 8933531975680 << 8
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 127&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 8933531975681 := 8933531975680 << 8
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 0 := 127&0
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #105))) 8933531975680 := 8933531975680 << 8
(smt.stats   41   5382 140718 251091  4449/4167/390    6969/1071    43  224   22.45)
(smt.stats   42   5559 144767 271355  4497/4226/397    7212/1117    44  254   22.56)
ramon: poll                 wall=3.000s usage=2.919s mem=23856KiB load=1.00 rootload=0.99
(smt.stats   43   5753 146983 292051  4525/4238/398    7427/1117    44  254   22.67)
(smt.stats   44   5966 149827 311950  4633/4336/398    7892/1131    45  254   23.06)
(smt.stats   45   6067 153534 323958  4638/4337/399    8120/1252    46  257   23.15)
(smt.stats   46   6178 155637 330992  4669/4368/400    8296/1255    46  257   23.15)
(smt.stats   47   6300 157939 340971  4730/4376/400    8505/1298    47  258   23.25)
(smt.stats   48   6434 160656 347870  4840/4535/402    8709/1299    47  258   23.35)
(smt.stats   49   6581 163534 362150  4869/4550/402    8900/1300    47  258   23.35)
(smt.stats   50   6742 168070 384404  4909/4578/402    9147/1362    48  267   23.44)
(smt.stats   51   6919 170897 404360  4926/4612/403    9346/1362    48  267   23.55)
ramon: poll                 wall=4.000s usage=3.917s mem=25024KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 176573 425668  5089/4694/406   10017/1411    49  277   23.84)
(smt.stats   53   7326 182699 459761  5467/4799/406   10584/1515    50  283   23.93)
(smt.stats   54   7560 187197 480745  5677/5162/406   11142/1516    50  283   24.12)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 8159 := 8191&4010017403519
(smt.stats   55   7661 189470 493750  5824/5505/412   11381/1587    51  290   24.22)
ramon: poll                 wall=5.000s usage=4.916s mem=25680KiB load=1.00 rootload=1.00
(smt.stats   56   7772 192238 512244  5894/5506/412   11725/1588    51  290   24.31)
(smt.stats   57   7894 195808 536190  6010/5616/412   12323/1588    51  290   24.41)
(smt.stats   58   8028 198055 547976  6040/5721/412   13242/1588    51  290   24.51)
(smt.stats   59   8175 203526 565702  6071/5722/412   13529/1588    51  290   24.51)
(smt.stats   60   8336 208486 578991  6102/5776/412   13771/1588    51  290   24.70)
(smt.stats   61   8513 211382 598506  6141/5822/416   14269/1919    52  301   24.70)
(smt.stats   62   8707 214347 619188  6217/5886/417   14627/1919    52  301   24.81)
(smt.stats   63   8920 217890 641908  6262/5913/417   14922/1920    52  301   24.81)
ramon: poll                 wall=6.000s usage=5.914s mem=26224KiB load=1.00 rootload=0.99
(smt.stats   64   9154 223830 671200  6298/5944/417   15280/1995    53  320   24.90)
(smt.stats   65   9411 229723 691716  6477/6001/417   16198/1997    53  320   25.00)
(smt.stats   66   9512 231286 703156  6550/6227/418   16587/2194    54  323   25.10)
(smt.stats   67   9623 233561 722226  6553/6230/418   16804/2194    54  323   25.10)
(smt.stats   68   9745 235963 748624  6561/6234/418   16984/2194    54  323   25.10)
ramon: poll                 wall=7.000s usage=6.913s mem=26508KiB load=1.00 rootload=1.00
(smt.stats   69   9879 240759 791631  6563/6240/419   17221/2253    55  332   25.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 244052 812699  6583/6256/419   17486/2253    55  332   25.19)
(smt.stats   71  10187 249634 840216  6589/6262/421   18097/2319    56  334   25.19)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10364 254845 864064  6598/6271/421   18712/2319    56  334   25.32)
(smt.stats   73  10558 259488 905067  6607/6280/423   19093/2600    57  344   25.41)
(smt.stats   74  10771 263964 956765  6616/6289/423   19405/2600    57  344   25.41)
(smt.stats   75  11005 269575 1007349  6624/6298/426   19959/2710    58  347   25.51)
ramon: poll                 wall=8.000s usage=7.911s mem=27004KiB load=1.00 rootload=1.00
(smt.stats   76  11262 275419 1045785  6654/6298/426   20263/2711    58  347   25.61)
(smt.stats   77  11544 283714 1099654  6667/6341/426   20682/2711    58  347   25.95)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11645 286262 1121445  6677/6346/426   21022/2713    58  347   26.04)
(smt.stats   79  11756 289785 1135354  6690/6363/426   21340/2713    58  347   26.04)
(smt.stats   80  11878 293799 1146416  6779/6363/426   21628/2715    58  347   26.14)
(smt.stats   81  12012 296617 1163407  6885/6539/426   22040/2715    58  347   26.14)
ramon: poll                 wall=9.000s usage=8.910s mem=27620KiB load=1.00 rootload=0.99
(smt.stats   82  12159 301477 1196068  6912/6558/426   22516/2718    58  347   26.23)
(smt.stats   83  12320 305689 1225850  6950/6590/426   22710/2719    58  347   26.23)
(smt.stats   84  12497 309382 1258426  7007/6649/426   23161/2721    58  347   26.33)
(smt.stats   85  12691 315617 1299324  7031/6688/426   23383/2721    58  347   26.33)
(smt.stats   86  12904 321592 1338249  7107/6709/426   23780/2721    58  347   26.42)
ramon: poll                 wall=10.000s usage=9.909s mem=27908KiB load=1.00 rootload=1.00
(smt.stats   87  13138 325936 1361983  7214/6788/426   24521/2726    58  347   26.52)
band: (band[44] (if (= #340 63) 0 (if #564 1 #798)) (shl[64] (* 2 #323) (mod #813 64))) 3328 := 8191&4010017402880
(smt.stats   88  13395 331718 1420798  7398/6912/426   25585/2732    58  347   26.62)
(smt.stats   89  13677 336840 1452157  7544/7092/426   26000/2734    58  347   26.71)
ramon: poll                 wall=11.000s usage=10.908s mem=28324KiB load=1.00 rootload=1.00
(smt.stats   90  13987 347255 1520713  7710/7267/427   27289/3309    59  349   26.91)
(smt.stats   91  14088 348799 1530926  7732/7404/427   27475/3309    59  349   27.03)
(smt.stats   92  14199 351501 1549472  7761/7405/427   27602/3311    59  349   27.03)
(smt.stats   93  14321 352382 1558678  7828/7476/427   27765/3312    59  349   27.13)
(smt.stats   94  14455 355063 1579247  7843/7513/427   28191/3312    59  349   27.13)
(smt.stats   95  14602 356293 1591234  7849/7513/427   28455/3312    59  349   27.13)
(smt.stats   96  14763 358729 1612193  7855/7525/427   28939/3312    59  349   27.22)
(smt.stats   97  14940 365247 1655248  7909/7525/427   29231/3314    59  349   27.32)
(smt.delete-inactive-clauses  :num-deleted-clauses 297)
ramon: poll                 wall=12.000s usage=11.907s mem=28676KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   98  15134 370844 1682410  7992/7592/427   29257/3316    59  349   27.32)
(smt.stats   99  15347 376937 1744310  8398/7678/427   29885/3323    59  349   27.41)
(smt.stats  100  15581 381511 1775961  8546/8097/427   30522/3325    59  349   27.51)
ramon: poll                 wall=13.000s usage=12.906s mem=29004KiB load=1.00 rootload=1.00
(smt.stats  101  15838 386430 1797973  8835/8236/427   31278/3333    59  349   27.70)
ramon: poll                 wall=14.000s usage=13.904s mem=29448KiB load=1.00 rootload=1.00
(smt.stats  102  16120 391070 1845081  9114/8581/427   31799/3337    59  349   27.85)
(smt.stats  103  16430 395711 1866747  9317/8794/428   32592/3873    60  351   28.04)
ramon: poll                 wall=15.000s usage=14.904s mem=30020KiB load=1.00 rootload=0.99
(smt.stats  104  16770 406675 1941078  9827/9001/428   34264/3877    60  351   28.33)
(smt.stats  105  16871 409797 1971103  9984/9504/428   34841/3878    60  351   28.33)
(smt.stats  106  16982 412294 1987259 10001/9667/428   35275/3878    60  351   28.42)
(smt.stats  107  17104 417380 2030836 10004/9674/428   35953/3878    60  351   28.42)
(smt.stats  108  17238 421213 2080202 10012/9682/428   36650/3878    60  351   28.52)
ramon: poll                 wall=16.000s usage=15.903s mem=30220KiB load=1.00 rootload=1.00
(smt.stats  109  17385 425425 2136366 10018/9688/428   37082/3878    60  351   28.52)
(smt.stats  110  17546 429585 2172610 10022/9692/429   37463/4830    61  352   28.61)
(smt.stats  111  17723 435980 2235065 10028/9698/429   37836/4830    61  352   28.71)
(smt.stats  112  17917 440738 2280526 10049/9702/429   38147/4832    61  352   28.71)
(smt.stats  113  18130 443803 2315615 10055/9725/429   38721/4832    61  352   28.81)
ramon: poll                 wall=17.000s usage=16.903s mem=30608KiB load=1.00 rootload=1.00
(smt.stats  114  18364 451437 2369607 10171/9728/429   39360/4835    61  352   28.90)
(smt.stats  115  18621 456018 2401685 10268/9853/429   40751/4836    61  352   29.10)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  116  18903 463734 2461068 10413/10071/430   41282/5262    62  360   29.27)
ramon: poll                 wall=18.000s usage=17.902s mem=31012KiB load=1.00 rootload=1.00
(smt.stats  117  19213 469007 2505072 10525/10092/431   41914/5266    62  360   29.37)
(smt.stats  118  19553 473423 2568568 10562/10215/431   42436/5266    62  360   29.37)
ramon: poll                 wall=19.000s usage=18.902s mem=31244KiB load=1.00 rootload=1.00
(smt.stats  119  19926 480292 2638064 10637/10240/431   43041/5523    63  380   29.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats  120  20027 481773 2655196 10641/10309/431   43222/5523    63  380   29.54)
(smt.stats  121  20138 486284 2689507 10644/10312/431   43663/5523    63  380   29.54)
(smt.stats  122  20260 491533 2732267 10644/10312/431   44309/5523    63  380   29.64)
(smt.stats  123  20394 493478 2767232 10658/10318/431   44543/5523    63  380   29.64)
(smt.stats  124  20541 495004 2782142 10668/10334/431   44736/5523    63  380   29.64)
(smt.stats  125  20702 497878 2849960 10691/10336/431   44912/5523    63  380   29.74)
ramon: poll                 wall=20.000s usage=19.902s mem=31472KiB load=1.00 rootload=1.00
(smt.stats  126  20879 503220 2904829 10739/10361/431   45317/5523    63  380   29.74)
ramon: end                  Tue Dec 24 14:26:04 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.976s
ramon: group.utime          19.952s
ramon: group.stime          0.024s
ramon: group.mempeak        31728KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
