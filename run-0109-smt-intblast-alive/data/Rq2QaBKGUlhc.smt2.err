ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:19:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41548 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Rq2QaBKGUlhc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2963688
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 1 := 1&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 1&12534594
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 1 := 2 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 1&12534594
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 1 := 8589934591 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 1&12534594
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 1 := 8589934591 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 1&12534594
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 1 := 8589934591 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 268435456&12534594
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 1 := 2 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 268435456&12534594
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 1 := 2 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 268435456&12534594
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 1 := 2 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 268435456&12534594
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 1 := 2 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 1 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 134217728&12534594
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #574 #575 #576) 0 (if #577 1 #658))) 1 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 2 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 4 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 4 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 8 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 16 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 32 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 64 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 128 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 134217728&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 512 := 134217728&12534594
(smt.stats    0    101   4617    553  1180/963/115      89/14     9   18   19.44)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 128 := 268435456&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 128 := 268435456&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 128 := 268435456&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 128 := 268435456&12534594
(smt.stats    1    202   7147   1786  2088/1888/174     211/34    13   33   19.63)
(smt.stats    2    313   8869   3309  2105/1907/176     312/55    15   35   19.73)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 8455716864&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 8455716864&12534594
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 8589934591&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 8589934591&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127950754&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127950754&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127950786&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 8589934590&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127950784&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127950784&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127950848&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127951104&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127951104&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127959040&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127959296&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127959040&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127959296&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127992064&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127991808&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127992064&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 128057600&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 128057344&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127983360&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127959296&6267297
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 256 := 127983454&6267297
(smt.stats    3    414  10544   4979  2170/1972/252     419/70    17   54   20.02)
(smt.stats    4    525  12419   6494  2214/2005/256     523/81    19   59   20.02)
(smt.stats    5    647  14051   8539  2327/2051/256     664/82    19   59   20.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  15488  11180  2430/2170/261     790/101    20   61   20.41)
(smt.stats    7    859  19551  16160  2504/2262/261    1020/120    21   61   20.50)
(smt.stats    8    981  21593  19985  2547/2325/280    1204/165    24   82   20.60)
(smt.stats    9   1115  24186  22855  2677/2332/280    1373/191    25  103   20.60)
(smt.stats   10   1216  25986  27118  2730/2479/280    1504/192    25  103   20.72)
(smt.stats   11   1327  28342  31839  2816/2518/280    1679/195    25  103   20.72)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  30487  37107  2915/2667/283    1939/252    26  108   20.85)
ramon: poll                 wall=1.003s usage=0.928s mem=22192KiB load=0.93 rootload=0.92
(smt.stats   13   1583  32824  42763  3066/2701/283    2153/259    26  108   20.85)
(smt.stats   14   1730  35353  48085  3161/2858/283    2370/265    26  108   20.94)
(smt.stats   15   1831  36993  50238  3374/2983/283    2515/270    26  108   21.04)
(smt.stats   16   1942  38073  52299  3593/3171/283    2788/272    26  108   21.13)
(smt.stats   17   2064  39388  55287  3608/3381/283    3253/273    26  108   21.23)
(smt.stats   18   2198  41099  59830  3628/3388/283    3476/273    26  108   21.33)
(smt.stats   19   2345  44624  67064  3693/3422/283    3636/274    26  108   21.33)
(smt.stats   20   2506  46854  74963  3820/3495/283    3838/276    26  108   21.44)
(smt.stats   21   2607  50376  84076  3887/3623/284    4037/464    27  113   21.44)
(smt.stats   22   2718  52227  90372  3916/3672/284    4158/465    27  113   21.44)
ramon: poll                 wall=2.000s usage=1.923s mem=22892KiB load=1.00 rootload=0.99
(smt.stats   23   2840  54777  99557  3977/3697/284    4321/465    27  113   21.54)
(smt.stats   24   2974  55227 106262  3988/3767/285    4597/583    28  118   21.54)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 2952831042&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 430685407701672002 := 2952831089 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 2952831042&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 430685407701672002 := 2952831089 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 2952855106&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 430685407701696066 := 2952855537 << 4
(smt.stats   25   3122  59047 116709  4046/3772/286    5039/584    28  118   21.63)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 2952831042&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 430685399111737410 := 2952831103 << 4
(smt.stats   26   3283  60615 119527  4209/3844/292    5314/693    29  131   21.79)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175499088&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 0 := 3070323253 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175499088&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 0 := 3070323253 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175499088&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 0 := 3070323253 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175499088&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 0 := 3070323253 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175499088&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 0 := 3070323253 << 4
(smt.stats   27   3460  63017 126835  4623/4284/292    5769/696    29  131   21.79)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175670348&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653968&11
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 74895130704 := 6836535988 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653968&11
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 74895130704 := 6836535988 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653968&11
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 57715261520 := 8053063679 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653964&11
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653968&11
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 57715261520 := 6836536052 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653968&11
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 109254869072 := 6836535988 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175653968&11
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 109254869072 := 6836535988 << 7
(smt.stats   28   3561  65335 133300  4749/4491/304    6169/761    30  136   21.91)
(smt.stats   29   3672  67603 138200  4801/4534/309    6365/762    30  136   21.91)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175660620&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 57715268172 := 450900532 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175660620&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 57715268172 := 450900532 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6175660624&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 57715268176 := 450900532 << 1
(smt.stats   30   3794  70500 152315  4913/4605/309    6645/919    31  142   22.01)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3928  71077 155487  5340/5110/318    7037/1019    32  150   22.20)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 160 := 5906104899&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 160 := 5906104899&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 160 := 5906104899&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 160 := 5906104899&382
(smt.stats   32   4075  74485 170294  5651/5409/329    7497/1086    33  167   22.39)
ramon: poll                 wall=3.000s usage=2.922s mem=23696KiB load=1.00 rootload=1.00
(smt.stats   33   4236  78296 198462  6093/5424/329    8108/1098    33  167   22.49)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 322 := 5774917952&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 324 := 5774917952&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 324 := 5774917952&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 324 := 5774917952&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 324 := 5774917952&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 324 := 5774917952&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 324 := 5775049024&382
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 324 := 5775049024&382
(smt.stats   34   4413  80457 211295  6504/5878/330    8439/1183    34  170   22.71)
(smt.stats   35   4607  84330 228683  6733/6467/343    9169/1188    35  172   22.82)
(smt.stats   36   4708  86949 244272  6861/6520/343    9422/1482    36  199   23.01)
(smt.stats   37   4819  89418 270746  6911/6660/343   10110/1482    36  199   23.01)
(smt.stats   38   4941  92063 292467  7000/6766/345   10665/1874    37  201   23.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 36)
(smt.stats   39   5075  95486 305939  7079/6774/345   10888/1878    37  201   23.28)
(smt.stats   40   5222  98474 314478  7152/6856/345   11047/2031    38  203   23.28)
(smt.stats   41   5383 101613 338583  7247/6944/345   11233/2033    38  203   23.28)
(smt.stats   42   5560 105079 369451  7307/7015/346   11949/2055    39  204   23.37)
(smt.stats   43   5754 106897 390050  7339/7095/347   12815/2204    40  213   23.47)
ramon: poll                 wall=4.000s usage=3.922s mem=24840KiB load=1.00 rootload=1.00
(smt.stats   44   5967 112139 433182  7349/7113/347   13750/2204    40  213   23.66)
(smt.stats   45   6068 113490 444294  7391/7118/347   14569/2205    40  213   23.76)
(smt.stats   46   6179 116142 468084  7707/7211/347   14821/2209    40  213   23.76)
(smt.stats   47   6301 118869 489546  8025/7502/347   15303/2210    40  213   23.95)
(smt.stats   48   6435 122039 513265  8172/7808/347   15903/2212    40  213   24.05)
(smt.stats   49   6582 126009 541041  8186/7944/347   16553/2212    40  213   24.05)
ramon: poll                 wall=5.000s usage=4.922s mem=25524KiB load=1.00 rootload=1.00
(smt.stats   50   6743 131679 593400  8393/8013/348   17066/2728    41  213   24.17)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6920 136669 636689  8786/8177/349   17827/2728    41  213   24.27)
(smt.stats   52   7114 141448 680034  8828/8567/349   18218/2814    42  214   24.37)
(smt.stats   53   7327 144771 694841  9328/8849/350   18563/2997    43  214   25.09)
ramon: poll                 wall=6.000s usage=5.922s mem=26584KiB load=1.00 rootload=1.00
(smt.stats   54   7561 147590 704133  9936/9305/350   18873/3011    43  214   25.19)
(smt.stats   55   7662 149027 715941 10101/9750/350   18999/3012    43  214   25.19)
(smt.stats   56   7773 152292 760994 10280/9951/350   19138/3012    43  214   25.19)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7895 155802 797891 10367/10053/351   19460/3082    44  216   25.28)
(smt.stats   58   8029 158109 812471 10425/10170/352   19740/3082    44  216   25.28)
(smt.stats   59   8176 161706 841622 10512/10200/352   20065/3265    45  216   25.28)
(smt.stats   60   8337 167051 877478 10683/10294/352   20566/3268    45  216   25.52)
(smt.stats   61   8514 171942 912136 10832/10483/352   21890/3268    45  216   25.71)
ramon: poll                 wall=7.000s usage=6.921s mem=27148KiB load=1.00 rootload=1.00
(smt.stats   62   8708 178156 967541 11015/10731/354   22237/3664    46  216   25.81)
(smt.stats   63   8921 182933 991365 11163/10822/355   22739/3732    47  216   25.81)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   64   9155 190428 1049700 11342/10935/355   24384/3733    47  216   26.12)
(smt.stats   65   9412 195469 1091562 11538/11124/355   25127/3737    47  216   26.12)
(smt.stats   66   9513 197024 1102605 11564/11316/355   25797/3737    47  216   26.23)
(smt.stats   67   9624 199445 1125981 11602/11337/355   26120/3738    47  216   26.33)
ramon: poll                 wall=8.000s usage=7.921s mem=27720KiB load=1.00 rootload=1.00
(smt.stats   68   9746 202544 1167851 11699/11389/355   26977/3740    47  216   26.33)
(smt.stats   69   9880 207732 1210944 11720/11484/355   27612/3740    47  216   26.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 212220 1248270 11824/11516/357   29601/4157    48  217   26.80)
(smt.stats   71  10188 215860 1301116 11986/11738/358   29986/4158    48  217   26.80)
(smt.stats   72  10365 220728 1355452 12089/11744/358   30985/4367    49  220   26.90)
(smt.stats   73  10559 226734 1421105 12241/11852/358   32775/4368    49  220   27.19)
ramon: poll                 wall=9.000s usage=8.921s mem=28584KiB load=1.00 rootload=1.00
(smt.stats   74  10772 234012 1524292 12409/12033/358   33223/4370    49  220   27.19)
(smt.stats   75  11006 237542 1573492 12531/12188/358   33888/4370    49  220   27.28)
(smt.stats   76  11263 243590 1637271 12858/12296/358   35159/4371    49  220   27.48)
ramon: poll                 wall=10.000s usage=9.921s mem=29140KiB load=1.00 rootload=1.00
(smt.stats   77  11545 250309 1677932 13023/12692/359   36510/4683    50  222   27.67)
(smt.stats   78  11646 253140 1690983 13093/12783/359   36776/4685    50  222   27.67)
(smt.stats   79  11757 255880 1705637 13137/12854/359   37073/4686    50  222   27.78)
(smt.stats   80  11879 258019 1732250 13197/12907/359   37352/4687    50  222   27.78)
(smt.stats   81  12013 261111 1760457 13240/12961/359   38498/4689    50  222   27.87)
(smt.stats   82  12160 262977 1771963 13290/13003/359   38675/4689    50  222   27.87)
(smt.stats   83  12321 266266 1833884 13330/13060/359   38890/4690    50  222   27.87)
ramon: poll                 wall=11.000s usage=10.919s mem=29672KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12498 269237 1875579 13427/13103/359   39418/4690    50  222   27.97)
(smt.stats   85  12692 273655 1943645 13516/13250/361   39941/4980    51  223   28.09)
(smt.stats   86  12905 277256 1996209 13628/13290/361   40237/4980    51  223   28.09)
(smt.stats   87  13139 281979 2071132 13739/13420/361   41078/5033    52  225   28.32)
(smt.stats   88  13396 287862 2148741 13912/13517/361   41912/5038    52  225   28.51)
(smt.stats   89  13678 292727 2208021 13975/13691/361   42476/5038    52  225   28.51)
ramon: poll                 wall=12.000s usage=11.918s mem=29928KiB load=1.00 rootload=1.00
(smt.stats   90  13988 299579 2276531 14273/13742/361   43315/5039    52  225   28.62)
(smt.stats   91  14089 304396 2294471 14278/14034/362   43493/5342    53  236   28.73)
(smt.stats   92  14200 307130 2348457 14436/14036/363   43877/5342    53  236   28.83)
(smt.stats   93  14322 310965 2384405 14581/14335/364   44370/5343    53  236   28.83)
(smt.stats   94  14456 314831 2416476 14711/14337/364   44737/5568    54  242   28.92)
ramon: poll                 wall=13.000s usage=12.918s mem=30424KiB load=1.00 rootload=1.00
(smt.stats   95  14603 319030 2514838 14795/14503/364   45707/5570    54  242   28.92)
(smt.stats   96  14764 324536 2602771 15079/14591/364   46193/5572    54  242   29.14)
ramon: poll                 wall=14.000s usage=13.918s mem=30680KiB load=1.00 rootload=1.00
(smt.stats   97  14941 329253 2665348 15431/14867/364   46729/5573    54  242   29.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15135 334157 2716960 15641/15177/364   47339/5575    54  242   29.33)
(smt.stats   99  15348 341417 2781881 15873/15389/364   47717/5579    54  242   29.33)
(smt.stats  100  15582 344849 2828397 15911/15644/364   48431/5579    54  242   29.43)
(smt.stats  101  15839 346523 2863339 15912/15653/364   48725/5579    54  242   29.43)
ramon: poll                 wall=15.000s usage=14.918s mem=31192KiB load=1.00 rootload=1.00
(smt.stats  102  16121 350170 2962766 15918/15659/364   49227/5579    54  242   29.53)
(smt.stats  103  16431 353521 3032497 15942/15665/364   49772/5581    54  242   29.90)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 400689219&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 51940296771 := 8053063719 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 400691272&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 51940298824 := 8053063719 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 400691272&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #675 #671) 64)) 51940298824 := 8053063719 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 4294967368&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 6305360001 := 6979321865 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 4294967368&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 6305360001 := 6979321865 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 4294967368&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 6305245105 := 6979321865 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 4294967368&0
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 6305245105 := 6979321865 << 3
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  104  16771 358633 3087722 16263/15939/376   51146/6228    55  272   30.20)
(smt.stats  105  16872 360730 3119752 16503/16053/376   51406/6232    55  272   30.29)
(smt.stats  106  16983 361926 3146138 16524/16261/377   51978/6539    56  280   30.29)
(smt.stats  107  17105 367458 3202005 16526/16263/377   52413/6539    56  280   30.39)
ramon: poll                 wall=16.000s usage=15.917s mem=32084KiB load=1.00 rootload=1.00
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 6256&1
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #574 #575 #576) 0 (if #577 1 #658))) 1 := 6256&1
(smt.stats  108  17239 370517 3248497 16606/16269/377   52815/6541    56  280   30.49)
(smt.stats  109  17386 371677 3267653 16649/16378/387   53015/6541    56  280   30.49)
(smt.stats  110  17547 373834 3295337 16670/16395/387   53366/6618    57  282   30.49)
(smt.stats  111  17724 378180 3367696 16738/16412/388   53636/6621    57  282   30.60)
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 0 := 32&1
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #574 #575 #576) 0 (if #577 1 #658))) 1 := 32&1
band: (band[33] (shl[64] (bv2int %0) (mod #676 64)) (if (or #697 #698 #699 #700) 0 (if #701 1 #848))) 1 := 32&1
(smt.stats  112  17918 381579 3435143 16816/16546/391   55700/6641    58  311   30.89)
(smt.stats  113  18131 385658 3464893 16855/16548/391   56365/6641    58  311   31.00)
ramon: poll                 wall=17.000s usage=16.917s mem=32896KiB load=1.00 rootload=0.99
(smt.stats  114  18365 389778 3562571 16991/16599/391   57654/6641    58  311   31.10)
(smt.stats  115  18622 391839 3592523 17007/16733/391   57944/6720    59  321   31.10)
(smt.stats  116  18904 395835 3638010 17028/16747/391   59053/6720    59  321   31.33)
(smt.stats  117  19214 401518 3713631 17083/16803/393   60614/6811    60  323   31.43)
ramon: poll                 wall=18.000s usage=17.900s mem=33392KiB load=0.98 rootload=0.99
(smt.stats  118  19554 410477 3849025 17246/16821/393   61592/6821    60  323   31.88)
ramon: poll                 wall=19.000s usage=18.898s mem=33592KiB load=1.00 rootload=1.00
(smt.stats  119  19927 424470 3967097 17510/17000/393   62599/6823    60  323   32.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20028 426324 3999232 17547/17260/393   64017/6825    60  323   32.27)
(smt.stats  121  20139 428944 4045028 17602/17282/393   64308/6827    60  323   32.37)
ramon: poll                 wall=20.000s usage=19.897s mem=34004KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:19:25 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.000s
ramon: group.total          19.960s
ramon: group.utime          19.952s
ramon: group.stime          0.008s
ramon: group.mempeak        34264KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              0.99
