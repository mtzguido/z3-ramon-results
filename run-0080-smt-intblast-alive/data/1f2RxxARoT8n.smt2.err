ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:24:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31098 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1289
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1f2RxxARoT8n.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4026881
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2366    311  1238/1075/113     119/15     4   17   19.19)
(smt.stats    1    202   3328    661  1738/1540/115     231/24     5   21   19.38)
ramon: poll                 wall=1.000s usage=0.936s mem=20464KiB load=0.94 rootload=0.93
(smt.stats    2    313   4622   1143  1939/1782/116     373/32     6   22   19.38)
(smt.stats    3    414   6785   2425  1979/1811/123     513/43     7   38   19.38)
(smt.stats    4    525   8151   3934  2447/1838/125     623/98     8   42   19.68)
(smt.stats    5    647  12606  10659  2685/2277/125     785/118     9   44   19.80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16271  13929  2735/2488/125     900/120     9   44   19.80)
(smt.stats    7    859  20835  17792  2764/2532/126    1044/146    10   50   19.89)
(smt.stats    8    981  22525  21664  2780/2552/128    1202/173    12   53   19.99)
(smt.stats    9   1115  26222  27741  2805/2566/128    1350/173    12   53   19.99)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 1 := 0 >>l 62
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 1 := 0 >>l 62
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 1 := 0 >>l 62
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 1 := 0 >>l 62
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 1 := 0 >>l 62
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 562949953421311 := 140737488355328 >>l 47
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 562949953421311 := 140737488355328 >>l 47
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 562949953421311 := 140737488355328 >>l 47
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1 := 1&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1 := 1&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1 := 1&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 1 := 140737488355328 >>l 47
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
band: (band[49] (lshr[49] (bv2int %0) (mod #113 49)) (if (= #507 48) 562949953421312 (if #509 281474976710656 #603))) 1 := 1&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 1 := 140737488355328 >>l 47
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
band: (band[49] (lshr[49] (bv2int %0) (mod #113 49)) (if (= #507 48) 562949953421312 (if #509 281474976710656 #603))) 1 := 1&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 2&8
band: (band[49] (lshr[49] (bv2int %0) (mod #113 49)) (if (= #507 48) 562949953421312 (if #509 281474976710656 #603))) 2 := 2&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 3&8
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 4 := 562949953421311 >>l 47
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1 := 3&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2 := 3&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1 := 3&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&8
band: (band[49] (lshr[49] (bv2int %0) (mod #113 49)) (if (= #507 48) 562949953421312 (if #509 281474976710656 #603))) 1 := 1&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1 := 1&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2 := 2&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2 := 2&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2 := 2&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 2&8
band: (band[49] (lshr[49] (bv2int %0) (mod #113 49)) (if (= #507 48) 562949953421312 (if #509 281474976710656 #603))) 2 := 2&8
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 2&8
band: (band[49] (lshr[49] (bv2int %0) (mod #113 49)) (if (= #507 48) 562949953421312 (if #509 281474976710656 #603))) 2 := 2&8
(smt.stats   10   1216  27394  30841  2887/2646/183    1462/191    13   55   20.18)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&4
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 4611686018427387905 := 4611686018427387904 >>l 63
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 562949953421311&4
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 562949953421311&4
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 562949953421307&4
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 562949953421307 := 4611686018427387904 >>l 63
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 3&4
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 3 := 9223372036854775808 >>l 63
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&4
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 0 := 422212465065983 >>l 48
(smt.stats   11   1327  28853  32386  2946/2664/183    1584/193    13   55   20.18)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&4
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 2 := 562949953421311 >>l 48
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&4
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 2 := 562949953421311 >>l 48
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&4
band: (band[49] (lshr[49] (bv2int %0) (mod #113 49)) (if (= #507 48) 562949953421312 (if #509 281474976710656 #603))) 1 := 1&4
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 1&4
band: (band[49] (lshr[49] (bv2int %0) (mod #113 49)) (if (= #507 48) 562949953421312 (if #509 281474976710656 #603))) 1 := 1&4
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30785  35868  2985/2744/201    1720/211    15   71   20.18)
(smt.stats   13   1583  32731  39278  3014/2773/206    1846/218    16   84   20.38)
(smt.stats   14   1730  36352  43513  3034/2779/211    1991/225    17   86   20.38)
(smt.stats   15   1831  38185  45482  3069/2828/212    2094/228    18   86   20.38)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 4&4
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 4 := 9223372036854775808 >>l 63
(smt.stats   16   1942  40259  47988  3086/2834/213    2211/230    19   87   20.47)
(smt.stats   17   2064  42013  51663  3108/2853/213    2339/234    20   88   20.47)
ramon: poll                 wall=2.000s usage=1.934s mem=21624KiB load=1.00 rootload=1.00
(smt.stats   18   2198  46012  56522  3135/2894/216    2466/235    21   90   20.47)
(smt.stats   19   2345  48397  60337  3151/2900/216    2627/235    21   90   20.47)
(smt.stats   20   2506  49875  65501  3169/2919/216    2783/246    22   94   20.57)
(smt.stats   21   2607  51328  68754  3182/2939/216    2891/246    22   94   20.57)
(smt.stats   22   2718  53421  73368  3194/2944/217    3032/249    23   95   20.69)
(smt.stats   23   2840  54938  77394  3223/2963/217    3200/249    23   95   20.78)
(smt.stats   24   2974  56401  82677  3243/2998/219    3354/260    24  100   20.78)
(smt.stats   25   3121  58649  88582  3252/3001/219    3505/260    24  100   20.78)
(smt.stats   26   3282  62912  97167  3259/3013/219    3673/269    25  103   20.88)
(smt.stats   27   3459  66572 104870  3261/3013/219    3860/269    25  103   20.88)
(smt.stats   28   3560  68305 109815  3287/3041/220    3973/273    26  104   20.88)
(smt.stats   29   3671  70916 114830  3287/3041/220    4084/273    26  104   20.88)
(smt.stats   30   3793  73677 120850  3288/3042/220    4209/273    26  104   20.88)
(smt.stats   31   3927  76664 126642  3292/3045/220    4344/273    26  104   20.88)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  80340 134638  3294/3047/220    4491/273    26  104   20.97)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 16 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 32 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 64 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 128 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 256 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 512 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 64 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 128 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 256 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 256 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 512 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 256 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 512 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1024 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2048 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8192 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 16384 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 32768 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 16384 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 32768 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 65536 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 64 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 256 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 512 := 70368744177665&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 64 := 70368744181760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 256 := 70368744181760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 512 := 70368744177792&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 64 := 70368744177792&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 64 := 70368744177856&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 128 := 70368744177792&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 128 := 70368744177792&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 128 := 70368744177792&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1024 := 70368744177792&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1024 := 70368744178816&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1024 := 70368744178816&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1024 := 70368744178816&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1024 := 70368744178816&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744178816&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8192 := 70368744178816&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8192 := 70368744178816&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8192 := 70368744178816&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744195072&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744199168&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744199168&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744195072&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744195072&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4096 := 70368744199168&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8192 := 70368744203264&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 32768 := 70368744195072&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 65536 := 70368744195072&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 131072 := 70368744195072&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 262144 := 70368744195072&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 131072 := 70368744309760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 262144 := 70368744309760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 131072 := 70368744309760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 524288 := 70368744309760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 1048576 := 70368744309760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2097152 := 70368744309760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4194304 := 70368744309760&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8388608 := 70368744309760&70368744177664
(smt.stats   33   4235  82888 140722  3483/3216/393    4714/294    27  119   21.49)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 32768 := 70368744391680&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 32768 := 70368744408064&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 65536 := 70368744375296&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2048 := 70368744379392&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2048 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2048 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 2048 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 24 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 16 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 16 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 8 := 70368744381568&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 70368744381440&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 134144&70368744177664
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 134144 := 4611686018427355136 >>l 19
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 134144&70368744177664
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 0 := 2146319 >>l 4
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 68608&70368744177664
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 68608 := 557056 >>l 19
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 68608&70368744177664
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 0 := 1097729 >>l 4
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 23552&70368744177664
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 23552 := 32768 >>l 19
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 3072&70368744177664
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 3072 := 524288 >>l 19
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 3072&70368744177664
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 3072 := 524288 >>l 19
(smt.stats   34   4412  85877 155949  3578/3330/448    5047/376    28  161   21.81)
(smt.stats   35   4606  91766 169514  3607/3357/453    5251/427    29  177   21.90)
ramon: poll                 wall=3.000s usage=2.932s mem=23332KiB load=1.00 rootload=0.98
(smt.stats   36   4707  95237 178449  3614/3358/453    5362/427    29  177   22.15)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 281474976710656&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 281474976710656&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 422212465082368&70368744177664
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 281474976710656&70368744177664
(smt.stats   37   4818  97248 185022  3679/3409/455    5625/440    30  180   22.34)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 4 := 281474978828293&70368744177664
(smt.stats   38   4940  98479 186829  3823/3444/460    5847/445    30  180   22.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 16)
(smt.stats   39   5074 102233 197880  3882/3632/462    6171/624    31  185   22.53)
(smt.stats   40   5221 103509 200738  4045/3639/462    6364/626    31  185   22.62)
(smt.stats   41   5382 104050 202147  4478/4200/462    6607/627    31  185   22.92)
(smt.stats   42   5559 107213 219138  4901/4647/464    7193/751    32  187   23.02)
(smt.stats   43   5753 112816 249397  4907/4652/464    7427/753    32  187   23.02)
(smt.stats   44   5966 117542 272999  4931/4670/464    7762/932    33  192   23.11)
ramon: poll                 wall=4.000s usage=3.929s mem=24412KiB load=1.00 rootload=1.00
(smt.stats   45   6067 119986 284550  4940/4687/464    7909/932    33  192   23.21)
(smt.stats   46   6178 122561 297191  4949/4692/464    8047/932    33  192   23.21)
(smt.stats   47   6300 124650 307730  5030/4710/464    8233/935    33  192   23.21)
(smt.stats   48   6434 126556 318010  5442/4852/464    8516/943    33  192   23.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   49   6581 130790 337155  5511/5198/465    8866/1199    34  200   23.69)
(smt.stats   50   6742 137068 365779  5592/5294/465    9062/1199    34  200   23.78)
(smt.stats   51   6919 142334 387336  5825/5553/468    9313/1326    35  203   23.78)
ramon: poll                 wall=5.000s usage=4.929s mem=25168KiB load=1.00 rootload=1.00
(smt.stats   52   7113 145905 402522  5841/5569/470    9777/1326    35  203   23.88)
(smt.stats   53   7326 152026 437374  5850/5578/472   10120/1557    36  212   23.97)
(smt.stats   54   7560 156332 469137  5870/5596/478   10471/1639    37  225   24.17)
(smt.stats   55   7661 158232 482687  6015/5710/479   10590/1676    38  257   24.37)
(smt.stats   56   7772 160276 493831  6015/5710/479   10744/1676    38  257   24.37)
(smt.stats   57   7894 164340 513278  6021/5716/479   11002/1706    39  266   24.46)
(smt.stats   58   8028 169883 526984  6054/5742/481   11375/1720    40  289   24.56)
(smt.stats   59   8175 174616 544816  6065/5754/483   11777/1822    41  292   24.75)
(smt.stats   60   8336 179757 552220  6112/5755/483   12034/1822    41  292   24.84)
ramon: poll                 wall=6.000s usage=5.929s mem=26440KiB load=1.00 rootload=1.00
(smt.stats   61   8513 186781 569925  6241/5927/484   12261/1913    42  310   24.94)
(smt.stats   62   8707 194166 603117  6251/5934/484   12632/1913    42  310   25.33)
(smt.stats   63   8920 199959 636603  6259/5948/486   13097/1962    43  314   25.42)
(smt.stats   64   9154 205029 665072  6289/5955/487   13461/2013    44  323   25.52)
(smt.stats   65   9411 212208 702347  6327/6005/489   13871/2015    45  338   25.52)
(smt.stats   66   9512 215537 715543  6383/6043/489   14218/2015    45  338   25.62)
ramon: poll                 wall=7.000s usage=6.929s mem=27084KiB load=1.00 rootload=1.00
(smt.stats   67   9623 223144 749624  6384/6061/489   14374/2015    45  338   25.71)
(smt.stats   68   9745 227207 771075  6384/6061/490   14572/2190    46  351   25.71)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   69   9879 232431 792546  6384/6061/490   14745/2190    46  351   25.71)
(smt.delete-inactive-clauses  :num-deleted-clauses 52)
(smt.stats   70  10026 235536 807335  6395/6066/490   14851/2190    46  351   25.81)
(smt.stats   71  10187 236762 816418  6400/6077/490   15071/2190    46  351   25.81)
(smt.stats   72  10364 238689 825704  6405/6081/490   15291/2190    46  351   25.81)
(smt.stats   73  10558 242900 862386  6415/6091/490   15539/2190    46  351   25.91)
(smt.stats   74  10771 250216 902136  6432/6108/494   15937/2254    47  365   25.91)
ramon: poll                 wall=8.000s usage=7.928s mem=27480KiB load=1.00 rootload=1.00
(smt.stats   75  11005 253723 929631  6444/6120/494   16315/2254    47  365   26.00)
(smt.stats   76  11262 265182 980659  6538/6136/494   16665/2296    48  406   26.10)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11544 270061 1020802  6735/6212/494   17168/2300    48  406   26.19)
(smt.stats   78  11645 271710 1028250  6819/6426/494   17322/2300    48  406   26.29)
ramon: poll                 wall=9.000s usage=8.928s mem=27816KiB load=1.00 rootload=1.00
(smt.stats   79  11756 274706 1046743  6972/6527/495   17515/2382    49  409   26.29)
(smt.stats   80  11878 280140 1077058  7108/6658/495   17686/2385    49  409   26.38)
(smt.stats   81  12012 284105 1089132  7133/6792/497   18074/2406    50  411   26.38)
ramon: poll                 wall=10.000s usage=9.928s mem=28152KiB load=1.00 rootload=1.00
(smt.stats   82  12159 290479 1125403  7237/6822/497   18429/2406    50  411   26.57)
(smt.stats   83  12320 295099 1163025  7323/6930/497   18720/2406    50  411   26.67)
(smt.stats   84  12497 299322 1182252  7419/7090/501   19182/2495    51  424   26.77)
(smt.stats   85  12691 306617 1199265  7438/7099/501   19520/2495    51  424   26.77)
(smt.stats   86  12904 309456 1231100  7441/7112/501   19940/2495    51  424   26.86)
(smt.stats   87  13138 313658 1262575  7451/7123/502   20430/2650    52  434   26.86)
ramon: poll                 wall=11.000s usage=10.928s mem=28440KiB load=1.00 rootload=1.00
(smt.stats   88  13395 318797 1297313  7458/7130/502   20818/2650    52  434   27.05)
(smt.stats   89  13677 325191 1342739  7460/7132/502   21473/2703    53  439   27.05)
(smt.stats   90  13987 333194 1398607  7468/7139/502   21984/2703    53  439   27.92)
(smt.stats   91  14088 336289 1420955  7468/7139/502   22146/2703    53  439   27.92)
(smt.stats   92  14199 338739 1436268  7494/7143/502   22306/2703    53  439   27.92)
(smt.stats   93  14321 340915 1467571  7500/7171/502   22466/2703    53  439   28.01)
ramon: poll                 wall=12.006s usage=11.932s mem=29572KiB load=1.00 rootload=1.00
(smt.stats   94  14455 342725 1484293  7507/7172/502   22781/2703    53  439   28.01)
(smt.stats   95  14602 347724 1513944  7531/7183/502   23001/2703    53  439   28.01)
(smt.stats   96  14763 354130 1530071  7613/7213/502   23275/2704    53  439   28.11)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   97  14940 359285 1557394  7789/7300/502   23556/2705    53  439   28.11)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 361372 1572928  7842/7513/503   23848/2882    54  462   28.30)
ramon: poll                 wall=13.000s usage=12.926s mem=30064KiB load=1.00 rootload=1.00
(smt.stats   99  15347 368068 1619513  7876/7541/508   24387/2882    54  462   28.40)
(smt.stats  100  15581 371743 1653818  7899/7553/508   24839/2882    54  462   28.49)
(smt.stats  101  15838 376693 1677043  7907/7576/508   25265/3001    55  533   28.49)
(smt.stats  102  16120 384458 1705247  7980/7603/511   26094/3002    55  533   28.59)
ramon: poll                 wall=14.000s usage=13.926s mem=30464KiB load=1.00 rootload=1.00
(smt.stats  103  16430 394213 1752935  8175/7687/511   26733/3008    55  533   28.78)
(smt.stats  104  16770 404221 1781026  8285/7910/511   27384/3258    56  548   29.06)
(smt.stats  105  16871 408349 1801827  8393/8009/511   27654/3260    56  548   29.06)
ramon: poll                 wall=15.000s usage=14.926s mem=30884KiB load=1.00 rootload=1.00
(smt.stats  106  16982 410718 1814622  8460/8087/511   27902/3260    56  548   29.20)
(smt.stats  107  17104 413463 1832851  8468/8139/511   28277/3260    56  548   29.20)
(smt.stats  108  17238 418021 1850447  8612/8141/511   28670/3261    56  548   29.30)
ramon: poll                 wall=16.000s usage=15.926s mem=31044KiB load=1.00 rootload=0.99
(smt.stats  109  17385 423893 1880725  8863/8322/512   29232/3443    57  550   29.49)
(smt.stats  110  17546 426099 1893202  8895/8550/512   29717/3445    57  550   29.49)
(smt.stats  111  17723 430689 1926274  8901/8572/513   30108/3612    58  560   29.58)
(smt.stats  112  17917 437080 1975751  8915/8583/514   30484/3612    58  560   29.58)
(smt.stats  113  18130 440585 1991946  8922/8593/514   31105/3678    59  566   29.77)
ramon: poll                 wall=17.000s usage=16.926s mem=31452KiB load=1.00 rootload=1.00
(smt.stats  114  18364 448228 2052311  8941/8608/514   31743/3678    59  566   29.77)
(smt.stats  115  18621 454525 2096727  8959/8614/514   32120/3679    59  566   29.87)
(smt.stats  116  18903 462454 2166477  8996/8664/514   33105/3679    59  566   29.96)
ramon: poll                 wall=18.000s usage=17.925s mem=31720KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  117  19213 471512 2235257  9020/8675/514   33905/3680    59  566   30.06)
(smt.stats  118  19553 482892 2327603  9029/8699/516   35072/4112    60  582   30.16)
ramon: poll                 wall=19.000s usage=18.925s mem=31968KiB load=1.00 rootload=1.00
(smt.stats  119  19926 494833 2429029  9105/8767/517   36051/4282    61  598   30.35)
(smt.delete-inactive-clauses  :num-deleted-clauses 9)
(smt.stats  120  20027 496563 2437578  9393/9064/517   36440/4282    61  598   30.35)
(smt.stats  121  20138 499589 2464757  9397/9068/517   36638/4282    61  598   30.44)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 0&2097152
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 0 := 425984 >>l 44
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 0&2097152
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 2 := 13 >>l 29
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 0&2097152
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 0 := 1048576 >>l 44
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 0&2097152
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 17 := 32 >>l 29
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 0&2097152
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 0 := 1048576 >>l 44
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 0&2097152
lshr: (lshr[49] (bv2int %0) (mod (bv2int %1) 49)) 17 := 32 >>l 29
(smt.stats  122  20260 502024 2501844  9422/9077/517   36799/4282    61  598   30.44)
band: (band[49] (lshr[64] (* 32768 #112) (mod #329 64)) (if (= #626 63) 36893488147419103232 (if #628 18446744073709551616 #752))) 0 := 0&2097152
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 15 #113 #328) 64)) 5629499534213120 := 87960930254848 >>l 44
(smt.stats  123  20394 504240 2526384  9479/9138/529   36983/4382    62  601   30.44)
(smt.stats  124  20541 508286 2561138  9495/9160/529   37260/4382    62  601   30.54)
(smt.stats  125  20702 514085 2614461  9509/9169/529   37589/4382    62  601   30.54)
ramon: poll                 wall=20.000s usage=19.925s mem=32380KiB load=1.00 rootload=1.00
(smt.stats  126  20879 523976 2684118  9529/9197/529   38567/4382    62  601   30.63)
ramon: end                  Fri Nov  1 17:25:11 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.993s
ramon: group.utime          19.977s
ramon: group.stime          0.016s
ramon: group.mempeak        32892KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
