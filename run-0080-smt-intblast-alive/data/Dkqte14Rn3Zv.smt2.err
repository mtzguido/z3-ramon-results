ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:54:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28413 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1275
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Dkqte14Rn3Zv.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4128217
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4626   3288  1250/1117/91      93/9     4   15   19.23)
(smt.stats    1    202   6352   5077  1854/1658/91     190/15     4   15   19.23)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 36028797018963968 := 36028797018963917 << 47
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 36028797018963968 := 131057 << 47
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 70368744177663&131056
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 70368744177663&131056
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 36028797018963968 := 131057 << 47
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 103 := 70368744177663&103
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 103 := 102 << 47
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 70368744177663 := 70368744177663&14355223812243456
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 70368744177662 := 70368744177663&14355223812243456
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 70368744177662 := 70368744177663&14355223812243456
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 70368744177662 := 70368744177663&70368744177763
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 70368744177662 := 70368744177663&70368744177763
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 70368744177662 := 70368744177663&70368744177818
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 2 := 70368744177663&488
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 8 := 70368744177663&104
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&708
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&1920
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 2 := 70368744177663&3073
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 2 := 70368744177663&323
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 2 := 70368744177663&2688
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 2 := 70368744177663&2688
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 2 := 70368744177663&323
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 2 := 70368744177663&2688
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&600
(smt.stats    2    313   7275   6098  2290/2013/133     318/24     5   16   19.82)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&323
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&324
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&324
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&324
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&268
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&268
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&268
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 70368744177663&268
(smt.stats    3    414   8020   6975  2500/2179/148     463/28     5   16   20.01)
(smt.stats    4    525   9684  10249  2582/2345/198     586/112    10   64   20.01)
(smt.stats    5    647  14009  16890  2588/2350/199     718/112    10   64   20.12)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 562949953421311&17
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 108086391056891921 := 131665 << 50
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 562949953421311&17
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 108086391056891921 := 131720 << 50
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 562949953421311&17
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 108086391056891921 := 131665 << 50
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 16 := 562949953421311&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 108086391056891920 := 131665 << 50
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 16 := 562949953421311&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 108086391056891920 := 131665 << 50
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16114  20453  2658/2376/199     852/125    11   65   20.22)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 562949953421311&0
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 562949953421312 := 132160 << 50
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 562949953421311&0
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 562949953421311 := 132160 << 50
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 562949953421311&0
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 562949953421311 := 132160 << 50
(smt.stats    7    859  17308  21710  2805/2436/204     986/144    12   66   20.31)
(smt.stats    8    981  19588  24323  2882/2632/213    1134/157    13   70   20.31)
(smt.stats    9   1115  21900  28123  2900/2648/216    1278/185    15   82   20.31)
(smt.stats   10   1216  26666  35529  2931/2677/216    1375/185    15   82   20.31)
(smt.stats   11   1327  31309  43103  2937/2680/220    1405/206    16  175   20.50)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 2047&336
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 2047&336
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 2047&336
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  34969  49557  2969/2716/242    1549/215    17  177   20.50)
(smt.stats   13   1583  40023  54080  2972/2719/246    1702/216    17  177   20.50)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 511&22517998136852480
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2184245819274690560 := 165780 << 10
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 511&22517998136852480
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2184245819274690560 := 165780 << 10
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 511&22517998136852480
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2184245819274690560 := 165780 << 10
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 511&22517998136852480
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2184245819274690560 := 165780 << 10
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 511&22517998136852480
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2184245819274690560 := 165780 << 10
(smt.stats   14   1730  44815  62583  3055/2723/246    1896/242    18  199   20.70)
ramon: poll                 wall=1.000s usage=0.992s mem=21964KiB load=0.99 rootload=0.97
(smt.stats   15   1831  45399  63460  3162/2831/251    2010/282    19  200   20.99)
(smt.stats   16   1942  46805  66321  3423/3020/251    2162/283    19  200   20.99)
(smt.stats   17   2064  49656  70795  3469/3207/255    2339/312    20  201   21.08)
(smt.stats   18   2198  55104  81106  3480/3217/256    2475/354    21  205   21.08)
(smt.stats   19   2345  60537  89856  3514/3240/257    2672/377    23  208   21.08)
(smt.stats   20   2506  65133  99186  3563/3278/257    2910/377    23  208   21.18)
(smt.stats   21   2607  68795 106497  3645/3305/257    3038/380    23  208   21.28)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721024
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721024
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721024
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721152
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721024
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721152
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721024
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721152
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721664
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721408
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721152
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721024
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721664
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972722688
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972721664
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972722688
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972726784
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972734976
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972722688
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972722688
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972734976
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972751360
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972734976
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972751360
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972882432
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972882432
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347973144576
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347972882432
ramon: poll                 wall=2.000s usage=1.991s mem=22652KiB load=1.00 rootload=1.00
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347976814592
(smt.stats   22   2718  70198 110322  3862/3460/300    3267/455    24  225   21.56)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347981238528
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 1099511627775&20355347981254912
(smt.stats   23   2840  71384 114070  4209/3736/387    3612/459    24  225   21.67)
(smt.stats   24   2974  73943 121280  4546/4273/389    4170/705    26  248   21.86)
(smt.stats   25   3121  79304 139589  4736/4310/390    4609/708    26  248   22.15)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 8796093022207&36028797017940223
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 8796093022207&36028797017940223
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 8796093022207&36028797017940223
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 8796093022207&36028797017940223
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 8796093022207&36028797017940223
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 8796093022207&36028797017940223
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 8796093022207&36028797017940223
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 17 := 8796093022207&36028797017940479
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 19 := 8796093022207&36028797017940479
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 19 := 8796093022207&36028797017940479
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 19 := 8796093022207&36028797017940479
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 19 := 8796093022207&36028797017940479
(smt.stats   26   3282  81858 145374  5282/4495/391    4830/972    27  248   22.34)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 23 := 8796093022207&36028797017956863
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 31 := 8796093022207&36028797017956863
(smt.stats   27   3459  86279 157703  5572/5079/401    5354/975    27  248   22.54)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560  91279 162130  5614/5355/406    5483/1033    28  251   22.54)
(smt.stats   29   3671  98247 184126  5634/5375/408    6083/1525    29  256   22.66)
(smt.stats   30   3793 103718 199517  5699/5426/408    6208/1525    29  256   22.78)
ramon: poll                 wall=3.000s usage=2.991s mem=24092KiB load=1.00 rootload=1.00
(smt.stats   31   3927 113279 209604  5701/5428/408    6341/1525    29  256   22.78)
(smt.stats   32   4074 118793 213684  5708/5435/408    6710/1525    29  256   22.92)
(smt.stats   33   4235 125414 241380  5721/5448/408    7197/1525    29  256   22.92)
(smt.stats   34   4412 139687 302894  5734/5453/409    7465/1917    30  259   23.01)
(smt.stats   35   4606 147908 327186  5748/5470/409    8042/1918    30  259   23.01)
(smt.stats   36   4707 153429 341478  5751/5478/410    8220/2204    31  265   23.31)
(smt.stats   37   4818 156587 352572  5804/5480/410    8418/2205    31  265   23.44)
(smt.stats   38   4940 160106 362127  5996/5594/410    8675/2206    31  265   23.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 1235)
(smt.stats   39   5074 165657 377468  6027/5728/411    7924/2279    32  271   23.63)
(smt.stats   40   5221 173757 409927  6034/5734/411    8302/2282    32  271   23.84)
(smt.stats   41   5382 179953 425014  6059/5742/412    8643/2437    33  281   23.84)
ramon: poll                 wall=4.000s usage=3.991s mem=25272KiB load=1.00 rootload=1.00
(smt.stats   42   5559 185328 434699  6089/5790/415    8858/2449    34  291   23.84)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 153 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 81 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 97 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 97 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 129 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 193 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 193 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 193 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 193 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 193 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 65 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 65 := 2251799813685247&321
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 321 := 2251799813685247&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2053641430080946497 := 20356447484364967 << 52
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 321 := 2251799813685247&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2053641430080946497 := 20356447484364967 << 52
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 321 := 2251799813685247&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2053641430080946497 := 20356447484364967 << 52
(smt.stats   43   5753 191392 456315  6283/5795/415    9171/2455    34  291   23.93)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 257 := 2251799813685247&257
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2125699024118874369 := 20356447484364967 << 52
(smt.stats   44   5966 198782 479510  6347/6025/423    9593/2507    35  295   23.93)
(smt.stats   45   6067 204364 489875  6362/6061/423    9869/2597    36  309   24.05)
(smt.stats   46   6178 211202 510379  6385/6070/423   10190/2598    36  309   24.05)
(smt.stats   47   6300 218883 532300  6552/6184/424   10553/2777    37  310   24.15)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 223449 550885  6763/6462/427   11060/2848    38  311   24.15)
(smt.stats   49   6581 226968 563125  6792/6477/430   11426/3002    39  334   24.26)
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2377900603251621889 := 20356482952449216 << 1
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2377900603251621889 := 20356482952449216 << 1
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2413929400270585857 := 20391670549007616 << 1
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 2413929400270585857 := 20391670549007616 << 1
ramon: poll                 wall=5.002s usage=4.992s mem=25792KiB load=1.00 rootload=1.00
(smt.stats   50   6742 230757 578630  6962/6598/438   11676/3007    39  334   24.45)
(smt.stats   51   6919 233256 593496  7175/6676/438   11936/3048    40  338   24.64)
(smt.stats   52   7113 242045 615695  7305/7002/438   12372/3048    40  338   24.74)
ramon: poll                 wall=6.000s usage=5.990s mem=26320KiB load=1.00 rootload=0.99
(smt.stats   53   7326 247570 650665  7597/7179/442   13183/3166    41  339   24.83)
(smt.stats   54   7560 253216 682300  7706/7321/442   13924/3298    42  346   25.02)
(smt.stats   55   7661 255125 694015  7872/7409/442   14177/3298    42  346   25.12)
ramon: poll                 wall=7.000s usage=6.989s mem=26676KiB load=1.00 rootload=1.00
(smt.stats   56   7772 257974 706080  8065/7602/442   14369/3299    42  346   25.21)
(smt.stats   57   7894 265328 716342  8071/7768/442   14513/3299    42  346   25.21)
(smt.stats   58   8028 270689 741309  8084/7775/442   14854/3300    42  346   25.21)
(smt.stats   59   8175 274896 760058  8209/7785/442   15022/3302    42  346   25.31)
(smt.stats   60   8336 279804 767810  8375/7969/442   15223/3304    42  346   25.31)
(smt.stats   61   8513 284388 815432  8385/8068/442   16092/3304    42  346   25.40)
(smt.stats   62   8707 295317 871208  8398/8081/442   16500/3304    42  346   25.50)
ramon: poll                 wall=8.000s usage=7.989s mem=26992KiB load=1.00 rootload=1.00
(smt.stats   63   8920 304573 951006  8413/8096/446   17258/4368    44  383   25.50)
(smt.stats   64   9154 315438 974405  8487/8104/446   17903/4374    44  383   25.60)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9411 333229 1090530  8506/8187/447   18579/4460    45  385   25.80)
(smt.stats   66   9512 335377 1101702  8525/8200/447   18786/4460    45  385   25.80)
(smt.stats   67   9623 342239 1114426  8569/8214/447   18938/4463    45  385   25.80)
ramon: poll                 wall=9.000s usage=8.989s mem=27276KiB load=1.00 rootload=1.00
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 4 := 63&20356447484348672
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 2 := 63&20356447484348672
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 63&20356447484348672
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 10576793974040791296 := 20358557299985472 << 7
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 63&20356447484348672
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 10576793974040791296 := 20358557299985472 << 7
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 63&20356447484348672
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 12306176230951061760 := 20358557300018912 << 7
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 63&20356447484348672
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 12306176230951061760 := 28211331683420992 << 7
band: (band[55] (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #912)) (shl[64] (bv2int %0) (mod #953 64))) 0 := 63&20356447484348672
shl: (shl[64] (bv2int %0) (mod (+ #110 #952) 64)) 12306176230951061760 := 28211331683420992 << 7
(smt.stats   68   9745 344414 1123678  8848/8502/454   19085/4670    46  390   25.99)
(smt.stats   69   9879 348433 1152486  9013/8547/454   19336/4673    46  390   26.22)
(smt.delete-inactive-clauses  :num-deleted-clauses 190)
(smt.stats   70  10026 354536 1190621  9057/8711/454   19384/4675    46  390   26.22)
ramon: poll                 wall=10.000s usage=9.988s mem=28024KiB load=1.00 rootload=1.00
(smt.stats   71  10187 362156 1235857  9139/8752/454   19916/4678    46  390   26.51)
(smt.stats   72  10364 372603 1299166  9305/8972/455   20475/5176    47  391   26.51)
(smt.stats   73  10558 380962 1333293  9462/9143/456   20905/5176    47  391   26.61)
ramon: poll                 wall=11.001s usage=10.989s mem=28444KiB load=1.00 rootload=1.00
(smt.stats   74  10771 392810 1420744  9714/9144/456   21447/5229    48  392   26.80)
ramon: poll                 wall=12.000s usage=11.986s mem=28880KiB load=1.00 rootload=1.00
(smt.stats   75  11005 401712 1473613 10062/9430/456   22631/5234    48  392   27.09)
ramon: poll                 wall=13.000s usage=12.985s mem=29464KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   76  11262 415214 1576470 10551/10002/457   23981/5563    49  392   27.37)
(smt.stats   77  11544 427940 1657669 10826/10475/458   24979/5634    50  393   27.56)
ramon: poll                 wall=14.000s usage=13.985s mem=29576KiB load=1.00 rootload=1.00
(smt.stats   78  11645 433048 1696321 10871/10519/458   25265/5635    50  393   27.56)
(smt.stats   79  11756 441375 1743512 10915/10555/458   25980/5635    50  393   27.66)
(smt.stats   80  11878 447194 1776440 10922/10603/458   26249/5635    50  393   27.66)
(smt.stats   81  12012 451721 1797799 10933/10614/463   26570/5907    51  433   27.66)
(smt.stats   82  12159 459600 1846991 10956/10637/463   27591/5907    51  433   27.87)
ramon: poll                 wall=15.000s usage=14.985s mem=29496KiB load=1.00 rootload=1.00
(smt.stats   83  12320 469026 1916203 11072/10639/463   28049/5909    51  433   27.96)
(smt.stats   84  12497 473807 1947420 11257/10770/463   28655/5911    51  433   28.06)
(smt.stats   85  12691 482506 1968239 11285/10962/463   28988/5911    51  433   28.15)
(smt.stats   86  12904 494860 2052208 11314/10977/464   30152/6820    52  455   28.25)
ramon: poll                 wall=16.000s usage=15.985s mem=29976KiB load=1.00 rootload=1.00
(smt.stats   87  13138 506988 2112819 11343/11020/464   30652/6820    52  455   28.25)
(smt.stats   88  13395 520320 2250070 11360/11035/464   31450/6824    52  455   28.35)
ramon: poll                 wall=17.000s usage=16.985s mem=30180KiB load=1.00 rootload=1.00
(smt.stats   89  13677 538209 2395063 11397/11059/464   32059/6825    52  455   28.35)
(smt.stats   90  13987 548628 2449816 11734/11084/464   33180/6837    52  455   28.63)
(smt.stats   91  14088 554370 2469390 11799/11454/464   33493/6838    52  455   28.63)
ramon: poll                 wall=18.000s usage=17.983s mem=30728KiB load=1.00 rootload=0.99
(smt.stats   92  14199 559821 2498625 11942/11498/464   33808/6842    52  455   28.72)
(smt.stats   93  14321 567294 2553591 12086/11628/464   34187/6842    52  455   28.72)
(smt.stats   94  14455 572755 2602686 12268/11803/464   34667/6844    52  455   28.82)
(smt.stats   95  14602 578040 2649978 12275/11956/465   35145/7693    53  457   28.82)
ramon: poll                 wall=19.000s usage=18.983s mem=30580KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   96  14763 586363 2727984 12323/11963/465   35838/7693    53  457   28.93)
(smt.stats   97  14940 593945 2780206 12600/12024/465   36832/7699    53  457   29.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 127)
(smt.stats   98  15134 599337 2815994 12688/12291/465   37278/7700    53  457   29.22)
ramon: poll                 wall=20.000s usage=19.983s mem=31160KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:54:37 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.993s
ramon: group.utime          19.969s
ramon: group.stime          0.024s
ramon: group.mempeak        31416KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
