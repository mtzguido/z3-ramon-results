ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:03:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41794 MiB
ramon: sys.mem.avail        61385 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6gmLWIhAy1bC.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3690124
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   230/230     0/0  69       0    18.53   0.00)
(sat.stats    107    558    0   230/230   107/31  69       0    18.75   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 400 :time 0.00)
(sat.stats    107    558    0   230/230   107/31  69       0    18.75   0.00)
(sat.stats    107    558    0   230/230   107/31  69       0    18.75   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 402018.84 :time 0.00)
(sat.stats    107    558    0   232/232    68/30  69       0    18.84   0.00)
(sat.stats    119    674    1   232/232    80/39  69       0    18.84   0.00)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    122    728    2   232/232    83/39  69       0    18.84   0.01)
(sat.stats    125    822    3   232/232    86/41  69       0    18.84   0.01)
(sat.stats    137   1230    4   232/232    98/47  69       0    18.84   0.01)
(sat.stats    140   1329    5   232/232   101/47  69       0    18.84   0.01)
(sat.stats    143   1406    6   232/232   104/47  69       0    18.84   0.01)
(sat.stats    146   1484    7   232/232   107/47  69       0    18.84   0.01)
(sat.stats    149   1548    8   232/232   110/48  69       0    18.84   0.01)
(sat.stats    152   1606    9   232/232   113/48  69       0    18.84   0.01)
(sat.stats    155   1664   10   232/232   116/49  69       0    18.84   0.01)
(sat.stats    158   1767   11   232/232   119/52  69       0    18.84   0.01)
(sat.stats    161   1873   12   232/232   122/55  69       0    18.84   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    352   5814   19   543/543   313/145  69       0    20.02   0.37)
(sat.stats    355   5825   20   570/570   316/145  69       0    20.02   0.38)
ramon: poll                 wall=1.000s usage=0.999s mem=21800KiB load=1.00 rootload=0.99
ramon: poll                 wall=2.000s usage=1.999s mem=22056KiB load=1.00 rootload=1.00
(sat.stats    653   7789   35  3754/3754   631/153  69       0    20.79   2.18)
(sat.stats    710   8101   52  4891/4891   689/153  69       0    20.98   2.32)
ramon: poll                 wall=3.000s usage=2.998s mem=23080KiB load=1.00 rootload=1.00
(sat.stats   1161  11392   67  9975/9975  1146/156  69       0    21.98   3.44)
ramon: poll                 wall=4.000s usage=3.998s mem=24360KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 10216 :time 0.00)
(sat.stats   1645  19330  135 22992/22992  1649/233  80       0    23.55   4.51)
ramon: poll                 wall=5.003s usage=5.002s mem=25072KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units        :memory       )
(sat.stats   2502  40584  156 24665/24665  2648/524  80       0    24.06   5.44)
ramon: poll                 wall=6.000s usage=5.998s mem=25328KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.998s mem=25840KiB load=1.00 rootload=1.00
(sat.stats   3597  75448  233 29775/29775  3795/798  80       0    24.82   7.20)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 29087 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 29511 :time 0.00)
ramon: poll                 wall=8.000s usage=7.998s mem=26608KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=26880KiB load=1.00 rootload=1.00
(sat.stats   6620 130445  396 36243/36243  5649/1286  82       0    25.99   9.74)
ramon: poll                 wall=10.000s usage=9.997s mem=27392KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.003s usage=11.001s mem=27904KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.997s mem=28160KiB load=1.00 rootload=1.00
(sat.stats   8091 141195  724 48887/48887  6431/1292  82       0    27.42  12.77)
ramon: poll                 wall=13.000s usage=12.997s mem=28928KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.997s mem=29440KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.997s mem=32060KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.997s mem=34104KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.997s mem=35128KiB load=1.00 rootload=1.00
lshr: (lshr[49] (bv2int %0) (+ 49 (* 562949953421311 #72))) 0 := 34359735690 >>l 24
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 0&33554432
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 63 #586 #590) 64)) 271482880 := 271482880 >>l 38
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 56414 :time 0.00)
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 1 := 1&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 2 := 2&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 4 := 4&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 8 := 8&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 16 := 16&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 32 := 32&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 64 := 64&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 128 := 128&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 256 := 256&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 512 := 512&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 1024 := 1024&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 2048 := 2048&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 4096 := 4096&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 8192 := 8192&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 16384 := 16384&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 32768 := 32768&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 65536 := 65536&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 131072 := 131072&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 262144 := 262144&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 524288 := 524288&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 1048576 := 1048576&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 2097152 := 2097152&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 4194304 := 4194304&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 8388608 := 8388608&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 16777216 := 16777216&33554432
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 1&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 1 := 33554432&1
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 2&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 2 := 33554432&2
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 4&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 4 := 33554432&4
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 8&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 8 := 33554432&8
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 16&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 16 := 33554432&16
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 32&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 32 := 33554432&32
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 64&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 64 := 33554432&64
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 128&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 128 := 33554432&128
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 256&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 256 := 33554432&256
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 512&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 512 := 33554432&512
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 1024&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 1024 := 33554432&1024
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 2048&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 2048 := 33554432&2048
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 4096&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 4096 := 33554432&4096
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 8192&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 8192 := 33554432&8192
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 16384&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 16384 := 33554432&16384
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 32768&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 32768 := 33554432&32768
 (sat-cleaner :elim-literals 79 :elim-clauses 0 :cost 62969 :time 0.00)
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 65536&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 65536 := 33554432&65536
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 131072&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 131072 := 33554432&131072
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 262144&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 262144 := 33554432&262144
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 524288&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 524288 := 33554432&524288
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 1048576&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 1048576 := 33554432&1048576
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 2097152&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 2097152 := 33554432&2097152
ramon: poll                 wall=18.000s usage=17.997s mem=37944KiB load=1.00 rootload=0.99
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 4194304&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 4194304 := 33554432&4194304
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 8388608&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 8388608 := 33554432&8388608
band: (band[49] (lshr[49] (bv2int %0) (+ 49 #477)) (if (= #97 48) 281474976710656 (if #481 140737488355328 #575))) 0 := 16777216&33554432
band: (band[49] (if (= #303 63) 9223372036854775808 (if #454 4611686018427387904 #451)) (lshr[64] (* 16384 #78) (mod #593 64))) 16777216 := 33554432&16777216
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 64012 :time 0.00)
ramon: poll                 wall=19.000s usage=18.988s mem=38308KiB load=0.99 rootload=0.99
ramon: poll                 wall=20.003s usage=19.992s mem=38564KiB load=1.00 rootload=1.01
ramon: end                  Wed Dec 25 15:03:38 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.999s
ramon: group.utime          19.979s
ramon: group.stime          0.020s
ramon: group.mempeak        38564KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
