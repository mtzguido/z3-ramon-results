ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:41:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27975 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YCyV160hsIic.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             844081
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 1 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 1 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 1 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4611686018427387904 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4611686018427387904 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4611686018427387904 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&126
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 5 := 7&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 13835058055282163717 := 252 << 59
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   59.1716     10000        49          0            1        2)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 5 := 7&2305843009213693950
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&126
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 13835058055282163712 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 7 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 6 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 6 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 1 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 1 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
(smt.stats    0    101   1238    913  1358/1204/156      83/11    12   31   52.04)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 2 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 2 := 7&2305843009213693952
(smt.stats    1    202   2206   2249  1476/1327/192     177/13    14   38   52.24)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&323
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 323 := 322 << 24
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&323
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 323 := 322 << 24
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&323
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 323 := 322 << 24
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263552
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 5402263554 := 161 << 25
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263547
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 5402263547 := 322 << 24
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263552
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 5402263554 := 161 << 25
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263552
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 5402263554 := 161 << 25
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263552
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 5402263554 := 161 << 25
(smt.stats    2    313   3985   3859  1565/1406/206     297/20    16   47   52.53)
(sat.ddfw       1      1   30.8673     20001        98          1            1        3)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 320 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 320 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 328 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&4328521720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4328521720 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&4328521736
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4328521736 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 5402263544 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&144115188075855872
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 144115188075855880 := 129 << 57
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&144115188075855872
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 144115188075855880 := 129 << 57
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&144115188075855872
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 144115188075855880 := 129 << 57
(smt.stats    3    414   6430   6913  1684/1504/220     430/25    17   52   52.74)
(sat.ddfw       1      1   32.7869     40001       196          2            1        5)
(smt.stats    4    525   8104   9492  1763/1558/229     557/47    19   69   52.94)
ramon: poll                 wall=1.000s usage=0.853s mem=55340KiB load=0.85 rootload=0.84
(sat.ddfw       1      1   30.6435     70001       343          3            1        8)
(sat.ddfw       1      1   26.1952    110001       539          4            1       12)
(smt.stats    5    647   9696  11711  1843/1638/232     695/58    21   72   53.52)
ramon: poll                 wall=2.000s usage=1.834s mem=55740KiB load=0.98 rootload=0.97
(sat.ddfw       1      1   24.7397    160000       784          5            1       17)
(sat.ddfw       1      1   21.7395    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  10141  12107  2058/1823/232     807/64    22   73   53.71)
ramon: poll                 wall=3.003s usage=2.836s mem=56144KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   19.3691    290001      1421          7            1       30)
(smt.stats    7    859  10738  13106  2335/2095/232     952/64    22   73   53.71)
ramon: poll                 wall=4.000s usage=3.831s mem=56156KiB load=1.00 rootload=0.99
(smt.stats    8    981  12838  17715  2479/2225/235    1109/82    23   79   53.71)
(sat.ddfw       1      1   17.3762    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.990s mem=55980KiB load=1.16 rootload=1.16
(smt.stats    9   1115  14432  19709  2617/2307/235    1277/132    24   82   53.80)
(sat.ddfw       1      1   15.8898    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=5.986s mem=56028KiB load=1.00 rootload=1.00
(smt.stats   10   1216  16113  22260  2845/2509/235    1410/133    24   82   53.80)
(sat.ddfw       1      1   14.4321    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=6.989s mem=56136KiB load=1.00 rootload=1.00
(smt.stats   11   1327  18619  27263  3016/2787/237    1541/193    25   86   53.90)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  21199  31931  3127/2936/252    1684/203    26   87   53.99)
ramon: poll                 wall=8.000s usage=8.166s mem=56220KiB load=1.18 rootload=1.17
(smt.stats   13   1583  23795  36265  3186/2945/253    1848/213    27  101   54.09)
(sat.ddfw       1      1   13.5036    670001      3284         11            1       68)
(smt.stats   14   1730  28675  48404  3266/3003/254    2010/248    28  105   54.18)
ramon: poll                 wall=9.000s usage=9.168s mem=56392KiB load=1.00 rootload=1.01
(smt.stats   15   1831  30096  51835  3315/3098/254    2122/250    28  105   54.18)
(sat.ddfw       1      1   12.4352    790001      3872         12            1       80)
(smt.stats   16   1942  32104  57792  3362/3145/254    2242/252    28  105   54.26)
ramon: poll                 wall=10.000s usage=10.166s mem=56760KiB load=1.00 rootload=1.00
(smt.stats   17   2064  35870  61336  3419/3216/254    2392/256    28  105   54.26)
ramon: poll                 wall=11.003s usage=11.170s mem=56548KiB load=1.00 rootload=1.00
(smt.stats   18   2198  38954  65791  3493/3244/254    2553/258    28  105   54.35)
(sat.ddfw       1      1   11.5238    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=12.170s mem=56672KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=13.172s mem=56676KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.7494   1060001      5196         14            1      108)
(smt.stats   19   2345  39595  66876  3727/3341/254    2718/258    28  105   54.45)
ramon: poll                 wall=14.003s usage=14.175s mem=56816KiB load=1.00 rootload=1.00
(smt.stats   20   2506  41193  69471  3932/3588/254    2956/267    28  105   54.64)
(smt.stats   21   2607  45258  76314  3992/3758/254    3076/270    28  105   54.64)
(sat.ddfw       1      1   10.0793   1210001      5931         15            1      123)
ramon: poll                 wall=15.003s usage=15.175s mem=56848KiB load=1.00 rootload=1.00
(smt.stats   22   2718  49119  83394  4092/3821/254    3278/270    28  105   54.74)
ramon: poll                 wall=16.000s usage=16.171s mem=56968KiB load=1.00 rootload=1.00
(smt.stats   23   2840  53658  91643  4132/3909/258    3455/349    29  127   54.74)
(smt.stats   24   2974  57866  97170  4152/3956/258    3605/349    29  127   54.74)
(smt.stats   25   3121  61081 103583  4197/3981/258    3792/355    29  127   54.83)
(sat.ddfw       1      1   9.48654   1370001      6715         16            1      139)
ramon: poll                 wall=17.000s usage=17.170s mem=57116KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=18.171s mem=57236KiB load=1.00 rootload=1.00
(smt.stats   26   3282  65580 110862  4341/4028/259    4060/395    30  128   55.06)
(smt.stats   27   3459  69764 120155  4391/4183/259    4423/398    30  128   55.06)
(smt.stats   28   3560  72801 127043  4415/4223/260    4578/448    31  132   55.15)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946351
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946351
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946350
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946350
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946350
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946358
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946452
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 6917531226664334356 := 2 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946364
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946364
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946348
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946348
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946348
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946340
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 6917531226664334244 := 2 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946340
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 11529217245091722148 := 2 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946340
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 11529217245091722148 := 2 << 60
(smt.stats   29   3671  75347 134122  4491/4287/292    4807/478    32  159   55.15)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946340
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946469
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946545
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946545
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946561
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 2305845208236946561 := 0 << 61
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946545
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946545
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946497
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 2305845208236946497 := 0 << 61
(smt.stats   30   3793  77080 140277  4626/4337/292    5044/485    32  159   55.25)
ramon: poll                 wall=19.000s usage=19.170s mem=57936KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   8.95397   1540001      7549         17            1      156)
(smt.stats   31   3927  79722 147768  4696/4438/327    5202/515    33  171   55.54)
ramon: poll                 wall=20.000s usage=20.165s mem=57832KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 22:41:45 2024
ramon: root.execname        z3
ramon: root.utime           20.170s
ramon: root.stime           0.010s
ramon: group.total          20.191s
ramon: group.utime          20.171s
ramon: group.stime          0.020s
ramon: group.mempeak        58092KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.025s
ramon: loadavg              1.01
