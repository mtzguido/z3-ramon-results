ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:31:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29511 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2HWJKdLN4ijt.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             602436
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   92.5926     10000        49          0            1        2)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 1 := 1&2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 2 := 3 << 3
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 2 := 3 << 3
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 1 := 1&8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 2&8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 4 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 4 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 3 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 3 := 3&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 5 << 5
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 5 << 5
(smt.stats    0    101   4182    598  1182/1029/104      93/18     6   20   52.07)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 3 := 3&32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 2&32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&32
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 6 << 6
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&32
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 6 << 6
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&32
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 6 << 6
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&64
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 7 << 7
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&64
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 7 << 7
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&128
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 8 << 8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&128
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 8 << 8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 8 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 8 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 8 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 3 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 8&256
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 8 := 9 << 9
(smt.stats    1    202   6211   1389  2206/1937/144     186/38     9   35   52.65)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&274877906944
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&274877906944
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&274877906944
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 38 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 0 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 0 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 1 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 2 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 4 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906944 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906944 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906943 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906942 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906940 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906936 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 16 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 32 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 64 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 128 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 256 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 512 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 1536 := 3848290697216&274877906944
(smt.stats    2    313   7777   2340  2438/2164/248     355/62    12   58   53.33)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 13840 := 3848290697216&274877906944
(sat.ddfw       1      1   47.1745     20001        98          1            1        3)
(smt.stats    3    414   9140   4280  2726/2488/256     573/96    14   66   53.52)
(sat.ddfw       1      1   47.8469     40001       196          2            1        5)
(smt.stats    4    525  11482   6451  2765/2526/274     692/120    17   84   53.61)
(sat.ddfw       1      1   41.2088     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=1.092s mem=55916KiB load=1.09 rootload=1.08
(sat.ddfw       1      1    34.965    110001       539          4            1       12)
(smt.stats    5    647  12161   7328  2891/2648/275     801/146    18   99   53.90)
(sat.ddfw       1      1   30.1744    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=2.112s mem=56260KiB load=1.02 rootload=1.02
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats    6    748  12821   8110  3173/2825/277     922/156    19  103   53.90)
(sat.ddfw       1      1   26.3857    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=3.244s mem=56332KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   23.3411    290001      1421          7            1       30)
(smt.stats    7    859  13287   8510  3232/2985/277    1035/160    19  103   54.19)
(smt.stats    8    981  15221  10259  3662/3335/278    1175/162    19  103   54.19)
(sat.ddfw       1      1    20.926    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.240s mem=56912KiB load=1.00 rootload=0.99
(smt.stats    9   1115  18821  17570  3719/3485/291    1343/215    21  111   54.28)
(smt.stats   10   1216  21746  23423  3814/3495/291    1464/216    21  111   54.28)
(sat.ddfw       1      1   18.9673    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.231s mem=56776KiB load=0.99 rootload=0.99
(smt.stats   11   1327  24542  30717  3915/3618/293    1590/233    22  116   54.38)
(sat.ddfw       1      1   17.3822    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27054  38572  4106/3863/298    1733/284    24  133   54.38)
ramon: poll                 wall=6.000s usage=6.235s mem=56984KiB load=1.00 rootload=1.01
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694912&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 549990694912 := 549990694913 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694912&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 549990694912 := 549990694913 << 2
(smt.stats   13   1583  30407  46539  4158/3923/308    1861/305    25  137   54.47)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694911&1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694911&1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694910&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 549990694910 := 549990694912 << 1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 549990694912 << 1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 549990694912 << 1
(smt.stats   14   1730  35038  49995  4283/3930/308    2051/307    25  137   54.76)
(sat.ddfw       1      1   15.9652    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.518s mem=57404KiB load=1.28 rootload=1.28
(smt.stats   15   1831  38052  54709  4482/4144/319    2164/324    26  139   54.76)
(smt.stats   16   1942  39657  58342  4626/4335/319    2269/330    27  140   54.76)
ramon: poll                 wall=8.003s usage=8.615s mem=57420KiB load=1.09 rootload=1.10
(sat.ddfw       1      1   14.9906    790001      3872         12            1       80)
(smt.stats   17   2064  42228  63583  4708/4414/319    2455/335    27  140   54.95)
ramon: poll                 wall=9.000s usage=9.615s mem=57444KiB load=1.00 rootload=1.00
(smt.stats   18   2198  46206  70019  4875/4487/321    2627/401    28  144   55.04)
(sat.ddfw       1      1   13.8948    920001      4509         13            1       93)
(smt.stats   19   2345  51087  83282  5041/4702/322    2796/439    29  146   55.04)
ramon: poll                 wall=10.000s usage=10.613s mem=57572KiB load=1.00 rootload=1.00
(smt.stats   20   2506  55631  95430  5137/4834/327    3080/463    30  149   55.23)
(sat.ddfw       1      1   12.9762   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=11.613s mem=57740KiB load=1.00 rootload=1.00
(smt.stats   21   2607  60423 100662  5195/4902/328    3326/564    31  162   55.23)
(smt.stats   22   2718  64444 108801  5253/4975/328    3496/564    31  162   55.46)
ramon: poll                 wall=12.000s usage=12.569s mem=57676KiB load=0.96 rootload=0.95
(smt.stats   23   2840  66996 114698  5365/5030/328    3624/567    31  162   55.55)
(sat.ddfw       1      1   12.1095   1210001      5931         15            1      123)
(smt.stats   24   2974  69564 122824  5458/5214/331    3789/731    32  162   55.55)
(smt.stats   25   3121  74773 138545  5478/5230/331    4043/751    33  172   55.65)
ramon: poll                 wall=13.000s usage=13.561s mem=57808KiB load=0.99 rootload=0.99
(smt.stats   26   3282  80868 154308  5518/5242/333    4193/768    34  175   55.65)
ramon: poll                 wall=14.000s usage=14.544s mem=58164KiB load=0.98 rootload=0.99
(sat.ddfw       1      1   11.4597   1370001      6715         16            1      139)
(smt.stats   27   3459  86503 168539  5658/5412/336    4482/819    36  181   55.74)
(smt.stats   28   3560  90987 181540  5667/5419/336    4582/819    36  181   55.74)
ramon: poll                 wall=15.000s usage=15.502s mem=58344KiB load=0.96 rootload=0.96
(smt.stats   29   3671  93936 200294  5737/5466/337    4683/840    38  187   55.94)
(smt.stats   30   3793  95820 204086  5881/5511/337    4828/843    38  187   56.04)
(sat.ddfw       1      1    10.752   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=16.473s mem=58424KiB load=0.97 rootload=0.97
(smt.stats   31   3927  98259 218962  5926/5676/341    4970/862    40  194   56.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 102646 230440  5928/5678/341    5130/862    40  194   56.04)
ramon: poll                 wall=17.000s usage=17.458s mem=58480KiB load=0.99 rootload=0.98
(smt.stats   33   4235 107934 248917  5968/5681/341    5298/883    41  200   56.20)
(sat.ddfw       1      1   10.1804   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=18.457s mem=58720KiB load=1.00 rootload=1.00
(smt.stats   34   4412 111466 255630  6127/5791/342    5490/892    42  200   56.29)
(smt.stats   35   4606 116621 274710  6184/5919/345    5699/893    42  200   56.29)
(smt.stats   36   4707 118086 279340  6255/5950/345    5794/919    43  209   56.39)
ramon: poll                 wall=19.000s usage=19.707s mem=58784KiB load=1.25 rootload=1.25
(smt.stats   37   4818 121041 288190  6403/6042/345    5922/922    43  209   56.48)
(sat.ddfw       1      1   9.69042   1910001      9362         19            1      193)
(smt.stats   38   4940 124087 291671  6579/6243/345    6059/923    43  209   56.48)
ramon: poll                 wall=20.000s usage=20.717s mem=59176KiB load=1.01 rootload=1.01
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
ramon: end                  Fri Nov  1 21:32:01 2024
ramon: root.execname        z3
ramon: root.utime           20.760s
ramon: root.stime           0.010s
ramon: group.total          20.783s
ramon: group.utime          20.767s
ramon: group.stime          0.016s
ramon: group.mempeak        59184KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.04
