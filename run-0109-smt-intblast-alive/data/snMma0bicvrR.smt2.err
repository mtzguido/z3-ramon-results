ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:00:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40528 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/snMma0bicvrR.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3098346
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 1&1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 1&1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 2 := 3 << 28
(smt.stats    0    101   2213    651  1041/933/119      83/22     8   32   19.07)
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 1&1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 2 := 3 << 28
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 2 := 3 << 28
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 268435456&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 8589934591 := 1 << 28
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 1 := 8321499136&1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 0&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 33 := 32 << 28
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 268435456&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 268435457 := 1 << 28
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 1 := 268435456&1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 268435456&1
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 1 := 268435456&1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 8321499136&1
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 8589934591 := 31 << 28
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 1 := 8321499136&1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 268435456&1
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 1 := 268435456&1
(smt.stats    1    202   4357   1700  1531/1381/149     175/28    13   41   19.36)
(smt.stats    2    313   5951   3070  1645/1490/151     305/39    15   44   19.36)
(smt.stats    3    414   6773   3985  1677/1508/151     410/45    15   44   19.84)
(smt.stats    4    525   8754   6824  1986/1800/151     628/46    15   44   19.74)
(smt.stats    5    647  10071   9792  2091/1839/151     813/52    15   44   19.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  12263  12957  2212/2053/153     921/129    16   46   19.84)
(smt.stats    7    859  13300  16518  2300/2067/153    1045/130    16   46   19.94)
(smt.stats    8    981  14206  20302  2338/2158/153    1199/134    16   46   19.94)
(smt.stats    9   1115  15110  23363  2515/2197/154    1350/164    17   47   20.03)
(smt.stats   10   1216  16198  27315  2706/2535/162    1469/181    18   51   20.03)
(smt.stats   11   1327  17087  28839  2812/2541/162    1595/190    18   51   20.15)
(smt.stats   12   1449  17936  32381  2917/2693/162    1716/202    19   59   20.15)
(smt.stats   13   1583  19207  37116  2987/2805/164    1933/221    20   60   20.15)
(smt.stats   14   1730  20801  41825  3126/2847/164    2092/227    20   60   20.15)
ramon: poll                 wall=1.000s usage=0.949s mem=21296KiB load=0.95 rootload=0.94
(smt.stats   15   1831  21068  42313  3188/2978/164    2199/254    21   60   20.44)
(smt.stats   16   1942  21479  43764  3625/3367/164    2367/257    21   60   20.44)
(smt.stats   17   2064  22588  47737  3782/3561/164    2497/258    21   60   20.44)
(smt.stats   18   2198  24320  55477  3873/3633/164    2678/269    21   60   20.53)
(smt.stats   19   2345  25943  61153  3923/3713/164    2857/275    21   60   20.53)
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 18&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 4 := 18&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 8 := 18&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 18&16
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 18 := 19 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 18&16
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 18 := 19 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 18&16
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 18 := 19 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 17&16
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 17 := 18 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 17&16
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 17 := 18 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 4 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 8 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 8 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 4 := 4294967296&16
(smt.stats   20   2506  27667  64654  3987/3815/180    3074/381    22   64   20.63)
(smt.stats   21   2607  29359  67856  4051/3834/181    3233/381    22   64   20.63)
(smt.stats   22   2718  30572  74117  4101/3906/185    3373/398    23   68   20.63)
(smt.stats   23   2840  31656  78539  4149/3936/185    3524/417    24   68   20.63)
(smt.stats   24   2974  33586  85700  4205/3981/185    3683/418    24   68   20.73)
(smt.stats   25   3121  35485  91811  4248/4065/190    3866/434    25   69   20.73)
ramon: poll                 wall=2.005s usage=1.957s mem=22040KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   26   3282  37752  98137  4331/4083/190    4031/486    26   69   20.73)
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 4 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 4 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 16 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 8 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 8 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 8 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 8589934591 := 4294967297 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
shl: (shl[33] (bv2int %0) (mod (bv2int %1) 33)) 4294967295 := 4294967297 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 4 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 8 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 2 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 4 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 4 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 4 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 8 := 4294967296&16
(smt.stats   27   3459  40657 110107  4423/4241/259    4220/504    27   81   21.13)
(smt.stats   28   3560  41924 113691  4474/4272/259    4348/517    28   92   21.13)
(smt.stats   29   3671  45885 119439  4496/4302/259    4464/517    28   92   21.13)
(smt.stats   30   3793  49265 125526  4542/4327/259    4599/521    28   92   21.22)
(smt.stats   31   3927  50473 135674  4644/4418/259    4735/524    28   92   21.32)
(smt.stats   32   4074  52435 150646  4741/4521/265    4926/559    29   93   21.41)
(smt.stats   33   4235  54594 163391  4771/4553/265    5093/578    30  112   21.41)
(smt.stats   34   4412  57679 175890  4813/4610/267    5323/592    31  115   21.51)
(smt.stats   35   4606  60570 197111  4921/4727/269    5615/601    33  139   21.61)
(smt.stats   36   4707  61526 208149  4924/4728/269    5746/601    33  139   21.61)
ramon: poll                 wall=3.000s usage=2.948s mem=22868KiB load=1.00 rootload=0.99
(smt.stats   37   4818  63859 218378  4951/4734/269    5883/602    33  139   21.61)
(smt.stats   38   4940  66540 231437  4963/4768/269    6032/602    33  139   21.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 30)
(smt.stats   39   5074  70071 243903  4985/4773/279    6139/625    34  141   21.81)
(smt.stats   40   5221  73097 256412  5010/4795/279    6258/643    35  186   21.81)
(smt.stats   41   5382  76905 273835  5019/4826/279    6437/643    35  186   21.81)
(smt.stats   42   5559  82490 286790  5022/4829/279    6634/643    35  186   21.81)
(smt.stats   43   5753  88462 301018  5031/4838/279    6883/643    35  186   21.81)
(smt.stats   44   5966  95895 322700  5032/4839/279    7113/643    35  186   21.81)
(smt.stats   45   6067  98009 329419  5033/4840/279    7221/643    35  186   21.81)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   46   6178 102721 341253  5033/4840/279    7335/643    35  186   21.81)
(smt.stats   47   6300 108542 349243  5033/4840/279    7461/643    35  186   21.81)
(smt.stats   48   6434 115477 360642  5033/4840/279    7606/643    35  186   21.81)
(smt.stats   49   6581 119753 394611  5063/4849/279    7759/643    35  186   22.00)
(smt.stats   50   6742 123740 416771  5111/4906/279    7925/643    35  186   22.00)
ramon: poll                 wall=4.000s usage=3.947s mem=23524KiB load=1.00 rootload=1.00
(smt.stats   51   6919 127127 447487  5161/4956/281    8123/695    37  190   22.10)
(smt.stats   52   7113 129839 465411  5265/5027/283    8372/695    37  190   22.20)
(smt.stats   53   7326 134004 492523  5273/5057/283    8637/713    38  196   22.20)
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 16 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 16 := 4294967296&16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 4294967296&16
band: (band[33] (shl[33] (bv2int %0) (mod #117 33)) (if (or #572 #573 #574 #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 ...) 0 (if #599 1 #609))) 16 := 4294967296&16
(smt.stats   54   7560 136982 501466  5376/5082/283    9020/719    38  196   22.39)
(smt.stats   55   7661 138086 510621  5407/5180/293    9311/763    39  198   22.48)
(smt.stats   56   7772 140245 521550  5420/5194/293    9574/763    39  198   22.48)
(smt.stats   57   7894 143504 535609  5460/5208/293    9746/937    40  198   22.72)
(smt.stats   58   8028 145705 547972  5470/5245/293   10026/938    40  198   22.72)
ramon: poll                 wall=5.000s usage=4.947s mem=24004KiB load=1.00 rootload=0.99
(smt.stats   59   8175 147664 559192  5501/5271/293   10204/939    40  198   22.72)
(smt.stats   60   8336 149839 572175  5517/5287/293   10430/939    40  198   22.72)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 152057 587300  5532/5313/295   10734/1106    41  205   22.81)
(smt.stats   62   8707 154796 607748  5585/5317/295   10934/1107    41  205   22.81)
(smt.stats   63   8920 159835 628111  5635/5416/297   11268/1121    42  210   22.91)
(smt.stats   64   9154 163734 650342  5736/5427/297   11543/1138    43  222   22.91)
ramon: poll                 wall=6.000s usage=5.946s mem=24384KiB load=1.00 rootload=1.00
(smt.stats   65   9411 170149 673816  5966/5530/297   11927/1150    43  222   23.00)
(smt.stats   66   9512 172813 684258  5998/5745/297   12063/1150    43  222   23.00)
(smt.stats   67   9623 178616 702549  6032/5804/297   12219/1152    43  222   23.00)
(smt.stats   68   9745 181593 716242  6043/5819/297   12378/1152    43  222   23.00)
(smt.stats   69   9879 184748 735748  6071/5832/297   12525/1152    43  222   23.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   70  10026 186740 750551  6145/5854/297   12792/1154    43  222   23.20)
(smt.stats   71  10187 188563 779157  6162/5924/298   12984/1215    44  224   23.20)
(smt.stats   72  10364 190495 809512  6174/5949/298   13276/1215    44  224   23.20)
ramon: poll                 wall=7.000s usage=6.946s mem=24532KiB load=1.00 rootload=1.00
(smt.stats   73  10558 193080 839100  6193/5964/298   13514/1216    44  224   23.30)
(smt.stats   74  10771 200027 887114  6195/5970/298   13736/1216    44  224   23.39)
(smt.stats   75  11005 203439 903061  6210/5983/298   14133/1219    44  224   23.39)
(smt.stats   76  11262 207808 939501  6262/5998/298   14466/1221    44  224   23.39)
(smt.stats   77  11645 214603 977402  6354/6067/299   14905/1305    45  224   23.39)
(smt.stats   78  11756 216717 994041  6426/6187/299   15089/1305    45  224   23.49)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11878 218318 1020706  6469/6223/299   15249/1305    45  224   23.59)
ramon: poll                 wall=8.000s usage=7.945s mem=24864KiB load=1.00 rootload=1.00
(smt.stats   80  12012 220152 1036920  6486/6231/299   15448/1305    45  224   23.59)
(smt.stats   81  12159 225860 1052999  6491/6249/299   15610/1305    45  224   23.59)
(smt.stats   82  12320 237533 1083381  6491/6249/299   15804/1305    45  224   23.59)
(smt.stats   83  12497 245030 1107540  6496/6254/300   16115/1345    46  226   23.68)
(smt.stats   84  12691 251681 1151169  6515/6264/302   16341/1345    46  226   23.68)
(smt.stats   85  12904 256534 1181724  6531/6287/304   16612/1364    47  231   23.68)
(smt.stats   86  13138 259476 1221952  6560/6293/304   16920/1364    47  231   23.87)
ramon: poll                 wall=9.000s usage=8.945s mem=25416KiB load=1.00 rootload=1.00
(smt.stats   87  13395 264512 1249679  6562/6318/304   17181/1403    48  231   23.87)
(smt.stats   88  13677 268663 1284655  6575/6331/305   17603/1425    49  236   23.87)
(smt.stats   89  13987 277175 1365715  6590/6336/305   17937/1425    49  236   23.87)
(smt.stats   90  14088 278390 1374820  6595/6347/305   18052/1425    49  236   23.97)
(smt.stats   91  14199 281449 1389481  6599/6352/305   18179/1425    49  236   23.97)
(smt.stats   92  14321 282792 1406847  6604/6356/305   18344/1425    49  236   23.97)
(smt.stats   93  14455 285130 1425193  6623/6373/305   18622/1426    49  236   24.06)
ramon: poll                 wall=10.000s usage=9.945s mem=26064KiB load=1.00 rootload=1.00
(smt.stats   94  14602 290530 1464298  6626/6382/305   18809/1426    49  236   24.40)
(smt.stats   95  14763 295188 1493939  6626/6382/305   18984/1426    49  236   24.40)
(smt.stats   96  14940 298438 1525462  6642/6383/305   19230/1426    49  236   24.40)
(smt.delete-inactive-clauses  :num-deleted-clauses 573)
(smt.stats   97  15134 304362 1559366  6643/6399/305   18858/1426    49  236   24.40)
(smt.stats   98  15347 314278 1606546  6644/6400/305   19203/1426    49  236   24.40)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   99  15581 324113 1651205  6670/6420/306   19534/1485    50  248   24.50)
ramon: poll                 wall=11.000s usage=10.936s mem=26080KiB load=0.99 rootload=0.99
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 805306288&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 1229782960241115056 := 4581298509 << 22
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 805306352&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 1229782960241115120 := 4581298511 << 22
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 805306352&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 1229782960241115120 := 4581298511 << 22
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 1438646288&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 19215358703435792 := 4581298519 << 21
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 2398023280&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 19215368252747376 := 4581298519 << 21
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 719323152&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 9607670761783312 := 4581298521 << 5
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 268435600&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 9607670310895760 := 4581298521 << 5
(smt.stats  100  15838 328194 1670350  6802/6545/323   19922/1499    51  251   24.69)
(smt.stats  101  16120 332470 1697149  6856/6599/326   20415/1499    51  251   24.79)
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 41&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 51539607593 := 11 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 9&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542153 := 11 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 9&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542153 := 11 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 9&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542153 := 11 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&2
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 29
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 5&4
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 5&4
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&4
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&4
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&8
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 31
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 4 := 5&4
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 30
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 4 := 7&4
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 30
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 4 := 7&4
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 30
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 14
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 13
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 12
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 11
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 10
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 9
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 6
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 8
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542145 := 8 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542145 := 8 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 7
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 26
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 27
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 25
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 24
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 23
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 20
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 19
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 17
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 17
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 8 << 17
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542149 := 8 << 15
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542145 := 8 << 15
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542145 := 8 << 15
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542147 := 8 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542147 := 8 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542147 := 8 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542147 := 8 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 0 := 7&2
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 7&2
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 9 << 29
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 7&2
shl: (shl[64] (bv2int %0) (mod (+ #117 #722 #718) 64)) 60129542151 := 9 << 29
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 23&8
band: (band[33] (shl[64] (bv2int %0) (mod #723 64)) (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 ...) 0 (if #772 1 #842))) 2 := 23&8
(smt.stats  102  16430 336792 1717727  7106/6824/475   20856/1558    52  289   25.67)
ramon: poll                 wall=12.000s usage=11.936s mem=27272KiB load=1.00 rootload=0.99
(smt.stats  103  16770 345824 1788525  7363/7064/484   21294/1558    52  289   25.95)
(smt.stats  104  16871 350306 1816673  7392/7087/487   21449/1590    53  307   26.05)
(smt.stats  105  16982 351938 1833803  7413/7106/493   21707/1590    53  307   26.14)
(smt.stats  106  17104 353164 1851178  7422/7111/493   21853/1590    53  307   26.14)
(smt.stats  107  17238 355762 1867230  7426/7117/493   22067/1636    54  322   26.24)
(smt.stats  108  17385 357610 1879088  7432/7125/493   22240/1636    54  322   26.24)
(smt.stats  109  17546 359271 1894954  7435/7128/493   22542/1636    54  322   26.33)
ramon: poll                 wall=13.000s usage=12.936s mem=28040KiB load=1.00 rootload=1.00
(smt.stats  110  17723 362802 1920155  7437/7130/493   22806/1636    54  322   26.43)
(smt.stats  111  17917 369761 1956887  7441/7134/493   23206/1636    54  322   26.53)
(smt.stats  112  18130 372608 1979296  7449/7142/494   23632/1776    55  326   26.72)
(smt.stats  113  18364 380190 2037008  7455/7148/494   23929/1776    55  326   26.62)
ramon: poll                 wall=14.000s usage=13.936s mem=28296KiB load=1.00 rootload=1.00
(smt.stats  114  18621 390060 2081631  7456/7149/494   24247/1776    55  326   26.62)
(smt.stats  115  18903 397796 2158833  7462/7155/494   24619/1776    55  326   26.95)
ramon: poll                 wall=15.000s usage=14.935s mem=29576KiB load=1.00 rootload=1.00
(smt.stats  116  19213 413763 2232516  8032/7591/581   25077/1884    57  416   27.94)
ramon: poll                 wall=16.000s usage=15.935s mem=30088KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.935s mem=30600KiB load=1.00 rootload=0.99
(smt.stats  117  19553 425361 2263320  8212/7635/581   25554/1890    57  416   28.32)
ramon: poll                 wall=18.000s usage=17.935s mem=30600KiB load=1.00 rootload=1.00
(smt.stats  118  19926 456391 2382907  8318/7892/597   26055/1938    58  428   28.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  119  20027 459062 2395761  8354/7928/597   26160/1938    58  428   28.42)
(smt.stats  120  20138 463914 2421579  8355/7932/615   26287/1948    59  434   28.42)
(smt.stats  121  20260 473398 2456855  8355/7932/615   26445/1948    59  434   28.46)
(smt.stats  122  20394 478378 2473332  8354/7937/622   26579/1956    60  448   28.49)
ramon: poll                 wall=19.000s usage=18.934s mem=30600KiB load=1.00 rootload=1.00
(smt.stats  123  20541 484137 2485870  8365/7948/622   26873/1956    60  448   28.49)
(smt.stats  124  20702 495296 2543043  8386/7948/622   27041/1956    60  448   28.49)
(smt.stats  125  20879 511450 2620537  8390/7972/622   27239/1968    61  456   28.60)
(smt.stats  126  21073 519943 2649411  8445/8017/622   27469/1968    61  456   28.79)
ramon: poll                 wall=20.000s usage=19.934s mem=30600KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:01:12 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.990s
ramon: group.utime          19.954s
ramon: group.stime          0.036s
ramon: group.mempeak        30856KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.00
