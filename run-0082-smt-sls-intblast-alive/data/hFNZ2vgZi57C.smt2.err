ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:55:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27573 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/hFNZ2vgZi57C.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             891766
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1 := 35 << 1
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   106.383     10000        49          0            1        2)
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 1&17179869183
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&17179869182
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 4 := 17179869181 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 17179869181 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 1&1
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 67 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 38 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 67 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 38 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 39 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 67 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 66 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 36&4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 38 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 39 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 40 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 36&4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 34&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 34 := 38 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 62&4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 62&4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 56&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 48&16
(smt.stats    0    101    777    606   236/154/137     105/25     7   26   51.56)
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 64&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 64 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 64&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 64 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 64&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 64 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 64&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 64 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 62&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 48&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 64 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 48&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 63 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 48&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 62 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 39 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 40 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 39 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 40 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 41 << 7
(sat.ddfw       1      1   51.8187     20001        98          1            1        3)
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 40&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 40&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 42 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 42 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 2&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 40 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 41 << 7
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 40 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 34&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 34 := 35 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 34&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 34 := 35 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 34&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 34 := 35 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 34&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 34 := 35 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 16&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 16 := 36 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 16&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 16 := 36 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 37 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 6&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6 := 37 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 48&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 63 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 48&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 64 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 48&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 63 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 48&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 49 << 15
(smt.stats    1    202   2374   2126   344/221/184     214/39     8   35   51.84)
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 16&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 16 := 39 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 43 << 9
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 44 << 10
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 43 << 9
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 44 << 10
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 45 << 11
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 47 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 48 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 47 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 6&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6 := 47 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 6&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6 := 47 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 22&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 22 := 43 << 9
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 46 << 12
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 45 << 11
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 44 << 10
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 16&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 16 := 45 << 11
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 43 << 9
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 24&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 38 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 38 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 30&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 30&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 30 := 49 << 15
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 50 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 24&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 50 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 50 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 46&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 51 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 52 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 53 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 54 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 53 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 54 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 55 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 56 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 62 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 61 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 60 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 59 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 58 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 57 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 51 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 52 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 62 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 61 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 40&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 62 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 40&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 61 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 58 << 24
(sat.ddfw       1      1   53.4759     40001       196          2            1        5)
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 60 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 59 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 60 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 60 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 60 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 24&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 62 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 61 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 40&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 61 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 61 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 61 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 51 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 52 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 53 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 54 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 55 << 21
(smt.stats    2    313   4401   4398   574/454/266     318/59    10   60   52.41)
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 51 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 52 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 53 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 54 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 53 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 51 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 52 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 53 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 53 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 53 << 19
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 56 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 57 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 40&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 57 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 40&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 56 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 57 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 56 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 57 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 46&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 49 << 15
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 8 := 38&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 7 := 38&8
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 51 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 52 << 18
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 51 << 17
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 50 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 16&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 16 := 50 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 66 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 67 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 66 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 66 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 63 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 39&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 39 := 63 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 39&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 39 := 63 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 59 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 32&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 59 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 58 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 536870912 #110) (mod #165 64))) 0 := 38&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 58 << 24
(smt.stats    3    414   6070   6612   682/649/329     411/64    12   73   52.65)
(sat.ddfw       1      1   45.9418     70001       343          3            1        8)
ramon: poll                 wall=1.004s usage=1.028s mem=54908KiB load=1.02 rootload=1.01
(sat.ddfw       1      1   39.1773    110001       539          4            1       12)
(sat.ddfw       1      1   33.6694    160000       784          5            1       17)
(smt.stats    4    525   8095   8986   744/703/337     500/78    14   85   52.94)
ramon: poll                 wall=2.000s usage=2.028s mem=55368KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   29.4556    220001      1078          6            1       23)
(sat.ddfw       1      1   26.1389    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=3.026s mem=55272KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.4811    370001      1813          8            1       38)
(smt.stats    5    647   8774   9519   888/761/337     646/83    14   85   53.32)
ramon: poll                 wall=4.004s usage=4.029s mem=55600KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.2766    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  10239  11270  1160/1036/337     765/84    14   85   53.71)
ramon: poll                 wall=5.000s usage=5.024s mem=56028KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.4175    560001      2745         10            1       57)
(smt.stats    7    859  11986  12358  1294/1168/339     924/106    15   93   53.71)
ramon: poll                 wall=6.000s usage=6.028s mem=56040KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.8891    670001      3284         11            1       68)
(smt.stats    8    981  15115  16357  1460/1422/346    1115/150    17  111   53.80)
ramon: poll                 wall=7.004s usage=7.026s mem=56084KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   16.5769    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=8.027s mem=56216KiB load=1.00 rootload=1.00
(smt.stats    9   1115  19214  19368  1523/1437/348    1296/155    17  111   53.99)
(sat.ddfw       1      1   15.4101    920001      4509         13            1       93)
(smt.stats   10   1216  22275  24391  1599/1561/367    1350/195    20  151   53.99)
ramon: poll                 wall=9.004s usage=9.015s mem=56276KiB load=0.98 rootload=0.99
(sat.ddfw       1      1   14.3988   1060001      5196         14            1      108)
(smt.stats   11   1327  25987  27693  1669/1626/370    1476/214    21  161   54.09)
ramon: poll                 wall=10.000s usage=10.012s mem=56312KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  28865  31500  1681/1639/377    1611/242    22  163   54.18)
ramon: poll                 wall=11.000s usage=11.011s mem=56440KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.5391   1210001      5931         15            1      123)
(smt.stats   13   1583  32298  35401  1738/1649/377    1780/242    22  163   54.18)
ramon: poll                 wall=12.004s usage=12.013s mem=56696KiB load=1.00 rootload=1.01
(sat.ddfw       1      1    12.749   1370001      6715         16            1      139)
(smt.stats   14   1730  37348  38710  1822/1724/382    1928/265    24  176   54.44)
ramon: poll                 wall=13.004s usage=13.013s mem=56732KiB load=1.00 rootload=1.00
(smt.stats   15   1831  40706  41917  1912/1814/385    2067/276    24  176   54.54)
(smt.stats   16   1942  43108  44890  1930/1879/386    2169/306    25  185   54.63)
ramon: poll                 wall=14.000s usage=14.139s mem=57028KiB load=1.13 rootload=1.12
(sat.ddfw       1      1   12.0422   1540001      7549         17            1      156)
(smt.stats   17   2064  46754  48580  1976/1900/386    2353/308    25  185   54.63)
(smt.stats   18   2198  50136  51218  2044/1950/386    2565/309    25  185   54.63)
ramon: poll                 wall=15.004s usage=15.263s mem=57028KiB load=1.12 rootload=1.13
(smt.stats   19   2345  53725  54710  2132/2039/386    2733/309    25  185   54.72)
(sat.ddfw       1      1   11.4228   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.261s mem=57284KiB load=1.00 rootload=0.99
(smt.stats   20   2506  56475  59524  2194/2116/386    2957/309    25  185   54.82)
(smt.stats   21   2607  58892  63134  2239/2181/387    3056/406    26  196   54.82)
ramon: poll                 wall=17.000s usage=17.257s mem=57284KiB load=1.00 rootload=1.00
(smt.stats   22   2718  61313  67814  2320/2218/387    3162/409    26  196   54.82)
(sat.ddfw       1      1   10.8646   1910001      9362         19            1      193)
(smt.stats   23   2840  64129  71022  2346/2298/387    3291/409    26  196   55.01)
ramon: poll                 wall=18.004s usage=18.257s mem=57540KiB load=1.00 rootload=1.00
(smt.stats   24   2974  66606  76493  2361/2316/387    3462/409    26  196   55.01)
ramon: poll                 wall=19.000s usage=19.256s mem=57564KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.3896   2110001     10343         20            1      214)
(smt.stats   25   3121  69132  81050  2452/2330/387    3615/410    26  196   55.11)
ramon: poll                 wall=20.008s usage=20.303s mem=57336KiB load=1.04 rootload=1.04
ramon: end                  Fri Nov  1 22:56:15 2024
ramon: root.execname        z3
ramon: root.utime           20.330s
ramon: root.stime           0.010s
ramon: group.total          20.344s
ramon: group.utime          20.332s
ramon: group.stime          0.012s
ramon: group.mempeak        57848KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.01
