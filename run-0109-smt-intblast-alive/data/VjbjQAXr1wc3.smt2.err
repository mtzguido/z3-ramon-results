ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:26:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41410 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/VjbjQAXr1wc3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2986459
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3695   2158  1291/1156/91      97/6     3   15   19.13)
(smt.stats    1    202   5422   4331  2032/1834/95     187/12     5   15   19.32)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 72057594037927935 := 72057594037927935&72057594037927992
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 176 := 72057594037927935&176
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 176 := 175 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 117 := 72057594037927935&117
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 117 := 116 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 117 := 72057594037927935&117
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 117 := 116 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 117 := 72057594037927935&117
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 117 := 116 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&0
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 72057594037927936 := 6252 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 15564440312192434176 := 175 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&0
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 72057594037927936 := 352 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&0
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 72057594037927936 := 352 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&0
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 353 := 352 << 57
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 1 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 2 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 2 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 4 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 8 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 4 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 4 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 8 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 16 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 32 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 64 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 128 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 256 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 512 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 1024 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 2048 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 4096 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 8192 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 1 := 72057594037927935&288230376151711744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 1 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 2 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 4 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 72057594037927932 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 72057594037927928 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 72057594037927920 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 72057594037927904 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 64 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 128 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 256 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 512 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 1024 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 2048 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 4096 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 8192 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 16384 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 32768 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 65536 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 131072 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 262144 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 524288 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 1048576 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 2097152 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 4194304 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 8388608 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 16777216 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 33554432 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 67108864 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 134217728 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 134217728 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 268435456 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 536870912 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 536870912 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 1073741824 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 2147483648 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 2147483648 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 4294967296 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 8589934592 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 17179869184 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 34359738368 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 68719476736 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 137438953472 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 274877906944 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 549755813888 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 1099511627776 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 2199023255552 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 4398046511104 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 8796093022208 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 17592186044416 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 35184372088832 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 70368744177664 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 140737488355328 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 281474976710656 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 562949953421312 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 1125899906842624 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 2251799813685248 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 4503599627370496 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 9007199254740992 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 9007199254740992 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 18014398509481984 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 18014398509481984 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 36028797018963968 := 288230376151711744&72057594037927935
(smt.stats    2    313   6277   5182  2415/1978/136     327/24     7   26   21.02)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 34359738368 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 34359738368 := 288230376151711744&72057594037927935
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 72057594037927935&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #639 58) 0 (if #641 1 #805))) 34359738368 := 288230376151711744&72057594037927935
(smt.stats    3    414   8995   7397  2785/2539/357     479/121     9   75   21.31)
(smt.stats    4    525  12247   9814  2813/2564/359     581/130    10   79   21.31)
(smt.stats    5    647  19597  16063  2817/2569/361     699/139    11   85   21.41)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  25416  23054  2824/2572/363     796/139    13   88   21.41)
(smt.stats    7    859  31658  31134  2853/2594/363     909/140    13   88   21.41)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567616
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 15420325124116578304 := 235 << 58
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567616
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 15420325124116578304 := 235 << 58
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567617
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567617
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567618
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567618
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567621
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567620
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567624
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567624
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567632
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567624
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567632
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567648
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567648
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567680
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567651
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567650
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567648
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567680
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567872
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567872
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227568128
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567811
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567810
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567808
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227567744
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227568128
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227568640
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227568640
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227568640
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227569664
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227571712
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227568640
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 144115188075855871&432345564227571712
(smt.stats    8    981  33103  32813  2976/2604/363    1074/143    13   88   21.72)
(smt.stats    9   1115  37017  36658  3224/2949/500    1312/283    15  127   22.28)
(smt.stats   10   1216  38043  38475  3607/3195/500    1529/283    15  127   22.28)
(smt.stats   11   1327  40548  45333  4036/3505/500    1870/285    15  127   22.28)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  42814  52378  4255/3991/522    2316/431    17  160   22.40)
(smt.stats   13   1583  47650  61628  4282/4010/530    3110/728    18  165   22.62)
(smt.stats   14   1730  56360  70506  4332/4056/531    3251/1054    20  181   22.76)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 511&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 0 := 128 << 10
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 511&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 0 := 128 << 10
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 511&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 0 := 128 << 10
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 511&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 0 := 187 << 10
(smt.stats   15   1831  61934  77933  4466/4161/537    3384/1062    21  182   22.86)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 511&191488
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 187 := 187 << 10
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 511&191488
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 187 := 187 << 10
ramon: poll                 wall=1.000s usage=0.922s mem=24412KiB load=0.92 rootload=0.90
(smt.stats   16   1942  65543  94113  4510/4204/545    4442/1337    22  182   23.15)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 3 := 144115188075855871&10240
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 3 := 144115188075855871&10240
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 131 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 133 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 137 := 144115188075855871&10241
(smt.stats   17   2064  69488 103842  4551/4217/550    4657/1722    23  198   23.34)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 265 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 265 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 275 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 277 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 275 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 277 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 277 := 144115188075855871&10241
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 275 := 144115188075855871&10241
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  73313 109601  4747/4303/560    4934/1756    24  210   24.00)
(smt.stats   19   2345  78638 118927  5105/4550/565    5583/1768    24  210   24.20)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 465 := 144115188075855871&9345
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 465 := 144115188075855871&9345
(smt.stats   20   2506  84284 128365  5207/4901/566    6765/1859    25  211   24.29)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 256 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 480 := 36028797018963967&9216
(smt.stats   21   2607  91189 137793  5266/4905/566    7193/1982    26  216   24.58)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 1760 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 1920 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 1920 := 36028797018963967&9216
(smt.stats   22   2718  97322 148404  5439/4982/571    7404/1987    26  216   24.58)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 5952 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 5888 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 5888 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 5888 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 6656 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 6144 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 6144 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 7168 := 36028797018963967&9216
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 7680 := 36028797018963967&9216
ramon: poll                 wall=2.000s usage=1.921s mem=25968KiB load=1.00 rootload=0.99
(smt.stats   23   2840 105057 165002  5525/5216/588    7678/2009    28  223   24.58)
(smt.stats   24   2974 110237 182499  5536/5230/588    8136/2009    28  223   24.70)
(smt.stats   25   3124 116587 218955  5557/5251/594    8868/2244    30  246   24.81)
(smt.stats   26   3285 125071 242164  5631/5287/595    9191/2293    31  274   24.81)
(smt.stats   27   3462 132725 269191  5703/5336/595   10221/2293    31  274   25.00)
(smt.stats   28   3563 136853 277322  5724/5400/595   10537/2296    31  274   25.00)
(smt.stats   29   3674 141912 293476  5877/5449/595   11337/2311    31  274   25.09)
ramon: poll                 wall=3.000s usage=2.921s mem=26616KiB load=1.00 rootload=1.00
(smt.stats   30   3796 143759 300614  6060/5575/595   11801/2313    31  274   25.19)
(smt.stats   31   3930 147524 318835  6356/6050/602   13388/2915    32  274   25.38)
(smt.stats   32   4077 154081 334258  6370/6064/602   14001/2915    32  274   25.49)
(smt.stats   33   4238 164098 372071  6435/6070/602   15181/3149    33  292   25.68)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 64576 := 65535&74752
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 64576 := 65535&74752
(smt.stats   34   4415 170969 395311  6616/6148/602   15633/3155    33  292   25.68)
ramon: poll                 wall=4.000s usage=3.920s mem=27448KiB load=1.00 rootload=1.00
(smt.stats   35   4609 178076 410535  6689/6353/602   16653/3157    33  292   25.88)
(smt.stats   36   4710 182676 432560  6797/6444/604   17480/3815    34  297   25.97)
(smt.stats   37   4821 188565 455318  6836/6484/604   18007/3817    34  297   26.07)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4943 193941 480614  6982/6558/604   18751/3819    34  297   26.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 427)
(smt.stats   39   5077 201812 524305  6994/6676/604   18740/3819    34  297   26.46)
(smt.stats   40   5224 210095 543888  7011/6679/605   18916/4076    35  301   26.46)
ramon: poll                 wall=5.000s usage=4.920s mem=27932KiB load=1.00 rootload=1.00
(smt.stats   41   5385 221742 603452  7064/6731/605   19127/4076    35  301   26.46)
(smt.stats   42   5567 227479 656277  7076/6741/605   19743/4076    35  301   26.66)
(smt.stats   43   5761 238473 742312  7112/6774/610   19941/4450    36  560   26.75)
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 1&81920
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 1152921504606928896 := 2814749767106584 << 2
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 1&81920
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 1152921504606928896 := 2814749767106584 << 2
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 1&81920
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 1152921504606928896 := 2814749767106584 << 2
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 1&81920
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 1152921504606928896 := 1688871335110336 << 2
band: (band[59] (if (or #821 #822 #823 #824 #825 #826 #827) 0 (if #828 1 #940)) (shl[64] (bv2int %0) (mod #965 64))) 0 := 1&81920
shl: (shl[64] (bv2int %0) (mod (+ #110 #964) 64)) 1152921504606928896 := 1688871335110336 << 2
(smt.stats   44   5974 247580 790985  7203/6867/618   20604/4728    37  569   26.75)
(smt.stats   45   6075 251906 805390  7237/6871/618   20817/4731    37  569   26.87)
ramon: poll                 wall=6.000s usage=5.918s mem=28392KiB load=1.00 rootload=1.00
(smt.stats   46   6186 255793 831127  7448/6924/618   21205/4735    37  569   27.06)
(smt.stats   47   6309 259615 857857  7676/7124/618   21528/4864    38  570   27.06)
(smt.stats   48   6443 264315 888806  7823/7342/619   22320/4865    38  570   27.26)
(smt.stats   49   6590 268041 902860  7913/7494/620   23264/4888    39  572   27.46)
(smt.stats   50   6751 275230 948965  8172/7662/620   23922/4893    39  572   27.55)
ramon: poll                 wall=7.000s usage=6.918s mem=29120KiB load=1.00 rootload=1.00
(smt.stats   51   6928 280627 968197  8411/7878/620   24574/4999    40  574   27.74)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   52   7122 289313 1008036  8453/8117/622   25993/4999    40  574   27.95)
(smt.stats   53   7335 296336 1058289  8610/8152/627   26582/5429    41  584   28.14)
ramon: poll                 wall=8.000s usage=7.917s mem=29688KiB load=1.00 rootload=1.00
(smt.stats   54   7569 302050 1097715  8827/8285/627   27352/5435    41  584   28.33)
(smt.stats   55   7670 304752 1113229  9070/8540/628   27533/5615    42  637   28.42)
ramon: poll                 wall=9.000s usage=8.917s mem=29936KiB load=1.00 rootload=1.00
(smt.stats   56   7781 307526 1130758  9237/8755/629   27891/5615    42  637   28.52)
(smt.stats   57   7903 310338 1142139  9412/8915/629   28246/5617    42  637   28.62)
(smt.stats   58   8037 314024 1163208  9445/9109/631   29397/5617    42  637   28.71)
(smt.stats   59   8184 320932 1193542  9485/9139/631   30364/5762    43  663   28.81)
ramon: poll                 wall=10.000s usage=9.916s mem=30256KiB load=1.00 rootload=1.00
(smt.stats   60   8345 327201 1227835  9536/9158/632   30909/5762    43  663   28.81)
(smt.stats   61   8522 332704 1291448  9547/9211/634   32391/6109    44  671   28.90)
(smt.stats   62   8716 344703 1373073  9563/9217/634   32901/6113    44  671   29.02)
(smt.stats   63   8929 356258 1419762  9616/9235/634   33979/6530    45  682   29.21)
ramon: poll                 wall=11.000s usage=10.915s mem=30724KiB load=1.00 rootload=1.00
(smt.stats   64   9163 373267 1487187  9638/9298/634   34513/6530    45  682   29.37)
(smt.stats   65   9420 392544 1602639  9638/9302/634   34895/6530    45  682   29.37)
(smt.stats   66   9521 397920 1619700  9645/9309/634   35065/6530    45  682   29.37)
(smt.stats   67   9632 405023 1654349  9660/9312/634   35275/6530    45  682   29.48)
ramon: poll                 wall=12.000s usage=11.915s mem=31004KiB load=1.00 rootload=1.00
(smt.stats   68   9754 410868 1677446  9860/9337/634   35532/6532    45  682   29.57)
(smt.stats   69   9888 415684 1706221 10123/9596/634   35823/6534    45  682   29.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 400)
(smt.stats   70  10035 421429 1724998 10222/9879/635   35892/6893    46  684   29.66)
(smt.stats   71  10196 430802 1777428 10281/9894/635   37235/6896    46  684   29.76)
ramon: poll                 wall=13.000s usage=12.913s mem=31548KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   72  10373 441961 1838448 10417/9968/635   37627/6901    46  684   29.85)
(smt.stats   73  10567 451411 1880901 10452/10101/638   39837/7428    47  700   29.95)
ramon: poll                 wall=14.000s usage=13.912s mem=31652KiB load=1.00 rootload=1.00
(smt.stats   74  10780 461728 1954364 10610/10200/639   40648/7431    47  700   30.33)
(smt.stats   75  11014 470196 1997201 10747/10411/640   42423/7664    48  700   30.67)
ramon: poll                 wall=15.000s usage=14.912s mem=32352KiB load=1.00 rootload=1.00
(smt.stats   76  11271 486500 2097731 10937/10546/641   43355/7932    49  706   30.86)
ramon: poll                 wall=16.000s usage=15.911s mem=32684KiB load=1.00 rootload=1.00
(smt.stats   77  11553 501691 2196630 11091/10640/641   45007/7936    49  706   31.05)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   78  11654 506527 2235821 11100/10756/641   45704/7936    49  706   31.05)
(smt.stats   79  11765 511154 2279286 11161/10784/641   46045/7936    49  706   31.17)
(smt.stats   80  11887 518260 2341875 11183/10845/642   46284/8458    50  715   31.17)
(smt.stats   81  12021 522174 2372503 11201/10853/642   47143/8458    50  715   31.37)
ramon: poll                 wall=17.000s usage=16.911s mem=32916KiB load=1.00 rootload=1.00
(smt.stats   82  12168 530337 2453923 11220/10884/642   47329/8458    50  715   31.37)
(smt.stats   83  12329 538826 2564692 11366/10983/643   47922/8685    51  715   31.47)
(smt.stats   84  12506 547034 2659777 11510/11064/643   48781/8688    51  715   31.47)
ramon: poll                 wall=18.000s usage=17.910s mem=33224KiB load=1.00 rootload=1.00
(smt.stats   85  12700 553994 2708647 11632/11244/644   49253/8765    52  716   31.76)
(smt.stats   86  12913 561080 2790895 11823/11318/644   49986/8771    52  716   31.85)
ramon: poll                 wall=19.000s usage=18.910s mem=33496KiB load=1.00 rootload=1.00
(smt.stats   87  13147 573662 2861464 11859/11523/644   50589/8771    52  716   31.85)
(smt.stats   88  13404 579025 2927716 12121/11532/644   51451/8773    52  716   31.97)
(smt.stats   89  13686 588736 3008842 12211/11856/644   52099/8775    52  716   32.16)
ramon: poll                 wall=20.000s usage=19.909s mem=33772KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:26:20 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.993s
ramon: group.utime          19.965s
ramon: group.stime          0.028s
ramon: group.mempeak        34116KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.00
