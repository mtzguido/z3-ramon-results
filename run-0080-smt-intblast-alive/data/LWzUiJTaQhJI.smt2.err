ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:10:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25967 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1400
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LWzUiJTaQhJI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4186510
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252672&72057594037927935
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 2&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 0&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 9223372036854775808 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775807&72057594037927935
(smt.stats    0    101   4329    473  1397/1259/120      89/15     6   24   19.37)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775807&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775806&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775804&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252676&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 9223372036854775805&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252676&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252676&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252688&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252684&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 0 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 24 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 40 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 72 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 136 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 264 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 520 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 1032 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 2056 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 8200 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 16392 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32776 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32776 := 3746994889972252680&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32769 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32770 := 3746994889972252674&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4098 := 3746994889972252673&72057594037927935
(smt.stats    1    202   5409   1928  2478/2242/262     295/98     9   57   20.06)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 4097 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 3 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 3 := 3746994889972252673&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 1 := 3746994889972252673&72057594037927935
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 3746994889972252673 := 308 << 56
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 1 := 3746994889972252672&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 2 := 3746994889972252672&72057594037927935
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 2 := 3746994889972252672&72057594037927935
(smt.stats    2    313   6964   4788  2961/2649/280     484/117    11   62   20.45)
(smt.stats    3    415   7448   5564  3226/2969/281     783/135    13   63   20.54)
(smt.stats    4    526   9922  10405  3317/3049/295    1196/417    17   97   20.64)
(smt.stats    5    648  13989  16790  3366/3094/300    1485/463    20   99   20.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    749  16750  23553  3567/3249/303    1681/471    21  112   21.22)
(smt.stats    7    860  19701  32856  3595/3266/307    1824/483    23  126   21.41)
(smt.stats    8    982  21833  39087  3670/3353/323    2037/553    25  158   21.60)
ramon: poll                 wall=1.000s usage=0.999s mem=23108KiB load=1.00 rootload=0.99
(smt.stats    9   1116  26214  50373  3691/3370/323    2308/554    25  158   21.69)
(smt.stats   10   1217  30087  56856  3697/3380/329    2449/580    26  161   21.69)
(smt.stats   11   1328  33469  67771  3699/3382/331    2647/603    28  175   21.82)
(smt.stats   12   1450  37513  81737  3716/3398/335    2956/699    30  182   21.82)
(smt.stats   13   1584  42316  94676  3756/3429/336    3127/720    31  182   21.92)
(smt.stats   14   1731  50619 105541  3782/3464/338    3282/728    32  191   22.02)
(smt.stats   15   1832  55657 112381  3863/3495/341    3426/732    34  211   22.11)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 128 := 266288107786&511
(smt.stats   16   1943  61744 117676  3902/3574/341    3580/733    34  211   22.11)
(smt.stats   17   2065  65067 127227  3956/3597/342    3931/747    35  212   22.21)
(smt.stats   18   2199  70845 137297  4110/3658/342    4262/754    35  212   22.30)
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 65536 := 3746994889972285440&281474976710655
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 12970366926827061248 := 266287972593 << 48
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 12970366926827061248 := 266287972593 << 48
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 12970366926827061248 := 266287972593 << 48
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 3746994889972285440 := 266287972593 << 48
band: (band[63] (shl[64] (bv2int %0) (mod #436 64)) (if (= #780 63) 0 (if #782 1 #906))) 32768 := 3746994889972285440&281474976710655
shl: (shl[64] (bv2int %0) (mod (+ #104 #435) 64)) 3746994889972285440 := 266287972593 << 48
ramon: poll                 wall=2.000s usage=1.998s mem=23756KiB load=1.00 rootload=1.00
(smt.stats   19   2346  73945 148305  4269/3824/343    4592/887    36  214   22.50)
(smt.stats   20   2507  77581 158220  4322/3957/353    5085/888    36  214   22.50)
ramon: poll                 wall=3.000s usage=2.998s mem=23988KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2608  80818 167600  4392/4033/354    5300/1010    38  216   22.78)
ramon: poll                 wall=4.000s usage=3.998s mem=24388KiB load=1.00 rootload=0.99
(smt.stats   22   2719  82379 172274  4551/4144/354    5511/1010    38  216   22.78)
ramon: poll                 wall=5.000s usage=4.997s mem=24388KiB load=1.00 rootload=1.00
(smt.stats   23   2841  86029 179291  4647/4254/354    5740/1015    38  216   22.87)
ramon: poll                 wall=6.000s usage=5.997s mem=24520KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=24544KiB load=1.00 rootload=1.00
(smt.stats   24   2975  88454 183401  4780/4340/354    6046/1017    38  216   23.16)
(smt.stats   25   3122  92864 195629  4976/4516/358    6860/1156    39  231   23.26)
ramon: poll                 wall=8.000s usage=7.997s mem=24640KiB load=1.00 rootload=1.00
(smt.stats   26   3283  97618 208749  5240/4678/358    7465/1168    39  231   23.36)
ramon: poll                 wall=9.000s usage=8.996s mem=24748KiB load=1.00 rootload=1.00
(smt.stats   27   3460 103579 224949  5370/5048/362    7946/1358    41  259   23.45)
(smt.stats   28   3561 107030 232477  5386/5058/362    8185/1358    41  259   23.55)
(smt.stats   29   3672 111900 245560  5400/5077/362    8489/1453    42  260   23.64)
(smt.stats   30   3794 117660 260469  5423/5083/362    8730/1454    42  260   23.64)
ramon: poll                 wall=10.000s usage=9.996s mem=24976KiB load=1.00 rootload=1.00
(smt.stats   31   3928 121962 268632  5465/5125/362    8940/1454    42  260   23.64)
(smt.stats   32   4075 127502 281750  5485/5164/363    9329/1592    43  261   23.64)
(smt.stats   33   4236 135156 293078  5544/5170/363    9700/1595    43  261   23.88)
ramon: poll                 wall=11.000s usage=10.995s mem=25260KiB load=1.00 rootload=1.00
(smt.stats   34   4413 140002 304862  5784/5401/364   10099/1732    44  261   23.97)
ramon: poll                 wall=12.000s usage=11.995s mem=25388KiB load=1.00 rootload=1.00
(smt.stats   35   4607 148265 323808  5828/5479/364   10766/1732    44  261   23.97)
ramon: poll                 wall=13.000s usage=12.994s mem=25452KiB load=1.00 rootload=1.00
(smt.stats   36   4708 153805 334924  5975/5546/364   11080/1733    44  261   24.16)
(smt.stats   37   4819 158002 345070  6050/5666/364   11247/1733    44  261   24.16)
ramon: poll                 wall=14.000s usage=13.994s mem=25520KiB load=1.00 rootload=1.00
(smt.stats   38   4941 162961 366053  6129/5731/364   11618/1737    44  261   24.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 254)
(smt.stats   39   5075 168252 386169  6172/5849/365   11725/1966    45  261   24.26)
ramon: poll                 wall=15.004s usage=14.998s mem=25928KiB load=1.00 rootload=1.00
(smt.stats   40   5222 173816 405213  6324/5852/365   12111/1967    45  261   24.35)
ramon: poll                 wall=16.000s usage=15.993s mem=25932KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.993s mem=25936KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5383 177634 414701  6683/6069/365   12472/1969    45  261   24.45)
(smt.stats   42   5560 181529 431022  6768/6411/365   13025/1971    45  261   24.55)
ramon: poll                 wall=18.000s usage=17.993s mem=26004KiB load=1.00 rootload=1.00
(smt.stats   43   5754 190631 494551  6786/6465/365   13336/1971    45  261   24.55)
(smt.stats   44   5967 198516 538456  6800/6478/365   13927/1972    45  261   24.74)
(smt.stats   45   6068 201137 550838  6817/6493/367   14042/2268    46  263   24.74)
(smt.stats   46   6179 204938 557700  6923/6503/367   14335/2277    46  263   24.74)
(smt.stats   47   6301 209649 575360  7067/6660/367   14710/2281    46  263   24.83)
ramon: poll                 wall=19.000s usage=18.992s mem=26316KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.992s mem=26364KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:11:16 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.998s
ramon: group.utime          19.986s
ramon: group.stime          0.012s
ramon: group.mempeak        26620KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
