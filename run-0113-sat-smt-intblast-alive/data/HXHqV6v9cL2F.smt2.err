ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:32:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40954 MiB
ramon: sys.mem.avail        61382 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/HXHqV6v9cL2F.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3777072
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   220/220     0/0  64       0    18.53   0.00)
(sat.stats    101    512    0   220/220   101/35  64       0    18.82   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 363 :time 0.00)
(sat.stats    101    512    0   220/220   101/35  64       0    18.82   0.00)
(sat.stats    101    512    0   220/220   101/35  64       0    18.82   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 358018.82 :time 0.00)
(sat.stats    101    512    0   220/220    47/35  64       0    18.82   0.01)
(sat.stats    136   1617    1   220/220    82/58  64       0    18.92   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    139   1696    2   220/220    85/59  64       0    18.92   0.01)
(sat.stats    142   1816    3   220/220    88/59  64       0    18.92   0.01)
(sat.stats    145   1912    4   220/220    91/60  64       0    18.92   0.01)
(sat.stats    148   2024    5   220/220    94/60  64       0    18.92   0.01)
(sat.stats    151   2116    6   220/220    97/60  64       0    18.92   0.01)
(sat.stats    154   2191    7   220/220   100/61  64       0    18.92   0.01)
(sat.stats    157   2235    8   220/220   103/63  64       0    18.92   0.01)
(sat.stats    160   2294    9   220/220   106/64  64       0    18.92   0.01)
(sat.stats    163   2400   10   220/220   109/64  64       0    18.92   0.01)
(sat.stats    166   2496   11   220/220   112/64  64       0    18.92   0.01)
(sat.stats    171   2560   12   220/220   117/68  64       0    18.92   0.01)
(sat.stats    211   4568   25   220/220   157/99  64       0    18.92   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1969 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    316   9226   43   221/221   261/148  71       0    19.41   0.15)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2728 :time 0.00)
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 0&1
lshr: (lshr[64] (mod (div #49 2) 8796093022208) (mod (+ 43 #677 #679) 64)) 2932031369256 := 2932031369256 >>l 43
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 4338 :time 0.00)
lshr: (lshr[44] (bv2int %0) (+ 44 (* 17592186044415 #50))) 5864062867390 := 5864062867390 >>l 42
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 1 := 1&4
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 1&4
lshr: (lshr[64] (mod (div #49 2) 8796093022208) (mod (+ 43 #677 #679) 64)) 16338 := 2199023928135 >>l 41
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 3&4
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 2 := 4&3
(sat.stats    510  17037   65   489/484   454/219  86       0    20.08   0.27)
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 3&4
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 1 := 4&3
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 2 := 2&4
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 5696 :time 0.00)
 (sat-cleaner :elim-literals 18 :elim-clauses 2 :cost 6406 :time 0.00)
lshr: (lshr[44] (bv2int %0) (+ 44 (* 17592186044415 #50))) 2 := 8796093022214 >>l 30
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 0&16384
lshr: (lshr[64] (mod (div #49 2) 8796093022208) (mod (+ 43 #677 #679) 64)) 17592186024180 := 29 >>l 29
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 4&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 4 := 16384&4
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 8&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 8 := 16384&8
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 16&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 16 := 16384&16
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 32&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 32 := 16384&32
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 64&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 64 := 16384&64
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 128&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 128 := 16384&128
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 256&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 256 := 16384&256
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 512&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 512 := 16384&512
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 1024&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 1024 := 16384&1024
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 2048&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 2048 := 16384&2048
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 4096&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 4096 := 16384&4096
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 8192&16384
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 8192 := 16384&8192
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 7048 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 1268 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 16 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 7712 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 7104 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 5504 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 11008 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 4096 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 512 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 9216 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 10240 := 12287&16384
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 8192 := 12287&16384
 (sat-cleaner :elim-literals 10 :elim-clauses 3 :cost 9326 :time 0.00)
 (sat-cleaner :elim-literals 72 :elim-clauses 17 :cost 10096 :time 0.00)
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 4096 := 5461&16384
 (sat-cleaner :elim-literals 72 :elim-clauses 6 :cost 9468 :time 0.00)
(sat.stats   1064  45479   74  2605/2599   946/480 291       0    21.92   0.55)
(sat.stats   1067  45860   75  2697/2691   951/482 291       0    21.92   0.55)
(sat.stats   1655  70777  115  5748/5742  1596/741 291       0    23.37   0.97)
 (sat-cleaner :elim-literals 0 :elim-clauses 67 :cost 16078 :time 0.00)
ramon: poll                 wall=1.003s usage=1.003s mem=24468KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14165 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 15356 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 16055 :time 0.00)
lshr: (lshr[44] (bv2int %0) (+ 44 (* 17592186044415 #50))) 546 := 4398046511283 >>l 37
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 32&128
lshr: (lshr[64] (mod (div #49 2) 8796093022208) (mod (+ 43 #677 #679) 64)) 705 := 2199023255641 >>l 36
ramon: poll                 wall=2.000s usage=1.999s mem=25872KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 24239 :time 0.00)
lshr: (lshr[44] (bv2int %0) (+ 44 (* 17592186044415 #50))) 127 := 17454747091175 >>l 13
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 2130706432&2147483648
lshr: (lshr[64] (mod (div #49 2) 8796093022208) (mod (+ 43 #677 #679) 64)) 2130697937 := 8727373545565 >>l 12
(sat.stats   2780 139208  219 19599/19587  2894/1300 336       0    25.90   2.42)
ramon: poll                 wall=3.000s usage=2.999s mem=28472KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.999s mem=34664KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.999s mem=37740KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   4876 205145  252 82763/82751  5233/2212 336       0    38.55   5.49)
ramon: poll                 wall=6.000s usage=5.998s mem=41680KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.982s mem=43672KiB load=0.98 rootload=0.98
ramon: poll                 wall=8.000s usage=7.982s mem=60256KiB load=1.00 rootload=1.00
(sat.stats   5828 218374  320 311316/311304  6036/2517 336       0    58.93   8.11)
ramon: poll                 wall=9.000s usage=8.981s mem=61860KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 39387 :time 0.00)
lshr: (lshr[44] (bv2int %0) (+ 44 (* 17592186044415 #50))) 3 := 17311939371512 >>l 28
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 64491&65536
lshr: (lshr[64] (mod (div #49 2) 8796093022208) (mod (+ 43 #677 #679) 64)) 2113273849 := 8655969685756 >>l 27
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 64491&65536
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 49152 := 65536&64491
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 0 := 64491&65536
band: (band[44] (if (= #546 63) 9223372036854775808 (if #548 4611686018427387904 #672)) (lshr[64] (mod #430 8796093022208) (mod #680 64))) 32768 := 65536&64491
ramon: poll                 wall=10.000s usage=9.981s mem=63324KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.981s mem=63428KiB load=1.00 rootload=1.00
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 49152 := 64491&65536
band: (band[44] (lshr[44] (bv2int %0) (+ 44 #447)) (if (= #77 43) 8796093022208 (if #451 4398046511104 #535))) 32768 := 64491&65536
ramon: poll                 wall=12.000s usage=11.981s mem=63488KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.980s mem=63696KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 112 :elim-clauses 0 :cost 46770 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 46889 :time 0.00)
ramon: poll                 wall=14.000s usage=13.980s mem=64032KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.980s mem=66444KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.003s usage=15.983s mem=71608KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.979s mem=84312KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.962s mem=87560KiB load=0.98 rootload=0.98
ramon: poll                 wall=19.000s usage=18.962s mem=90476KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.962s mem=92892KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:32:36 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.060s
ramon: group.total          19.972s
ramon: group.utime          19.908s
ramon: group.stime          0.064s
ramon: group.mempeak        93152KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
