ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:53:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29058 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Az32vGuWddxF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             679662
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   65.7895     10000        49          0            1        2)
(sat.ddfw       1      1   35.0912     20001        98          1            1        3)
(smt.stats    0    101   4443    398  1318/1175/99     116/17     7   14   52.01)
(smt.stats    1    202   7382   1417  1944/1759/101     218/26     8   15   52.11)
(sat.ddfw       1      1   36.1011     40001       196          2            1        5)
(smt.stats    2    313   9842   3054  2192/1963/101     333/31     9   16   52.30)
(smt.stats    3    414  11169   4788  2548/2314/103     446/53    11   21   52.42)
(smt.stats    4    525  12385   6695  2699/2455/108     559/60    14   26   52.61)
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 1152921504606846976 := 106 << 5
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 31 := 31&105
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 28 := 31&105
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 28 := 31&105
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 28 := 31&104
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2 := 31&104
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&104
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&7
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 1 := 31&2
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&2
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&2
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&4
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&4
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&1
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&16
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 32 := 106 << 5
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 1 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 1 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 1 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 1 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 52 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 1 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 30 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 28 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 3 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 9 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 4 := 31&3392
(smt.stats    5    647  14583   9091  2804/2495/157     679/70    16   39   52.91)
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 4 := 31&3392
(sat.ddfw       1      1   32.8947     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16408  11407  2838/2588/241     775/74    18   69   53.21)
ramon: poll                 wall=1.000s usage=0.854s mem=55440KiB load=0.85 rootload=0.85
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 1 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 33 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 32 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 64 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 64 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 64 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 64 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 640 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2560 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2432 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 640 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 640 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 640 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2304 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
(smt.stats    7    860  19444  13903  2898/2643/300     934/88    19   76   53.53)
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2688 := 65535&2688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 2688 := 84 << 16
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2560 := 65535&2560
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 2560 := 84 << 16
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2560 := 65535&2560
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 2560 := 84 << 16
(smt.stats    8    982  21676  17134  2975/2713/312    1130/163    21   99   53.72)
(sat.ddfw       1      1   28.9226    110001       539          4            1       12)
(smt.stats    9   1116  24093  20507  3078/2761/319    1266/205    23  114   53.91)
ramon: poll                 wall=2.000s usage=1.853s mem=56208KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   25.1631    160000       784          5            1       17)
(smt.stats   10   1217  26216  25087  3334/3049/320    1512/226    24  114   54.21)
(sat.ddfw       1      1   21.9382    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.826s mem=56660KiB load=0.97 rootload=0.98
(smt.stats   11   1328  29071  29308  3472/3081/320    1695/228    24  114   54.40)
(sat.ddfw       1      1   19.2784    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  31982  35535  3582/3302/327    1950/267    25  121   54.40)
ramon: poll                 wall=4.000s usage=3.777s mem=56720KiB load=0.95 rootload=0.95
(smt.stats   13   1584  37674  41958  3623/3309/331    2207/309    26  127   54.59)
(sat.ddfw       1      1   17.3875    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.777s mem=56856KiB load=1.00 rootload=1.00
(smt.stats   14   1731  41549  48146  3726/3369/331    2487/348    27  146   54.83)
(smt.stats   15   1832  44486  55759  3942/3521/331    2698/353    27  146   54.83)
(smt.stats   16   1943  47728  66308  4019/3678/332    2927/399    28  151   54.92)
(sat.ddfw       1      1   15.8562    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=5.776s mem=57148KiB load=1.00 rootload=1.00
(smt.stats   17   2065  51305  74218  4110/3744/332    3185/401    28  151   55.02)
(smt.stats   18   2199  54699  86576  4226/3858/333    3511/432    29  163   55.11)
(sat.ddfw       1      1   14.5412    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=6.776s mem=57632KiB load=1.00 rootload=1.00
(smt.stats   19   2346  60330 100438  4432/4114/335    4059/527    30  174   55.20)
(smt.stats   20   2507  65978 115996  4518/4157/335    4468/527    30  174   55.34)
ramon: poll                 wall=8.003s usage=7.566s mem=57680KiB load=0.79 rootload=0.79
(smt.stats   21   2608  69000 121832  4564/4231/335    4671/528    30  174   55.44)
(sat.ddfw       1      1   13.0193    670001      3284         11            1       68)
(smt.stats   22   2719  71976 128532  4634/4292/335    4835/528    30  174   55.54)
ramon: poll                 wall=9.000s usage=8.540s mem=57716KiB load=0.98 rootload=0.97
(smt.stats   23   2841  75915 136531  4769/4384/335    5039/533    30  174   55.54)
(smt.stats   24   2975  81111 147092  4933/4547/335    5294/536    30  174   55.63)
ramon: poll                 wall=10.000s usage=9.499s mem=57912KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   12.0385    790001      3872         12            1       80)
(smt.stats   25   3122  84178 158754  5030/4713/339    5693/737    32  197   55.73)
(smt.stats   26   3283  89594 191881  5079/4741/340    5968/737    32  197   55.98)
ramon: poll                 wall=11.000s usage=10.357s mem=58208KiB load=0.86 rootload=0.85
(smt.stats   27   3460  94495 209545  5165/4796/343    6554/771    33  197   56.19)
(smt.stats   28   3561  96371 213623  5187/4879/343    6688/872    34  205   56.28)
(sat.ddfw       1      1   11.1083    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=11.357s mem=58404KiB load=1.00 rootload=1.00
(smt.stats   29   3672  99594 225977  5334/4936/343    6984/878    34  205   56.28)
(smt.stats   30   3794 102190 239891  5464/5145/344    7230/923    35  213   56.38)
(smt.stats   31   3928 105780 257042  5491/5184/344    7499/923    35  213   56.38)
ramon: poll                 wall=13.000s usage=12.357s mem=58572KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 109123 264671  5546/5206/345    7824/972    36  225   56.38)
(sat.ddfw       1      1   10.4454   1060001      5196         14            1      108)
(smt.stats   33   4236 113772 280631  5674/5373/346    8165/1006    37  230   56.47)
ramon: poll                 wall=14.000s usage=13.356s mem=58776KiB load=1.00 rootload=1.00
(smt.stats   34   4413 116501 291041  5734/5380/346    8443/1008    37  230   56.57)
(smt.stats   35   4607 120451 308253  5753/5447/347    8995/1039    38  231   56.57)
(smt.stats   36   4708 123173 326595  5787/5454/347    9200/1040    38  231   56.67)
(smt.stats   37   4819 128758 346325  5795/5489/347    9462/1041    38  231   56.67)
ramon: poll                 wall=15.003s usage=14.342s mem=58984KiB load=0.98 rootload=0.99
(smt.stats   38   4941 132874 360680  5807/5503/350    9753/1194    39  231   56.76)
(sat.ddfw       1      1   9.78155   1210001      5931         15            1      123)
(smt.delete-inactive-clauses  :num-deleted-clauses 75)
(smt.stats   39   5075 135364 372959  5895/5516/350    9922/1196    39  231   56.76)
ramon: poll                 wall=16.000s usage=15.182s mem=59108KiB load=0.84 rootload=0.84
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5222 139462 384252  5976/5645/350   10139/1229    40  232   57.08)
(smt.stats   41   5383 143133 405800  6010/5685/350   10424/1233    40  232   57.17)
(smt.stats   42   5560 147421 427532  6054/5735/350   10837/1235    40  232   57.17)
ramon: poll                 wall=17.000s usage=16.099s mem=59388KiB load=0.92 rootload=0.92
(sat.ddfw       1      1   9.20228   1370001      6715         16            1      139)
(smt.stats   43   5754 152191 453851  6153/5766/350   11331/1238    40  232   57.56)
ramon: poll                 wall=18.000s usage=17.031s mem=60156KiB load=0.93 rootload=0.93
(smt.stats   44   5967 159092 484968  6222/5907/350   11681/1239    40  232   57.56)
(smt.stats   45   6068 161441 496189  6250/5926/351   11823/1445    41  235   57.66)
(smt.stats   46   6179 163608 508616  6286/5960/351   11986/1448    41  235   57.66)
(smt.stats   47   6301 167502 538973  6300/5997/351   12219/1448    41  235   57.75)
ramon: poll                 wall=19.000s usage=18.002s mem=60292KiB load=0.97 rootload=0.97
(smt.stats   48   6435 169643 550965  6306/6000/351   12361/1448    41  235   57.75)
(sat.ddfw       1      1     8.705   1540001      7549         17            1      156)
(smt.stats   49   6582 171829 556457  6433/6028/351   12644/1451    41  235   57.94)
ramon: poll                 wall=20.000s usage=19.067s mem=60352KiB load=1.07 rootload=1.06
ramon: end                  Fri Nov  1 21:54:02 2024
ramon: root.execname        z3
ramon: root.utime           19.140s
ramon: root.stime           0.000s
ramon: group.total          19.157s
ramon: group.utime          19.149s
ramon: group.stime          0.008s
ramon: group.mempeak        60352KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              0.95
