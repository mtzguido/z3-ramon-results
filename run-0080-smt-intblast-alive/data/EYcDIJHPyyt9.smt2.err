ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:55:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28386 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EYcDIJHPyyt9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4133763
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4543    725  1292/1150/110      91/14     7   21   19.35)
(smt.stats    1    202   6196   1903  1912/1719/112     191/64     9   21   19.54)
(smt.stats    2    313   8292   3947  2510/2254/118     289/72    13   30   19.65)
(smt.stats    3    414   9554   5764  2562/2311/118     370/72    13   30   19.75)
(smt.stats    4    525  11456   8175  2608/2344/134     419/68    17   60   19.86)
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 3 := 60&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 2 := 60&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 2 := 60&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 60&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 36028797018964028 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 60&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 36028797018964028 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 60&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 36028797018964028 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 60&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 36028797018964028 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 0&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 36028797018963968 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 0&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 36028797018963968 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 2 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 945 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 2 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 1 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 288 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 3 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 2 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 2 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 940 := 59 << 4
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 1 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 2 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 2 := 944&3
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 944&3
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 2 := 944&3
(smt.stats    5    647  16176  11391  2676/2385/151     532/71    18   67   20.06)
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 960&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 960&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 960&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 960&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 295&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 295&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 300&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 300 := 60 << 5
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 300&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 300 := 60 << 5
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 4 := 964&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #800) 64)) 964 := 60 << 5
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 292 := 60 << 5
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 957 := 60 << 5
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 295 := 60 << 5
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1923 := 60 << 5
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 4 := 1920&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 4 := 1920&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 4 := 1920&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 1 := 1920&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 0 := 1920&7
band: (band[55] (shl[55] (bv2int %0) (mod #114 55)) (if (or #637 #638) 0 (if #639 1 #789))) 1 := 1920&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 2 := 1920&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 2 := 1920&7
band: (band[55] (shl[64] (bv2int %0) (mod #801 64)) (if (or #816 #817 #818) 0 (if #819 1 #946))) 1 := 1920&7
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  20306  14954  2724/2429/192     638/78    20   80   20.25)
(smt.stats    7    859  25388  18720  2754/2492/222     758/80    21   86   20.35)
ramon: poll                 wall=1.004s usage=0.926s mem=22136KiB load=0.92 rootload=0.92
(smt.stats    8    981  27272  19556  2797/2512/222     894/93    22   86   21.03)
(smt.stats    9   1115  29921  22597  2978/2678/226    1040/103    23   97   21.12)
(smt.stats   10   1216  32674  25947  3065/2734/227    1154/117    24  102   21.12)
ramon: poll                 wall=2.000s usage=1.922s mem=22416KiB load=1.00 rootload=0.99
(smt.stats   11   1327  35416  30744  3091/2811/228    1272/126    25  103   21.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  37447  33341  3213/2932/230    1416/136    26  107   21.22)
(smt.stats   13   1583  41192  39721  3233/2967/239    1559/216    27  125   21.31)
(smt.stats   14   1730  50549  53365  3235/2969/239    1721/216    27  125   21.49)
(smt.stats   15   1831  53456  57516  3269/2979/239    1848/216    27  125   21.59)
ramon: poll                 wall=3.000s usage=2.922s mem=22844KiB load=1.00 rootload=1.00
(smt.stats   16   1942  55883  61083  3327/3016/239    1979/216    27  125   21.59)
(smt.stats   17   2064  58255  65507  3438/3074/239    2131/219    27  125   21.68)
ramon: poll                 wall=4.000s usage=3.921s mem=22956KiB load=1.00 rootload=1.00
(smt.stats   18   2198  60345  68340  3685/3195/239    2297/224    27  125   22.00)
ramon: poll                 wall=5.000s usage=4.920s mem=23276KiB load=1.00 rootload=1.00
(smt.stats   19   2345  62777  71580  3985/3509/239    2468/231    27  125   22.10)
ramon: poll                 wall=6.000s usage=5.920s mem=23560KiB load=1.00 rootload=1.00
(smt.stats   20   2506  66128  76593  4306/3807/239    2734/232    27  125   22.29)
(smt.stats   21   2607  68249  81184  4455/4152/239    2871/233    27  125   22.39)
ramon: poll                 wall=7.000s usage=6.920s mem=23684KiB load=1.00 rootload=1.00
(smt.stats   22   2718  72319  93751  4492/4214/239    2999/233    27  125   22.39)
(smt.stats   23   2840  81686 119714  4520/4254/243    3118/368    28  126   22.39)
(smt.stats   24   2974  85195 131507  4531/4264/243    3456/368    28  126   22.48)
(smt.stats   25   3121  87288 136209  4618/4287/247    3609/412    29  128   22.58)
ramon: poll                 wall=8.000s usage=7.920s mem=23972KiB load=1.00 rootload=1.00
(smt.stats   26   3282  90198 141311  4739/4429/247    3784/413    29  128   22.58)
(smt.stats   27   3459  93636 151748  4830/4500/247    4096/417    29  128   22.58)
(smt.stats   28   3560  94908 155626  4845/4580/247    4226/417    29  128   22.68)
(smt.stats   29   3671  97866 165201  4854/4587/248    4341/492    30  128   22.68)
ramon: poll                 wall=9.000s usage=8.920s mem=24100KiB load=1.00 rootload=1.00
(smt.stats   30   3793 102045 175170  4912/4596/248    4520/492    30  128   22.68)
(smt.stats   31   3927 104986 184425  5099/4685/248    4715/494    30  128   22.79)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 107288 189563  5161/4843/248    4890/496    30  128   23.22)
ramon: poll                 wall=10.000s usage=9.919s mem=24672KiB load=1.00 rootload=1.00
(smt.stats   33   4235 110822 200810  5246/4973/248    5165/496    30  128   23.22)
(smt.stats   34   4412 113481 207785  5413/4982/248    5361/497    30  128   23.41)
ramon: poll                 wall=11.004s usage=10.923s mem=24872KiB load=1.00 rootload=1.00
(smt.stats   35   4606 116432 215122  5614/5184/248    5640/500    30  128   23.60)
(smt.stats   36   4707 118932 221352  5705/5398/249    5767/631    31  131   23.60)
(smt.stats   37   4818 121772 234779  5712/5444/249    5945/631    31  131   23.60)
ramon: poll                 wall=12.000s usage=11.919s mem=25028KiB load=1.00 rootload=1.00
(smt.stats   38   4940 124714 247531  5769/5474/249    6083/631    31  131   23.60)
(smt.delete-inactive-clauses  :num-deleted-clauses 82)
(smt.stats   39   5074 129205 263137  5785/5510/249    6149/631    31  131   23.69)
(smt.stats   40   5221 135958 284963  5842/5522/249    6308/635    31  131   23.69)
ramon: poll                 wall=13.000s usage=12.918s mem=25292KiB load=1.00 rootload=1.00
(smt.stats   41   5382 138798 292460  6069/5726/250    6519/694    32  131   23.88)
ramon: poll                 wall=14.000s usage=13.918s mem=25384KiB load=1.00 rootload=1.00
(smt.stats   42   5559 141806 298979  6240/5850/250    6750/696    32  131   23.88)
(smt.stats   43   5753 146392 307975  6359/6002/250    6998/698    32  131   23.98)
ramon: poll                 wall=15.000s usage=14.918s mem=25464KiB load=1.00 rootload=1.00
(smt.stats   44   5966 151150 317460  6570/6103/250    7247/699    32  131   23.98)
(smt.stats   45   6067 152328 319566  6621/6307/250    7429/700    32  131   24.17)
(smt.stats   46   6178 153968 324261  6690/6387/250    7583/703    32  131   24.17)
ramon: poll                 wall=16.000s usage=15.918s mem=25640KiB load=1.00 rootload=1.00
(smt.stats   47   6300 155562 331051  6706/6436/250    7718/703    32  131   24.17)
(smt.stats   48   6434 156104 335170  6707/6437/250    7864/703    32  131   24.17)
(smt.stats   49   6581 158347 344419  6739/6438/250    8057/704    32  131   24.17)
ramon: poll                 wall=17.000s usage=16.918s mem=25824KiB load=1.00 rootload=0.99
(smt.stats   50   6742 161048 349654  6966/6474/250    8255/704    32  131   24.46)
ramon: poll                 wall=18.000s usage=17.917s mem=25964KiB load=1.00 rootload=1.00
(smt.stats   51   6919 164470 360179  7310/6849/250    8450/706    32  131   24.55)
ramon: poll                 wall=19.000s usage=18.917s mem=26088KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 169214 373673  7463/7152/250    8731/707    32  131   24.55)
(smt.stats   53   7326 177145 391868  7514/7214/250    9003/708    32  131   24.55)
(smt.stats   54   7560 184250 416759  7531/7256/251    9358/874    33  142   24.65)
(smt.stats   55   7661 186907 424140  7577/7268/251    9512/876    33  142   24.74)
ramon: poll                 wall=20.000s usage=19.917s mem=26208KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:56:17 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.999s
ramon: group.utime          19.991s
ramon: group.stime          0.008s
ramon: group.mempeak        26724KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              1.00
