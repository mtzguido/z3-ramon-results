ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:23:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25655 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Re0m6zqExo87.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             34808
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2310    215  1123/988/98     102/15     4   16   19.26)
(smt.stats    1    202   4332   1155  1588/1447/100     213/20     6   17   19.26)
(smt.stats    2    313   6416   2395  1802/1636/102     324/21     7   18   19.26)
(smt.stats    3    414   8563   3524  1851/1664/103     423/25     8   19   19.36)
(smt.stats    4    525   9875   4956  2139/1957/109     530/59    10   22   19.45)
(smt.stats    5    647  12777   6942  2303/2066/109     636/54    11   39   19.55)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  15782   8678  2413/2206/109     737/54    11   39   19.65)
(smt.stats    7    859  18532  11434  2419/2208/109     856/54    11   39   19.65)
(smt.stats    8    981  19910  13513  2484/2271/109     979/54    11   39   19.74)
(smt.stats    9   1115  21393  16846  2490/2276/110    1145/99    12   39   19.74)
(smt.stats   10   1216  23444  20742  2495/2282/110    1244/99    12   39   19.74)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1099494850560&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 33554432 := 33554432&1099511627760
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 33554432 := 33554432 >>l 60
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 33554432&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 0&1099511627760
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 1099511627776 := 1099511627776 >>l 60
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 33554431&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 33554431&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 33554431 := 33554431&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 33554431&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 33554415 := 33554415&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 33554431&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 33554400&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 33554368&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 33554431 := 33554431&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 33554431&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 33554414 := 33554414&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 33554412 := 33554412&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 33554408 := 33554408&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 33554400 := 33554400&1099511627760
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 33554400 := 33554432 >>l 60
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 32 := 32&1099511627760
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 32 := 2305843009213693952 >>l 60
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 8 := 8&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 8 := 8&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 8 := 8&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 8 := 8&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 48 := 64&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 145 := 193&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 148 := 193&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 148 := 150&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 176 := 192&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 176 := 208&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 176 := 208&1099511627760
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 176 := 191&1099511627760
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 191 := 1152921504606846976 >>l 60
(smt.stats   11   1329  24313  23550  2639/2423/202    1399/144    14   64   20.03)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 0&1099511627760
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 1 := 2 >>l 36
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 194 := 207&1099511627760
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  26016  26223  2673/2438/215    1549/151    15   66   20.33)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 129 := 129&1099511627774
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 129 := 129&1099511627774
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 130 := 130&1099511627774
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 130 := 1152921504606846976 >>l 63
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 128 := 128&1099511627774
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 128 := 2305843009196916736 >>l 63
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 128 := 128&1099511627774
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 128 := 18446744073675997184 >>l 63
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627774
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 1099511627775 := 1099511627774 >>l 39
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627774
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 65538 := 1099511627774 >>l 39
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627774
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 65538 := 1099511627775 >>l 39
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627774
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 1 := 1&1099511627774
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627774
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 1 := 1&1099511627774
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627774
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 1 := 1&1099511627774
(smt.stats   13   1585  27853  29680  2734/2512/246    1706/183    16   85   20.60)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 40 := 65&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 40 := 64&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 40 := 65&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 96 := 128&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 128 := 128&1099511627772
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 128 := 16777216 >>l 62
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 64 := 193&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 64 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 64 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 64 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 64 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 64 := 193&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 66 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 66 := 193&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 66 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 66 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 66 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 66 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 66 := 192&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 66 := 129&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 2 := 162&1099511627772
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 2 := 162&1099511627772
(smt.stats   14   1732  30169  36803  2818/2580/288    1903/219    18  104   20.69)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 72 := 170&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 72 := 170&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 20 := 186&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 20 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 20 := 190&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 20 := 190&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 16 := 190&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 190&1099511619584
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 4503599627370686 := 9223372036854775808 >>l 51
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 190&1099511619584
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 4501400604115134 := 9223372036854775808 >>l 51
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 190&1099511619584
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 2199023255742 := 9223372036854775808 >>l 51
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 190&1099511619584
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 1099511619583 := 25635586047 >>l 27
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 191&1099511619584
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 65537 := 25635586048 >>l 27
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 191&1099511619584
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 192 := 25635586048 >>l 27
(smt.stats   15   1833  33020  40342  2929/2645/288    2065/225    18  104   20.79)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 2 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 4 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 4 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 8 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 16 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 32 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 64 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 128 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 128 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 128 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 64 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 32 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 32 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 16 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 8 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 4 := 187&1099511619584
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 187&1099511619584
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 4 := 187&1099511619584
(smt.stats   16   1944  35434  46147  3008/2769/372    2269/269    20  125   21.08)
(smt.stats   17   2066  37514  52747  3055/2807/374    2448/269    20  125   21.18)
(smt.stats   18   2200  42210  64482  3071/2819/374    2590/307    21  137   21.18)
(smt.stats   19   2347  47261  77128  3109/2830/374    2796/312    21  137   21.27)
ramon: poll                 wall=1.000s usage=0.940s mem=22996KiB load=0.94 rootload=0.92
(smt.stats   20   2508  49862  84763  3155/2902/380    3075/368    23  151   21.86)
(smt.stats   21   2609  51800  90049  3292/3015/383    3250/385    24  157   21.86)
(smt.stats   22   2720  55162  97064  3325/3029/383    3548/388    24  157   21.96)
(smt.stats   23   2842  61324 110208  3361/3058/383    3766/389    24  157   21.96)
(smt.stats   24   2976  63674 117856  3387/3101/384    4115/446    25  162   22.06)
(smt.stats   25   3123  67516 131092  3440/3133/386    4390/446    25  162   22.15)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 15&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 15 := 9223372036854775808 >>l 24
(smt.stats   26   3284  69563 136145  3548/3176/386    4643/496    26  163   22.15)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 15&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 1099511627791 := 9223372036854775808 >>l 24
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 15&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 1099511627791 := 9223372036854775808 >>l 24
(smt.stats   27   3461  73533 151906  3585/3302/392    4989/508    27  167   22.25)
(smt.stats   28   3562  75332 160222  3640/3350/394    5157/509    27  167   22.34)
(smt.stats   29   3673  77228 169264  3696/3363/394    5310/512    27  167   22.34)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 192 := 193&1099511627774
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 4611686018427388097 := 4611686018427387904 >>l 63
(smt.stats   30   3795  80889 181783  3716/3418/394    5537/527    28  168   22.43)
(smt.stats   31   3929  83776 190461  3772/3475/396    5738/541    29  184   22.43)
ramon: poll                 wall=2.000s usage=1.939s mem=23912KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  89290 205171  3801/3482/397    6041/541    29  184   22.71)
(smt.stats   33   4237  94504 219861  3898/3542/398    6417/570    30  193   22.81)
(smt.stats   34   4414  98820 239730  3916/3617/399    6771/580    31  194   22.81)
(smt.stats   35   4608 104310 257523  3932/3633/407    7151/644    32  205   22.90)
(smt.stats   36   4709 107646 266767  3978/3639/407    7394/664    33  240   22.90)
(smt.stats   37   4820 109676 275774  4125/3694/407    7735/664    33  240   23.00)
(smt.stats   38   4942 111687 283945  4178/3869/407    8041/664    33  240   23.09)
(smt.delete-inactive-clauses  :num-deleted-clauses 12)
ramon: poll                 wall=3.000s usage=2.935s mem=24628KiB load=1.00 rootload=0.99
(smt.stats   39   5076 114948 293727  4244/3887/407    8619/666    33  240   23.09)
(smt.stats   40   5223 118783 315260  4309/3994/409    8948/812    34  245   23.19)
(smt.stats   41   5384 122255 335233  4359/4054/413    9359/865    35  252   23.29)
(smt.stats   42   5561 126695 356645  4368/4071/415    9992/865    35  252   23.29)
(smt.stats   43   5755 128187 366368  4370/4073/415   10287/965    36  291   23.29)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5968 136427 406468  4378/4081/418   11202/1005    37  307   23.38)
(smt.stats   45   6069 139629 422079  4384/4087/418   11533/1005    37  307   23.48)
ramon: poll                 wall=4.000s usage=3.935s mem=24852KiB load=1.00 rootload=1.00
(smt.stats   46   6180 142898 439536  4384/4087/419   11893/1117    38  321   23.48)
(smt.stats   47   6302 146760 462077  4386/4089/419   12265/1117    38  321   23.58)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627772
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 1 := 9223372036854775808 >>l 62
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627772
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #278) 64)) 1 := 9223372036854775808 >>l 62
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627772
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 4089 := 548816289791 >>l 38
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627772
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 3777 := 507074576384 >>l 38
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 1&1099511627772
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 3777 := 507208794111 >>l 38
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 0 := 2&1099511627772
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #479 39) 302231454903107537862656 (if #481 151115727451553768931328 #557))) 2 := 2&1099511627772
(smt.stats   48   6436 150274 483296  4405/4093/419   12521/1123    38  321   23.58)
(smt.stats   49   6583 153279 500476  4422/4122/426   13240/1173    39  322   23.68)
(smt.stats   50   6744 157072 516332  4495/4124/426   13710/1175    39  322   23.77)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596224 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596224 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596224 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596224 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596224 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596224 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596160 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596160 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596160 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 549621596160 := 1099377409977&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 134217472 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 3840 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 3840 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 268435456 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 268435456 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 3840 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 268435456 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 3840 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 3840 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 4096 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 8192 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 8192 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 8192 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 7680 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 7168 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 6144 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 6144 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 5120 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 5120 := 1099377409981&1099377410048
band: (band[40] (lshr[64] (* 16777216 #99) (mod #279 64)) (if (= #580 63) 10141204801807388467899916091392 (if #582 5070602400903694233949958045696 #706))) 4608 := 1099377409981&1099377410048
(smt.stats   51   6921 160096 542464  4696/4379/518   14512/1278    40  331   24.19)
ramon: poll                 wall=5.000s usage=4.935s mem=25620KiB load=1.00 rootload=1.00
(smt.stats   52   7115 164924 573372  4711/4385/518   15107/1278    40  331   24.28)
(smt.stats   53   7328 170121 594658  4730/4405/519   15515/1393    41  351   24.39)
(smt.stats   54   7562 175538 615336  4826/4479/521   16398/1397    41  351   24.48)
(smt.stats   55   7663 178191 626878  4868/4527/521   16579/1559    42  357   24.58)
(smt.stats   56   7774 180048 638866  4943/4615/523   16709/1561    42  357   24.67)
(smt.stats   57   7896 182564 658226  5019/4704/524   17035/1561    42  357   24.76)
ramon: poll                 wall=6.000s usage=5.934s mem=26644KiB load=1.00 rootload=1.00
(smt.stats   58   8030 186788 675197  5028/4710/524   17470/1561    42  357   25.04)
(smt.stats   59   8177 191021 687162  5054/4715/524   17772/1622    43  362   25.13)
(smt.stats   60   8338 196500 708922  5141/4757/524   18142/1625    43  362   25.13)
(smt.stats   61   8515 201771 728960  5221/4836/524   18691/1626    43  362   25.33)
ramon: poll                 wall=7.000s usage=6.934s mem=26704KiB load=1.00 rootload=1.00
(smt.stats   62   8709 208139 759703  5412/5088/528   19289/1751    44  362   25.33)
(smt.stats   63   8922 214382 788816  5515/5101/528   19702/1754    44  362   25.42)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   64   9156 219608 814260  5579/5259/529   20639/1827    45  362   25.52)
ramon: poll                 wall=8.000s usage=7.934s mem=27216KiB load=1.00 rootload=1.00
(smt.stats   65   9413 227166 850709  5701/5280/529   21157/1832    45  362   25.71)
(smt.stats   66   9514 229791 863488  5707/5392/529   21635/1913    46  362   25.71)
(smt.stats   67   9625 232576 884809  5733/5396/529   21821/1914    46  362   25.71)
(smt.stats   68   9747 235982 907474  5749/5430/529   22342/1915    46  362   25.81)
(smt.stats   69   9881 239113 937089  5782/5461/530   22852/2123    47  366   25.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028 241251 951655  5797/5472/531   23756/2125    47  366   25.90)
ramon: poll                 wall=9.000s usage=8.934s mem=27472KiB load=1.00 rootload=1.00
(smt.stats   71  10189 246723 980975  5837/5488/531   24347/2128    47  366   26.00)
(smt.stats   72  10366 248064 988080  5877/5552/531   24537/2128    47  366   26.00)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10560 250809 1001772  5882/5561/534   25272/2277    48  375   26.10)
(smt.stats   74  10773 256902 1045559  5897/5576/536   26333/2277    48  375   26.29)
(smt.stats   75  11007 261597 1080595  5913/5590/536   26670/2277    48  375   26.29)
(smt.stats   76  11264 269248 1120662  5949/5597/536   27516/2366    49  434   26.49)
ramon: poll                 wall=10.000s usage=9.934s mem=27984KiB load=1.00 rootload=1.00
(smt.stats   77  11546 276214 1151284  6148/5650/536   28266/2367    49  434   26.69)
(smt.stats   78  11647 279359 1172758  6228/5848/537   28704/2501    50  434   26.69)
(smt.stats   79  11758 283613 1204403  6258/5925/537   29030/2502    50  434   26.78)
(smt.stats   80  11880 287129 1222338  6311/5954/537   29280/2503    50  434   26.78)
(smt.stats   81  12014 291108 1247826  6338/6010/539   30385/2660    51  468   26.88)
ramon: poll                 wall=11.000s usage=10.934s mem=28496KiB load=1.00 rootload=1.00
(smt.stats   82  12161 296664 1284767  6342/6014/540   31189/2660    51  468   26.97)
(smt.stats   83  12322 302414 1321321  6349/6021/541   31940/2660    51  468   27.07)
(smt.stats   84  12499 305612 1347227  6356/6028/542   32809/2789    52  498   27.17)
ramon: poll                 wall=12.000s usage=11.934s mem=28752KiB load=1.00 rootload=1.00
(smt.stats   85  12693 311042 1391396  6395/6029/542   33550/2793    52  498   27.26)
(smt.stats   86  12906 316001 1437531  6438/6080/543   33941/2793    52  498   27.26)
(smt.stats   87  13140 322114 1475600  6517/6125/543   34726/2796    52  498   27.36)
ramon: poll                 wall=13.000s usage=12.934s mem=29008KiB load=1.00 rootload=1.00
(smt.stats   88  13397 327688 1499174  6642/6202/543   35652/2910    53  498   27.55)
(smt.stats   89  13679 336100 1551248  6652/6324/545   36750/2910    53  498   27.64)
(smt.stats   90  13989 345563 1627142  6665/6333/545   37477/2911    53  498   27.74)
ramon: poll                 wall=14.000s usage=13.934s mem=29520KiB load=1.00 rootload=1.00
(smt.stats   91  14090 347005 1646483  6668/6339/545   37779/3160    54  504   27.74)
(smt.stats   92  14201 349156 1668956  6673/6344/545   38140/3160    54  504   27.74)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   93  14323 356047 1725107  6674/6345/545   38577/3160    54  504   27.74)
(smt.stats   94  14457 360544 1758971  6683/6349/545   39148/3161    54  504   27.83)
(smt.stats   95  14604 366188 1794039  6704/6359/545   39440/3161    54  504   27.83)
ramon: poll                 wall=15.000s usage=14.934s mem=29520KiB load=1.00 rootload=1.00
(smt.stats   96  14765 370233 1833133  6726/6376/545   39702/3161    54  504   27.93)
(smt.stats   97  14942 373183 1870789  6789/6401/545   40149/3164    54  504   28.02)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15136 377056 1924440  6789/6460/545   40582/3164    54  504   28.02)
(smt.stats   99  15349 381892 2006573  6798/6467/545   40883/3165    54  504   28.50)
ramon: poll                 wall=16.000s usage=15.934s mem=30412KiB load=1.00 rootload=1.00
(smt.stats  100  15583 388576 2053153  6919/6583/547   42244/3393    55  523   28.86)
(smt.stats  101  15840 398293 2114720  7072/6597/547   43279/3402    55  523   29.05)
ramon: poll                 wall=17.000s usage=16.934s mem=30668KiB load=1.00 rootload=1.00
(smt.stats  102  16122 407401 2165029  7238/6804/547   44292/3404    55  523   29.15)
(smt.stats  103  16432 412753 2204471  7314/6924/547   45156/3471    56  553   29.24)
ramon: poll                 wall=18.000s usage=17.934s mem=30924KiB load=1.00 rootload=1.00
(smt.stats  104  16772 432170 2352648  7344/7001/548   46137/3471    56  553   29.34)
(smt.stats  105  16873 434650 2365242  7418/7014/548   46325/3575    57  556   29.43)
(smt.stats  106  16984 437901 2393228  7430/7098/548   47405/3575    57  556   29.53)
ramon: poll                 wall=19.000s usage=18.934s mem=31692KiB load=1.00 rootload=1.00
(smt.stats  107  17106 441106 2405971  7553/7103/548   47849/3579    57  556   29.72)
(smt.stats  108  17240 443933 2422001  7628/7240/548   48093/3583    57  556   29.72)
(smt.stats  109  17387 448556 2458832  7654/7318/548   48772/3584    57  556   29.72)
(smt.stats  110  17548 451500 2481791  7669/7328/548   49381/3584    57  556   29.82)
(smt.stats  111  17725 457953 2526472  7697/7349/548   49684/3585    57  556   29.82)
ramon: poll                 wall=20.000s usage=19.933s mem=31692KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:23:52 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.004s
ramon: group.utime          19.984s
ramon: group.stime          0.020s
ramon: group.mempeak        31952KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
