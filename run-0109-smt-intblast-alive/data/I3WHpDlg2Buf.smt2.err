ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:58:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42044 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/I3WHpDlg2Buf.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2895293
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1 := 5 << 5
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1 := 6 << 6
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1 := 6 << 6
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1 := 7 << 7
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1 := 8 << 8
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1 := 9 << 9
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 2&1
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 6 << 6
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 6 << 6
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 6 << 6
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 1&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1 := 7 << 7
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 1&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1 := 7 << 7
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 3&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 3 := 7 << 7
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 6&1
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 6&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 6 := 10 << 10
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 6&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 6 := 11 << 11
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 6&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 6 := 11 << 11
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 6&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 6 := 12 << 12
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 24 << 24
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 25 << 25
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 49 << 49
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 48 << 48
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 47 << 47
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 46 << 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 26 << 26
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 45 << 45
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 44 << 44
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 43 << 43
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 42 << 42
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 40&2
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 45 << 45
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 27 << 27
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 28 << 28
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 29 << 29
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 41 << 41
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 28 << 28
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 29 << 29
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 26&2
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 26 := 30 << 30
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 28&2
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4 := 28&4
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 28 := 32 << 32
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4 := 24&4
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4 := 24&4
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 8 := 24&8
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 24 := 31 << 31
(smt.stats    0    101    934    873   298/209/190      96/13     7   33   19.23)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4 := 4&4
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 4 := 31 << 31
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4 := 4&4
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 4 := 31 << 31
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 30 << 30
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 26&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 26 := 32 << 32
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 34 := 40 << 40
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 32 << 32
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 33 << 33
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 34 := 40 << 40
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 34 << 34
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 35 << 35
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 30&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 30 := 36 << 36
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 32&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 32 := 37 << 37
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 34 := 39 << 39
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 32&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 32 := 38 << 38
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 34 := 39 << 39
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 30&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 30 := 36 << 36
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 30&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 30 := 37 << 37
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 32&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 32 := 37 << 37
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 34 := 39 << 39
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 30&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 30 := 39 << 39
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 30&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 30 := 39 << 39
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 32 << 32
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 33 << 33
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 34 << 34
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 35 << 35
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 28&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 28 := 34 << 34
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 28&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 28 := 33 << 33
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 28&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 28 := 33 << 33
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 28&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 28 := 34 << 34
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 28&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 28 := 34 << 34
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 28&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 28 := 34 << 34
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&2
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 34 := 40 << 40
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 34 := 40 << 40
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 34&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 34 := 40 << 40
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 28 << 28
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 29 << 29
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 28 << 28
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 27 << 27
(smt.stats    1    202   2094   2506   407/303/247     199/19     9   42   19.71)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 26 << 26
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 26 << 26
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 20&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 20 := 25 << 25
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 20&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 20 := 25 << 25
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 20&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 20 := 25 << 25
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 16&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 16 := 24 << 24
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 16&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 16 := 24 << 24
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 16&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 16 := 24 << 24
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 4&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 4 := 24 << 24
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 24 << 24
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&576460752303423487
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 1152921504606846975 := 9223372036854775792 >>l 63
(smt.stats    2    313   4334   4641   475/448/290     333/41    12   64   19.80)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 3 << 3
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 4 << 4
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 4 << 4
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 3 << 3
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 3 << 3
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 4 << 4
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 3 << 3
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 3 << 3
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 5 << 5
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 5 << 5
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 13 << 13
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 14 << 14
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 15 << 15
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 20 << 20
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 21 << 21
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 22 << 22
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 23 << 23
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 22 << 22
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 21 << 21
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 20 << 20
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 15 << 15
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 14 << 14
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 13 << 13
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 14 << 14
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 15 << 15
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 20 << 20
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 21 << 21
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 22 << 22
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 21 << 21
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 20 << 20
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 15 << 15
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 14 << 14
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 15 << 15
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 20 << 20
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 21 << 21
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 20 << 20
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 15 << 15
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 20 << 20
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 16 << 16
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 19 << 19
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 17 << 17
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 18 << 18
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 11 << 11
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 12 << 12
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 11 << 11
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 10 << 10
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 9 << 9
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 8 << 8
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 8 << 8
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 2 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 1 << 1
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 2 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 2 << 2
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 32 << 32
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 36 << 36
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 38 << 38
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 37 << 37
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 37 << 37
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 34 << 34
(smt.stats    3    414   6036   7123   717/654/368     439/70    14   86   20.53)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2473901162488 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2473901162480 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 32 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 64 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 128 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 256 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 512 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1024 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2048 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4096 := 2473901162496&2473901162497
(smt.stats    4    525  11028  11643  1103/903/371     569/70    14   86   21.04)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2048 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4096 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 8192 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 16384 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 32768 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 65536 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 131072 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 262144 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 524288 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1048576 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2097152 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4194304 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 8388608 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 16777216 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 33554432 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 67108864 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 134217728 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 268435456 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 536870912 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1073741824 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2147483648 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4294967296 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 8589934592 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 34359738368 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 68719476736 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 137438953472 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 134217728 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 268435456 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 536870912 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1073741824 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2147483648 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4294967296 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4294967296 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 8589934592 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 34359738368 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 68719476736 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 137438953472 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&2473901162497
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 549755813888 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 549755813888 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1099511627776 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1099511627776 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1099511627776 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 137438953472 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4947802324991
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 576465700105748479 := 9223372036854775792 >>l 27
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4947802324991
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 576465700105748479 := 9223372036854775792 >>l 27
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4947802324991
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 576465700105748479 := 9223372036854775792 >>l 27
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4947802324991
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 4947802324991 := 9223372036854775792 >>l 27
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 274877906944 := 2473901162496&4672924418048
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 4672924418048 := 9223372036854775792 >>l 27
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 6308233216 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 6174015488 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4294967296 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 134217728 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 268435456 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 536870912 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 536870912 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1073741824 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1073741824 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 268435456 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 268435456 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 268435456 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 536870912 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 536870912 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 134217728 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2147483648 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 34359738368 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 34359738368 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 34359738368 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 17179869184 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 67108864 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1004 := 2473901162496&294913
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 968 := 2473901162496&294913
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 960 := 2473901162496&294913
(smt.stats    5    647  16966  17095  1242/1089/593     743/144    17  134   21.82)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 32 := 2473901162496&294913
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 128 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 256 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 512 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 256 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 32 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 128 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 512 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 512 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 512 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 64 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 64 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 64 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 64 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 64 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 12 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 8 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 8 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 16 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 1 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
shl: (shl[59] (bv2int %1) (mod (bv2int %1) 59)) 576460752303423487 := 36 << 36
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
shl: (shl[59] (bv2int %1) (mod (bv2int %1) 59)) 576460752303423487 := 36 << 36
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
shl: (shl[59] (bv2int %1) (mod (bv2int %1) 59)) 576460752303423487 := 36 << 36
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
shl: (shl[59] (bv2int %1) (mod (bv2int %1) 59)) 2542620639234 := 36 << 36
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 576460752303423486 := 576460752303423487 >>l 23
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 576460752303423486 := 576460752303423487 >>l 23
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 576460752303423486 := 576460752303423487 >>l 23
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 2473901162495 := 576460752303423487 >>l 23
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 1 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 2 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 4 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 8 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 16 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 32 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 64 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 2473901162495 := 576460752303423487 >>l 23
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 1 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 2 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 68719476480 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 68719476736 := 576460752303423487 >>l 23
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 68719476352 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 1 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 2 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 512 := 2473901162496&68719476735
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  21563  21482  1368/1198/702     880/198    19  164   22.11)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 68719476480 := 2473901162496&68719476735
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 2473901162496&68719476735
band: (band[59] (shl[59] (bv2int %1) (mod #103 59)) (lshr[59] (bv2int %0) (+ 59 #145))) 68719476480 := 2473901162496&68719476735
(smt.stats    7    859  22550  23150  1592/1264/733    1204/199    19  164   22.20)
(smt.stats    8    985  26082  32645  1781/1648/744    1626/277    21  189   22.74)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 3341484556290&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 3341484556290&4398046511106
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1152924846091403266 := 1 << 1
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 3341484556290&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 3341484556290&4398046511106
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1152924846091403266 := 1 << 1
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 3341484556290&4398046511106
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 1152924846091403266 := 1 << 1
(smt.stats    9   1119  33911  46959  1855/1679/746    1928/407    23  199   22.84)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&4398046511104
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&4398046511106
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 576465150349934594 := 9223372036854775792 >>l 62
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&4398046511106
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 576465150349934594 := 9223372036854775792 >>l 62
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&4398046511106
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 576465150349934594 := 9223372036854775792 >>l 62
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 576460752303423491 := 9223372036854775792 >>l 62
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 576460752303423491 := 9223372036854775792 >>l 62
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 38 << 38
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 38 << 38
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 41 << 41
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 41 << 41
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 41 << 41
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 42 << 42
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 43 << 43
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 44 << 44
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 45 << 45
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 44 << 44
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 42 << 42
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 42 << 42
(smt.stats   10   1220  38842  58400  1963/1749/758    2144/508    24  202   23.51)
ramon: poll                 wall=1.002s usage=1.002s mem=24992KiB load=1.00 rootload=0.98
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 50 << 50
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 51 << 51
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 57 << 57
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 56 << 56
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 58 << 58
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 58 << 58
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 58 << 58
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 58 << 58
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 58 << 58
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 43 << 43
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 45 << 45
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 44 << 44
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 44 << 44
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 49 << 49
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 49 << 49
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 48 << 48
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 47 << 47
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 46 << 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 47 << 47
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 48 << 48
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 49 << 49
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 48 << 48
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 47 << 47
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 46 << 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 46 << 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 46 << 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 47 << 47
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 48 << 48
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 47 << 47
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 47 << 47
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 52 << 52
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 53 << 53
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 53 << 53
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 55 << 55
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 56 << 56
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 55 << 55
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 53 << 53
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 52 << 52
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 53 << 53
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 55 << 55
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 56 << 56
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 57 << 57
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 56 << 56
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 57 << 57
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 56 << 56
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 55 << 55
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 53 << 53
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 55 << 55
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 56 << 56
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 55 << 55
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 53 << 53
(smt.stats   11   1331  45241  70855  2282/1949/779    2360/554    25  207   24.05)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 53 << 53
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 53 << 53
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 55 << 55
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 54 << 54
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 34 << 34
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 50 << 50
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 51 << 51
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 0 := 51 << 51
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&68719476736
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 2&68719476738
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2 := 13 << 13
(smt.stats   12   1453  51621  80317  2357/2121/825    2641/558    26  216   24.24)
(smt.stats   13   1587  61861  95900  2418/2206/827    3079/690    28  228   25.02)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 18&68719476736
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2 := 18&68719476738
shl: (shl[64] (bv2int %1) (mod (+ #103 #122) 64)) 2305843009213693970 := 13 << 13
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 106496 := 106496&68719477054
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 106496 := 106496&68719493119
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 106496 := 106496&2199023255551
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 2305845208236949503 := 9223372036854775792 >>l 50
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 106496 := 106496&2199023255551
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 2305845208236949503 := 9223372036854775792 >>l 50
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 106496 := 106496&2199023255551
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 2305845208236949503 := 9223372036854775792 >>l 50
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 106496 := 106496&106497
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 2882303761517223937 := 9223372036854775792 >>l 50
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 106496 := 106496&109065
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #156 #160) 64)) 2305843009213803017 := 9223372036854775792 >>l 50
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   14   1734  74630 116545  2503/2303/837    3416/748    30  244   25.12)
(smt.stats   15   1835  82395 128545  2579/2377/841    3754/806    31  249   25.31)
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 3072 := 106496&3072
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 3072 := 106496&3072
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 3072 := 106496&3072
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2048 := 106496&2048
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2048 := 106496&2048
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2048 := 106496&2048
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 2048 := 106496&2048
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4096 := 106496&4096
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 4096 := 106496&4096
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 106496&1
shl: (shl[59] (bv2int %1) (mod (bv2int %1) 59)) 109564 := 13 << 13
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 106496&1
shl: (shl[59] (bv2int %1) (mod (bv2int %1) 59)) 109564 := 13 << 13
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 106496&1
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 12 := 140737488355327 >>l 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 106496&1
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 12 := 140737488355327 >>l 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 106496&1
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 12 := 70368744177664 >>l 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 106496&1
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 12 := 70368744177664 >>l 46
band: (band[59] (shl[64] (bv2int %1) (mod #123 64)) (lshr[64] (* 16 #109) (mod #164 64))) 0 := 106496&1
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #105))) 4 := 140737488355327 >>l 46
(smt.stats   16   1946  88427 140694  2663/2458/874    4123/851    32  255   25.40)
ramon: poll                 wall=2.000s usage=1.998s mem=27652KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.986s mem=28208KiB load=0.99 rootload=0.98
(smt.stats   17   2068  99889 156307  2706/2473/892    4426/970    34  307   26.39)
ramon: poll                 wall=4.000s usage=3.986s mem=28584KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.986s mem=28760KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.985s mem=29268KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.002s usage=6.987s mem=29272KiB load=1.00 rootload=1.00
(smt.stats   18   2202 114451 168713  3078/2571/893    4706/1016    35  322   27.26)
ramon: poll                 wall=8.000s usage=7.985s mem=29276KiB load=1.00 rootload=1.00
(smt.stats   19   2351 128352 205527  3234/3022/901    5058/1075    38  347   27.45)
ramon: poll                 wall=9.000s usage=8.984s mem=29560KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2512 139833 225421  3303/3058/931    5890/1154    40  412   27.83)
ramon: poll                 wall=10.000s usage=9.984s mem=29944KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.982s mem=30312KiB load=1.00 rootload=1.00
(smt.stats   21   2613 149634 243104  3409/3179/932    6184/1203    41  422   28.12)
ramon: poll                 wall=12.000s usage=11.981s mem=30332KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.981s mem=30332KiB load=1.00 rootload=1.00
(smt.stats   22   2724 162537 261300  3546/3215/932    6875/1229    42  427   28.41)
ramon: poll                 wall=14.000s usage=13.981s mem=31100KiB load=1.00 rootload=1.00
(smt.stats   23   2846 172925 276598  3688/3375/932    7046/1242    42  427   28.80)
ramon: poll                 wall=15.000s usage=14.981s mem=31100KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.981s mem=31100KiB load=1.00 rootload=1.00
(smt.stats   24   2980 186914 297286  3833/3494/932    7907/1250    42  427   29.09)
ramon: poll                 wall=17.000s usage=16.981s mem=31356KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.002s usage=17.985s mem=31612KiB load=1.00 rootload=1.00
(smt.stats   25   3127 201247 313863  4073/3861/938    8634/1630    44  432   29.47)
ramon: poll                 wall=19.002s usage=18.985s mem=31752KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.981s mem=31752KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:59:06 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.999s
ramon: group.utime          19.971s
ramon: group.stime          0.028s
ramon: group.mempeak        32012KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              1.00
