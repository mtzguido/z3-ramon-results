ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:55:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29045 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BnzqwRjgdxZz.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             686546
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   79.3651     10000        49          0            1        2)
(smt.stats    0    101   2257    385  1219/1109/102     103/23     8   17   51.85)
(sat.ddfw       1      1   40.3266     20001        98          1            1        3)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 1 := 137438953471&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 1 := 0 << 37
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953471 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953470 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953468 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953464 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953456 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953456 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953456 := 137438953471&275012124670
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953456 := 137438953471&137438953456
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 137438953456 := 0 << 37
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953440 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953440 := 137438953471&274877906944
(smt.stats    1    202   4909    895  1817/1582/103     203/26     9   20   52.24)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953408 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953408 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 137438953471&274877906944
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 274877906943 := 1 << 38
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 137438953471&274877906944
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 274877906943 := 1 << 38
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 137438953471&274877906944
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 274877906943 := 1 << 38
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 137438953471&274877906944
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 1 := 137438953471&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 137438953471&274877906944
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 2 := 1 << 38
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 137438953471&274877906944
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 2 := 1 << 38
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 137438953471&274877906944
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 1 := 137438953471&274877906944
(sat.ddfw       1      1   42.9185     40001       196          2            1        5)
(sat.ddfw       1      1   39.3701     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.847s mem=54836KiB load=0.85 rootload=0.83
(smt.stats    2    313   5745   1127  1938/1709/144     331/36    10   30   52.62)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 67108864 := 137438953471&2199023255552
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 67108864 := 137438953471&2199023255552
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 67108864 := 137438953471&2199023255552
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 67108736 := 137438953471&2199023255552
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 137438953471&2199023255552
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 67108745 := 67108744 << 38
(smt.stats    3    414   7243   2048  2203/1999/168     443/45    13   41   52.72)
(sat.ddfw       1      1    34.632    110001       539          4            1       12)
(smt.stats    4    526   9046   3934  2841/2616/172     585/99    15   48   52.81)
(smt.stats    5    648  14309   6982  2927/2674/174     719/105    16   50   52.91)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    749  16789   9425  2952/2704/174     839/113    17   50   53.00)
(smt.stats    7    860  19288  12191  2977/2731/174     956/114    17   50   53.00)
(smt.stats    8    982  21398  14995  3008/2777/181    1079/137    19   58   53.10)
(smt.stats    9   1116  25187  17798  3021/2782/181    1240/137    19   58   53.10)
(smt.stats   10   1217  29635  23137  3023/2792/181    1341/163    20   58   53.20)
(sat.ddfw       1      1   30.3024    160000       784          5            1       17)
(smt.stats   11   1328  34023  30109  3030/2799/181    1454/163    20   58   53.20)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  37954  37317  3035/2804/182    1575/172    21   62   53.30)
(smt.stats   13   1584  42396  46560  3043/2805/182    1720/172    21   62   53.44)
ramon: poll                 wall=2.000s usage=1.846s mem=55604KiB load=1.00 rootload=1.00
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&2336596426880
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184237871104
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&2336596426880
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184237871214
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761981
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761981
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761982
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761980
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761970
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761969
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761716
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761720
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761720
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761736
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761760
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761768
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761832
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761744
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761752
(smt.stats   14   1731  45557  52581  3265/2812/182    1893/183    21   62   53.74)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761857
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761792
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 274877906920 := 274877906943&35184170761800
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953674 := 274877906943&35184170761800
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953672 := 274877906943&35184170761800
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953672 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953672 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953672 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438954184 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953928 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953928 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953928 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953672 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137438953160 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 137371844296 := 274877906943&35184170761928
(sat.ddfw       1      1   26.8461    220001      1078          6            1       23)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268436168 := 274877906943&35184170761928
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 805307080 := 274877906943&35184170761864
(smt.stats   15   1832  47396  60691  3458/3203/284    2131/267    23   86   53.93)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 805307080 := 274877906943&35184170761864
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 805307080 := 274877906943&35184170761864
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 805307080 := 274877906943&35184170761864
(smt.stats   16   1943  48134  62764  3600/3247/284    2366/273    23   86   54.04)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 4398046511103&268435456
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 4398046511103&1073741824
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 4398046511103&2147483648
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 4398046511103&1073741824
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 4398046511103&2147483648
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 4398046511103&4294967296
(smt.stats   17   2066  51557  71394  3765/3531/339    2873/461    25  109   54.23)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 1024 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 2048 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 4096 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8192 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 16384 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 32768 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 65536 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 131072 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 262144 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 524288 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 1048576 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 2097152 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 4194304 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8388608 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 16777216 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 33554432 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8388608 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8388608 := 4398046511103&536870912
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8388608 := 4398046511103&536870912
(smt.stats   18   2200  52928  74067  4003/3623/413    3179/464    25  109   54.94)
(smt.stats   19   2347  57549  92002  4594/3908/418    3615/476    25  109   55.04)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8388608 := 4398046511103&679516548
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8388612 := 4398046511103&679516548
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8388612 := 4398046511103&679516548
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8388612 := 4398046511103&679516548
(sat.ddfw       1      1    23.948    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.845s mem=57584KiB load=1.00 rootload=0.99
(smt.stats   20   2508  59991  98447  4751/4515/424    4281/633    26  127   55.23)
(smt.stats   21   2609  64009 106015  4799/4519/424    4430/931    27  130   55.42)
(smt.stats   22   2720  68151 124275  4855/4588/425    4944/973    28  130   55.62)
(smt.stats   23   2842  71989 140204  4882/4643/430    5100/1361    30  149   55.62)
(smt.stats   24   2976  75237 154382  4923/4686/435    5683/1385    31  157   55.82)
(sat.ddfw       1      1    21.575    370001      1813          8            1       38)
(smt.stats   25   3123  80613 183171  5042/4756/436    6136/1389    31  157   55.93)
ramon: poll                 wall=4.000s usage=3.880s mem=58412KiB load=1.03 rootload=1.04
(smt.stats   26   3284  88598 220658  5056/4797/436    6761/1876    32  160   56.02)
(smt.stats   27   3461  93764 252735  5090/4832/442    7849/2781    34  173   56.34)
(smt.stats   28   3562  98047 271890  5091/4833/442    7966/2781    34  173   56.34)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   29   3673 101919 285352  5110/4834/442    8118/2842    35  179   56.43)
(sat.ddfw       1      1   19.6078    460001      2254          9            1       47)
(smt.stats   30   3795 108415 323358  5117/4856/442    8244/2842    35  179   56.67)
(smt.stats   31   3929 112100 344536  5128/4870/446    8488/2881    36  182   56.67)
ramon: poll                 wall=5.000s usage=4.869s mem=59068KiB load=0.99 rootload=0.99
(smt.stats   32   4076 115981 352542  5139/4879/446    8673/2881    36  182   56.67)
(smt.stats   33   4237 125078 411796  5144/4884/447    8857/2894    37  206   56.67)
(sat.ddfw       1      1   17.7211    560001      2745         10            1       57)
(smt.stats   34   4414 138181 488085  5163/4899/447    9051/2925    38  206   56.67)
ramon: poll                 wall=6.004s usage=5.836s mem=59228KiB load=0.96 rootload=0.96
(smt.stats   35   4608 144371 502401  5180/4916/450    9292/2933    39  208   56.95)
(smt.stats   36   4709 150065 534501  5180/4916/450    9431/2940    40  210   56.95)
(smt.stats   37   4820 154739 554691  5198/4919/451    9692/2999    41  217   57.05)
(smt.stats   38   4942 157687 565735  5250/4986/454    9967/3001    41  217   57.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 214)
(smt.stats   39   5076 160723 587352  5265/5002/455    9937/3087    42  226   57.14)
(sat.ddfw       1      1   16.2218    670001      3284         11            1       68)
ramon: poll                 wall=7.004s usage=6.876s mem=59488KiB load=1.04 rootload=1.04
(smt.stats   40   5223 166084 600931  5317/5034/458   10159/3106    43  239   57.14)
(smt.stats   41   5384 174222 639427  5345/5057/458   10319/3106    43  239   57.14)
(smt.stats   42   5561 178388 661662  5380/5100/459   10803/3117    44  239   57.24)
(sat.ddfw       1      1   15.4979    790001      3872         12            1       80)
(smt.stats   43   5755 184241 703830  5402/5139/459   11151/3277    45  242   57.24)
ramon: poll                 wall=8.000s usage=7.929s mem=59616KiB load=1.06 rootload=1.05
(smt.stats   44   5968 192417 741223  5572/5309/461   11815/3608    46  256   57.33)
(smt.stats   45   6069 195155 759059  5588/5325/463   12136/3609    46  256   57.33)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 127&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 35184372088832 := 35184372088832 << 7
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 127&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 35184372088832 := 35321676824706 << 7
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 127&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 35184372088832 := 35321676824706 << 7
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 127&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 35184372088832 := 35321676824830 << 7
(smt.stats   46   6180 198723 769279  5626/5331/464   12223/3691    47  282   57.64)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 255&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 35184372088832 := 35321542606976 << 8
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 255&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 35184372088832 := 35321676824578 << 8
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 255&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 35184372088832 := 35321945260034 << 8
(smt.stats   47   6302 201493 778395  5689/5392/472   12354/3697    47  282   57.64)
ramon: poll                 wall=9.000s usage=8.975s mem=60128KiB load=1.05 rootload=1.05
(sat.ddfw       1      1   14.5219    920001      4509         13            1       93)
(smt.stats   48   6436 202289 782347  6147/5439/477   12523/3720    47  282   57.88)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   49   6583 203435 788877  6187/5891/478   12760/3752    48  289   57.88)
(smt.stats   50   6744 207334 824245  6226/5939/478   12974/3756    48  289   57.97)
(smt.stats   51   6921 212469 848567  6258/5985/478   13202/3885    49  305   58.47)
ramon: poll                 wall=10.000s usage=9.975s mem=60568KiB load=1.00 rootload=1.00
(smt.stats   52   7115 218652 869363  6287/6007/479   13567/3946    50  310   58.47)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 5 := 7&175
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 7 := 7&175
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 175 := 0 << 3
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 7 := 7&175
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 175 := 0 << 3
(smt.stats   53   7328 223391 892924  6522/6202/485   14147/4057    51  326   58.57)
(sat.ddfw       1      1   13.5148   1060001      5196         14            1      108)
(smt.stats   54   7562 229821 932237  6568/6264/488   14752/4216    52  335   58.66)
(smt.stats   55   7663 231969 952223  6597/6294/488   14876/4219    52  335   58.66)
ramon: poll                 wall=11.000s usage=10.977s mem=61044KiB load=1.00 rootload=1.00
(smt.stats   56   7774 236055 981230  6600/6322/488   15030/4271    53  336   58.76)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7896 241290 1020473  6612/6334/488   15436/4271    53  336   58.85)
(smt.stats   58   8030 244522 1047976  6621/6343/488   15727/4271    53  336   58.85)
(smt.stats   59   8177 249205 1077601  6638/6353/489   15972/4420    54  339   58.85)
(smt.stats   60   8338 249611 1092292  6640/6362/489   16261/4420    54  339   58.85)
(smt.stats   61   8515 250828 1121215  6644/6366/489   16438/4420    54  339   58.95)
(sat.ddfw       1      1   12.6295   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.975s mem=61264KiB load=1.00 rootload=1.00
(smt.stats   62   8709 254716 1151314  6680/6373/489   16647/4425    54  339   58.95)
(smt.stats   63   8922 260235 1187319  6776/6498/494   17106/4539    55  340   58.95)
ramon: poll                 wall=13.000s usage=12.978s mem=61532KiB load=1.00 rootload=1.00
(smt.stats   64   9156 270303 1259027  6781/6503/498   17767/4539    55  340   59.04)
(sat.ddfw       1      1   11.8774   1370001      6715         16            1      139)
(smt.stats   65   9413 276516 1324595  6790/6512/499   18398/4824    56  364   59.17)
ramon: poll                 wall=14.004s usage=13.911s mem=61780KiB load=0.93 rootload=0.94
(smt.stats   66   9514 280632 1342317  6792/6514/499   18528/4947    57  376   59.17)
(smt.stats   67   9625 285172 1374217  6840/6516/499   18736/4948    57  376   59.26)
(smt.stats   68   9747 289868 1417416  6845/6567/499   19132/4948    57  376   59.36)
(smt.stats   69   9881 297629 1461235  6849/6571/499   19330/4948    57  376   59.36)
ramon: poll                 wall=15.000s usage=14.945s mem=61840KiB load=1.04 rootload=1.03
(smt.delete-inactive-clauses  :num-deleted-clauses 724)
(smt.stats   70  10028 300780 1493034  6851/6573/499   18813/4948    57  376   59.36)
(sat.ddfw       1      1   11.1813   1540001      7549         17            1      156)
(smt.stats   71  10189 308452 1556905  6856/6578/500   19242/5268    58  400   59.36)
ramon: poll                 wall=16.000s usage=15.834s mem=61872KiB load=0.89 rootload=0.89
(smt.stats   72  10369 318899 1621599  6861/6583/503   19493/5340    59  417   59.97)
(smt.stats   73  10563 322104 1643462  6881/6603/511   19732/5341    59  417   60.07)
(smt.stats   74  10776 328161 1696140  6958/6606/511   19941/5370    60  451   60.07)
ramon: poll                 wall=17.000s usage=16.797s mem=62232KiB load=0.96 rootload=0.96
(smt.stats   75  11010 331928 1720626  7103/6828/514   20152/5388    61  462   60.07)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 4 := 2199023255551&268435456
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 2199023255551&268435456
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 1 := 2199023255551&268435456
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 1 := 2199023255551&268435457
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 1 := 2199023255551&536870913
(sat.ddfw       1      1    10.442   1720001      8431         18            1      174)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 16777217 := 2199023255551&536870913
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 33554433 := 2199023255551&536870913
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 33554433 := 2199023255551&536870913
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 33554433 := 2199023255551&536870913
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268435457 := 2199023255551&536870913
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 134217729 := 2199023255551&536870913
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 536870913 := 2199023255551&536870913
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 536870913 := 134219008 << 41
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268959745 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268451841 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268468225 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268632065 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268632065 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268632065 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268632065 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268632065 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268632065 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268632065 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268600321 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268616705 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268616705 := 2199023255551&402653185
(smt.stats   76  11267 338665 1750081  7308/6834/514   20731/5408    61  462   60.27)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268599297 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268599297 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268566529 := 2199023255551&402653185
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 268566529 := 2199023255551&402653185
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11549 344000 1777145  7975/7206/560   21295/5580    62  474   60.37)
ramon: poll                 wall=18.000s usage=17.768s mem=62572KiB load=0.97 rootload=0.97
(smt.stats   78  11650 346927 1789267  8143/7745/570   21525/5581    62  474   60.46)
(smt.stats   79  11761 350111 1825713  8208/7930/571   21849/5738    63  477   60.46)
(smt.stats   80  11883 355630 1865117  8281/7967/572   22204/5979    64  478   60.56)
ramon: poll                 wall=19.000s usage=18.797s mem=62816KiB load=1.03 rootload=1.03
(smt.stats   81  12017 358186 1883643  8367/8016/572   22461/5983    64  478   60.65)
(sat.ddfw       1      1   9.95912   1910001      9362         19            1      193)
(smt.stats   82  12164 362121 1931031  8390/8106/572   22637/5983    64  478   60.65)
(smt.stats   83  12325 366957 1973627  8428/8125/573   22833/6059    65  478   60.75)
(smt.stats   84  12502 372381 2038134  8487/8194/573   23195/6060    65  478   60.75)
ramon: poll                 wall=20.000s usage=19.795s mem=63136KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:56:02 2024
ramon: root.execname        z3
ramon: root.utime           19.840s
ramon: root.stime           0.010s
ramon: group.total          19.865s
ramon: group.utime          19.845s
ramon: group.stime          0.020s
ramon: group.mempeak        63136KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              0.99
