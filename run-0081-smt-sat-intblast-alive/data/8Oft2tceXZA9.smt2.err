ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:42:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29631 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/8Oft2tceXZA9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             275934
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   204/204     0/0  61       0    18.44   0.00)
(sat.stats    195   2580    0   204/204   195/102  61       0    18.82   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1025 :time 0.00)
(sat.stats    195   2580    0   204/204   195/102  61       0    18.82   0.01)
(sat.stats    195   2580    0   204/204   195/102  61       0    18.82   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 569018.82 :time 0.00)
(sat.stats    195   2580    0   206/206   195/104  61       0    18.82   0.01)
(sat.stats    198   2666    1   206/206   198/105  61       0    18.82   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    201   2759    2   206/206   201/108  61       0    18.92   0.01)
(sat.stats    204   2916    3   206/206   204/111  61       0    18.92   0.01)
(sat.stats    207   3064    4   206/206   207/112  61       0    18.92   0.01)
(sat.stats    210   3168    5   206/206   210/112  61       0    18.92   0.01)
(sat.stats    213   3239    6   206/206   213/113  61       0    18.92   0.01)
(sat.stats    216   3245    7   206/206   216/116  61       0    18.92   0.01)
(sat.stats    219   3252    8   206/206   219/118  61       0    18.92   0.01)
(sat.stats    222   3260    9   206/206   222/120  61       0    18.92   0.01)
(sat.stats    225   3267   10   206/206   225/122  61       0    18.92   0.01)
(sat.stats    229   3285   11   206/206   229/125  61       0    18.92   0.01)
(sat.stats    232   3288   12   206/206   232/127  61       0    18.92   0.01)
(sat.stats    235   3295   13   206/206   235/130  61       0    18.92   0.01)
(sat.stats    315   5767   25   206/206   315/167  61       0    18.92   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4295 :time 0.00)
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #55))) 1 := 25 << 11
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 836 := 1024&51200
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 362 := 1024&51200
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 136 := 1024&51200
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&51200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #677 #681) 64)) 0 := 50 << 10
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&51200
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 1 := 1024&51200
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 1024 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 128 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 48 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 770 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 988 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 704 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 16 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 8 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 32 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 128 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 512 := 1024&124928
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 0 := 1024&124928
band: (band[36] (if (= #268 63) 1 (if #508 2 #670)) (shl[64] (* 2 #65) (mod #685 64))) 256 := 1024&124928
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4914 :time 0.00)
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 512 := 1024&10240
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 1024 := 1024&10240
band: (band[36] (if (= #58 35) 1 (if #530 2 #598)) (shl[36] (bv2int %0) (+ 36 #601))) 256 := 1024&10240
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    602  13159   48  1842/1839   635/277 193       0    20.84   0.15)
(sat.stats    711  16271   83 12876/12873  1414/947 193       0    24.72   0.23)
(sat.stats   1200  29284  154 59031/59028  4833/3877 193       0    43.02   0.99)
ramon: poll                 wall=1.000s usage=0.995s mem=43484KiB load=1.00 rootload=0.96
ramon: poll                 wall=2.000s usage=1.995s mem=54200KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 15903 :time 0.00)
ramon: poll                 wall=3.000s usage=2.995s mem=56160KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.995s mem=56416KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.995s mem=70236KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.994s mem=77404KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.994s mem=85340KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.994s mem=88408KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.994s mem=92504KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.994s mem=126MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.994s mem=115MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.994s mem=118MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.993s mem=123MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.993s mem=123MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.993s mem=128MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.993s mem=130MiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.993s mem=132MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.993s mem=134MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.993s mem=136MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.993s mem=138MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:42:43 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.090s
ramon: group.total          20.011s
ramon: group.utime          19.915s
ramon: group.stime          0.096s
ramon: group.mempeak        138MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              1.00
