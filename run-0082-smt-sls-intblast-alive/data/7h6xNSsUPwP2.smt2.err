ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:45:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29242 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7h6xNSsUPwP2.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             650420
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&108
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 108 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&108
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 108 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&107
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 107 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&107
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 107 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&22517998136852480
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 36028797018963967 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&107
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 107 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&22517998136852480
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 36028797018963967 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&36028797018963965
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 252201579132747773 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&22517998136852480
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 22517998136852481 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&22517998136852480
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 22517998136852481 := 106 << 51
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&22517998136852480
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 22517998136852481 := 106 << 51
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   97.0874     10000        49          0            1        2)
(smt.stats    0    101    571    597  1203/1042/105      91/7     7   17   51.86)
(sat.ddfw       1      1   42.3771     20001        98          1            1        3)
(smt.stats    1    202   1187   1191  1340/1132/106     191/9     9   19   52.05)
(sat.ddfw       1      1   40.1606     40001       196          2            1        5)
(smt.stats    2    313   2167   2429  1471/1328/108     327/23    10   20   52.14)
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 2125699024118874112 := 181168 << 53
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 2125699024118874112 := 181168 << 53
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 2125699024118874112 := 181168 << 53
(sat.ddfw       1      1    38.961     70001       343          3            1        8)
(smt.stats    3    414   3206   4037  1552/1406/115     429/34    12   23   52.24)
ramon: poll                 wall=1.000s usage=0.830s mem=54340KiB load=0.83 rootload=0.82
(smt.stats    4    525   4079   4669  1632/1418/119     531/38    14   25   52.34)
(sat.ddfw       1      1   35.2113    110001       539          4            1       12)
(sat.ddfw       1      1   31.5054    160000       784          5            1       17)
(smt.stats    5    647   4489   5460  1826/1498/119     666/42    14   25   52.43)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   6117   7941  1949/1755/119     775/52    15   25   52.43)
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&1
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18410715276690587649 := 532454 << 54
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18410715276690587649 := 532454 << 54
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18410715276690587648 := 532454 << 54
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18410715276690587648 := 532454 << 54
ramon: poll                 wall=2.000s usage=1.813s mem=54768KiB load=0.98 rootload=0.98
(smt.stats    7    859   7938  10747  2033/1811/119     924/53    15   25   52.53)
(sat.ddfw       1      1    27.663    220001      1078          6            1       23)
(smt.stats    8    981   9634  13964  2229/1892/134    1089/74    16   28   52.92)
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 1 := 1&18014398509481984
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 1 := 1&18014398509481984
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&18014398509481984
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 20266198323167233 := 32889 << 54
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 1 := 1&18014398509481984
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&18014398509481984
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 20266198323167233 := 32889 << 54
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&18014398509481984
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 20266198323167233 := 32889 << 54
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&18014398509481984
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 20266198323167233 := 32889 << 54
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 1 := 1&18014398509481984
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&18014398509481984
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 ...) 0 (if #679 1 #681))) 1 := 18014398509481984&1
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&18014398509481984
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 ...) 0 (if #679 1 #681))) 1 := 18014398509481984&1
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 1&18014398509481984
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 ...) 0 (if #679 1 #681))) 1 := 18014398509481984&1
(smt.stats    9   1115  11009  17068  2383/2228/153    1285/145    18   38   52.92)
(sat.ddfw       1      1   25.0268    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.804s mem=55072KiB load=0.99 rootload=1.00
(smt.stats   10   1216  12036  20056  2510/2239/153    1398/147    18   38   53.01)
(sat.ddfw       1      1   22.7467    370001      1813          8            1       38)
(smt.stats   11   1327  12913  22240  2677/2395/153    1523/157    19   46   53.11)
ramon: poll                 wall=4.004s usage=3.808s mem=55512KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  14228  25702  2823/2649/155    1657/182    20   52   53.20)
(smt.stats   13   1583  16741  29452  2859/2698/175    1805/206    21   70   53.20)
(sat.ddfw       1      1   20.8092    460001      2254          9            1       47)
(smt.stats   14   1730  21451  40346  2898/2707/175    1970/265    22   82   53.30)
(smt.stats   15   1831  22830  41608  2980/2759/175    2089/266    22   82   53.39)
ramon: poll                 wall=5.004s usage=4.828s mem=55496KiB load=1.02 rootload=1.01
(smt.stats   16   1942  23902  45222  3131/2906/175    2226/266    22   82   53.39)
(smt.stats   17   2064  25765  49677  3152/2996/181    2356/329    23   83   53.39)
(sat.ddfw       1      1   19.1205    560001      2745         10            1       57)
(smt.stats   18   2198  27571  56895  3228/2999/181    2532/393    24   85   53.49)
(smt.stats   19   2345  30292  66922  3263/3085/181    2717/395    24   85   53.49)
ramon: poll                 wall=6.000s usage=5.857s mem=55828KiB load=1.03 rootload=1.03
(smt.stats   20   2506  32464  71512  3308/3121/182    2886/408    25   86   53.49)
(sat.ddfw       1      1   17.6792    670001      3284         11            1       68)
(smt.stats   21   2607  34701  74724  3357/3160/182    2996/411    25   86   53.58)
(smt.stats   22   2718  37733  90459  3475/3270/182    3128/411    25   86   53.58)
ramon: poll                 wall=7.000s usage=6.857s mem=56012KiB load=1.00 rootload=1.00
(smt.stats   23   2840  39259  97960  3513/3335/182    3273/414    25   86   53.58)
(sat.ddfw       1      1   16.4159    790001      3872         12            1       80)
(smt.stats   24   2974  40187 100449  3670/3365/182    3465/419    25   86   53.69)
(smt.stats   25   3121  44139 113835  3702/3540/184    3688/509    26   90   53.79)
ramon: poll                 wall=8.000s usage=7.857s mem=56056KiB load=1.00 rootload=1.00
(smt.stats   26   3282  46991 125085  3884/3547/184    3884/509    26   90   53.88)
(smt.stats   27   3459  49932 140342  3937/3774/186    4117/652    27   98   53.88)
(smt.stats   28   3560  51778 143727  3952/3786/186    4216/652    27   98   53.88)
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&1715657000903046
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18412430933691490694 := 24575 << 45
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&1715657000903046
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18412430933691490694 := 24575 << 45
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&1715657000903046
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18412430933691490694 := 24575 << 45
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&114664
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18410715276690702312 := 24575 << 45
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&35993612646875136
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 36028797018963967 := 24575 << 45
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&35993612646875136
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 36028797018963967 := 24575 << 45
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&35993612646875136
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 36028797018963966 := 24575 << 45
(smt.stats   29   3671  54270 147044  4004/3797/186    4347/655    27   98   53.98)
(sat.ddfw       1      1   15.3592    920001      4509         13            1       93)
(smt.stats   30   3793  58558 155096  4046/3868/196    4462/681    28  100   53.98)
ramon: poll                 wall=9.000s usage=8.943s mem=56312KiB load=1.09 rootload=1.09
(smt.stats   31   3927  61208 160094  4137/3893/196    4599/682    29  100   54.08)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  63010 165376  4250/3987/196    4762/683    29  100   54.17)
(sat.ddfw       1      1   14.5879   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=9.941s mem=56568KiB load=1.00 rootload=1.00
(smt.stats   33   4235  64573 171041  4444/4107/196    4938/684    29  100   54.37)
ramon: poll                 wall=11.004s usage=10.949s mem=56824KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   13.6874   1210001      5931         15            1      123)
(smt.stats   34   4412  65868 174581  4742/4312/196    5128/685    29  100   54.56)
(smt.stats   35   4606  70950 177597  4818/4650/196    5322/685    29  100   54.56)
(smt.stats   36   4707  72498 180780  4982/4650/196    5429/688    29  100   54.66)
ramon: poll                 wall=12.000s usage=11.940s mem=56824KiB load=1.00 rootload=0.99
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&18014398509481982
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18392700878181105662 := 31280436543717345 << 50
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&18014398509481982
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18392700878181105662 := 31280436543717345 << 50
(sat.ddfw       1      1   12.8814   1370001      6715         16            1      139)
(smt.stats   37   4818  73013 181964  5312/4914/196    5541/690    29  100   54.75)
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&18014398509481982
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18392700878181105662 := 31280436543717345 << 50
ramon: poll                 wall=13.000s usage=12.940s mem=57080KiB load=1.00 rootload=1.00
(smt.stats   38   4940  73793 184444  5721/5323/196    5683/691    29  100   54.85)
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&18473616482957300
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18429188893173544948 := 31739654516752375 << 50
band: (band[55] (if (or #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 ...) 0 1) (shl[64] (bv2int %0) (mod #1218 64))) 0 := 0&18473616482957300
shl: (shl[64] (bv2int %0) (mod (+ #110 #1217) 64)) 18429188893173544948 := 31739654516752375 << 50
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   39   5074  75717 190231  5828/5557/201    5879/736    30  101   54.85)
ramon: poll                 wall=14.004s usage=14.019s mem=57120KiB load=1.07 rootload=1.08
(sat.ddfw       1      1   12.1803   1540001      7549         17            1      156)
(smt.stats   40   5221  79745 200813  6060/5699/201    6028/781    31  101   54.94)
ramon: poll                 wall=15.000s usage=15.080s mem=57200KiB load=1.06 rootload=1.06
(sat.ddfw       1      1    11.655   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.075s mem=57396KiB load=1.00 rootload=0.99
(smt.stats   41   5382  80872 203845  6654/6015/201    6207/786    31  101   55.14)
ramon: poll                 wall=17.000s usage=17.075s mem=57512KiB load=1.00 rootload=1.00
(smt.stats   42   5559  83243 209860  6882/6607/201    6426/788    31  101   55.33)
(sat.ddfw       1      1   11.0736   1910001      9362         19            1      193)
(smt.stats   43   5753  93439 225685  6969/6785/202    6615/846    32  107   55.48)
ramon: poll                 wall=18.000s usage=18.075s mem=57748KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.6729   2110001     10343         20            1      214)
ramon: poll                 wall=19.004s usage=19.189s mem=57808KiB load=1.11 rootload=1.11
(smt.stats   44   5966  95965 230308  7348/7178/203    6870/877    33  110   55.67)
(smt.stats   45   6067  97537 236336  7435/7192/203    7064/878    33  110   55.67)
ramon: poll                 wall=20.000s usage=20.185s mem=57908KiB load=1.00 rootload=1.00
(smt.stats   46   6178  99087 240989  7551/7311/203    7228/880    33  110   55.77)
ramon: end                  Fri Nov  1 21:45:43 2024
ramon: root.execname        z3
ramon: root.utime           20.240s
ramon: root.stime           0.010s
ramon: group.total          20.259s
ramon: group.utime          20.247s
ramon: group.stime          0.012s
ramon: group.mempeak        58420KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.01
