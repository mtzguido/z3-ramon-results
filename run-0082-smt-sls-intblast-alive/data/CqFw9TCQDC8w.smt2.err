ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:58:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28966 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CqFw9TCQDC8w.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             694440
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   2569    656  1101/992/90      96/4     3   13   51.85)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 1 := 74 << 12
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 1 := 74 << 12
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 1 := 74 << 12
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 73 := 74 << 12
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 73 := 74 << 12
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   94.3396     10000        49          0            1        2)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 303105 := 74 << 12
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 4095 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 4094 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 4092 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 4088 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 4080 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 4 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 8 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 32 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 64 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 128 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 256 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 512 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 1024 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 2048 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 2080 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 2048 := 4095&303104
(smt.stats    1    203   4008   1838  1707/1541/165     197/21     8   36   52.43)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 15 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 16 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 16 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 16 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 10 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 8 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 4 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 2 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 4 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 8 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 4 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 8 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 16 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 32 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 64 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 128 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 256 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 512 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 256 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 512 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1024 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 2048 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 64 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 2048 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 2048 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 2048 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 2048 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 5 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 4 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 2 := 4095&303104
(sat.ddfw       1      1   49.7562     20001        98          1            1        3)
(smt.stats    2    314   6602   5221  1797/1627/249     312/39    12   60   52.82)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 1 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 1984 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 1920 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 1024 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 960 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 128 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 256 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 512 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 128 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 128 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 64 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 4095&303104
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 256 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 8 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 16 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 20 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 20 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 20 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 16 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 8 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 128 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 256 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 512 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 128 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 128 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 256 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 64 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 64 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1024 := 4095&303104
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 32 := 4095&303104
(smt.stats    3    416   7918   7730  1888/1713/353     440/52    15   81   53.21)
(smt.stats    4    527  10247  10479  2206/2005/357     546/127    18  106   53.21)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 1 := 42 << 1
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 1 := 42 << 1
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 64 := 42 << 1
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 44 := 42 << 1
(sat.ddfw       1      1   51.6796     40001       196          2            1        5)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #116))) 45 := 42 << 1
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 1&84
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 1 := 1&84
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 1&84
band: (band[43] (if (= #120 42) 1 (if #548 3 #666)) (shl[43] (bv2int %0) (+ 43 #669))) 1 := 1&84
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1 := 1&84
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1 := 1&84
(smt.stats    5    650  12631  12836  2281/2075/365     657/148    20  114   53.59)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    751  15158  17289  2370/2142/368     794/148    20  114   53.68)
(sat.ddfw       1      1   44.5104     70001       343          3            1        8)
(smt.stats    7    862  18171  21907  2402/2175/375     941/191    22  132   53.87)
(smt.stats    8    984  21308  27085  2426/2197/381    1106/258    24  149   53.97)
(smt.stats    9   1118  25863  32312  2447/2213/383    1240/263    25  156   53.97)
(smt.stats   10   1219  30047  38965  2559/2304/384    1418/281    26  159   54.18)
ramon: poll                 wall=1.000s usage=0.972s mem=56396KiB load=0.97 rootload=0.95
(smt.stats   11   1330  34154  43284  2559/2304/384    1562/281    26  159   54.27)
(sat.ddfw       1      1   37.8788    110001       539          4            1       12)
(smt.stats   12   1454  41561  53465  2652/2375/387    1853/313    28  161   54.51)
(smt.stats   13   1588  47535  66469  2666/2383/388    2249/343    29  167   54.61)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 16 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 16 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 24 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 24 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 24 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 24 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 24 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 56 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093022201
(sat.ddfw       1      1   32.4669    160000       784          5            1       17)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 760 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 760 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1016 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1016 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1016 := 8796093022200&8796093022201
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1016 := 8796093022200&8796093012595
(smt.stats   14   1735  50820  72193  2887/2585/411    2451/375    30  176   54.89)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 1016 := 8796093022200&8796093016185
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 888 := 8796093022200&8796093016185
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093016185
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093016185
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093016185
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093016185
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093016185
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093016185
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 632 := 8796093022200&8796093012601
(smt.stats   15   1836  53624  80983  2996/2708/424    2634/420    31  185   55.02)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 8168 := 8796093022200&8796093022202
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 8168 := 8796093022200&8796093022202
(smt.stats   16   1947  57513  90050  3074/2783/437    2938/432    32  194   55.02)
ramon: poll                 wall=2.000s usage=1.978s mem=57396KiB load=1.01 rootload=1.00
(sat.ddfw       1      1     28.45    220001      1078          6            1       23)
(smt.stats   17   2069  64415  99441  3077/2790/439    3164/511    33  221   55.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2203  67990 106028  3200/2838/440    3624/596    34  222   55.64)
(sat.ddfw       1      1   25.2799    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.980s mem=58268KiB load=1.00 rootload=1.00
(smt.stats   19   2350  71703 115841  3381/3070/442    4081/654    35  225   55.74)
(smt.stats   20   2511  76397 128311  3451/3158/444    4709/666    36  238   55.83)
(sat.ddfw       1      1   22.5606    370001      1813          8            1       38)
(smt.stats   21   2612  80290 138660  3558/3166/444    4973/694    37  248   55.95)
ramon: poll                 wall=4.000s usage=4.028s mem=58728KiB load=1.05 rootload=1.05
(smt.stats   22   2723  82869 149376  3665/3286/444    5419/699    37  248   56.15)
(sat.ddfw       1      1   20.4174    460001      2254          9            1       47)
(smt.stats   23   2845  86676 163975  3831/3392/444    5924/704    37  248   56.25)
(smt.stats   24   2979  90217 177182  3967/3680/447    6949/828    38  256   56.34)
(smt.stats   25   3126  94861 188174  3992/3704/448    7334/829    38  256   56.59)
ramon: poll                 wall=5.000s usage=5.027s mem=58888KiB load=1.00 rootload=1.00
(smt.stats   26   3287  99613 201965  4118/3741/449    8004/1065    39  261   56.69)
(sat.ddfw       1      1   18.3959    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3464 104782 216787  4272/3951/450    8595/1172    40  261   56.78)
(smt.stats   28   3565 108244 229074  4284/3997/450    9203/1172    40  261   56.88)
ramon: poll                 wall=6.000s usage=5.987s mem=59280KiB load=0.96 rootload=0.96
(smt.stats   29   3676 111789 239795  4377/4003/451    9426/1372    41  266   57.08)
(sat.ddfw       1      1   16.8763    670001      3284         11            1       68)
(smt.stats   30   3798 113903 249634  4572/4141/451    9728/1376    41  266   57.08)
(smt.stats   31   3932 116647 260941  4768/4320/452   10057/1434    42  271   57.27)
ramon: poll                 wall=7.000s usage=6.985s mem=59776KiB load=1.00 rootload=1.00
(smt.stats   32   4079 120218 269721  4817/4494/453   11099/1438    42  271   57.36)
(sat.ddfw       1      1   15.6311    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.985s mem=59876KiB load=1.00 rootload=1.00
(smt.stats   33   4240 123234 277059  5040/4539/453   11530/1639    43  273   57.46)
(smt.stats   34   4417 127426 289593  5212/4785/454   12125/1644    43  273   57.65)
(sat.ddfw       1      1   14.5398    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.984s mem=60348KiB load=1.00 rootload=1.00
(smt.stats   35   4611 135116 306905  5269/4974/455   12790/1644    43  273   57.75)
(smt.stats   36   4712 138686 318435  5323/4975/455   13045/1855    44  276   58.08)
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 15&8796093020214
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 15&8796093020214
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 2 := 15&8796093020214
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 6 := 15&8796093020214
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 17592186042422 := 8796093024434 << 3
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 6 := 15&8796093020214
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 17592186042422 := 8796093024434 << 3
band: (band[43] (if (or #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 ...) 0 (if #702 1 #786)) (shl[64] (* 2 #114) (mod #872 64))) 6 := 15&8796093020214
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #869 #871) 64)) 17592186042422 := 8796093024434 << 3
(smt.stats   37   4823 141008 328165  5430/5066/455   13386/1859    44  276   58.20)
(smt.stats   38   4945 143905 345007  5464/5165/465   13800/1859    44  276   58.20)
(smt.delete-inactive-clauses  :num-deleted-clauses 415)
(smt.stats   39   5079 150337 367463  5473/5172/467   13972/1951    45  280   58.30)
ramon: poll                 wall=10.003s usage=10.040s mem=60440KiB load=1.05 rootload=1.06
(smt.stats   40   5226 154926 389225  5574/5203/468   14538/2044    46  281   58.30)
(sat.ddfw       1      1   13.7255   1060001      5196         14            1      108)
(smt.stats   41   5387 159504 408900  5703/5406/469   15071/2049    46  281   58.39)
ramon: poll                 wall=11.000s usage=11.186s mem=60928KiB load=1.15 rootload=1.14
(smt.stats   42   5564 164450 433913  5713/5416/470   16421/2133    47  282   58.49)
(sat.ddfw       1      1    13.418   1210001      5931         15            1      123)
(smt.stats   43   5758 171197 464098  5786/5424/470   16827/2136    47  282   58.58)
ramon: poll                 wall=12.000s usage=12.201s mem=61204KiB load=1.02 rootload=1.02
(smt.stats   44   5971 177237 502752  5938/5556/470   17787/2361    48  283   58.77)
(sat.ddfw       1      1   12.4523   1370001      6715         16            1      139)
(smt.stats   45   6072 181328 521063  5984/5687/471   18641/2361    48  283   58.92)
ramon: poll                 wall=13.000s usage=13.197s mem=61560KiB load=1.00 rootload=0.99
(smt.stats   46   6183 186102 546705  5999/5690/471   19238/2545    49  287   59.02)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6305 189822 568498  6068/5706/471   19891/2549    49  287   59.02)
(smt.stats   48   6439 193431 590444  6209/5822/471   20623/2551    49  287   59.11)
ramon: poll                 wall=14.000s usage=14.194s mem=61760KiB load=1.00 rootload=1.00
(smt.stats   49   6586 198978 603811  6271/5943/471   21431/2552    49  287   59.21)
(sat.ddfw       1      1   11.7517   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=15.194s mem=62040KiB load=1.00 rootload=1.00
(smt.stats   50   6747 207895 658076  6368/5990/471   22319/2552    49  287   59.74)
ramon: poll                 wall=16.000s usage=16.194s mem=61952KiB load=1.00 rootload=1.00
(smt.stats   51   6924 213768 691645  6501/6120/471   23312/2552    49  287   59.93)
(sat.ddfw       1      1   11.1207   1720001      8431         18            1      174)
(smt.stats   52   7118 223100 744969  6534/6222/471   24366/2552    49  287   59.93)
ramon: poll                 wall=17.000s usage=17.194s mem=62376KiB load=1.00 rootload=1.00
(smt.stats   53   7331 230043 775984  6647/6240/471   25253/2568    49  287   60.12)
(smt.stats   54   7565 236929 803545  6689/6378/471   25809/2568    49  287   60.12)
(smt.stats   55   7666 240517 820651  6750/6408/471   26240/2569    49  287   60.22)
ramon: poll                 wall=18.000s usage=18.197s mem=62660KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5591   1910001      9362         19            1      193)
(smt.stats   56   7777 247442 864536  6753/6455/471   26471/2569    49  287   60.22)
ramon: poll                 wall=19.000s usage=19.197s mem=62572KiB load=1.00 rootload=1.00
(smt.stats   57   7899 253865 901001  6903/6458/471   27097/2572    49  287   60.31)
(smt.stats   58   8033 257019 916975  7008/6682/471   27622/2572    49  287   60.51)
(smt.stats   59   8180 263901 965259  7063/6715/471   28498/2575    49  287   60.60)
(sat.ddfw       1      1   10.0523   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.197s mem=62872KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:58:24 2024
ramon: root.execname        z3
ramon: root.utime           20.190s
ramon: root.stime           0.020s
ramon: group.total          20.218s
ramon: group.utime          20.198s
ramon: group.stime          0.020s
ramon: group.mempeak        63132KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.025s
ramon: loadavg              1.01
