ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:10:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28650 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/IRwd7duSYpNt.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             738499
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   5962    311  1302/1166/100      92/17     7   18   52.04)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    60.241     10000        49          0            1        2)
(smt.stats    1    202   6659    902  2120/1868/100     190/17     7   18   52.14)
(sat.ddfw       1      1   35.2148     20001        98          1            1        3)
(smt.stats    2    313   8849   1503  2207/1949/101     296/26     8   19   52.35)
(smt.stats    3    414  10952   2608  2342/2081/101     408/27     8   19   52.35)
(smt.stats    4    525  11225   2974  2732/2491/106     503/76    10   27   52.49)
(smt.stats    5    647  13506   5163  2797/2513/106     632/76    10   27   52.59)
(sat.ddfw       1      1    40.404     40001       196          2            1        5)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14807   6439  2864/2580/107     725/87    11   32   52.69)
(smt.stats    7    859  17084   8452  3056/2698/107     832/92    11   32   52.69)
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1109 := 1109&268435455
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4467570830351533141 := 1108 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1109 := 1109&268435455
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4467570830351533141 := 1108 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1109 := 1109&268435455
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4467570830351533141 := 1108 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1107 := 1107&268435455
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4593671619917907027 := 1108 << 28
(smt.stats    8    981  18824  10640  3103/2851/109     947/97    12   33   52.79)
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1133 := 1133&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4467570830351533165 := 1132 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1133 := 1133&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4467570830351533165 := 1132 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1133 := 1133&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4467570830351533165 := 1132 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 4503599627370495 := 4503599627370495&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 5084563979301289983 := 1132 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509481983&4503599627370495
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509481983&4503599627370495
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1134 := 1134&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4611686018427389038 := 1132 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 0&4503599627370495
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 1132 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 0&4503599627370495
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 1132 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 536870911 := 536870911&536870911
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 4593671620454776831 := 1109 << 29
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480698&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480698&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480700&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480698&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480701&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480700&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480705&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480705&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 512 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480904&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480904&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1023 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480904&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480896&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480896&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480864&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 256 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 6912 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 6912 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 2816 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480905&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480904&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 768 := 18014398509480896&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1792 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 2816 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13056 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13056 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 15104 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 12286 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 12284 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 8960 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 11008 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13056 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 15104 := 18014398509480704&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 14080 := 18014398509480913&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 14080 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 14096 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 14080 := 18014398509480913&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13056 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13072 := 18014398509480912&536870911
(smt.stats    9   1115  22673  14086  3289/3026/274    1138/143    16   72   53.38)
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13056 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13072 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13072 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13136 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13072 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13136 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13136 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 14224 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13232 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13200 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13264 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13274 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13272 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 13264 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 16336 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 16336 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 15312 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 16208 := 18014398509480912&536870911
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 16336 := 18014398509480912&536870911
(smt.stats   10   1216  24408  15501  3423/3142/341    1315/171    17   86   53.77)
(smt.stats   11   1327  28398  20319  3708/3270/341    1620/174    17   86   53.98)
(sat.ddfw       1      1     36.63     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32299  28212  3839/3591/356    2000/358    19   98   54.08)
(smt.stats   13   1584  38271  33704  3869/3619/363    2429/488    21  127   54.18)
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 6 := 9007199254806528&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 6 := 9007199254806530&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 6 := 9007199254806534&31
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 5107081977438208006 := 5 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 6 := 9007199254806535&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 7 := 9007199254806535&31
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 5107081977438208007 := 5 << 5
ramon: poll                 wall=1.000s usage=1.353s mem=56628KiB load=1.35 rootload=1.34
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 7 := 9007199254839311&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 7 := 9007199254839311&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 7 := 9007199254839335&31
shl: (shl[64] (bv2int %0) (mod (+ #100 #380) 64)) 5107081977438240807 := 5 << 5
(smt.stats   14   1731  44789  42178  4026/3650/364    2689/607    23  199   54.52)
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 5 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 5 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 1 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 2 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 4 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 8 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 16 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 2 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 2 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 4 := 160&31
(smt.stats   15   1832  50264  48881  4136/3860/439    2878/762    26  246   54.90)
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 8 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 0 := 160&31
band: (band[54] (shl[54] (bv2int %0) (mod #100 54)) (if (= #613 53) 1 (if #615 3 #766))) 1 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 1 := 160&31
band: (band[54] (shl[64] (bv2int %0) (mod #381 64)) (if (= #785 63) 0 (if #787 1 #919))) 8 := 160&31
(smt.stats   16   1943  55478  54055  4387/4060/441    3097/847    27  250   55.33)
(sat.ddfw       1      1   31.8725    110001       539          4            1       12)
(smt.stats   17   2065  59864  59641  4394/4067/445    3348/882    28  271   55.52)
(sat.ddfw       1      1   27.8236    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=2.326s mem=58032KiB load=0.97 rootload=0.97
(smt.stats   18   2199  68329  69253  4479/4096/449    3672/900    30  275   55.85)
(smt.stats   19   2346  75572  76642  4519/4166/449    3850/901    30  275   55.85)
(sat.ddfw       1      1   24.5303    220001      1078          6            1       23)
(smt.stats   20   2507  79953  90450  4548/4219/457    4238/1000    31  285   56.04)
ramon: poll                 wall=3.000s usage=3.326s mem=58652KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   21.9024    290001      1421          7            1       30)
(smt.stats   21   2608  84175  97223  4572/4226/457    4543/1056    32  290   56.23)
ramon: poll                 wall=4.000s usage=4.362s mem=59104KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   20.1056    370001      1813          8            1       38)
(sat.ddfw       1      1   18.4275    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.392s mem=59016KiB load=1.03 rootload=1.03
(smt.stats   22   2719  90708 109127  4672/4293/460    4833/1118    33  294   56.61)
(sat.ddfw       1      1   16.7983    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.389s mem=59028KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=7.385s mem=59364KiB load=1.00 rootload=0.99
(sat.ddfw       1      1    15.417    670001      3284         11            1       68)
(smt.stats   23   2841  96285 125338  4832/4362/460    5320/1125    33  294   56.95)
ramon: poll                 wall=8.000s usage=8.384s mem=59604KiB load=1.00 rootload=1.00
(smt.stats   24   2975  99918 136883  4961/4526/460    5981/1134    33  294   57.05)
(sat.ddfw       1      1    14.267    790001      3872         12            1       80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3122 107357 149328  5032/4702/462    6548/1312    34  306   57.14)
ramon: poll                 wall=9.002s usage=9.391s mem=59680KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   13.2504    920001      4509         13            1       93)
(smt.stats   26   3283 114219 166122  5274/4722/462    7133/1319    34  306   57.24)
ramon: poll                 wall=10.000s usage=10.359s mem=59820KiB load=0.97 rootload=0.97
(smt.stats   27   3460 119470 181493  5335/4972/462    7471/1320    34  306   57.34)
(smt.stats   28   3561 124209 194321  5386/5015/462    7982/1323    34  306   57.34)
ramon: poll                 wall=11.000s usage=11.284s mem=59664KiB load=0.93 rootload=0.92
(sat.ddfw       1      1   12.2143   1060001      5196         14            1      108)
(smt.stats   29   3672 130104 208134  5479/5066/462    8232/1323    34  306   57.53)
ramon: poll                 wall=12.000s usage=12.196s mem=59908KiB load=0.91 rootload=0.91
ramon: poll                 wall=13.000s usage=13.146s mem=59964KiB load=0.95 rootload=0.95
(sat.ddfw       1      1   11.4583   1210001      5931         15            1      123)
(smt.stats   30   3794 136228 221640  5738/5213/462    8726/1327    34  306   57.62)
(smt.stats   31   3928 140306 233378  5975/5640/464    9290/1691    35  308   57.93)
ramon: poll                 wall=14.000s usage=14.128s mem=60324KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   10.8006   1370001      6715         16            1      139)
(smt.stats   32   4075 145064 244200  6108/5669/464    9835/1700    35  308   58.02)
ramon: poll                 wall=15.000s usage=15.130s mem=60392KiB load=1.00 rootload=1.01
ramon: poll                 wall=16.000s usage=16.127s mem=60264KiB load=1.00 rootload=0.99
(smt.stats   33   4236 149971 258279  6317/5807/465   10170/1910    36  313   58.12)
(sat.ddfw       1      1   10.2373   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=17.130s mem=60676KiB load=1.00 rootload=1.00
(smt.stats   34   4413 157961 290854  6740/6414/466   11049/2029    37  328   58.31)
ramon: poll                 wall=18.000s usage=18.128s mem=60724KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.71817   1720001      8431         18            1      174)
(smt.stats   35   4607 171091 314395  6901/6426/467   11958/2033    37  328   58.42)
ramon: poll                 wall=19.000s usage=19.127s mem=60904KiB load=1.00 rootload=1.00
(smt.stats   36   4708 175622 328650  6987/6617/467   12201/2103    38  329   58.61)
(smt.stats   37   4819 182888 369389  7005/6679/467   12575/2103    38  329   58.61)
(smt.stats   38   4941 188799 397438  7018/6692/469   13386/2204    39  357   58.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 410)
ramon: poll                 wall=20.000s usage=20.125s mem=61364KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:10:47 2024
ramon: root.execname        z3
ramon: root.utime           20.120s
ramon: root.stime           0.010s
ramon: group.total          20.143s
ramon: group.utime          20.123s
ramon: group.stime          0.020s
ramon: group.mempeak        61368KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.01
