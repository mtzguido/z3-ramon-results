ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:38:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30121 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6pGMoIt3l9tX.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             263157
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   138/136     0/0  61       0    18.43   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 235 :time 0.00)
(sat.stats    134   2338    0   140/138   133/99  65       0    19.01   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 277 :time 0.00)
(sat.stats    134   2338    0   138/136   133/99  71       0    19.01   0.03)
(sat.stats    134   2338    0   138/136   133/99  71       0    19.01   0.03)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 251019.01 :time 0.00)
(sat.stats    134   2338    0   140/138   121/104  71       0    19.01   0.03)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 394 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 505 :time 0.00)
(sat.stats    204   4756    1   179/177   189/143  74       0    19.11   0.07)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    207   4846    2   195/193   192/144  74       0    19.10   0.11)
(sat.stats    210   4953    3   203/201   195/144  74       0    19.10   0.11)
(sat.stats    213   5081    4   209/207   198/144  74       0    19.10   0.12)
(sat.stats    216   5157    5   211/209   201/146  74       0    19.10   0.12)
(sat.stats    219   5170    6   211/209   204/149  74       0    19.10   0.12)
(sat.stats    222   5206    7   224/222   207/150  74       0    19.10   0.12)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 766 :time 0.00)
(sat.stats    225   5266    8   237/235   210/152  75       0    19.10   0.12)
(sat.stats    228   5327    9   237/235   213/155  75       0    19.10   0.12)
(sat.stats    231   5395   10   237/235   216/157  75       0    19.10   0.12)
(sat.stats    234   5504   11   239/237   219/159  75       0    19.10   0.13)
(sat.stats    245   5736   12   247/245   230/168  75       0    19.20   0.15)
(sat.stats    249   5787   13   266/264   234/170  75       0    19.20   0.15)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 853 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 920 :time 0.00)
 (sat-cleaner :elim-literals 24 :elim-clauses 1 :cost 1043 :time 0.00)
(sat.stats    334   7218   30   541/540   319/216  82       0    19.29   0.27)
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 1093 :time 0.00)
 (sat-cleaner :elim-literals 7 :elim-clauses 1 :cost 1097 :time 0.00)
 (sat-cleaner :elim-literals 19 :elim-clauses 104 :cost 1452 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    570  12701   35  1552/1551   403/239  89       0    19.48   0.46)
 (sat-cleaner :elim-literals 0 :elim-clauses 35 :cost 1385 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1421 :time 0.00)
(sat.stats    761  20086   72  2896/2895   599/273  91       0    19.68   0.67)
 (sat-cleaner :elim-literals 13 :elim-clauses 138 :cost 2577 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 39 := 39 << 39
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1649267441664
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 13 := 39 << 39
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 1 := 37 << 37
 (sat-cleaner :elim-literals 2 :elim-clauses 6 :cost 2101 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 824633720832 := 38 << 38
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1649267441664
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 20890720927744 := 38 << 38
(sat.stats   1083  30061   84  3912/3868   831/422 109       0    20.97   0.84)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 1374389534720 := 5 << 5
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 1924145348608 := 7 << 7
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 1649267441664 := 6 << 6
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 824633720832 := 3 << 3
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3057 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 8 := 9 << 9
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&4608
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 9 := 9 << 9
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 3426 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 31 << 31
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&66571993088
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 31 := 31 << 31
(sat.stats   1599  47437  165  4112/4063  1350/596 135       0    21.45   0.99)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4136 :time 0.00)
ramon: poll                 wall=1.002s usage=1.002s mem=22512KiB load=1.00 rootload=0.99
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 1 := 1 << 1
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2 := 2 << 2
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 4 := 4 << 4
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4662 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 21474836480 := 10 << 10
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4983 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&10240
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 5120 := 10 << 10
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5269 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 2199023255568 := 1 << 1
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5683 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 40 << 40
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 2199023285806 := 40 << 40
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 21 << 21
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 23 << 23
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 17 << 17
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 19 << 19
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 11 << 11
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 13 << 13
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 15 << 15
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 8 << 8
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 33 << 33
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 32 << 32
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 24 << 24
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 16 << 16
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 14 << 14
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 12 << 12
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 27 << 27
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 26 << 26
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 25 << 25
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 22 << 22
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 18 << 18
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 20 << 20
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 29 << 29
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 28 << 28
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 36 << 36
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 35 << 35
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 34 << 34
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&584115552256
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 37383395344385 := 34 << 34
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&274877906944
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 618475290624 := 36 << 36
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&687194767360
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 10170482556928 := 37 << 37
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1202590842880
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 4810363371520 := 35 << 35
 (sat-cleaner :elim-literals 1 :elim-clauses 2 :cost 9012 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 2 :cost 9533 :time 0.00)
(sat.stats   2910 101118  310  4636/4581  2656/765 268       0    23.28   1.52)
 (sat-cleaner :elim-literals 10 :elim-clauses 12 :cost 9780 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 4 :cost 9932 :time 0.00)
 (sat-cleaner :elim-literals 69 :elim-clauses 3 :cost 11074 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 71 << 30
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11573 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&63963136
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 62464 := 61 << 20
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 12739 :time 0.00)
ramon: poll                 wall=2.000s usage=1.998s mem=25120KiB load=1.00 rootload=1.00
(sat.stats   3620 151675  504  4728/4673  3343/850 278       0    23.79   2.03)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&635655159808
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 158913789952 := 74 << 33
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 16721 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&76235669504
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 152471339008 := 71 << 30
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 17430 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&4496293888
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 140 := 67 << 26
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 21035 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&9126805504
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 4563402752 := 68 << 27
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&37580963840
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 4697620480 := 70 << 29
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 21504 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&352
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 5905580032 := 44 << 3
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 22051 :time 0.00)
(sat.stats :conflicts :restarts        :learned/bin         :gc          :time)
(sat.stats     :decisions     :clauses/bin       :units         :memory       )
(sat.stats   5395 215565 1031  4945/4890  4556/945 296       0    24.43   2.87)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1472
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 368 := 46 << 5
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&720
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 360 := 45 << 4
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&7602176
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 464 := 58 << 17
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&442368
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 7077888 := 54 << 13
ramon: poll                 wall=3.000s usage=2.998s mem=25888KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 23905 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&3735552
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 466944 := 57 << 16
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&901120
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 450560 := 55 << 14
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 24394 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&313532612608
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 2508260900864 := 73 << 32
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 25331 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1835008
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 240518168576 := 56 << 15
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&18522046464
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 2260992 := 69 << 28
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&3008
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 1540096 := 47 << 6
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 26294 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&6144
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 2199023255556 := 48 << 7
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&31457280
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 2199023255556 := 60 << 19
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&172
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 150 := 43 << 2
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 27313 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&217088
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 212 := 53 << 12
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 28086 :time 0.00)
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1090519040
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 266240 := 65 << 24
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&264241152
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 258048 := 63 << 22
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&12544
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 200704 := 49 << 8
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&15466496
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 944 := 59 << 18
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&106496
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 80721 := 52 << 11
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&130023424
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 126976 := 62 << 21
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&536870912
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 131072 := 64 << 23
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 1) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&2214592512
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 135168 := 66 << 25
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 29934 :time 0.00)
(sat.stats   8200 291308 1542  5899/5844  6297/977 362       0    25.74   3.82)
ramon: poll                 wall=4.000s usage=3.998s mem=27168KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2229 :elim-clauses 1651 :cost 40236 :time 0.00)
ramon: poll                 wall=5.000s usage=4.998s mem=27680KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.998s mem=27936KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=28192KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=28704KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=28960KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.007s usage=10.005s mem=29216KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.997s mem=29472KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.997s mem=30240KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.997s mem=30496KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.997s mem=31008KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.997s mem=31008KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.997s mem=31264KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.997s mem=31776KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.997s mem=32488KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.997s mem=32488KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.997s mem=32744KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:38:27 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.003s
ramon: group.utime          19.983s
ramon: group.stime          0.020s
ramon: group.mempeak        33004KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
