ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:53:11 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28481 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1266
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DFNk3wcToWbb.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4124324
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #877 #879) 64)) 1 := 26 << 32
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&1
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&1
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&2
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&2
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&2
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&2
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&4
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 4294967295&2
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&2
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #877 #879) 64)) 1 := 26 << 32
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #877 #879) 64)) 1 := 26 << 32
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #877 #879) 64)) 1 := 26 << 32
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 4294967295&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #877 #879) 64)) 1 := 26 << 32
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&32
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 17 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 18 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 20 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 16 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 17 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 18 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 20 := 4294967295&28
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 32 := 4294967295&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #877 #879) 64)) 32 := 26 << 32
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 32 := 4294967295&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #877 #879) 64)) 32 := 26 << 32
(smt.stats    0    101   2752   1060  1202/1080/140      90/25     8   25   19.36)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 12 := 13 << 33
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 12 := 13 << 33
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 12 := 13 << 33
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 0 := 13 << 33
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 0 := 13 << 33
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 1 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 2 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 4294967292 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 4294967288 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 16 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 32 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 64 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 128 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 256 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 512 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 1024 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 2048 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 4096 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 8192 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 16384 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 32768 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 65536 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 131072 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 262144 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 524288 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 1048576 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 2097152 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 4194304 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 8388608 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 16777216 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 33554432 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 33554432 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 67108864 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 134217728 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 268435456 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 134217728 := 4294967295&111669149696
(smt.stats    1    202   4110   2608  2115/1923/278     247/59    10   55   20.66)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 65536 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 4294967295&111669149696
band: (band[46] (if (= #120 45) 0 (if #554 1 #680)) (shl[46] (bv2int %0) (+ 46 #683))) 65536 := 4294967295&111669149696
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 274877906943&2
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 274877906943&2
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 274877906943&2
(smt.stats    2    313   8272   6042  2179/1982/295     342/89    15   66   20.66)
(smt.stats    3    414  13242  11982  2306/2097/301     439/92    16   68   20.78)
(smt.stats    4    536  15335  17082  2396/2177/309     523/105    17   79   20.78)
(smt.stats    5    658  18721  21348  2449/2200/309     651/131    18   90   20.88)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    759  19509  22067  2515/2236/309     758/132    18   90   21.07)
ramon: poll                 wall=1.000s usage=0.968s mem=22440KiB load=0.97 rootload=0.95
(smt.stats    7    870  20883  23293  2747/2346/309     920/135    18   90   21.07)
(smt.stats    8    992  24134  26472  2969/2751/317    1076/220    20   94   21.07)
(smt.stats    9   1126  26983  29505  3089/2770/318    1234/228    21  105   21.16)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 0&60129722382
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 1 := 35214436950023 << 1
(smt.stats   10   1227  28513  31640  3243/2911/318    1355/248    22  107   21.36)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 0&64424853518
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 2147491917 := 35216584515591 << 1
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 0&60129722382
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 1 := 35214436950023 << 1
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 0&68719984654
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 1 := 35218732081159 << 1
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 0&68719984654
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 1 := 35218732081159 << 1
(smt.stats   11   1338  29685  33259  3670/3109/318    1483/250    22  107   21.55)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 0&68719984654
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 1 := 35218732081159 << 1
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 0&68719984654
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 2147491917 := 35218732081159 << 1
ramon: poll                 wall=2.000s usage=1.966s mem=23032KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1460  32097  38417  3746/3519/329    1689/264    23  112   21.55)
(smt.stats   13   1594  38688  51256  3775/3548/330    1804/284    24  125   21.55)
(smt.stats   14   1741  44894  59490  3820/3562/331    1987/301    25  128   21.64)
(smt.stats   15   1842  45184  60129  4100/3784/331    2096/301    25  128   21.78)
(smt.stats   16   1953  46633  62304  4487/4150/331    2222/301    25  128   21.88)
(smt.stats   17   2075  47817  64976  4931/4637/333    2345/325    26  132   22.07)
ramon: poll                 wall=3.000s usage=2.966s mem=23408KiB load=1.00 rootload=1.00
(smt.stats   18   2209  48714  66364  5436/5105/333    2489/325    26  132   22.26)
(smt.stats   19   2356  50576  70904  6054/5686/333    2656/326    26  132   22.36)
(smt.stats   20   2517  51952  73154  6615/6248/333    2827/333    27  133   22.59)
(smt.stats   21   2618  54181  82476  7338/7097/334    2946/338    28  136   22.59)
(smt.stats   22   2729  56644  89909  7410/7124/334    3155/339    28  136   22.69)
(smt.stats   23   2851  59389  93240  7689/7323/334    3312/339    28  136   22.69)
ramon: poll                 wall=4.000s usage=3.966s mem=24036KiB load=1.00 rootload=1.00
(smt.stats   24   2985  64871 102884  7730/7501/335    3456/400    29  137   22.69)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&901943132160
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&901943132160
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&893353197568
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636552
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636560
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636560
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636576
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636552
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636560
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636576
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636608
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636552
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636552
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636560
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636576
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636608
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636608
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636672
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636672
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636800
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636560
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636552
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636576
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636576
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636576
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 35184372088831&704374636576
(smt.stats   25   3132  69089 116087  7850/7621/408    3680/452    31  158   22.97)
(smt.stats   26   3293  75659 133598  7883/7649/415    4044/537    33  173   22.97)
(smt.stats   27   3470  81525 152206  7940/7698/418    4562/595    34  177   23.07)
(smt.stats   28   3571  84875 159599  8054/7804/422    4699/627    35  200   23.16)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 35184372088831&35476429864964
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 35184372088831&35476429864964
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 1 := 35184372088831&35476429864964
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 2 := 35184372088831&35476429864964
(smt.stats   29   3682  87232 166800  8219/7823/422    4945/631    35  200   23.26)
(smt.stats   30   3804  91029 185233  8357/7974/427    5487/644    36  201   23.46)
(smt.stats   31   3938  93772 200329  8523/8116/427    5953/699    37  201   23.55)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4085  98579 220373  8548/8297/427    6477/700    37  201   23.65)
ramon: poll                 wall=5.000s usage=4.965s mem=25084KiB load=1.00 rootload=1.00
(smt.stats   33   4246 101688 231452  8697/8303/427    6811/704    37  201   23.74)
(smt.stats   34   4423 105680 259979  9240/8990/428    7682/882    38  206   24.04)
(smt.stats   35   4617 109401 268720  9455/8991/430    8115/883    38  206   24.34)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 448 := 35184372088831&55834780929
(smt.stats   36   4718 112003 276841  9698/9342/430    8465/1004    39  233   24.34)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 174 := 35184372088831&55834759462
(smt.stats   37   4829 113697 289482  9984/9485/430    8827/1004    39  233   24.53)
ramon: poll                 wall=6.002s usage=5.966s mem=25900KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4951 115544 307331 10168/9757/430    9548/1006    39  233   24.63)
(smt.delete-inactive-clauses  :num-deleted-clauses 423)
(smt.stats   39   5085 119160 322517 10187/9937/430    9532/1006    39  233   24.63)
(smt.stats   40   5232 123394 344382 10238/9978/431   10038/1233    40  240   24.63)
(smt.stats   41   5393 126170 355146 10560/10015/431   10571/1236    40  240   24.72)
(smt.stats   42   5570 131198 393566 10681/10429/434   11614/1473    41  252   24.82)
ramon: poll                 wall=7.002s usage=6.965s mem=26428KiB load=1.00 rootload=1.00
(smt.stats   43   5764 139329 422017 11004/10438/435   12048/1650    42  262   24.91)
(smt.stats   44   5977 144056 446428 11508/10803/435   13150/1653    42  262   25.19)
(smt.stats   45   6078 146665 454500 11522/11268/438   13558/1844    43  265   25.29)
(smt.stats   46   6189 152463 490091 11527/11273/439   14506/1844    43  265   25.29)
(smt.stats   47   6311 155830 522315 11536/11282/439   15160/2452    44  281   25.42)
(smt.stats   48   6445 160182 555700 11554/11298/445   16140/2911    46  308   25.51)
(smt.stats   49   6592 166821 568917 11562/11306/445   16443/2911    46  308   25.51)
ramon: poll                 wall=8.000s usage=7.963s mem=27044KiB load=1.00 rootload=1.00
(smt.stats   50   6753 174932 616505 11575/11319/445   17122/2911    46  308   25.51)
(smt.stats   51   6930 182041 662030 11725/11331/445   17986/2918    46  308   25.63)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949673472
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949673472
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949673472
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949673984
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949673472
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949673984
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949675008
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949675008
(smt.stats   52   7124 190421 730146 11793/11482/445   18646/2921    46  308   25.96)
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949738496
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949738496
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949675008
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949677056
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949675008
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949677056
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949681152
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949681152
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949689344
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949705728
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949836800
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949689344
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949705728
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949738496
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949804032
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949804032
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949935104
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949804032
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949935104
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949804032
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949853184
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949804032
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949804032
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949935104
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&42949738496
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1159640645632
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146756792320
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146757316608
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146758365184
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146756792320
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146758365184
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146760462336
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146758365184
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146756792320
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146760462336
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146764656640
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146756792320
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146756792320
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146756792320
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146757316608
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146757316608
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146757316608
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146760462336
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146760462336
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146760462336
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146760462336
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146760462336
band: (band[46] (if (or #695 #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 ...) 0 (if #714 1 #802)) (shl[64] (* 2 #114) (mod #880 64))) 0 := 1099511627775&1146760462336
(smt.stats   53   7337 198708 810044 12091/11684/628   19791/3654    48  343   26.53)
ramon: poll                 wall=9.000s usage=8.963s mem=28020KiB load=1.00 rootload=0.99
(smt.stats   54   7571 207838 868263 12272/11880/628   21026/3777    49  344   26.72)
(smt.stats   55   7672 214214 889883 12297/12036/628   21631/3777    49  344   26.82)
(smt.stats   56   7783 221241 925677 12318/12055/628   22262/3778    49  344   26.82)
(smt.stats   57   7905 229481 967701 12399/12065/628   22822/3781    49  344   26.92)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8039 236702 988106 12411/12155/628   23528/3781    49  344   27.01)
ramon: poll                 wall=10.000s usage=9.963s mem=28564KiB load=1.00 rootload=0.99
(smt.stats   59   8186 248708 1072991 12418/12162/628   24199/3781    49  344   27.01)
(smt.stats   60   8347 258720 1152641 12484/12166/629   24623/5005    50  344   27.11)
(smt.stats   61   8524 267258 1198260 12522/12246/629   25346/5006    50  344   27.20)
(smt.stats   62   8718 278369 1269074 12713/12280/629   26053/5009    50  344   27.30)
ramon: poll                 wall=11.000s usage=10.963s mem=28924KiB load=1.00 rootload=1.00
(smt.stats   63   8931 287535 1378651 13112/12527/629   27054/5019    50  344   27.49)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   64   9165 304674 1459826 13257/12854/629   27789/5021    50  344   27.68)
ramon: poll                 wall=12.000s usage=11.962s mem=29404KiB load=1.00 rootload=1.00
(smt.stats   65   9422 315912 1565864 13880/13608/630   28849/5824    51  347   27.98)
(smt.stats   66   9523 318982 1583769 13890/13618/632   29175/5824    51  347   28.08)
(smt.stats   67   9634 324122 1636039 13972/13629/634   29408/5829    51  347   28.08)
(smt.stats   68   9756 332750 1716559 14149/13766/634   29996/6006    52  353   28.18)
ramon: poll                 wall=13.000s usage=12.962s mem=29800KiB load=1.00 rootload=1.00
(smt.stats   69   9890 344263 1808863 14160/13888/634   30677/6006    52  353   28.27)
(smt.delete-inactive-clauses  :num-deleted-clauses 305)
(smt.stats   70  10037 351557 1851946 14180/13906/641   31087/6152    53  368   28.27)
(smt.stats   71  10198 362403 1901526 14189/13915/642   31371/6297    54  423   28.38)
(smt.stats   72  10375 378224 2004346 14211/13937/642   32626/6297    54  423   28.49)
ramon: poll                 wall=14.000s usage=13.962s mem=30252KiB load=1.00 rootload=1.00
(smt.stats   73  10569 386133 2059741 14240/13966/649   33386/6374    55  449   28.61)
(smt.stats   74  10782 399321 2133139 14261/13981/652   33947/6612    56  524   28.72)
(smt.stats   75  11016 409188 2242533 14390/14002/652   34904/6621    56  524   28.82)
ramon: poll                 wall=15.000s usage=14.961s mem=30508KiB load=1.00 rootload=1.00
(smt.stats   76  11273 420178 2339166 14825/14136/652   35392/6627    56  524   28.91)
(smt.stats   77  11555 430547 2411438 15202/14618/653   36080/6811    57  526   29.29)
(smt.stats   78  11656 434980 2439494 15347/14962/653   36578/6812    57  526   29.49)
ramon: poll                 wall=16.000s usage=15.961s mem=31264KiB load=1.00 rootload=1.00
(smt.stats   79  11767 443154 2469500 15357/15083/653   36911/6812    57  526   29.49)
(smt.stats   80  11889 454022 2520469 15357/15083/653   37038/6812    57  526   29.49)
(smt.stats   81  12023 459588 2539035 15376/15102/653   37191/6812    57  526   29.59)
(smt.stats   82  12170 468343 2590617 15380/15106/653   37784/6812    57  526   29.69)
(smt.stats   83  12331 481117 2630825 15392/15113/653   38104/6813    57  526   29.69)
ramon: poll                 wall=17.000s usage=16.961s mem=31560KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12508 491201 2725563 15466/15127/654   39716/7260    58  530   29.78)
(smt.stats   85  12702 499474 2808056 15729/15200/655   40332/7266    58  530   29.97)
(smt.stats   86  12915 509351 2875558 16041/15558/655   41051/7704    59  531   30.20)
ramon: poll                 wall=18.000s usage=17.961s mem=31928KiB load=1.00 rootload=1.00
(smt.stats   87  13149 528158 2981944 16060/15782/655   41982/7705    59  531   30.30)
ramon: poll                 wall=19.002s usage=18.962s mem=32004KiB load=1.00 rootload=1.00
(smt.stats   88  13406 555423 3135013 16064/15786/655   42860/7706    59  531   30.55)
ramon: poll                 wall=20.000s usage=19.960s mem=32428KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:53:31 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.968s
ramon: group.stime          0.028s
ramon: group.mempeak        32940KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.036s
ramon: loadavg              1.00
