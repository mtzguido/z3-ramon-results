ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:16:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27091 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/wJmQ7QbmbdS8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             959247
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4359    990  1219/1101/93      89/8     4   17   51.96)
(smt.stats    1    202   6126   3349  1872/1661/95     188/8     6   19   52.06)
(smt.stats    2    313   8213   7312  2020/1808/96     297/10     7   20   52.17)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.6667     10000        49          0            1        2)
(smt.stats    3    414  10726  12079  2266/2028/101     392/21    10   26   52.30)
(smt.stats    4    525  11649  13778  2381/2140/101     488/22    10   26   52.30)
(sat.ddfw       1      1    40.004     20001        98          1            1        3)
(smt.stats    5    647  13509  17107  2395/2157/102     607/26    12   29   52.42)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  15654  19479  2431/2185/102     712/26    12   29   52.62)
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&433
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&463
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&480
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&448
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&512
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 512 := 592 << 9
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&485
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&448
(smt.stats    7    859  18256  21705  2470/2205/129     820/29    14   35   52.71)
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&512
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 512 := 592 << 9
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&512
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 512 := 645 << 9
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 432 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 416 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 384 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 256 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 432 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 431 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 432 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 416 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 384 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 15 := 432&527
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 256 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 4 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 8 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 8 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 16 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 4 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 64 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 128 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 67 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 64 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 64 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 8 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 8 := 432&512
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&512
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 9007199254741504 := 62 << 9
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&512
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 945 := 598134325510145 << 9
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&7680
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 432 := 7680&432
(sat.ddfw       1      1   45.4545     40001       196          2            1        5)
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&9007199254724608
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 448 := 35184372088800 << 9
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 432&17626612997632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&7680
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 1 := 7680&432
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&7680
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 2 := 7680&432
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&7680
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 4 := 7680&432
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&7680
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 432 := 7680&432
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&7680
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 416 := 7680&432
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 432&7680
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 328 := 7680&432
(smt.stats    8    981  19812  24308  2570/2314/246     960/53    15   54   53.33)
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849745920
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849745920
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849746432
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849748480
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 3800659849745823&3800659849748480
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849748480
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849748480
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849773056
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849773056
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659853836288
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849773056
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 3800659849745823&3800659849773056
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659849773056
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659853836288
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659912556544
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659853836288
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800659912556544
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 3800659849745823&3800660046774272
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 3800659849745823&3800660046774272
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 2 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317633
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317633
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317633
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317633
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317632
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 3 := 3800659849745823&3800659957317633
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 11 := 3800659849745823&3800659957317634
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 11 := 3800659849745823&3800659957317635
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659853836288
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659853836289
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659853836297
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659853836297
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659853844544
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659853844481
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659853844489
(smt.stats    9   1115  22417  28227  2698/2440/348    1100/117    17  140   53.81)
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659854041097
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659854041101
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659854098953
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659912557065
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659912557129
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659912564745
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800659912557065
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800660046774281
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800660046774793
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800668099837961
(sat.ddfw       1      1   41.4938     70001       343          3            1        8)
(smt.stats   10   1216  23815  30291  2947/2466/348    1351/124    17  140   54.10)
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800668099837961
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800668099837961
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 9 := 3800659849745823&3800668099837961
(smt.stats   11   1327  29274  39518  2980/2728/386    1524/187    19  158   54.31)
ramon: poll                 wall=1.000s usage=0.881s mem=56564KiB load=0.88 rootload=0.86
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33763  49215  2997/2745/398    1851/204    20  159   54.31)
(smt.stats   13   1583  38939  56117  3014/2765/399    2165/325    21  174   54.44)
(sat.ddfw       1      1   36.2319    110001       539          4            1       12)
(smt.stats   14   1730  51890  75601  3014/2765/399    2313/416    22  174   54.55)
(smt.stats   15   1831  57864  86755  3019/2767/408    2528/423    24  181   54.64)
(smt.stats   16   1942  60012  93184  3194/2921/416    2638/430    26  194   54.96)
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&68
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 9007199254741060 := 1008 << 1
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&68
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 9007199254741060 := 1008 << 1
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&68
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 9007199254741060 := 1008 << 1
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&66
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 9007199254741058 := 1008 << 1
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&66
shl: (shl[64] (bv2int %0) (mod (+ #110 #944) 64)) 9007199254741058 := 1008 << 1
(sat.ddfw       1      1   31.7656    160000       784          5            1       17)
(smt.stats   17   2064  64125 100559  3259/2969/426    2874/471    27  244   55.15)
(smt.stats   18   2198  68483 109150  3269/2984/427    3158/474    28  248   55.84)
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&2
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 32 := 1 << 1
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&2
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 32 := 1 << 1
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&2
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 1 := 2&1
band: (band[53] (if (or #786 #787 #788 #789 #790 #791 #792 #793 #794 #795 #796 #797) 0 (if #798 1 #900)) (shl[64] (bv2int %0) (mod #945 64))) 0 := 1&2
band: (band[53] (shl[53] (bv2int %0) (mod #110 53)) (if (= #621 52) 1 (if #623 3 #770))) 1 := 2&1
(smt.stats   19   2345  73958 122806  3448/3130/446    3363/499    29  259   56.14)
ramon: poll                 wall=2.000s usage=1.884s mem=58300KiB load=1.00 rootload=1.00
(smt.stats   20   2506  82243 140817  3469/3145/446    3596/499    29  259   56.14)
(sat.ddfw       1      1   28.0379    220001      1078          6            1       23)
(smt.stats   21   2607  87483 150208  3500/3168/447    3788/548    30  259   56.33)
(smt.stats   22   2718  90558 157924  3741/3415/450    4062/552    30  259   56.43)
(sat.ddfw       1      1   24.9288    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.881s mem=58780KiB load=1.00 rootload=1.00
(smt.stats   23   2840  95120 170514  3886/3496/451    4520/561    31  267   56.63)
(smt.stats   24   2974  98469 180434  3915/3591/456    4780/620    33  295   56.74)
(smt.stats   25   3121 106727 196728  3931/3602/457    5422/624    33  295   56.84)
(sat.ddfw       1      1    22.453    370001      1813          8            1       38)
(smt.stats   26   3282 114057 215105  4084/3682/458    5909/681    34  318   56.93)
ramon: poll                 wall=4.000s usage=3.881s mem=59284KiB load=1.00 rootload=1.00
(smt.stats   27   3459 123459 245265  4104/3778/458    6443/778    35  318   57.03)
(smt.stats   28   3560 128698 260588  4114/3788/459    6640/962    36  321   57.14)
(sat.ddfw       1      1   20.3989    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.907s mem=59880KiB load=1.03 rootload=1.03
(smt.stats   29   3671 132388 271256  4273/3867/460    7209/979    37  321   57.52)
(sat.ddfw       1      1   18.4945    560001      2745         10            1       57)
(smt.stats   30   3793 136747 280847  4467/4105/461    7581/982    37  321   57.71)
ramon: poll                 wall=6.000s usage=5.864s mem=60128KiB load=0.96 rootload=0.95
(sat.ddfw       1      1   17.0226    670001      3284         11            1       68)
(smt.stats   31   3927 140280 293434  4706/4154/461    8109/985    37  321   58.09)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074 147395 310636  4726/4397/462    8550/1083    38  339   58.20)
ramon: poll                 wall=7.000s usage=6.863s mem=60556KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    15.748    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.861s mem=60588KiB load=1.00 rootload=1.00
(smt.stats   33   4235 154280 326794  4880/4416/464    9016/1204    39  339   58.39)
(sat.ddfw       1      1   14.6677    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.862s mem=61064KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.863s mem=61080KiB load=1.00 rootload=1.00
(smt.stats   34   4412 158934 334740  5148/4822/466    9484/1257    40  340   58.74)
(sat.ddfw       1      1   13.7201   1060001      5196         14            1      108)
(smt.stats   35   4606 167096 355777  5182/4856/468   10123/1257    40  340   58.83)
(smt.stats   36   4707 172790 379185  5193/4867/470   10512/1424    41  351   58.83)
ramon: poll                 wall=11.000s usage=10.862s mem=61356KiB load=1.00 rootload=1.00
(smt.stats   37   4818 175320 386879  5281/4869/471   10707/1503    42  361   58.93)
(smt.stats   38   4940 181237 418026  5291/4965/474   11172/1543    43  382   58.93)
(smt.delete-inactive-clauses  :num-deleted-clauses 263)
(smt.stats   39   5074 186640 436146  5299/4973/483   11147/1543    43  382   58.93)
(sat.ddfw       1      1   12.9077   1210001      5931         15            1      123)
(smt.stats   40   5221 192821 461814  5318/4993/484   11518/1609    44  433   59.03)
ramon: poll                 wall=12.000s usage=11.912s mem=61468KiB load=1.05 rootload=1.05
(smt.stats   41   5382 200408 490317  5330/5005/484   11889/1609    44  433   59.03)
(smt.stats   42   5559 206932 505890  5358/5012/485   12451/1728    45  449   59.15)
(sat.ddfw       1      1   12.5776   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.066s mem=61712KiB load=1.15 rootload=1.16
(smt.stats   43   5753 219011 545482  5554/5036/485   13287/1730    45  449   59.65)
(smt.stats   44   5966 228452 575393  5810/5252/485   14188/1733    45  449   59.74)
(smt.stats   45   6067 234233 591376  5820/5495/486   14730/1911    46  452   59.84)
ramon: poll                 wall=14.000s usage=14.064s mem=61984KiB load=1.00 rootload=0.99
(smt.stats   46   6178 242976 614512  5827/5502/486   14884/1911    46  452   59.84)
(sat.ddfw       1      1   11.8508   1540001      7549         17            1      156)
(smt.stats   47   6300 251678 639132  5862/5504/486   15343/1913    46  452   59.93)
ramon: poll                 wall=15.000s usage=15.065s mem=62192KiB load=1.00 rootload=1.00
(smt.stats   48   6434 259868 651920  5894/5554/486   15862/1913    46  452   59.93)
(smt.stats   49   6581 265934 663435  5943/5580/486   16233/1917    46  452   60.05)
ramon: poll                 wall=16.000s usage=16.063s mem=62528KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.2087   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=17.064s mem=62660KiB load=1.00 rootload=1.00
(smt.stats   50   6742 269884 676993  6239/5639/486   16576/1923    46  452   60.24)
(sat.ddfw       1      1   10.6294   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.063s mem=62748KiB load=1.00 rootload=1.00
(smt.stats   51   6919 276727 700026  6400/5928/486   17203/1930    46  452   60.33)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 289499 729053  6406/6081/486   18054/1930    46  452   60.33)
ramon: poll                 wall=19.000s usage=19.062s mem=63104KiB load=1.00 rootload=1.00
(smt.stats   53   7326 298467 761329  6626/6084/486   19060/1938    46  452   60.64)
(sat.ddfw       1      1   10.1087   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.063s mem=63184KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:17:15 2024
ramon: root.execname        z3
ramon: root.utime           20.110s
ramon: root.stime           0.010s
ramon: group.total          20.133s
ramon: group.utime          20.117s
ramon: group.stime          0.016s
ramon: group.mempeak        63456KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.00
