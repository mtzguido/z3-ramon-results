ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:28:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42868 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4qGNDDAkE5EJ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2790525
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4418    284  1083/951/103      95/15     6   35   19.17)
(smt.stats    1    202   5290    988  1934/1738/105     208/26     8   37   19.36)
(smt.stats    2    313   5977   2082  2069/1895/109     348/40     9   44   19.36)
(smt.stats    3    414   7594   2756  2183/2007/113     450/49    11   48   19.46)
(smt.stats    4    525   9395   4191  2245/2064/117     573/67    12   56   19.55)
(smt.stats    5    647  12838   6349  2523/2312/122     708/93    16   58   19.66)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14740   8154  2580/2350/123     811/95    17   58   19.66)
(smt.stats    7    859  16717   8903  2680/2415/123     928/102    18   59   19.77)
(smt.stats    8    981  20002  10676  2830/2624/124    1045/105    19   61   19.77)
ramon: poll                 wall=1.000s usage=0.993s mem=20872KiB load=0.99 rootload=0.99
(smt.stats    9   1115  22464  12710  2905/2632/124    1208/110    19   61   19.86)
(smt.stats   10   1216  23779  14482  2987/2754/125    1330/138    20   62   19.86)
(smt.stats   11   1327  27681  17099  3030/2790/125    1454/138    20   62   19.86)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30130  19310  3055/2839/125    1572/138    20   62   19.96)
(smt.stats   13   1583  32925  21085  3145/2879/125    1722/142    20   62   19.96)
(smt.stats   14   1730  33660  24176  3213/2969/125    1877/142    20   62   20.06)
(smt.stats   15   1831  34213  25503  3270/3034/131    2019/214    21   66   20.06)
(smt.stats   16   1942  35613  29665  3324/3076/131    2140/215    21   66   20.06)
(smt.stats   17   2064  38165  33623  3356/3129/131    2280/257    22   70   20.06)
(smt.stats   18   2198  41633  41156  3391/3159/131    2420/257    22   70   20.18)
(smt.stats   19   2345  44214  45538  3456/3197/132    2585/274    23   71   20.18)
ramon: poll                 wall=2.000s usage=1.992s mem=21316KiB load=1.00 rootload=0.99
(smt.stats   20   2506  46872  50434  3510/3260/136    2753/295    24   71   20.18)
(smt.stats   21   2607  47839  55188  3580/3317/136    2858/295    24   71   20.27)
(smt.stats   22   2718  50735  58663  3628/3375/136    2983/295    24   71   20.27)
(smt.stats   23   2840  53660  61632  3806/3426/136    3119/295    24   71   20.37)
(smt.stats   24   2974  56561  65679  3952/3647/136    3274/295    24   71   20.46)
(smt.stats   25   3121  58050  72889  3998/3757/136    3444/296    24   71   20.46)
(smt.stats   26   3282  60561  76908  4021/3794/136    3620/296    24   71   20.56)
(smt.stats   27   3459  63391  80589  4143/3834/136    3807/299    24   71   20.56)
ramon: poll                 wall=3.000s usage=2.989s mem=21772KiB load=1.00 rootload=1.00
(smt.stats   28   3560  64601  83612  4231/3988/136    3982/301    24   71   20.65)
(smt.stats   29   3671  66268  91155  4337/4059/136    4134/302    24   71   20.65)
(smt.stats   30   3793  67717  98771  4428/4136/136    4290/304    24   71   20.65)
(smt.stats   31   3927  71717 103487  4435/4222/137    4418/445    25   75   21.00)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  74027 109796  4440/4232/137    4577/445    25   75   20.90)
(smt.stats   33   4235  75586 113872  4460/4239/137    4750/445    25   75   20.90)
(smt.stats   34   4412  76756 118943  4630/4258/137    4935/446    25   75   21.00)
(smt.stats   35   4606  81112 126359  4658/4438/137    5139/446    25   75   21.00)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 17179870152&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2305843026393564104 := 317 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 3 := 34091302466&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 17179870152&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2305843026393564104 := 317 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 3 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1269 := 317 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1269 := 317 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 3 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 1 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1265&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1265&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1266&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 4294967297266 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 9520&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359747888 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1265&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1266&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359739634 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1265 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1265 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1268 := 316 << 1
(smt.stats   36   4707  82132 129817  4748/4503/185    5278/487    26   80   21.19)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1269 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 632&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 632&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 1 := 632&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 1 := 632&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 358&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 360&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 360&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 364&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 68719477100 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 360&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 362&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 368&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 372&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359738740 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 628&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 628 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 361 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 629 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 4 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 4 := 2544&7
(smt.stats   37   4818  84218 133152  4845/4584/216    5432/516    27   95   21.48)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 4 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 4 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 1 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 2 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 8 := 2553&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2553&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 68719479289 := 319 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2545&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2545&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2545&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2545&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 2545&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 4329327036913 := 319 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 2545&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 68719479281 := 319 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 2609&255
(smt.stats   38   4940  86602 137194  4916/4639/236    5592/523    27   95   21.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 8)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 5 := 2565&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2305843043573434885 := 283 << 3
(smt.stats   39   5074  88805 140869  4953/4710/262    5734/523    27   95   21.67)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 256 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 256 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 272 := 2320&1023
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2320 := 290 << 10
(smt.stats   40   5221  92404 146047  5000/4728/262    5902/555    28  106   21.86)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 240 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 224 := 2304&255
ramon: poll                 wall=4.000s usage=3.988s mem=23128KiB load=1.00 rootload=0.99
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 128 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2304&255
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2304 := 288 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 32 := 2080&255
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2080 := 288 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 32 := 2080&255
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2080 := 288 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 73728&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 73728&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 73728&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 73728&255
(smt.stats   41   5382  95826 151778  5193/4888/310    6218/582    29  112   21.96)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 32 := 73728&255
(smt.stats   42   5559  97953 159727  5223/4981/329    6463/655    30  131   22.15)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 160&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 160 := 107 << 2
(smt.stats   43   5753 103365 171307  5279/5036/332    6769/667    31  136   22.15)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 98 := 98&536870911
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 98 := 134 << 29
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 98 := 102&536870911
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 98 := 98&536870911
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359738466 := 134 << 29
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 98 := 98&536870911
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359738466 := 134 << 29
(smt.stats   44   5966 108540 183239  5358/5050/334    7154/713    32  141   22.35)
(smt.stats   45   6067 110873 189047  5437/5146/346    7406/786    33  155   22.45)
(smt.stats   46   6178 114920 200134  5479/5232/349    7506/827    34  172   22.71)
(smt.stats   47   6300 118633 208421  5494/5243/349    7720/827    34  172   22.71)
ramon: poll                 wall=5.000s usage=4.987s mem=24224KiB load=1.00 rootload=0.99
(smt.stats   48   6434 121415 215997  5555/5296/349    7909/855    35  176   22.93)
(smt.stats   49   6581 124637 223914  5632/5330/352    8336/946    36  185   23.02)
(smt.stats   50   6742 127463 233062  5841/5442/355    8630/955    36  185   23.21)
ramon: poll                 wall=6.000s usage=5.986s mem=24556KiB load=1.00 rootload=1.00
(smt.stats   51   6919 130836 243657  5989/5731/356    8954/1056    37  199   23.51)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7113 134240 255201  6148/5890/358    9488/1060    37  199   23.60)
(smt.stats   53   7326 140083 275330  6331/5898/358    9912/1068    37  199   23.79)
ramon: poll                 wall=7.002s usage=6.988s mem=25112KiB load=1.00 rootload=1.00
(smt.stats   54   7560 146507 303504  6550/6104/358   10666/1195    38  203   23.89)
(smt.stats   55   7661 148967 313136  6611/6298/362   10850/1403    39  211   23.89)
(smt.stats   56   7772 150965 320275  6718/6402/362   10997/1404    39  211   23.99)
ramon: poll                 wall=8.000s usage=7.985s mem=25364KiB load=1.00 rootload=0.99
(smt.stats   57   7894 153996 328489  6837/6474/362   11297/1407    39  211   24.08)
(smt.stats   58   8028 156193 342393  6888/6630/365   11833/1441    40  216   24.08)
(smt.stats   59   8175 160760 365392  6946/6677/365   12135/1441    40  216   24.18)
(smt.stats   60   8336 170923 403481  6953/6684/365   12427/1592    41  255   24.18)
ramon: poll                 wall=9.000s usage=8.985s mem=25624KiB load=1.00 rootload=1.00
(smt.stats   61   8513 177898 430426  6967/6698/366   13242/1642    42  264   24.30)
(smt.stats   62   8707 185680 462960  6995/6711/366   13625/1643    42  264   24.39)
(smt.stats   63   8920 193875 492522  7103/6804/367   14103/1701    43  264   24.39)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 211 := 34359738367&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 211 := 34359738367&8589934591
(smt.stats   64   9154 201393 521900  7166/6838/368   14641/1779    44  267   24.49)
(smt.stats   65   9411 209094 547998  7208/6914/368   15077/1780    44  267   24.58)
(smt.stats   66   9512 211847 558974  7315/6947/368   15305/1785    44  267   24.58)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9223 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9231 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9247 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9247 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9791 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9791 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10367 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10367 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10495 := 34359738367&17179869183
(smt.stats   67   9623 214464 570008  7475/7047/368   15575/1788    44  267   24.78)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 12287 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 12287 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 12287 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 12287 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 14335 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 14335 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 14335 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16383 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16383 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 14335 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16383 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16383 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 51199 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 53247 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134096895 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134098943 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134094847 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134094847 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 114687 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 90111 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134152191 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134152191 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134152191 := 34359738367&17179869183
(smt.stats   68   9745 217023 593894  7717/7389/505   16004/1872    45  272   25.17)
ramon: poll                 wall=10.000s usage=9.984s mem=26536KiB load=1.00 rootload=1.00
(smt.stats   69   9879 218482 605085  7910/7462/505   16200/1971    46  300   25.36)
(smt.delete-inactive-clauses  :num-deleted-clauses 142)
(smt.stats   70  10026 220687 616223  8384/7966/505   16465/1972    46  300   25.36)
(smt.stats   71  10187 221212 618362  8434/8153/505   16673/1973    46  300   25.70)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10364 221619 620750  8999/8608/505   16902/1974    46  300   25.79)
(smt.stats   73  10558 222773 624749  9298/8961/505   17244/1974    46  300   26.03)
ramon: poll                 wall=11.000s usage=10.984s mem=27480KiB load=1.00 rootload=1.00
(smt.stats   74  10771 223245 625908  9659/9377/505   17529/1974    46  300   26.32)
(smt.stats   75  11005 223931 629170 10448/10003/505   17896/1974    46  300   26.60)
(smt.stats   76  11262 224511 630930 10950/10626/505   18229/1974    46  300   26.85)
ramon: poll                 wall=12.000s usage=11.984s mem=28476KiB load=1.00 rootload=1.00
(smt.stats   77  11544 226645 637517 11978/11323/505   18633/1975    46  300   26.94)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11645 226929 638727 12183/11910/505   18748/1975    46  300   27.04)
(smt.stats   79  11756 228194 643065 12669/12228/505   18881/1975    46  300   27.15)
(smt.stats   80  11878 228717 644833 12745/12468/505   19089/1975    46  300   27.26)
(smt.stats   81  12012 229020 646581 13122/12809/505   19301/1975    46  300   27.39)
(smt.stats   82  12159 229352 648191 13463/13169/505   19465/1975    46  300   27.58)
ramon: poll                 wall=13.000s usage=12.983s mem=29088KiB load=1.00 rootload=1.00
(smt.stats   83  12320 230049 651481 14032/13601/505   19639/1975    46  300   27.86)
(smt.stats   84  12497 230456 653061 14285/14012/505   19821/1975    46  300   27.96)
(smt.stats   85  12691 237324 682901 15006/14543/505   21788/1980    46  300   28.15)
ramon: poll                 wall=14.000s usage=13.983s mem=29704KiB load=1.00 rootload=1.00
(smt.stats   86  12904 242866 774117 15364/14789/506   22824/3061    47  304   28.34)
(smt.stats   87  13138 252241 813898 15458/15139/506   24102/3064    47  304   28.43)
ramon: poll                 wall=15.000s usage=14.983s mem=30088KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.980s mem=30692KiB load=1.00 rootload=0.99
(smt.stats   88  13395 264209 989828 15823/15195/506   26419/3074    47  304   29.23)
ramon: poll                 wall=17.000s usage=16.978s mem=31100KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   89  13677 276014 1102225 16135/15625/506   28267/3081    47  304   29.64)
ramon: poll                 wall=18.000s usage=17.977s mem=31312KiB load=1.00 rootload=1.00
(smt.stats   90  13987 286683 1227435 16434/16161/508   30550/4628    48  314   29.93)
(smt.stats   91  14088 292815 1257960 16522/16227/511   31466/4628    48  314   30.03)
(smt.stats   92  14199 297562 1329027 16532/16235/511   32308/4628    48  314   30.13)
(smt.stats   93  14321 303099 1411405 16674/16239/511   32686/4906    49  377   30.61)
ramon: poll                 wall=19.000s usage=18.976s mem=32184KiB load=1.00 rootload=1.00
(smt.stats   94  14455 307035 1478915 16703/16408/515   33495/4962    50  401   30.71)
(smt.stats   95  14603 311561 1520522 16721/16426/517   34499/4962    50  401   30.80)
(smt.stats   96  14764 320368 1632813 16792/16493/518   36287/5607    52  454   31.09)
ramon: poll                 wall=20.002s usage=19.977s mem=33036KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 14:28:43 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.984s
ramon: group.utime          19.944s
ramon: group.stime          0.040s
ramon: group.mempeak        33296KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
