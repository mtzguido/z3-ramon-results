ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:36:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25302 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Yxb2qbwEoI7G.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             77015
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1154    239  1106/979/119      82/6    12   16   19.00)
(smt.stats    1    202   2804   1047  1259/1096/121     192/8    14   19   19.00)
(smt.stats    2    313   3881   2731  1515/1176/123     303/40    15   19   19.29)
(smt.stats    3    414   4713   4474  1570/1414/125     405/42    17   23   19.29)
(smt.stats    4    525   5943   7168  1622/1473/132     499/60    20   53   19.29)
(smt.stats    5    647   7868   9959  1623/1474/132     620/60    20   53   19.29)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&2
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 42 := 2199023255553 << 1
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&2
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 42 := 2199023255553 << 1
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&2
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 41 := 2199023255553 << 1
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   9121  11540  1636/1477/132     722/60    20   53   19.29)
(smt.stats    7    859   9941  13530  1671/1498/140     838/67    21   54   19.38)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 2 := 2&4398046511101
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 2&4398046511101
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 8796093022205 := 8796093022206 << 41
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 2 := 2&4398046511101
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 1 := 2&4398046511101
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 2&4398046511101
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 8796093022205 := 8796093022206 << 41
(smt.stats    8    981  11448  15802  1689/1535/160     951/71    23   62   19.48)
(smt.stats    9   1115  12956  18034  1759/1555/160    1073/79    24   79   19.48)
(smt.stats   10   1216  14644  19437  1792/1623/163    1172/81    25   82   19.58)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&513
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 4398046511617 := 512 << 19
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&513
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 4398046511617 := 512 << 19
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&513
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 4398046511617 := 512 << 19
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040513 := 512 << 19
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&267386880
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 511 := 255 << 20
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&1048576
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 23 := 1 << 20
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&1048576
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 23 := 1 << 20
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&1048576
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 23 := 1 << 20
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&1048576
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 23 := 1 << 20
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&1048576
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 23 := 1 << 20
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&267386880
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 511 := 255 << 20
(smt.stats   11   1327  15925  21282  1850/1659/175    1282/88    26   83   19.68)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 8796093022208 := 16777216 << 9
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 4398046511104 := 8388608 << 9
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 4398046511104 := 8388608 << 9
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&0
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 33 := 0 << 10
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&0
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 33 := 0 << 10
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&0
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 33 := 0 << 10
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&0
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 33 := 0 << 10
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1449  16714  23006  1914/1721/182    1406/95    27   86   19.77)
(smt.stats   13   1583  18063  26824  1982/1805/191    1526/105    28   94   19.87)
(smt.stats   14   1730  20438  32608  2051/1859/196    1668/113    30  103   20.00)
(smt.stats   15   1831  21282  37008  2143/1936/196    1784/113    30  103   20.00)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 2 := 2&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 4398046511107 := 0 << 41
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 2 := 2&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 4398046511107 := 0 << 41
(smt.stats   16   1942  22238  39265  2174/1943/206    1963/133    31  109   20.20)
(smt.stats   17   2064  24063  42196  2190/1983/213    2052/187    32  138   20.20)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 1 := 1&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 40
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 1 := 1&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 40
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 1 := 1&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 40
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 1 := 1&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 40
(smt.stats   18   2198  27409  49393  2211/1990/213    2199/188    32  138   20.30)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 38
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 38
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 38
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 38
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040511 := 8796093022204 << 38
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 13835075647468208127 := 8796093022204 << 16
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 13194139533311 := 8796093022204 << 16
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 13194139533311 := 8796093022204 << 18
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 8796093022207 := 8796093022204 << 18
(smt.stats   19   2345  30905  53781  2264/2015/218    2353/198    33  139   20.49)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 8796093022207 := 8796093022204 << 18
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 2305843009213693951 := 8796093022204 << 20
ramon: poll                 wall=1.000s usage=0.998s mem=21644KiB load=1.00 rootload=0.99
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 9223372036854775807 := 8796093022204 << 20
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298539077637
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 6917541122273181701 := 6597078155262 << 33
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298538553608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 6917541122272657672 := 6597077107204 << 33
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&4398045462527
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 6917533425686544383 := 6597073960958 << 37
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 1 := 1&3298536980481
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 6917532326178062337 := 6597072912386 << 40
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 1 := 1&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 6917533425687592959 := 6597073960958 << 40
(smt.stats   20   2506  34252  58790  2346/2095/234    2521/209    34  142   20.78)
(smt.stats   21   2607  36751  62074  2462/2184/239    2634/217    35  144   20.78)
(smt.stats   22   2718  39119  67941  2504/2271/239    2753/231    36  144   20.87)
ramon: poll                 wall=2.000s usage=1.995s mem=22096KiB load=1.00 rootload=0.99
(smt.stats   23   2840  41291  70257  2690/2287/240    2895/239    37  148   20.97)
(smt.stats   24   2974  43012  76793  2841/2622/245    3084/276    38  154   20.97)
(smt.stats   25   3121  47869  84171  2854/2631/246    3244/302    39  159   21.15)
(smt.stats   26   3282  53236  95441  2871/2639/246    3412/318    40  160   21.15)
(smt.stats   27   3459  56397 104903  2915/2684/247    3656/321    41  162   21.25)
(smt.stats   28   3560  56983 107290  2955/2722/247    3764/322    41  162   21.25)
ramon: poll                 wall=3.000s usage=2.993s mem=22536KiB load=1.00 rootload=1.00
(smt.stats   29   3671  58860 113420  2999/2730/250    3901/324    41  162   21.34)
(smt.stats   30   3793  60506 119326  3067/2836/255    4031/357    42  165   21.34)
(smt.stats   31   3927  62064 124128  3133/2838/255    4187/368    43  173   21.44)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  63972 129827  3173/2916/255    4367/368    43  173   21.44)
(smt.stats   33   4235  66052 137059  3246/2955/255    4546/368    43  173   21.44)
ramon: poll                 wall=4.000s usage=3.993s mem=22756KiB load=1.00 rootload=1.00
(smt.stats   34   4412  68555 141881  3407/3033/255    4742/369    43  173   21.82)
ramon: poll                 wall=5.002s usage=4.995s mem=23140KiB load=1.00 rootload=1.00
(smt.stats   35   4606  71072 149011  3616/3316/255    5001/378    43  173   21.82)
(smt.stats   36   4707  73207 157931  3715/3433/255    5157/378    43  173   21.82)
(smt.stats   37   4818  75858 164206  3808/3509/259    5320/521    44  175   22.14)
(smt.stats   38   4940  77823 172326  3896/3644/261    5500/557    45  177   22.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  79058 176573  3971/3655/262    5663/606    46  182   22.33)
ramon: poll                 wall=6.000s usage=5.993s mem=23816KiB load=1.00 rootload=1.00
(smt.stats   40   5221  81914 185828  4006/3746/262    5830/610    46  182   22.33)
(smt.stats   41   5382  85828 195288  4027/3769/262    6005/636    47  191   22.43)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3526169198591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432349090396766207 := 0 << 39
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3526169198591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432349090396766207 := 0 << 39
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298535670039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432357658856259863 := 0 << 37
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298535670039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432348862763237655 := 0 << 37
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298535670039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432348862763237655 := 0 << 31
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298535670039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432348862763237655 := 0 << 35
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298535670039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432348862763237655 := 0 << 35
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298535670039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432348862763237655 := 0 << 33
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298535670039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432348862763237655 := 0 << 33
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&3298535670039
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 432348862763237655 := 0 << 31
(smt.stats   42   5559  88293 202748  4121/3795/274    6212/693    48  208   22.62)
(smt.stats   43   5753  93226 215271  4149/3885/299    6535/693    48  208   22.81)
ramon: poll                 wall=7.000s usage=6.992s mem=24428KiB load=1.00 rootload=1.00
(smt.stats   44   5966  99042 226052  4329/3984/299    6786/765    49  213   23.00)
(smt.stats   45   6067 103013 230977  4348/4054/299    6903/768    49  213   23.00)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&258
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040770 := 8787503087618 << 24
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&257
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040769 := 8787503087618 << 24
(smt.stats   46   6178 110148 243980  4360/4065/299    7029/770    49  213   23.00)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&258
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040770 := 8787503087618 << 28
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&257
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 18446739675663040769 := 8787503087618 << 28
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&536870912
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 536870655 := 4393751543809 << 29
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&536870912
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 536870655 := 4393751543809 << 29
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&258
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 258 := 8787503087618 << 29
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&258
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 258 := 8787503087618 << 29
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&258
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 258 := 8787503087618 << 30
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&258
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 258 := 8787503087618 << 30
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&258
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 258 := 8787503087618 << 32
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&257
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 257 := 8787503087618 << 32
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&257
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 257 := 8787503087618 << 32
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&258
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 258 := 8787503087618 << 34
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&261
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 261 := 8787503087618 << 36
(smt.stats   47   6300 114687 253576  4445/4091/304    7145/802    50  214   23.20)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 256 := 8787503087618 << 34
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&34359738368
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 3298538553603 := 4393751543809 << 35
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&34359738368
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 3298538553603 := 4393751543809 << 35
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&34359738368
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 3298538553603 := 4393751543809 << 35
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&34359738368
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 3298538553603 := 4393751543809 << 35
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&34359738368
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 3298538553603 := 4393751543809 << 35
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&34359738368
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 3298538553608 := 4393751543809 << 35
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&34359738368
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 3298539077630 := 4393751543809 << 35
(smt.stats   48   6434 120299 262013  4565/4223/339    7278/811    50  214   23.30)
(smt.stats   49   6581 124678 269393  4627/4286/345    7447/815    51  222   23.58)
band: (band[42] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #813)) (shl[64] (* 2 #317) (mod #983 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #975 #979) 64)) 1 := 6940667150336 << 23
ramon: poll                 wall=8.000s usage=7.992s mem=25032KiB load=1.00 rootload=1.00
(smt.stats   50   6742 131785 282660  4752/4340/345    7649/818    51  222   23.58)
(smt.stats   51   6919 138171 298586  4919/4621/359    7904/892    53  242   23.78)
ramon: poll                 wall=9.006s usage=8.997s mem=25568KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 143778 314052  4991/4677/363    8131/955    54  247   24.06)
(smt.stats   53   7326 151057 332860  5074/4712/364    8370/962    54  247   24.06)
ramon: poll                 wall=10.000s usage=9.990s mem=25652KiB load=1.00 rootload=1.00
(smt.stats   54   7560 158841 350049  5277/4792/364    8642/1021    55  249   24.26)
(smt.stats   55   7661 162629 358416  5302/4982/364    8747/1021    55  249   24.26)
(smt.stats   56   7772 165291 366139  5395/5015/364    8866/1022    55  249   24.26)
ramon: poll                 wall=11.002s usage=10.992s mem=25800KiB load=1.00 rootload=1.01
(smt.stats   57   7894 168304 371540  5535/5115/364    9022/1023    55  249   24.26)
(smt.stats   58   8028 171285 383308  5603/5305/366    9184/1068    56  254   24.35)
(smt.stats   59   8175 180454 402172  5610/5312/366    9359/1068    56  254   24.35)
(smt.stats   60   8336 188649 414380  5624/5315/366    9610/1070    56  254   24.54)
ramon: poll                 wall=12.000s usage=11.990s mem=26048KiB load=1.00 rootload=0.99
(smt.stats   61   8513 193602 429117  5646/5335/366    9807/1071    56  254   24.64)
ramon: poll                 wall=13.000s usage=12.989s mem=26168KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 201317 445141  5782/5385/366   10030/1077    56  254   24.64)
(smt.stats   63   8920 209768 473224  5855/5507/366   10266/1083    56  254   24.73)
(smt.stats   64   9154 214227 487200  5874/5557/366   10502/1083    56  254   25.12)
(smt.stats   65   9411 225242 518649  5928/5579/366   10828/1083    56  254   25.22)
ramon: poll                 wall=14.000s usage=13.989s mem=26768KiB load=1.00 rootload=1.00
(smt.stats   66   9512 229556 526201  5946/5648/366   10930/1083    56  254   25.31)
(smt.stats   67   9623 237779 546972  5949/5651/366   11038/1083    56  254   25.31)
(smt.stats   68   9745 248088 591000  5949/5651/366   11160/1083    56  254   25.31)
(smt.stats   69   9879 259717 641574  5949/5651/366   11300/1083    56  254   25.31)
(smt.delete-inactive-clauses  :num-deleted-clauses 930)
(smt.stats   70  10026 266445 658913  5965/5667/366   10531/1083    56  254   25.31)
(smt.stats   71  10187 286451 710703  5966/5668/366   10691/1083    56  254   25.31)
(smt.stats   72  10364 310297 765875  5966/5668/366   10868/1083    56  254   25.31)
ramon: poll                 wall=15.000s usage=14.988s mem=26868KiB load=1.00 rootload=1.00
(smt.stats   73  10558 326116 808166  5969/5671/366   11105/1083    56  254   25.41)
(smt.stats   74  10771 347924 879245  5971/5673/366   11316/1083    56  254   25.41)
ramon: poll                 wall=16.000s usage=15.988s mem=27148KiB load=1.00 rootload=1.00
(smt.stats   75  11005 358304 900545  6057/5675/366   11604/1087    56  254   25.50)
(smt.stats   76  11262 372455 930812  6098/5774/366   11890/1092    56  254   25.60)
ramon: poll                 wall=17.000s usage=16.988s mem=27184KiB load=1.00 rootload=1.00
(smt.stats   77  11544 379643 956545  6161/5829/366   12222/1098    56  254   25.69)
(smt.stats   78  11645 383469 967225  6205/5881/366   12367/1099    56  254   25.69)
(smt.stats   79  11756 386765 979482  6213/5915/366   12496/1099    56  254   25.79)
ramon: poll                 wall=18.000s usage=17.985s mem=27564KiB load=1.00 rootload=0.99
(smt.stats   80  11878 391692 994583  6268/5915/366   12649/1102    56  254   25.79)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   81  12012 395178 1007628  6364/6014/366   12824/1105    56  254   25.88)
(smt.stats   82  12159 400752 1020094  6380/6082/366   13015/1105    56  254   25.88)
ramon: poll                 wall=19.000s usage=18.985s mem=27660KiB load=1.00 rootload=1.00
(smt.stats   83  12320 407489 1032743  6387/6089/367   13180/1481    57  257   25.88)
(smt.stats   84  12497 416010 1069182  6404/6099/367   13377/1483    57  257   25.88)
(smt.stats   85  12691 419643 1082633  6458/6126/369   13596/1487    58  259   25.98)
ramon: poll                 wall=20.000s usage=19.984s mem=27660KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:36:28 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.994s
ramon: group.utime          19.978s
ramon: group.stime          0.016s
ramon: group.mempeak        27916KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
