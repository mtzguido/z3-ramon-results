ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:34:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25421 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YFdB5VVg3Opl.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             73271
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 34359738368 := 22 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 34359738368 := 34359738337 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&126681115
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&126681115
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 58 := 4194303&58
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 58 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 58 := 4194303&58
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 58 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 58 := 4194303&58
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 58 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 4194303 := 4194303&126681115
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&239075329
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 34359738368 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&239075328
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&34229714944
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 34359738337 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&239075328
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&239075328
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 4194296 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4194303 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4194302 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 2 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 1 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 2 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 8 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4194288 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 32 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 64 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 128 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 256 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 512 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 1024 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 2048 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4096 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 8192 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16384 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 32768 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 65536 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 131072 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 262144 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 131072 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 262144 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 524288 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 1048576 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 2097152 := 4194304&4194303
(smt.stats    0    101   2464   1338  1122/1019/182     101/15     8   35   19.75)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 4194296 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 4194288 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1026 := 4194303&4194304
(smt.stats    1    202   3375   2617  1801/1477/198     245/33    10   40   19.84)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 442 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1018 := 4194303&8388608
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 442 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 442 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 410 := 4194303&8388608
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 410 := 4194303&34229714944
(smt.stats    2    313   4982   5324  2060/1693/198     439/36    10   40   20.13)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 41 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 36 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 36 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 36 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 2048 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4096 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 8192 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16384 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 5120 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 5120 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 5120 := 4194304&4194303
(smt.stats    3    414   6491   9611  2189/2029/253     763/83    15   56   20.23)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&222298148
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497509
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497504
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497505
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497505
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&83886113
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&83886009
(smt.stats    4    525   8238  15970  2372/2165/257    1019/206    17   68   20.32)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497505
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&83886113
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&100663329
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&100663329
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&134217761
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&100663329
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&134217761
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&335544369
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&285212705
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&285212705
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&285212705
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&276824049
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&268435489
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 18073490817057 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&268435489
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 18176570032161 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&268435489
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 18176570032161 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&268435489
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 18176570032161 := 4341778 << 28
(smt.stats    5    647  10877  25628  2527/2304/331    1217/346    20   84   20.42)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 4341777 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 4341777 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 4341777 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 4341777 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 8388608 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16777216 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 33554432 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 67108864 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 134217728 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 67108864 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 67108864 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 67108864 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 134217728 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16777216 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 33554432 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16777216 := 4831838208&268435455
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  11599  28191  2674/2414/382    1379/369    21   88   20.72)
(smt.stats    7    859  13708  37322  2857/2637/393    1746/382    22  101   20.91)
(smt.stats    8    981  18471  52897  2877/2683/394    2293/512    23  101   21.01)
(smt.stats    9   1115  25199  70992  2920/2714/398    2636/845    26  114   21.10)
(smt.stats   10   1216  27290  79481  3079/2766/400    2811/852    27  116   21.67)
ramon: poll                 wall=1.000s usage=0.999s mem=23272KiB load=1.00 rootload=0.99
(smt.stats   11   1327  28197  82277  3249/2873/400    2975/868    28  116   21.77)
(smt.stats   12   1449  30379  91514  3310/3104/403    3304/925    29  119   21.77)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1 := 65535&83886081
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 87961014108161 := 4300921 << 16
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1 := 65535&83886081
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 87961014108161 := 4300921 << 16
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1 := 65535&83886081
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 87961014108161 := 4300921 << 16
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   13   1583  32859 103420  3447/3239/409    3529/1013    30  125   21.89)
(smt.stats   14   1730  35559 117213  3697/3342/410    3873/1022    30  125   21.97)
(smt.stats   15   1831  37057 125363  3780/3504/410    4062/1062    31  127   22.26)
ramon: poll                 wall=2.000s usage=1.999s mem=23784KiB load=1.00 rootload=1.00
(smt.stats   16   1942  37533 127631  4009/3666/410    4194/1062    31  127   22.46)
(smt.stats   17   2064  40166 139154  4206/3993/411    4876/1199    32  130   22.36)
(smt.stats   18   2198  45400 156092  4264/4036/411    5236/1200    32  130   22.84)
(smt.stats   19   2345  49834 172060  4514/4289/412    5749/1363    33  130   22.74)
ramon: poll                 wall=3.000s usage=2.999s mem=24296KiB load=1.00 rootload=0.99
(smt.stats   20   2506  53122 178837  4678/4328/412    6578/1367    33  130   22.93)
(smt.stats   21   2607  57695 202362  4711/4470/412    6836/1368    33  130   22.93)
(smt.stats   22   2718  62811 228236  4759/4515/412    7407/1371    33  130   23.03)
(smt.stats   23   2840  66951 235590  4949/4543/412    7646/1375    33  130   23.12)
(smt.stats   24   2974  71029 251948  5218/4987/417    8333/1729    34  133   23.32)
ramon: poll                 wall=4.000s usage=3.999s mem=24808KiB load=1.00 rootload=1.00
(smt.stats   25   3121  77385 295047  5245/4989/418    9004/1921    35  148   23.32)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122727
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122726
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122734
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122814
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122798
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122878
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122814
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122814
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122814
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423123198
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179868174 := 17179869183&17221796462
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179868174 := 17179869183&17221796462
(smt.stats   26   3282  81870 324374  5664/5082/418    9425/2000    36  154   23.61)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092140 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092142 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092398 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092398 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092398 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092398 := 17179869183&17221796270
(smt.stats   27   3459  84719 341848  6148/5912/508   10620/2090    37  164   23.90)
(smt.stats   28   3560  88704 354215  6144/5914/509   11117/2816    38  226   23.99)
(smt.stats   29   3671  95062 393664  6168/5937/509   11617/2816    38  226   24.09)
(smt.stats   30   3793 100398 418314  6219/5977/511   11997/3206    39  230   24.19)
(smt.stats   31   3927 107680 442754  6243/5985/512   12463/3336    40  235   24.40)
ramon: poll                 wall=5.000s usage=4.999s mem=26088KiB load=1.00 rootload=1.00
(smt.stats   32   4074 113464 455683  6331/6065/512   13150/3336    40  235   24.49)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4235 121962 486288  6401/6077/514   13919/3338    40  235   24.69)
(smt.stats   34   4412 131211 525723  6510/6244/521   14795/3785    42  243   24.88)
(smt.stats   35   4606 138398 566695  6549/6267/523   15897/3787    42  243   24.88)
ramon: poll                 wall=6.000s usage=5.998s mem=26600KiB load=1.00 rootload=1.00
(smt.stats   36   4708 141618 583097  6641/6375/524   16258/3939    43  270   24.98)
(smt.stats   37   4819 146426 609147  6649/6377/525   16759/3940    43  270   24.98)
(smt.stats   38   4941 150338 628249  6664/6398/527   17461/4080    44  294   25.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 1004)
(smt.stats   39   5075 155729 651164  6674/6408/530   17026/4080    44  294   25.17)
(smt.stats   40   5222 161159 690633  6744/6415/531   17913/4238    45  342   25.49)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 3 := 1073741823&3573547007
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 3 := 1073741823&3573547007
(smt.stats   41   5383 167169 735687  6928/6621/533   18436/4365    47  385   25.58)
(smt.stats   42   5560 173457 765727  6945/6678/537   19256/4365    47  385   25.58)
ramon: poll                 wall=7.000s usage=6.998s mem=27112KiB load=1.00 rootload=1.00
(smt.stats   43   5754 183186 823120  7179/6687/540   20071/4578    48  436   25.87)
ramon: poll                 wall=8.000s usage=7.998s mem=27368KiB load=1.00 rootload=1.00
(smt.stats   44   5967 190050 857709  7533/6977/540   20653/4656    49  467   25.97)
(smt.stats   45   6068 193918 877329  7567/7289/540   21066/4658    49  467   25.97)
(smt.stats   46   6179 196373 891135  7727/7313/540   21373/4665    49  467   26.12)
(smt.stats   47   6301 196972 894874  8081/7618/540   21581/4667    49  467   26.23)
(smt.stats   48   6435 199049 914320  8654/8000/540   22938/4671    49  467   26.51)
(smt.stats   49   6582 201566 926411  8702/8397/541   24544/5000    50  469   26.71)
ramon: poll                 wall=9.000s usage=8.998s mem=28392KiB load=1.00 rootload=1.00
(smt.stats   50   6743 206814 996143  8731/8461/541   25766/5000    50  469   26.80)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   51   6920 212153 1027395  8753/8481/541   26156/5000    50  469   26.80)
(smt.stats   52   7114 217737 1066178  8810/8537/545   27233/5548    51  474   26.99)
(smt.stats   53   7327 223127 1092511  9112/8706/549   27713/5841    52  552   27.38)
ramon: poll                 wall=10.000s usage=9.997s mem=28904KiB load=1.00 rootload=1.00
(smt.stats   54   7561 229487 1138711  9230/8863/549   28330/5842    52  552   27.48)
(smt.stats   55   7662 236068 1177190  9235/8931/550   28721/5877    53  555   27.57)
(smt.stats   56   7773 243655 1208926  9236/8932/550   28897/5877    53  555   27.57)
(smt.stats   57   7895 249599 1237118  9257/8948/550   29631/5877    53  555   27.76)
(smt.stats   58   8029 253749 1258969  9263/8954/550   30345/5877    53  555   27.86)
ramon: poll                 wall=11.000s usage=10.997s mem=29416KiB load=1.00 rootload=1.00
(smt.stats   59   8176 264354 1318856  9273/8964/550   30625/5877    53  555   27.86)
(smt.stats   60   8337 274923 1396197  9351/8976/550   31139/5882    53  555   28.04)
ramon: poll                 wall=12.003s usage=12.001s mem=29928KiB load=1.00 rootload=1.00
(smt.stats   61   8514 280728 1428136  9434/9068/550   32702/5882    53  555   28.23)
(smt.stats   62   8708 288382 1482575  9566/9131/550   33421/5892    53  555   28.32)
(smt.stats   63   8921 296934 1572782  9812/9362/551   34359/6553    54  557   28.42)
ramon: poll                 wall=13.000s usage=12.997s mem=30440KiB load=1.00 rootload=1.00
(smt.stats   64   9155 307024 1602245  9852/9509/553   34809/6647    55  568   28.70)
(smt.stats   65   9412 325809 1736633  9869/9556/553   35283/6647    55  568   28.70)
(smt.stats   66   9513 328073 1747812  9881/9572/553   35727/6647    55  568   28.70)
(smt.stats   67   9624 331235 1762949  9965/9575/553   35956/6656    55  568   28.79)
(smt.stats   68   9746 333598 1769244 10271/9721/553   36174/6660    55  568   28.89)
ramon: poll                 wall=14.000s usage=13.997s mem=30440KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9880 336869 1795236 10730/10141/553   36775/6665    55  568   28.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 239)
(smt.stats   70  10027 340910 1824885 10808/10443/553   37697/6665    55  568   28.98)
ramon: poll                 wall=15.000s usage=14.997s mem=30952KiB load=1.00 rootload=0.99
(smt.stats   71  10188 348517 1880972 10995/10508/553   38699/6672    55  568   29.18)
(smt.stats   72  10365 356343 1928315 11286/10743/554   39595/7125    56  571   29.46)
(smt.stats   73  10559 362844 1966731 11428/11029/554   40825/7131    56  571   29.56)
ramon: poll                 wall=16.000s usage=15.997s mem=31208KiB load=1.00 rootload=1.00
(smt.stats   74  10772 371844 2070699 11780/11181/556   41893/7249    57  573   29.89)
(smt.stats   75  11006 380383 2150262 12051/11496/556   44088/7259    57  573   30.18)
ramon: poll                 wall=17.000s usage=16.997s mem=31720KiB load=1.00 rootload=1.00
(smt.stats   76  11263 388812 2197446 12268/11785/556   45173/7267    57  573   30.37)
(smt.stats   77  11545 399946 2317460 12323/11998/556   46969/7267    57  573   30.47)
ramon: poll                 wall=18.000s usage=17.997s mem=32232KiB load=1.00 rootload=1.00
(smt.stats   78  11646 404149 2347781 12485/12102/556   47545/7272    57  573   30.66)
(smt.stats   79  11757 406612 2363545 12720/12164/557   47783/8177    58  574   30.75)
(smt.stats   80  11879 409442 2391984 13005/12452/557   48131/8179    58  574   30.85)
ramon: poll                 wall=19.000s usage=18.997s mem=32744KiB load=1.00 rootload=1.00
(smt.stats   81  12013 413335 2419790 13162/12719/557   50330/8179    58  574   31.14)
(smt.stats   82  12160 421444 2500831 13300/12829/557   51569/8180    58  574   31.43)
ramon: poll                 wall=20.000s usage=19.997s mem=33256KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:35:19 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.007s
ramon: group.utime          19.987s
ramon: group.stime          0.020s
ramon: group.mempeak        33256KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
