ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:02:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28880 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ErgAJz2bgME7.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             710399
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   65.7895     10000        49          0            1        2)
(sat.ddfw       1      1    31.059     20001        98          1            1        3)
(smt.stats    0    101   2431    403  1204/991/107     102/17     3   16   51.96)
(sat.ddfw       1      1   36.1664     40001       196          2            1        5)
(smt.stats    1    202   6469   1097  1672/1481/108     202/22     4   18   52.15)
(sat.ddfw       1      1   33.1858     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.918s mem=54240KiB load=0.92 rootload=0.91
(smt.stats    2    313   8690   1691  2113/1891/110     310/37     5   19   52.24)
(sat.ddfw       1      1   29.1121    110001       539          4            1       12)
(smt.stats    3    414   9339   2023  2202/1966/110     415/39     6   20   52.48)
ramon: poll                 wall=2.000s usage=1.838s mem=54552KiB load=0.92 rootload=0.92
(sat.ddfw       1      1   23.4517    160000       784          5            1       17)
(smt.stats    4    525  11041   2922  2416/2148/113     526/41     7   22   52.60)
(smt.stats    5    647  11683   3517  2543/2306/113     655/48     8   23   52.60)
(sat.ddfw       1      1   21.1943    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.800s mem=54720KiB load=0.96 rootload=0.96
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  13430   4278  2740/2498/113     761/48     8   23   52.70)
(sat.ddfw       1      1   18.9548    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.756s mem=54948KiB load=0.96 rootload=0.96
(smt.stats    7    859  13761   4640  2878/2664/113     876/48     8   23   52.89)
(smt.stats    8    981  16109   7695  3341/3169/116    1064/71     9   24   52.89)
(smt.stats    9   1115  20666   9718  3679/3474/118    1190/165    11   26   53.18)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 549755813887&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 549755813887&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 549755813887&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 549755813886&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 4&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 3&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 4&32767
(smt.stats   10   1216  26324  11778  3719/3500/118    1291/166    11   26   53.30)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 4&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 8&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 3&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 4&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 8&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 16&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 16&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 3&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 3&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 3&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 32&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 3&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 4&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 8&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 16&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 64&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 64&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 9 := 11&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 9 := 15&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 9 := 13&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 9&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 8&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 10&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 10&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 10&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 10&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 10&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 10&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 14&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 12&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 31 := 74&32767
(sat.ddfw       1      1   17.1821    370001      1813          8            1       38)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 30 := 74&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 30 := 142&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 46 := 142&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 78 := 142&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 78&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 78&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 78&32767
(smt.stats   11   1327  29454  18256  3853/3631/223    1415/180    14   50   53.70)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 30 := 46&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 46&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 140&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 142&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 142&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 142&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 142&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 142&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 270&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 526&32767
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 14 := 526&32767
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  31168  21953  4065/3651/228    1681/194    15   51   54.08)
ramon: poll                 wall=5.000s usage=4.734s mem=56356KiB load=0.98 rootload=0.97
(smt.stats   13   1583  36317  29182  4147/3903/262    2084/296    17   63   54.27)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 832&3
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 549755814720 := 781 << 2
(smt.stats   14   1730  41245  35860  4169/3948/262    2268/371    18   68   54.41)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 832&3
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 549755814720 := 781 << 2
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 832&3
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 549755814720 := 831 << 2
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 832&3
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 549755814720 := 831 << 2
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 832&3
shl: (shl[39] (bv2int %1) (mod (bv2int %0) 39)) 0 := 208 << 2
(smt.stats   15   1831  44558  41266  4213/3972/270    2401/414    19   70   54.41)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 790 := 789 << 1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
shl: (shl[39] (bv2int %1) (mod (bv2int %0) 39)) 0 := 395 << 1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 790 := 197 << 1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 790 := 396 << 1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
shl: (shl[39] (bv2int %1) (mod (bv2int %0) 39)) 1 := 395 << 1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
shl: (shl[39] (bv2int %1) (mod (bv2int %0) 39)) 1 := 395 << 1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 1 := 790&1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 1 := 790&1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 1 := 790&1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 1 := 790&1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 1 := 790&1
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 790&1
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 1 := 790&1
(smt.stats   16   1942  47637  49480  4301/4081/301    2680/530    22   96   54.51)
(smt.stats   17   2064  50620  55622  4438/4169/307    2876/549    23  118   54.70)
(smt.stats   18   2198  56052  66452  4493/4244/308    3098/608    25  123   54.80)
(sat.ddfw       1      1   15.8144    460001      2254          9            1       47)
(smt.stats   19   2345  59740  73997  4518/4269/311    3344/653    26  126   54.90)
(smt.stats   20   2506  64219  84203  4539/4290/315    3571/698    27  136   55.06)
ramon: poll                 wall=6.000s usage=5.734s mem=57220KiB load=1.00 rootload=1.00
(smt.stats   21   2607  68021  93145  4547/4298/315    3691/698    27  136   55.06)
(smt.stats   22   2718  72238 103063  4550/4301/316    3810/722    29  159   55.15)
(smt.stats   23   2840  78277 119097  4570/4315/318    3995/728    30  175   55.15)
(smt.stats   24   2974  83816 131259  4580/4327/319    4235/777    31  183   55.15)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8 := 10&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 18 := 26&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16 := 26&274877906928
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 26 := 13 << 38
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16 := 26&274877906928
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 26 := 13 << 38
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16 := 26&274877906928
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 26 := 13 << 38
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16 := 26&274877906928
shl: (shl[64] (bv2int %1) (mod (+ #117 #711) 64)) 26 := 8 << 38
(smt.stats   25   3121  87563 138135  4645/4385/325    4458/780    31  183   55.35)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 704 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 640 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 512 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 512 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 512 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 512 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1024 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2048 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 4096 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1024 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2048 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 4096 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8192 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16384 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 32768 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 65536 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 131072 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 262144 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 524288 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1048576 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2097152 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 4194304 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8388608 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16777216 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 33554432 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 67108864 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 134217728 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 268435456 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 536870912 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1073741824 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2147483648 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 4294967296 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8589934592 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 17179869184 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 34359738368 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 68719476736 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 137438953472 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 68719476736 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 137438953472 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 68719476736 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 137438953472 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2097152 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2097152 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2097152 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2097152 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 524288 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 524288 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1048576 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1024 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2048 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 4096 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8192 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16384 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16384 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 1024 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2048 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 2048 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 4096 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 32768 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 65536 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 131072 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 262144 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 262144 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 262144 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 65536 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 131072 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8388608 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 8388608 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 4194304 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16777216 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 67108864 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 134217728 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 268435456 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 536870912 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 268435456 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 536870912 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 536870912 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 134217728 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 16777216 := 274877906944&274877906928
(smt.stats   26   3282  91577 155857  4883/4613/548    4739/867    33  229   56.03)
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 256 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 256 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
shl: (shl[39] (bv2int %1) (mod (bv2int %0) 39)) 14 := 1 << 38
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
shl: (shl[39] (bv2int %1) (mod (bv2int %0) 39)) 274877906926 := 1 << 38
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 14 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 16 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 32 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 64 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 128 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 256 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 512 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 1024 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 2048 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 4096 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 8192 := 274877906944&274877906928
band: (band[39] (shl[64] (bv2int %1) (mod #712 64)) (if (= #726 63) 0 (if #728 1 #875))) 0 := 274877906944&274877906928
band: (band[39] (shl[39] (bv2int %1) (mod #117 39)) (if (= #593 38) 1 (if #595 3 #701))) 16384 := 274877906944&274877906928
(smt.stats   27   3459  92766 160750  5223/4621/553    5098/867    33  229   56.85)
(sat.ddfw       1      1   14.5964    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=6.732s mem=59332KiB load=1.00 rootload=0.99
(smt.stats   28   3560  96811 170204  5264/5007/631    5553/874    34  256   57.16)
(smt.stats   29   3671 101327 189783  5305/5044/632    6503/921    35  303   57.36)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793 105970 209860  5316/5055/632    6847/1406    36  306   57.36)
(smt.stats   31   3927 112133 231156  5352/5081/640    7508/1740    38  327   57.56)
(smt.stats   32   4074 118563 254554  5522/5219/642    8163/1740    38  327   57.87)
(smt.stats   33   4235 125935 285448  5531/5226/642    8585/1994    39  346   57.97)
ramon: poll                 wall=8.000s usage=7.813s mem=60304KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   13.5618    670001      3284         11            1       68)
(smt.stats   34   4412 133272 327086  5631/5304/649    8966/2104    40  363   58.06)
(smt.stats   35   4606 143126 356852  5667/5340/660    9339/2138    41  398   58.58)
(smt.stats   36   4707 147840 372333  5691/5362/663    9450/2161    42  399   58.58)
ramon: poll                 wall=9.000s usage=8.811s mem=60768KiB load=1.00 rootload=1.00
(smt.stats   37   4818 154730 401578  5701/5371/663    9647/2163    42  399   58.68)
(smt.stats   38   4940 159261 418775  5714/5384/663   10383/2191    43  401   58.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 5)
(sat.ddfw       1      1   12.6636    790001      3872         12            1       80)
(smt.stats   39   5074 163486 435855  5717/5390/663   11107/2191    43  401   58.87)
(smt.stats   40   5221 172456 463069  5722/5395/664   11663/2543    44  402   59.11)
ramon: poll                 wall=10.000s usage=9.958s mem=61392KiB load=1.15 rootload=1.14
(smt.stats   41   5382 180865 502551  5730/5403/664   12300/2543    44  402   59.30)
(smt.stats   42   5559 186651 527595  5760/5420/673   12836/2727    45  408   59.40)
(sat.ddfw       1      1   12.1484    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=11.104s mem=61920KiB load=1.15 rootload=1.15
(smt.stats   43   5753 197596 558276  5869/5542/680   13335/3025    46  438   59.59)
(smt.stats   44   5966 207717 593139  5898/5555/681   13583/3058    47  524   60.08)
ramon: poll                 wall=12.000s usage=12.166s mem=62392KiB load=1.06 rootload=1.06
(smt.stats   45   6067 211970 607005  5915/5580/681   13894/3103    48  525   60.18)
(sat.ddfw       1      1   11.3406   1060001      5196         14            1      108)
(smt.stats   46   6178 218306 633472  6027/5599/681   14239/3103    48  525   60.18)
ramon: poll                 wall=13.000s usage=13.164s mem=62312KiB load=1.00 rootload=1.00
(smt.stats   47   6300 226142 662057  6066/5729/683   14572/3236    49  532   60.18)
(smt.stats   48   6434 231458 682598  6143/5757/683   14796/3238    49  532   60.28)
ramon: poll                 wall=14.000s usage=14.163s mem=62616KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.6413   1210001      5931         15            1      123)
(smt.stats   49   6581 239110 697621  6190/5856/684   15123/3339    50  536   60.47)
ramon: poll                 wall=15.000s usage=15.163s mem=63020KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 249412 736689  6210/5877/684   15670/3339    50  536   60.47)
(smt.stats   51   6919 257179 759365  6267/5906/690   16207/3405    51  542   60.66)
(sat.ddfw       1      1    10.094   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=16.282s mem=63276KiB load=1.12 rootload=1.12
(smt.stats   52   7113 266556 786937  6527/6087/690   16650/3411    51  542   60.76)
ramon: poll                 wall=17.002s usage=17.326s mem=63416KiB load=1.04 rootload=1.04
(smt.stats   53   7326 278522 825608  6648/6185/690   16944/3705    52  573   60.85)
(sat.ddfw       1      1   9.64211   1540001      7549         17            1      156)
ramon: poll                 wall=18.000s usage=18.322s mem=63348KiB load=1.00 rootload=1.00
(smt.stats   54   7560 289577 869500  6729/6355/692   17526/3760    53  582   61.04)
(smt.stats   55   7661 296558 906239  6778/6388/692   17691/3760    53  582   61.04)
ramon: poll                 wall=19.000s usage=19.366s mem=63524KiB load=1.04 rootload=1.04
(smt.stats   56   7772 302702 933495  6815/6408/692   17882/3760    53  582   61.04)
(smt.stats   57   7894 309625 958135  6821/6443/695   18194/3862    54  589   61.24)
(smt.stats   58   8028 316370 982117  6833/6449/700   18461/3863    54  589   61.93)
(sat.ddfw       1      1   9.16497   1720001      8431         18            1      174)
ramon: poll                 wall=20.000s usage=20.474s mem=64204KiB load=1.11 rootload=1.11
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   59   8175 329073 1036132  6868/6464/700   19011/3863    54  589   62.03)
ramon: end                  Fri Nov  1 22:02:54 2024
ramon: root.execname        z3
ramon: root.utime           20.470s
ramon: root.stime           0.020s
ramon: group.total          20.497s
ramon: group.utime          20.476s
ramon: group.stime          0.020s
ramon: group.mempeak        64208KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.018s
ramon: loadavg              1.02
