ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:28:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31111 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1271
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/32gl4SWdzwxd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4039341
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627773&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1099511627773 := 1099511627774 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627773&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1099511627773 := 1099511627774 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627773&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1099511627773 := 1099511627774 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1 := 2 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 2147483648&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 8589934594 := 8589934593 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1 := 8589934592 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 2147483648&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 8589934594 := 8589934593 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 2147483648&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 8589934594 := 8589934593 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 17179869184&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 17179869193 := 17179869192 << 31
(smt.stats    0    101   2095    865  1106/942/117      81/13     9   23   19.00)
(smt.stats    1    202   2801   1551  1508/1360/119     180/16    11   24   19.19)
(smt.stats    2    313   3669   3726  1639/1473/124     287/20    14   27   19.29)
(smt.stats    3    414   4010   4056  1906/1498/124     393/22    15   28   19.48)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 3 := 3&4
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 2 := 2&4
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 512 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 512 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 1 := 1&4
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 512 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 512 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 8388616 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 8388616 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 8388616 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 8389120 << 39
(smt.stats    4    526   5866   5933  2215/2063/154     466/36    19   55   19.58)
ramon: poll                 wall=1.000s usage=0.999s mem=20760KiB load=1.00 rootload=0.99
(smt.stats    5    648   7143   6753  2372/2078/154     595/40    19   55   19.71)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    749   8776   8421  2493/2277/154     708/52    20   58   19.71)
(smt.stats    7    860  10030  10064  2578/2416/155     820/67    21   59   19.80)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067206606846 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067206606848 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067198710272 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067198710270 << 39
(smt.stats    8    982  11556  11314  2721/2437/155     947/72    21   59   19.80)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627775&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 3298534883327 := 1067173543419 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627775&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 3298534883327 := 1067173543419 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067265818363&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 3266289073915 := 1067198709248 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1034885791742&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067198709759 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1034835460096&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627774 := 1067173543936 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1034835460094&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067173543935 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1034835460094&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1097364144129 := 1067173543935 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 21
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 21
(smt.stats    9   1116  13177  13386  2798/2637/179    1065/93    24   75   19.90)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 20
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 18
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 17
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544436&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544436 := 1067173544433 << 17
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 16
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 14
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 35
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544947&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544947 := 1067173544945 << 34
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544449&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544449 := 1067173544447 << 34
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067198709761&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067198709761 := 1067198709759 << 33
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544947&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544947 := 1067173544945 << 32
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544947&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544947 := 1067173544945 << 29
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544947&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544947 := 1067173544945 << 29
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067198709761&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067198709761 := 1067198709759 << 30
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173545459&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173545459 := 1067173545457 << 24
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173545459&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173545459 := 1067173545457 << 26
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173545459&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173545459 := 1067173545457 << 27
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173545459&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173545459 := 1067173545457 << 27
(smt.stats   10   1217  14993  16545  2924/2665/184    1170/110    24   75   20.40)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 962072681473&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 962072681473 := 962072681471 << 28
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 962072681411&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 962072681411 := 962072681409 << 29
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 962072678339&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 962072678339 := 962072678337 << 29
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 962072678339&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 962072678339 := 962072678337 << 29
(smt.stats   11   1328  16774  18113  3162/2927/264    1275/131    25   93   20.59)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397192066848&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397192066848 := 397192066846 << 28
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397192066848&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397192066848 := 397192066846 << 30
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397192066848&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397192066848 := 397192066846 << 35
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397192066848&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397192066848 := 397192066846 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645246&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645246 := 397158645244 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645245&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645245 := 397158645243 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645245&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645245 := 397158645243 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645245&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645245 := 397158645243 << 33
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645245&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645245 := 397158645243 << 32
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  18575  21011  3251/3066/270    1387/143    27   98   20.68)
ramon: poll                 wall=2.000s usage=1.999s mem=21948KiB load=1.00 rootload=0.99
(smt.stats   13   1584  21492  23622  3292/3082/274    1490/140    28  114   20.68)
(smt.stats   14   1731  25215  27479  3425/3168/276    1624/144    29  119   20.78)
(smt.stats   15   1832  28024  29963  3492/3261/276    1721/148    30  121   20.88)
ramon: poll                 wall=3.000s usage=2.998s mem=22144KiB load=1.00 rootload=1.00
(smt.stats   16   1943  30473  32344  3533/3348/278    1817/148    31  125   20.88)
(smt.stats   17   2065  32862  34532  3565/3352/278    1937/161    32  132   20.88)
(smt.stats   18   2199  37204  41267  3607/3401/279    2064/170    33  132   20.88)
(smt.stats   19   2346  40554  47335  3629/3436/279    2201/170    33  132   20.88)
(smt.stats   20   2507  44651  53171  3646/3460/286    2325/176    35  156   20.97)
(smt.stats   21   2608  49928  59730  3665/3460/286    2430/178    35  156   21.07)
(smt.stats   22   2719  52862  64216  3698/3486/286    2548/179    35  156   21.07)
(smt.stats   23   2841  54707  68253  3715/3529/286    2654/179    35  156   21.07)
(smt.stats   24   2975  56511  71124  3734/3548/289    2766/188    36  159   21.16)
(smt.stats   25   3122  62786  78156  3745/3553/290    2901/190    37  166   21.16)
(smt.stats   26   3283  69207  84127  3770/3584/293    3040/195    38  171   21.16)
(smt.stats   27   3460  71556  87356  3793/3607/299    3226/220    39  183   21.26)
(smt.stats   28   3561  75881  91808  4108/3846/299    3366/220    39  183   21.45)
(smt.stats   29   3672  81010  99372  4183/3855/308    3487/273    40  192   21.65)
ramon: poll                 wall=4.000s usage=3.998s mem=23040KiB load=1.00 rootload=1.00
(smt.stats   30   3794  86874 105769  4210/3946/308    3624/273    40  192   21.74)
(smt.stats   31   3928  92222 115457  4238/3974/310    3784/299    41  196   21.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  96125 122195  4251/3991/311    3931/323    42  197   21.84)
(smt.stats   33   4236 107598 132165  4263/4001/311    4094/324    42  197   21.90)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 996432412672&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 996432412672 := 1095216660509 << 5
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1065151889408&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1065151889408 := 1095216660511 << 5
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1065151889408&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1065151889408 := 1095216660511 << 5
(smt.stats   34   4413 114808 139280  4350/4043/314    4278/352    44  199   22.09)
ramon: poll                 wall=5.000s usage=4.998s mem=23412KiB load=1.00 rootload=0.99
(smt.stats   35   4607 119839 146068  4425/4115/319    4482/356    44  199   22.18)
(smt.stats   36   4708 125411 153642  4435/4168/319    4581/374    45  200   22.18)
(smt.stats   37   4819 136668 166554  4445/4173/319    4697/374    45  200   22.18)
(smt.stats   38   4941 146064 181918  4452/4190/322    4816/383    46  206   22.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 47)
(smt.stats   39   5075 154861 189318  4459/4193/323    4907/383    46  206   22.18)
(smt.stats   40   5222 157957 192625  4603/4199/323    5076/393    47  209   22.28)
ramon: poll                 wall=6.000s usage=5.998s mem=23704KiB load=1.00 rootload=1.00
(smt.stats   41   5383 160214 196564  4851/4366/323    5309/398    47  209   22.47)
ramon: poll                 wall=7.000s usage=6.997s mem=24084KiB load=1.00 rootload=1.00
(smt.stats   42   5560 161356 198937  5124/4635/323    5517/398    47  209   22.66)
ramon: poll                 wall=8.000s usage=7.997s mem=24128KiB load=1.00 rootload=1.00
(smt.stats   43   5754 164140 202804  5637/5110/323    5736/404    47  209   23.04)
ramon: poll                 wall=9.000s usage=8.997s mem=24544KiB load=1.00 rootload=1.00
(smt.stats   44   5967 168299 209094  6058/5491/323    5990/410    47  209   23.14)
(smt.stats   45   6068 170681 214760  6211/5950/342    6125/517    48  219   23.23)
(smt.stats   46   6179 177331 222955  6216/5955/342    6248/517    48  219   23.23)
(smt.stats   47   6301 184556 231109  6279/5958/342    6372/559    49  248   23.33)
(smt.stats   48   6435 188325 237872  6321/6050/342    6531/559    49  248   23.33)
ramon: poll                 wall=10.000s usage=9.997s mem=24876KiB load=1.00 rootload=1.00
(smt.stats   49   6582 191623 244826  6336/6071/342    6723/559    49  248   23.33)
(smt.stats   50   6743 198435 258643  6361/6101/342    6937/559    49  248   23.33)
(smt.stats   51   6920 204866 268370  6368/6108/347    7132/667    50  254   23.33)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7114 214442 291017  6382/6122/348    7371/667    50  254   23.33)
(smt.stats   53   7327 224096 320424  6389/6122/348    7586/726    51  257   23.61)
(smt.stats   54   7561 230363 338731  6403/6137/348    7818/726    51  257   23.61)
ramon: poll                 wall=11.000s usage=10.996s mem=25144KiB load=1.00 rootload=1.00
(smt.stats   55   7662 233679 353505  6407/6144/348    7922/726    51  257   23.71)
(smt.stats   56   7773 239516 371084  6408/6148/348    8034/726    51  257   23.71)
(smt.stats   57   7895 244780 385002  6409/6149/348    8157/726    51  257   23.71)
(smt.stats   58   8029 247468 393342  6413/6153/348    8382/726    51  257   23.71)
(smt.stats   59   8176 253098 405105  6419/6159/348    8568/726    51  257   23.71)
(smt.stats   60   8337 259534 420881  6420/6160/348    8732/726    51  257   23.80)
(smt.stats   61   8514 264828 441789  6464/6173/348    8910/729    51  257   23.80)
ramon: poll                 wall=12.000s usage=11.996s mem=25252KiB load=1.00 rootload=1.00
(smt.stats   62   8708 273527 456993  6519/6214/348    9146/734    51  257   23.80)
(smt.stats   63   8921 281182 481326  6609/6301/348    9377/734    51  257   23.91)
(smt.stats   64   9155 288034 498382  6618/6360/353    9625/922    52  270   24.00)
ramon: poll                 wall=13.000s usage=12.996s mem=25464KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.996s mem=25628KiB load=1.00 rootload=1.00
(smt.stats   65   9412 294687 506340  6893/6362/353    9919/949    52  270   24.10)
(smt.stats   66   9513 298057 511352  6912/6654/353   10011/949    52  270   24.10)
(smt.stats   67   9624 302391 528682  6918/6656/353   10136/949    52  270   24.19)
(smt.stats   68   9746 306741 542050  6946/6678/353   10261/950    52  270   24.19)
(smt.stats   69   9880 310157 551055  6963/6705/353   10385/950    52  270   24.19)
ramon: poll                 wall=15.000s usage=14.995s mem=25668KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10027 314258 561465  6990/6728/369   10525/1006    53  279   24.19)
(smt.stats   71  10188 318998 573485  7014/6754/369   10674/1006    53  279   24.19)
(smt.stats   72  10365 325182 597256  7036/6766/369   10826/998    54  306   24.29)
(smt.stats   73  10559 328874 612005  7040/6783/369   11019/998    54  306   24.29)
(smt.stats   74  10772 332013 620440  7041/6784/369   11236/998    54  306   24.71)
(smt.stats   75  11006 338748 658148  7055/6798/369   11490/998    54  306   24.81)
ramon: poll                 wall=16.000s usage=15.995s mem=26324KiB load=1.00 rootload=1.00
(smt.stats   76  11263 348400 687277  7115/6803/369   11813/1007    54  306   24.81)
(smt.stats   77  11545 354797 710667  7225/6930/369   12121/1022    54  306   24.81)
ramon: poll                 wall=17.000s usage=16.995s mem=26492KiB load=1.00 rootload=1.00
(smt.stats   78  11646 359327 723392  7267/6969/369   12246/1023    54  306   24.90)
(smt.stats   79  11757 360950 730890  7271/7014/369   12366/1023    54  306   24.90)
(smt.stats   80  11879 365627 743961  7317/7026/369   12483/1029    54  306   24.90)
(smt.stats   81  12013 371148 753244  7372/7082/369   12624/1032    54  306   25.00)
ramon: poll                 wall=18.000s usage=17.994s mem=26528KiB load=1.00 rootload=1.00
(smt.stats   82  12160 376220 762636  7542/7283/370   12784/1255    55  322   25.00)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1091257237523&1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1091257237523&1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1091257237523&1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1091257237522&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 17996103727253028882 := 272730423299 << 37
(smt.stats   83  12321 380446 776312  7623/7300/370   12955/1257    55  322   25.09)
(smt.stats   84  12498 385174 789188  7716/7405/380   13147/1268    55  322   25.09)
ramon: poll                 wall=19.004s usage=18.999s mem=26580KiB load=1.00 rootload=1.00
(smt.stats   85  12692 391568 799598  7761/7499/380   13336/1307    56  324   25.09)
(smt.stats   86  12905 396192 815246  7862/7534/380   13538/1333    56  324   25.19)
(smt.stats   87  13139 403524 836374  7918/7625/380   13779/1339    56  324   25.19)
ramon: poll                 wall=20.000s usage=19.994s mem=26724KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:28:51 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.980s
ramon: group.stime          0.020s
ramon: group.mempeak        26984KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
